# Makefile.in generated by automake 1.11.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/libunwind
pkgincludedir = $(includedir)/libunwind
pkglibdir = $(libdir)/libunwind
pkglibexecdir = $(libexecdir)/libunwind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
am__append_1 = run-ptrace-mapper run-ptrace-misc
am__append_2 = test-ptrace
am__append_3 = mapper test-ptrace-misc
am__append_4 = test-setjmp
#am__append_5 = Ltest-cxx-exceptions
am__append_6 = run-coredump-unwind
am__append_7 = crasher test-coredump-unwind
#am__append_8 = run-coredump-unwind-mdi
check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_5) $(am__EXEEXT_6)
XFAIL_TESTS = $(am__EXEEXT_12) $(am__append_10) $(am__append_11)
am__append_9 = Gtest-dyn1 Ltest-dyn1
#am__append_10 = $(XFAIL_TESTS_PTRACE_SINGLESTEP)

# ARM Linux kernel >=2.6.39 removed PTRACE_SINGLESTEP emulation
#am__append_11 = $(XFAIL_TESTS_PTRACE_SINGLESTEP)
noinst_PROGRAMS = $(am__EXEEXT_7) $(am__EXEEXT_10) $(am__EXEEXT_11)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/check-namespace.sh.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES = check-namespace.sh
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = test-proc-info$(EXEEXT) test-static-link$(EXEEXT) \
	test-strerror$(EXEEXT)
am__EXEEXT_2 =  \
	test-ptrace$(EXEEXT)
am__EXEEXT_3 =  \
	test-setjmp$(EXEEXT)
#am__EXEEXT_4 = Ltest-cxx-exceptions$(EXEEXT)
am__EXEEXT_5 = Gtest-bt$(EXEEXT) Ltest-bt$(EXEEXT) \
	Gtest-exc$(EXEEXT) Ltest-exc$(EXEEXT) \
	Gtest-init$(EXEEXT) Ltest-init$(EXEEXT) \
	Gtest-concurrent$(EXEEXT) \
	Ltest-concurrent$(EXEEXT) \
	Gtest-resume-sig$(EXEEXT) \
	Ltest-resume-sig$(EXEEXT) \
	Gtest-resume-sig-rt$(EXEEXT) \
	Ltest-resume-sig-rt$(EXEEXT) \
	Gtest-dyn1$(EXEEXT) Ltest-dyn1$(EXEEXT) \
	Gtest-trace$(EXEEXT) Ltest-trace$(EXEEXT) \
	test-async-sig$(EXEEXT) \
	test-flush-cache$(EXEEXT) \
	test-init-remote$(EXEEXT) test-mem$(EXEEXT) \
	Ltest-varargs$(EXEEXT) \
	Ltest-nomalloc$(EXEEXT) \
	Ltest-nocalloc$(EXEEXT) Lrs-race$(EXEEXT) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
#am__EXEEXT_5 = $(am__EXEEXT_2) $(am__EXEEXT_3) \
#	$(am__EXEEXT_4)
#am__EXEEXT_6 =  \
#	Gia64-test-stack$(EXEEXT) \
#	Lia64-test-stack$(EXEEXT) \
#	Gia64-test-nat$(EXEEXT) \
#	Lia64-test-nat$(EXEEXT) \
#	Gia64-test-rbs$(EXEEXT) \
#	Lia64-test-rbs$(EXEEXT) \
#	Gia64-test-readonly$(EXEEXT) \
#	Lia64-test-readonly$(EXEEXT) \
#	ia64-test-setjmp$(EXEEXT) \
#	ia64-test-sig$(EXEEXT)
am__EXEEXT_7 =
am__EXEEXT_8 = mapper$(EXEEXT) \
	test-ptrace-misc$(EXEEXT)
am__EXEEXT_9 = crasher$(EXEEXT) \
	test-coredump-unwind$(EXEEXT)
am__EXEEXT_10 = forker$(EXEEXT) \
	Gperf-simple$(EXEEXT) Lperf-simple$(EXEEXT) \
	Gperf-trace$(EXEEXT) Lperf-trace$(EXEEXT) \
	$(am__EXEEXT_8) $(am__EXEEXT_9)
#am__EXEEXT_10 = $(am__EXEEXT_7) $(am__EXEEXT_8) \
#	$(am__EXEEXT_9)
##am__EXEEXT_11 = ppc64-test-altivec$(EXEEXT)
#am__EXEEXT_11 =  \
#	ia64-test-dyn1$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_Gia64_test_nat_OBJECTS = Gia64-test-nat.$(OBJEXT) \
	ia64-test-nat-asm.$(OBJEXT)
Gia64_test_nat_OBJECTS = $(am_Gia64_test_nat_OBJECTS)
Gia64_test_nat_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
am_Gia64_test_rbs_OBJECTS = Gia64-test-rbs.$(OBJEXT) \
	ia64-test-rbs-asm.$(OBJEXT)
Gia64_test_rbs_OBJECTS = $(am_Gia64_test_rbs_OBJECTS)
Gia64_test_rbs_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
am_Gia64_test_readonly_OBJECTS = Gia64-test-readonly.$(OBJEXT) \
	ia64-test-readonly-asm.$(OBJEXT)
Gia64_test_readonly_OBJECTS = $(am_Gia64_test_readonly_OBJECTS)
Gia64_test_readonly_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
am_Gia64_test_stack_OBJECTS = Gia64-test-stack.$(OBJEXT) \
	ia64-test-stack-asm.$(OBJEXT)
Gia64_test_stack_OBJECTS = $(am_Gia64_test_stack_OBJECTS)
Gia64_test_stack_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
Gperf_simple_SOURCES = Gperf-simple.c
Gperf_simple_OBJECTS = Gperf-simple.$(OBJEXT)
Gperf_simple_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
Gperf_trace_SOURCES = Gperf-trace.c
Gperf_trace_OBJECTS = Gperf-trace.$(OBJEXT)
Gperf_trace_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
am_Gtest_bt_OBJECTS = Gtest-bt.$(OBJEXT) ident.$(OBJEXT)
Gtest_bt_OBJECTS = $(am_Gtest_bt_OBJECTS)
Gtest_bt_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_concurrent_SOURCES = Gtest-concurrent.c
Gtest_concurrent_OBJECTS = Gtest-concurrent.$(OBJEXT)
Gtest_concurrent_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
am_Gtest_dyn1_OBJECTS = Gtest-dyn1.$(OBJEXT) flush-cache.$(OBJEXT)
Gtest_dyn1_OBJECTS = $(am_Gtest_dyn1_OBJECTS)
Gtest_dyn1_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_exc_SOURCES = Gtest-exc.c
Gtest_exc_OBJECTS = Gtest-exc.$(OBJEXT)
Gtest_exc_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
am_Gtest_init_OBJECTS = Gtest-init.$(OBJEXT)
Gtest_init_OBJECTS = $(am_Gtest_init_OBJECTS)
Gtest_init_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_resume_sig_SOURCES = Gtest-resume-sig.c
Gtest_resume_sig_OBJECTS = Gtest-resume-sig.$(OBJEXT)
Gtest_resume_sig_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_resume_sig_rt_SOURCES = Gtest-resume-sig-rt.c
Gtest_resume_sig_rt_OBJECTS = Gtest-resume-sig-rt.$(OBJEXT)
Gtest_resume_sig_rt_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
am_Gtest_trace_OBJECTS = Gtest-trace.$(OBJEXT) ident.$(OBJEXT)
Gtest_trace_OBJECTS = $(am_Gtest_trace_OBJECTS)
Gtest_trace_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
am_Lia64_test_nat_OBJECTS = Lia64-test-nat.$(OBJEXT) \
	ia64-test-nat-asm.$(OBJEXT)
Lia64_test_nat_OBJECTS = $(am_Lia64_test_nat_OBJECTS)
Lia64_test_nat_DEPENDENCIES = $(LIBUNWIND_local)
am_Lia64_test_rbs_OBJECTS = Lia64-test-rbs.$(OBJEXT) \
	ia64-test-rbs-asm.$(OBJEXT)
Lia64_test_rbs_OBJECTS = $(am_Lia64_test_rbs_OBJECTS)
Lia64_test_rbs_DEPENDENCIES = $(LIBUNWIND_local)
am_Lia64_test_readonly_OBJECTS = Lia64-test-readonly.$(OBJEXT) \
	ia64-test-readonly-asm.$(OBJEXT)
Lia64_test_readonly_OBJECTS = $(am_Lia64_test_readonly_OBJECTS)
Lia64_test_readonly_DEPENDENCIES = $(LIBUNWIND_local)
am_Lia64_test_stack_OBJECTS = Lia64-test-stack.$(OBJEXT) \
	ia64-test-stack-asm.$(OBJEXT)
Lia64_test_stack_OBJECTS = $(am_Lia64_test_stack_OBJECTS)
Lia64_test_stack_DEPENDENCIES = $(LIBUNWIND_local)
Lperf_simple_SOURCES = Lperf-simple.c
Lperf_simple_OBJECTS = Lperf-simple.$(OBJEXT)
Lperf_simple_DEPENDENCIES = $(LIBUNWIND_local)
Lperf_trace_SOURCES = Lperf-trace.c
Lperf_trace_OBJECTS = Lperf-trace.$(OBJEXT)
Lperf_trace_DEPENDENCIES = $(LIBUNWIND_local)
Lrs_race_SOURCES = Lrs-race.c
Lrs_race_OBJECTS = Lrs-race.$(OBJEXT)
Lrs_race_DEPENDENCIES = $(LIBUNWIND_local)
am_Ltest_bt_OBJECTS = Ltest-bt.$(OBJEXT) ident.$(OBJEXT)
Ltest_bt_OBJECTS = $(am_Ltest_bt_OBJECTS)
Ltest_bt_DEPENDENCIES = $(LIBUNWIND_local)
Ltest_concurrent_SOURCES = Ltest-concurrent.c
Ltest_concurrent_OBJECTS = Ltest-concurrent.$(OBJEXT)
Ltest_concurrent_DEPENDENCIES = $(LIBUNWIND_local)
am_Ltest_cxx_exceptions_OBJECTS = Ltest-cxx-exceptions.$(OBJEXT)
Ltest_cxx_exceptions_OBJECTS = $(am_Ltest_cxx_exceptions_OBJECTS)
Ltest_cxx_exceptions_LDADD = $(LDADD)
am_Ltest_dyn1_OBJECTS = Ltest-dyn1.$(OBJEXT) flush-cache.$(OBJEXT)
Ltest_dyn1_OBJECTS = $(am_Ltest_dyn1_OBJECTS)
Ltest_dyn1_DEPENDENCIES = $(LIBUNWIND_local)
Ltest_exc_SOURCES = Ltest-exc.c
Ltest_exc_OBJECTS = Ltest-exc.$(OBJEXT)
Ltest_exc_DEPENDENCIES = $(LIBUNWIND_local)
am_Ltest_init_OBJECTS = Ltest-init.$(OBJEXT)
Ltest_init_OBJECTS = $(am_Ltest_init_OBJECTS)
Ltest_init_DEPENDENCIES = $(LIBUNWIND_local)
am_Ltest_nocalloc_OBJECTS = Ltest-nocalloc.$(OBJEXT)
Ltest_nocalloc_OBJECTS = $(am_Ltest_nocalloc_OBJECTS)
Ltest_nocalloc_DEPENDENCIES = $(LIBUNWIND_local)
am_Ltest_nomalloc_OBJECTS = Ltest-nomalloc.$(OBJEXT)
Ltest_nomalloc_OBJECTS = $(am_Ltest_nomalloc_OBJECTS)
Ltest_nomalloc_DEPENDENCIES = $(LIBUNWIND_local)
Ltest_resume_sig_SOURCES = Ltest-resume-sig.c
Ltest_resume_sig_OBJECTS = Ltest-resume-sig.$(OBJEXT)
Ltest_resume_sig_DEPENDENCIES = $(LIBUNWIND_local)
Ltest_resume_sig_rt_SOURCES = Ltest-resume-sig-rt.c
Ltest_resume_sig_rt_OBJECTS = Ltest-resume-sig-rt.$(OBJEXT)
Ltest_resume_sig_rt_DEPENDENCIES = $(LIBUNWIND_local)
am_Ltest_trace_OBJECTS = Ltest-trace.$(OBJEXT) ident.$(OBJEXT)
Ltest_trace_OBJECTS = $(am_Ltest_trace_OBJECTS)
Ltest_trace_DEPENDENCIES = $(LIBUNWIND_local)
Ltest_varargs_SOURCES = Ltest-varargs.c
Ltest_varargs_OBJECTS = Ltest-varargs.$(OBJEXT)
Ltest_varargs_DEPENDENCIES = $(LIBUNWIND_local)
crasher_SOURCES = crasher.c
crasher_OBJECTS = crasher.$(OBJEXT)
crasher_LDADD = $(LDADD)
forker_SOURCES = forker.c
forker_OBJECTS = forker.$(OBJEXT)
forker_LDADD = $(LDADD)
forker_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(forker_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ia64_test_dyn1_OBJECTS = ia64-test-dyn1.$(OBJEXT) \
	ia64-dyn-asm.$(OBJEXT) flush-cache.$(OBJEXT)
ia64_test_dyn1_OBJECTS = $(am_ia64_test_dyn1_OBJECTS)
ia64_test_dyn1_DEPENDENCIES = $(LIBUNWIND)
ia64_test_setjmp_SOURCES = ia64-test-setjmp.c
ia64_test_setjmp_OBJECTS = ia64-test-setjmp.$(OBJEXT)
ia64_test_setjmp_DEPENDENCIES = $(LIBUNWIND_setjmp)
ia64_test_sig_SOURCES = ia64-test-sig.c
ia64_test_sig_OBJECTS = ia64-test-sig.$(OBJEXT)
ia64_test_sig_DEPENDENCIES = $(LIBUNWIND)
mapper_SOURCES = mapper.c
mapper_OBJECTS = mapper.$(OBJEXT)
mapper_LDADD = $(LDADD)
am_ppc64_test_altivec_OBJECTS = ppc64-test-altivec.$(OBJEXT) \
	ppc64-test-altivec-utils.$(OBJEXT)
ppc64_test_altivec_OBJECTS = $(am_ppc64_test_altivec_OBJECTS)
ppc64_test_altivec_DEPENDENCIES = $(LIBUNWIND)
test_async_sig_SOURCES = test-async-sig.c
test_async_sig_OBJECTS = test-async-sig.$(OBJEXT)
test_async_sig_DEPENDENCIES = $(LIBUNWIND_local)
test_coredump_unwind_SOURCES = test-coredump-unwind.c
test_coredump_unwind_OBJECTS = test-coredump-unwind.$(OBJEXT)
test_coredump_unwind_DEPENDENCIES =  \
	$(LIBUNWIND_coredump) $(LIBUNWIND)
test_flush_cache_SOURCES = test-flush-cache.c
test_flush_cache_OBJECTS = test-flush-cache.$(OBJEXT)
test_flush_cache_DEPENDENCIES = $(LIBUNWIND_local)
test_init_remote_SOURCES = test-init-remote.c
test_init_remote_OBJECTS = test-init-remote.$(OBJEXT)
test_init_remote_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
test_mem_SOURCES = test-mem.c
test_mem_OBJECTS = test-mem.$(OBJEXT)
test_mem_DEPENDENCIES = $(LIBUNWIND) $(LIBUNWIND_local)
test_proc_info_SOURCES = test-proc-info.c
test_proc_info_OBJECTS = test-proc-info.$(OBJEXT)
test_proc_info_DEPENDENCIES = $(LIBUNWIND)
test_ptrace_SOURCES = test-ptrace.c
test_ptrace_OBJECTS = test-ptrace.$(OBJEXT)
test_ptrace_DEPENDENCIES = $(LIBUNWIND_ptrace) $(LIBUNWIND)
am_test_ptrace_misc_OBJECTS = test-ptrace-misc.$(OBJEXT) \
	ident.$(OBJEXT)
test_ptrace_misc_OBJECTS = $(am_test_ptrace_misc_OBJECTS)
test_ptrace_misc_LDADD = $(LDADD)
test_setjmp_SOURCES = test-setjmp.c
test_setjmp_OBJECTS = test-setjmp.$(OBJEXT)
test_setjmp_DEPENDENCIES = $(LIBUNWIND_setjmp)
am_test_static_link_OBJECTS = test-static-link-loc.$(OBJEXT) \
	test-static-link-gen.$(OBJEXT)
test_static_link_OBJECTS = $(am_test_static_link_OBJECTS)
test_static_link_DEPENDENCIES = $(LIBUNWIND)
test_static_link_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(test_static_link_LDFLAGS) $(LDFLAGS) -o $@
test_strerror_SOURCES = test-strerror.c
test_strerror_OBJECTS = test-strerror.$(OBJEXT)
test_strerror_DEPENDENCIES = $(LIBUNWIND)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(Gia64_test_nat_SOURCES) $(Gia64_test_rbs_SOURCES) \
	$(Gia64_test_readonly_SOURCES) $(Gia64_test_stack_SOURCES) \
	Gperf-simple.c Gperf-trace.c $(Gtest_bt_SOURCES) \
	Gtest-concurrent.c $(Gtest_dyn1_SOURCES) Gtest-exc.c \
	$(Gtest_init_SOURCES) Gtest-resume-sig.c Gtest-resume-sig-rt.c \
	$(Gtest_trace_SOURCES) $(Lia64_test_nat_SOURCES) \
	$(Lia64_test_rbs_SOURCES) $(Lia64_test_readonly_SOURCES) \
	$(Lia64_test_stack_SOURCES) Lperf-simple.c Lperf-trace.c \
	Lrs-race.c $(Ltest_bt_SOURCES) Ltest-concurrent.c \
	$(Ltest_cxx_exceptions_SOURCES) $(Ltest_dyn1_SOURCES) \
	Ltest-exc.c $(Ltest_init_SOURCES) $(Ltest_nocalloc_SOURCES) \
	$(Ltest_nomalloc_SOURCES) Ltest-resume-sig.c \
	Ltest-resume-sig-rt.c $(Ltest_trace_SOURCES) Ltest-varargs.c \
	crasher.c forker.c $(ia64_test_dyn1_SOURCES) \
	ia64-test-setjmp.c ia64-test-sig.c mapper.c \
	$(ppc64_test_altivec_SOURCES) test-async-sig.c \
	test-coredump-unwind.c test-flush-cache.c test-init-remote.c \
	test-mem.c test-proc-info.c test-ptrace.c \
	$(test_ptrace_misc_SOURCES) test-setjmp.c \
	$(test_static_link_SOURCES) test-strerror.c
DIST_SOURCES = $(Gia64_test_nat_SOURCES) $(Gia64_test_rbs_SOURCES) \
	$(Gia64_test_readonly_SOURCES) $(Gia64_test_stack_SOURCES) \
	Gperf-simple.c Gperf-trace.c $(Gtest_bt_SOURCES) \
	Gtest-concurrent.c $(Gtest_dyn1_SOURCES) Gtest-exc.c \
	$(Gtest_init_SOURCES) Gtest-resume-sig.c Gtest-resume-sig-rt.c \
	$(Gtest_trace_SOURCES) $(Lia64_test_nat_SOURCES) \
	$(Lia64_test_rbs_SOURCES) $(Lia64_test_readonly_SOURCES) \
	$(Lia64_test_stack_SOURCES) Lperf-simple.c Lperf-trace.c \
	Lrs-race.c $(Ltest_bt_SOURCES) Ltest-concurrent.c \
	$(Ltest_cxx_exceptions_SOURCES) $(Ltest_dyn1_SOURCES) \
	Ltest-exc.c $(Ltest_init_SOURCES) $(Ltest_nocalloc_SOURCES) \
	$(Ltest_nomalloc_SOURCES) Ltest-resume-sig.c \
	Ltest-resume-sig-rt.c $(Ltest_trace_SOURCES) Ltest-varargs.c \
	crasher.c forker.c $(ia64_test_dyn1_SOURCES) \
	ia64-test-setjmp.c ia64-test-sig.c mapper.c \
	$(ppc64_test_altivec_SOURCES) test-async-sig.c \
	test-coredump-unwind.c test-flush-cache.c test-init-remote.c \
	test-mem.c test-proc-info.c test-ptrace.c \
	$(test_ptrace_misc_SOURCES) test-setjmp.c \
	$(test_static_link_SOURCES) test-strerror.c
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
am__EXEEXT_12 = Gtest-dyn1$(EXEEXT) \
	Ltest-dyn1$(EXEEXT)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/pi/rts/lib/libunwind-1.2/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/pi/rts/lib/libunwind-1.2/config/missing --run tar
AR = /home/pi/emsdk-portable/emscripten/1.37.1/emar
ARCH = X86_64
AUTOCONF = ${SHELL} /home/pi/rts/lib/libunwind-1.2/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/pi/rts/lib/libunwind-1.2/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/pi/rts/lib/libunwind-1.2/config/missing --run automake-1.11
AWK = gawk
CC = /home/pi/emsdk-portable/emscripten/1.37.1/emcc
CCAS = /home/pi/emsdk-portable/emscripten/1.37.1/emcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS =   -D_GNU_SOURCE -DNDEBUG
CCDEPMODE = depmode=gcc3
CFLAGS =  -fexceptions -Wall -Wsign-compare
CPP = /home/pi/emsdk-portable/emscripten/1.37.1/emcc -E
CPPFLAGS =  -D_GNU_SOURCE -DNDEBUG
CXX = /home/pi/emsdk-portable/emscripten/1.37.1/em++
CXXCPP = /home/pi/emsdk-portable/emscripten/1.37.1/em++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLIB = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LATEX2MAN = 
LD = /home/pi/emsdk-portable/emscripten/1.37.1/emcc
LDFLAGS = 
LDFLAGS_NOSTARTFILES = -XCClinker -nostartfiles
LDFLAGS_STATIC_LIBCXA = 
LIBCRTS = -lgcc_s
LIBLZMA = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/pi/rts/lib/libunwind-1.2/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /home/pi/emsdk-portable/clang/e1.37.1_64bit/llvm-nm
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libunwind
PACKAGE_BUGREPORT = libunwind-devel@nongnu.org
PACKAGE_NAME = libunwind
PACKAGE_STRING = libunwind 1.2
PACKAGE_TARNAME = libunwind
PACKAGE_VERSION = 1.2
PATH_SEPARATOR = :
PKG_EXTRA = 
PKG_MAINTAINER = libunwind-devel@nongnu.org
PKG_MAJOR = 1
PKG_MINOR = 2
RANLIB = /home/pi/emsdk-portable/emscripten/1.37.1/emranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.2
abs_builddir = /home/pi/rts/lib/libunwind-1.2/tests
abs_srcdir = /home/pi/rts/lib/libunwind-1.2/tests
abs_top_builddir = /home/pi/rts/lib/libunwind-1.2
abs_top_srcdir = /home/pi/rts/lib/libunwind-1.2
ac_ct_CC = /home/pi/emsdk-portable/emscripten/1.37.1/emcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
arch = x86_64
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_arch = x86_64
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_cxx_exceptions = no
enable_debug_frame = no
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pi/rts/lib/libunwind-1.2/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -I$(top_srcdir)/include
EXTRA_DIST = run-ia64-test-dyn1 run-ptrace-mapper run-ptrace-misc	\
		run-check-namespace run-coredump-unwind \
		run-coredump-unwind-mdi check-namespace.sh.in \
		Gtest-nomalloc.c

MAINTAINERCLEANFILES = Makefile.in
noinst_PROGRAMS_common = 
check_PROGRAMS_common = test-proc-info test-static-link \
			test-strerror

check_SCRIPTS_common = run-check-namespace
check_SCRIPTS_cdep = $(am__append_1) \
	$(am__append_6) $(am__append_8)
#check_SCRIPTS_cdep = $(am__append_1) $(am__append_6) \
#	$(am__append_8)
check_PROGRAMS_cdep = Gtest-bt Ltest-bt Gtest-exc \
	Ltest-exc Gtest-init Ltest-init \
	Gtest-concurrent Ltest-concurrent \
	Gtest-resume-sig Ltest-resume-sig \
	Gtest-resume-sig-rt Ltest-resume-sig-rt \
	Gtest-dyn1 Ltest-dyn1 Gtest-trace \
	Ltest-trace test-async-sig test-flush-cache \
	test-init-remote test-mem Ltest-varargs \
	Ltest-nomalloc Ltest-nocalloc Lrs-race \
	$(am__append_2) $(am__append_4) \
	$(am__append_5)
#check_PROGRAMS_cdep = $(am__append_2) \
#	$(am__append_4) $(am__append_5)
noinst_PROGRAMS_cdep = forker Gperf-simple \
	Lperf-simple Gperf-trace Lperf-trace \
	$(am__append_3) $(am__append_7)
#noinst_PROGRAMS_cdep = $(noinst_PROGRAMS_common) \
#	$(am__append_3) $(am__append_7)
LIBUNWIND_local = $(top_builddir)/src/libunwind.la
##noinst_PROGRAMS_arch = ppc64-test-altivec
#noinst_PROGRAMS_arch = ia64-test-dyn1
#check_SCRIPTS_arch = run-ia64-test-dyn1
#check_PROGRAMS_arch = Gia64-test-stack Lia64-test-stack		\
#			Gia64-test-nat Lia64-test-nat			\
#			Gia64-test-rbs Lia64-test-rbs			\
#			Gia64-test-readonly Lia64-test-readonly		\
#			ia64-test-setjmp ia64-test-sig

check_SCRIPTS = $(check_SCRIPTS_common) $(check_SCRIPTS_cdep) \
		$(check_SCRIPTS_arch)

TESTS = $(check_PROGRAMS) $(check_SCRIPTS)

# Use if arch defines but does not support PTRACE_SINGLESTEP
# ptrace request used in the tests.
XFAIL_TESTS_PTRACE_SINGLESTEP = run-ptrace-mapper run-ptrace-misc
Lia64_test_readonly_SOURCES = Lia64-test-readonly.c ia64-test-readonly-asm.S
Gia64_test_readonly_SOURCES = Gia64-test-readonly.c ia64-test-readonly-asm.S
Lia64_test_stack_SOURCES = Lia64-test-stack.c ia64-test-stack-asm.S \
				ia64-test-stack.h

Gia64_test_stack_SOURCES = Gia64-test-stack.c ia64-test-stack-asm.S \
				ia64-test-stack.h

Lia64_test_rbs_SOURCES = Lia64-test-rbs.c ia64-test-rbs-asm.S ia64-test-rbs.h
Gia64_test_rbs_SOURCES = Gia64-test-rbs.c ia64-test-rbs-asm.S ia64-test-rbs.h
Lia64_test_nat_SOURCES = Lia64-test-nat.c ia64-test-nat-asm.S
Gia64_test_nat_SOURCES = Gia64-test-nat.c ia64-test-nat-asm.S
ia64_test_dyn1_SOURCES = ia64-test-dyn1.c ia64-dyn-asm.S flush-cache.S \
				flush-cache.h

ppc64_test_altivec_SOURCES = ppc64-test-altivec.c  ppc64-test-altivec-utils.c
Gtest_init_SOURCES = Gtest-init.cxx
Ltest_init_SOURCES = Ltest-init.cxx
Ltest_cxx_exceptions_SOURCES = Ltest-cxx-exceptions.cxx
Gtest_dyn1_SOURCES = Gtest-dyn1.c flush-cache.S flush-cache.h
Ltest_dyn1_SOURCES = Ltest-dyn1.c flush-cache.S flush-cache.h
test_static_link_SOURCES = test-static-link-loc.c test-static-link-gen.c
test_static_link_LDFLAGS = -static
forker_LDFLAGS = -static
Gtest_bt_SOURCES = Gtest-bt.c ident.c
Ltest_bt_SOURCES = Ltest-bt.c ident.c
test_ptrace_misc_SOURCES = test-ptrace-misc.c ident.c
Ltest_nomalloc_SOURCES = Ltest-nomalloc.c
Ltest_nocalloc_SOURCES = Ltest-nocalloc.c
Gtest_trace_SOURCES = Gtest-trace.c ident.c
Ltest_trace_SOURCES = Ltest-trace.c ident.c
LIBUNWIND = $(top_builddir)/src/libunwind-$(arch).la
LIBUNWIND_ptrace = $(top_builddir)/src/libunwind-ptrace.la
LIBUNWIND_coredump = $(top_builddir)/src/libunwind-coredump.la
#LIBUNWIND_ELF = $(top_builddir)/src/libunwind-elf32.la
LIBUNWIND_ELF = $(top_builddir)/src/libunwind-elf64.la
#LIBUNWIND_ELF = $(top_builddir)/src/libunwind-elfxx.la
LIBUNWIND_setjmp = $(top_builddir)/src/libunwind-setjmp.la	\
		   $(LIBUNWIND_ELF) $(LIBUNWIND)

test_async_sig_LDADD = $(LIBUNWIND_local) -lpthread
test_flush_cache_LDADD = $(LIBUNWIND_local)
test_init_remote_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
test_mem_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
test_ptrace_LDADD = $(LIBUNWIND_ptrace) $(LIBUNWIND)
test_proc_info_LDADD = $(LIBUNWIND)
test_static_link_LDADD = $(LIBUNWIND)
test_strerror_LDADD = $(LIBUNWIND)
Lrs_race_LDADD = $(LIBUNWIND_local) -lpthread
Ltest_varargs_LDADD = $(LIBUNWIND_local)
Gtest_bt_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_concurrent_LDADD = $(LIBUNWIND) $(LIBUNWIND_local) -lpthread
Gtest_dyn1_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_exc_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_init_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_resume_sig_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_resume_sig_rt_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gperf_simple_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gtest_trace_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gperf_trace_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Ltest_bt_LDADD = $(LIBUNWIND_local)
Ltest_concurrent_LDADD = $(LIBUNWIND_local) -lpthread
Ltest_dyn1_LDADD = $(LIBUNWIND_local)
Ltest_exc_LDADD = $(LIBUNWIND_local)
Ltest_init_LDADD = $(LIBUNWIND_local)
Ltest_nomalloc_LDADD = $(LIBUNWIND_local) 
Ltest_nocalloc_LDADD = $(LIBUNWIND_local)  -lpthread
Ltest_resume_sig_LDADD = $(LIBUNWIND_local)
Ltest_resume_sig_rt_LDADD = $(LIBUNWIND_local)
Lperf_simple_LDADD = $(LIBUNWIND_local)
Ltest_trace_LDADD = $(LIBUNWIND_local)
Lperf_trace_LDADD = $(LIBUNWIND_local)
test_setjmp_LDADD = $(LIBUNWIND_setjmp)
ia64_test_setjmp_LDADD = $(LIBUNWIND_setjmp)
test_coredump_unwind_LDADD = $(LIBUNWIND_coredump) $(LIBUNWIND)
Gia64_test_nat_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gia64_test_stack_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gia64_test_rbs_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Gia64_test_readonly_LDADD = $(LIBUNWIND) $(LIBUNWIND_local)
Lia64_test_nat_LDADD = $(LIBUNWIND_local)
Lia64_test_stack_LDADD = $(LIBUNWIND_local)
Lia64_test_rbs_LDADD = $(LIBUNWIND_local)
Lia64_test_readonly_LDADD = $(LIBUNWIND_local)
ia64_test_dyn1_LDADD = $(LIBUNWIND)
ia64_test_sig_LDADD = $(LIBUNWIND)
ppc64_test_altivec_LDADD = $(LIBUNWIND)
all: all-am

.SUFFIXES:
.SUFFIXES: .S .c .cxx .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
check-namespace.sh: $(top_builddir)/config.status $(srcdir)/check-namespace.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
Gia64-test-nat$(EXEEXT): $(Gia64_test_nat_OBJECTS) $(Gia64_test_nat_DEPENDENCIES) 
	@rm -f Gia64-test-nat$(EXEEXT)
	$(LINK) $(Gia64_test_nat_OBJECTS) $(Gia64_test_nat_LDADD) $(LIBS)
Gia64-test-rbs$(EXEEXT): $(Gia64_test_rbs_OBJECTS) $(Gia64_test_rbs_DEPENDENCIES) 
	@rm -f Gia64-test-rbs$(EXEEXT)
	$(LINK) $(Gia64_test_rbs_OBJECTS) $(Gia64_test_rbs_LDADD) $(LIBS)
Gia64-test-readonly$(EXEEXT): $(Gia64_test_readonly_OBJECTS) $(Gia64_test_readonly_DEPENDENCIES) 
	@rm -f Gia64-test-readonly$(EXEEXT)
	$(LINK) $(Gia64_test_readonly_OBJECTS) $(Gia64_test_readonly_LDADD) $(LIBS)
Gia64-test-stack$(EXEEXT): $(Gia64_test_stack_OBJECTS) $(Gia64_test_stack_DEPENDENCIES) 
	@rm -f Gia64-test-stack$(EXEEXT)
	$(LINK) $(Gia64_test_stack_OBJECTS) $(Gia64_test_stack_LDADD) $(LIBS)
Gperf-simple$(EXEEXT): $(Gperf_simple_OBJECTS) $(Gperf_simple_DEPENDENCIES) 
	@rm -f Gperf-simple$(EXEEXT)
	$(LINK) $(Gperf_simple_OBJECTS) $(Gperf_simple_LDADD) $(LIBS)
Gperf-trace$(EXEEXT): $(Gperf_trace_OBJECTS) $(Gperf_trace_DEPENDENCIES) 
	@rm -f Gperf-trace$(EXEEXT)
	$(LINK) $(Gperf_trace_OBJECTS) $(Gperf_trace_LDADD) $(LIBS)
Gtest-bt$(EXEEXT): $(Gtest_bt_OBJECTS) $(Gtest_bt_DEPENDENCIES) 
	@rm -f Gtest-bt$(EXEEXT)
	$(LINK) $(Gtest_bt_OBJECTS) $(Gtest_bt_LDADD) $(LIBS)
Gtest-concurrent$(EXEEXT): $(Gtest_concurrent_OBJECTS) $(Gtest_concurrent_DEPENDENCIES) 
	@rm -f Gtest-concurrent$(EXEEXT)
	$(LINK) $(Gtest_concurrent_OBJECTS) $(Gtest_concurrent_LDADD) $(LIBS)
Gtest-dyn1$(EXEEXT): $(Gtest_dyn1_OBJECTS) $(Gtest_dyn1_DEPENDENCIES) 
	@rm -f Gtest-dyn1$(EXEEXT)
	$(LINK) $(Gtest_dyn1_OBJECTS) $(Gtest_dyn1_LDADD) $(LIBS)
Gtest-exc$(EXEEXT): $(Gtest_exc_OBJECTS) $(Gtest_exc_DEPENDENCIES) 
	@rm -f Gtest-exc$(EXEEXT)
	$(LINK) $(Gtest_exc_OBJECTS) $(Gtest_exc_LDADD) $(LIBS)
Gtest-init$(EXEEXT): $(Gtest_init_OBJECTS) $(Gtest_init_DEPENDENCIES) 
	@rm -f Gtest-init$(EXEEXT)
	$(CXXLINK) $(Gtest_init_OBJECTS) $(Gtest_init_LDADD) $(LIBS)
Gtest-resume-sig$(EXEEXT): $(Gtest_resume_sig_OBJECTS) $(Gtest_resume_sig_DEPENDENCIES) 
	@rm -f Gtest-resume-sig$(EXEEXT)
	$(LINK) $(Gtest_resume_sig_OBJECTS) $(Gtest_resume_sig_LDADD) $(LIBS)
Gtest-resume-sig-rt$(EXEEXT): $(Gtest_resume_sig_rt_OBJECTS) $(Gtest_resume_sig_rt_DEPENDENCIES) 
	@rm -f Gtest-resume-sig-rt$(EXEEXT)
	$(LINK) $(Gtest_resume_sig_rt_OBJECTS) $(Gtest_resume_sig_rt_LDADD) $(LIBS)
Gtest-trace$(EXEEXT): $(Gtest_trace_OBJECTS) $(Gtest_trace_DEPENDENCIES) 
	@rm -f Gtest-trace$(EXEEXT)
	$(LINK) $(Gtest_trace_OBJECTS) $(Gtest_trace_LDADD) $(LIBS)
Lia64-test-nat$(EXEEXT): $(Lia64_test_nat_OBJECTS) $(Lia64_test_nat_DEPENDENCIES) 
	@rm -f Lia64-test-nat$(EXEEXT)
	$(LINK) $(Lia64_test_nat_OBJECTS) $(Lia64_test_nat_LDADD) $(LIBS)
Lia64-test-rbs$(EXEEXT): $(Lia64_test_rbs_OBJECTS) $(Lia64_test_rbs_DEPENDENCIES) 
	@rm -f Lia64-test-rbs$(EXEEXT)
	$(LINK) $(Lia64_test_rbs_OBJECTS) $(Lia64_test_rbs_LDADD) $(LIBS)
Lia64-test-readonly$(EXEEXT): $(Lia64_test_readonly_OBJECTS) $(Lia64_test_readonly_DEPENDENCIES) 
	@rm -f Lia64-test-readonly$(EXEEXT)
	$(LINK) $(Lia64_test_readonly_OBJECTS) $(Lia64_test_readonly_LDADD) $(LIBS)
Lia64-test-stack$(EXEEXT): $(Lia64_test_stack_OBJECTS) $(Lia64_test_stack_DEPENDENCIES) 
	@rm -f Lia64-test-stack$(EXEEXT)
	$(LINK) $(Lia64_test_stack_OBJECTS) $(Lia64_test_stack_LDADD) $(LIBS)
Lperf-simple$(EXEEXT): $(Lperf_simple_OBJECTS) $(Lperf_simple_DEPENDENCIES) 
	@rm -f Lperf-simple$(EXEEXT)
	$(LINK) $(Lperf_simple_OBJECTS) $(Lperf_simple_LDADD) $(LIBS)
Lperf-trace$(EXEEXT): $(Lperf_trace_OBJECTS) $(Lperf_trace_DEPENDENCIES) 
	@rm -f Lperf-trace$(EXEEXT)
	$(LINK) $(Lperf_trace_OBJECTS) $(Lperf_trace_LDADD) $(LIBS)
Lrs-race$(EXEEXT): $(Lrs_race_OBJECTS) $(Lrs_race_DEPENDENCIES) 
	@rm -f Lrs-race$(EXEEXT)
	$(LINK) $(Lrs_race_OBJECTS) $(Lrs_race_LDADD) $(LIBS)
Ltest-bt$(EXEEXT): $(Ltest_bt_OBJECTS) $(Ltest_bt_DEPENDENCIES) 
	@rm -f Ltest-bt$(EXEEXT)
	$(LINK) $(Ltest_bt_OBJECTS) $(Ltest_bt_LDADD) $(LIBS)
Ltest-concurrent$(EXEEXT): $(Ltest_concurrent_OBJECTS) $(Ltest_concurrent_DEPENDENCIES) 
	@rm -f Ltest-concurrent$(EXEEXT)
	$(LINK) $(Ltest_concurrent_OBJECTS) $(Ltest_concurrent_LDADD) $(LIBS)
Ltest-cxx-exceptions$(EXEEXT): $(Ltest_cxx_exceptions_OBJECTS) $(Ltest_cxx_exceptions_DEPENDENCIES) 
	@rm -f Ltest-cxx-exceptions$(EXEEXT)
	$(CXXLINK) $(Ltest_cxx_exceptions_OBJECTS) $(Ltest_cxx_exceptions_LDADD) $(LIBS)
Ltest-dyn1$(EXEEXT): $(Ltest_dyn1_OBJECTS) $(Ltest_dyn1_DEPENDENCIES) 
	@rm -f Ltest-dyn1$(EXEEXT)
	$(LINK) $(Ltest_dyn1_OBJECTS) $(Ltest_dyn1_LDADD) $(LIBS)
Ltest-exc$(EXEEXT): $(Ltest_exc_OBJECTS) $(Ltest_exc_DEPENDENCIES) 
	@rm -f Ltest-exc$(EXEEXT)
	$(LINK) $(Ltest_exc_OBJECTS) $(Ltest_exc_LDADD) $(LIBS)
Ltest-init$(EXEEXT): $(Ltest_init_OBJECTS) $(Ltest_init_DEPENDENCIES) 
	@rm -f Ltest-init$(EXEEXT)
	$(CXXLINK) $(Ltest_init_OBJECTS) $(Ltest_init_LDADD) $(LIBS)
Ltest-nocalloc$(EXEEXT): $(Ltest_nocalloc_OBJECTS) $(Ltest_nocalloc_DEPENDENCIES) 
	@rm -f Ltest-nocalloc$(EXEEXT)
	$(LINK) $(Ltest_nocalloc_OBJECTS) $(Ltest_nocalloc_LDADD) $(LIBS)
Ltest-nomalloc$(EXEEXT): $(Ltest_nomalloc_OBJECTS) $(Ltest_nomalloc_DEPENDENCIES) 
	@rm -f Ltest-nomalloc$(EXEEXT)
	$(LINK) $(Ltest_nomalloc_OBJECTS) $(Ltest_nomalloc_LDADD) $(LIBS)
Ltest-resume-sig$(EXEEXT): $(Ltest_resume_sig_OBJECTS) $(Ltest_resume_sig_DEPENDENCIES) 
	@rm -f Ltest-resume-sig$(EXEEXT)
	$(LINK) $(Ltest_resume_sig_OBJECTS) $(Ltest_resume_sig_LDADD) $(LIBS)
Ltest-resume-sig-rt$(EXEEXT): $(Ltest_resume_sig_rt_OBJECTS) $(Ltest_resume_sig_rt_DEPENDENCIES) 
	@rm -f Ltest-resume-sig-rt$(EXEEXT)
	$(LINK) $(Ltest_resume_sig_rt_OBJECTS) $(Ltest_resume_sig_rt_LDADD) $(LIBS)
Ltest-trace$(EXEEXT): $(Ltest_trace_OBJECTS) $(Ltest_trace_DEPENDENCIES) 
	@rm -f Ltest-trace$(EXEEXT)
	$(LINK) $(Ltest_trace_OBJECTS) $(Ltest_trace_LDADD) $(LIBS)
Ltest-varargs$(EXEEXT): $(Ltest_varargs_OBJECTS) $(Ltest_varargs_DEPENDENCIES) 
	@rm -f Ltest-varargs$(EXEEXT)
	$(LINK) $(Ltest_varargs_OBJECTS) $(Ltest_varargs_LDADD) $(LIBS)
crasher$(EXEEXT): $(crasher_OBJECTS) $(crasher_DEPENDENCIES) 
	@rm -f crasher$(EXEEXT)
	$(LINK) $(crasher_OBJECTS) $(crasher_LDADD) $(LIBS)
forker$(EXEEXT): $(forker_OBJECTS) $(forker_DEPENDENCIES) 
	@rm -f forker$(EXEEXT)
	$(forker_LINK) $(forker_OBJECTS) $(forker_LDADD) $(LIBS)
ia64-test-dyn1$(EXEEXT): $(ia64_test_dyn1_OBJECTS) $(ia64_test_dyn1_DEPENDENCIES) 
	@rm -f ia64-test-dyn1$(EXEEXT)
	$(LINK) $(ia64_test_dyn1_OBJECTS) $(ia64_test_dyn1_LDADD) $(LIBS)
ia64-test-setjmp$(EXEEXT): $(ia64_test_setjmp_OBJECTS) $(ia64_test_setjmp_DEPENDENCIES) 
	@rm -f ia64-test-setjmp$(EXEEXT)
	$(LINK) $(ia64_test_setjmp_OBJECTS) $(ia64_test_setjmp_LDADD) $(LIBS)
ia64-test-sig$(EXEEXT): $(ia64_test_sig_OBJECTS) $(ia64_test_sig_DEPENDENCIES) 
	@rm -f ia64-test-sig$(EXEEXT)
	$(LINK) $(ia64_test_sig_OBJECTS) $(ia64_test_sig_LDADD) $(LIBS)
mapper$(EXEEXT): $(mapper_OBJECTS) $(mapper_DEPENDENCIES) 
	@rm -f mapper$(EXEEXT)
	$(LINK) $(mapper_OBJECTS) $(mapper_LDADD) $(LIBS)
ppc64-test-altivec$(EXEEXT): $(ppc64_test_altivec_OBJECTS) $(ppc64_test_altivec_DEPENDENCIES) 
	@rm -f ppc64-test-altivec$(EXEEXT)
	$(LINK) $(ppc64_test_altivec_OBJECTS) $(ppc64_test_altivec_LDADD) $(LIBS)
test-async-sig$(EXEEXT): $(test_async_sig_OBJECTS) $(test_async_sig_DEPENDENCIES) 
	@rm -f test-async-sig$(EXEEXT)
	$(LINK) $(test_async_sig_OBJECTS) $(test_async_sig_LDADD) $(LIBS)
test-coredump-unwind$(EXEEXT): $(test_coredump_unwind_OBJECTS) $(test_coredump_unwind_DEPENDENCIES) 
	@rm -f test-coredump-unwind$(EXEEXT)
	$(LINK) $(test_coredump_unwind_OBJECTS) $(test_coredump_unwind_LDADD) $(LIBS)
test-flush-cache$(EXEEXT): $(test_flush_cache_OBJECTS) $(test_flush_cache_DEPENDENCIES) 
	@rm -f test-flush-cache$(EXEEXT)
	$(LINK) $(test_flush_cache_OBJECTS) $(test_flush_cache_LDADD) $(LIBS)
test-init-remote$(EXEEXT): $(test_init_remote_OBJECTS) $(test_init_remote_DEPENDENCIES) 
	@rm -f test-init-remote$(EXEEXT)
	$(LINK) $(test_init_remote_OBJECTS) $(test_init_remote_LDADD) $(LIBS)
test-mem$(EXEEXT): $(test_mem_OBJECTS) $(test_mem_DEPENDENCIES) 
	@rm -f test-mem$(EXEEXT)
	$(LINK) $(test_mem_OBJECTS) $(test_mem_LDADD) $(LIBS)
test-proc-info$(EXEEXT): $(test_proc_info_OBJECTS) $(test_proc_info_DEPENDENCIES) 
	@rm -f test-proc-info$(EXEEXT)
	$(LINK) $(test_proc_info_OBJECTS) $(test_proc_info_LDADD) $(LIBS)
test-ptrace$(EXEEXT): $(test_ptrace_OBJECTS) $(test_ptrace_DEPENDENCIES) 
	@rm -f test-ptrace$(EXEEXT)
	$(LINK) $(test_ptrace_OBJECTS) $(test_ptrace_LDADD) $(LIBS)
test-ptrace-misc$(EXEEXT): $(test_ptrace_misc_OBJECTS) $(test_ptrace_misc_DEPENDENCIES) 
	@rm -f test-ptrace-misc$(EXEEXT)
	$(LINK) $(test_ptrace_misc_OBJECTS) $(test_ptrace_misc_LDADD) $(LIBS)
test-setjmp$(EXEEXT): $(test_setjmp_OBJECTS) $(test_setjmp_DEPENDENCIES) 
	@rm -f test-setjmp$(EXEEXT)
	$(LINK) $(test_setjmp_OBJECTS) $(test_setjmp_LDADD) $(LIBS)
test-static-link$(EXEEXT): $(test_static_link_OBJECTS) $(test_static_link_DEPENDENCIES) 
	@rm -f test-static-link$(EXEEXT)
	$(test_static_link_LINK) $(test_static_link_OBJECTS) $(test_static_link_LDADD) $(LIBS)
test-strerror$(EXEEXT): $(test_strerror_OBJECTS) $(test_strerror_DEPENDENCIES) 
	@rm -f test-strerror$(EXEEXT)
	$(LINK) $(test_strerror_OBJECTS) $(test_strerror_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Gia64-test-nat.Po
include ./$(DEPDIR)/Gia64-test-rbs.Po
include ./$(DEPDIR)/Gia64-test-readonly.Po
include ./$(DEPDIR)/Gia64-test-stack.Po
include ./$(DEPDIR)/Gperf-simple.Po
include ./$(DEPDIR)/Gperf-trace.Po
include ./$(DEPDIR)/Gtest-bt.Po
include ./$(DEPDIR)/Gtest-concurrent.Po
include ./$(DEPDIR)/Gtest-dyn1.Po
include ./$(DEPDIR)/Gtest-exc.Po
include ./$(DEPDIR)/Gtest-init.Po
include ./$(DEPDIR)/Gtest-resume-sig-rt.Po
include ./$(DEPDIR)/Gtest-resume-sig.Po
include ./$(DEPDIR)/Gtest-trace.Po
include ./$(DEPDIR)/Lia64-test-nat.Po
include ./$(DEPDIR)/Lia64-test-rbs.Po
include ./$(DEPDIR)/Lia64-test-readonly.Po
include ./$(DEPDIR)/Lia64-test-stack.Po
include ./$(DEPDIR)/Lperf-simple.Po
include ./$(DEPDIR)/Lperf-trace.Po
include ./$(DEPDIR)/Lrs-race.Po
include ./$(DEPDIR)/Ltest-bt.Po
include ./$(DEPDIR)/Ltest-concurrent.Po
include ./$(DEPDIR)/Ltest-cxx-exceptions.Po
include ./$(DEPDIR)/Ltest-dyn1.Po
include ./$(DEPDIR)/Ltest-exc.Po
include ./$(DEPDIR)/Ltest-init.Po
include ./$(DEPDIR)/Ltest-nocalloc.Po
include ./$(DEPDIR)/Ltest-nomalloc.Po
include ./$(DEPDIR)/Ltest-resume-sig-rt.Po
include ./$(DEPDIR)/Ltest-resume-sig.Po
include ./$(DEPDIR)/Ltest-trace.Po
include ./$(DEPDIR)/Ltest-varargs.Po
include ./$(DEPDIR)/crasher.Po
include ./$(DEPDIR)/flush-cache.Po
include ./$(DEPDIR)/forker.Po
include ./$(DEPDIR)/ia64-dyn-asm.Po
include ./$(DEPDIR)/ia64-test-dyn1.Po
include ./$(DEPDIR)/ia64-test-nat-asm.Po
include ./$(DEPDIR)/ia64-test-rbs-asm.Po
include ./$(DEPDIR)/ia64-test-readonly-asm.Po
include ./$(DEPDIR)/ia64-test-setjmp.Po
include ./$(DEPDIR)/ia64-test-sig.Po
include ./$(DEPDIR)/ia64-test-stack-asm.Po
include ./$(DEPDIR)/ident.Po
include ./$(DEPDIR)/mapper.Po
include ./$(DEPDIR)/ppc64-test-altivec-utils.Po
include ./$(DEPDIR)/ppc64-test-altivec.Po
include ./$(DEPDIR)/test-async-sig.Po
include ./$(DEPDIR)/test-coredump-unwind.Po
include ./$(DEPDIR)/test-flush-cache.Po
include ./$(DEPDIR)/test-init-remote.Po
include ./$(DEPDIR)/test-mem.Po
include ./$(DEPDIR)/test-proc-info.Po
include ./$(DEPDIR)/test-ptrace-misc.Po
include ./$(DEPDIR)/test-ptrace.Po
include ./$(DEPDIR)/test-setjmp.Po
include ./$(DEPDIR)/test-static-link-gen.Po
include ./$(DEPDIR)/test-static-link-loc.Po
include ./$(DEPDIR)/test-strerror.Po

.S.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(LTCPPASCOMPILE) -c -o $@ $<

.c.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cxx.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


#perf:

perf: perf-startup Gperf-simple Lperf-simple Lperf-trace
	@echo "########## Basic performance of generic libunwind:"
	@./Gperf-simple
	@echo "########## Basic performance of local-only libunwind:"
	@./Lperf-simple
	@echo "########## Performance of fast unwind:"
	@./Lperf-trace
	@echo "########## Startup overhead:"
	@$(srcdir)/perf-startup x86_64

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
