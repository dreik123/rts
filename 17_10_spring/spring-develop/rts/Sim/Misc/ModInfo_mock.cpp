// TODO: Substitue CModInfo with your actual class name
void CModInfo::ResetState(){}
void CModInfo::Init(const char * modArchive){}
std::string CModInfo::filename(){}
std::string CModInfo::humanName(){}
std::string CModInfo::humanNameVersioned(){}
std::string CModInfo::shortName(){}
std::string CModInfo::version(){}
std::string CModInfo::mutator(){}
std::string CModInfo::description(){}
bool CModInfo::allowDirectionalPathing(){}
bool CModInfo::allowAircraftToLeaveMap(){}
bool CModInfo::allowAircraftToHitGround(){}
bool CModInfo::allowPushingEnemyUnits(){}
bool CModInfo::allowCrushingAlliedUnits(){}
bool CModInfo::allowUnitCollisionDamage(){}
bool CModInfo::allowUnitCollisionOverlap(){}
bool CModInfo::allowGroundUnitGravity(){}
bool CModInfo::allowHoverUnitStrafing(){}
bool CModInfo::constructionDecay(){}
int CModInfo::constructionDecayTime(){}
float CModInfo::constructionDecaySpeed(){}
int CModInfo::multiReclaim(){}
int CModInfo::reclaimMethod(){}
int CModInfo::reclaimUnitMethod(){}
float CModInfo::reclaimUnitEnergyCostFactor(){}
float CModInfo::reclaimUnitEfficiency(){}
float CModInfo::reclaimFeatureEnergyCostFactor(){}
bool CModInfo::reclaimAllowEnemies(){}
bool CModInfo::reclaimAllowAllies(){}
float CModInfo::repairEnergyCostFactor(){}
float CModInfo::resurrectEnergyCostFactor(){}
float CModInfo::captureEnergyCostFactor(){}
float CModInfo::unitExpMultiplier(){}
float CModInfo::unitExpPowerScale(){}
float CModInfo::unitExpHealthScale(){}
float CModInfo::unitExpReloadScale(){}
bool CModInfo::paralyzeOnMaxHealth(){}
int CModInfo::transportGround(){}
int CModInfo::transportHover(){}
int CModInfo::transportShip(){}
int CModInfo::transportAir(){}
int CModInfo::targetableTransportedUnits(){}
int CModInfo::fireAtKilled(){}
int CModInfo::fireAtCrashing(){}
int CModInfo::flankingBonusModeDefault(){}
int CModInfo::losMipLevel(){}
int CModInfo::airMipLevel(){}
int CModInfo::radarMipLevel(){}
bool CModInfo::requireSonarUnderWater(){}
bool CModInfo::alwaysVisibleOverridesCloaked(){}
bool CModInfo::separateJammers(){}
int CModInfo::featureVisibility(){}
int CModInfo::pathFinderSystem(){}
float CModInfo::pfUpdateRate(){}
bool CModInfo::allowTake(){}
CModInfo CModInfo::modInfo(){}
