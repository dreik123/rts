// TODO: Substitue CColladaHelper with your actual class name
std::string CColladaHelper::mID(){}
Assimp::Collada::TransformType CColladaHelper::mType(){}
ai_real CColladaHelper::f(){}
std::string CColladaHelper::mName(){}
bool CColladaHelper::mOrtho(){}
ai_real CColladaHelper::mHorFov(){}
ai_real CColladaHelper::mVerFov(){}
ai_real CColladaHelper::mAspect(){}
ai_real CColladaHelper::mZNear(){}
ai_real CColladaHelper::mZFar(){}
unsigned int CColladaHelper::mType(){}
aiColor3D CColladaHelper::mColor(){}
ai_real CColladaHelper::mAttConstant(){}
ai_real CColladaHelper::mAttLinear(){}
ai_real CColladaHelper::mAttQuadratic(){}
ai_real CColladaHelper::mFalloffAngle(){}
ai_real CColladaHelper::mFalloffExponent(){}
ai_real CColladaHelper::mPenumbraAngle(){}
ai_real CColladaHelper::mOuterAngle(){}
ai_real CColladaHelper::mIntensity(){}
unsigned int CColladaHelper::mSet(){}
Assimp::Collada::InputType CColladaHelper::mType(){}
std::string CColladaHelper::mMatName(){}
std::map<(std::string,Assimp::Collada::InputSemanticMapEntry)> CColladaHelper::mMap(){}
std::string CColladaHelper::mMeshOrController(){}
std::map<(std::string,Assimp::Collada::SemanticMappingTable)> CColladaHelper::mMaterials(){}
std::string CColladaHelper::mCamera(){}
std::string CColladaHelper::mLight(){}
std::string CColladaHelper::mNode(){}
std::string CColladaHelper::mName(){}
std::string CColladaHelper::mID(){}
std::string CColladaHelper::mSID(){}
Assimp::Collada::Node CColladaHelper::mParent(){}
std::vector<(p.Assimp::Collada::Node)> CColladaHelper::mChildren(){}
std::vector<(Assimp::Collada::Transform)> CColladaHelper::mTransforms(){}
std::vector<(Assimp::Collada::MeshInstance)> CColladaHelper::mMeshes(){}
std::vector<(Assimp::Collada::LightInstance)> CColladaHelper::mLights(){}
std::vector<(Assimp::Collada::CameraInstance)> CColladaHelper::mCameras(){}
std::vector<(Assimp::Collada::NodeInstance)> CColladaHelper::mNodeInstances(){}
std::string CColladaHelper::mPrimaryCamera(){}
bool CColladaHelper::mIsStringArray(){}
std::vector<(ai_real)> CColladaHelper::mValues(){}
std::vector<(std::string)> CColladaHelper::mStrings(){}
size_t CColladaHelper::mCount(){}
size_t CColladaHelper::mSize(){}
size_t CColladaHelper::mOffset(){}
size_t CColladaHelper::mStride(){}
std::vector<(std::string)> CColladaHelper::mParams(){}
size_t CColladaHelper::mSubOffset(){}
std::string CColladaHelper::mSource(){}
q(const).Assimp::Collada::Data CColladaHelper::mData(){}
std::vector<(size_t)> CColladaHelper::mIndices(){}
Assimp::Collada::InputType CColladaHelper::mType(){}
size_t CColladaHelper::mIndex(){}
size_t CColladaHelper::mOffset(){}
std::string CColladaHelper::mAccessor(){}
q(const).Assimp::Collada::Accessor CColladaHelper::mResolved(){}
std::string CColladaHelper::mMaterial(){}
size_t CColladaHelper::mNumFaces(){}
std::string CColladaHelper::mName(){}
std::string CColladaHelper::mVertexID(){}
std::vector<(Assimp::Collada::InputChannel)> CColladaHelper::mPerVertexData(){}
std::vector<(aiVector3D)> CColladaHelper::mPositions(){}
std::vector<(aiVector3D)> CColladaHelper::mNormals(){}
std::vector<(aiVector3D)> CColladaHelper::mTangents(){}
std::vector<(aiVector3D)> CColladaHelper::mBitangents(){}
std::vector<(aiVector3D)> CColladaHelper::mTexCoords(){}
std::vector<(aiColor4D)> CColladaHelper::mColors(){}
unsigned int CColladaHelper::mNumUVComponents(){}
std::vector<(size_t)> CColladaHelper::mFaceSize(){}
std::vector<(size_t)> CColladaHelper::mFacePosIndices(){}
std::vector<(Assimp::Collada::SubMesh)> CColladaHelper::mSubMeshes(){}
std::string CColladaHelper::mMeshId(){}
std::string CColladaHelper::mJointNameSource(){}
ai_real CColladaHelper::mBindShapeMatrix(){}
std::string CColladaHelper::mJointOffsetMatrixSource(){}
Assimp::Collada::InputChannel CColladaHelper::mWeightInputJoints(){}
Assimp::Collada::InputChannel CColladaHelper::mWeightInputWeights(){}
std::vector<(size_t)> CColladaHelper::mWeightCounts(){}
std::vector<(std::pair<(size_t,size_t)>)> CColladaHelper::mWeights(){}
std::string CColladaHelper::mName(){}
std::string CColladaHelper::mEffect(){}
Assimp::Collada::ParamType CColladaHelper::mType(){}
std::string CColladaHelper::mReference(){}
std::string CColladaHelper::mName(){}
bool CColladaHelper::mWrapU(){}
bool CColladaHelper::mWrapV(){}
bool CColladaHelper::mMirrorU(){}
bool CColladaHelper::mMirrorV(){}
aiTextureOp CColladaHelper::mOp(){}
aiUVTransform CColladaHelper::mTransform(){}
std::string CColladaHelper::mUVChannel(){}
unsigned int CColladaHelper::mUVId(){}
ai_real CColladaHelper::mWeighting(){}
ai_real CColladaHelper::mMixWithPrevious(){}
Assimp::Collada::ShadeType CColladaHelper::mShadeType(){}
aiColor4D CColladaHelper::mEmissive(){}
aiColor4D CColladaHelper::mAmbient(){}
aiColor4D CColladaHelper::mDiffuse(){}
aiColor4D CColladaHelper::mSpecular(){}
aiColor4D CColladaHelper::mTransparent(){}
aiColor4D CColladaHelper::mReflective(){}
Assimp::Collada::Sampler CColladaHelper::mTexEmissive(){}
Assimp::Collada::Sampler CColladaHelper::mTexAmbient(){}
Assimp::Collada::Sampler CColladaHelper::mTexDiffuse(){}
Assimp::Collada::Sampler CColladaHelper::mTexSpecular(){}
Assimp::Collada::Sampler CColladaHelper::mTexTransparent(){}
Assimp::Collada::Sampler CColladaHelper::mTexBump(){}
Assimp::Collada::Sampler CColladaHelper::mTexReflective(){}
ai_real CColladaHelper::mShininess(){}
ai_real CColladaHelper::mRefractIndex(){}
ai_real CColladaHelper::mReflectivity(){}
ai_real CColladaHelper::mTransparency(){}
bool CColladaHelper::mHasTransparency(){}
bool CColladaHelper::mRGBTransparency(){}
bool CColladaHelper::mInvertTransparency(){}
std::map<(std::string,Assimp::Collada::EffectParam)> CColladaHelper::ParamLibrary(){}
Assimp::Collada::Effect::ParamLibrary CColladaHelper::mParams(){}
bool CColladaHelper::mDoubleSided(){}
bool CColladaHelper::mWireframe(){}
bool CColladaHelper::mFaceted(){}
std::string CColladaHelper::mFileName(){}
std::vector<(uint8_t)> CColladaHelper::mImageData(){}
std::string CColladaHelper::mEmbeddedFormat(){}
std::string CColladaHelper::mTarget(){}
std::string CColladaHelper::mSourceTimes(){}
std::string CColladaHelper::mSourceValues(){}
std::string CColladaHelper::mName(){}
std::vector<(Assimp::Collada::AnimationChannel)> CColladaHelper::mChannels(){}
std::vector<(p.Assimp::Collada::Animation)> CColladaHelper::mSubAnims(){}
q(const).Assimp::Collada::AnimationChannel CColladaHelper::mChannel(){}
std::string CColladaHelper::mTransformId(){}
size_t CColladaHelper::mTransformIndex(){}
size_t CColladaHelper::mSubElement(){}
q(const).Assimp::Collada::Accessor CColladaHelper::mTimeAccessor(){}
q(const).Assimp::Collada::Data CColladaHelper::mTimeData(){}
q(const).Assimp::Collada::Accessor CColladaHelper::mValueAccessor(){}
q(const).Assimp::Collada::Data CColladaHelper::mValueData(){}
