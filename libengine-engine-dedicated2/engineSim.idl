interface ConfigVariable
{
	//Return type:
	//Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetMetaDataMap();

	//Return type:
	//Type: name: 'ConfigVariableMetaData *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetMetaData();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void OutputMetaDataMap();

};
interface CBaseNetProtocol
{
	//Return type:
	//Type: name: 'CBaseNetProtocol &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Get();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendKeyFrame();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendNewFrame();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendQuit();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendStartPlaying();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendSetPlayerNum();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendPlayerName();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendRandSeed();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendGameID();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendPathCheckSum();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendCommand();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendSelect();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendPause();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendAICommand();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendAIShare();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendUserSpeed();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendInternalSpeed();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendCPUUsage();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendCustomData();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendLuaDrawTime();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendDirectControl();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendDirectControlUpdate();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendAttemptConnect();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendRejectConnect();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendShare();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendSetShare();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendGameOver();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendMapErase();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendMapDrawLine();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendMapDrawPoint();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendSyncResponse();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendSystemMessage();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendStartPos();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendPlayerInfo();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendPlayerLeft();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendLogMsg();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendLuaMsg();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendCurrentFrameProgress();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendPlayerStat();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendTeamStat();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendGiveAwayEverything();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendResign();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendJoinTeam();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendTeamDied();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendAICreated();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendAIStateChanged();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendSetAllied();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendCreateNewPlayer();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long SendClientData();

};
interface CGeometricObjects
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 8
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//long AddSpline();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void DeleteGroup();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 5
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetColor();

	//Return type:
	//Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float3.h', line 24, column 7>
	//Ignored by complex type
	//Argument list sized: 5
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type CalcSpline();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 6
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//long AddLine();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Update();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void MarkSquare();

};
//Ignored by name (typedef needed)
/*interface CArchiveScanner_ArchiveData
{
	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetName();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetNameVersioned();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetShortName();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetVersion();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetMutator();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetGame();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetShortGame();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetDescription();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetMapFile();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetModType();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean GetOnlyLocal();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetInfoItemValueInteger();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetInfoItemValueFloat();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetInfoItemValueBool();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IsValid();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IsEmpty();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IsMap();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IsGame();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IsBase();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IsMenu();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IsReservedKey();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetKeyDescription();

};*/
interface COffscreenGLContext
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void WorkerThreadPost();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void WorkerThreadFree();

};
interface CArchiveScanner
{
	//Return type:
	//Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetFilepath();

	//Return type:
	//Type: name: 'char *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetMapHelperContentName();

	//Return type:
	//Type: name: 'char *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSpringBaseContentName();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetNumScannedArchives();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//unsigned long GetSingleArchiveChecksum();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//unsigned long GetArchiveCompleteChecksum();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'unsigned int &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void CheckArchive();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void ScanArchive();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ScanAllDirs();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Reload();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long ArchiveFromName();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long NameFromArchive();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetArchivePath();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long MapNameToMapFile();

	//Return type:
	//Type: name: 'CArchiveScanner::ArchiveData' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/FileSystem/ArchiveScanner.h', line 44, column 8>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetArchiveData();

	//Return type:
	//Type: name: 'CArchiveScanner::ArchiveData' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/FileSystem/ArchiveScanner.h', line 44, column 8>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetArchiveDataByArchive();

};
interface CRectangularSearchConstraint
{
	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean WithinConstraints();

};
interface CollisionQuery
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CollisionQuery *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void Reset();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean InsideHit();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IngressHit();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean EgressHit();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean AnyHit();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetIngressPos();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetEgressPos();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetHitPos();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetHitPosDist();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetIngressPosDist();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetEgressPosDist();

	//Return type:
	//Type: name: 'LocalModelPiece *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetHitPiece();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'LocalModelPiece *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetHitPiece();

};
interface CCircularSearchConstraint
{
	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean WithinConstraints();

};
interface ConfigVariableTypedMetaData
{
	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDefaultValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetMinimumValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetMaximumValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSafemodeValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetHeadlessValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDedicatedValue();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long Clamp();

};
//Ignored by name (typedef needed)
/*interface CReadMap_IQuadDrawer
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResetState();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void DrawQuad();

};*/
interface CTimeProfiler
{
	//Return type:
	//Type: name: 'CTimeProfiler &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetInstance();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'char *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetPercent();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'char *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetPercentRaw();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResetState();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void ToggleLock();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Update();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void UpdateRaw();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResortProfilesRaw();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void RefreshProfiles();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void RefreshProfilesRaw();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetEnabled();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void PrintProfilingInfo();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 6
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'spring_time' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/Misc/SpringTime.h', line 53, column 8>", 'Ignored by complex type']
	//["Type: name: 'spring_time' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/Misc/SpringTime.h', line 53, column 8>", 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: True kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: True kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: True kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void AddTime();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 5
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'spring_time' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/Misc/SpringTime.h', line 53, column 8>", 'Ignored by complex type']
	//["Type: name: 'spring_time' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/Misc/SpringTime.h', line 53, column 8>", 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: True kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: True kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void AddTimeRaw();

};
interface CGameController
{
	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean Draw();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean Update();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//long KeyPressed();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//long KeyReleased();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//long TextInput();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResizeEvent();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void PasteClipboard();

};
//Ignored by name (typedef needed)
/*interface CPathManager_MultiPath
{
	//Return type:
	//Type: name: 'CPathManager::MultiPath &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'CPathManager::MultiPath &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator=();

	//Return type:
	//Type: name: 'CPathManager::MultiPath &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'CPathManager::MultiPath &&' kind: TypeKind.RVALUEREFERENCE is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator=();

};*/
interface ConfigVariableBuilder
{
	//Return type:
	//Type: name: 'ConfigVariableMetaData *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetData();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'char *const &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type declarationFile();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type declarationLine();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type description();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'bool &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type readOnly();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'T &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type defaultValue();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'T &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type minimumValue();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'T &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type maximumValue();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'T &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type safemodeValue();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'T &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type headlessValue();

	//Return type:
	//Type: name: 'ConfigVariableBuilder<F> &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'T &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type dedicatedValue();

};
interface CNetProtocol
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 5
	//["Type: name: 'char *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void InitClient();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void InitLocalClient();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean CheckTimeout();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void AttemptReconnect();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean NeedsReconnect();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean Connected();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long ConnectionStr();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void DeleteBufferPacketAt();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetPacketTime();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void Send();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'netcode::RawPacket *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void Send();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void UpdateLoop();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Update();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void Close();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void KeepUpdating();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CDemoRecorder *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetDemoRecorder();

	//Return type:
	//Type: name: 'CDemoRecorder *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDemoRecorder();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long GetNumWaitingServerPackets();

};
interface CCollisionHandler
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void PrintStats();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 6
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'CollisionQuery *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean DetectHit();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 7
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CollisionVolume *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'CollisionQuery *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean DetectHit();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 6
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CollisionVolume *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CollisionQuery *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean MouseHit();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 4
	//["Type: name: 'CollisionVolume *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CollisionQuery *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IntersectEllipsoid();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 4
	//["Type: name: 'CollisionVolume *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CollisionQuery *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IntersectCylinder();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 4
	//["Type: name: 'CollisionVolume *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CollisionQuery *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IntersectBox();

};
interface CWorldObject
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
			
	float GetDrawRadius();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetPosition();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetVelocity();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetVelocityAndSpeed();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float SetSpeed();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetRadiusAndHeight();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'S3DModel *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetRadiusAndHeight();

	//Return type:
	//Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float3.h', line 24, column 7>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDrawPos();

	//Return type:
	//Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float3.h', line 24, column 7>
	//Ignored by complex type
	//Argument list sized: 2
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDrawPos();

};
interface CGlobalUnsynced
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResetState();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CGameSetup *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void LoadFromSetup();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: True kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetMyPlayer();

	//Return type:
	//Type: name: 'CPlayer *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetMyPlayer();

};
interface CMyMath
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Init();

};
//Ignored by name (typedef needed)
/*interface CGeometricObjects_GeoGroup
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

};*/
interface CArchiveLoader
{
	//Return type:
	//Type: name: 'CArchiveLoader &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetInstance();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IsArchiveFile();

	//Return type:
	//Type: name: 'IArchive *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type OpenArchive();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'IArchiveFactory *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void AddFactory();

};
interface ConfigHandler
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: True kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: True kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void Instantiate();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Deallocate();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean GetBool();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//long GetInt();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//long GetUnsigned();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetFloat();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean GetBoolSafe();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//long GetIntSafe();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetFloatSafe();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetStringSafe();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetString();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetString();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IsSet();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IsReadOnly();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void Delete();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetConfigFile();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Update();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void EnableWriting();

};
interface CTeam
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResetResourceState();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void SlowUpdate();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'SResourcePack &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean HaveResources();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'SResourcePack' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\Sim/Misc/Resource.h', line 11, column 8>", 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void AddResources();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'SResourcePack &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean UseResources();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void AddMetal();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void AddEnergy();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean UseEnergy();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean UseMetal();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: True kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void GiveEverythingTo();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void Died();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void AddPlayer();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void KillAIs();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void SetDefaultStartPos();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3 *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void ClampStartPosInStartBox();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetMaxUnits();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long GetMaxUnits();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean AtUnitLimit();

	//Return type:
	//Type: name: 'TeamStatistics &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCurrentStats();

	//Return type:
	//Type: name: 'TeamStatistics &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCurrentStats();

	//Return type:
	//Type: name: 'CTeam &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'TeamBase &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator=();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetControllerName();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'CUnit *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CTeam::AddType' kind: TypeKind.ENUM is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\Sim/Misc/Team.h', line 60, column 7>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void AddUnit();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'CUnit *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CTeam::RemoveType' kind: TypeKind.ENUM is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\Sim/Misc/Team.h', line 66, column 7>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void RemoveUnit();

};
interface CMatrix44f
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IsOrthoNormal();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IsIdentity();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type LoadIdentity();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetUpVector();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type RotateX();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type RotateY();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type RotateZ();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 2
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Rotate();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type RotateEulerXYZ();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type RotateEulerYXZ();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type RotateEulerZXY();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type RotateEulerZYX();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 3
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: True kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: True kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: True kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Translate();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Translate();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Scale();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetPos();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetX();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetY();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void SetZ();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetPos();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetPos();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetX();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetY();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetZ();

	//Return type:
	//Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float3.h', line 24, column 7>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetEulerAnglesLftHand();

	//Return type:
	//Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float3.h', line 24, column 7>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetEulerAnglesRgtHand();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: True kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void operator*=();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Transpose();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean InvertInPlace();

	//Return type:
	//Type: name: 'CMatrix44f' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/Matrix44f.h', line 9, column 7>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'bool *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Invert();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type InvertAffineInPlace();

	//Return type:
	//Type: name: 'CMatrix44f' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/Matrix44f.h', line 9, column 7>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type InvertAffine();

	//Return type:
	//Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float3.h', line 24, column 7>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator*();

	//Return type:
	//Type: name: 'float4' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float4.h', line 12, column 8>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float4' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float4.h', line 12, column 8>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator*();

	//Return type:
	//Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float3.h', line 24, column 7>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Mul();

	//Return type:
	//Type: name: 'float4' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float4.h', line 12, column 8>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float4' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float4.h', line 12, column 8>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Mul();

	//Return type:
	//Type: name: 'CMatrix44f' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/Matrix44f.h', line 9, column 7>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator*();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator>>=();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator<<=();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator*=();

	//Return type:
	//Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator+=();

	//Return type:
	//Type: name: 'CMatrix44f' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/Matrix44f.h', line 9, column 7>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'CMatrix44f &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator+();

	//Return type:
	//Type: name: 'float &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator[]();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float operator[]();

};
interface CTeamHandler
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResetState();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CGameSetup *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void LoadFromSetup();

	//Return type:
	//Type: name: 'CTeam *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type Team();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean Ally();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//long AllyTeam();

	//Return type:
	//Type: name: '::AllyTeam &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetAllyTeam();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean ValidAllyTeam();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean AlliedTeams();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean AlliedAllyTeams();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetAllyTeam();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetAlly();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GaiaTeamID();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GaiaAllyTeamID();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long ActiveTeams();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long ActiveAllyTeams();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean IsValidTeam();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean IsActiveTeam();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean IsValidAllyTeam();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//boolean IsActiveAllyTeam();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//unsigned long GetNumTeamsInAllyTeam();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void GameFrame();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void UpdateTeamUnitLimitsPreSpawn();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void UpdateTeamUnitLimitsPreDeath();

};
interface CRectangleOptimizer
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Optimize();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long GetTotalArea();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean empty();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long size();

	//Return type:
	//Type: name: 'SRectangle &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type front();

	//Return type:
	//Type: name: 'SRectangle &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type back();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void pop_front();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void pop_back();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CRectangleOptimizer &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void swap();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'iterator' kind: TypeKind.TYPEDEF is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/Misc/RectangleOptimizer.h', line 41, column 30>", 'Ignored by complex type']
	//["Type: name: 'CRectangleOptimizer &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void splice();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void clear();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'SRectangle &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void push_back();

	//Return type:
	//Type: name: 'const_iterator' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/Misc/RectangleOptimizer.h', line 42, column 36>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type cbegin();

	//Return type:
	//Type: name: 'const_iterator' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/Misc/RectangleOptimizer.h', line 42, column 36>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type cend();

	//Return type:
	//Type: name: 'iterator' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/Misc/RectangleOptimizer.h', line 41, column 30>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type begin();

	//Return type:
	//Type: name: 'iterator' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/Misc/RectangleOptimizer.h', line 41, column 30>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type end();

};
interface ConfigVariableMetaData
{
	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDefaultValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetMinimumValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetMaximumValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSafemodeValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetHeadlessValue();

	//Return type:
	//Type: name: 'StringConvertibleOptionalValue &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDedicatedValue();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long Clamp();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetKey();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetType();

	//Return type:
	//Type: name: 'OptionalString &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDeclarationFile();

	//Return type:
	//Type: name: 'OptionalInt &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDeclarationLine();

	//Return type:
	//Type: name: 'OptionalString &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDescription();

	//Return type:
	//Type: name: 'OptionalInt &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetReadOnly();

};
interface CPathEstimator
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 4
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void MapChanged();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Update();

	//Return type:
	//Type: name: 'IPathFinder *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetParent();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetPathChecksum();

	//Return type:
	//Type: name: 'int2 *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetDirectionVectorsTable();

};
interface CGlobalRNG
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'rng_val_type' kind: TypeKind.TYPEDEF is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/GlobalRNG.h', line 100, column 33>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void Seed();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'rng_val_type' kind: TypeKind.TYPEDEF is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/GlobalRNG.h', line 100, column 33>", 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetSeed();

	//Return type:
	//Type: name: 'rng_val_type' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/GlobalRNG.h', line 100, column 33>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetInitSeed();

	//Return type:
	//Type: name: 'rng_val_type' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/GlobalRNG.h', line 100, column 33>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetLastSeed();

	//Return type:
	//Type: name: 'rng_val_type' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/GlobalRNG.h', line 100, column 33>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetGenState();

	//Return type:
	//Type: name: 'rng_res_type' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/GlobalRNG.h', line 101, column 33>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator()();

	//Return type:
	//Type: name: 'rng_res_type' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/GlobalRNG.h', line 101, column 33>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'rng_res_type' kind: TypeKind.TYPEDEF is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/GlobalRNG.h', line 101, column 33>", 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator()();

};
interface CReadMap
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'CReadMap *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type LoadMap();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long EncodeHeight();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::ISerializer *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void Serialize();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void PostLoad();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int2' kind: TypeKind.TYPEDEF is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/type2.h', line 70, column 24>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void InitHeightMapDigestVectors();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'SRectangle' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/Rectangle.h', line 10, column 8>", 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void UpdateHeightMapSynced();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'SRectangle &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void UpdateLOS();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void BecomeSpectator();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void UpdateDraw();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Update();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void UpdateShadingTexture();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void InitGroundDrawer();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void KillGroundDrawer();

	//Return type:
	//Type: name: 'CBaseGroundDrawer *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetGroundDrawer();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long GetGrassShadingTexture();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long GetMiniMapTexture();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long GetShadingTexture();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//unsigned long GetTexture();

	//Return type:
	//Type: name: 'int2' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/type2.h', line 70, column 24>
	//Ignored by complex type
	//Argument list sized: 2
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetTextureSize();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'MapTextureData &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean SetLuaTexture();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void DrawMinimap();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetNumFeatures();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetNumFeatureTypes();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'MapFeatureInfo *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void GetFeatureInfo();

	//Return type:
	//Type: name: 'char *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetFeatureTypeName();

	//Return type:
	//Type: name: 'unsigned char *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'MapBitmapInfo *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetInfoMap();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'unsigned char *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void FreeInfoMap();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 5
	//["Type: name: 'CCamera *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CReadMap::IQuadDrawer *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void GridVisibility();

	//Return type:
	//Type: name: 'float *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetOriginalHeightMapSynced();

	//Return type:
	//Type: name: 'float *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCenterHeightMapSynced();

	//Return type:
	//Type: name: 'float *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetMIPHeightMapSynced();

	//Return type:
	//Type: name: 'float *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSlopeMapSynced();

	//Return type:
	//Type: name: 'int *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetTypeMapSynced();

	//Return type:
	//Type: name: 'float3 *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCenterNormals2DSynced();

	//Return type:
	//Type: name: 'float3 *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetVisVertexNormalsUnsynced();

	//Return type:
	//Type: name: 'float *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCornerHeightMapSynced();

	//Return type:
	//Type: name: 'float3 *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetFaceNormalsSynced();

	//Return type:
	//Type: name: 'float3 *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCenterNormalsSynced();

	//Return type:
	//Type: name: 'float *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCornerHeightMapUnsynced();

	//Return type:
	//Type: name: 'float3 *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetFaceNormalsUnsynced();

	//Return type:
	//Type: name: 'float3 *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCenterNormalsUnsynced();

	//Return type:
	//Type: name: 'float *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSharedCornerHeightMap();

	//Return type:
	//Type: name: 'float *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSharedCenterHeightMap();

	//Return type:
	//Type: name: 'float3 *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSharedFaceNormals();

	//Return type:
	//Type: name: 'float3 *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSharedCenterNormals();

	//Return type:
	//Type: name: 'float *' kind: TypeKind.POINTER is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSharedSlopeMap();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'int' kind: TypeKind.INT is_const: True kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: True kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: True kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float SetHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: True kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: True kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float AddHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
			
	float GetInitMinHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
			
	float GetCurrMinHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
			
	float GetInitMaxHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
			
	float GetCurrMaxHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
			
	float GetBoundingRadius();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IsUnderWater();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean IsAboveWater();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean HasVisibleWater();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean HasOnlyVoidWater();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long GetMapChecksum();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long CalcHeightmapChecksum();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long CalcTypemapChecksum();

};
interface COffscreenGLThread
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Join();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void join();

};
interface CriticalSection
{
	//Return type:
	//Type: name: 'CriticalSection &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'CriticalSection &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type operator=();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void lock();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean try_lock();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void unlock();

	//Return type:
	//Type: name: 'native_handle_type' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/Platform/Win/CriticalSection.h', line 19, column 23>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type native_handle();

};
interface CLoadScreen
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//void SetLoadMessage();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean Init();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void Kill();

	//Return type:
	//Type: name: 'CLoadScreen *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'ILoadSaveHandler *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void CreateInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void DeleteInstance();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean Draw();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean Update();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResizeEvent();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//long KeyReleased();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//long KeyPressed();

};
interface CMoveMath
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float yLevel();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float yLevel();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetPosSpeedMod();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 4
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetPosSpeedMod();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetPosSpeedMod();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetPosSpeedMod();

	//Return type:
	//Type: name: 'BlockType' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\Sim/MoveTypes/MoveMath/MoveMath.h', line 37, column 43>
	//Ignored by complex type
	//Argument list sized: 3
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type IsBlocked();

	//Return type:
	//Type: name: 'BlockType' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\Sim/MoveTypes/MoveMath/MoveMath.h', line 37, column 43>
	//Ignored by complex type
	//Argument list sized: 4
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type IsBlocked();

	//Return type:
	//Type: name: 'BlockType' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\Sim/MoveTypes/MoveMath/MoveMath.h', line 37, column 43>
	//Ignored by complex type
	//Argument list sized: 4
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type IsBlockedNoSpeedModCheck();

	//Return type:
	//Type: name: 'BlockType' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\Sim/MoveTypes/MoveMath/MoveMath.h', line 37, column 43>
	//Ignored by complex type
	//Argument list sized: 4
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type IsBlockedNoSpeedModCheckThreadUnsafe();

	//Return type:
	//Type: name: 'BlockType' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\Sim/MoveTypes/MoveMath/MoveMath.h', line 37, column 43>
	//Ignored by complex type
	//Argument list sized: 4
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type IsBlockedStructure();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean CrushResistant();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IsNonBlocking();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean IsNonBlocking();

	//Return type:
	//Type: name: 'BlockType' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\Sim/MoveTypes/MoveMath/MoveMath.h', line 37, column 43>
	//Ignored by complex type
	//Argument list sized: 3
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type ObjectBlockType();

	//Return type:
	//Type: name: 'BlockType' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\Sim/MoveTypes/MoveMath/MoveMath.h', line 37, column 43>
	//Ignored by complex type
	//Argument list sized: 4
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type SquareIsBlocked();

	//Return type:
	//Type: name: 'BlockType' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\Sim/MoveTypes/MoveMath/MoveMath.h', line 37, column 43>
	//Ignored by complex type
	//Argument list sized: 3
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type SquareIsBlocked();

	//Return type:
	//Type: name: 'BlockType' kind: TypeKind.TYPEDEF is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\Sim/MoveTypes/MoveMath/MoveMath.h', line 37, column 43>
	//Ignored by complex type
	//Argument list sized: 6
	//["Type: name: 'MoveDef &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type RangeIsBlocked();

};
interface CGroundBlockingObjectMap
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long
	//Source: <SourceLocation file None, line 0, column 0>
			
	unsigned long CalcChecksum();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void AddGroundBlockingObject();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'YardMapStatus &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void AddGroundBlockingObject();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void RemoveGroundBlockingObject();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void OpenBlockingYard();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void CloseBlockingYard();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean CanOpenYard();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean CanCloseYard();

	//Return type:
	//Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 2
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GroundBlocked();

	//Return type:
	//Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GroundBlocked();

	//Return type:
	//Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 1
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GroundBlockedUnsafe();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean GroundBlocked();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean GroundBlocked();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'unsigned int' kind: TypeKind.UINT is_const: False kind: unsigned long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'CSolidObject *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//boolean ObjectInCell();

	//Return type:
	//Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCellUnsafeConst();

	//Return type:
	//Type: name: 'int &' kind: TypeKind.LVALUEREFERENCE is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetCellUnsafe();

};
interface CGround
{
	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetApproximateHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'int' kind: TypeKind.INT is_const: False kind: long", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetApproximateHeightUnsafe();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetHeightAboveWater();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetHeightReal();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetOrigHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetSlope();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 3
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetNormal();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 3
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetNormalAboveWater();

	//Return type:
	//Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float3.h', line 24, column 7>
	//Ignored by complex type
	//Argument list sized: 3
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSmoothNormal();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetApproximateHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetHeightAboveWater();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetHeightReal();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//float GetOrigHeight();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float GetSlope();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetNormal();

	//Return type:
	//Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetNormalAboveWater();

	//Return type:
	//Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type
	//Source: <SourceLocation file 'C:\\Users\\ilyap\\projects-cpp\\spring-104.0.1\\rts\\System/float3.h', line 24, column 7>
	//Ignored by complex type
	//Argument list sized: 2
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetSmoothNormal();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 3
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float LineGroundCol();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 4
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float LineGroundCol();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 4
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float LinePlaneCol();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 5
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: True kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float LineGroundWaterCol();

	//Return type:
	//Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 5
	//["Type: name: 'float3' kind: TypeKind.RECORD is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/float3.h', line 24, column 7>", 'Ignored by complex type']
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//["Type: name: 'float' kind: TypeKind.FLOAT is_const: False kind: float", 'Source: <SourceLocation file None, line 0, column 0>']
	//Ignored by has arguments
			
	//float TrajectoryGroundCol();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'float3 &' kind: TypeKind.LVALUEREFERENCE is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//long GetSquare();

};
interface CMapInfo
{
	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetStringValue();

};
interface CObject
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'CObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'DependenceType' kind: TypeKind.ENUM is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/ObjectDependenceTypes.h', line 12, column 6>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void DeleteDeathDependence();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 2
	//["Type: name: 'CObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//["Type: name: 'DependenceType' kind: TypeKind.ENUM is_const: False kind: complex_type", "Source: <SourceLocation file 'C:\\\\Users\\\\ilyap\\\\projects-cpp\\\\spring-104.0.1\\\\rts\\\\System/ObjectDependenceTypes.h', line 12, column 6>", 'Ignored by complex type']
	//Ignored by has arguments
			
	//void AddDeathDependence();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CObject *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void DependentDied();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetSyncID();

};
//Ignored by name (typedef needed)
/*interface CUnit_TransportedUnit
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

};*/
interface CModInfo
{
	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResetState();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'char *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void Init();

};
interface CResourceDescription
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

};
interface CGlobalSynced
{
	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type StaticClass();

	//Return type:
	//Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type GetClass();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _ConstructInstance();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _DestructInstance();

	//Return type:
	//Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type
	//Source: <SourceLocation file None, line 0, column 0>
	//Ignored by complex type
	//Ignored by return type
	//Ignored by complex type
	//Ignored by has arguments
			
	//complex_type _Alloc();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'void *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _Free();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'creg::Class *' kind: TypeKind.POINTER is_const: False kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void _CregRegisterMembers();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
			
	void ResetState();

	//Return type:
	//Type: name: 'void' kind: TypeKind.VOID is_const: False kind: void
	//Source: <SourceLocation file None, line 0, column 0>
	//Argument list sized: 1
	//["Type: name: 'CGameSetup *' kind: TypeKind.POINTER is_const: True kind: complex_type", 'Source: <SourceLocation file None, line 0, column 0>', 'Ignored by complex type']
	//Ignored by has arguments
			
	//void LoadFromSetup();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetLuaSimFrame();

	//Return type:
	//Type: name: 'int' kind: TypeKind.INT is_const: False kind: long
	//Source: <SourceLocation file None, line 0, column 0>
			
	long GetTempNum();

	//Return type:
	//Type: name: 'bool' kind: TypeKind.BOOL is_const: False kind: boolean
	//Source: <SourceLocation file None, line 0, column 0>
			
	boolean PreSimFrame();

};
/* --- Type cache ---
{
    "const int &": [
        101150408, 
        101149768, 
        145232328, 
        145232840, 
        145234248, 
        145235016, 
        145235784, 
        103560648, 
        103560520, 
        103561672, 
        103562184, 
        103562696, 
        103047752, 
        103047880, 
        103048008, 
        103049544, 
        100265032, 
        100265288, 
        103656776, 
        102367944, 
        103586376, 
        103587528, 
        100238408, 
        145270984, 
        145271496, 
        103811400, 
        103727176, 
        100240200, 
        103686216, 
        103686984, 
        103687112, 
        98805448, 
        98688840, 
        98686792, 
        145297992, 
        145298760, 
        145299528, 
        145326664, 
        103390280, 
        145033928, 
        145093448, 
        145094216, 
        99047880
    ], 
    "iterator": [
        145013576, 
        145032008, 
        145032264
    ], 
    "const int *": [
        145114056
    ], 
    "CTeam::AddType": [
        144748232
    ], 
    "const float *": [
        145096264, 
        145096520, 
        145113544, 
        145113800, 
        145114824, 
        145115592, 
        145116616, 
        145141832, 
        145143368
    ], 
    "CSolidObject *": [
        103332808, 
        103333448, 
        103362888, 
        103363400, 
        103363912, 
        103364424, 
        103364936, 
        103365320, 
        103366088, 
        103387208
    ], 
    "int &": [
        145300168, 
        103390536
    ], 
    "unsigned int &": [
        103585864
    ], 
    "const int2 *": [
        101537864
    ], 
    "const float": [
        145144136, 
        145145032, 
        103985608, 
        103985992, 
        98964040, 
        98673864
    ], 
    "const char *": [
        103047496, 
        102110664, 
        103507528, 
        103780040, 
        103778632, 
        101460296, 
        145092936
    ], 
    "bool": [
        100793800, 
        101150280, 
        145234504, 
        145234376, 
        103560392, 
        103561544, 
        103562056, 
        145268936, 
        101214920, 
        103049160, 
        103049032, 
        103049928, 
        103050184, 
        103446728, 
        103447240, 
        100238152, 
        100654408, 
        103779016, 
        103809992, 
        104155848, 
        104155592, 
        101137992, 
        101135944, 
        100153800, 
        100580424, 
        101967816, 
        99680584, 
        101224264, 
        101761480, 
        99501768, 
        102808008, 
        101849416, 
        101849928, 
        101848008, 
        101470408, 
        101470792, 
        101471816, 
        101815112, 
        98663752, 
        102286280, 
        102287560, 
        102288072, 
        102289224, 
        101694280, 
        100674632, 
        101113672, 
        100411976, 
        100411592, 
        100412616, 
        99195336, 
        103686344, 
        98806216, 
        100995784, 
        98704968, 
        98721992, 
        101111496, 
        104692040, 
        104692680, 
        104693320, 
        144716104, 
        144716872, 
        144717512, 
        144718024, 
        144718920, 
        144746312, 
        144812616, 
        144834760, 
        144835528, 
        144836296, 
        144837960, 
        144860232, 
        144860744, 
        144861256, 
        144861768, 
        144862408, 
        145297480, 
        145299656, 
        145300296, 
        145300552, 
        145300808, 
        145301064, 
        145301320, 
        145326280, 
        145326792, 
        103364552, 
        103365064, 
        103388488, 
        103389256, 
        103390024, 
        145044424, 
        145045704, 
        145062344, 
        145116488, 
        145117000, 
        145142344, 
        145142856, 
        145143240, 
        145171400, 
        145171656, 
        145171912, 
        145172168, 
        101839048, 
        101839432, 
        101838920, 
        100012616, 
        101528648, 
        101530696, 
        101528392, 
        98823752, 
        103518024, 
        103515080, 
        99045704, 
        145011272
    ], 
    "IPathFinder *": [
        100672200
    ], 
    "float &": [
        101014984
    ], 
    "CPathManager::MultiPath &": [
        100276936, 
        100276296
    ], 
    "const char *const &": [
        100238664
    ], 
    "void": [
        104156744, 
        103948488, 
        102351048, 
        99848264, 
        100153416, 
        101839176, 
        99682888, 
        101221576, 
        101223112, 
        99811784, 
        99811656, 
        100793416, 
        100793672, 
        99783496, 
        99784008, 
        99784776, 
        99785288, 
        99964360, 
        99965896, 
        102648520, 
        102649032, 
        99735496, 
        99734472, 
        103560264, 
        103562568, 
        103562952, 
        145269064, 
        100675144, 
        100674504, 
        100941384, 
        101212488, 
        103048136, 
        103048392, 
        103049672, 
        103050952, 
        103445320, 
        103445832, 
        103446088, 
        103446344, 
        103446856, 
        103447368, 
        103447880, 
        102985160, 
        100101704, 
        102175944, 
        102177224, 
        102177096, 
        102176584, 
        102175432, 
        102175816, 
        101646024, 
        101679432, 
        101680200, 
        101680712, 
        100939464, 
        100918728, 
        100031688, 
        100032200, 
        100262600, 
        100152520, 
        99600328, 
        103585480, 
        100238280, 
        145269448, 
        145269320, 
        103778504, 
        103779144, 
        103779400, 
        103779784, 
        103778120, 
        103604424, 
        103809608, 
        103810120, 
        103810376, 
        103812168, 
        103727816, 
        101817800, 
        101459784, 
        101459400, 
        100155208, 
        99791176, 
        99774792, 
        99396040, 
        99395016, 
        100941512, 
        103054536, 
        99708360, 
        104120904, 
        104124232, 
        104121800, 
        103517128, 
        103687624, 
        98806088, 
        98687944, 
        98688072, 
        98688712, 
        98723912, 
        104680904, 
        104689736, 
        104690504, 
        104691016, 
        104691272, 
        104691528, 
        104692808, 
        144716232, 
        144717000, 
        144718536, 
        144719048, 
        144719560, 
        144744520, 
        144744776, 
        144745288, 
        144745800, 
        144748360, 
        144773832, 
        144775880, 
        144776392, 
        144810056, 
        144810568, 
        144810824, 
        144811336, 
        144837064, 
        144838088, 
        144863048, 
        144884168, 
        144884680, 
        145298248, 
        145299016, 
        145299784, 
        103093192, 
        103093704, 
        103094472, 
        103094984, 
        103095240, 
        103095752, 
        103153736, 
        103330376, 
        103330888, 
        103331656, 
        103332168, 
        103332936, 
        103333704, 
        103363016, 
        103363528, 
        103364040, 
        102670152, 
        102863304, 
        102864072, 
        102864584, 
        101576904, 
        144962632, 
        145032904, 
        145033416, 
        145034696, 
        145034952, 
        145043784, 
        145044552, 
        145045064, 
        145045320, 
        145045832, 
        145046088, 
        145046344, 
        145046600, 
        145046856, 
        145062600, 
        145063624, 
        145094472, 
        145096008, 
        101333192, 
        101333704, 
        101839688, 
        101842248, 
        101139784, 
        98992584, 
        102491720, 
        102492744, 
        102494024, 
        100098120, 
        101643720, 
        99384008, 
        99048392, 
        102823880, 
        144988744, 
        144988488, 
        144989384, 
        144989896, 
        145010760, 
        145012296, 
        145012552, 
        145013064, 
        145013832, 
        145014088, 
        145014600
    ], 
    "creg::Class *": [
        103073352, 
        103073224, 
        101840712, 
        101969352, 
        101969480, 
        99785160, 
        102702024, 
        100153032, 
        102177608, 
        101645256, 
        101645512, 
        101680584, 
        100938696, 
        100938824, 
        100032072, 
        144926408, 
        99776584, 
        100941000, 
        102251336, 
        103053256, 
        104122312, 
        104680136, 
        104680392, 
        104690888, 
        144775112, 
        144775368, 
        144810440, 
        99935816, 
        103092680, 
        103094856, 
        103285832, 
        103330120, 
        103332040, 
        102669384, 
        102669640, 
        102864456, 
        103092552, 
        99735240, 
        145033288, 
        101333064, 
        101332552, 
        101841736, 
        99018312, 
        99016776, 
        144989768
    ], 
    "const OptionalInt &": [
        100807752, 
        100806856
    ], 
    "const CollisionQuery *": [
        99644872
    ], 
    "TeamStatistics &": [
        144746696
    ], 
    "const_iterator": [
        145031496, 
        145031752
    ], 
    "const CSolidObject *": [
        101817416, 
        101135816, 
        100155080, 
        98661704, 
        98660808, 
        103951304, 
        102203848, 
        98780616, 
        98779976, 
        100411848, 
        100409672, 
        100412104, 
        100410568, 
        100410184, 
        99030472, 
        100478152, 
        98650056, 
        101914184, 
        103388360, 
        103389128, 
        103389896
    ], 
    "SResourcePack": [
        104692552
    ], 
    "const CGameSetup *": [
        103514952, 
        144811208, 
        103095624
    ], 
    "rng_val_type": [
        99790920, 
        101213000, 
        103286216, 
        103288008, 
        103315272
    ], 
    "const netcode::RawPacket *": [
        103445704
    ], 
    "const spring_time": [
        103811528, 
        103811656, 
        103727304, 
        103727432
    ], 
    "const float3 *": [
        145114440, 
        145114696, 
        145115208, 
        145115464, 
        145115976, 
        145116232, 
        145142088, 
        145142600
    ], 
    "float4": [
        101579976, 
        100651848
    ], 
    "const float3 &": [
        99895240, 
        101222600, 
        101220680, 
        99783368, 
        102646088, 
        102646216, 
        102646344, 
        102646472, 
        100154184, 
        100154312, 
        100577992, 
        100577608, 
        100577736, 
        100580168, 
        99683272, 
        99681224, 
        101849032, 
        101850184, 
        101473352, 
        101474120, 
        101814600, 
        101815368, 
        98663624, 
        102286536, 
        102286152, 
        102286024, 
        102286920, 
        102287816, 
        100440264, 
        100440776, 
        99736904, 
        102420552, 
        100654280, 
        100654536, 
        98661960, 
        98651848, 
        103366344, 
        103389000, 
        102493640, 
        102491208, 
        101225800, 
        101226952, 
        98820936, 
        103851336, 
        99239368, 
        100809928, 
        100809160, 
        99385032, 
        99383496, 
        99382856, 
        99382728
    ], 
    "const LocalModelPiece *": [
        99384776, 
        99381704
    ], 
    "float3": [
        99812552, 
        99813832, 
        99962952, 
        99966792, 
        99963080, 
        99963208, 
        99966152, 
        102647496, 
        102647624, 
        101848264, 
        102287304, 
        102288968, 
        102289096, 
        100441288, 
        102420680, 
        101224520, 
        101225288, 
        104218952, 
        101580360
    ], 
    "const StringConvertibleOptionalValue &": [
        100241224, 
        100262472, 
        100262216, 
        100216904, 
        100220232, 
        100219208, 
        144932424, 
        99961416, 
        99961672, 
        99961160, 
        98820808, 
        101642952
    ], 
    "CReadMap::IQuadDrawer *": [
        145095496
    ], 
    "CReadMap *": [
        145033672
    ], 
    "const TeamBase &": [
        144747336
    ], 
    "const TeamStatistics &": [
        144746952
    ], 
    "const T &": [
        100217928, 
        100217416, 
        102110280, 
        100808264, 
        144931784, 
        144925768
    ], 
    "MapBitmapInfo *": [
        145093576
    ], 
    "CBaseGroundDrawer *": [
        145047240
    ], 
    "unsigned int": [
        100674376, 
        100673736, 
        100671816, 
        100673224, 
        103047624, 
        103050824, 
        103448392, 
        103586760, 
        103586888, 
        103587656, 
        102423112, 
        102424392, 
        102422216, 
        102422600, 
        144745672, 
        144746056, 
        144862536, 
        144862280, 
        103332424, 
        103387464, 
        103389768, 
        145047368, 
        145060040, 
        145060296, 
        145061064, 
        145060808, 
        145060936, 
        145061704, 
        145061832, 
        145113416, 
        145172424, 
        145172680, 
        145172936, 
        145011016
    ], 
    "const CPathManager::MultiPath &": [
        100275784
    ], 
    "const CollisionVolume *": [
        101138120, 
        100151880, 
        100577480, 
        100579656, 
        99681992
    ], 
    "CBaseNetProtocol &": [
        103285320
    ], 
    "CLoadScreen *": [
        98685384
    ], 
    "const bool": [
        99736648, 
        103811784, 
        103811912, 
        103812040, 
        103727560, 
        103727688
    ], 
    "float": [
        101839304, 
        100028488, 
        99812296, 
        99811912, 
        99814856, 
        100166472, 
        99963336, 
        99965384, 
        99965512, 
        99965640, 
        99965768, 
        102645960, 
        102647752, 
        145233736, 
        103559624, 
        103559368, 
        103444808, 
        103777736, 
        103778248, 
        101220552, 
        101224008, 
        101220424, 
        101761224, 
        99502280, 
        101083720, 
        101083336, 
        102807624, 
        102807880, 
        102807752, 
        102808904, 
        102808136, 
        102809032, 
        101848904, 
        101849288, 
        101848776, 
        101848648, 
        101850056, 
        101850696, 
        101847880, 
        101470536, 
        101471560, 
        101473736, 
        100356936, 
        101814344, 
        101814856, 
        102286408, 
        102288328, 
        101691592, 
        101694024, 
        101691976, 
        101692488, 
        101692616, 
        101112264, 
        100673096, 
        100440904, 
        100440136, 
        100440008, 
        100439880, 
        102251592, 
        101682376, 
        102424136, 
        102420808, 
        102421832, 
        100653768, 
        144715976, 
        144716744, 
        144717384, 
        144717896, 
        145298888, 
        145095624, 
        145144392, 
        145145160, 
        145145416, 
        145145672, 
        145170632, 
        145170888, 
        145171144, 
        101138632, 
        101138504, 
        101397448, 
        101400136, 
        101227080, 
        101225672, 
        99128392, 
        100806984, 
        99381320, 
        99384648
    ], 
    "creg::ISerializer *": [
        145034568
    ], 
    "BlockType": [
        100654920, 
        98662728, 
        98662984, 
        103952200, 
        102206024, 
        100411080, 
        99030600, 
        98650696, 
        98650824
    ], 
    "const int2": [
        145043656
    ], 
    "const MoveDef &": [
        99735624, 
        99007432, 
        102423752, 
        102421064, 
        102423368, 
        100654152, 
        98661448, 
        98664136, 
        104156104, 
        102207304, 
        102207048, 
        98779208, 
        100413128, 
        100413000, 
        100477000, 
        98649800, 
        101915848
    ], 
    "const unsigned int": [
        144718408
    ], 
    "IArchive *": [
        103686600
    ], 
    "CPlayer *": [
        103154120
    ], 
    "rng_res_type": [
        103313480, 
        103313864, 
        103314120
    ], 
    "CObject *": [
        102174920, 
        102176968, 
        102175048
    ], 
    "CriticalSection &": [
        100793032
    ], 
    "const float4": [
        101579848, 
        100652360
    ], 
    "const float3": [
        100167368, 
        101815752, 
        101817672, 
        101136072, 
        101134664, 
        101694920, 
        101694408, 
        101691464, 
        101692744, 
        101695176, 
        100673480, 
        101138888, 
        101400264, 
        98651592, 
        98651336, 
        103986632, 
        103986376, 
        98992712, 
        98992968, 
        98995912, 
        102492616, 
        102493256, 
        102493512, 
        101914440, 
        100651208
    ], 
    "SRectangle": [
        145044296
    ], 
    "int2": [
        145061320
    ], 
    "CDemoRecorder *": [
        103447752, 
        103448264
    ], 
    "float3 *": [
        144745160
    ], 
    "CUnit *": [
        144748104, 
        144773576
    ], 
    "::AllyTeam &": [
        144813384
    ], 
    "float3 &": [
        102491336
    ], 
    "void *": [
        98779720, 
        99850568, 
        102697544, 
        100152008, 
        99786312, 
        99783880, 
        99784264, 
        99784648, 
        100154824, 
        102177736, 
        102176456, 
        102176840, 
        101645896, 
        101679304, 
        101679688, 
        101680072, 
        100939208, 
        100939720, 
        100032328, 
        100031560, 
        99775944, 
        99394504, 
        99395656, 
        99394376, 
        103052488, 
        99705160, 
        99707976, 
        104122056, 
        104680776, 
        104681288, 
        104689992, 
        104690376, 
        144775752, 
        144776264, 
        144774600, 
        144777032, 
        103093064, 
        103093576, 
        103093960, 
        103094344, 
        103330248, 
        103330760, 
        103331144, 
        103331528, 
        102670024, 
        102863176, 
        102863560, 
        102863944, 
        101577032, 
        144962376, 
        145032392, 
        145032776, 
        101332424, 
        101333576, 
        101841992, 
        101840200, 
        102217416, 
        144988104, 
        144988872, 
        144989256
    ], 
    "CPathManager::MultiPath &&": [
        102986184
    ], 
    "const OptionalString &": [
        99866184, 
        100809800
    ], 
    "CArchiveLoader &": [
        103605832
    ], 
    "SRectangle &": [
        145011912, 
        145012168
    ], 
    "int": [
        103284936, 
        103285192, 
        103390664, 
        103391048, 
        103430728, 
        103430984, 
        103431240, 
        103431496, 
        103431752, 
        103432008, 
        103428296, 
        103428552, 
        103428808, 
        103429064, 
        103429320, 
        103429576, 
        101150792, 
        101151048, 
        101150920, 
        101151560, 
        101151688, 
        101151816, 
        101151432, 
        101152456, 
        101152840, 
        101152712, 
        101153352, 
        101153224, 
        101153864, 
        101153736, 
        101154376, 
        101154248, 
        101052616, 
        101052744, 
        101053128, 
        101053256, 
        101053384, 
        101053000, 
        101054152, 
        101054024, 
        101054664, 
        101054536, 
        101055176, 
        101055304, 
        101055048, 
        101055944, 
        101056072, 
        103022664, 
        100220360, 
        99503944, 
        99501896, 
        99963848, 
        99963464, 
        99963592, 
        99963720, 
        99964232, 
        99965256, 
        102648264, 
        102647880, 
        102648008, 
        102648136, 
        102648904, 
        145231944, 
        145232456, 
        145235272, 
        145235144, 
        103559240, 
        103561032, 
        103562312, 
        101536840, 
        103048904, 
        103050440, 
        103444680, 
        103445192, 
        103192520, 
        101530440, 
        99734088, 
        145269704, 
        145269960, 
        145270216, 
        145270472, 
        103891528, 
        103891144, 
        100240712, 
        101223880, 
        101224648, 
        100441544, 
        99005896, 
        101681096, 
        98663368, 
        98661320, 
        104156360, 
        103952072, 
        102203720, 
        102204104, 
        102206664, 
        98780872, 
        100478408, 
        100478664, 
        101915208, 
        101915976, 
        101915720, 
        101915592, 
        103516104, 
        103517640, 
        99194440, 
        99195208, 
        102397512, 
        101111368, 
        144719432, 
        144747592, 
        144811848, 
        144812360, 
        144812488, 
        144813128, 
        144813000, 
        144813640, 
        144834632, 
        144835272, 
        144835400, 
        144836040, 
        144836168, 
        144836808, 
        144836936, 
        144837704, 
        144837832, 
        144838344, 
        144859208, 
        144859464, 
        144859720, 
        144860104, 
        144860616, 
        144861128, 
        144861640, 
        144862920, 
        144884040, 
        144884552, 
        145278408, 
        145278664, 
        145278920, 
        145279176, 
        145279432, 
        145279688, 
        145279944, 
        145280200, 
        145280456, 
        145280712, 
        145298120, 
        145327048, 
        103365704, 
        103365832, 
        103388104, 
        103388232, 
        145034184, 
        145062856, 
        145063112, 
        145092808, 
        145095752, 
        145095880, 
        104309064, 
        101839560, 
        101015240, 
        99130696, 
        99046600, 
        99045448, 
        99047368, 
        99047624, 
        99045832, 
        145011528, 
        101645000, 
        144774472, 
        99865416
    ], 
    "const SResourcePack &": [
        104691912, 
        104693192
    ], 
    "CArchiveScanner::ArchiveData": [
        145270728, 
        145271240
    ], 
    "const S3DModel *": [
        99812808
    ], 
    "CMatrix44f": [
        102370120, 
        104220104, 
        100651976, 
        101014472
    ], 
    "MapFeatureInfo *": [
        145063496
    ], 
    "CTeam::RemoveType": [
        144773704
    ], 
    "const ConfigVariableMetaData *": [
        100265160, 
        100237512
    ], 
    "ConfigVariableBuilder<F> &": [
        100237896, 
        100238792, 
        100240456, 
        100218568, 
        100219592, 
        100219336, 
        103509832, 
        102110024, 
        144932296, 
        144932168
    ], 
    "DependenceType": [
        102175176, 
        102175304
    ], 
    "const MapTextureData &": [
        145062216
    ], 
    "ILoadSaveHandler *": [
        98685128
    ], 
    "bool *": [
        100000200
    ], 
    "const SRectangle &": [
        145044936, 
        145014472
    ], 
    "CMatrix44f &": [
        101276488, 
        101139528, 
        101139400, 
        100165960, 
        101397192, 
        98649032, 
        98648904, 
        103988296, 
        103986504, 
        103987784, 
        98966728, 
        98992456, 
        100013640, 
        99999816, 
        100651080, 
        99776968, 
        99572040, 
        101013832
    ], 
    "CTeam *": [
        144811592
    ], 
    "IArchiveFactory *": [
        103687496
    ], 
    "native_handle_type": [
        103944264
    ], 
    "CTeam &": [
        144747080
    ], 
    "const YardMapStatus &": [
        103333576
    ], 
    "CRectangleOptimizer &": [
        145012936, 
        145013704
    ], 
    "const bool &": [
        100219464
    ], 
    "CTimeProfiler &": [
        103853384
    ], 
    "const int": [
        99735112, 
        103096136, 
        145144008, 
        145144264, 
        145144904
    ], 
    "const CriticalSection &": [
        100792904
    ], 
    "const CMatrix44f &": [
        101816008, 
        101137736, 
        100151368, 
        100652104, 
        100652616, 
        99572680, 
        101015368, 
        101015112, 
        101014344
    ], 
    "CollisionQuery *": [
        104155720, 
        101136456, 
        100154440, 
        100577864, 
        100580680, 
        99681608
    ], 
    "CCamera *": [
        145095368
    ], 
    "unsigned char *": [
        145093704, 
        145094344
    ]
}
 */