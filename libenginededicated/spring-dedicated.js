/*
  vim: set ts=8 sts=2 et sw=2 tw=79:
  Copyright (C) 2013

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.
*/

// A conforming SIMD.js implementation may contain the following deviations to
// normal JS numeric behavior:
//  - Subnormal numbers may or may not be flushed to zero on input or output of
//    any SIMD operation.

// Many of the operations in SIMD.js have semantics which correspond to scalar
// operations in JS, however there are a few differences:
//  - Vector shifts don't mask the shift count.
//  - Conversions from float to int32 throw on error.
//  - Load and store operations throw when out of bounds.

(function(global) {

if (typeof global.SIMD === "undefined") {
  // SIMD module.
  global.SIMD = {};
}

if (typeof module !== "undefined") {
  // For CommonJS modules
  module.exports = global.SIMD;
}

var SIMD = global.SIMD;

// Buffers for bit casting and coercing lane values to those representable in
// the underlying lane type.
var _f32x4 = new Float32Array(4);
var _f64x2 = new Float64Array(_f32x4.buffer);
var _i32x4 = new Int32Array(_f32x4.buffer);
var _i16x8 = new Int16Array(_f32x4.buffer);
var _i8x16 = new Int8Array(_f32x4.buffer);
var _ui32x4 = new Uint32Array(_f32x4.buffer);
var _ui16x8 = new Uint16Array(_f32x4.buffer);
var _ui8x16 = new Uint8Array(_f32x4.buffer);

function convertValue(buffer, value) {
  buffer[0] = value;
  return buffer[0];
}

function convertArray(buffer, array) {
  for (var i = 0; i < array.length; i++)
    array[i] = convertValue(buffer, array[i]);
  return array;
}

// Utility functions.

function isInt32(o) {
  return (o | 0) === o;
}

function isTypedArray(o) {
  return (o instanceof Int8Array) ||
         (o instanceof Uint8Array) ||
         (o instanceof Uint8ClampedArray) ||
         (o instanceof Int16Array) ||
         (o instanceof Uint16Array) ||
         (o instanceof Int32Array) ||
         (o instanceof Uint32Array) ||
         (o instanceof Float32Array) ||
         (o instanceof Float64Array);
}

function minNum(x, y) {
  return x != x ? y :
         y != y ? x :
         Math.min(x, y);
}

function maxNum(x, y) {
  return x != x ? y :
         y != y ? x :
         Math.max(x, y);
}

function clamp(a, min, max) {
  if (a < min)
    return min;
  if (a > max)
    return max;
  return a;
}

// SIMD implementation functions

function simdCheckLaneIndex(index, lanes) {
  if (!isInt32(index))
    throw new TypeError('Lane index must be an int32');
  if (index < 0 || index >= lanes)
    throw new RangeError('Lane index must be in bounds');
}

// Global lanes array for constructing SIMD values.
var lanes = [];

function simdCreate(type) {
  return type.fn.apply(type.fn, lanes);
}

function simdToString(type, a) {
  a = type.fn.check(a);
  var str = "SIMD." + type.name + "(";
  str += type.fn.extractLane(a, 0);
  for (var i = 1; i < type.lanes; i++) {
    str += ", " + type.fn.extractLane(a, i);
  }
  return str + ")";
}

function simdToLocaleString(type, a) {
  a = type.fn.check(a);
  var str = "SIMD." + type.name + "(";
  str += type.fn.extractLane(a, 0).toLocaleString();
  for (var i = 1; i < type.lanes; i++) {
    str += ", " + type.fn.extractLane(a, i).toLocaleString();
  }
  return str + ")";
}

function simdSplat(type, s) {
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = s;
  return simdCreate(type);
}

function simdReplaceLane(type, a, i, s) {
  a = type.fn.check(a);
  simdCheckLaneIndex(i, type.lanes);
  for (var j = 0; j < type.lanes; j++)
    lanes[j] = type.fn.extractLane(a, j);
  lanes[i] = s;
  return simdCreate(type);
}

function simdFrom(toType, fromType, a) {
  a = fromType.fn.check(a);
  for (var i = 0; i < fromType.lanes; i++) {
    var v = Math.trunc(fromType.fn.extractLane(a, i));
    if (toType.minVal !== undefined &&
        !(toType.minVal <= v && v <= toType.maxVal)) {
      throw new RangeError("Can't convert value");
    }
    lanes[i] = v;
  }
  return simdCreate(toType);
}

function simdFromBits(toType, fromType, a) {
  a = fromType.fn.check(a);
  var newValue = new toType.fn();
  newValue.s_ = new toType.view(a.s_.buffer);
  return newValue;
}

function simdSelect(type, selector, a, b) {
  selector = type.boolType.fn.check(selector);
  a = type.fn.check(a);
  b = type.fn.check(b);
  for (var i = 0; i < type.lanes; i++) {
    lanes[i] = type.boolType.fn.extractLane(selector, i) ?
               type.fn.extractLane(a, i) : type.fn.extractLane(b, i);
  }
  return simdCreate(type);
}

function simdSwizzle(type, a, indices) {
  a = type.fn.check(a);
  for (var i = 0; i < indices.length; i++) {
    simdCheckLaneIndex(indices[i], type.lanes);
    lanes[i] = type.fn.extractLane(a, indices[i]);
  }
  return simdCreate(type);
}

function simdShuffle(type, a, b, indices) {
  a = type.fn.check(a);
  b = type.fn.check(b);
  for (var i = 0; i < indices.length; i++) {
    simdCheckLaneIndex(indices[i], 2 * type.lanes);
    lanes[i] = indices[i] < type.lanes ?
               type.fn.extractLane(a, indices[i]) :
               type.fn.extractLane(b, indices[i] - type.lanes);
  }
  return simdCreate(type);
}

function unaryNeg(a) { return -a; }
function unaryBitwiseNot(a) { return ~a; }
function unaryLogicalNot(a) { return !a; }

function simdUnaryOp(type, op, a) {
  a = type.fn.check(a);
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = op(type.fn.extractLane(a, i));
  return simdCreate(type);
}

function binaryAnd(a, b) { return a & b; }
function binaryOr(a, b) { return a | b; }
function binaryXor(a, b) { return a ^ b; }
function binaryAdd(a, b) { return a + b; }
function binarySub(a, b) { return a - b; }
function binaryMul(a, b) { return a * b; }
function binaryDiv(a, b) { return a / b; }

var binaryImul;
if (typeof Math.imul !== 'undefined') {
  binaryImul = Math.imul;
} else {
  binaryImul = function(a, b) {
    var ah = (a >>> 16) & 0xffff;
    var al = a & 0xffff;
    var bh = (b >>> 16) & 0xffff;
    var bl = b & 0xffff;
    // the shift by 0 fixes the sign on the high part
    // the final |0 converts the unsigned value into a signed value
    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
  };
}

function simdBinaryOp(type, op, a, b) {
  a = type.fn.check(a);
  b = type.fn.check(b);
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = op(type.fn.extractLane(a, i), type.fn.extractLane(b, i));
  return simdCreate(type);
}

function binaryEqual(a, b) { return a == b; }
function binaryNotEqual(a, b) { return a != b; }
function binaryLess(a, b) { return a < b; }
function binaryLessEqual(a, b) { return a <= b; }
function binaryGreater(a, b) { return a > b; }
function binaryGreaterEqual(a, b) { return a >= b; }

function simdRelationalOp(type, op, a, b) {
  a = type.fn.check(a);
  b = type.fn.check(b);
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = op(type.fn.extractLane(a, i), type.fn.extractLane(b, i));
  return simdCreate(type.boolType);
}

function simdAnyTrue(type, a) {
  a = type.fn.check(a);
  for (var i = 0; i < type.lanes; i++)
    if (type.fn.extractLane(a, i)) return true;
  return false;
}

function simdAllTrue(type, a) {
  a = type.fn.check(a);
  for (var i = 0; i < type.lanes; i++)
    if (!type.fn.extractLane(a, i)) return false;
  return true;
}

function binaryShiftLeft(a, bits) { return a << bits; }
function binaryShiftRightArithmetic(a, bits) { return a >> bits; }
function binaryShiftRightLogical(a, bits) { return a >>> bits; }

function simdShiftOp(type, op, a, bits) {
  a = type.fn.check(a);
  for (var i = 0; i < type.lanes; i++)
    lanes[i] = op(type.fn.extractLane(a, i), bits);
  return simdCreate(type);
}

function simdLoad(type, tarray, index, count) {
  if (!isTypedArray(tarray))
    throw new TypeError("The 1st argument must be a typed array.");
  if (!isInt32(index))
    throw new TypeError("The 2nd argument must be an Int32.");
  var bpe = tarray.BYTES_PER_ELEMENT;
  var bytes = count * type.laneSize;
  if (index < 0 || (index * bpe + bytes) > tarray.byteLength)
    throw new RangeError("The value of index is invalid.");

  var newValue = type.fn();
  var dst = new Uint8Array(newValue.s_.buffer);
  var src = new Uint8Array(tarray.buffer, tarray.byteOffset + index * bpe, bytes);

  for (var i = 0; i < bytes; i++) {
    dst[i] = src[i];
  }
  var typeBytes = type.lanes * type.laneSize;
  for (var i = bytes; i < typeBytes; i++) {
    dst[i] = 0;
  }
  return newValue;
}

function simdStore(type, tarray, index, a, count) {
  if (!isTypedArray(tarray))
    throw new TypeError("The 1st argument must be a typed array.");
  if (!isInt32(index))
    throw new TypeError("The 2nd argument must be an Int32.");
  var bpe = tarray.BYTES_PER_ELEMENT;
  var bytes = count * type.laneSize;
  if (index < 0 || (index * bpe + bytes) > tarray.byteLength)
    throw new RangeError("The value of index is invalid.");

  a = type.fn.check(a);

  // The underlying buffers are copied byte by byte, to avoid float
  // canonicalization.
  var src = new Uint8Array(a.s_.buffer);
  var dst = new Uint8Array(tarray.buffer, tarray.byteOffset + index * bpe, bytes);
  for (var i = 0; i < bytes; i++) {
    dst[i] = src[i];
  }
  return a;
}

// Constructors and extractLane functions are closely related and must be
// polyfilled together.

// Float32x4
if (typeof SIMD.Float32x4 === "undefined" ||
    typeof SIMD.Float32x4.extractLane === "undefined") {
  SIMD.Float32x4 = function(s0, s1, s2, s3) {
    if (!(this instanceof SIMD.Float32x4)) {
      return new SIMD.Float32x4(s0, s1, s2, s3);
    }
    this.s_ = convertArray(_f32x4, new Float32Array([s0, s1, s2, s3]));
  }

  SIMD.Float32x4.extractLane = function(v, i) {
    v = SIMD.Float32x4.check(v);
    simdCheckLaneIndex(i, 4);
    return v.s_[i];
  }
}

// Miscellaneous functions that aren't easily parameterized on type.

if (typeof SIMD.Float32x4.swizzle === "undefined") {
  SIMD.Float32x4.swizzle = function(a, s0, s1, s2, s3) {
    return simdSwizzle(float32x4, a, [s0, s1, s2, s3]);
  }
}

if (typeof SIMD.Float32x4.shuffle === "undefined") {
  SIMD.Float32x4.shuffle = function(a, b, s0, s1, s2, s3) {
    return simdShuffle(float32x4, a, b, [s0, s1, s2, s3]);
  }
}

// Int32x4
if (typeof SIMD.Int32x4 === "undefined" ||
    typeof SIMD.Int32x4.extractLane === "undefined") {
  SIMD.Int32x4 = function(s0, s1, s2, s3) {
    if (!(this instanceof SIMD.Int32x4)) {
      return new SIMD.Int32x4(s0, s1, s2, s3);
    }
    this.s_ = convertArray(_i32x4, new Int32Array([s0, s1, s2, s3]));
  }

  SIMD.Int32x4.extractLane = function(v, i) {
    v = SIMD.Int32x4.check(v);
    simdCheckLaneIndex(i, 4);
    return v.s_[i];
  }
}

if (typeof SIMD.Int32x4.swizzle === "undefined") {
  SIMD.Int32x4.swizzle = function(a, s0, s1, s2, s3) {
    return simdSwizzle(int32x4, a, [s0, s1, s2, s3]);
  }
}

if (typeof SIMD.Int32x4.shuffle === "undefined") {
  SIMD.Int32x4.shuffle = function(a, b, s0, s1, s2, s3) {
    return simdShuffle(int32x4, a, b, [s0, s1, s2, s3]);
  }
}

// Int16x8
if (typeof SIMD.Int16x8 === "undefined" ||
    typeof SIMD.Int16x8.extractLane === "undefined") {
  SIMD.Int16x8 = function(s0, s1, s2, s3, s4, s5, s6, s7) {
    if (!(this instanceof SIMD.Int16x8)) {
      return new SIMD.Int16x8(s0, s1, s2, s3, s4, s5, s6, s7);
    }
    this.s_ = convertArray(_i16x8, new Int16Array([s0, s1, s2, s3, s4, s5, s6, s7]));
  }

  SIMD.Int16x8.extractLane = function(v, i) {
    v = SIMD.Int16x8.check(v);
    simdCheckLaneIndex(i, 8);
    return v.s_[i];
  }
}

if (typeof SIMD.Int16x8.swizzle === "undefined") {
  SIMD.Int16x8.swizzle = function(a, s0, s1, s2, s3, s4, s5, s6, s7) {
    return simdSwizzle(int16x8, a, [s0, s1, s2, s3, s4, s5, s6, s7]);
  }
}

if (typeof SIMD.Int16x8.shuffle === "undefined") {
  SIMD.Int16x8.shuffle = function(a, b, s0, s1, s2, s3, s4, s5, s6, s7) {
    return simdShuffle(int16x8, a, b, [s0, s1, s2, s3, s4, s5, s6, s7]);
  }
}

// Int8x16
if (typeof SIMD.Int8x16 === "undefined" ||
    typeof SIMD.Int8x16.extractLane === "undefined") {
  SIMD.Int8x16 = function(s0, s1, s2, s3, s4, s5, s6, s7,
                          s8, s9, s10, s11, s12, s13, s14, s15) {
    if (!(this instanceof SIMD.Int8x16)) {
      return new SIMD.Int8x16(s0, s1, s2, s3, s4, s5, s6, s7,
                              s8, s9, s10, s11, s12, s13, s14, s15);
    }
    this.s_ = convertArray(_i8x16, new Int8Array([s0, s1, s2, s3, s4, s5, s6, s7,
                                    s8, s9, s10, s11, s12, s13, s14, s15]));
  }

  SIMD.Int8x16.extractLane = function(v, i) {
    v = SIMD.Int8x16.check(v);
    simdCheckLaneIndex(i, 16);
    return v.s_[i];
  }
}

if (typeof SIMD.Int8x16.swizzle === "undefined") {
  SIMD.Int8x16.swizzle = function(a, s0, s1, s2, s3, s4, s5, s6, s7,
                                     s8, s9, s10, s11, s12, s13, s14, s15) {
    return simdSwizzle(int8x16, a, [s0, s1, s2, s3, s4, s5, s6, s7,
                                    s8, s9, s10, s11, s12, s13, s14, s15]);
  }
}

if (typeof SIMD.Int8x16.shuffle === "undefined") {
  SIMD.Int8x16.shuffle = function(a, b, s0, s1, s2, s3, s4, s5, s6, s7,
                                        s8, s9, s10, s11, s12, s13, s14, s15) {
    return simdShuffle(int8x16, a, b, [s0, s1, s2, s3, s4, s5, s6, s7,
                                       s8, s9, s10, s11, s12, s13, s14, s15]);
  }
}

// Uint32x4
if (typeof SIMD.Uint32x4 === "undefined" ||
    typeof SIMD.Uint32x4.extractLane === "undefined") {
  SIMD.Uint32x4 = function(s0, s1, s2, s3) {
    if (!(this instanceof SIMD.Uint32x4)) {
      return new SIMD.Uint32x4(s0, s1, s2, s3);
    }
    this.s_ = convertArray(_ui32x4, new Uint32Array([s0, s1, s2, s3]));
  }

  SIMD.Uint32x4.extractLane = function(v, i) {
    v = SIMD.Uint32x4.check(v);
    simdCheckLaneIndex(i, 4);
    return v.s_[i];
  }
}

if (typeof SIMD.Uint32x4.swizzle === "undefined") {
  SIMD.Uint32x4.swizzle = function(a, s0, s1, s2, s3) {
    return simdSwizzle(uint32x4, a, [s0, s1, s2, s3]);
  }
}

if (typeof SIMD.Uint32x4.shuffle === "undefined") {
  SIMD.Uint32x4.shuffle = function(a, b, s0, s1, s2, s3) {
    return simdShuffle(uint32x4, a, b, [s0, s1, s2, s3]);
  }
}

// Uint16x8
if (typeof SIMD.Uint16x8 === "undefined" ||
    typeof SIMD.Uint16x8.extractLane === "undefined") {
  SIMD.Uint16x8 = function(s0, s1, s2, s3, s4, s5, s6, s7) {
    if (!(this instanceof SIMD.Uint16x8)) {
      return new SIMD.Uint16x8(s0, s1, s2, s3, s4, s5, s6, s7);
    }
    this.s_ = convertArray(_ui16x8, new Uint16Array([s0, s1, s2, s3, s4, s5, s6, s7]));
  }

  SIMD.Uint16x8.extractLane = function(v, i) {
    v = SIMD.Uint16x8.check(v);
    simdCheckLaneIndex(i, 8);
    return v.s_[i];
  }
}

if (typeof SIMD.Uint16x8.swizzle === "undefined") {
  SIMD.Uint16x8.swizzle = function(a, s0, s1, s2, s3, s4, s5, s6, s7) {
    return simdSwizzle(uint16x8, a, [s0, s1, s2, s3, s4, s5, s6, s7]);
  }
}

if (typeof SIMD.Uint16x8.shuffle === "undefined") {
  SIMD.Uint16x8.shuffle = function(a, b, s0, s1, s2, s3, s4, s5, s6, s7) {
    return simdShuffle(uint16x8, a, b, [s0, s1, s2, s3, s4, s5, s6, s7]);
  }
}

// Uint8x16
if (typeof SIMD.Uint8x16 === "undefined" ||
    typeof SIMD.Uint8x16.extractLane === "undefined") {
  SIMD.Uint8x16 = function(s0, s1, s2, s3, s4, s5, s6, s7,
                           s8, s9, s10, s11, s12, s13, s14, s15) {
    if (!(this instanceof SIMD.Uint8x16)) {
      return new SIMD.Uint8x16(s0, s1, s2, s3, s4, s5, s6, s7,
                               s8, s9, s10, s11, s12, s13, s14, s15);
    }
    this.s_ = convertArray(_ui8x16, new Uint8Array([s0, s1, s2, s3, s4, s5, s6, s7,
                                     s8, s9, s10, s11, s12, s13, s14, s15]));
  }

  SIMD.Uint8x16.extractLane = function(v, i) {
    v = SIMD.Uint8x16.check(v);
    simdCheckLaneIndex(i, 16);
    return v.s_[i];
  }
}

if (typeof SIMD.Uint8x16.swizzle === "undefined") {
  SIMD.Uint8x16.swizzle = function(a, s0, s1, s2, s3, s4, s5, s6, s7,
                                      s8, s9, s10, s11, s12, s13, s14, s15) {
    return simdSwizzle(uint8x16, a, [s0, s1, s2, s3, s4, s5, s6, s7,
                                     s8, s9, s10, s11, s12, s13, s14, s15]);
  }
}

if (typeof SIMD.Uint8x16.shuffle === "undefined") {
  SIMD.Uint8x16.shuffle = function(a, b, s0, s1, s2, s3, s4, s5, s6, s7,
                                         s8, s9, s10, s11, s12, s13, s14, s15) {
    return simdShuffle(uint8x16, a, b, [s0, s1, s2, s3, s4, s5, s6, s7,
                                        s8, s9, s10, s11, s12, s13, s14, s15]);
  }
}

// Bool32x4
if (typeof SIMD.Bool32x4 === "undefined" ||
    typeof SIMD.Bool32x4.extractLane === "undefined") {
  SIMD.Bool32x4 = function(s0, s1, s2, s3) {
    if (!(this instanceof SIMD.Bool32x4)) {
      return new SIMD.Bool32x4(s0, s1, s2, s3);
    }
    this.s_ = [!!s0, !!s1, !!s2, !!s3];
  }

  SIMD.Bool32x4.extractLane = function(v, i) {
    v = SIMD.Bool32x4.check(v);
    simdCheckLaneIndex(i, 4);
    return v.s_[i];
  }
}

// Bool16x8
if (typeof SIMD.Bool16x8 === "undefined" ||
    typeof SIMD.Bool16x8.extractLane === "undefined") {
  SIMD.Bool16x8 = function(s0, s1, s2, s3, s4, s5, s6, s7) {
    if (!(this instanceof SIMD.Bool16x8)) {
      return new SIMD.Bool16x8(s0, s1, s2, s3, s4, s5, s6, s7);
    }
    this.s_ = [!!s0, !!s1, !!s2, !!s3, !!s4, !!s5, !!s6, !!s7];
  }

  SIMD.Bool16x8.extractLane = function(v, i) {
    v = SIMD.Bool16x8.check(v);
    simdCheckLaneIndex(i, 8);
    return v.s_[i];
  }
}

// Bool8x16
if (typeof SIMD.Bool8x16 === "undefined" ||
    typeof SIMD.Bool8x16.extractLane === "undefined") {
  SIMD.Bool8x16 = function(s0, s1, s2, s3, s4, s5, s6, s7,
                           s8, s9, s10, s11, s12, s13, s14, s15) {
    if (!(this instanceof SIMD.Bool8x16)) {
      return new SIMD.Bool8x16(s0, s1, s2, s3, s4, s5, s6, s7,
                               s8, s9, s10, s11, s12, s13, s14, s15);
    }
    this.s_ = [!!s0, !!s1, !!s2, !!s3, !!s4, !!s5, !!s6, !!s7,
               !!s8, !!s9, !!s10, !!s11, !!s12, !!s13, !!s14, !!s15];
  }

  SIMD.Bool8x16.extractLane = function(v, i) {
    v = SIMD.Bool8x16.check(v);
    simdCheckLaneIndex(i, 16);
    return v.s_[i];
  }
}

// Type data to generate the remaining functions.

var float32x4 = {
  name: "Float32x4",
  fn: SIMD.Float32x4,
  lanes: 4,
  laneSize: 4,
  buffer: _f32x4,
  view: Float32Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "add", "sub", "mul", "div", "neg", "abs", "min", "max", "minNum", "maxNum",
        "reciprocalApproximation", "reciprocalSqrtApproximation", "sqrt",
        "load", "load1", "load2", "load3", "store", "store1", "store2", "store3"],
}

var int32x4 = {
  name: "Int32x4",
  fn: SIMD.Int32x4,
  lanes: 4,
  laneSize: 4,
  minVal: -0x80000000,
  maxVal: 0x7FFFFFFF,
  buffer: _i32x4,
  notFn: unaryBitwiseNot,
  view: Int32Array,
  mulFn: binaryImul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul", "neg",
        "shiftLeftByScalar", "shiftRightByScalar",
        "load", "load1", "load2", "load3", "store", "store1", "store2", "store3"],
}

var int16x8 = {
  name: "Int16x8",
  fn: SIMD.Int16x8,
  lanes: 8,
  laneSize: 2,
  minVal: -0x8000,
  maxVal: 0x7FFF,
  buffer: _i16x8,
  notFn: unaryBitwiseNot,
  view: Int16Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul", "neg",
        "shiftLeftByScalar", "shiftRightByScalar",
        "addSaturate", "subSaturate",
        "load", "store"],
}

var int8x16 = {
  name: "Int8x16",
  fn: SIMD.Int8x16,
  lanes: 16,
  laneSize: 1,
  minVal: -0x80,
  maxVal: 0x7F,
  buffer: _i8x16,
  notFn: unaryBitwiseNot,
  view: Int8Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul", "neg",
        "shiftLeftByScalar", "shiftRightByScalar",
        "addSaturate", "subSaturate",
        "load", "store"],
}

var uint32x4 = {
  name: "Uint32x4",
  fn: SIMD.Uint32x4,
  lanes: 4,
  laneSize: 4,
  minVal: 0,
  maxVal: 0xFFFFFFFF,
  unsigned: true,
  buffer: _ui32x4,
  notFn: unaryBitwiseNot,
  view: Uint32Array,
  mulFn: binaryImul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul",
        "shiftLeftByScalar", "shiftRightByScalar",
        "load", "load1", "load2", "load3", "store", "store1", "store2", "store3"],
}

var uint16x8 = {
  name: "Uint16x8",
  fn: SIMD.Uint16x8,
  lanes: 8,
  laneSize: 2,
  unsigned: true,
  minVal: 0,
  maxVal: 0xFFFF,
  buffer: _ui16x8,
  notFn: unaryBitwiseNot,
  view: Uint16Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul",
        "shiftLeftByScalar", "shiftRightByScalar",
        "addSaturate", "subSaturate",
        "load", "store"],
}

var uint8x16 = {
  name: "Uint8x16",
  fn: SIMD.Uint8x16,
  lanes: 16,
  laneSize: 1,
  unsigned: true,
  minVal: 0,
  maxVal: 0xFF,
  buffer: _ui8x16,
  notFn: unaryBitwiseNot,
  view: Uint8Array,
  mulFn: binaryMul,
  fns: ["check", "splat", "replaceLane", "select",
        "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
        "and", "or", "xor", "not",
        "add", "sub", "mul",
        "shiftLeftByScalar", "shiftRightByScalar",
        "addSaturate", "subSaturate",
        "load", "store"],
}

var bool32x4 = {
  name: "Bool32x4",
  fn: SIMD.Bool32x4,
  lanes: 4,
  laneSize: 4,
  notFn: unaryLogicalNot,
  fns: ["check", "splat", "replaceLane",
        "allTrue", "anyTrue", "and", "or", "xor", "not"],
}

var bool16x8 = {
  name: "Bool16x8",
  fn: SIMD.Bool16x8,
  lanes: 8,
  laneSize: 2,
  notFn: unaryLogicalNot,
  fns: ["check", "splat", "replaceLane",
        "allTrue", "anyTrue", "and", "or", "xor", "not"],
}

var bool8x16 = {
  name: "Bool8x16",
  fn: SIMD.Bool8x16,
  lanes: 16,
  laneSize: 1,
  notFn: unaryLogicalNot,
  fns: ["check", "splat", "replaceLane",
        "allTrue", "anyTrue", "and", "or", "xor", "not"],
}

// Each SIMD type has a corresponding Boolean SIMD type, which is returned by
// relational ops.
float32x4.boolType = int32x4.boolType = uint32x4.boolType = bool32x4;
int16x8.boolType = uint16x8.boolType = bool16x8;
int8x16.boolType = uint8x16.boolType = bool8x16;

// SIMD from<type> types.
float32x4.from = [int32x4, uint32x4];
int32x4.from = [float32x4, uint32x4];
int16x8.from = [uint16x8];
int8x16.from = [uint8x16];
uint32x4.from = [float32x4, int32x4];
uint16x8.from = [int16x8];
uint8x16.from = [int8x16];

// SIMD from<type>Bits types.
float32x4.fromBits = [int32x4, int16x8, int8x16, uint32x4, uint16x8, uint8x16];
int32x4.fromBits = [float32x4, int16x8, int8x16, uint32x4, uint16x8, uint8x16];
int16x8.fromBits = [float32x4, int32x4, int8x16, uint32x4, uint16x8, uint8x16];
int8x16.fromBits = [float32x4, int32x4, int16x8, uint32x4, uint16x8, uint8x16];
uint32x4.fromBits = [float32x4, int32x4, int16x8, int8x16, uint16x8, uint8x16];
uint16x8.fromBits = [float32x4, int32x4, int16x8, int8x16, uint32x4, uint8x16];
uint8x16.fromBits = [float32x4, int32x4, int16x8, int8x16, uint32x4, uint16x8];

var simdTypes = [float32x4,
                 int32x4, int16x8, int8x16,
                 uint32x4, uint16x8, uint8x16,
                 bool32x4, bool16x8, bool8x16];

// XXX Emscripten: Enable SIMD phase 2 types for Float64x2 and Bool64x2 to enable targeting SSE2 support.
simdPhase2 = true;

// SIMD Phase2 types.

if (typeof simdPhase2 !== 'undefined') {
  // Float64x2
  if (typeof SIMD.Float64x2 === "undefined" ||
      typeof SIMD.Float64x2.extractLane === "undefined") {
    SIMD.Float64x2 = function(s0, s1) {
      if (!(this instanceof SIMD.Float64x2)) {
        return new SIMD.Float64x2(s0, s1);
      }
      this.s_ = convertArray(_f64x2, new Float64Array([s0, s1]));
    }

    SIMD.Float64x2.extractLane = function(v, i) {
      v = SIMD.Float64x2.check(v);
      simdCheckLaneIndex(i, 2);
      return v.s_[i];
    }
  }

  if (typeof SIMD.Float64x2.swizzle === "undefined") {
    SIMD.Float64x2.swizzle = function(a, s0, s1) {
      return simdSwizzle(float64x2, a, [s0, s1]);
    }
  }

  if (typeof SIMD.Float64x2.shuffle === "undefined") {
    SIMD.Float64x2.shuffle = function(a, b, s0, s1) {
      return simdShuffle(float64x2, a, b, [s0, s1]);
    }
  }

  // Bool64x2
  if (typeof SIMD.Bool64x2 === "undefined" ||
      typeof SIMD.Bool64x2.extractLane === "undefined") {
    SIMD.Bool64x2 = function(s0, s1) {
      if (!(this instanceof SIMD.Bool64x2)) {
        return new SIMD.Bool64x2(s0, s1);
      }
      this.s_ = [!!s0, !!s1];
    }

    SIMD.Bool64x2.extractLane = function(v, i) {
      v = SIMD.Bool64x2.check(v);
      simdCheckLaneIndex(i, 2);
      return v.s_[i];
    }
  }

  var float64x2 = {
    name: "Float64x2",
    fn: SIMD.Float64x2,
    lanes: 2,
    laneSize: 8,
    buffer: _f64x2,
    view: Float64Array,
    mulFn: binaryMul,
    fns: ["check", "splat", "replaceLane", "select",
          "equal", "notEqual", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual",
          "add", "sub", "mul", "div", "neg", "abs", "min", "max", "minNum", "maxNum",
          "reciprocalApproximation", "reciprocalSqrtApproximation", "sqrt",
          "load", "store"],
  }

  // XXX Emscripten: Need these functions for intrinsics, see https://github.com/tc39/ecmascript_simd/issues/316.
  float64x2.fns.push("load1");
  float64x2.fns.push("store1");
  // XXX Emscripten

  var bool64x2 = {
    name: "Bool64x2",
    fn: SIMD.Bool64x2,
    lanes: 2,
    laneSize: 8,
    notFn: unaryLogicalNot,
    fns: ["check", "splat", "replaceLane",
          "allTrue", "anyTrue", "and", "or", "xor", "not"],
  }

  float64x2.boolType = bool64x2;

  float32x4.fromBits.push(float64x2);
  int32x4.fromBits.push(float64x2);
  int16x8.fromBits.push(float64x2);
  int8x16.fromBits.push(float64x2);
  uint32x4.fromBits.push(float64x2);
  uint16x8.fromBits.push(float64x2);
  uint8x16.fromBits.push(float64x2);

  float64x2.fromBits = [float32x4, int32x4, int16x8, int8x16,
                        uint32x4, uint16x8, uint8x16];

/*
  // XXX Emscripten: Removed to fix https://github.com/tc39/ecmascript_simd/issues/314
  int32x4.fromBits = [float32x4, int16x8, int8x16, uint32x4, uint16x8, uint8x16];
  int16x8.fromBits = [float32x4, int32x4, int8x16, uint32x4, uint16x8, uint8x16];
  int8x16.fromBits = [float32x4, int32x4, int16x8, uint32x4, uint16x8, uint8x16];
  uint32x4.fromBits = [float32x4, int32x4, int16x8, int8x16, uint16x8, uint8x16];
  uint16x8.fromBits = [float32x4, int32x4, int16x8, int8x16, uint32x4, uint8x16];
  uint8x16.fromBits = [float32x4, int32x4, int16x8, int8x16, uint32x4, uint16x8];
*/

  simdTypes.push(float64x2);
  simdTypes.push(bool64x2);
}

// SIMD prototype functions.
var prototypeFns = {
  valueOf:
    function(type) {
      return function() {
        throw new TypeError(type.name + " cannot be converted to a number");
      }
    },

  toString:
    function(type) {
      return function() {
        return simdToString(type, this);
      }
    },

  toLocaleString:
    function(type) {
      return function() {
        return simdToLocaleString(type, this);
      }
    },
};

// SIMD constructor functions.

var simdFns = {
  check:
    function(type) {
      return function(a) {
        if (!(a instanceof type.fn)) {
          throw new TypeError("Argument is not a " + type.name + ".");
        }
        return a;
      }
    },

  splat:
    function(type) {
      return function(s) { return simdSplat(type, s); }
    },

  replaceLane:
    function(type) {
      return function(a, i, s) { return simdReplaceLane(type, a, i, s); }
    },

  allTrue:
    function(type) {
      return function(a) { return simdAllTrue(type, a); }
    },

  anyTrue:
    function(type) {
      return function(a) { return simdAnyTrue(type, a); }
    },

  and:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryAnd, a, b);
      }
    },

  or:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryOr, a, b);
      }
    },

  xor:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryXor, a, b);
      }
    },

  not:
    function(type) {
      return function(a) {
        return simdUnaryOp(type, type.notFn, a);
      }
    },

  equal:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryEqual, a, b);
      }
    },

  notEqual:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryNotEqual, a, b);
      }
    },

  lessThan:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryLess, a, b);
      }
    },

  lessThanOrEqual:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryLessEqual, a, b);
      }
    },

  greaterThan:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryGreater, a, b);
      }
    },

  greaterThanOrEqual:
    function(type) {
      return function(a, b) {
        return simdRelationalOp(type, binaryGreaterEqual, a, b);
      }
    },

  add:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryAdd, a, b);
      }
    },

  sub:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binarySub, a, b);
      }
    },

  mul:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, type.mulFn, a, b);
      }
    },

  div:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, binaryDiv, a, b);
      }
    },

  neg:
    function(type) {
      return function(a) {
        return simdUnaryOp(type, unaryNeg, a);
      }
    },

  abs:
    function(type) {
      return function(a) {
        return simdUnaryOp(type, Math.abs, a);
      }
    },

  min:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, Math.min, a, b);
      }
    },

  max:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, Math.max, a, b);
      }
    },

  minNum:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, minNum, a, b);
      }
    },

  maxNum:
    function(type) {
      return function(a, b) {
        return simdBinaryOp(type, maxNum, a, b);
      }
    },

  load:
    function(type) {
      return function(tarray, index) {
        return simdLoad(type, tarray, index, type.lanes);
      }
    },

  load1:
    function(type) {
      return function(tarray, index) {
        return simdLoad(type, tarray, index, 1);
      }
    },

  load2:
    function(type) {
      return function(tarray, index) {
        return simdLoad(type, tarray, index, 2);
      }
    },

  load3:
    function(type) {
      return function(tarray, index) {
        return simdLoad(type, tarray, index, 3);
      }
    },

  store:
    function(type) {
      return function(tarray, index, a) {
        return simdStore(type, tarray, index, a, type.lanes);
      }
    },

  store1:
    function(type) {
      return function(tarray, index, a) {
        return simdStore(type, tarray, index, a, 1);
      }
    },

  store2:
    function(type) {
      return function(tarray, index, a) {
        return simdStore(type, tarray, index, a, 2);
      }
    },

  store3:
    function(type) {
      return function(tarray, index, a) {
        return simdStore(type, tarray, index, a, 3);
      }
    },

  select:
    function(type) {
      return function(selector, a, b) {
        return simdSelect(type, selector, a, b);
      }
    },


  reciprocalApproximation:
    function(type) {
      return function(a) {
        a = type.fn.check(a);
        return type.fn.div(type.fn.splat(1.0), a);
      }
    },

  reciprocalSqrtApproximation:
    function(type) {
      return function(a) {
        a = type.fn.check(a);
        return type.fn.reciprocalApproximation(type.fn.sqrt(a));
      }
    },

  sqrt:
    function(type) {
      return function(a) {
        return simdUnaryOp(type, Math.sqrt, a);
      }
    },

  shiftLeftByScalar:
    function(type) {
      return function(a, bits) {
        bits &= type.laneSize * 8 - 1;
        return simdShiftOp(type, binaryShiftLeft, a, bits);
      }
    },

  shiftRightByScalar:
    function(type) {
      if (type.unsigned) {
        return function(a, bits) {
          bits &= type.laneSize * 8 - 1;
          return simdShiftOp(type, binaryShiftRightLogical, a, bits);
        }
      } else {
        return function(a, bits) {
          bits &= type.laneSize * 8 - 1;
          return simdShiftOp(type, binaryShiftRightArithmetic, a, bits);
        }
      }
    },

  addSaturate:
    function(type) {
      function addSaturate(a, b) {
        return clamp(a + b, type.minVal, type.maxVal);
      }
      return function(a, b) { return simdBinaryOp(type, addSaturate, a, b); }
    },

  subSaturate:
    function(type) {
      function subSaturate(a, b) {
        return clamp(a - b, type.minVal, type.maxVal);
      }
      return function(a, b) { return simdBinaryOp(type, subSaturate, a, b); }
    },
}

// Install functions.

simdTypes.forEach(function(type) {
  // Install each prototype function on each SIMD prototype.
  var simdFn = type.fn;
  var proto = simdFn.prototype;
  for (var name in prototypeFns) {
    if (!proto.hasOwnProperty(name))
      proto[name] = prototypeFns[name](type);
  }
  // Install regular functions.
  type.fns.forEach(function(name) {
    if (typeof simdFn[name] === "undefined")
      simdFn[name] = simdFns[name](type);
  });
  // Install 'fromTIMD' functions.
  if (type.from) {
    type.from.forEach(function(fromType) {
      var name = "from" + fromType.name;
      var toType = type;  // pull type into closure.
      if (typeof type.fn[name] === "undefined") {
        type.fn[name] =
            function(a) { return simdFrom(toType, fromType, a); }
      }
    });
  }
  // Install 'fromTIMDBits' functions.
  if (type.fromBits) {
    type.fromBits.forEach(function(fromType) {
      var name = "from" + fromType.name + "Bits";
      var toType = type;  // pull type into closure.
      if (typeof type.fn[name] === "undefined") {
        type.fn[name] =
            function(a) { return simdFromBits(toType, fromType, a); }
      }
    });
  }
});

// If we're in a browser, the global namespace is named 'window'. If we're
// in node, it's named 'global'. If we're in a web worker, it's named
// 'self'. If we're in a shell, 'this' might work.
})(typeof window !== "undefined"
   ? window
   : (typeof process === 'object' &&
      typeof require === 'function' &&
      typeof global === 'object')
     ? global
     : typeof self === 'object'
       ? self
       : this);


// XXX Emscripten-specific below XXX

// Work around Firefox Nightly bug that Float64x2 comparison return a Int32x4 instead of a Bool64x2.
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.equal(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevEqual = SIMD.Float64x2.equal;
    SIMD.Float64x2.equal = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevEqual(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    }
    console.error('Warning: Patching up SIMD.Float64x2.equal to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.notEqual(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevNotEqual = SIMD.Float64x2.notEqual;
    SIMD.Float64x2.notEqual = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevNotEqual(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.notEqual to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.greaterThan(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevGreaterThan = SIMD.Float64x2.greaterThan;
    SIMD.Float64x2.greaterThan = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevGreaterThan(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.greaterThan to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.greaterThanOrEqual(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevGreaterThanOrEqual = SIMD.Float64x2.greaterThanOrEqual;
    SIMD.Float64x2.greaterThanOrEqual = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevGreaterThanOrEqual(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.greaterThanOrEqual to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.lessThan(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevLessThan = SIMD.Float64x2.lessThan;
    SIMD.Float64x2.lessThan = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevLessThan(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.lessThan to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}
try {
  if (SIMD.Int32x4.check(SIMD.Float64x2.lessThanOrEqual(SIMD.Float64x2.splat(5.0), SIMD.Float64x2.splat(5.0)))) {
    SIMD.Float64x2.prevLessThanOrEqual = SIMD.Float64x2.lessThanOrEqual;
    SIMD.Float64x2.lessThanOrEqual = function(a, b) {
      var int32x4 = SIMD.Float64x2.prevLessThanOrEqual(a, b);
      return SIMD.Bool64x2(SIMD.Int32x4.extractLane(int32x4, 1) != 0, SIMD.Int32x4.extractLane(int32x4, 3) != 0);
    } 
    console.error('Warning: Patching up SIMD.Float64x2.lessThanOrEqual to return a Bool64x2 instead of Int32x4!');
  }
} catch(e) {}


if (!SIMD.Int32x4.fromBool64x2Bits) {
  SIMD.Int32x4.fromBool64x2Bits = function(bool64x2) {
    var lane0 = SIMD.Bool64x2.extractLane(bool64x2, 0)?-1:0;
    var lane1 = SIMD.Bool64x2.extractLane(bool64x2, 1)?-1:0;
    return SIMD.Int32x4(lane0, lane0, lane1, lane1);
  }
}


// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var s = func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;



function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var WASM_PAGE_SIZE = 64 * 1024;

var totalMemory = WASM_PAGE_SIZE;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024;
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var lastChar, end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];

if (!Math['fround']) Math['fround'] = function(x) { return x };

if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;





// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 114240;
  /* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__I_000101() } }, { func: function() { __GLOBAL__sub_I_ClientSetup_cpp() } }, { func: function() { __GLOBAL__sub_I_GameData_cpp() } }, { func: function() { __GLOBAL__sub_I_CommandMessage_cpp() } }, { func: function() { __GLOBAL__sub_I_ChatMessage_cpp() } }, { func: function() { __GLOBAL__sub_I_LuaMemPool_cpp() } }, { func: function() { __GLOBAL__sub_I_ConsoleSink_cpp() } }, { func: function() { __GLOBAL__sub_I_FileSink_cpp() } }, { func: function() { __GLOBAL__sub_I_main_cpp() } }, { func: function() { __GLOBAL__sub_I_gflags_cc() } }, { func: function() { __GLOBAL__sub_I_gflags_reporting_cc() } }, { func: function() { __GLOBAL__sub_I_gflags_completions_cc() } }, { func: function() { __GLOBAL__sub_I_iostream_cpp() } });
  

memoryInitializer = "spring-dedicated.js.mem";





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  function __ZN10CLogOutput13LogSystemInfoEv() {
  Module['printErr']('missing function: _ZN10CLogOutput13LogSystemInfoEv'); abort(-1);
  }

  function __ZN13streflop_libm15__ieee754_coshfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm15__ieee754_coshfEf'); abort(-1);
  }

   
  Module["_pthread_mutex_lock"] = _pthread_mutex_lock;

  function __ZN11spring_time5sleepEb() {
  Module['printErr']('missing function: _ZN11spring_time5sleepEb'); abort(-1);
  }

  function __ZN12CFileHandler5CloseEv() {
  Module['printErr']('missing function: _ZN12CFileHandler5CloseEv'); abort(-1);
  }

  function __ZNK15CArchiveScanner16MapNameToMapFileERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZNK15CArchiveScanner16MapNameToMapFileERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  function __ZN13streflop_libm15__ieee754_fmodfEff() {
  Module['printErr']('missing function: _ZN13streflop_libm15__ieee754_fmodfEff'); abort(-1);
  }

  function __ZN13streflop_libm8__ldexpfEfi() {
  Module['printErr']('missing function: _ZN13streflop_libm8__ldexpfEfi'); abort(-1);
  }

  function __ZN12spring_clock8GetTicksEv() {
  Module['printErr']('missing function: _ZN12spring_clock8GetTicksEv'); abort(-1);
  }

  function __ZN10FileSystem11GetBasenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZN10FileSystem11GetBasenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  function __ZN9TdfParserD1Ev() {
  Module['printErr']('missing function: _ZN9TdfParserD1Ev'); abort(-1);
  }

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function __ZN13streflop_libm7__ceilfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm7__ceilfEf'); abort(-1);
  }

  function __ZN12spring_futexC1Ev() {
  Module['printErr']('missing function: _ZN12spring_futexC1Ev'); abort(-1);
  }

  function __ZN15CArchiveScanner26GetArchiveCompleteChecksumERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZN15CArchiveScanner26GetArchiveCompleteChecksumERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function __ZN14DataDirLocater12FreeInstanceEv() {
  Module['printErr']('missing function: _ZN14DataDirLocater12FreeInstanceEv'); abort(-1);
  }

  function __ZN13streflop_libm7__tanhfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm7__tanhfEf'); abort(-1);
  }

   
  Module["_memmove"] = _memmove;

  function __ZN12CFileHandler10FileExistsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_() {
  Module['printErr']('missing function: _ZN12CFileHandler10FileExistsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_'); abort(-1);
  }

  function __ZNK15CArchiveScanner15NameFromArchiveERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZNK15CArchiveScanner15NameFromArchiveERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

  
  
   
  Module["_i64Add"] = _i64Add;
  
   
  Module["_i64Subtract"] = _i64Subtract;
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC); 
  Module["_llvm_cttz_i32"] = _llvm_cttz_i32; 
  Module["___udivmoddi4"] = ___udivmoddi4; 
  Module["___uremdi3"] = ___uremdi3;

  function _pthread_cond_wait() { return 0; }

  function __ZN21FileSystemInitializer26PreInitializeConfigHandlerERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb() {
  Module['printErr']('missing function: _ZN21FileSystemInitializer26PreInitializeConfigHandlerERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb'); abort(-1);
  }

  function __ZN13streflop_libm16__ieee754_log10fEf() {
  Module['printErr']('missing function: _ZN13streflop_libm16__ieee754_log10fEf'); abort(-1);
  }

  function __ZN13streflop_libm16__ieee754_atan2fEff() {
  Module['printErr']('missing function: _ZN13streflop_libm16__ieee754_atan2fEff'); abort(-1);
  }

  function __ZNK15CArchiveScanner14GetArchiveDataERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZNK15CArchiveScanner14GetArchiveDataERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  function __ZN21FileSystemInitializer19InitializeLogOutputERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZN21FileSystemInitializer19InitializeLogOutputERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  function __ZN10FileSystem12GetExtensionERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZN10FileSystem12GetExtensionERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  function __Z12LuaMutexLockP9lua_State() {
  Module['printErr']('missing function: _Z12LuaMutexLockP9lua_State'); abort(-1);
  }

   
  Module["_memset"] = _memset;

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function __ZN13streflop_libm14__ieee754_expfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm14__ieee754_expfEf'); abort(-1);
  }

   
  Module["___divdi3"] = ___divdi3;

  function __Z17StringTrimInPlaceRNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS5_() {
  Module['printErr']('missing function: _Z17StringTrimInPlaceRNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS5_'); abort(-1);
  }

  function __ZN12CFileHandler7DirListERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_() {
  Module['printErr']('missing function: _ZN12CFileHandler7DirListERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_'); abort(-1);
  }

  function __ZN13streflop_libm6__tanfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm6__tanfEf'); abort(-1);
  }

  function __Z22GetRapidPackageFromTagRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE() {
  Module['printErr']('missing function: _Z22GetRapidPackageFromTagRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE'); abort(-1);
  }

  function __Z16spring_lua_allocPvS_jj() {
  Module['printErr']('missing function: _Z16spring_lua_allocPvS_jj'); abort(-1);
  }

  function __ZN13streflop_libm8__frexpfEfPi() {
  Module['printErr']('missing function: _ZN13streflop_libm8__frexpfEfPi'); abort(-1);
  }

  function __ZN11CGameServerD1Ev() {
  Module['printErr']('missing function: _ZN11CGameServerD1Ev'); abort(-1);
  }

  function __ZN12CrashHandler7InstallEv() {
  Module['printErr']('missing function: _ZN12CrashHandler7InstallEv'); abort(-1);
  }

  function __ZN13streflop_libm6__cosfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm6__cosfEf'); abort(-1);
  }

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  
  var PTHREAD_SPECIFIC={};
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_() {
  Module['printErr']('missing function: _ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_'); abort(-1);
  }

  function __ZN13streflop_libm7__fabsfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm7__fabsfEf'); abort(-1);
  }

  function __ZN13streflop_libm14__ieee754_powfEff() {
  Module['printErr']('missing function: _ZN13streflop_libm14__ieee754_powfEff'); abort(-1);
  }

  function __Z17spring_lua_formatfPKcPc() {
  Module['printErr']('missing function: _Z17spring_lua_formatfPKcPc'); abort(-1);
  }

  function __Z14LuaMutexUnlockP9lua_State() {
  Module['printErr']('missing function: _Z14LuaMutexUnlockP9lua_State'); abort(-1);
  }

  function __ZN9TdfParserC1EPKcj() {
  Module['printErr']('missing function: _ZN9TdfParserC1EPKcj'); abort(-1);
  }

  function __ZN13streflop_libm8__isinffEf() {
  Module['printErr']('missing function: _ZN13streflop_libm8__isinffEf'); abort(-1);
  }

  function ___cxa_begin_catch(ptr) {
      var info = EXCEPTIONS.infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exception--;
      }
      if (info) info.rethrown = false;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

   
  Module["___remdi3"] = ___remdi3;

  function __ZN12CFileHandler7SubDirsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_() {
  Module['printErr']('missing function: _ZN12CFileHandler7SubDirsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_'); abort(-1);
  }

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion
  
              var fd = process.stdin.fd;
              if (isPosixPlatform) {
                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
                var usingDevice = false;
                try {
                  fd = fs.openSync('/dev/stdin', 'r');
                  usingDevice = true;
                } catch (e) {}
              }
  
              try {
                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
              } catch(e) {
                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
                else throw e;
              }
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.length : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) {
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        if (!req) {
          return callback("Unable to connect to IndexedDB");
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            // Issue 4254: Using curr as a node name will prevent the node
            // from being found in FS.nameTable when FS.open is called on
            // a path which holds a child of this node,
            // given that all FS functions assume node names
            // are just their corresponding parts within their given path,
            // rather than incremental aggregates which include their parent's
            // directories.
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readdir:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readlink:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        }}};
  
  var _stdin=STATICTOP; STATICTOP += 16;;
  
  var _stdout=STATICTOP; STATICTOP += 16;;
  
  var _stderr=STATICTOP; STATICTOP += 16;;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(err) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(err);
        }
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdirTree:function (path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var i = 0; i < dirs.length; ++i) {
          if (!dirs[i]) continue;
          d += '/' + dirs[i];
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != ERRNO_CODES.EEXIST) throw e;
          }
        }
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (lookup.node === null) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
  
        var len = Math.min(bufsize, lengthBytesUTF8(ret));
        var endChar = HEAP8[buf+len];
        stringToUTF8(ret, buf, bufsize+1);
        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
        HEAP8[buf+len] = endChar;
  
        return len;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }


  function __ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_() {
  Module['printErr']('missing function: _ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_'); abort(-1);
  }

  function __Z15LuaDestroyMutexP9lua_State() {
  Module['printErr']('missing function: _Z15LuaDestroyMutexP9lua_State'); abort(-1);
  }

  function __ZN12GlobalConfig11InstantiateEv() {
  Module['printErr']('missing function: _ZN12GlobalConfig11InstantiateEv'); abort(-1);
  }

  function __Z15ErrorMessageBoxRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_j() {
  Module['printErr']('missing function: _Z15ErrorMessageBoxRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_j'); abort(-1);
  }

  function __ZN11CGameServerC1ENSt3__210shared_ptrIK11ClientSetupEENS1_IK8GameDataEENS1_IK10CGameSetupEE() {
  Module['printErr']('missing function: _ZN11CGameServerC1ENSt3__210shared_ptrIK11ClientSetupEENS1_IK8GameDataEENS1_IK10CGameSetupEE'); abort(-1);
  }

  function __ZN13streflop_libm8__floorfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm8__floorfEf'); abort(-1);
  }

  function __ZN11CVFSHandler18AddArchiveWithDepsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb() {
  Module['printErr']('missing function: _ZN11CVFSHandler18AddArchiveWithDepsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb'); abort(-1);
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

  function _safe_strcat() {
  Module['printErr']('missing function: safe_strcat'); abort(-1);
  }



  function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function __ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  function __ZN13streflop_libm15__ieee754_sinhfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm15__ieee754_sinhfEf'); abort(-1);
  }

  function __Z15spring_lua_ftoafPci() {
  Module['printErr']('missing function: _Z15spring_lua_ftoafPci'); abort(-1);
  }

  function __ZN12spring_clock12PushTickRateEb() {
  Module['printErr']('missing function: _ZN12spring_clock12PushTickRateEb'); abort(-1);
  }

  function __ZN13streflop_libm14__ieee754_logfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm14__ieee754_logfEf'); abort(-1);
  }

  function __ZNK15CArchiveScanner15ArchiveFromNameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZNK15CArchiveScanner15ArchiveFromNameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function __ZN12GlobalConfig10DeallocateEv() {
  Module['printErr']('missing function: _ZN12GlobalConfig10DeallocateEv'); abort(-1);
  }

  function __ZN8Platform14NativeWordSizeEv() {
  Module['printErr']('missing function: _ZN8Platform14NativeWordSizeEv'); abort(-1);
  }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

   
  Module["___udivdi3"] = ___udivdi3;

  function __ZN13streflop_libm6__sinfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm6__sinfEf'); abort(-1);
  }

   
  Module["_pthread_cond_broadcast"] = _pthread_cond_broadcast;

  
  
  
  
  var _environ=STATICTOP; STATICTOP += 16;;var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function __ZN12CFileHandlerC1EPKcS1_() {
  Module['printErr']('missing function: _ZN12CFileHandlerC1EPKcS1_'); abort(-1);
  }

   
  Module["_pthread_mutex_unlock"] = _pthread_mutex_unlock;

   
  Module["_sbrk"] = _sbrk;

  function __ZN9Threading13SetMainThreadEv() {
  Module['printErr']('missing function: _ZN9Threading13SetMainThreadEv'); abort(-1);
  }

  function __ZN12spring_clock11PopTickRateEv() {
  Module['printErr']('missing function: _ZN12spring_clock11PopTickRateEv'); abort(-1);
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21506: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function __ZNK9TdfParser8GetValueERbRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZNK9TdfParser8GetValueERbRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE'); abort(-1);
  }

  function __ZN14DataDirLocater11GetInstanceEv() {
  Module['printErr']('missing function: _ZN14DataDirLocater11GetInstanceEv'); abort(-1);
  }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function ___syscall63(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // dup2
      var old = SYSCALLS.getStreamFromFD(), suggestFD = SYSCALLS.get();
      if (old.fd === suggestFD) return suggestFD;
      return SYSCALLS.doDup(old.path, old.flags, suggestFD);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function __ZN10FileSystem12GetDirectoryERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZN10FileSystem12GetDirectoryERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  function __ZN13streflop_libm7__atanfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm7__atanfEf'); abort(-1);
  }

  function __ZN13streflop_libm15__ieee754_asinfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm15__ieee754_asinfEf'); abort(-1);
  }

  function __ZN10FileSystem11GetFilenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZN10FileSystem11GetFilenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          var twelveHour = date.tm_hour;
          if (twelveHour == 0) twelveHour = 12;
          else if (twelveHour > 12) twelveHour -= 12;
          return leadingNulls(twelveHour, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour >= 0 && date.tm_hour < 12) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }

  function __ZN13streflop_libm15__ieee754_acosfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm15__ieee754_acosfEf'); abort(-1);
  }

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  function __ZN14ConfigVariable17OutputMetaDataMapEv() {
  Module['printErr']('missing function: _ZN14ConfigVariable17OutputMetaDataMapEv'); abort(-1);
  }

  function ___unlock() {}

  function __ZN12spring_futexD1Ev() {
  Module['printErr']('missing function: _ZN12spring_futexD1Ev'); abort(-1);
  }

  function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  function __ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  function ___lock() {}

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall330(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // dup3
      var old = SYSCALLS.getStreamFromFD(), suggestFD = SYSCALLS.get(), flags = SYSCALLS.get();
      assert(!flags);
      if (old.fd === suggestFD) return -ERRNO_CODES.EINVAL;
      return SYSCALLS.doDup(old.path, old.flags, suggestFD);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  function __ZN13streflop_libm8__isnanfEf() {
  Module['printErr']('missing function: _ZN13streflop_libm8__isnanfEf'); abort(-1);
  }

  function __ZN21FileSystemInitializer10InitializeEv() {
  Module['printErr']('missing function: _ZN21FileSystemInitializer10InitializeEv'); abort(-1);
  }

  function __ZN21FileSystemInitializer7CleanupEb() {
  Module['printErr']('missing function: _ZN21FileSystemInitializer7CleanupEb'); abort(-1);
  }

  function __Z14LuaCreateMutexP9lua_State() {
  Module['printErr']('missing function: _Z14LuaCreateMutexP9lua_State'); abort(-1);
  }

  function __Z12LuaLinkMutexP9lua_StateS0_() {
  Module['printErr']('missing function: _Z12LuaLinkMutexP9lua_StateS0_'); abort(-1);
  }

  function __ZNK15CArchiveScanner11ArchiveData16GetInfoValueBoolERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZNK15CArchiveScanner11ArchiveData16GetInfoValueBoolERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE'); abort(-1);
  }

  function __ZN14ConfigVariable11AddMetaDataEPK22ConfigVariableMetaData() {
  Module['printErr']('missing function: _ZN14ConfigVariable11AddMetaDataEPK22ConfigVariableMetaData'); abort(-1);
  }

  function __ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_() {
  Module['printErr']('missing function: _ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_'); abort(-1);
  }

  function __ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE() {
  Module['printErr']('missing function: _ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE'); abort(-1);
  }

  function __ZNK11CGameServer11HasFinishedEv() {
  Module['printErr']('missing function: _ZNK11CGameServer11HasFinishedEv'); abort(-1);
  }

  function __ZN12spring_futex4lockEv() {
  Module['printErr']('missing function: _ZN12spring_futex4lockEv'); abort(-1);
  }

  
   
  Module["___muldsi3"] = ___muldsi3; 
  Module["___muldi3"] = ___muldi3;

  function __ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_() {
  Module['printErr']('missing function: _ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_'); abort(-1);
  }

  function __ZN12spring_futex6unlockEv() {
  Module['printErr']('missing function: _ZN12spring_futex6unlockEv'); abort(-1);
  }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

   
  Module["_pthread_self"] = _pthread_self;

  function __Z24spring_lua_getHandleNameP9lua_State() {
  Module['printErr']('missing function: _Z24spring_lua_getHandleNameP9lua_State'); abort(-1);
  }

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        case 12: {
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        case 13:
        case 14:
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function __ZN11spring_time2xsE() {
  Module['printErr']('missing function: _ZN11spring_time2xsE'); abort(-1);
  }

  function __ZN8streflop22SimplePositiveInfinityE() {
  Module['printErr']('missing function: _ZN8streflop22SimplePositiveInfinityE'); abort(-1);
  }

  function __ZTV12CFileHandler() {
  Module['printErr']('missing function: _ZTV12CFileHandler'); abort(-1);
  }

  var ___dso_handle=STATICTOP; STATICTOP += 16;;

  function _archiveScanner() {
  Module['printErr']('missing function: archiveScanner'); abort(-1);
  }

  function _configHandler() {
  Module['printErr']('missing function: configHandler'); abort(-1);
  }

  function _vfsHandler() {
  Module['printErr']('missing function: vfsHandler'); abort(-1);
  }
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });;
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); };
___buildEnvironment(ENV);;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory



function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iid(index,a1,a2) {
  try {
    return Module["dynCall_iid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity, "SIMD": SIMD };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiii": invoke_viiiii, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_iid": invoke_iid, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiii": invoke_viiii, "invoke_iii": invoke_iii, "invoke_iiiiid": invoke_iiiiid, "invoke_iiiiii": invoke_iiiiii, "___syscall221": ___syscall221, "__ZN21FileSystemInitializer7CleanupEb": __ZN21FileSystemInitializer7CleanupEb, "__ZN14ConfigVariable17OutputMetaDataMapEv": __ZN14ConfigVariable17OutputMetaDataMapEv, "__ZN12CrashHandler7InstallEv": __ZN12CrashHandler7InstallEv, "__ZN10FileSystem11GetBasenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZN10FileSystem11GetBasenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "___syscall63": ___syscall63, "__ZN15CArchiveScanner26GetArchiveCompleteChecksumERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZN15CArchiveScanner26GetArchiveCompleteChecksumERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "___assert_fail": ___assert_fail, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "__addDays": __addDays, "__Z14LuaMutexUnlockP9lua_State": __Z14LuaMutexUnlockP9lua_State, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "__ZN13streflop_libm7__ceilfEf": __ZN13streflop_libm7__ceilfEf, "__ZNK11CGameServer11HasFinishedEv": __ZNK11CGameServer11HasFinishedEv, "__ZN21FileSystemInitializer19InitializeLogOutputERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZN21FileSystemInitializer19InitializeLogOutputERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "__ZN13streflop_libm6__sinfEf": __ZN13streflop_libm6__sinfEf, "__Z24spring_lua_getHandleNameP9lua_State": __Z24spring_lua_getHandleNameP9lua_State, "__ZN10FileSystem11GetFilenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZN10FileSystem11GetFilenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "__ZN12spring_clock12PushTickRateEb": __ZN12spring_clock12PushTickRateEb, "__ZN13streflop_libm15__ieee754_coshfEf": __ZN13streflop_libm15__ieee754_coshfEf, "__ZN12spring_futex4lockEv": __ZN12spring_futex4lockEv, "__isLeapYear": __isLeapYear, "__ZNK15CArchiveScanner11ArchiveData16GetInfoValueBoolERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE": __ZNK15CArchiveScanner11ArchiveData16GetInfoValueBoolERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, "__ZN12spring_futex6unlockEv": __ZN12spring_futex6unlockEv, "___cxa_atexit": ___cxa_atexit, "__ZN12CFileHandler5CloseEv": __ZN12CFileHandler5CloseEv, "_pthread_cleanup_push": _pthread_cleanup_push, "__ZN21FileSystemInitializer10InitializeEv": __ZN21FileSystemInitializer10InitializeEv, "___syscall140": ___syscall140, "__Z15spring_lua_ftoafPci": __Z15spring_lua_ftoafPci, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "__ZN11CGameServerC1ENSt3__210shared_ptrIK11ClientSetupEENS1_IK8GameDataEENS1_IK10CGameSetupEE": __ZN11CGameServerC1ENSt3__210shared_ptrIK11ClientSetupEENS1_IK8GameDataEENS1_IK10CGameSetupEE, "__ZN13streflop_libm15__ieee754_fmodfEff": __ZN13streflop_libm15__ieee754_fmodfEff, "__ZN14DataDirLocater12FreeInstanceEv": __ZN14DataDirLocater12FreeInstanceEv, "__Z15LuaDestroyMutexP9lua_State": __Z15LuaDestroyMutexP9lua_State, "__ZN13streflop_libm6__tanfEf": __ZN13streflop_libm6__tanfEf, "__ZN13streflop_libm16__ieee754_atan2fEff": __ZN13streflop_libm16__ieee754_atan2fEff, "__ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "__ZN11CVFSHandler18AddArchiveWithDepsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb": __ZN11CVFSHandler18AddArchiveWithDepsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb, "__ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_": __ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_, "___setErrNo": ___setErrNo, "__ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_": __ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_, "___syscall330": ___syscall330, "___cxa_allocate_exception": ___cxa_allocate_exception, "___resumeException": ___resumeException, "__ZN9TdfParserC1EPKcj": __ZN9TdfParserC1EPKcj, "__ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_": __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_, "__Z22GetRapidPackageFromTagRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE": __Z22GetRapidPackageFromTagRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE, "__ZN12GlobalConfig11InstantiateEv": __ZN12GlobalConfig11InstantiateEv, "___buildEnvironment": ___buildEnvironment, "__ZN13streflop_libm15__ieee754_asinfEf": __ZN13streflop_libm15__ieee754_asinfEf, "__ZN13streflop_libm6__cosfEf": __ZN13streflop_libm6__cosfEf, "_pthread_once": _pthread_once, "__Z12LuaMutexLockP9lua_State": __Z12LuaMutexLockP9lua_State, "__ZN13streflop_libm14__ieee754_expfEf": __ZN13streflop_libm14__ieee754_expfEf, "__ZN12spring_futexD1Ev": __ZN12spring_futexD1Ev, "___lock": ___lock, "__Z15ErrorMessageBoxRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_j": __Z15ErrorMessageBoxRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_j, "___syscall6": ___syscall6, "___syscall5": ___syscall5, "__ZN21FileSystemInitializer26PreInitializeConfigHandlerERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb": __ZN21FileSystemInitializer26PreInitializeConfigHandlerERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb, "__Z16spring_lua_allocPvS_jj": __Z16spring_lua_allocPvS_jj, "__ZN13streflop_libm15__ieee754_sinhfEf": __ZN13streflop_libm15__ieee754_sinhfEf, "_exit": _exit, "__ZN12spring_clock8GetTicksEv": __ZN12spring_clock8GetTicksEv, "_pthread_cleanup_pop": _pthread_cleanup_pop, "__ZN14DataDirLocater11GetInstanceEv": __ZN14DataDirLocater11GetInstanceEv, "__ZN13streflop_libm16__ieee754_log10fEf": __ZN13streflop_libm16__ieee754_log10fEf, "__ZN13streflop_libm7__tanhfEf": __ZN13streflop_libm7__tanhfEf, "__ZN14ConfigVariable11AddMetaDataEPK22ConfigVariableMetaData": __ZN14ConfigVariable11AddMetaDataEPK22ConfigVariableMetaData, "_safe_strcat": _safe_strcat, "__Z17StringTrimInPlaceRNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS5_": __Z17StringTrimInPlaceRNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS5_, "__Z14LuaCreateMutexP9lua_State": __Z14LuaCreateMutexP9lua_State, "__ZN11spring_time5sleepEb": __ZN11spring_time5sleepEb, "__ZN11CGameServerD1Ev": __ZN11CGameServerD1Ev, "__ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_": __ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_, "__ZN8Platform14NativeWordSizeEv": __ZN8Platform14NativeWordSizeEv, "__ZN10FileSystem12GetDirectoryERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZN10FileSystem12GetDirectoryERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "__ZN13streflop_libm8__isinffEf": __ZN13streflop_libm8__isinffEf, "_strftime": _strftime, "__ZN10FileSystem12GetExtensionERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZN10FileSystem12GetExtensionERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "_getenv": _getenv, "__ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "__ZN13streflop_libm8__isnanfEf": __ZN13streflop_libm8__isnanfEf, "_pthread_key_create": _pthread_key_create, "__Z12LuaLinkMutexP9lua_StateS0_": __Z12LuaLinkMutexP9lua_StateS0_, "__ZN13streflop_libm14__ieee754_logfEf": __ZN13streflop_libm14__ieee754_logfEf, "__ZN13streflop_libm7__atanfEf": __ZN13streflop_libm7__atanfEf, "__ZN12spring_futexC1Ev": __ZN12spring_futexC1Ev, "_abort": _abort, "__ZNK15CArchiveScanner14GetArchiveDataERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZNK15CArchiveScanner14GetArchiveDataERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "___cxa_pure_virtual": ___cxa_pure_virtual, "_pthread_getspecific": _pthread_getspecific, "_pthread_cond_wait": _pthread_cond_wait, "__ZN9Threading13SetMainThreadEv": __ZN9Threading13SetMainThreadEv, "__ZN12spring_clock11PopTickRateEv": __ZN12spring_clock11PopTickRateEv, "___gxx_personality_v0": ___gxx_personality_v0, "__ZNK15CArchiveScanner16MapNameToMapFileERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZNK15CArchiveScanner16MapNameToMapFileERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "__ZNK15CArchiveScanner15NameFromArchiveERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZNK15CArchiveScanner15NameFromArchiveERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "__ZN13streflop_libm8__frexpfEfPi": __ZN13streflop_libm8__frexpfEfPi, "_time": _time, "_strftime_l": _strftime_l, "__ZN12CFileHandlerC1EPKcS1_": __ZN12CFileHandlerC1EPKcS1_, "__ZN9TdfParserD1Ev": __ZN9TdfParserD1Ev, "__exit": __exit, "__ZN12CFileHandler7SubDirsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_": __ZN12CFileHandler7SubDirsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_, "__arraySum": __arraySum, "__ZN12GlobalConfig10DeallocateEv": __ZN12GlobalConfig10DeallocateEv, "__ZN13streflop_libm15__ieee754_acosfEf": __ZN13streflop_libm15__ieee754_acosfEf, "__ZNK9TdfParser8GetValueERbRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE": __ZNK9TdfParser8GetValueERbRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, "__ZNK15CArchiveScanner15ArchiveFromNameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZNK15CArchiveScanner15ArchiveFromNameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "__ZN13streflop_libm8__ldexpfEfi": __ZN13streflop_libm8__ldexpfEfi, "__ZN13streflop_libm8__floorfEf": __ZN13streflop_libm8__floorfEf, "__ZN12CFileHandler7DirListERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_": __ZN12CFileHandler7DirListERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_, "___syscall54": ___syscall54, "___unlock": ___unlock, "__ZN13streflop_libm7__fabsfEf": __ZN13streflop_libm7__fabsfEf, "_pthread_setspecific": _pthread_setspecific, "__ZN13streflop_libm14__ieee754_powfEff": __ZN13streflop_libm14__ieee754_powfEff, "___cxa_throw": ___cxa_throw, "__ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": __ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, "__ZN10CLogOutput13LogSystemInfoEv": __ZN10CLogOutput13LogSystemInfoEv, "_atexit": _atexit, "__Z17spring_lua_formatfPKcPc": __Z17spring_lua_formatfPKcPc, "__ZN12CFileHandler10FileExistsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_": __ZN12CFileHandler10FileExistsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "__ZN11spring_time2xsE": __ZN11spring_time2xsE, "__ZN8streflop22SimplePositiveInfinityE": __ZN8streflop22SimplePositiveInfinityE, "__ZTV12CFileHandler": __ZTV12CFileHandler, "___dso_handle": ___dso_handle, "_archiveScanner": _archiveScanner, "_configHandler": _configHandler, "_vfsHandler": _vfsHandler };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var __ZN11spring_time2xsE=env.__ZN11spring_time2xsE|0;
  var __ZN8streflop22SimplePositiveInfinityE=env.__ZN8streflop22SimplePositiveInfinityE|0;
  var __ZTV12CFileHandler=env.__ZTV12CFileHandler|0;
  var ___dso_handle=env.___dso_handle|0;
  var _archiveScanner=env._archiveScanner|0;
  var _configHandler=env._configHandler|0;
  var _vfsHandler=env._vfsHandler|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var Math_fround=global.Math.fround;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_iid=env.invoke_iid;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_iiiiii=env.invoke_iiiiii;
  var ___syscall221=env.___syscall221;
  var __ZN21FileSystemInitializer7CleanupEb=env.__ZN21FileSystemInitializer7CleanupEb;
  var __ZN14ConfigVariable17OutputMetaDataMapEv=env.__ZN14ConfigVariable17OutputMetaDataMapEv;
  var __ZN12CrashHandler7InstallEv=env.__ZN12CrashHandler7InstallEv;
  var __ZN10FileSystem11GetBasenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZN10FileSystem11GetBasenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var ___syscall63=env.___syscall63;
  var __ZN15CArchiveScanner26GetArchiveCompleteChecksumERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZN15CArchiveScanner26GetArchiveCompleteChecksumERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var ___assert_fail=env.___assert_fail;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var __addDays=env.__addDays;
  var __Z14LuaMutexUnlockP9lua_State=env.__Z14LuaMutexUnlockP9lua_State;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var __ZN13streflop_libm7__ceilfEf=env.__ZN13streflop_libm7__ceilfEf;
  var __ZNK11CGameServer11HasFinishedEv=env.__ZNK11CGameServer11HasFinishedEv;
  var __ZN21FileSystemInitializer19InitializeLogOutputERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZN21FileSystemInitializer19InitializeLogOutputERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var __ZN13streflop_libm6__sinfEf=env.__ZN13streflop_libm6__sinfEf;
  var __Z24spring_lua_getHandleNameP9lua_State=env.__Z24spring_lua_getHandleNameP9lua_State;
  var __ZN10FileSystem11GetFilenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZN10FileSystem11GetFilenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var __ZN12spring_clock12PushTickRateEb=env.__ZN12spring_clock12PushTickRateEb;
  var __ZN13streflop_libm15__ieee754_coshfEf=env.__ZN13streflop_libm15__ieee754_coshfEf;
  var __ZN12spring_futex4lockEv=env.__ZN12spring_futex4lockEv;
  var __isLeapYear=env.__isLeapYear;
  var __ZNK15CArchiveScanner11ArchiveData16GetInfoValueBoolERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE=env.__ZNK15CArchiveScanner11ArchiveData16GetInfoValueBoolERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE;
  var __ZN12spring_futex6unlockEv=env.__ZN12spring_futex6unlockEv;
  var ___cxa_atexit=env.___cxa_atexit;
  var __ZN12CFileHandler5CloseEv=env.__ZN12CFileHandler5CloseEv;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var __ZN21FileSystemInitializer10InitializeEv=env.__ZN21FileSystemInitializer10InitializeEv;
  var ___syscall140=env.___syscall140;
  var __Z15spring_lua_ftoafPci=env.__Z15spring_lua_ftoafPci;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var __ZN11CGameServerC1ENSt3__210shared_ptrIK11ClientSetupEENS1_IK8GameDataEENS1_IK10CGameSetupEE=env.__ZN11CGameServerC1ENSt3__210shared_ptrIK11ClientSetupEENS1_IK8GameDataEENS1_IK10CGameSetupEE;
  var __ZN13streflop_libm15__ieee754_fmodfEff=env.__ZN13streflop_libm15__ieee754_fmodfEff;
  var __ZN14DataDirLocater12FreeInstanceEv=env.__ZN14DataDirLocater12FreeInstanceEv;
  var __Z15LuaDestroyMutexP9lua_State=env.__Z15LuaDestroyMutexP9lua_State;
  var __ZN13streflop_libm6__tanfEf=env.__ZN13streflop_libm6__tanfEf;
  var __ZN13streflop_libm16__ieee754_atan2fEff=env.__ZN13streflop_libm16__ieee754_atan2fEff;
  var __ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var __ZN11CVFSHandler18AddArchiveWithDepsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb=env.__ZN11CVFSHandler18AddArchiveWithDepsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb;
  var __ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_=env.__ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_;
  var ___setErrNo=env.___setErrNo;
  var __ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_=env.__ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_;
  var ___syscall330=env.___syscall330;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___resumeException=env.___resumeException;
  var __ZN9TdfParserC1EPKcj=env.__ZN9TdfParserC1EPKcj;
  var __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_=env.__ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_;
  var __Z22GetRapidPackageFromTagRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE=env.__Z22GetRapidPackageFromTagRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE;
  var __ZN12GlobalConfig11InstantiateEv=env.__ZN12GlobalConfig11InstantiateEv;
  var ___buildEnvironment=env.___buildEnvironment;
  var __ZN13streflop_libm15__ieee754_asinfEf=env.__ZN13streflop_libm15__ieee754_asinfEf;
  var __ZN13streflop_libm6__cosfEf=env.__ZN13streflop_libm6__cosfEf;
  var _pthread_once=env._pthread_once;
  var __Z12LuaMutexLockP9lua_State=env.__Z12LuaMutexLockP9lua_State;
  var __ZN13streflop_libm14__ieee754_expfEf=env.__ZN13streflop_libm14__ieee754_expfEf;
  var __ZN12spring_futexD1Ev=env.__ZN12spring_futexD1Ev;
  var ___lock=env.___lock;
  var __Z15ErrorMessageBoxRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_j=env.__Z15ErrorMessageBoxRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_j;
  var ___syscall6=env.___syscall6;
  var ___syscall5=env.___syscall5;
  var __ZN21FileSystemInitializer26PreInitializeConfigHandlerERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb=env.__ZN21FileSystemInitializer26PreInitializeConfigHandlerERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb;
  var __Z16spring_lua_allocPvS_jj=env.__Z16spring_lua_allocPvS_jj;
  var __ZN13streflop_libm15__ieee754_sinhfEf=env.__ZN13streflop_libm15__ieee754_sinhfEf;
  var _exit=env._exit;
  var __ZN12spring_clock8GetTicksEv=env.__ZN12spring_clock8GetTicksEv;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var __ZN14DataDirLocater11GetInstanceEv=env.__ZN14DataDirLocater11GetInstanceEv;
  var __ZN13streflop_libm16__ieee754_log10fEf=env.__ZN13streflop_libm16__ieee754_log10fEf;
  var __ZN13streflop_libm7__tanhfEf=env.__ZN13streflop_libm7__tanhfEf;
  var __ZN14ConfigVariable11AddMetaDataEPK22ConfigVariableMetaData=env.__ZN14ConfigVariable11AddMetaDataEPK22ConfigVariableMetaData;
  var _safe_strcat=env._safe_strcat;
  var __Z17StringTrimInPlaceRNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS5_=env.__Z17StringTrimInPlaceRNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS5_;
  var __Z14LuaCreateMutexP9lua_State=env.__Z14LuaCreateMutexP9lua_State;
  var __ZN11spring_time5sleepEb=env.__ZN11spring_time5sleepEb;
  var __ZN11CGameServerD1Ev=env.__ZN11CGameServerD1Ev;
  var __ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_=env.__ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_;
  var __ZN8Platform14NativeWordSizeEv=env.__ZN8Platform14NativeWordSizeEv;
  var __ZN10FileSystem12GetDirectoryERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZN10FileSystem12GetDirectoryERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var __ZN13streflop_libm8__isinffEf=env.__ZN13streflop_libm8__isinffEf;
  var _strftime=env._strftime;
  var __ZN10FileSystem12GetExtensionERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZN10FileSystem12GetExtensionERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var _getenv=env._getenv;
  var __ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var __ZN13streflop_libm8__isnanfEf=env.__ZN13streflop_libm8__isnanfEf;
  var _pthread_key_create=env._pthread_key_create;
  var __Z12LuaLinkMutexP9lua_StateS0_=env.__Z12LuaLinkMutexP9lua_StateS0_;
  var __ZN13streflop_libm14__ieee754_logfEf=env.__ZN13streflop_libm14__ieee754_logfEf;
  var __ZN13streflop_libm7__atanfEf=env.__ZN13streflop_libm7__atanfEf;
  var __ZN12spring_futexC1Ev=env.__ZN12spring_futexC1Ev;
  var _abort=env._abort;
  var __ZNK15CArchiveScanner14GetArchiveDataERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZNK15CArchiveScanner14GetArchiveDataERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var _pthread_getspecific=env._pthread_getspecific;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var __ZN9Threading13SetMainThreadEv=env.__ZN9Threading13SetMainThreadEv;
  var __ZN12spring_clock11PopTickRateEv=env.__ZN12spring_clock11PopTickRateEv;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var __ZNK15CArchiveScanner16MapNameToMapFileERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZNK15CArchiveScanner16MapNameToMapFileERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var __ZNK15CArchiveScanner15NameFromArchiveERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZNK15CArchiveScanner15NameFromArchiveERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var __ZN13streflop_libm8__frexpfEfPi=env.__ZN13streflop_libm8__frexpfEfPi;
  var _time=env._time;
  var _strftime_l=env._strftime_l;
  var __ZN12CFileHandlerC1EPKcS1_=env.__ZN12CFileHandlerC1EPKcS1_;
  var __ZN9TdfParserD1Ev=env.__ZN9TdfParserD1Ev;
  var __exit=env.__exit;
  var __ZN12CFileHandler7SubDirsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_=env.__ZN12CFileHandler7SubDirsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_;
  var __arraySum=env.__arraySum;
  var __ZN12GlobalConfig10DeallocateEv=env.__ZN12GlobalConfig10DeallocateEv;
  var __ZN13streflop_libm15__ieee754_acosfEf=env.__ZN13streflop_libm15__ieee754_acosfEf;
  var __ZNK9TdfParser8GetValueERbRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE=env.__ZNK9TdfParser8GetValueERbRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE;
  var __ZNK15CArchiveScanner15ArchiveFromNameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZNK15CArchiveScanner15ArchiveFromNameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var __ZN13streflop_libm8__ldexpfEfi=env.__ZN13streflop_libm8__ldexpfEfi;
  var __ZN13streflop_libm8__floorfEf=env.__ZN13streflop_libm8__floorfEf;
  var __ZN12CFileHandler7DirListERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_=env.__ZN12CFileHandler7DirListERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var __ZN13streflop_libm7__fabsfEf=env.__ZN13streflop_libm7__fabsfEf;
  var _pthread_setspecific=env._pthread_setspecific;
  var __ZN13streflop_libm14__ieee754_powfEff=env.__ZN13streflop_libm14__ieee754_powfEff;
  var ___cxa_throw=env.___cxa_throw;
  var __ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE=env.__ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
  var __ZN10CLogOutput13LogSystemInfoEv=env.__ZN10CLogOutput13LogSystemInfoEv;
  var _atexit=env._atexit;
  var __Z17spring_lua_formatfPKcPc=env.__Z17spring_lua_formatfPKcPc;
  var __ZN12CFileHandler10FileExistsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_=env.__ZN12CFileHandler10FileExistsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_;
  var SIMD_Float32x4=global.SIMD.Float32x4;
  var SIMD_Float32x4_splat=SIMD_Float32x4.splat;
  var SIMD_Float32x4_check=SIMD_Float32x4.check;
  var SIMD_Float32x4_extractLane=SIMD_Float32x4.extractLane;
  var SIMD_Float32x4_replaceLane=SIMD_Float32x4.replaceLane;
  var SIMD_Float32x4_add=SIMD_Float32x4.add;
  var SIMD_Float32x4_sub=SIMD_Float32x4.sub;
  var SIMD_Float32x4_neg=SIMD_Float32x4.neg;
  var SIMD_Float32x4_mul=SIMD_Float32x4.mul;
  var SIMD_Float32x4_equal=SIMD_Float32x4.equal;
  var SIMD_Float32x4_lessThan=SIMD_Float32x4.lessThan;
  var SIMD_Float32x4_greaterThan=SIMD_Float32x4.greaterThan;
  var SIMD_Float32x4_notEqual=SIMD_Float32x4.notEqual;
  var SIMD_Float32x4_lessThanOrEqual=SIMD_Float32x4.lessThanOrEqual;
  var SIMD_Float32x4_greaterThanOrEqual=SIMD_Float32x4.greaterThanOrEqual;
  var SIMD_Float32x4_select=SIMD_Float32x4.select;
  var SIMD_Float32x4_swizzle=SIMD_Float32x4.swizzle;
  var SIMD_Float32x4_shuffle=SIMD_Float32x4.shuffle;
  var SIMD_Float32x4_load=SIMD_Float32x4.load;
  var SIMD_Float32x4_store=SIMD_Float32x4.store;
  var SIMD_Float32x4_load1=SIMD_Float32x4.load1;
  var SIMD_Float32x4_store1=SIMD_Float32x4.store1;
  var SIMD_Float32x4_load2=SIMD_Float32x4.load2;
  var SIMD_Float32x4_store2=SIMD_Float32x4.store2;
  var SIMD_Float32x4_div=SIMD_Float32x4.div;
  var SIMD_Float32x4_min=SIMD_Float32x4.min;
  var SIMD_Float32x4_max=SIMD_Float32x4.max;
  var SIMD_Float32x4_minNum=SIMD_Float32x4.minNum;
  var SIMD_Float32x4_maxNum=SIMD_Float32x4.maxNum;
  var SIMD_Float32x4_sqrt=SIMD_Float32x4.sqrt;
  var SIMD_Float32x4_abs=SIMD_Float32x4.abs;
  var SIMD_Float32x4_reciprocalApproximation=SIMD_Float32x4.reciprocalApproximation;
  var SIMD_Float32x4_reciprocalSqrtApproximation=SIMD_Float32x4.reciprocalSqrtApproximation;
  var tempFloat = Math_fround(0);
  const f0 = Math_fround(0);

// EMSCRIPTEN_START_FUNCS

function __ZN6google12_GLOBAL__N_1L23PrintFlagCompletionInfoEv() {
 var $$$i$i$i = 0, $$0$19$i$i$i$i = 0, $$0$19$i$i$i$i$i = 0, $$0$19$i$i$i$i46 = 0, $$0$19$i$i$i42$i = 0, $$0$19$i$i$i57$i = 0, $$0$19$i$i$i73$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i208$i = 0, $$0$i$i$i$i$i42 = 0, $$0$i$i$i$i$i58 = 0, $$0$i$i$i$i212$i = 0, $$0$i$i$i$i28$i = 0, $$0$i$i$i$i39$i = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i54$i = 0, $$0$i$i$i$i59 = 0, $$0$i$i$i$i70$i = 0, $$0$i$i$i$us$i = 0, $$0$i$i$i20$i$i = 0, $$0$i$i$i214$i = 0, $$0$i$i$i34$i$i = 0, $$0$i$i$i44$i$i$i = 0, $$0$i$i$i58$i$i$i = 0, $$0$i$i$i65$i = 0, $$0$i$i$i81$i$i$i = 0, $$0$i$i$i97$i$i$i = 0, $$0$i$i37$i$i = 0, $$0$i17239 = 0, $$0$i17239$us = 0, $$0$i2123$i$i109$i = 0, $$0$i2123$i$i131$i = 0, $$0$i2123$i$i153$i = 0, $$0$i2123$i$i175$i = 0, $$0$i2123$i$i195$i = 0, $$0$i22$i$i111$i = 0, $$0$i22$i$i133$i = 0, $$0$i22$i$i155$i = 0, $$0$i22$i$i177$i = 0, $$0$i22$i$i197$i = 0, $$0$i248 = 0, $$0$i37 = 0, $$0$in$be$i$i$i$i = 0, $$0$in$be$i$i13$i$i = 0, $$0$in$be$i$i21$i$i = 0, $$0$in$be$i$i29$i$i = 0, $$0$in$be$i$i37$i$i = 0, $$0$lcssa$i = 0, $$0$lcssa32$i387 = 0, $$0$us$i = 0, $$0$us$i$1 = 0, $$0$us$i$2 = 0, $$0$us$i16243 = 0, $$0$us$i16243$us = 0, $$013$i$i$i$i = 0, $$013$i$i10$i$i = 0, $$013$i$i18$i$i = 0, $$013$i$i26$i$i = 0, $$013$i$i34$i$i = 0, $$014$i$i$i$i = 0, $$014$i$i12$i$i = 0, $$014$i$i20$i$i = 0, $$014$i$i28$i$i = 0, $$014$i$i36$i$i = 0, $$020$i$i$i$i$i = 0, $$020$i$i$i$i$i$i = 0, $$020$i$i$i$i$i47 = 0, $$020$i$i$i$i43$i = 0, $$020$i$i$i$i58$i = 0, $$020$i$i$i$i74$i = 0, $$020$off070$i = 0, $$02431$i$i235 = 0, $$02431$i84$i231 = 0, $$025138$i$i$i = 0, $$02530$i$i236 = 0, $$02530$i85$i232 = 0, $$026$i$i$i$i = 0, $$026$i$i$i$i$i = 0, $$026$i$i$i$i$i$i = 0, $$026$i$i$i$i33 = 0, $$026$i$i$i$us$i = 0, $$026$i$i$i19$i$i = 0, $$026$i$i$i33$i$i = 0, $$026$i$i$i43$i$i$i = 0, $$026$i$i$i57$i$i$i = 0, $$026$i$i$i80$i$i$i = 0, $$026$i$i$i96$i$i$i = 0, $$026139$i$i$i = 0, $$02629$i$i237 = 0, $$02629$i86$i233 = 0, $$0342741$i = 0, $$0347$lcssa$i = 0, $$0347740$i = 0, $$05$i$i$i = 0, $$05$i$i$i$i = 0, $$05$i$i$i217$i = 0, $$056$off0352$i = 0, $$056$off0353$i = 0, $$058351$i = 0, $$0743$in$i = 0, $$1$i$i = 0, $$1$i$i$i$i$i = 0, $$1$i$i49$i$i$i = 0, $$1$i$i63$i$i$i = 0, $$1$off0$i = 0, $$1343$i = 0, $$1348$i = 0, $$157$off0742$i = 0, $$159$i = 0, $$2344$i = 0, $$2349$i = 0, $$260$i = 0, $$3345$i = 0, $$3350$i = 0, $$361$i = 0, $$4346$i = 0, $$462$i = 0, $$idx80$val$cast$i = 0, $$idx82$val738$i = 0, $$pre$i24 = 0, $$pre$phi$iZ2D = 0, $$pre$phi381Z2D = 0, $$pre$phi383Z2D = 0, $$pre103$i = 0, $$pre180$i = 0, $$pre372 = 0, $$pre373 = 0, $$sink$i$i$i$i$i = 0, $$sink$i$i$i$i$i$i = 0, $$sink$i$i$i$i$i44 = 0, $$sink$i$i$i$i40$i = 0, $$sink$i$i$i$i55$i = 0, $$sink$i$i$i$i71$i = 0, $$sink230 = 0, $$sink84$i = 0, $$sink84$us$i = 0, $$sroa$0$0$i$i$i = 0, $$sroa$0$0$i$i$i$i = 0, $$sroa$0$0$i$i$i$i$i = 0, $$sroa$0$0$i$i$i35 = 0, $$sroa$0$0$i$i$us$i = 0, $$sroa$0$0$i$i22$i$i = 0, $$sroa$0$0$i$i36$i$i = 0, $$sroa$0$0$i$i46$i$i$i = 0, $$sroa$0$0$i$i60$i$i$i = 0, $$sroa$0$0$i$i83$i$i$i = 0, $$sroa$0$0$i$i99$i$i$i = 0, $$sroa$0109$0156$i = 0, $$sroa$0228$0739$i = 0, $$sroa$033$044$i$i$i$i = 0, $$sroa$033$044$i$i$i$i$i = 0, $$sroa$033$044$i$i$i$i$i$i = 0, $$sroa$033$044$i$i$i$i29 = 0, $$sroa$033$044$i$i$i$us$i = 0, $$sroa$033$044$i$i$i15$i$i = 0, $$sroa$033$044$i$i$i29$i$i = 0, $$sroa$033$044$i$i$i39$i$i$i = 0, $$sroa$033$044$i$i$i53$i$i$i = 0, $$sroa$033$044$i$i$i76$i$i$i = 0, $$sroa$033$044$i$i$i92$i$i$i = 0, $$sroa$033$142$i$i$i$i = 0, $$sroa$033$142$i$i$i$i$i = 0, $$sroa$033$142$i$i$i$i$i$i = 0, $$sroa$033$142$i$i$i$i31 = 0, $$sroa$033$142$i$i$i$us$i = 0, $$sroa$033$142$i$i$i17$i$i = 0, $$sroa$033$142$i$i$i31$i$i = 0, $$sroa$033$142$i$i$i41$i$i$i = 0, $$sroa$033$142$i$i$i55$i$i$i = 0, $$sroa$033$142$i$i$i78$i$i$i = 0, $$sroa$033$142$i$i$i94$i$i$i = 0, $$sroa$036$067$i = 0, $$sroa$046$0164$i$i = 0, $$sroa$046$068$i$i = 0, $$sroa$068$085$i = 0, $$sroa$097$0 = 0, $$sroa$097$1 = 0, $$sroa$11$0 = 0, $$sroa$13$0 = 0, $$sroa$7$1 = 0, $$sroa$7$2 = 0, $$sroa$9$2 = 0, $$sroa$9$3 = 0, $$sroa$speculated$i$i$i107$i = 0, $$sroa$speculated$i$i$i129$i = 0, $$sroa$speculated$i$i$i151$i = 0, $$sroa$speculated$i$i$i173$i = 0, $$sroa$speculated$i$i$i193$i = 0, $0 = 0, $1 = 0, $10 = 0, $1003 = 0, $1007 = 0, $1009 = 0, $1011 = 0, $1013 = 0, $1016 = 0, $1020 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1030 = 0, $1033 = 0, $1036 = 0, $1038 = 0, $104 = 0, $1041 = 0, $1043 = 0, $1045 = 0, $1048 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1058 = 0, $1059 = 0, $1061 = 0, $1067 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1099 = 0, $11 = 0, $1100 = 0, $1103 = 0, $1108 = 0, $1112 = 0, $1116 = 0, $1117 = 0, $112 = 0, $1120 = 0, $1128 = 0, $1133 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1145 = 0, $1146 = 0, $115 = 0, $1151 = 0, $1152 = 0, $1155 = 0, $1159 = 0, $1162 = 0, $1163 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1172 = 0, $1178 = 0, $1179 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1188 = 0, $1191 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $120 = 0, $1200 = 0, $1202 = 0, $1204 = 0, $1206 = 0, $121 = 0, $1215 = 0, $1226 = 0, $1227 = 0, $1233 = 0, $1234 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1245 = 0, $1248 = 0, $125 = 0, $1250 = 0, $1259 = 0, $126 = 0, $1265 = 0, $1266 = 0, $127 = 0, $1272 = 0, $1273 = 0, $1277 = 0, $1278 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1284 = 0, $1287 = 0, $1289 = 0, $1298 = 0, $13 = 0, $130 = 0, $1304 = 0, $1305 = 0, $132 = 0, $1321 = 0, $1322 = 0, $1327 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $134 = 0, $1341 = 0, $1342 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1348 = 0, $1351 = 0, $1353 = 0, $136 = 0, $1362 = 0, $1367 = 0, $1369 = 0, $1371 = 0, $1372 = 0, $1378 = 0, $1379 = 0, $1383 = 0, $1384 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1390 = 0, $1393 = 0, $1395 = 0, $14 = 0, $1404 = 0, $1411 = 0, $1416 = 0, $1418 = 0, $1426 = 0, $1435 = 0, $1436 = 0, $1441 = 0, $1443 = 0, $1448 = 0, $145 = 0, $1450 = 0, $1452 = 0, $1453 = 0, $1460 = 0, $1465 = 0, $1466 = 0, $1469 = 0, $1470 = 0, $1474 = 0, $1482 = 0, $1488 = 0, $1490 = 0, $1493 = 0, $1498 = 0, $1499 = 0, $15 = 0, $1502 = 0, $1510 = 0, $1517 = 0, $152 = 0, $1524 = 0, $1526 = 0, $1527 = 0, $1534 = 0, $154 = 0, $1540 = 0, $1543 = 0, $1544 = 0, $1546 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1552 = 0, $1566 = 0, $1571 = 0, $1573 = 0, $1575 = 0, $1576 = 0, $1584 = 0, $1590 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $170 = 0, $172 = 0, $174 = 0, $176 = 0, $185 = 0, $192 = 0, $193 = 0, $196 = 0, $198 = 0, $2 = 0, $202 = 0, $203 = 0, $209 = 0, $21 = 0, $214 = 0, $218 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $227 = 0, $228 = 0, $231 = 0, $233 = 0, $242 = 0, $245 = 0, $253 = 0, $261 = 0, $270 = 0, $275 = 0, $276 = 0, $28 = 0, $280 = 0, $286 = 0, $291 = 0, $292 = 0, $293 = 0, $296 = 0, $297 = 0, $3 = 0, $30 = 0, $303 = 0, $309 = 0, $315 = 0, $321 = 0, $327 = 0, $333 = 0, $338 = 0, $339 = 0, $341 = 0, $342 = 0, $344 = 0, $346 = 0, $348 = 0, $349 = 0, $350 = 0, $351 = 0, $353 = 0, $354 = 0, $355 = 0, $357 = 0, $358 = 0, $360 = 0, $364 = 0, $367 = 0, $370 = 0, $372 = 0, $374 = 0, $376 = 0, $385 = 0, $395 = 0, $396 = 0, $398 = 0, $4 = 0, $402 = 0, $405 = 0, $408 = 0, $410 = 0, $412 = 0, $414 = 0, $423 = 0, $430 = 0, $441 = 0, $443 = 0, $445 = 0, $446 = 0, $449 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $473 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $480 = 0, $481 = 0, $482 = 0, $485 = 0, $487 = 0, $488 = 0, $490 = 0, $497 = 0, $498 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $507 = 0, $509 = 0, $511 = 0, $513 = 0, $52 = 0, $522 = 0, $527 = 0, $53 = 0, $532 = 0, $534 = 0, $535 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $546 = 0, $547 = 0, $549 = 0, $550 = 0, $56 = 0, $562 = 0, $565 = 0, $567 = 0, $571 = 0, $572 = 0, $578 = 0, $584 = 0, $588 = 0, $59 = 0, $591 = 0, $592 = 0, $595 = 0, $597 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $603 = 0, $606 = 0, $608 = 0, $61 = 0, $62 = 0, $620 = 0, $623 = 0, $625 = 0, $629 = 0, $63 = 0, $630 = 0, $636 = 0, $64 = 0, $642 = 0, $646 = 0, $649 = 0, $65 = 0, $654 = 0, $656 = 0, $659 = 0, $66 = 0, $661 = 0, $665 = 0, $666 = 0, $67 = 0, $672 = 0, $678 = 0, $682 = 0, $686 = 0, $689 = 0, $69 = 0, $691 = 0, $695 = 0, $696 = 0, $7 = 0, $702 = 0, $708 = 0, $712 = 0, $716 = 0, $718 = 0, $72 = 0, $721 = 0, $725 = 0, $728 = 0, $729 = 0, $73 = 0, $731 = 0, $733 = 0, $735 = 0, $736 = 0, $737 = 0, $739 = 0, $74 = 0, $741 = 0, $742 = 0, $744 = 0, $745 = 0, $748 = 0, $75 = 0, $750 = 0, $753 = 0, $755 = 0, $758 = 0, $760 = 0, $762 = 0, $765 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $775 = 0, $776 = 0, $778 = 0, $786 = 0, $788 = 0, $789 = 0, $790 = 0, $792 = 0, $796 = 0, $799 = 0, $8 = 0, $80 = 0, $802 = 0, $804 = 0, $807 = 0, $809 = 0, $811 = 0, $814 = 0, $817 = 0, $818 = 0, $819 = 0, $824 = 0, $825 = 0, $827 = 0, $83 = 0, $835 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $841 = 0, $845 = 0, $848 = 0, $85 = 0, $851 = 0, $853 = 0, $856 = 0, $858 = 0, $86 = 0, $860 = 0, $863 = 0, $866 = 0, $867 = 0, $868 = 0, $873 = 0, $874 = 0, $876 = 0, $884 = 0, $886 = 0, $887 = 0, $888 = 0, $89 = 0, $890 = 0, $894 = 0, $897 = 0, $9 = 0, $900 = 0, $902 = 0, $905 = 0, $907 = 0, $909 = 0, $91 = 0, $912 = 0, $915 = 0, $916 = 0, $917 = 0, $922 = 0, $923 = 0, $925 = 0, $93 = 0, $932 = 0, $933 = 0, $934 = 0, $936 = 0, $938 = 0, $939 = 0, $941 = 0, $943 = 0, $949 = 0, $95 = 0, $951 = 0, $957 = 0, $959 = 0, $965 = 0, $967 = 0, $973 = 0, $975 = 0, $980 = 0, $982 = 0, $984 = 0, $986 = 0, $990 = 0, $991 = 0, $997 = 0, $or$cond$i40 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer14 = 0, $vararg_buffer18 = 0, $vararg_buffer2 = 0, $vararg_buffer22 = 0, $vararg_buffer26 = 0, $vararg_buffer30 = 0, $vararg_buffer36 = 0, $vararg_buffer43 = 0, $vararg_buffer6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368 | 0;
 $vararg_buffer43 = sp + 160 | 0;
 $vararg_buffer36 = sp + 136 | 0;
 $vararg_buffer30 = sp + 120 | 0;
 $vararg_buffer26 = sp + 104 | 0;
 $vararg_buffer22 = sp + 88 | 0;
 $vararg_buffer18 = sp + 72 | 0;
 $vararg_buffer14 = sp + 56 | 0;
 $vararg_buffer10 = sp + 40 | 0;
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 344 | 0;
 $1 = sp + 332 | 0;
 $2 = sp + 320 | 0;
 $3 = sp + 308 | 0;
 $4 = sp + 296 | 0;
 $5 = sp + 284 | 0;
 $6 = sp + 272 | 0;
 $7 = sp + 260 | 0;
 $8 = sp + 248 | 0;
 $9 = sp + 236 | 0;
 $10 = sp + 176 | 0;
 $11 = sp + 164 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, HEAP32[27127] | 0);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($4, $3) | 0;
 $13 = $4 + 11 | 0;
 $14 = HEAP8[$13 >> 0] | 0;
 $15 = $14 << 24 >> 24 < 0;
 $16 = $4 + 4 | 0;
 if (!(($15 ? HEAP32[$16 >> 2] | 0 : $14 & 255) | 0)) {
  $$sroa$097$1 = 0;
  $$sroa$11$0 = 0;
  $$sroa$7$2 = 0;
  $$sroa$9$3 = 0;
 } else {
  $21 = HEAP32[$4 >> 2] | 0;
  if ((HEAP8[($15 ? $21 : $4) >> 0] | 0) == 34) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($0, $4, 1, -1, $4);
   if ((HEAP8[$13 >> 0] | 0) < 0) {
    HEAP8[HEAP32[$4 >> 2] >> 0] = 0;
    HEAP32[$16 >> 2] = 0;
   } else {
    HEAP8[$4 >> 0] = 0;
    HEAP8[$13 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($4, 0);
   HEAP32[$4 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $$pre$phi$iZ2D = $4;
   $28 = HEAP8[$13 >> 0] | 0;
   $30 = HEAP32[$4 >> 2] | 0;
  } else {
   $$pre$phi$iZ2D = $4;
   $28 = $14;
   $30 = $21;
  }
  if ((HEAP8[($28 << 24 >> 24 < 0 ? $30 : $4) >> 0] | 0) == 45) {
   do {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($0, $4, 1, -1, $$pre$phi$iZ2D);
    if ((HEAP8[$13 >> 0] | 0) < 0) {
     HEAP8[HEAP32[$4 >> 2] >> 0] = 0;
     HEAP32[$16 >> 2] = 0;
    } else {
     HEAP8[$4 >> 0] = 0;
     HEAP8[$13 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($4, 0);
    HEAP32[$4 >> 2] = HEAP32[$0 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   } while ((HEAP8[((HEAP8[$13 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4) >> 0] | 0) == 45);
   $$0$us$i = 0;
  } else $$0$us$i = 0;
  while (1) {
   if (__ZN6google12_GLOBAL__N_1L18RemoveTrailingCharEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc($4, 63) | 0) {
    $$0$us$i$1 = $$0$us$i;
    label = 550;
    break;
   }
   if (($$0$us$i | 0) >= 1) {
    $$0$lcssa32$i387 = $$0$us$i;
    $$sroa$097$0 = 0;
    $$sroa$7$1 = 0;
    $$sroa$9$2 = 0;
    break;
   }
   if (!(__ZN6google12_GLOBAL__N_1L18RemoveTrailingCharEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc($4, 43) | 0)) {
    $$0$lcssa32$i387 = $$0$us$i;
    $$sroa$097$0 = 0;
    $$sroa$7$1 = 0;
    $$sroa$9$2 = 0;
    break;
   }
   $$0$us$i = $$0$us$i + 1 | 0;
  }
  L23 : do if ((label | 0) == 550) {
   while (1) {
    label = 0;
    if (__ZN6google12_GLOBAL__N_1L18RemoveTrailingCharEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc($4, 63) | 0) {
     $$0$us$i$2 = $$0$us$i$1;
     break;
    }
    if (($$0$us$i$1 | 0) >= 1) {
     $$0$lcssa32$i387 = $$0$us$i$1;
     $$sroa$097$0 = 1;
     $$sroa$7$1 = 0;
     $$sroa$9$2 = 0;
     break L23;
    }
    if (!(__ZN6google12_GLOBAL__N_1L18RemoveTrailingCharEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc($4, 43) | 0)) {
     $$0$lcssa32$i387 = $$0$us$i$1;
     $$sroa$097$0 = 1;
     $$sroa$7$1 = 0;
     $$sroa$9$2 = 0;
     break L23;
    }
    $$0$us$i$1 = $$0$us$i$1 + 1 | 0;
    label = 550;
   }
   while (1) {
    $1590 = ($$0$us$i$2 | 0) < 1;
    if (__ZN6google12_GLOBAL__N_1L18RemoveTrailingCharEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc($4, 63) | 0) break;
    if (!$1590) {
     $$0$lcssa32$i387 = $$0$us$i$2;
     $$sroa$097$0 = 1;
     $$sroa$7$1 = 1;
     $$sroa$9$2 = 0;
     break L23;
    }
    if (!(__ZN6google12_GLOBAL__N_1L18RemoveTrailingCharEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc($4, 43) | 0)) {
     $$0$lcssa32$i387 = $$0$us$i$2;
     $$sroa$097$0 = 1;
     $$sroa$7$1 = 1;
     $$sroa$9$2 = 0;
     break L23;
    }
    $$0$us$i$2 = $$0$us$i$2 + 1 | 0;
   }
   if ($1590) {
    $$0$i248 = $$0$us$i$2;
    while (1) {
     if (!(__ZN6google12_GLOBAL__N_1L18RemoveTrailingCharEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc($4, 43) | 0)) {
      $$0$lcssa32$i387 = $$0$i248;
      $$sroa$097$0 = 1;
      $$sroa$7$1 = 1;
      $$sroa$9$2 = 1;
      break L23;
     }
     $46 = $$0$i248 + 1 | 0;
     if (($$0$i248 | 0) < 0) $$0$i248 = $46; else {
      $$0$lcssa32$i387 = $46;
      $$sroa$097$0 = 1;
      $$sroa$7$1 = 1;
      $$sroa$9$2 = 1;
      break;
     }
    }
   } else {
    $$0$lcssa32$i387 = 1;
    $$sroa$097$0 = 1;
    $$sroa$7$1 = 1;
    $$sroa$9$2 = 1;
   }
  } while (0);
  $$sroa$097$1 = $$sroa$097$0;
  $$sroa$11$0 = ($$0$lcssa32$i387 | 0) > 0 & 1;
  $$sroa$7$2 = $$sroa$7$1;
  $$sroa$9$3 = $$sroa$9$2;
 }
 HEAP32[$5 >> 2] = 0;
 $50 = $5 + 4 | 0;
 HEAP32[$50 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 $52 = $6 + 4 | 0;
 HEAP32[$52 >> 2] = 0;
 $53 = $6 + 8 | 0;
 HEAP32[$53 >> 2] = 0;
 $54 = $6 + 4 | 0;
 HEAP32[$6 >> 2] = $54;
 __ZN6google11GetAllFlagsEPNSt3__26vectorINS_19CommandLineFlagInfoENS0_9allocatorIS2_EEEE($5);
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($6, HEAP32[$54 >> 2] | 0);
 HEAP32[$53 >> 2] = 0;
 HEAP32[$6 >> 2] = $54;
 HEAP32[$54 >> 2] = 0;
 $56 = HEAP32[$5 >> 2] | 0;
 if (($56 | 0) == (HEAP32[$50 >> 2] | 0)) {
  $$pre$phi381Z2D = $7 + 11 | 0;
  $$pre$phi383Z2D = $7 + 4 | 0;
 } else {
  $59 = $54;
  $60 = $7 + 11 | 0;
  $61 = $7 + 4 | 0;
  $62 = $$sroa$7$2 << 24 >> 24 == 0;
  $63 = $$sroa$9$3 << 24 >> 24 == 0;
  $64 = $$sroa$097$1 << 24 >> 24 != 0;
  $$020$off070$i = 1;
  $$sroa$036$067$i = $56;
  while (1) {
   $65 = $$sroa$036$067$i + 11 | 0;
   $66 = HEAP8[$65 >> 0] | 0;
   $67 = $66 << 24 >> 24 < 0;
   $69 = $$sroa$036$067$i + 4 | 0;
   $72 = $67 ? HEAP32[$$sroa$036$067$i >> 2] | 0 : $$sroa$036$067$i;
   $73 = $67 ? HEAP32[$69 >> 2] | 0 : $66 & 255;
   $74 = HEAP8[$13 >> 0] | 0;
   $75 = $74 << 24 >> 24 < 0;
   $77 = $75 ? HEAP32[$4 >> 2] | 0 : $4;
   $80 = $75 ? HEAP32[$16 >> 2] | 0 : $74 & 255;
   if ($73 >>> 0 < $80 >>> 0) label = 36; else if (!$80) label = 62; else {
    $83 = $72 + $73 | 0;
    $84 = $77 + $80 | 0;
    $85 = $72;
    $86 = $83;
    L48 : do if (($73 | 0) < ($80 | 0)) $$sroa$0$0$i$i$i$i = $86; else {
     $89 = $83 + (1 - $80) | 0;
     if (($89 | 0) == ($72 | 0)) $$sroa$0$0$i$i$i$i = $86; else {
      $91 = HEAP8[$77 >> 0] | 0;
      $$sroa$033$044$i$i$i$i$i = $85;
      $1593 = $72;
      while (1) {
       $$sroa$033$142$i$i$i$i$i = $$sroa$033$044$i$i$i$i$i;
       $93 = $1593;
       while (1) {
        if ((HEAP8[$93 >> 0] | 0) == $91 << 24 >> 24) {
         $$0$i$i$i$i28$i = $77;
         $$026$i$i$i$i$i = $93;
         break;
        }
        $95 = $93 + 1 | 0;
        if (($95 | 0) == ($89 | 0)) {
         $$sroa$0$0$i$i$i$i = $86;
         break L48;
        } else {
         $$sroa$033$142$i$i$i$i$i = $95;
         $93 = $95;
        }
       }
       do {
        $$0$i$i$i$i28$i = $$0$i$i$i$i28$i + 1 | 0;
        if (($$0$i$i$i$i28$i | 0) == ($84 | 0)) {
         $$sroa$0$0$i$i$i$i = $$sroa$033$142$i$i$i$i$i;
         break L48;
        }
        $$026$i$i$i$i$i = $$026$i$i$i$i$i + 1 | 0;
       } while ((HEAP8[$$026$i$i$i$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i$i28$i >> 0] | 0));
       $104 = $93 + 1 | 0;
       if (($104 | 0) == ($89 | 0)) {
        $$sroa$0$0$i$i$i$i = $86;
        break;
       } else {
        $$sroa$033$044$i$i$i$i$i = $104;
        $1593 = $104;
       }
      }
     }
    } while (0);
    $109 = $$sroa$0$0$i$i$i$i - $85 | 0;
    if (($$sroa$0$0$i$i$i$i | 0) == ($83 | 0)) label = 36; else if (($109 | 0) == 0 | $64 & ($109 | 0) != -1) label = 62; else label = 36;
   }
   do if ((label | 0) == 36) {
    label = 0;
    if (!$62) {
     $112 = $$sroa$036$067$i + 60 | 0;
     $114 = HEAP8[$112 + 11 >> 0] | 0;
     $115 = $114 << 24 >> 24 < 0;
     $120 = $115 ? HEAP32[$112 >> 2] | 0 : $112;
     $121 = $115 ? HEAP32[$$sroa$036$067$i + 64 >> 2] | 0 : $114 & 255;
     if ($121 >>> 0 >= $80 >>> 0) {
      if (!$80) {
       label = 62;
       break;
      }
      $124 = $120 + $121 | 0;
      $125 = $77 + $80 | 0;
      $126 = $120;
      $127 = $124;
      L68 : do if (($121 | 0) < ($80 | 0)) $$sroa$0$0$i$i36$i$i = $127; else {
       $130 = $124 + (1 - $80) | 0;
       if (($130 | 0) == ($120 | 0)) $$sroa$0$0$i$i36$i$i = $127; else {
        $132 = HEAP8[$77 >> 0] | 0;
        $$sroa$033$044$i$i$i29$i$i = $126;
        $1594 = $120;
        while (1) {
         $$sroa$033$142$i$i$i31$i$i = $$sroa$033$044$i$i$i29$i$i;
         $134 = $1594;
         while (1) {
          if ((HEAP8[$134 >> 0] | 0) == $132 << 24 >> 24) {
           $$0$i$i$i34$i$i = $77;
           $$026$i$i$i33$i$i = $134;
           break;
          }
          $136 = $134 + 1 | 0;
          if (($136 | 0) == ($130 | 0)) {
           $$sroa$0$0$i$i36$i$i = $127;
           break L68;
          } else {
           $$sroa$033$142$i$i$i31$i$i = $136;
           $134 = $136;
          }
         }
         do {
          $$0$i$i$i34$i$i = $$0$i$i$i34$i$i + 1 | 0;
          if (($$0$i$i$i34$i$i | 0) == ($125 | 0)) {
           $$sroa$0$0$i$i36$i$i = $$sroa$033$142$i$i$i31$i$i;
           break L68;
          }
          $$026$i$i$i33$i$i = $$026$i$i$i33$i$i + 1 | 0;
         } while ((HEAP8[$$026$i$i$i33$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i34$i$i >> 0] | 0));
         $145 = $134 + 1 | 0;
         if (($145 | 0) == ($130 | 0)) {
          $$sroa$0$0$i$i36$i$i = $127;
          break;
         } else {
          $$sroa$033$044$i$i$i29$i$i = $145;
          $1594 = $145;
         }
        }
       }
      } while (0);
      if (!(($$sroa$0$0$i$i36$i$i | 0) == ($124 | 0) | ($$sroa$0$0$i$i36$i$i - $126 | 0) == -1)) {
       label = 62;
       break;
      }
     }
    }
    if ($63) $$1$off0$i = $$020$off070$i; else {
     $152 = $$sroa$036$067$i + 24 | 0;
     $154 = HEAP8[$152 + 11 >> 0] | 0;
     $155 = $154 << 24 >> 24 < 0;
     $160 = $155 ? HEAP32[$152 >> 2] | 0 : $152;
     $161 = $155 ? HEAP32[$$sroa$036$067$i + 28 >> 2] | 0 : $154 & 255;
     if ($161 >>> 0 < $80 >>> 0) $$1$off0$i = $$020$off070$i; else if (!$80) label = 62; else {
      $164 = $160 + $161 | 0;
      $165 = $77 + $80 | 0;
      $166 = $160;
      $167 = $164;
      L85 : do if (($161 | 0) < ($80 | 0)) $$sroa$0$0$i$i22$i$i = $167; else {
       $170 = $164 + (1 - $80) | 0;
       if (($170 | 0) == ($160 | 0)) $$sroa$0$0$i$i22$i$i = $167; else {
        $172 = HEAP8[$77 >> 0] | 0;
        $$sroa$033$044$i$i$i15$i$i = $166;
        $1595 = $160;
        while (1) {
         $$sroa$033$142$i$i$i17$i$i = $$sroa$033$044$i$i$i15$i$i;
         $174 = $1595;
         while (1) {
          if ((HEAP8[$174 >> 0] | 0) == $172 << 24 >> 24) {
           $$0$i$i$i20$i$i = $77;
           $$026$i$i$i19$i$i = $174;
           break;
          }
          $176 = $174 + 1 | 0;
          if (($176 | 0) == ($170 | 0)) {
           $$sroa$0$0$i$i22$i$i = $167;
           break L85;
          } else {
           $$sroa$033$142$i$i$i17$i$i = $176;
           $174 = $176;
          }
         }
         do {
          $$0$i$i$i20$i$i = $$0$i$i$i20$i$i + 1 | 0;
          if (($$0$i$i$i20$i$i | 0) == ($165 | 0)) {
           $$sroa$0$0$i$i22$i$i = $$sroa$033$142$i$i$i17$i$i;
           break L85;
          }
          $$026$i$i$i19$i$i = $$026$i$i$i19$i$i + 1 | 0;
         } while ((HEAP8[$$026$i$i$i19$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i20$i$i >> 0] | 0));
         $185 = $174 + 1 | 0;
         if (($185 | 0) == ($170 | 0)) {
          $$sroa$0$0$i$i22$i$i = $167;
          break;
         } else {
          $$sroa$033$044$i$i$i15$i$i = $185;
          $1595 = $185;
         }
        }
       }
      } while (0);
      if (($$sroa$0$0$i$i22$i$i | 0) == ($164 | 0) | ($$sroa$0$0$i$i22$i$i - $166 | 0) == -1) $$1$off0$i = $$020$off070$i; else label = 62;
     }
    }
   } while (0);
   do if ((label | 0) == 62) {
    label = 0;
    $192 = $$sroa$036$067$i;
    $193 = HEAP32[$54 >> 2] | 0;
    do if (!$193) {
     HEAP32[$0 >> 2] = $54;
     $$0$19$i$i$i$i = $59;
     $$020$i$i$i$i$i = $54;
    } else {
     $$0$i$i$i$i$i = $193;
     while (1) {
      $196 = HEAP32[$$0$i$i$i$i$i + 16 >> 2] | 0;
      if ($$sroa$036$067$i >>> 0 < $196 >>> 0) {
       $198 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
       if (!$198) {
        label = 65;
        break;
       } else $$sink$i$i$i$i$i = $198;
      } else {
       if ($196 >>> 0 >= $$sroa$036$067$i >>> 0) {
        label = 70;
        break;
       }
       $202 = $$0$i$i$i$i$i + 4 | 0;
       $203 = HEAP32[$202 >> 2] | 0;
       if (!$203) {
        label = 69;
        break;
       } else $$sink$i$i$i$i$i = $203;
      }
      $$0$i$i$i$i$i = $$sink$i$i$i$i$i;
     }
     if ((label | 0) == 65) {
      label = 0;
      HEAP32[$0 >> 2] = $$0$i$i$i$i$i;
      $$0$19$i$i$i$i = $$0$i$i$i$i$i;
      $$020$i$i$i$i$i = $$0$i$i$i$i$i;
      break;
     } else if ((label | 0) == 69) {
      label = 0;
      HEAP32[$0 >> 2] = $$0$i$i$i$i$i;
      $$0$19$i$i$i$i = $$0$i$i$i$i$i;
      $$020$i$i$i$i$i = $202;
      break;
     } else if ((label | 0) == 70) {
      label = 0;
      HEAP32[$0 >> 2] = $$0$i$i$i$i$i;
      $$0$19$i$i$i$i = $$0$i$i$i$i$i;
      $$020$i$i$i$i$i = $0;
      break;
     }
    } while (0);
    if (!(HEAP32[$$020$i$i$i$i$i >> 2] | 0)) {
     $209 = __Znwj(20) | 0;
     HEAP32[$209 + 16 >> 2] = $192;
     HEAP32[$209 >> 2] = 0;
     HEAP32[$209 + 4 >> 2] = 0;
     HEAP32[$209 + 8 >> 2] = $$0$19$i$i$i$i;
     HEAP32[$$020$i$i$i$i$i >> 2] = $209;
     $214 = HEAP32[HEAP32[$6 >> 2] >> 2] | 0;
     if (!$214) $218 = $209; else {
      HEAP32[$6 >> 2] = $214;
      $218 = HEAP32[$$020$i$i$i$i$i >> 2] | 0;
     }
     __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$52 >> 2] | 0, $218);
     HEAP32[$53 >> 2] = (HEAP32[$53 >> 2] | 0) + 1;
    }
    if ($$020$off070$i) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($7, $$sroa$036$067$i) | 0;
     $$1$off0$i = 0;
     break;
    }
    $221 = HEAP8[$60 >> 0] | 0;
    $222 = $221 << 24 >> 24 < 0;
    $223 = HEAP32[$61 >> 2] | 0;
    $224 = $221 & 255;
    if (($222 ? $223 : $224) | 0) {
     $227 = HEAP8[$65 >> 0] | 0;
     $228 = $227 << 24 >> 24 < 0;
     if ($228) $231 = HEAP32[$69 >> 2] | 0; else $231 = $227 & 255;
     if ($231 | 0) {
      $233 = $227 & 255;
      L130 : do if ($222) if (!$223) $$0$lcssa$i = 0; else {
       $245 = HEAP32[$7 >> 2] | 0;
       if (!$228) {
        $$0$us$i16243 = 0;
        while (1) {
         if ($$0$us$i16243 >>> 0 >= $233 >>> 0) {
          $$0$lcssa$i = $$0$us$i16243;
          break L130;
         }
         if ((HEAP8[$245 + $$0$us$i16243 >> 0] | 0) != (HEAP8[$$sroa$036$067$i + $$0$us$i16243 >> 0] | 0)) {
          $$0$lcssa$i = $$0$us$i16243;
          break L130;
         }
         $261 = $$0$us$i16243 + 1 | 0;
         if ($261 >>> 0 < $223 >>> 0) $$0$us$i16243 = $261; else {
          $$0$lcssa$i = $261;
          break L130;
         }
        }
       }
       $$pre373 = HEAP32[$69 >> 2] | 0;
       $$0$us$i16243$us = 0;
       while (1) {
        if ($$0$us$i16243$us >>> 0 >= $$pre373 >>> 0) {
         $$0$lcssa$i = $$0$us$i16243$us;
         break L130;
        }
        if ((HEAP8[$245 + $$0$us$i16243$us >> 0] | 0) != (HEAP8[(HEAP32[$$sroa$036$067$i >> 2] | 0) + $$0$us$i16243$us >> 0] | 0)) {
         $$0$lcssa$i = $$0$us$i16243$us;
         break L130;
        }
        $253 = $$0$us$i16243$us + 1 | 0;
        if ($253 >>> 0 < $223 >>> 0) $$0$us$i16243$us = $253; else {
         $$0$lcssa$i = $253;
         break;
        }
       }
      } else if (!($221 << 24 >> 24)) $$0$lcssa$i = 0; else {
       if (!$228) {
        $$0$i17239 = 0;
        while (1) {
         if ($$0$i17239 >>> 0 >= $233 >>> 0) {
          $$0$lcssa$i = $$0$i17239;
          break L130;
         }
         if ((HEAP8[$7 + $$0$i17239 >> 0] | 0) != (HEAP8[$$sroa$036$067$i + $$0$i17239 >> 0] | 0)) {
          $$0$lcssa$i = $$0$i17239;
          break L130;
         }
         $270 = $$0$i17239 + 1 | 0;
         if ($270 >>> 0 < $224 >>> 0) $$0$i17239 = $270; else {
          $$0$lcssa$i = $270;
          break L130;
         }
        }
       }
       $$pre372 = HEAP32[$69 >> 2] | 0;
       $$0$i17239$us = 0;
       while (1) {
        if ($$0$i17239$us >>> 0 >= $$pre372 >>> 0) {
         $$0$lcssa$i = $$0$i17239$us;
         break L130;
        }
        if ((HEAP8[$7 + $$0$i17239$us >> 0] | 0) != (HEAP8[(HEAP32[$$sroa$036$067$i >> 2] | 0) + $$0$i17239$us >> 0] | 0)) {
         $$0$lcssa$i = $$0$i17239$us;
         break L130;
        }
        $242 = $$0$i17239$us + 1 | 0;
        if ($242 >>> 0 < $224 >>> 0) $$0$i17239$us = $242; else {
         $$0$lcssa$i = $242;
         break;
        }
       }
      } while (0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5eraseEjj($7, $$0$lcssa$i, -1) | 0;
      $$1$off0$i = 0;
      break;
     }
    }
    if ($222) {
     HEAP8[HEAP32[$7 >> 2] >> 0] = 0;
     HEAP32[$61 >> 2] = 0;
     $$1$off0$i = 0;
     break;
    } else {
     HEAP8[$7 >> 0] = 0;
     HEAP8[$60 >> 0] = 0;
     $$1$off0$i = 0;
     break;
    }
   } while (0);
   $$sroa$036$067$i = $$sroa$036$067$i + 80 | 0;
   if (($$sroa$036$067$i | 0) == (HEAP32[$50 >> 2] | 0)) {
    $$pre$phi381Z2D = $60;
    $$pre$phi383Z2D = $61;
    break;
   } else $$020$off070$i = $$1$off0$i;
  }
 }
 $275 = HEAP8[$$pre$phi381Z2D >> 0] | 0;
 $276 = $275 << 24 >> 24 < 0;
 $280 = HEAP8[$13 >> 0] | 0;
 if (($276 ? HEAP32[$$pre$phi383Z2D >> 2] | 0 : $275 & 255) >>> 0 > ($280 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $280 & 255) >>> 0) {
  $286 = HEAP32[17382] | 0;
  HEAP32[$vararg_buffer >> 2] = $276 ? HEAP32[$7 >> 2] | 0 : $7;
  _fprintf($286, 92820, $vararg_buffer) | 0;
 } else if (HEAP32[$53 >> 2] | 0) {
  HEAP32[$8 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  HEAP32[$9 + 8 >> 2] = 0;
  $291 = $8 + 11 | 0;
  HEAP8[$8 >> 0] = 0;
  HEAP8[$291 >> 0] = 0;
  $292 = $9 + 11 | 0;
  HEAP8[$9 >> 0] = 0;
  HEAP8[$292 >> 0] = 0;
  HEAP32[$1 >> 2] = 0;
  $293 = $1 + 4 | 0;
  HEAP32[$293 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  HEAP32[$vararg_buffer2 >> 2] = __ZN6google26ProgramInvocationShortNameEv() | 0;
  HEAP32[$vararg_buffer2 + 4 >> 2] = 102189;
  __ZN6google12StringPrintfEPKcz($0, 92825, $vararg_buffer2);
  $296 = HEAP32[$293 >> 2] | 0;
  $297 = $1 + 8 | 0;
  if ($296 >>> 0 < (HEAP32[$297 >> 2] | 0) >>> 0) {
   HEAP32[$296 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$296 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
   HEAP32[$296 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + 12;
  } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($1, $0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  HEAP32[$vararg_buffer6 >> 2] = __ZN6google26ProgramInvocationShortNameEv() | 0;
  HEAP32[$vararg_buffer6 + 4 >> 2] = 92831;
  __ZN6google12StringPrintfEPKcz($vararg_buffer2, 92825, $vararg_buffer6);
  $303 = HEAP32[$293 >> 2] | 0;
  if ($303 >>> 0 < (HEAP32[$297 >> 2] | 0) >>> 0) {
   HEAP32[$303 >> 2] = HEAP32[$vararg_buffer2 >> 2];
   HEAP32[$303 + 4 >> 2] = HEAP32[$vararg_buffer2 + 4 >> 2];
   HEAP32[$303 + 8 >> 2] = HEAP32[$vararg_buffer2 + 8 >> 2];
   HEAP32[$vararg_buffer2 >> 2] = 0;
   HEAP32[$vararg_buffer2 + 4 >> 2] = 0;
   HEAP32[$vararg_buffer2 + 8 >> 2] = 0;
   HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + 12;
  } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($1, $vararg_buffer2);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer2);
  HEAP32[$vararg_buffer10 >> 2] = __ZN6google26ProgramInvocationShortNameEv() | 0;
  HEAP32[$vararg_buffer10 + 4 >> 2] = 92838;
  __ZN6google12StringPrintfEPKcz($vararg_buffer6, 92825, $vararg_buffer10);
  $309 = HEAP32[$293 >> 2] | 0;
  if ($309 >>> 0 < (HEAP32[$297 >> 2] | 0) >>> 0) {
   HEAP32[$309 >> 2] = HEAP32[$vararg_buffer6 >> 2];
   HEAP32[$309 + 4 >> 2] = HEAP32[$vararg_buffer6 + 4 >> 2];
   HEAP32[$309 + 8 >> 2] = HEAP32[$vararg_buffer6 + 8 >> 2];
   HEAP32[$vararg_buffer6 >> 2] = 0;
   HEAP32[$vararg_buffer6 + 4 >> 2] = 0;
   HEAP32[$vararg_buffer6 + 8 >> 2] = 0;
   HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + 12;
  } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($1, $vararg_buffer6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer6);
  HEAP32[$vararg_buffer14 >> 2] = __ZN6google26ProgramInvocationShortNameEv() | 0;
  HEAP32[$vararg_buffer14 + 4 >> 2] = 92845;
  __ZN6google12StringPrintfEPKcz($vararg_buffer10, 92825, $vararg_buffer14);
  $315 = HEAP32[$293 >> 2] | 0;
  if ($315 >>> 0 < (HEAP32[$297 >> 2] | 0) >>> 0) {
   HEAP32[$315 >> 2] = HEAP32[$vararg_buffer10 >> 2];
   HEAP32[$315 + 4 >> 2] = HEAP32[$vararg_buffer10 + 4 >> 2];
   HEAP32[$315 + 8 >> 2] = HEAP32[$vararg_buffer10 + 8 >> 2];
   HEAP32[$vararg_buffer10 >> 2] = 0;
   HEAP32[$vararg_buffer10 + 4 >> 2] = 0;
   HEAP32[$vararg_buffer10 + 8 >> 2] = 0;
   HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + 12;
  } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($1, $vararg_buffer10);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer10);
  HEAP32[$vararg_buffer18 >> 2] = __ZN6google26ProgramInvocationShortNameEv() | 0;
  HEAP32[$vararg_buffer18 + 4 >> 2] = 92852;
  __ZN6google12StringPrintfEPKcz($vararg_buffer14, 92825, $vararg_buffer18);
  $321 = HEAP32[$293 >> 2] | 0;
  if ($321 >>> 0 < (HEAP32[$297 >> 2] | 0) >>> 0) {
   HEAP32[$321 >> 2] = HEAP32[$vararg_buffer14 >> 2];
   HEAP32[$321 + 4 >> 2] = HEAP32[$vararg_buffer14 + 4 >> 2];
   HEAP32[$321 + 8 >> 2] = HEAP32[$vararg_buffer14 + 8 >> 2];
   HEAP32[$vararg_buffer14 >> 2] = 0;
   HEAP32[$vararg_buffer14 + 4 >> 2] = 0;
   HEAP32[$vararg_buffer14 + 8 >> 2] = 0;
   HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + 12;
  } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($1, $vararg_buffer14);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer14);
  HEAP32[$vararg_buffer22 >> 2] = __ZN6google26ProgramInvocationShortNameEv() | 0;
  HEAP32[$vararg_buffer22 + 4 >> 2] = 92859;
  __ZN6google12StringPrintfEPKcz($vararg_buffer18, 92825, $vararg_buffer22);
  $327 = HEAP32[$293 >> 2] | 0;
  if ($327 >>> 0 < (HEAP32[$297 >> 2] | 0) >>> 0) {
   HEAP32[$327 >> 2] = HEAP32[$vararg_buffer18 >> 2];
   HEAP32[$327 + 4 >> 2] = HEAP32[$vararg_buffer18 + 4 >> 2];
   HEAP32[$327 + 8 >> 2] = HEAP32[$vararg_buffer18 + 8 >> 2];
   HEAP32[$vararg_buffer18 >> 2] = 0;
   HEAP32[$vararg_buffer18 + 4 >> 2] = 0;
   HEAP32[$vararg_buffer18 + 8 >> 2] = 0;
   HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + 12;
  } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($1, $vararg_buffer18);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer18);
  HEAP32[$vararg_buffer26 >> 2] = __ZN6google26ProgramInvocationShortNameEv() | 0;
  HEAP32[$vararg_buffer26 + 4 >> 2] = 92870;
  __ZN6google12StringPrintfEPKcz($vararg_buffer22, 92825, $vararg_buffer26);
  $333 = HEAP32[$293 >> 2] | 0;
  if ($333 >>> 0 < (HEAP32[$297 >> 2] | 0) >>> 0) {
   HEAP32[$333 >> 2] = HEAP32[$vararg_buffer22 >> 2];
   HEAP32[$333 + 4 >> 2] = HEAP32[$vararg_buffer22 + 4 >> 2];
   HEAP32[$333 + 8 >> 2] = HEAP32[$vararg_buffer22 + 8 >> 2];
   HEAP32[$vararg_buffer22 >> 2] = 0;
   HEAP32[$vararg_buffer22 + 4 >> 2] = 0;
   HEAP32[$vararg_buffer22 + 8 >> 2] = 0;
   HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + 12;
  } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($1, $vararg_buffer22);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer22);
  $338 = HEAP32[$5 >> 2] | 0;
  $339 = HEAP32[$50 >> 2] | 0;
  L194 : do if (($338 | 0) == ($339 | 0)) label = 167; else {
   $341 = HEAP32[$1 >> 2] | 0;
   $342 = HEAP32[$293 >> 2] | 0;
   if (($341 | 0) == ($342 | 0)) $441 = $341; else {
    $$sroa$068$085$i = $338;
    L196 : while (1) {
     $344 = $$sroa$068$085$i + 60 | 0;
     $346 = HEAP8[$344 + 11 >> 0] | 0;
     $348 = $346 & 255;
     if ($346 << 24 >> 24 < 0) {
      $$pre$i24 = HEAP32[$344 >> 2] | 0;
      $$pre103$i = HEAP32[$$sroa$068$085$i + 64 >> 2] | 0;
      $353 = $$pre$i24 + $$pre103$i | 0;
      $354 = $$pre$i24;
      $355 = $353;
      $$sink84$us$i = $341;
      do {
       $357 = HEAP8[$$sink84$us$i + 11 >> 0] | 0;
       $358 = $357 << 24 >> 24 < 0;
       $360 = $358 ? HEAP32[$$sink84$us$i >> 2] | 0 : $$sink84$us$i;
       $364 = $358 ? HEAP32[$$sink84$us$i + 4 >> 2] | 0 : $357 & 255;
       if ($$pre103$i >>> 0 >= $364 >>> 0) {
        if (!$364) break L196;
        $367 = $360 + $364 | 0;
        L205 : do if (($$pre103$i | 0) < ($364 | 0)) $$sroa$0$0$i$i$us$i = $355; else {
         $370 = $353 + (1 - $364) | 0;
         if (($370 | 0) == ($$pre$i24 | 0)) {
          $$sroa$0$0$i$i$us$i = $355;
          break;
         }
         $372 = HEAP8[$360 >> 0] | 0;
         $$sroa$033$044$i$i$i$us$i = $354;
         $1596 = $$pre$i24;
         while (1) {
          $$sroa$033$142$i$i$i$us$i = $$sroa$033$044$i$i$i$us$i;
          $374 = $1596;
          while (1) {
           if ((HEAP8[$374 >> 0] | 0) == $372 << 24 >> 24) {
            $$0$i$i$i$us$i = $360;
            $$026$i$i$i$us$i = $374;
            break;
           }
           $376 = $374 + 1 | 0;
           if (($376 | 0) == ($370 | 0)) {
            $$sroa$0$0$i$i$us$i = $355;
            break L205;
           } else {
            $$sroa$033$142$i$i$i$us$i = $376;
            $374 = $376;
           }
          }
          do {
           $$0$i$i$i$us$i = $$0$i$i$i$us$i + 1 | 0;
           if (($$0$i$i$i$us$i | 0) == ($367 | 0)) {
            $$sroa$0$0$i$i$us$i = $$sroa$033$142$i$i$i$us$i;
            break L205;
           }
           $$026$i$i$i$us$i = $$026$i$i$i$us$i + 1 | 0;
          } while ((HEAP8[$$026$i$i$i$us$i >> 0] | 0) == (HEAP8[$$0$i$i$i$us$i >> 0] | 0));
          $385 = $374 + 1 | 0;
          if (($385 | 0) == ($370 | 0)) {
           $$sroa$0$0$i$i$us$i = $355;
           break;
          } else {
           $$sroa$033$044$i$i$i$us$i = $385;
           $1596 = $385;
          }
         }
        } while (0);
        if (!(($$sroa$0$0$i$i$us$i | 0) == ($353 | 0) | ($$sroa$0$0$i$i$us$i - $354 | 0) == -1)) break L196;
       }
       $$sink84$us$i = $$sink84$us$i + 12 | 0;
      } while (($$sink84$us$i | 0) != ($342 | 0));
     } else {
      $349 = $344 + $348 | 0;
      $350 = $344;
      $351 = $349;
      $$sink84$i = $341;
      do {
       $395 = HEAP8[$$sink84$i + 11 >> 0] | 0;
       $396 = $395 << 24 >> 24 < 0;
       $398 = $396 ? HEAP32[$$sink84$i >> 2] | 0 : $$sink84$i;
       $402 = $396 ? HEAP32[$$sink84$i + 4 >> 2] | 0 : $395 & 255;
       if ($348 >>> 0 >= $402 >>> 0) {
        if (!$402) break L196;
        $405 = $398 + $402 | 0;
        L225 : do if (($348 | 0) < ($402 | 0)) $$sroa$0$0$i$i$i = $351; else {
         $408 = $349 + (1 - $402) | 0;
         if (($408 | 0) == ($344 | 0)) {
          $$sroa$0$0$i$i$i = $351;
          break;
         }
         $410 = HEAP8[$398 >> 0] | 0;
         $$sroa$033$044$i$i$i$i = $350;
         $1597 = $344;
         while (1) {
          $$sroa$033$142$i$i$i$i = $$sroa$033$044$i$i$i$i;
          $412 = $1597;
          while (1) {
           if ((HEAP8[$412 >> 0] | 0) == $410 << 24 >> 24) {
            $$0$i$i$i$i = $398;
            $$026$i$i$i$i = $412;
            break;
           }
           $414 = $412 + 1 | 0;
           if (($414 | 0) == ($408 | 0)) {
            $$sroa$0$0$i$i$i = $351;
            break L225;
           } else {
            $$sroa$033$142$i$i$i$i = $414;
            $412 = $414;
           }
          }
          do {
           $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
           if (($$0$i$i$i$i | 0) == ($405 | 0)) {
            $$sroa$0$0$i$i$i = $$sroa$033$142$i$i$i$i;
            break L225;
           }
           $$026$i$i$i$i = $$026$i$i$i$i + 1 | 0;
          } while ((HEAP8[$$026$i$i$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i$i >> 0] | 0));
          $423 = $412 + 1 | 0;
          if (($423 | 0) == ($408 | 0)) {
           $$sroa$0$0$i$i$i = $351;
           break;
          } else {
           $$sroa$033$044$i$i$i$i = $423;
           $1597 = $423;
          }
         }
        } while (0);
        if (!(($$sroa$0$0$i$i$i | 0) == ($349 | 0) | ($$sroa$0$0$i$i$i - $350 | 0) == -1)) break L196;
       }
       $$sink84$i = $$sink84$i + 12 | 0;
      } while (($$sink84$i | 0) != ($342 | 0));
     }
     $$sroa$068$085$i = $$sroa$068$085$i + 80 | 0;
     if (($$sroa$068$085$i | 0) == ($339 | 0)) {
      label = 167;
      break L194;
     }
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($8, $344) | 0;
    $430 = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($344, 47, -1) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($vararg_buffer26, $344, 0, ($430 | 0) == -1 ? 0 : $430, $344);
    if ((HEAP8[$292 >> 0] | 0) < 0) {
     HEAP8[HEAP32[$9 >> 2] >> 0] = 0;
     HEAP32[$9 + 4 >> 2] = 0;
    } else {
     HEAP8[$9 >> 0] = 0;
     HEAP8[$292 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($9, 0);
    HEAP32[$9 >> 2] = HEAP32[$vararg_buffer26 >> 2];
    HEAP32[$9 + 4 >> 2] = HEAP32[$vararg_buffer26 + 4 >> 2];
    HEAP32[$9 + 8 >> 2] = HEAP32[$vararg_buffer26 + 8 >> 2];
    HEAP32[$vararg_buffer26 >> 2] = 0;
    HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
    HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer26);
    label = 167;
   }
  } while (0);
  if ((label | 0) == 167) $441 = HEAP32[$1 >> 2] | 0;
  if ($441 | 0) {
   $443 = HEAP32[$293 >> 2] | 0;
   if (($443 | 0) == ($441 | 0)) $449 = $441; else {
    $446 = $443;
    do {
     $445 = $446 + -12 | 0;
     HEAP32[$293 >> 2] = $445;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($445);
     $446 = HEAP32[$293 >> 2] | 0;
    } while (($446 | 0) != ($441 | 0));
    $449 = HEAP32[$1 >> 2] | 0;
   }
   __ZdlPv($449);
  }
  $450 = $10 + 4 | 0;
  HEAP32[$450 >> 2] = 0;
  $451 = $10 + 8 | 0;
  HEAP32[$451 >> 2] = 0;
  $452 = $10 + 4 | 0;
  HEAP32[$10 >> 2] = $452;
  $453 = $10 + 12 | 0;
  $454 = $10 + 16 | 0;
  HEAP32[$454 >> 2] = 0;
  $455 = $10 + 20 | 0;
  HEAP32[$455 >> 2] = 0;
  $456 = $10 + 16 | 0;
  HEAP32[$453 >> 2] = $456;
  $457 = $10 + 24 | 0;
  $458 = $10 + 28 | 0;
  HEAP32[$458 >> 2] = 0;
  $459 = $10 + 32 | 0;
  HEAP32[$459 >> 2] = 0;
  $460 = $10 + 28 | 0;
  HEAP32[$457 >> 2] = $460;
  $461 = $10 + 36 | 0;
  HEAP32[$10 + 40 >> 2] = 0;
  $463 = $10 + 44 | 0;
  HEAP32[$463 >> 2] = 0;
  $464 = $10 + 40 | 0;
  HEAP32[$461 >> 2] = $464;
  $465 = $10 + 48 | 0;
  $466 = $10 + 52 | 0;
  HEAP32[$466 >> 2] = 0;
  $467 = $10 + 56 | 0;
  HEAP32[$467 >> 2] = 0;
  $468 = $10 + 52 | 0;
  HEAP32[$465 >> 2] = $468;
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($10, 0);
  HEAP32[$451 >> 2] = 0;
  HEAP32[$10 >> 2] = $452;
  HEAP32[$452 >> 2] = 0;
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($453, HEAP32[$456 >> 2] | 0);
  HEAP32[$455 >> 2] = 0;
  HEAP32[$453 >> 2] = $456;
  HEAP32[$456 >> 2] = 0;
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($457, HEAP32[$460 >> 2] | 0);
  HEAP32[$459 >> 2] = 0;
  HEAP32[$457 >> 2] = $460;
  HEAP32[$460 >> 2] = 0;
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($461, HEAP32[$464 >> 2] | 0);
  HEAP32[$463 >> 2] = 0;
  HEAP32[$461 >> 2] = $464;
  HEAP32[$464 >> 2] = 0;
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($465, HEAP32[$468 >> 2] | 0);
  HEAP32[$467 >> 2] = 0;
  HEAP32[$465 >> 2] = $468;
  HEAP32[$468 >> 2] = 0;
  $473 = HEAP32[$6 >> 2] | 0;
  if (($473 | 0) != ($54 | 0)) {
   $475 = $9 + 4 | 0;
   $476 = $452;
   $477 = $8 + 4 | 0;
   $478 = $460;
   $479 = $468;
   $480 = $456;
   $$sroa$0109$0156$i = $473;
   while (1) {
    $481 = HEAP8[$292 >> 0] | 0;
    $482 = $481 << 24 >> 24 < 0;
    $485 = $482 ? HEAP32[$475 >> 2] | 0 : $481 & 255;
    $$pre180$i = $$sroa$0109$0156$i + 16 | 0;
    do if (!$485) {
     $$0$i37 = -1;
     $654 = 0;
    } else {
     $487 = HEAP32[$$pre180$i >> 2] | 0;
     $488 = $487 + 60 | 0;
     $490 = HEAP8[$488 + 11 >> 0] | 0;
     if ($490 << 24 >> 24 < 0) {
      $498 = HEAP32[$487 + 64 >> 2] | 0;
      $501 = HEAP32[$488 >> 2] | 0;
     } else {
      $498 = $490 & 255;
      $501 = $488;
     }
     $497 = $482 ? HEAP32[$9 >> 2] | 0 : $9;
     if ($498 >>> 0 < $485 >>> 0) {
      $$0$i37 = -1;
      $654 = 0;
      break;
     }
     $500 = $501 + $498 | 0;
     $502 = $497 + $485 | 0;
     $503 = $501;
     $504 = $500;
     L267 : do if (($498 | 0) < ($485 | 0)) $$sroa$0$0$i$i$i35 = $504; else {
      $507 = $500 + (1 - $485) | 0;
      if (($507 | 0) == ($501 | 0)) {
       $$sroa$0$0$i$i$i35 = $504;
       break;
      }
      $509 = HEAP8[$497 >> 0] | 0;
      $$sroa$033$044$i$i$i$i29 = $503;
      $1598 = $501;
      while (1) {
       $$sroa$033$142$i$i$i$i31 = $$sroa$033$044$i$i$i$i29;
       $511 = $1598;
       while (1) {
        if ((HEAP8[$511 >> 0] | 0) == $509 << 24 >> 24) {
         $$0$i$i$i65$i = $497;
         $$026$i$i$i$i33 = $511;
         break;
        }
        $513 = $511 + 1 | 0;
        if (($513 | 0) == ($507 | 0)) {
         $$sroa$0$0$i$i$i35 = $504;
         break L267;
        } else {
         $$sroa$033$142$i$i$i$i31 = $513;
         $511 = $513;
        }
       }
       do {
        $$0$i$i$i65$i = $$0$i$i$i65$i + 1 | 0;
        if (($$0$i$i$i65$i | 0) == ($502 | 0)) {
         $$sroa$0$0$i$i$i35 = $$sroa$033$142$i$i$i$i31;
         break L267;
        }
        $$026$i$i$i$i33 = $$026$i$i$i$i33 + 1 | 0;
       } while ((HEAP8[$$026$i$i$i$i33 >> 0] | 0) == (HEAP8[$$0$i$i$i65$i >> 0] | 0));
       $522 = $511 + 1 | 0;
       if (($522 | 0) == ($507 | 0)) {
        $$sroa$0$0$i$i$i35 = $504;
        break;
       } else {
        $$sroa$033$044$i$i$i$i29 = $522;
        $1598 = $522;
       }
      }
     } while (0);
     $527 = $$sroa$0$0$i$i$i35 - $503 | 0;
     if (!(($$sroa$0$0$i$i$i35 | 0) != ($500 | 0) & ($527 | 0) != -1)) {
      $$0$i37 = -1;
      $654 = 0;
      break;
     }
     $$0$i37 = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcj($488, 47, $485 + 1 + $527 | 0) | 0;
     $654 = 1;
    } while (0);
    $532 = HEAP32[$$pre180$i >> 2] | 0;
    $534 = HEAP8[$532 + 11 >> 0] | 0;
    $535 = $534 << 24 >> 24 < 0;
    $538 = $534 & 255;
    $539 = $535 ? HEAP32[$532 + 4 >> 2] | 0 : $538;
    $540 = HEAP8[$13 >> 0] | 0;
    $541 = $540 << 24 >> 24 < 0;
    L282 : do if (($539 | 0) == (($541 ? HEAP32[$16 >> 2] | 0 : $540 & 255) | 0)) {
     $546 = HEAP32[$532 >> 2] | 0;
     $547 = $535 ? $546 : $532;
     $549 = $541 ? HEAP32[$4 >> 2] | 0 : $4;
     $550 = ($539 | 0) == 0;
     L284 : do if ($535) {
      if ($550) break;
      if (_memcmp($547, $549, $539) | 0) {
       label = 214;
       break L282;
      }
     } else {
      if ($550) break;
      if (($546 & 255) << 24 >> 24 == (HEAP8[$549 >> 0] | 0)) {
       $$02431$i84$i231 = $538;
       $$02530$i85$i232 = $549;
       $$02629$i86$i233 = $532;
      } else {
       label = 214;
       break L282;
      }
      while (1) {
       $$02431$i84$i231 = $$02431$i84$i231 + -1 | 0;
       $$02629$i86$i233 = $$02629$i86$i233 + 1 | 0;
       if (!$$02431$i84$i231) break L284;
       $$02530$i85$i232 = $$02530$i85$i232 + 1 | 0;
       if ((HEAP8[$$02629$i86$i233 >> 0] | 0) != (HEAP8[$$02530$i85$i232 >> 0] | 0)) {
        label = 214;
        break L282;
       }
      }
     } while (0);
     $562 = HEAP32[$452 >> 2] | 0;
     do if (!$562) {
      HEAP32[$vararg_buffer26 >> 2] = $452;
      $$0$19$i$i$i73$i = $476;
      $$020$i$i$i$i74$i = $452;
     } else {
      $$0$i$i$i$i70$i = $562;
      while (1) {
       $565 = HEAP32[$$0$i$i$i$i70$i + 16 >> 2] | 0;
       if ($532 >>> 0 < $565 >>> 0) {
        $567 = HEAP32[$$0$i$i$i$i70$i >> 2] | 0;
        if (!$567) {
         label = 202;
         break;
        } else $$sink$i$i$i$i71$i = $567;
       } else {
        if ($565 >>> 0 >= $532 >>> 0) {
         label = 207;
         break;
        }
        $571 = $$0$i$i$i$i70$i + 4 | 0;
        $572 = HEAP32[$571 >> 2] | 0;
        if (!$572) {
         label = 206;
         break;
        } else $$sink$i$i$i$i71$i = $572;
       }
       $$0$i$i$i$i70$i = $$sink$i$i$i$i71$i;
      }
      if ((label | 0) == 202) {
       label = 0;
       HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i70$i;
       $$0$19$i$i$i73$i = $$0$i$i$i$i70$i;
       $$020$i$i$i$i74$i = $$0$i$i$i$i70$i;
       break;
      } else if ((label | 0) == 206) {
       label = 0;
       HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i70$i;
       $$0$19$i$i$i73$i = $$0$i$i$i$i70$i;
       $$020$i$i$i$i74$i = $571;
       break;
      } else if ((label | 0) == 207) {
       label = 0;
       HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i70$i;
       $$0$19$i$i$i73$i = $$0$i$i$i$i70$i;
       $$020$i$i$i$i74$i = $vararg_buffer26;
       break;
      }
     } while (0);
     if (!(HEAP32[$$020$i$i$i$i74$i >> 2] | 0)) {
      $578 = __Znwj(20) | 0;
      HEAP32[$578 + 16 >> 2] = HEAP32[$$pre180$i >> 2];
      HEAP32[$578 >> 2] = 0;
      HEAP32[$578 + 4 >> 2] = 0;
      HEAP32[$578 + 8 >> 2] = $$0$19$i$i$i73$i;
      HEAP32[$$020$i$i$i$i74$i >> 2] = $578;
      $584 = HEAP32[HEAP32[$10 >> 2] >> 2] | 0;
      if (!$584) $588 = $578; else {
       HEAP32[$10 >> 2] = $584;
       $588 = HEAP32[$$020$i$i$i$i74$i >> 2] | 0;
      }
      __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$450 >> 2] | 0, $588);
      HEAP32[$451 >> 2] = (HEAP32[$451 >> 2] | 0) + 1;
     }
    } else label = 214; while (0);
    L313 : do if ((label | 0) == 214) {
     label = 0;
     $591 = HEAP8[$291 >> 0] | 0;
     $592 = $591 << 24 >> 24 < 0;
     $595 = $592 ? HEAP32[$477 >> 2] | 0 : $591 & 255;
     L315 : do if ($595 | 0) {
      $597 = $532 + 60 | 0;
      $599 = HEAP8[$597 + 11 >> 0] | 0;
      $600 = $599 << 24 >> 24 < 0;
      $603 = $599 & 255;
      if ((($600 ? HEAP32[$532 + 64 >> 2] | 0 : $603) | 0) != ($595 | 0)) break;
      $606 = HEAP32[$597 >> 2] | 0;
      $608 = $592 ? HEAP32[$8 >> 2] | 0 : $8;
      L318 : do if ($600) {
       if (_memcmp($606, $608, $595) | 0) break L315;
      } else {
       if (($606 & 255) << 24 >> 24 != (HEAP8[$608 >> 0] | 0)) break L315;
       $$02431$i$i235 = $603;
       $$02530$i$i236 = $608;
       $$02629$i$i237 = $597;
       while (1) {
        $$02431$i$i235 = $$02431$i$i235 + -1 | 0;
        $$02629$i$i237 = $$02629$i$i237 + 1 | 0;
        if (!$$02431$i$i235) break L318;
        $$02530$i$i236 = $$02530$i$i236 + 1 | 0;
        if ((HEAP8[$$02629$i$i237 >> 0] | 0) != (HEAP8[$$02530$i$i236 >> 0] | 0)) break L315;
       }
      } while (0);
      $620 = HEAP32[$456 >> 2] | 0;
      do if (!$620) {
       HEAP32[$vararg_buffer26 >> 2] = $456;
       $$0$19$i$i$i57$i = $480;
       $$020$i$i$i$i58$i = $456;
      } else {
       $$0$i$i$i$i54$i = $620;
       while (1) {
        $623 = HEAP32[$$0$i$i$i$i54$i + 16 >> 2] | 0;
        if ($532 >>> 0 < $623 >>> 0) {
         $625 = HEAP32[$$0$i$i$i$i54$i >> 2] | 0;
         if (!$625) {
          label = 225;
          break;
         } else $$sink$i$i$i$i55$i = $625;
        } else {
         if ($623 >>> 0 >= $532 >>> 0) {
          label = 230;
          break;
         }
         $629 = $$0$i$i$i$i54$i + 4 | 0;
         $630 = HEAP32[$629 >> 2] | 0;
         if (!$630) {
          label = 229;
          break;
         } else $$sink$i$i$i$i55$i = $630;
        }
        $$0$i$i$i$i54$i = $$sink$i$i$i$i55$i;
       }
       if ((label | 0) == 225) {
        label = 0;
        HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i54$i;
        $$0$19$i$i$i57$i = $$0$i$i$i$i54$i;
        $$020$i$i$i$i58$i = $$0$i$i$i$i54$i;
        break;
       } else if ((label | 0) == 229) {
        label = 0;
        HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i54$i;
        $$0$19$i$i$i57$i = $$0$i$i$i$i54$i;
        $$020$i$i$i$i58$i = $629;
        break;
       } else if ((label | 0) == 230) {
        label = 0;
        HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i54$i;
        $$0$19$i$i$i57$i = $$0$i$i$i$i54$i;
        $$020$i$i$i$i58$i = $vararg_buffer26;
        break;
       }
      } while (0);
      if (!(HEAP32[$$020$i$i$i$i58$i >> 2] | 0)) {
       $636 = __Znwj(20) | 0;
       HEAP32[$636 + 16 >> 2] = HEAP32[$$pre180$i >> 2];
       HEAP32[$636 >> 2] = 0;
       HEAP32[$636 + 4 >> 2] = 0;
       HEAP32[$636 + 8 >> 2] = $$0$19$i$i$i57$i;
       HEAP32[$$020$i$i$i$i58$i >> 2] = $636;
       $642 = HEAP32[HEAP32[$453 >> 2] >> 2] | 0;
       if (!$642) $646 = $636; else {
        HEAP32[$453 >> 2] = $642;
        $646 = HEAP32[$$020$i$i$i$i58$i >> 2] | 0;
       }
       __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$454 >> 2] | 0, $646);
       HEAP32[$455 >> 2] = (HEAP32[$455 >> 2] | 0) + 1;
      }
      break L313;
     } while (0);
     $649 = HEAP8[$292 >> 0] | 0;
     $or$cond$i40 = $654 & (($649 << 24 >> 24 < 0 ? HEAP32[$475 >> 2] | 0 : $649 & 255) | 0) != 0;
     if (($$0$i37 | 0) == -1 & $or$cond$i40) {
      $656 = HEAP32[$460 >> 2] | 0;
      do if (!$656) {
       HEAP32[$vararg_buffer26 >> 2] = $460;
       $$0$19$i$i$i42$i = $478;
       $$020$i$i$i$i43$i = $460;
      } else {
       $$0$i$i$i$i39$i = $656;
       while (1) {
        $659 = HEAP32[$$0$i$i$i$i39$i + 16 >> 2] | 0;
        if ($532 >>> 0 < $659 >>> 0) {
         $661 = HEAP32[$$0$i$i$i$i39$i >> 2] | 0;
         if (!$661) {
          label = 241;
          break;
         } else $$sink$i$i$i$i40$i = $661;
        } else {
         if ($659 >>> 0 >= $532 >>> 0) {
          label = 246;
          break;
         }
         $665 = $$0$i$i$i$i39$i + 4 | 0;
         $666 = HEAP32[$665 >> 2] | 0;
         if (!$666) {
          label = 245;
          break;
         } else $$sink$i$i$i$i40$i = $666;
        }
        $$0$i$i$i$i39$i = $$sink$i$i$i$i40$i;
       }
       if ((label | 0) == 241) {
        label = 0;
        HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i39$i;
        $$0$19$i$i$i42$i = $$0$i$i$i$i39$i;
        $$020$i$i$i$i43$i = $$0$i$i$i$i39$i;
        break;
       } else if ((label | 0) == 245) {
        label = 0;
        HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i39$i;
        $$0$19$i$i$i42$i = $$0$i$i$i$i39$i;
        $$020$i$i$i$i43$i = $665;
        break;
       } else if ((label | 0) == 246) {
        label = 0;
        HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i39$i;
        $$0$19$i$i$i42$i = $$0$i$i$i$i39$i;
        $$020$i$i$i$i43$i = $vararg_buffer26;
        break;
       }
      } while (0);
      if (!(HEAP32[$$020$i$i$i$i43$i >> 2] | 0)) {
       $672 = __Znwj(20) | 0;
       HEAP32[$672 + 16 >> 2] = HEAP32[$$pre180$i >> 2];
       HEAP32[$672 >> 2] = 0;
       HEAP32[$672 + 4 >> 2] = 0;
       HEAP32[$672 + 8 >> 2] = $$0$19$i$i$i42$i;
       HEAP32[$$020$i$i$i$i43$i >> 2] = $672;
       $678 = HEAP32[HEAP32[$457 >> 2] >> 2] | 0;
       if (!$678) $682 = $672; else {
        HEAP32[$457 >> 2] = $678;
        $682 = HEAP32[$$020$i$i$i$i43$i >> 2] | 0;
       }
       __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$458 >> 2] | 0, $682);
       HEAP32[$459 >> 2] = (HEAP32[$459 >> 2] | 0) + 1;
      }
      break;
     }
     if (!(($$0$i37 | 0) != -1 & $or$cond$i40)) break;
     $686 = HEAP32[$468 >> 2] | 0;
     do if (!$686) {
      HEAP32[$vararg_buffer26 >> 2] = $468;
      $$0$19$i$i$i$i46 = $479;
      $$020$i$i$i$i$i47 = $468;
     } else {
      $$0$i$i$i$i$i42 = $686;
      while (1) {
       $689 = HEAP32[$$0$i$i$i$i$i42 + 16 >> 2] | 0;
       if ($532 >>> 0 < $689 >>> 0) {
        $691 = HEAP32[$$0$i$i$i$i$i42 >> 2] | 0;
        if (!$691) {
         label = 257;
         break;
        } else $$sink$i$i$i$i$i44 = $691;
       } else {
        if ($689 >>> 0 >= $532 >>> 0) {
         label = 262;
         break;
        }
        $695 = $$0$i$i$i$i$i42 + 4 | 0;
        $696 = HEAP32[$695 >> 2] | 0;
        if (!$696) {
         label = 261;
         break;
        } else $$sink$i$i$i$i$i44 = $696;
       }
       $$0$i$i$i$i$i42 = $$sink$i$i$i$i$i44;
      }
      if ((label | 0) == 257) {
       label = 0;
       HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i$i42;
       $$0$19$i$i$i$i46 = $$0$i$i$i$i$i42;
       $$020$i$i$i$i$i47 = $$0$i$i$i$i$i42;
       break;
      } else if ((label | 0) == 261) {
       label = 0;
       HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i$i42;
       $$0$19$i$i$i$i46 = $$0$i$i$i$i$i42;
       $$020$i$i$i$i$i47 = $695;
       break;
      } else if ((label | 0) == 262) {
       label = 0;
       HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i$i42;
       $$0$19$i$i$i$i46 = $$0$i$i$i$i$i42;
       $$020$i$i$i$i$i47 = $vararg_buffer26;
       break;
      }
     } while (0);
     if (!(HEAP32[$$020$i$i$i$i$i47 >> 2] | 0)) {
      $702 = __Znwj(20) | 0;
      HEAP32[$702 + 16 >> 2] = HEAP32[$$pre180$i >> 2];
      HEAP32[$702 >> 2] = 0;
      HEAP32[$702 + 4 >> 2] = 0;
      HEAP32[$702 + 8 >> 2] = $$0$19$i$i$i$i46;
      HEAP32[$$020$i$i$i$i$i47 >> 2] = $702;
      $708 = HEAP32[HEAP32[$465 >> 2] >> 2] | 0;
      if (!$708) $712 = $702; else {
       HEAP32[$465 >> 2] = $708;
       $712 = HEAP32[$$020$i$i$i$i$i47 >> 2] | 0;
      }
      __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$466 >> 2] | 0, $712);
      HEAP32[$467 >> 2] = (HEAP32[$467 >> 2] | 0) + 1;
     }
    } while (0);
    $716 = HEAP32[$$sroa$0109$0156$i + 4 >> 2] | 0;
    if (!$716) {
     $$0$i$i$i = $$sroa$0109$0156$i;
     while (1) {
      $721 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$721 >> 2] | 0) == ($$0$i$i$i | 0)) {
       $$05$i$i$i = $721;
       break;
      } else $$0$i$i$i = $721;
     }
    } else {
     $$0$i$i$i$i51 = $716;
     while (1) {
      $718 = HEAP32[$$0$i$i$i$i51 >> 2] | 0;
      if (!$718) {
       $$05$i$i$i = $$0$i$i$i$i51;
       break;
      } else $$0$i$i$i$i51 = $718;
     }
    }
    if (($$05$i$i$i | 0) == ($54 | 0)) break; else $$sroa$0109$0156$i = $$05$i$i$i;
   }
  }
  HEAP32[$11 >> 2] = 0;
  $725 = $11 + 4 | 0;
  HEAP32[$725 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  $728 = $$sroa$11$0 << 24 >> 24 ? 999999 : 98;
  HEAP32[$vararg_buffer6 >> 2] = 0;
  $729 = $vararg_buffer6 + 4 | 0;
  HEAP32[$729 >> 2] = 0;
  HEAP32[$vararg_buffer6 + 8 >> 2] = 0;
  $731 = HEAP32[$451 >> 2] | 0;
  if (!$731) {
   $$056$off0353$i = 0;
   $$058351$i = 0;
   $742 = 0;
   $744 = 0;
   $748 = 0;
   label = 276;
  } else {
   $$1$i$i = $731 + 2 | 0;
   $733 = __Znwj(12) | 0;
   $735 = $733 + 12 | 0;
   $736 = $735;
   HEAP32[$733 >> 2] = 114224;
   HEAP32[$733 + 4 >> 2] = 92881;
   HEAP32[$733 + 8 >> 2] = $10;
   $737 = $733;
   HEAP32[$vararg_buffer6 >> 2] = $737;
   HEAP32[$729 >> 2] = $736;
   HEAP32[$vararg_buffer6 + 8 >> 2] = $736;
   if (($$1$i$i | 0) < ($728 | 0)) {
    $$056$off0353$i = 1;
    $$058351$i = $$1$i$i;
    $742 = $735;
    $744 = $735;
    $748 = $737;
    label = 276;
   } else {
    $$056$off0352$i = 1;
    $$159$i = $$1$i$i;
   }
  }
  if ((label | 0) == 276) {
   $739 = HEAP32[$455 >> 2] | 0;
   if (!$739) {
    $$056$off0352$i = $$056$off0353$i;
    $$159$i = $$058351$i;
   } else {
    $741 = $vararg_buffer6 + 8 | 0;
    $745 = $744;
    do if (($742 | 0) == ($744 | 0)) {
     $750 = (($745 - $748 | 0) / 12 | 0) + 1 | 0;
     if ($750 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($vararg_buffer6);
     $753 = ($745 - $748 | 0) / 12 | 0;
     do if ($753 >>> 0 < 178956970) {
      $758 = $753 << 1;
      $$sroa$speculated$i$i$i107$i = $758 >>> 0 < $750 >>> 0 ? $750 : $758;
      $760 = HEAP32[$729 >> 2] | 0;
      $762 = ($760 - $748 | 0) / 12 | 0;
      if (!$$sroa$speculated$i$i$i107$i) {
       $$0$i22$i$i111$i = 0;
       $769 = 0;
       $770 = $762;
       $776 = $760;
       break;
      }
      if ($$sroa$speculated$i$i$i107$i >>> 0 <= 357913941) {
       $$0$i2123$i$i109$i = $$sroa$speculated$i$i$i107$i;
       $1599 = $760;
       $1600 = $762;
       label = 286;
       break;
      }
      $765 = ___cxa_allocate_exception(4) | 0;
      __ZNSt9bad_allocC2Ev($765);
      ___cxa_throw($765 | 0, 1824, 151);
     } else {
      $755 = HEAP32[$729 >> 2] | 0;
      $$0$i2123$i$i109$i = 357913941;
      $1599 = $755;
      $1600 = ($755 - $748 | 0) / 12 | 0;
      label = 286;
     } while (0);
     if ((label | 0) == 286) {
      $$0$i22$i$i111$i = $$0$i2123$i$i109$i;
      $769 = __Znwj($$0$i2123$i$i109$i * 12 | 0) | 0;
      $770 = $1600;
      $776 = $1599;
     }
     $768 = $769 + ($770 * 12 | 0) | 0;
     HEAP32[$768 >> 2] = 92892;
     HEAP32[$769 + ($770 * 12 | 0) + 4 >> 2] = 92920;
     HEAP32[$769 + ($770 * 12 | 0) + 8 >> 2] = $453;
     $775 = $776 - $748 | 0;
     $778 = $768 + ((($775 | 0) / -12 | 0) * 12 | 0) | 0;
     if (($775 | 0) > 0) _memcpy($778 | 0, $748 | 0, $775 | 0) | 0;
     HEAP32[$vararg_buffer6 >> 2] = $778;
     HEAP32[$729 >> 2] = $768 + 12;
     HEAP32[$741 >> 2] = $769 + ($$0$i22$i$i111$i * 12 | 0);
     if (!$748) break;
     __ZdlPv($748);
    } else {
     HEAP32[$742 >> 2] = 92892;
     HEAP32[$742 + 4 >> 2] = 92920;
     HEAP32[$742 + 8 >> 2] = $453;
     HEAP32[$729 >> 2] = $744 + 12;
    } while (0);
    $$056$off0352$i = $$056$off0353$i;
    $$159$i = $$058351$i + 3 + $739 | 0;
   }
  }
  if (($$159$i | 0) < ($728 | 0)) {
   $786 = HEAP32[$459 >> 2] | 0;
   if (!$786) $$260$i = $$159$i; else {
    $788 = HEAP32[$729 >> 2] | 0;
    $789 = $vararg_buffer6 + 8 | 0;
    $790 = HEAP32[$789 >> 2] | 0;
    $792 = $790;
    do if (($788 | 0) == ($790 | 0)) {
     $796 = HEAP32[$vararg_buffer6 >> 2] | 0;
     $799 = (($788 - $796 | 0) / 12 | 0) + 1 | 0;
     if ($799 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($vararg_buffer6);
     $802 = ($792 - $796 | 0) / 12 | 0;
     do if ($802 >>> 0 < 178956970) {
      $807 = $802 << 1;
      $$sroa$speculated$i$i$i129$i = $807 >>> 0 < $799 >>> 0 ? $799 : $807;
      $809 = HEAP32[$729 >> 2] | 0;
      $811 = ($809 - $796 | 0) / 12 | 0;
      if (!$$sroa$speculated$i$i$i129$i) {
       $$0$i22$i$i133$i = 0;
       $818 = 0;
       $819 = $811;
       $825 = $809;
       break;
      }
      if ($$sroa$speculated$i$i$i129$i >>> 0 <= 357913941) {
       $$0$i2123$i$i131$i = $$sroa$speculated$i$i$i129$i;
       $1601 = $809;
       $1602 = $811;
       label = 303;
       break;
      }
      $814 = ___cxa_allocate_exception(4) | 0;
      __ZNSt9bad_allocC2Ev($814);
      ___cxa_throw($814 | 0, 1824, 151);
     } else {
      $804 = HEAP32[$729 >> 2] | 0;
      $$0$i2123$i$i131$i = 357913941;
      $1601 = $804;
      $1602 = ($804 - $796 | 0) / 12 | 0;
      label = 303;
     } while (0);
     if ((label | 0) == 303) {
      $$0$i22$i$i133$i = $$0$i2123$i$i131$i;
      $818 = __Znwj($$0$i2123$i$i131$i * 12 | 0) | 0;
      $819 = $1602;
      $825 = $1601;
     }
     $817 = $818 + ($819 * 12 | 0) | 0;
     HEAP32[$817 >> 2] = 92948;
     HEAP32[$818 + ($819 * 12 | 0) + 4 >> 2] = 92977;
     HEAP32[$818 + ($819 * 12 | 0) + 8 >> 2] = $457;
     $824 = $825 - $796 | 0;
     $827 = $817 + ((($824 | 0) / -12 | 0) * 12 | 0) | 0;
     if (($824 | 0) > 0) _memcpy($827 | 0, $796 | 0, $824 | 0) | 0;
     HEAP32[$vararg_buffer6 >> 2] = $827;
     HEAP32[$729 >> 2] = $817 + 12;
     HEAP32[$789 >> 2] = $818 + ($$0$i22$i$i133$i * 12 | 0);
     if (!$796) break;
     __ZdlPv($796);
    } else {
     HEAP32[$788 >> 2] = 92948;
     HEAP32[$788 + 4 >> 2] = 92977;
     HEAP32[$788 + 8 >> 2] = $457;
     HEAP32[$729 >> 2] = (HEAP32[$729 >> 2] | 0) + 12;
    } while (0);
    $$260$i = $$159$i + 3 + $786 | 0;
   }
  } else $$260$i = $$159$i;
  if (($$260$i | 0) < ($728 | 0)) {
   $835 = HEAP32[$463 >> 2] | 0;
   if (!$835) $$361$i = $$260$i; else {
    $837 = HEAP32[$729 >> 2] | 0;
    $838 = $vararg_buffer6 + 8 | 0;
    $839 = HEAP32[$838 >> 2] | 0;
    $841 = $839;
    do if (($837 | 0) == ($839 | 0)) {
     $845 = HEAP32[$vararg_buffer6 >> 2] | 0;
     $848 = (($837 - $845 | 0) / 12 | 0) + 1 | 0;
     if ($848 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($vararg_buffer6);
     $851 = ($841 - $845 | 0) / 12 | 0;
     do if ($851 >>> 0 < 178956970) {
      $856 = $851 << 1;
      $$sroa$speculated$i$i$i151$i = $856 >>> 0 < $848 >>> 0 ? $848 : $856;
      $858 = HEAP32[$729 >> 2] | 0;
      $860 = ($858 - $845 | 0) / 12 | 0;
      if (!$$sroa$speculated$i$i$i151$i) {
       $$0$i22$i$i155$i = 0;
       $867 = 0;
       $868 = $860;
       $874 = $858;
       break;
      }
      if ($$sroa$speculated$i$i$i151$i >>> 0 <= 357913941) {
       $$0$i2123$i$i153$i = $$sroa$speculated$i$i$i151$i;
       $1603 = $858;
       $1604 = $860;
       label = 320;
       break;
      }
      $863 = ___cxa_allocate_exception(4) | 0;
      __ZNSt9bad_allocC2Ev($863);
      ___cxa_throw($863 | 0, 1824, 151);
     } else {
      $853 = HEAP32[$729 >> 2] | 0;
      $$0$i2123$i$i153$i = 357913941;
      $1603 = $853;
      $1604 = ($853 - $845 | 0) / 12 | 0;
      label = 320;
     } while (0);
     if ((label | 0) == 320) {
      $$0$i22$i$i155$i = $$0$i2123$i$i153$i;
      $867 = __Znwj($$0$i2123$i$i153$i * 12 | 0) | 0;
      $868 = $1604;
      $874 = $1603;
     }
     $866 = $867 + ($868 * 12 | 0) | 0;
     HEAP32[$866 >> 2] = 93006;
     HEAP32[$867 + ($868 * 12 | 0) + 4 >> 2] = 93032;
     HEAP32[$867 + ($868 * 12 | 0) + 8 >> 2] = $461;
     $873 = $874 - $845 | 0;
     $876 = $866 + ((($873 | 0) / -12 | 0) * 12 | 0) | 0;
     if (($873 | 0) > 0) _memcpy($876 | 0, $845 | 0, $873 | 0) | 0;
     HEAP32[$vararg_buffer6 >> 2] = $876;
     HEAP32[$729 >> 2] = $866 + 12;
     HEAP32[$838 >> 2] = $867 + ($$0$i22$i$i155$i * 12 | 0);
     if (!$845) break;
     __ZdlPv($845);
    } else {
     HEAP32[$837 >> 2] = 93006;
     HEAP32[$837 + 4 >> 2] = 93032;
     HEAP32[$837 + 8 >> 2] = $461;
     HEAP32[$729 >> 2] = (HEAP32[$729 >> 2] | 0) + 12;
    } while (0);
    $$361$i = $$260$i + 3 + $835 | 0;
   }
  } else $$361$i = $$260$i;
  do if (($$361$i | 0) < ($728 | 0)) {
   $884 = HEAP32[$467 >> 2] | 0;
   if (!$884) {
    $$462$i = $$361$i;
    break;
   }
   $886 = HEAP32[$729 >> 2] | 0;
   $887 = $vararg_buffer6 + 8 | 0;
   $888 = HEAP32[$887 >> 2] | 0;
   $890 = $888;
   do if (($886 | 0) == ($888 | 0)) {
    $894 = HEAP32[$vararg_buffer6 >> 2] | 0;
    $897 = (($886 - $894 | 0) / 12 | 0) + 1 | 0;
    if ($897 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($vararg_buffer6);
    $900 = ($890 - $894 | 0) / 12 | 0;
    do if ($900 >>> 0 < 178956970) {
     $905 = $900 << 1;
     $$sroa$speculated$i$i$i173$i = $905 >>> 0 < $897 >>> 0 ? $897 : $905;
     $907 = HEAP32[$729 >> 2] | 0;
     $909 = ($907 - $894 | 0) / 12 | 0;
     if (!$$sroa$speculated$i$i$i173$i) {
      $$0$i22$i$i177$i = 0;
      $916 = 0;
      $917 = $909;
      $923 = $907;
      break;
     }
     if ($$sroa$speculated$i$i$i173$i >>> 0 <= 357913941) {
      $$0$i2123$i$i175$i = $$sroa$speculated$i$i$i173$i;
      $1605 = $907;
      $1606 = $909;
      label = 337;
      break;
     }
     $912 = ___cxa_allocate_exception(4) | 0;
     __ZNSt9bad_allocC2Ev($912);
     ___cxa_throw($912 | 0, 1824, 151);
    } else {
     $902 = HEAP32[$729 >> 2] | 0;
     $$0$i2123$i$i175$i = 357913941;
     $1605 = $902;
     $1606 = ($902 - $894 | 0) / 12 | 0;
     label = 337;
    } while (0);
    if ((label | 0) == 337) {
     $$0$i22$i$i177$i = $$0$i2123$i$i175$i;
     $916 = __Znwj($$0$i2123$i$i175$i * 12 | 0) | 0;
     $917 = $1606;
     $923 = $1605;
    }
    $915 = $916 + ($917 * 12 | 0) | 0;
    HEAP32[$915 >> 2] = 93058;
    HEAP32[$916 + ($917 * 12 | 0) + 4 >> 2] = 93091;
    HEAP32[$916 + ($917 * 12 | 0) + 8 >> 2] = $465;
    $922 = $923 - $894 | 0;
    $925 = $915 + ((($922 | 0) / -12 | 0) * 12 | 0) | 0;
    if (($922 | 0) > 0) _memcpy($925 | 0, $894 | 0, $922 | 0) | 0;
    HEAP32[$vararg_buffer6 >> 2] = $925;
    HEAP32[$729 >> 2] = $915 + 12;
    HEAP32[$887 >> 2] = $916 + ($$0$i22$i$i177$i * 12 | 0);
    if (!$894) break;
    __ZdlPv($894);
   } else {
    HEAP32[$886 >> 2] = 93058;
    HEAP32[$886 + 4 >> 2] = 93091;
    HEAP32[$886 + 8 >> 2] = $465;
    HEAP32[$729 >> 2] = (HEAP32[$729 >> 2] | 0) + 12;
   } while (0);
   $$462$i = $$361$i + 3 + $884 | 0;
  } else $$462$i = $$361$i; while (0);
  $932 = $vararg_buffer2 + 4 | 0;
  HEAP32[$932 >> 2] = 0;
  $933 = $vararg_buffer2 + 8 | 0;
  HEAP32[$933 >> 2] = 0;
  $934 = $vararg_buffer2 + 4 | 0;
  HEAP32[$vararg_buffer2 >> 2] = $934;
  do if (($$462$i | 0) < ($728 | 0)) {
   $936 = HEAP32[$6 >> 2] | 0;
   if (($936 | 0) == ($54 | 0)) break;
   $938 = $934;
   $$sroa$046$068$i$i = $936;
   $1607 = 0;
   while (1) {
    $939 = $$sroa$046$068$i$i + 16 | 0;
    $$013$i$i34$i$i = HEAP32[$452 >> 2] | 0;
    L499 : do if (!$$013$i$i34$i$i) label = 353; else {
     $941 = HEAP32[$939 >> 2] | 0;
     $$014$i$i36$i$i = $$013$i$i34$i$i;
     while (1) {
      $943 = HEAP32[$$014$i$i36$i$i + 16 >> 2] | 0;
      if ($941 >>> 0 < $943 >>> 0) $$0$in$be$i$i37$i$i = $$014$i$i36$i$i; else {
       if ($943 >>> 0 >= $941 >>> 0) {
        $1020 = $1607;
        break L499;
       }
       $$0$in$be$i$i37$i$i = $$014$i$i36$i$i + 4 | 0;
      }
      $$014$i$i36$i$i = HEAP32[$$0$in$be$i$i37$i$i >> 2] | 0;
      if (!$$014$i$i36$i$i) {
       label = 353;
       break;
      }
     }
    } while (0);
    L508 : do if ((label | 0) == 353) {
     label = 0;
     $$013$i$i26$i$i = HEAP32[$456 >> 2] | 0;
     if ($$013$i$i26$i$i | 0) {
      $949 = HEAP32[$939 >> 2] | 0;
      $$014$i$i28$i$i = $$013$i$i26$i$i;
      do {
       $951 = HEAP32[$$014$i$i28$i$i + 16 >> 2] | 0;
       if ($949 >>> 0 < $951 >>> 0) $$0$in$be$i$i29$i$i = $$014$i$i28$i$i; else {
        if ($951 >>> 0 >= $949 >>> 0) {
         $1020 = $1607;
         break L508;
        }
        $$0$in$be$i$i29$i$i = $$014$i$i28$i$i + 4 | 0;
       }
       $$014$i$i28$i$i = HEAP32[$$0$in$be$i$i29$i$i >> 2] | 0;
      } while (($$014$i$i28$i$i | 0) != 0);
     }
     $$013$i$i18$i$i = HEAP32[$460 >> 2] | 0;
     if ($$013$i$i18$i$i | 0) {
      $957 = HEAP32[$939 >> 2] | 0;
      $$014$i$i20$i$i = $$013$i$i18$i$i;
      do {
       $959 = HEAP32[$$014$i$i20$i$i + 16 >> 2] | 0;
       if ($957 >>> 0 < $959 >>> 0) $$0$in$be$i$i21$i$i = $$014$i$i20$i$i; else {
        if ($959 >>> 0 >= $957 >>> 0) {
         $1020 = $1607;
         break L508;
        }
        $$0$in$be$i$i21$i$i = $$014$i$i20$i$i + 4 | 0;
       }
       $$014$i$i20$i$i = HEAP32[$$0$in$be$i$i21$i$i >> 2] | 0;
      } while (($$014$i$i20$i$i | 0) != 0);
     }
     $$013$i$i10$i$i = HEAP32[$464 >> 2] | 0;
     if ($$013$i$i10$i$i | 0) {
      $965 = HEAP32[$939 >> 2] | 0;
      $$014$i$i12$i$i = $$013$i$i10$i$i;
      do {
       $967 = HEAP32[$$014$i$i12$i$i + 16 >> 2] | 0;
       if ($965 >>> 0 < $967 >>> 0) $$0$in$be$i$i13$i$i = $$014$i$i12$i$i; else {
        if ($967 >>> 0 >= $965 >>> 0) {
         $1020 = $1607;
         break L508;
        }
        $$0$in$be$i$i13$i$i = $$014$i$i12$i$i + 4 | 0;
       }
       $$014$i$i12$i$i = HEAP32[$$0$in$be$i$i13$i$i >> 2] | 0;
      } while (($$014$i$i12$i$i | 0) != 0);
     }
     $$013$i$i$i$i = HEAP32[$468 >> 2] | 0;
     if ($$013$i$i$i$i | 0) {
      $973 = HEAP32[$939 >> 2] | 0;
      $$014$i$i$i$i = $$013$i$i$i$i;
      do {
       $975 = HEAP32[$$014$i$i$i$i + 16 >> 2] | 0;
       if ($973 >>> 0 < $975 >>> 0) $$0$in$be$i$i$i$i = $$014$i$i$i$i; else {
        if ($975 >>> 0 >= $973 >>> 0) {
         $1020 = $1607;
         break L508;
        }
        $$0$in$be$i$i$i$i = $$014$i$i$i$i + 4 | 0;
       }
       $$014$i$i$i$i = HEAP32[$$0$in$be$i$i$i$i >> 2] | 0;
      } while (($$014$i$i$i$i | 0) != 0);
     }
     $980 = HEAP32[$934 >> 2] | 0;
     do if (!$980) {
      HEAP32[$vararg_buffer26 >> 2] = $934;
      $$0$19$i$i$i$i$i = $938;
      $$020$i$i$i$i$i$i = $934;
     } else {
      $982 = HEAP32[$939 >> 2] | 0;
      $$0$i$i$i$i$i$i = $980;
      while (1) {
       $984 = HEAP32[$$0$i$i$i$i$i$i + 16 >> 2] | 0;
       if ($982 >>> 0 < $984 >>> 0) {
        $986 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
        if (!$986) {
         label = 385;
         break;
        } else $$sink$i$i$i$i$i$i = $986;
       } else {
        if ($984 >>> 0 >= $982 >>> 0) {
         label = 390;
         break;
        }
        $990 = $$0$i$i$i$i$i$i + 4 | 0;
        $991 = HEAP32[$990 >> 2] | 0;
        if (!$991) {
         label = 389;
         break;
        } else $$sink$i$i$i$i$i$i = $991;
       }
       $$0$i$i$i$i$i$i = $$sink$i$i$i$i$i$i;
      }
      if ((label | 0) == 385) {
       label = 0;
       HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i$i$i;
       $$0$19$i$i$i$i$i = $$0$i$i$i$i$i$i;
       $$020$i$i$i$i$i$i = $$0$i$i$i$i$i$i;
       break;
      } else if ((label | 0) == 389) {
       label = 0;
       HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i$i$i;
       $$0$19$i$i$i$i$i = $$0$i$i$i$i$i$i;
       $$020$i$i$i$i$i$i = $990;
       break;
      } else if ((label | 0) == 390) {
       label = 0;
       HEAP32[$vararg_buffer26 >> 2] = $$0$i$i$i$i$i$i;
       $$0$19$i$i$i$i$i = $$0$i$i$i$i$i$i;
       $$020$i$i$i$i$i$i = $vararg_buffer26;
       break;
      }
     } while (0);
     if (!(HEAP32[$$020$i$i$i$i$i$i >> 2] | 0)) {
      $997 = __Znwj(20) | 0;
      HEAP32[$997 + 16 >> 2] = HEAP32[$939 >> 2];
      HEAP32[$997 >> 2] = 0;
      HEAP32[$997 + 4 >> 2] = 0;
      HEAP32[$997 + 8 >> 2] = $$0$19$i$i$i$i$i;
      HEAP32[$$020$i$i$i$i$i$i >> 2] = $997;
      $1003 = HEAP32[HEAP32[$vararg_buffer2 >> 2] >> 2] | 0;
      if (!$1003) $1007 = $997; else {
       HEAP32[$vararg_buffer2 >> 2] = $1003;
       $1007 = HEAP32[$$020$i$i$i$i$i$i >> 2] | 0;
      }
      __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$932 >> 2] | 0, $1007);
      $1009 = (HEAP32[$933 >> 2] | 0) + 1 | 0;
      HEAP32[$933 >> 2] = $1009;
      $1608 = $1009;
     } else $1608 = $1607;
     $1020 = $1608;
    } while (0);
    $1011 = HEAP32[$$sroa$046$068$i$i + 4 >> 2] | 0;
    if (!$1011) {
     $$0$i$i$i$i59 = $$sroa$046$068$i$i;
     while (1) {
      $1016 = HEAP32[$$0$i$i$i$i59 + 8 >> 2] | 0;
      if ((HEAP32[$1016 >> 2] | 0) == ($$0$i$i$i$i59 | 0)) {
       $$05$i$i$i$i = $1016;
       break;
      } else $$0$i$i$i$i59 = $1016;
     }
    } else {
     $$0$i$i$i$i$i58 = $1011;
     while (1) {
      $1013 = HEAP32[$$0$i$i$i$i$i58 >> 2] | 0;
      if (!$1013) {
       $$05$i$i$i$i = $$0$i$i$i$i$i58;
       break;
      } else $$0$i$i$i$i$i58 = $1013;
     }
    }
    if (($$05$i$i$i$i | 0) == ($54 | 0)) break; else {
     $$sroa$046$068$i$i = $$05$i$i$i$i;
     $1607 = $1020;
    }
   }
   if (!$1020) break;
   $1022 = HEAP32[$729 >> 2] | 0;
   $1023 = $vararg_buffer6 + 8 | 0;
   $1024 = HEAP32[$1023 >> 2] | 0;
   if (($1022 | 0) != ($1024 | 0)) {
    HEAP32[$1022 >> 2] = 93124;
    HEAP32[$1022 + 4 >> 2] = 114224;
    HEAP32[$1022 + 8 >> 2] = $vararg_buffer2;
    HEAP32[$729 >> 2] = (HEAP32[$729 >> 2] | 0) + 12;
    break;
   }
   $1030 = HEAP32[$vararg_buffer6 >> 2] | 0;
   $1033 = (($1022 - $1030 | 0) / 12 | 0) + 1 | 0;
   if ($1033 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($vararg_buffer6);
   $1036 = ($1024 - $1030 | 0) / 12 | 0;
   do if ($1036 >>> 0 < 178956970) {
    $1041 = $1036 << 1;
    $$sroa$speculated$i$i$i193$i = $1041 >>> 0 < $1033 >>> 0 ? $1033 : $1041;
    $1043 = HEAP32[$729 >> 2] | 0;
    $1045 = ($1043 - $1030 | 0) / 12 | 0;
    if (!$$sroa$speculated$i$i$i193$i) {
     $$0$i22$i$i197$i = 0;
     $1052 = 0;
     $1053 = $1045;
     $1059 = $1043;
     break;
    }
    if ($$sroa$speculated$i$i$i193$i >>> 0 <= 357913941) {
     $$0$i2123$i$i195$i = $$sroa$speculated$i$i$i193$i;
     $1609 = $1043;
     $1610 = $1045;
     label = 412;
     break;
    }
    $1048 = ___cxa_allocate_exception(4) | 0;
    __ZNSt9bad_allocC2Ev($1048);
    ___cxa_throw($1048 | 0, 1824, 151);
   } else {
    $1038 = HEAP32[$729 >> 2] | 0;
    $$0$i2123$i$i195$i = 357913941;
    $1609 = $1038;
    $1610 = ($1038 - $1030 | 0) / 12 | 0;
    label = 412;
   } while (0);
   if ((label | 0) == 412) {
    $$0$i22$i$i197$i = $$0$i2123$i$i195$i;
    $1052 = __Znwj($$0$i2123$i$i195$i * 12 | 0) | 0;
    $1053 = $1610;
    $1059 = $1609;
   }
   $1051 = $1052 + ($1053 * 12 | 0) | 0;
   HEAP32[$1051 >> 2] = 93124;
   HEAP32[$1052 + ($1053 * 12 | 0) + 4 >> 2] = 114224;
   HEAP32[$1052 + ($1053 * 12 | 0) + 8 >> 2] = $vararg_buffer2;
   $1058 = $1059 - $1030 | 0;
   $1061 = $1051 + ((($1058 | 0) / -12 | 0) * 12 | 0) | 0;
   if (($1058 | 0) > 0) _memcpy($1061 | 0, $1030 | 0, $1058 | 0) | 0;
   HEAP32[$vararg_buffer6 >> 2] = $1061;
   HEAP32[$729 >> 2] = $1051 + 12;
   HEAP32[$1023 >> 2] = $1052 + ($$0$i22$i$i197$i * 12 | 0);
   if (!$1030) break;
   __ZdlPv($1030);
  } while (0);
  $1067 = HEAP32[$vararg_buffer6 >> 2] | 0;
  $$idx80$val$cast$i = $1067;
  $$idx82$val738$i = HEAP32[$729 >> 2] | 0;
  if (($$idx80$val$cast$i | 0) == ($$idx82$val738$i | 0)) $$0347$lcssa$i = 0; else {
   $1072 = $1 + 11 | 0;
   $1073 = $1 + 4 | 0;
   $1074 = $2 + 11 | 0;
   $1075 = $2 + 4 | 0;
   $1076 = $0 + 11 | 0;
   $1077 = $0 + 4 | 0;
   $1078 = $11 + 8 | 0;
   $1079 = $vararg_buffer10 + 11 | 0;
   $1080 = $vararg_buffer10 + 4 | 0;
   $1081 = $vararg_buffer26 + 11 | 0;
   $1082 = $vararg_buffer26 + 4 | 0;
   $1083 = $vararg_buffer22 + 11 | 0;
   $1084 = $vararg_buffer22 + 4 | 0;
   $1085 = $vararg_buffer22 + 11 | 0;
   $1086 = $vararg_buffer22 + 4 | 0;
   $1087 = $vararg_buffer22 + 11 | 0;
   $1088 = $vararg_buffer22 + 4 | 0;
   $1089 = $vararg_buffer22 + 11 | 0;
   $1090 = $vararg_buffer22 + 4 | 0;
   $1091 = $vararg_buffer26 + 11 | 0;
   $1092 = $vararg_buffer26 + 4 | 0;
   $1093 = $vararg_buffer18 + 11 | 0;
   $1094 = $vararg_buffer22 + 11 | 0;
   $1095 = $vararg_buffer22 + 4 | 0;
   $$0342741$i = $728;
   $$0347740$i = 0;
   $$0743$in$i = ($$idx82$val738$i - $1067 | 0) / 12 | 0;
   $$157$off0742$i = $$056$off0352$i;
   $$sroa$0228$0739$i = $$idx80$val$cast$i;
   while (1) {
    $$0743$in$i = $$0743$in$i + -1 | 0;
    $1099 = HEAP32[$$sroa$0228$0739$i + 8 >> 2] | 0;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($0, $$0743$in$i, 32);
    $1100 = HEAP32[$$sroa$0228$0739$i >> 2] | 0;
    HEAP32[$1 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $1100, _strlen($1100) | 0);
    $1103 = HEAP32[$$sroa$0228$0739$i + 4 >> 2] | 0;
    HEAP32[$2 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $1103, _strlen($1103) | 0);
    do if (!(HEAP32[$1099 + 8 >> 2] | 0)) {
     $$3350$i = $$0347740$i;
     $$4346$i = $$0342741$i;
    } else {
     $1108 = HEAP8[$1072 >> 0] | 0;
     $1112 = $1108 << 24 >> 24 < 0 ? HEAP32[$1073 >> 2] | 0 : $1108 & 255;
     if (!$1112) $$1343$i = $$0342741$i; else {
      if (($$0342741$i | 0) < 2) {
       $$3350$i = $$0347740$i;
       $$4346$i = $$0342741$i;
       break;
      }
      HEAP32[$vararg_buffer26 >> 2] = 0;
      HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
      HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
      $1116 = HEAP8[$1076 >> 0] | 0;
      $1117 = $1116 << 24 >> 24 < 0;
      $1120 = $1117 ? HEAP32[$1077 >> 2] | 0 : $1116 & 255;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($vararg_buffer26, $1117 ? HEAP32[$0 >> 2] | 0 : $0, $1120, $1120 + $1112 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($vararg_buffer26, (HEAP8[$1072 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, $1112) | 0;
      $1128 = HEAP32[$725 >> 2] | 0;
      if ($1128 >>> 0 < (HEAP32[$1078 >> 2] | 0) >>> 0) {
       HEAP32[$1128 >> 2] = HEAP32[$vararg_buffer26 >> 2];
       HEAP32[$1128 + 4 >> 2] = HEAP32[$vararg_buffer26 + 4 >> 2];
       HEAP32[$1128 + 8 >> 2] = HEAP32[$vararg_buffer26 + 8 >> 2];
       HEAP32[$vararg_buffer26 >> 2] = 0;
       HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
       HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
       HEAP32[$725 >> 2] = (HEAP32[$725 >> 2] | 0) + 12;
      } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($11, $vararg_buffer26);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer26);
      $1133 = HEAP8[$1072 >> 0] | 0;
      $1137 = $1133 << 24 >> 24 < 0 ? HEAP32[$1073 >> 2] | 0 : $1133 & 255;
      HEAP32[$vararg_buffer22 >> 2] = 0;
      HEAP32[$vararg_buffer22 + 4 >> 2] = 0;
      HEAP32[$vararg_buffer22 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($vararg_buffer22, $1137, 45);
      $1138 = HEAP8[$1076 >> 0] | 0;
      $1139 = $1138 << 24 >> 24 < 0;
      $1145 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($vararg_buffer22, 0, $1139 ? HEAP32[$0 >> 2] | 0 : $0, $1139 ? HEAP32[$1077 >> 2] | 0 : $1138 & 255) | 0;
      HEAP32[$vararg_buffer26 >> 2] = HEAP32[$1145 >> 2];
      HEAP32[$vararg_buffer26 + 4 >> 2] = HEAP32[$1145 + 4 >> 2];
      HEAP32[$vararg_buffer26 + 8 >> 2] = HEAP32[$1145 + 8 >> 2];
      HEAP32[$1145 >> 2] = 0;
      HEAP32[$1145 + 4 >> 2] = 0;
      HEAP32[$1145 + 8 >> 2] = 0;
      $1146 = HEAP32[$725 >> 2] | 0;
      if ($1146 >>> 0 < (HEAP32[$1078 >> 2] | 0) >>> 0) {
       HEAP32[$1146 >> 2] = HEAP32[$vararg_buffer26 >> 2];
       HEAP32[$1146 + 4 >> 2] = HEAP32[$vararg_buffer26 + 4 >> 2];
       HEAP32[$1146 + 8 >> 2] = HEAP32[$vararg_buffer26 + 8 >> 2];
       HEAP32[$vararg_buffer26 >> 2] = 0;
       HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
       HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
       HEAP32[$725 >> 2] = (HEAP32[$725 >> 2] | 0) + 12;
      } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($11, $vararg_buffer26);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer26);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer22);
      $$1343$i = $$0342741$i + -2 | 0;
     }
     $1151 = HEAP32[$1099 >> 2] | 0;
     $1152 = $1099 + 4 | 0;
     L618 : do if (($1151 | 0) == ($1152 | 0)) {
      $$2349$i = $$0347740$i;
      $$3345$i = $$1343$i;
     } else {
      $$1348$i = $$0347740$i;
      $$2344$i = $$1343$i;
      $$sroa$046$0164$i$i = $1151;
      while (1) {
       if (($$2344$i | 0) <= 0) {
        $$2349$i = $$1348$i;
        $$3345$i = $$2344$i;
        break L618;
       }
       $1162 = $$2344$i + -1 | 0;
       $1163 = $$1348$i + 1 | 0;
       $1165 = HEAP32[$$sroa$046$0164$i$i + 16 >> 2] | 0;
       if ($$157$off0742$i) {
        __ZN6google15DescribeOneFlagERKNS_19CommandLineFlagInfoE($vararg_buffer10, $1165);
        HEAP32[$vararg_buffer26 >> 2] = 0;
        HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
        HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
        $1166 = $1165 + 11 | 0;
        $1167 = HEAP8[$1166 >> 0] | 0;
        $1172 = $1167 << 24 >> 24 < 0 ? HEAP32[$1165 + 4 >> 2] | 0 : $1167 & 255;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($vararg_buffer26, 93142, 1, $1172 + 1 | 0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($vararg_buffer26, (HEAP8[$1166 >> 0] | 0) < 0 ? HEAP32[$1165 >> 2] | 0 : $1165, $1172) | 0;
        $1178 = HEAP8[$1079 >> 0] | 0;
        $1179 = $1178 << 24 >> 24 < 0;
        $1183 = $1179 ? HEAP32[$vararg_buffer10 >> 2] | 0 : $vararg_buffer10;
        $1184 = $1179 ? HEAP32[$1080 >> 2] | 0 : $1178 & 255;
        $1185 = HEAP8[$1081 >> 0] | 0;
        $1186 = $1185 << 24 >> 24 < 0;
        $1188 = $1186 ? HEAP32[$vararg_buffer26 >> 2] | 0 : $vararg_buffer26;
        $1191 = $1186 ? HEAP32[$1082 >> 2] | 0 : $1185 & 255;
        do if ($1184 >>> 0 < $1191 >>> 0) $$1$i$i$i$i$i = -1; else {
         if (!$1191) {
          $$1$i$i$i$i$i = 0;
          break;
         }
         $1194 = $1183 + $1184 | 0;
         $1195 = $1188 + $1191 | 0;
         $1196 = $1183;
         $1197 = $1194;
         L628 : do if (($1184 | 0) < ($1191 | 0)) $$sroa$0$0$i$i$i$i$i = $1197; else {
          $1200 = $1194 + (1 - $1191) | 0;
          if (($1200 | 0) == ($1183 | 0)) {
           $$sroa$0$0$i$i$i$i$i = $1197;
           break;
          }
          $1202 = HEAP8[$1188 >> 0] | 0;
          $$sroa$033$044$i$i$i$i$i$i = $1196;
          $1611 = $1183;
          while (1) {
           $$sroa$033$142$i$i$i$i$i$i = $$sroa$033$044$i$i$i$i$i$i;
           $1204 = $1611;
           while (1) {
            if ((HEAP8[$1204 >> 0] | 0) == $1202 << 24 >> 24) {
             $$0$i$i$i$i$i208$i = $1188;
             $$026$i$i$i$i$i$i = $1204;
             break;
            }
            $1206 = $1204 + 1 | 0;
            if (($1206 | 0) == ($1200 | 0)) {
             $$sroa$0$0$i$i$i$i$i = $1197;
             break L628;
            } else {
             $$sroa$033$142$i$i$i$i$i$i = $1206;
             $1204 = $1206;
            }
           }
           do {
            $$0$i$i$i$i$i208$i = $$0$i$i$i$i$i208$i + 1 | 0;
            if (($$0$i$i$i$i$i208$i | 0) == ($1195 | 0)) {
             $$sroa$0$0$i$i$i$i$i = $$sroa$033$142$i$i$i$i$i$i;
             break L628;
            }
            $$026$i$i$i$i$i$i = $$026$i$i$i$i$i$i + 1 | 0;
           } while ((HEAP8[$$026$i$i$i$i$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i$i$i208$i >> 0] | 0));
           $1215 = $1204 + 1 | 0;
           if (($1215 | 0) == ($1200 | 0)) {
            $$sroa$0$0$i$i$i$i$i = $1197;
            break;
           } else {
            $$sroa$033$044$i$i$i$i$i$i = $1215;
            $1611 = $1215;
           }
          }
         } while (0);
         $$1$i$i$i$i$i = ($$sroa$0$0$i$i$i$i$i | 0) == ($1194 | 0) ? -1 : $$sroa$0$0$i$i$i$i$i - $1196 | 0;
        } while (0);
        HEAP32[$vararg_buffer22 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 4 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 8 >> 2] = 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($vararg_buffer22, 93142, 1, $1191 + 1 | 0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($vararg_buffer22, (HEAP8[$1081 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer26 >> 2] | 0 : $vararg_buffer26, $1191) | 0;
        $1226 = HEAP8[$1083 >> 0] | 0;
        $1227 = $1226 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKcj($vararg_buffer10, $$1$i$i$i$i$i, $1191, $1227 ? HEAP32[$vararg_buffer22 >> 2] | 0 : $vararg_buffer22, $1227 ? HEAP32[$1084 >> 2] | 0 : $1226 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer22);
        $1233 = HEAP8[$1079 >> 0] | 0;
        $1234 = $1233 << 24 >> 24 < 0;
        $1238 = $1234 ? HEAP32[$vararg_buffer10 >> 2] | 0 : $vararg_buffer10;
        $1239 = $1234 ? HEAP32[$1080 >> 2] | 0 : $1233 & 255;
        if ($1239 >>> 0 < 6) $$1$i$i49$i$i$i = -1; else {
         $1241 = $1238 + $1239 | 0;
         $1242 = $1238;
         $1243 = $1241;
         L644 : do if (($1239 | 0) < 6) $$sroa$0$0$i$i46$i$i$i = $1243; else {
          $1245 = $1241 + -5 | 0;
          if (($1245 | 0) == ($1238 | 0)) {
           $$sroa$0$0$i$i46$i$i$i = $1243;
           break;
          } else {
           $$sroa$033$044$i$i$i39$i$i$i = $1242;
           $1612 = $1238;
          }
          while (1) {
           $$sroa$033$142$i$i$i41$i$i$i = $$sroa$033$044$i$i$i39$i$i$i;
           $1248 = $1612;
           while (1) {
            if ((HEAP8[$1248 >> 0] | 0) == 32) {
             $$0$i$i$i44$i$i$i = 93144;
             $$026$i$i$i43$i$i$i = $1248;
             break;
            }
            $1250 = $1248 + 1 | 0;
            if (($1250 | 0) == ($1245 | 0)) {
             $$sroa$0$0$i$i46$i$i$i = $1243;
             break L644;
            } else {
             $$sroa$033$142$i$i$i41$i$i$i = $1250;
             $1248 = $1250;
            }
           }
           do {
            $$0$i$i$i44$i$i$i = $$0$i$i$i44$i$i$i + 1 | 0;
            if (($$0$i$i$i44$i$i$i | 0) == 93150) {
             $$sroa$0$0$i$i46$i$i$i = $$sroa$033$142$i$i$i41$i$i$i;
             break L644;
            }
            $$026$i$i$i43$i$i$i = $$026$i$i$i43$i$i$i + 1 | 0;
           } while ((HEAP8[$$026$i$i$i43$i$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i44$i$i$i >> 0] | 0));
           $1259 = $1248 + 1 | 0;
           if (($1259 | 0) == ($1245 | 0)) {
            $$sroa$0$0$i$i46$i$i$i = $1243;
            break;
           } else {
            $$sroa$033$044$i$i$i39$i$i$i = $1259;
            $1612 = $1259;
           }
          }
         } while (0);
         $$1$i$i49$i$i$i = ($$sroa$0$0$i$i46$i$i$i | 0) == ($1241 | 0) ? -1 : $$sroa$0$0$i$i46$i$i$i - $1242 | 0;
        };
        HEAP32[$vararg_buffer22 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 4 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 8 >> 2] = 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer22, 92506, 5);
        $1265 = HEAP8[$1085 >> 0] | 0;
        $1266 = $1265 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKcj($vararg_buffer10, $$1$i$i49$i$i$i, 1, $1266 ? HEAP32[$vararg_buffer22 >> 2] | 0 : $vararg_buffer22, $1266 ? HEAP32[$1086 >> 2] | 0 : $1265 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer22);
        $1272 = HEAP8[$1079 >> 0] | 0;
        $1273 = $1272 << 24 >> 24 < 0;
        $1277 = $1273 ? HEAP32[$vararg_buffer10 >> 2] | 0 : $vararg_buffer10;
        $1278 = $1273 ? HEAP32[$1080 >> 2] | 0 : $1272 & 255;
        if ($1278 >>> 0 < 9) $$1$i$i63$i$i$i = -1; else {
         $1280 = $1277 + $1278 | 0;
         $1281 = $1277;
         $1282 = $1280;
         L659 : do if (($1278 | 0) < 9) $$sroa$0$0$i$i60$i$i$i = $1282; else {
          $1284 = $1280 + -8 | 0;
          if (($1284 | 0) == ($1277 | 0)) {
           $$sroa$0$0$i$i60$i$i$i = $1282;
           break;
          } else {
           $$sroa$033$044$i$i$i53$i$i$i = $1281;
           $1613 = $1277;
          }
          while (1) {
           $$sroa$033$142$i$i$i55$i$i$i = $$sroa$033$044$i$i$i53$i$i$i;
           $1287 = $1613;
           while (1) {
            if ((HEAP8[$1287 >> 0] | 0) == 32) {
             $$0$i$i$i58$i$i$i = 93151;
             $$026$i$i$i57$i$i$i = $1287;
             break;
            }
            $1289 = $1287 + 1 | 0;
            if (($1289 | 0) == ($1284 | 0)) {
             $$sroa$0$0$i$i60$i$i$i = $1282;
             break L659;
            } else {
             $$sroa$033$142$i$i$i55$i$i$i = $1289;
             $1287 = $1289;
            }
           }
           do {
            $$0$i$i$i58$i$i$i = $$0$i$i$i58$i$i$i + 1 | 0;
            if (($$0$i$i$i58$i$i$i | 0) == 93160) {
             $$sroa$0$0$i$i60$i$i$i = $$sroa$033$142$i$i$i55$i$i$i;
             break L659;
            }
            $$026$i$i$i57$i$i$i = $$026$i$i$i57$i$i$i + 1 | 0;
           } while ((HEAP8[$$026$i$i$i57$i$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i58$i$i$i >> 0] | 0));
           $1298 = $1287 + 1 | 0;
           if (($1298 | 0) == ($1284 | 0)) {
            $$sroa$0$0$i$i60$i$i$i = $1282;
            break;
           } else {
            $$sroa$033$044$i$i$i53$i$i$i = $1298;
            $1613 = $1298;
           }
          }
         } while (0);
         $$1$i$i63$i$i$i = ($$sroa$0$0$i$i60$i$i$i | 0) == ($1280 | 0) ? -1 : $$sroa$0$0$i$i60$i$i$i - $1281 | 0;
        };
        HEAP32[$vararg_buffer22 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 4 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 8 >> 2] = 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer22, 92506, 5);
        $1304 = HEAP8[$1087 >> 0] | 0;
        $1305 = $1304 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKcj($vararg_buffer10, $$1$i$i63$i$i$i, 1, $1305 ? HEAP32[$vararg_buffer22 >> 2] | 0 : $vararg_buffer22, $1305 ? HEAP32[$1088 >> 2] | 0 : $1304 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer22);
        $$$i$i$i = (HEAP8[$1166 >> 0] | 0) < 0 ? HEAP32[$1165 >> 2] | 0 : $1165;
        $1321 = (HEAP8[$1079 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer10 >> 2] | 0 : $vararg_buffer10;
        $1322 = $1165 + 60 | 0;
        $1327 = (HEAP8[$1322 + 11 >> 0] | 0) < 0 ? HEAP32[$1322 >> 2] | 0 : $1322;
        HEAP32[$vararg_buffer30 >> 2] = (HEAP8[$1076 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0;
        HEAP32[$vararg_buffer30 + 4 >> 2] = $$$i$i$i;
        HEAP32[$vararg_buffer30 + 8 >> 2] = $1321;
        HEAP32[$vararg_buffer30 + 12 >> 2] = $1327;
        __ZN6google12StringPrintfEPKcz($vararg_buffer22, 93161, $vararg_buffer30);
        if ((HEAP8[$1079 >> 0] | 0) < 0) {
         HEAP8[HEAP32[$vararg_buffer10 >> 2] >> 0] = 0;
         HEAP32[$1080 >> 2] = 0;
        } else {
         HEAP8[$vararg_buffer10 >> 0] = 0;
         HEAP8[$1079 >> 0] = 0;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($vararg_buffer10, 0);
        HEAP32[$vararg_buffer10 >> 2] = HEAP32[$vararg_buffer22 >> 2];
        HEAP32[$vararg_buffer10 + 4 >> 2] = HEAP32[$vararg_buffer22 + 4 >> 2];
        HEAP32[$vararg_buffer10 + 8 >> 2] = HEAP32[$vararg_buffer22 + 8 >> 2];
        HEAP32[$vararg_buffer22 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 4 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 8 >> 2] = 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer22);
        do if (!(HEAP8[106272] | 0)) {
         if (!(___cxa_guard_acquire(106272) | 0)) break;
         $1335 = HEAP32[17380] | 0;
         HEAP32[27128] = 0;
         HEAP32[27129] = 0;
         HEAP32[27130] = 0;
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(108512, $1335, 32);
         ___cxa_atexit(164, 108512, ___dso_handle | 0) | 0;
        } while (0);
        $1336 = HEAP8[$1079 >> 0] | 0;
        $1337 = $1336 << 24 >> 24 < 0;
        $1341 = $1337 ? HEAP32[$vararg_buffer10 >> 2] | 0 : $vararg_buffer10;
        $1342 = $1337 ? HEAP32[$1080 >> 2] | 0 : $1336 & 255;
        L680 : do if ($1342 >>> 0 >= 7) {
         $1344 = $1341 + $1342 | 0;
         $1345 = $1341;
         $1346 = $1344;
         L682 : do if (($1342 | 0) < 7) $$sroa$0$0$i$i83$i$i$i = $1346; else {
          $1348 = $1344 + -6 | 0;
          if (($1348 | 0) == ($1341 | 0)) {
           $$sroa$0$0$i$i83$i$i$i = $1346;
           break;
          } else {
           $$sroa$033$044$i$i$i76$i$i$i = $1345;
           $1614 = $1341;
          }
          while (1) {
           $$sroa$033$142$i$i$i78$i$i$i = $$sroa$033$044$i$i$i76$i$i$i;
           $1351 = $1614;
           while (1) {
            if ((HEAP8[$1351 >> 0] | 0) == 10) {
             $$0$i$i$i81$i$i$i = 92498;
             $$026$i$i$i80$i$i$i = $1351;
             break;
            }
            $1353 = $1351 + 1 | 0;
            if (($1353 | 0) == ($1348 | 0)) {
             $$sroa$0$0$i$i83$i$i$i = $1346;
             break L682;
            } else {
             $$sroa$033$142$i$i$i78$i$i$i = $1353;
             $1351 = $1353;
            }
           }
           do {
            $$0$i$i$i81$i$i$i = $$0$i$i$i81$i$i$i + 1 | 0;
            if (($$0$i$i$i81$i$i$i | 0) == 92505) {
             $$sroa$0$0$i$i83$i$i$i = $$sroa$033$142$i$i$i78$i$i$i;
             break L682;
            }
            $$026$i$i$i80$i$i$i = $$026$i$i$i80$i$i$i + 1 | 0;
           } while ((HEAP8[$$026$i$i$i80$i$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i81$i$i$i >> 0] | 0));
           $1362 = $1351 + 1 | 0;
           if (($1362 | 0) == ($1348 | 0)) {
            $$sroa$0$0$i$i83$i$i$i = $1346;
            break;
           } else {
            $$sroa$033$044$i$i$i76$i$i$i = $1362;
            $1614 = $1362;
           }
          }
         } while (0);
         $1367 = $$sroa$0$0$i$i83$i$i$i - $1345 | 0;
         if (($$sroa$0$0$i$i83$i$i$i | 0) == ($1344 | 0) | ($1367 | 0) == -1) break; else $$026139$i$i$i = $1367;
         do {
          HEAP32[$vararg_buffer22 >> 2] = 0;
          HEAP32[$vararg_buffer22 + 4 >> 2] = 0;
          HEAP32[$vararg_buffer22 + 8 >> 2] = 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer22, 93202, 1);
          $1371 = HEAP8[$1089 >> 0] | 0;
          $1372 = $1371 << 24 >> 24 < 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKcj($vararg_buffer10, $$026139$i$i$i, 7, $1372 ? HEAP32[$vararg_buffer22 >> 2] | 0 : $vararg_buffer22, $1372 ? HEAP32[$1090 >> 2] | 0 : $1371 & 255) | 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer22);
          $1378 = HEAP8[$1079 >> 0] | 0;
          $1379 = $1378 << 24 >> 24 < 0;
          $1383 = $1379 ? HEAP32[$vararg_buffer10 >> 2] | 0 : $vararg_buffer10;
          $1384 = $1379 ? HEAP32[$1080 >> 2] | 0 : $1378 & 255;
          if ($1384 >>> 0 < 7) break L680;
          $1386 = $1383 + $1384 | 0;
          $1387 = $1383;
          $1388 = $1386;
          L697 : do if (($1384 | 0) < 7) $$sroa$0$0$i$i99$i$i$i = $1388; else {
           $1390 = $1386 + -6 | 0;
           if (($1390 | 0) == ($1383 | 0)) {
            $$sroa$0$0$i$i99$i$i$i = $1388;
            break;
           } else {
            $$sroa$033$044$i$i$i92$i$i$i = $1387;
            $1615 = $1383;
           }
           while (1) {
            $$sroa$033$142$i$i$i94$i$i$i = $$sroa$033$044$i$i$i92$i$i$i;
            $1393 = $1615;
            while (1) {
             if ((HEAP8[$1393 >> 0] | 0) == 10) {
              $$0$i$i$i97$i$i$i = 92498;
              $$026$i$i$i96$i$i$i = $1393;
              break;
             }
             $1395 = $1393 + 1 | 0;
             if (($1395 | 0) == ($1390 | 0)) {
              $$sroa$0$0$i$i99$i$i$i = $1388;
              break L697;
             } else {
              $$sroa$033$142$i$i$i94$i$i$i = $1395;
              $1393 = $1395;
             }
            }
            do {
             $$0$i$i$i97$i$i$i = $$0$i$i$i97$i$i$i + 1 | 0;
             if (($$0$i$i$i97$i$i$i | 0) == 92505) {
              $$sroa$0$0$i$i99$i$i$i = $$sroa$033$142$i$i$i94$i$i$i;
              break L697;
             }
             $$026$i$i$i96$i$i$i = $$026$i$i$i96$i$i$i + 1 | 0;
            } while ((HEAP8[$$026$i$i$i96$i$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i97$i$i$i >> 0] | 0));
            $1404 = $1393 + 1 | 0;
            if (($1404 | 0) == ($1390 | 0)) {
             $$sroa$0$0$i$i99$i$i$i = $1388;
             break;
            } else {
             $$sroa$033$044$i$i$i92$i$i$i = $1404;
             $1615 = $1404;
            }
           }
          } while (0);
          $$026139$i$i$i = $$sroa$0$0$i$i99$i$i$i - $1387 | 0;
         } while (!(($$sroa$0$0$i$i99$i$i$i | 0) == ($1386 | 0) | ($$026139$i$i$i | 0) == -1));
        } while (0);
        $1369 = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcj($vararg_buffer10, 10, 0) | 0;
        if (($1369 | 0) != -1) {
         $$025138$i$i$i = $1369;
         do {
          $1411 = HEAP32[17380] | 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjRKS5_jj($vararg_buffer10, $$025138$i$i$i, 1, 108512, 1, $1411 - (($$025138$i$i$i | 0) % ($1411 | 0) | 0) | 0) | 0;
          $$025138$i$i$i = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcj($vararg_buffer10, 10, 0) | 0;
         } while (($$025138$i$i$i | 0) != -1);
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer26);
       } else {
        HEAP32[$vararg_buffer26 >> 2] = 0;
        HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
        HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
        $1416 = $1165 + 12 | 0;
        $1418 = HEAP8[$1416 + 11 >> 0] | 0;
        if ((($1418 << 24 >> 24 < 0 ? HEAP32[$1165 + 16 >> 2] | 0 : $1418 & 255) | 0) == 6) {
         $1426 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1416, 0, -1, 93204, 6) | 0) == 0;
         $$0$i$i37$i$i = $1426 ? 93211 : 114224;
        } else $$0$i$i37$i$i = 114224;
        $1435 = (HEAP8[$1165 + 11 >> 0] | 0) < 0 ? HEAP32[$1165 >> 2] | 0 : $1165;
        $1436 = $1165 + 48 | 0;
        $1441 = (HEAP8[$1436 + 11 >> 0] | 0) < 0 ? HEAP32[$1436 >> 2] | 0 : $1436;
        HEAP32[$vararg_buffer36 >> 2] = (HEAP8[$1076 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0;
        HEAP32[$vararg_buffer36 + 4 >> 2] = $1435;
        HEAP32[$vararg_buffer36 + 8 >> 2] = $$0$i$i37$i$i;
        HEAP32[$vararg_buffer36 + 12 >> 2] = $1441;
        HEAP32[$vararg_buffer36 + 16 >> 2] = $$0$i$i37$i$i;
        __ZN6google13SStringPrintfEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($vararg_buffer26, 93213, $vararg_buffer36);
        $1443 = HEAP8[$1091 >> 0] | 0;
        $1448 = (HEAP32[17380] | 0) - ($1443 << 24 >> 24 < 0 ? HEAP32[$1092 >> 2] | 0 : $1443 & 255) | 0;
        HEAP32[$vararg_buffer22 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 4 >> 2] = 0;
        HEAP32[$vararg_buffer22 + 8 >> 2] = 0;
        do if (($1448 | 0) > 0) {
         $1450 = $1165 + 24 | 0;
         $1452 = HEAP8[$1450 + 11 >> 0] | 0;
         $1453 = $1452 << 24 >> 24 < 0;
         if ((($1453 ? HEAP32[$1165 + 28 >> 2] | 0 : $1452 & 255) | 0) > ($1448 | 0)) {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($vararg_buffer14, $1450, 0, $1448 + -3 | 0, $1450);
          $1460 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($vararg_buffer14, 93230) | 0;
          HEAP32[$vararg_buffer18 >> 2] = HEAP32[$1460 >> 2];
          HEAP32[$vararg_buffer18 + 4 >> 2] = HEAP32[$1460 + 4 >> 2];
          HEAP32[$vararg_buffer18 + 8 >> 2] = HEAP32[$1460 + 8 >> 2];
          HEAP32[$1460 >> 2] = 0;
          HEAP32[$1460 + 4 >> 2] = 0;
          HEAP32[$1460 + 8 >> 2] = 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($vararg_buffer22, (HEAP8[$1093 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer18 >> 2] | 0 : $vararg_buffer18) | 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer18);
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer14);
          break;
         }
         if ($1453) {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($vararg_buffer22, HEAP32[$1450 >> 2] | 0) | 0;
          break;
         } else {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($vararg_buffer22, $1450) | 0;
          break;
         }
        } while (0);
        HEAP32[$vararg_buffer10 >> 2] = 0;
        HEAP32[$vararg_buffer10 + 4 >> 2] = 0;
        HEAP32[$vararg_buffer10 + 8 >> 2] = 0;
        $1465 = HEAP8[$1091 >> 0] | 0;
        $1466 = $1465 << 24 >> 24 < 0;
        $1469 = $1466 ? HEAP32[$1092 >> 2] | 0 : $1465 & 255;
        $1470 = HEAP8[$1094 >> 0] | 0;
        $1474 = $1470 << 24 >> 24 < 0 ? HEAP32[$1095 >> 2] | 0 : $1470 & 255;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($vararg_buffer10, $1466 ? HEAP32[$vararg_buffer26 >> 2] | 0 : $vararg_buffer26, $1469, $1474 + $1469 | 0);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($vararg_buffer10, (HEAP8[$1094 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer22 >> 2] | 0 : $vararg_buffer22, $1474) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer22);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer26);
       }
       $1482 = HEAP32[$725 >> 2] | 0;
       if ($1482 >>> 0 < (HEAP32[$1078 >> 2] | 0) >>> 0) {
        HEAP32[$1482 >> 2] = HEAP32[$vararg_buffer10 >> 2];
        HEAP32[$1482 + 4 >> 2] = HEAP32[$vararg_buffer10 + 4 >> 2];
        HEAP32[$1482 + 8 >> 2] = HEAP32[$vararg_buffer10 + 8 >> 2];
        HEAP32[$vararg_buffer10 >> 2] = 0;
        HEAP32[$vararg_buffer10 + 4 >> 2] = 0;
        HEAP32[$vararg_buffer10 + 8 >> 2] = 0;
        HEAP32[$725 >> 2] = (HEAP32[$725 >> 2] | 0) + 12;
       } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($11, $vararg_buffer10);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer10);
       $1488 = HEAP32[$$sroa$046$0164$i$i + 4 >> 2] | 0;
       if (!$1488) {
        $$0$i$i$i214$i = $$sroa$046$0164$i$i;
        while (1) {
         $1493 = HEAP32[$$0$i$i$i214$i + 8 >> 2] | 0;
         if ((HEAP32[$1493 >> 2] | 0) == ($$0$i$i$i214$i | 0)) {
          $$05$i$i$i217$i = $1493;
          break;
         } else $$0$i$i$i214$i = $1493;
        }
       } else {
        $$0$i$i$i$i212$i = $1488;
        while (1) {
         $1490 = HEAP32[$$0$i$i$i$i212$i >> 2] | 0;
         if (!$1490) {
          $$05$i$i$i217$i = $$0$i$i$i$i212$i;
          break;
         } else $$0$i$i$i$i212$i = $1490;
        }
       }
       if (($$05$i$i$i217$i | 0) == ($1152 | 0)) {
        $$2349$i = $1163;
        $$3345$i = $1162;
        break;
       } else {
        $$1348$i = $1163;
        $$2344$i = $1162;
        $$sroa$046$0164$i$i = $$05$i$i$i217$i;
       }
      }
     } while (0);
     $1155 = HEAP8[$1074 >> 0] | 0;
     $1159 = $1155 << 24 >> 24 < 0 ? HEAP32[$1075 >> 2] | 0 : $1155 & 255;
     if (($$3345$i | 0) < 1 | ($1159 | 0) == 0) {
      $$3350$i = $$2349$i;
      $$4346$i = $$3345$i;
      break;
     }
     HEAP32[$vararg_buffer26 >> 2] = 0;
     HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
     HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
     $1498 = HEAP8[$1076 >> 0] | 0;
     $1499 = $1498 << 24 >> 24 < 0;
     $1502 = $1499 ? HEAP32[$1077 >> 2] | 0 : $1498 & 255;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($vararg_buffer26, $1499 ? HEAP32[$0 >> 2] | 0 : $0, $1502, $1502 + $1159 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($vararg_buffer26, (HEAP8[$1074 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2, $1159) | 0;
     $1510 = HEAP32[$725 >> 2] | 0;
     if ($1510 >>> 0 < (HEAP32[$1078 >> 2] | 0) >>> 0) {
      HEAP32[$1510 >> 2] = HEAP32[$vararg_buffer26 >> 2];
      HEAP32[$1510 + 4 >> 2] = HEAP32[$vararg_buffer26 + 4 >> 2];
      HEAP32[$1510 + 8 >> 2] = HEAP32[$vararg_buffer26 + 8 >> 2];
      HEAP32[$vararg_buffer26 >> 2] = 0;
      HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
      HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
      HEAP32[$725 >> 2] = (HEAP32[$725 >> 2] | 0) + 12;
     } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($11, $vararg_buffer26);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer26);
     $$3350$i = $$2349$i;
     $$4346$i = $$3345$i + -1 | 0;
    } while (0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $$sroa$0228$0739$i = $$sroa$0228$0739$i + 12 | 0;
    if (($$sroa$0228$0739$i | 0) == (HEAP32[$729 >> 2] | 0)) {
     $$0347$lcssa$i = $$3350$i;
     break;
    } else {
     $$0342741$i = $$4346$i;
     $$0347740$i = $$3350$i;
     $$157$off0742$i = 0;
    }
   }
  }
  if (($$0347$lcssa$i | 0) == (HEAP32[$53 >> 2] | 0)) $$sroa$13$0 = 1; else {
   HEAP32[$vararg_buffer26 >> 2] = 0;
   HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
   HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer26, 93234, 28);
   $1517 = HEAP32[$725 >> 2] | 0;
   if ($1517 >>> 0 < (HEAP32[$11 + 8 >> 2] | 0) >>> 0) {
    HEAP32[$1517 >> 2] = HEAP32[$vararg_buffer26 >> 2];
    HEAP32[$1517 + 4 >> 2] = HEAP32[$vararg_buffer26 + 4 >> 2];
    HEAP32[$1517 + 8 >> 2] = HEAP32[$vararg_buffer26 + 8 >> 2];
    HEAP32[$vararg_buffer26 >> 2] = 0;
    HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
    HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
    HEAP32[$725 >> 2] = (HEAP32[$725 >> 2] | 0) + 12;
   } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($11, $vararg_buffer26);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer26);
   $$sroa$13$0 = 0;
  }
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($vararg_buffer2, HEAP32[$934 >> 2] | 0);
  $1524 = HEAP32[$vararg_buffer6 >> 2] | 0;
  $1526 = $1524;
  if ($1524 | 0) {
   $1527 = HEAP32[$729 >> 2] | 0;
   if (($1527 | 0) != ($1524 | 0)) HEAP32[$729 >> 2] = $1527 + (~((($1527 + -12 - $1526 | 0) >>> 0) / 12 | 0) * 12 | 0);
   __ZdlPv($1524);
  }
  if ($$sroa$13$0 << 24 >> 24) {
   HEAP32[$vararg_buffer26 >> 2] = 0;
   HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
   HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer26, 93263, 1);
   $1534 = HEAP32[$725 >> 2] | 0;
   if ($1534 >>> 0 < (HEAP32[$11 + 8 >> 2] | 0) >>> 0) {
    HEAP32[$1534 >> 2] = HEAP32[$vararg_buffer26 >> 2];
    HEAP32[$1534 + 4 >> 2] = HEAP32[$vararg_buffer26 + 4 >> 2];
    HEAP32[$1534 + 8 >> 2] = HEAP32[$vararg_buffer26 + 8 >> 2];
    HEAP32[$vararg_buffer26 >> 2] = 0;
    HEAP32[$vararg_buffer26 + 4 >> 2] = 0;
    HEAP32[$vararg_buffer26 + 8 >> 2] = 0;
    HEAP32[$725 >> 2] = (HEAP32[$725 >> 2] | 0) + 12;
   } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($11, $vararg_buffer26);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer26);
  }
  $1540 = HEAP32[$11 >> 2] | 0;
  if (($1540 | 0) == (HEAP32[$725 >> 2] | 0)) {
   $1544 = $1540;
   $1546 = $1540;
  } else {
   $1543 = HEAP32[17382] | 0;
   $$sink230 = $1540;
   do {
    if ((HEAP8[$$sink230 + 11 >> 0] | 0) < 0) $1566 = HEAP32[$$sink230 >> 2] | 0; else $1566 = $$sink230;
    HEAP32[$vararg_buffer43 >> 2] = $1566;
    _fprintf($1543, 93265, $vararg_buffer43) | 0;
    $$sink230 = $$sink230 + 12 | 0;
   } while (($$sink230 | 0) != (HEAP32[$725 >> 2] | 0));
   $1544 = HEAP32[$11 >> 2] | 0;
   $1546 = $$sink230;
  }
  if ($1544 | 0) {
   if (($1546 | 0) == ($1544 | 0)) $1552 = $1544; else {
    $1549 = $1546;
    do {
     $1548 = $1549 + -12 | 0;
     HEAP32[$725 >> 2] = $1548;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1548);
     $1549 = HEAP32[$725 >> 2] | 0;
    } while (($1549 | 0) != ($1544 | 0));
    $1552 = HEAP32[$11 >> 2] | 0;
   }
   __ZdlPv($1552);
  }
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($10 + 48 | 0, HEAP32[$468 >> 2] | 0);
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($10 + 36 | 0, HEAP32[$464 >> 2] | 0);
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($10 + 24 | 0, HEAP32[$460 >> 2] | 0);
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($10 + 12 | 0, HEAP32[$456 >> 2] | 0);
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($10, HEAP32[$452 >> 2] | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($6, HEAP32[$54 >> 2] | 0);
 $1571 = HEAP32[$5 >> 2] | 0;
 if (!$1571) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
 $1573 = HEAP32[$50 >> 2] | 0;
 if (($1573 | 0) == ($1571 | 0)) $1584 = $1571; else {
  $1576 = $1573;
  do {
   $1575 = $1576 + -80 | 0;
   HEAP32[$50 >> 2] = $1575;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1576 + -20 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1576 + -32 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1576 + -44 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1576 + -56 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1576 + -68 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1575);
   $1576 = HEAP32[$50 >> 2] | 0;
  } while (($1576 | 0) != ($1571 | 0));
  $1584 = HEAP32[$5 >> 2] | 0;
 }
 __ZdlPv($1584);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __Z12luaV_executeP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$0$i1014$ph = 0, $$0$i1016$ph = 0, $$0$i1026$ph = 0, $$0$i1028$ph = 0, $$0$i1038$ph = 0, $$0$i1040$ph = 0, $$0$i1050$ph = 0, $$0$i1052$ph = 0, $$0$i1062$ph = 0, $$0$i1064$ph = 0, $$0$i1074$ph = 0, $$0$i1076$ph = 0, $$0$i1086$ph1211 = 0, $$0$ph = 0, $$01000 = 0, $$015$i = 0, $$015$i1020 = 0, $$015$i1032 = 0, $$015$i1044 = 0, $$015$i1056 = 0, $$015$i1068 = 0, $$015$i1080 = 0, $$015$i1092 = 0, $$03858$i$i = 0, $$04157$i$i = 0, $$04456$i$i = 0, $$04755$i$i = 0, $$0969 = 0, $$0973 = 0, $$0986 = 0, $$09871160 = 0, $$0988 = 0, $$09941161 = 0, $$0995 = 0, $$09961167 = 0, $$09981165 = 0, $$0999 = 0, $$10983$lcssa = 0, $$109831162 = 0, $$110011164 = 0, $$12 = 0, $$1970 = 0, $$251$i$i = 0, $$2975 = 0, $$3976 = 0, $$4977 = 0, $$5978 = 0, $$6979 = 0, $$8981 = 0, $$9982 = 0, $$lcssa1148 = 0, $$pre1210 = 0, $$sink = 0, $10 = 0, $100 = 0, $1002 = 0, $1004 = 0, $1009 = 0, $1010 = 0, $1016 = 0, $1019 = 0, $1023 = 0, $1028 = 0, $1034 = 0, $1039 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1048 = 0, $1050 = 0, $1055 = 0, $1061 = 0, $1065 = 0, $1071 = 0, $1078 = 0, $1080 = 0, $1081 = 0, $1083 = 0, $1089 = 0, $1098 = 0, $11 = 0, $1100 = 0, $1102 = 0, $1113 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $1121 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1134 = 0, $1135 = 0, $1143 = 0, $1147 = 0, $1151 = 0, $1153 = 0, $1159 = 0, $1160 = 0, $1167 = 0.0, $1169 = 0.0, $1171 = 0.0, $1179 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1191 = 0, $1192 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1220 = 0, $1221 = 0, $1233 = 0, $1238 = 0, $1240 = 0, $1242 = 0, $1248 = 0, $1250 = 0, $1252 = 0, $1258 = 0, $1268 = 0, $1271 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $1281 = 0, $13 = 0, $1301 = 0, $1303 = 0, $1304 = 0, $1306 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1313 = 0, $1323 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1342 = 0, $1343 = 0, $1350 = 0, $1351 = 0, $1354 = 0, $1358 = 0, $1364 = 0, $14 = 0, $146 = 0, $148 = 0, $15 = 0, $150 = 0, $155 = 0, $16 = 0, $164 = 0, $17 = 0, $171 = 0, $18 = 0, $183 = 0, $187 = 0, $19 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $201 = 0, $21 = 0, $210 = 0, $216 = 0, $217 = 0, $22 = 0, $224 = 0, $225 = 0, $23 = 0, $24 = 0, $25 = 0, $252 = 0, $256 = 0, $26 = 0, $260 = 0, $261 = 0, $266 = 0, $27 = 0, $271 = 0, $278 = 0, $28 = 0, $283 = 0, $285 = 0, $286 = 0, $287 = 0, $29 = 0, $293 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $307 = 0, $308 = 0, $31 = 0, $335 = 0, $339 = 0, $34 = 0, $343 = 0, $344 = 0, $349 = 0, $354 = 0, $36 = 0, $361 = 0, $366 = 0, $368 = 0, $369 = 0, $370 = 0, $376 = 0, $38 = 0, $382 = 0, $383 = 0, $390 = 0, $391 = 0, $4 = 0, $41 = 0, $418 = 0, $42 = 0, $422 = 0, $426 = 0, $427 = 0, $43 = 0, $432 = 0, $437 = 0, $44 = 0, $444 = 0, $449 = 0, $45 = 0, $451 = 0, $452 = 0, $453 = 0, $459 = 0, $465 = 0, $466 = 0, $473 = 0, $474 = 0, $49 = 0, $5 = 0, $50 = 0, $501 = 0, $505 = 0, $509 = 0, $510 = 0, $515 = 0, $520 = 0, $527 = 0, $53 = 0, $532 = 0, $534 = 0, $535 = 0, $536 = 0, $54 = 0, $542 = 0, $548 = 0, $549 = 0, $556 = 0, $557 = 0, $563 = 0.0, $564 = 0.0, $583 = 0.0, $584 = 0.0, $590 = 0, $594 = 0, $598 = 0, $599 = 0, $6 = 0, $604 = 0, $609 = 0, $616 = 0, $621 = 0, $623 = 0, $624 = 0, $625 = 0, $631 = 0, $637 = 0, $638 = 0, $645 = 0, $646 = 0, $65 = 0, $67 = 0, $673 = 0, $677 = 0, $681 = 0, $682 = 0, $687 = 0, $692 = 0, $699 = 0, $7 = 0, $704 = 0, $706 = 0, $707 = 0, $708 = 0, $71 = 0, $714 = 0, $715 = 0, $716 = 0, $73 = 0, $735 = 0, $739 = 0, $74 = 0, $743 = 0, $744 = 0, $749 = 0, $754 = 0, $760 = 0, $765 = 0, $767 = 0, $768 = 0, $769 = 0, $775 = 0, $777 = 0, $784 = 0, $786 = 0, $787 = 0, $788 = 0, $799 = 0, $8 = 0, $803 = 0, $807 = 0, $808 = 0, $813 = 0, $818 = 0, $824 = 0, $829 = 0, $831 = 0, $832 = 0, $833 = 0, $839 = 0, $841 = 0, $844 = 0, $85 = 0, $850 = 0, $860 = 0, $866 = 0, $867 = 0, $87 = 0, $874 = 0, $883 = 0, $888 = 0, $891 = 0, $898 = 0, $9 = 0, $911 = 0, $914 = 0, $92 = 0, $920 = 0, $921 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $949 = 0, $951 = 0, $954 = 0, $959 = 0, $963 = 0, $964 = 0, $970 = 0, $973 = 0, $977 = 0, $982 = 0, $988 = 0, $993 = 0, $995 = 0, $996 = 0, $997 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 40 | 0;
 $3 = sp + 32 | 0;
 $4 = sp + 24 | 0;
 $5 = $0 + 24 | 0;
 $6 = $0 + 20 | 0;
 $7 = $0 + 12 | 0;
 $8 = $0 + 56 | 0;
 $9 = $2 + 4 | 0;
 $10 = $2 + 4 | 0;
 $11 = $0 + 16 | 0;
 $12 = $0 + 32 | 0;
 $13 = $0 + 8 | 0;
 $14 = $0 + 28 | 0;
 $15 = $4 + 4 | 0;
 $16 = $3 + 4 | 0;
 $17 = $4 + 4 | 0;
 $18 = $3 + 4 | 0;
 $19 = $4 + 4 | 0;
 $20 = $3 + 4 | 0;
 $21 = $4 + 4 | 0;
 $22 = $3 + 4 | 0;
 $23 = $4 + 4 | 0;
 $24 = $3 + 4 | 0;
 $25 = $4 + 4 | 0;
 $26 = $3 + 4 | 0;
 $27 = $3 + 4 | 0;
 $28 = $0 + 64 | 0;
 $29 = $0 + 6 | 0;
 $30 = $0 + 60 | 0;
 $31 = $0 + 88 | 0;
 $$0$ph = $1;
 L1 : while (1) {
  $34 = HEAP32[$6 >> 2] | 0;
  L3 : while (1) {
   $36 = HEAP32[HEAP32[$34 + 4 >> 2] >> 2] | 0;
   $38 = $36 + 16 | 0;
   $41 = HEAP32[(HEAP32[$38 >> 2] | 0) + 8 >> 2] | 0;
   $42 = $36 + 12 | 0;
   $$0969 = HEAP32[$7 >> 2] | 0;
   $$0973 = HEAP32[$5 >> 2] | 0;
   L5 : while (1) {
    $43 = $$0973 + 4 | 0;
    $44 = HEAP32[$$0973 >> 2] | 0;
    $45 = HEAP8[$8 >> 0] | 0;
    if (!($45 & 12)) $$1970 = $$0969; else {
     $49 = (HEAP32[$28 >> 2] | 0) + -1 | 0;
     HEAP32[$28 >> 2] = $49;
     $50 = ($49 | 0) == 0;
     if (($45 & 4) == 0 & ($50 ^ 1)) $$1970 = $$0969; else {
      $53 = HEAP32[$5 >> 2] | 0;
      HEAP32[$5 >> 2] = $43;
      $54 = $45 & 255;
      if (!(($54 & 8 | 0) == 0 | $50 ^ 1)) {
       HEAP32[$28 >> 2] = HEAP32[$30 >> 2];
       __Z13luaD_callhookP9lua_Stateii($0, 3, -1);
      }
      do if ($54 & 4 | 0) {
       $65 = HEAP32[(HEAP32[HEAP32[(HEAP32[$6 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 16 >> 2] | 0;
       $67 = HEAP32[$65 + 12 >> 2] | 0;
       $71 = ($43 - $67 >> 2) + -1 | 0;
       $73 = HEAP32[$65 + 20 >> 2] | 0;
       $74 = ($73 | 0) == 0;
       if ($74) $85 = 0; else $85 = HEAP32[$73 + ($71 << 2) >> 2] | 0;
       if ($53 >>> 0 < $43 >>> 0 & ($71 | 0) != 0) {
        if ($74) $87 = 0; else $87 = HEAP32[$73 + (($53 - $67 >> 2) + -1 << 2) >> 2] | 0;
        if (($85 | 0) == ($87 | 0)) break;
       }
       __Z13luaD_callhookP9lua_Stateii($0, 2, $85);
      } while (0);
      if ((HEAP8[$29 >> 0] | 0) == 1) {
       label = 17;
       break L1;
      }
      $$1970 = HEAP32[$7 >> 2] | 0;
     }
    }
    $92 = $44 >>> 6 & 255;
    $93 = $$1970 + ($92 << 3) | 0;
    do switch ($44 & 63) {
    case 30:
     {
      break L3;
      break;
     }
    case 0:
     {
      $94 = $44 >>> 23;
      HEAP32[$93 >> 2] = HEAP32[$$1970 + ($94 << 3) >> 2];
      HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = HEAP32[$$1970 + ($94 << 3) + 4 >> 2];
      $$0969 = $$1970;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 1:
     {
      $100 = $44 >>> 14;
      HEAP32[$93 >> 2] = HEAP32[$41 + ($100 << 3) >> 2];
      HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = HEAP32[$41 + ($100 << 3) + 4 >> 2];
      $$0969 = $$1970;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 2:
     {
      HEAP32[$93 >> 2] = $44 >>> 23;
      HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 1;
      $$0969 = $$1970;
      $$0973 = ($44 & 8372224 | 0) == 0 ? $43 : $$0973 + 8 | 0;
      continue L5;
      break;
     }
    case 3:
     {
      $$0995 = $$1970 + ($44 >>> 23 << 3) | 0;
      while (1) {
       $113 = $$0995 + -8 | 0;
       HEAP32[$$0995 + 4 >> 2] = 0;
       if ($113 >>> 0 < $93 >>> 0) {
        $$0969 = $$1970;
        $$0973 = $43;
        continue L5;
       } else $$0995 = $113;
      }
      break;
     }
    case 4:
     {
      $120 = HEAP32[(HEAP32[$36 + 20 + ($44 >>> 23 << 2) >> 2] | 0) + 8 >> 2] | 0;
      HEAP32[$93 >> 2] = HEAP32[$120 >> 2];
      HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = HEAP32[$120 + 4 >> 2];
      $$0969 = $$1970;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 5:
     {
      HEAP32[$2 >> 2] = HEAP32[$42 >> 2];
      HEAP32[$9 >> 2] = 5;
      HEAP32[$5 >> 2] = $43;
      __Z13luaV_gettableP9lua_StatePK10lua_TValuePS1_S4_($0, $2, $41 + ($44 >>> 14 << 3) | 0, $93);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 6:
     {
      HEAP32[$5 >> 2] = $43;
      $131 = $44 >>> 14;
      __Z13luaV_gettableP9lua_StatePK10lua_TValuePS1_S4_($0, $$1970 + ($44 >>> 23 << 3) | 0, ($131 & 256 | 0) == 0 ? $$1970 + (($131 & 511) << 3) | 0 : $41 + (($131 & 255) << 3) | 0, $93);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 7:
     {
      HEAP32[$2 >> 2] = HEAP32[$42 >> 2];
      HEAP32[$10 >> 2] = 5;
      HEAP32[$5 >> 2] = $43;
      __Z13luaV_settableP9lua_StatePK10lua_TValuePS1_S4_($0, $2, $41 + ($44 >>> 14 << 3) | 0, $93);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 8:
     {
      $146 = HEAP32[$36 + 20 + ($44 >>> 23 << 2) >> 2] | 0;
      $148 = HEAP32[$146 + 8 >> 2] | 0;
      HEAP32[$148 >> 2] = HEAP32[$93 >> 2];
      $150 = $$1970 + ($92 << 3) + 4 | 0;
      HEAP32[$148 + 4 >> 2] = HEAP32[$150 >> 2];
      if ((HEAP32[$150 >> 2] | 0) <= 3) {
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      $155 = HEAP32[$93 >> 2] | 0;
      if (!(HEAP8[$155 + 5 >> 0] & 3)) {
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      if (!(HEAP8[$146 + 5 >> 0] & 4)) {
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      __Z13luaC_barrierfP9lua_StateP8GCObjectS2_($0, $146, $155);
      $$0969 = $$1970;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 9:
     {
      HEAP32[$5 >> 2] = $43;
      $164 = $44 >>> 23;
      $171 = $44 >>> 14;
      __Z13luaV_settableP9lua_StatePK10lua_TValuePS1_S4_($0, $93, ($164 & 256 | 0) == 0 ? $$1970 + ($164 << 3) | 0 : $41 + (($164 & 255) << 3) | 0, ($171 & 256 | 0) == 0 ? $$1970 + (($171 & 511) << 3) | 0 : $41 + (($171 & 255) << 3) | 0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 10:
     {
      $183 = __Z11luaO_fb2inti($44 >>> 23) | 0;
      HEAP32[$93 >> 2] = __Z8luaH_newP9lua_Stateii($0, $183, __Z11luaO_fb2inti($44 >>> 14 & 511) | 0) | 0;
      HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 5;
      HEAP32[$5 >> 2] = $43;
      $187 = HEAP32[$11 >> 2] | 0;
      if ((HEAP32[$187 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$187 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 11:
     {
      $194 = $44 >>> 23;
      $195 = $$1970 + ($194 << 3) | 0;
      $196 = $93 + 8 | 0;
      HEAP32[$196 >> 2] = HEAP32[$195 >> 2];
      HEAP32[$196 + 4 >> 2] = HEAP32[$$1970 + ($194 << 3) + 4 >> 2];
      HEAP32[$5 >> 2] = $43;
      $201 = $44 >>> 14;
      __Z13luaV_gettableP9lua_StatePK10lua_TValuePS1_S4_($0, $195, ($201 & 256 | 0) == 0 ? $$1970 + (($201 & 511) << 3) | 0 : $41 + (($201 & 255) << 3) | 0, $93);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 12:
     {
      $210 = $44 >>> 23;
      $216 = ($210 & 256 | 0) == 0 ? $$1970 + ($210 << 3) | 0 : $41 + (($210 & 255) << 3) | 0;
      $217 = $44 >>> 14;
      $224 = ($217 & 256 | 0) == 0 ? $$1970 + (($217 & 511) << 3) | 0 : $41 + (($217 & 255) << 3) | 0;
      $225 = $216 + 4 | 0;
      if ((HEAP32[$225 >> 2] | 0) == 3) if ((HEAP32[$224 + 4 >> 2] | 0) == 3) {
       HEAPF32[$93 >> 2] = +HEAPF32[$216 >> 2] + +HEAPF32[$224 >> 2];
       HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      HEAP32[$5 >> 2] = $43;
      switch (HEAP32[$225 >> 2] | 0) {
      case 3:
       {
        $$0$i1014$ph = $216;
        label = 45;
        break;
       }
      case 4:
       {
        if (!(__Z10luaO_str2dPKcPf((HEAP32[$216 >> 2] | 0) + 16 | 0, $2) | 0)) label = 44; else {
         HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
         HEAP32[$16 >> 2] = 3;
         $$0$i1014$ph = $3;
         label = 45;
        }
        break;
       }
      default:
       label = 44;
      }
      do if ((label | 0) == 44) {
       label = 0;
       label = 50;
      } else if ((label | 0) == 45) {
       label = 0;
       switch (HEAP32[$224 + 4 >> 2] | 0) {
       case 3:
        {
         $$0$i1016$ph = $224;
         label = 49;
         break;
        }
       case 4:
        {
         if (!(__Z10luaO_str2dPKcPf((HEAP32[$224 >> 2] | 0) + 16 | 0, $2) | 0)) label = 48; else {
          HEAP32[$4 >> 2] = HEAP32[$2 >> 2];
          HEAP32[$15 >> 2] = 3;
          $$0$i1016$ph = $4;
          label = 49;
         }
         break;
        }
       default:
        label = 48;
       }
       if ((label | 0) == 48) {
        label = 0;
        label = 50;
        break;
       } else if ((label | 0) == 49) {
        label = 0;
        HEAPF32[$93 >> 2] = +HEAPF32[$$0$i1014$ph >> 2] + +HEAPF32[$$0$i1016$ph >> 2];
        HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
        break;
       }
      } while (0);
      do if ((label | 0) == 50) {
       label = 0;
       $252 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $216, 5) | 0;
       if (!(HEAP32[$252 + 4 >> 2] | 0)) {
        $256 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $224, 5) | 0;
        if (!(HEAP32[$256 + 4 >> 2] | 0)) {
         __Z15luaG_aritherrorP9lua_StatePK10lua_TValueS3_($0, $216, $224);
         break;
        } else $$015$i1020 = $256;
       } else $$015$i1020 = $252;
       $260 = $93 - (HEAP32[$12 >> 2] | 0) | 0;
       $261 = HEAP32[$13 >> 2] | 0;
       HEAP32[$261 >> 2] = HEAP32[$$015$i1020 >> 2];
       HEAP32[$261 + 4 >> 2] = HEAP32[$$015$i1020 + 4 >> 2];
       $266 = HEAP32[$13 >> 2] | 0;
       HEAP32[$266 + 8 >> 2] = HEAP32[$216 >> 2];
       HEAP32[$266 + 12 >> 2] = HEAP32[$225 >> 2];
       $271 = HEAP32[$13 >> 2] | 0;
       HEAP32[$271 + 16 >> 2] = HEAP32[$224 >> 2];
       HEAP32[$271 + 20 >> 2] = HEAP32[$224 + 4 >> 2];
       $278 = HEAP32[$13 >> 2] | 0;
       if (((HEAP32[$14 >> 2] | 0) - $278 | 0) < 25) {
        __Z14luaD_growstackP9lua_Statei($0, 3);
        $283 = HEAP32[$13 >> 2] | 0;
       } else $283 = $278;
       HEAP32[$13 >> 2] = $283 + 24;
       __Z9luaD_callP9lua_StateP10lua_TValuei($0, $283, 1);
       $285 = (HEAP32[$12 >> 2] | 0) + $260 | 0;
       $286 = HEAP32[$13 >> 2] | 0;
       $287 = $286 + -8 | 0;
       HEAP32[$13 >> 2] = $287;
       HEAP32[$285 >> 2] = HEAP32[$287 >> 2];
       HEAP32[$285 + 4 >> 2] = HEAP32[$286 + -4 >> 2];
      } while (0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 13:
     {
      $293 = $44 >>> 23;
      $299 = ($293 & 256 | 0) == 0 ? $$1970 + ($293 << 3) | 0 : $41 + (($293 & 255) << 3) | 0;
      $300 = $44 >>> 14;
      $307 = ($300 & 256 | 0) == 0 ? $$1970 + (($300 & 511) << 3) | 0 : $41 + (($300 & 255) << 3) | 0;
      $308 = $299 + 4 | 0;
      if ((HEAP32[$308 >> 2] | 0) == 3) if ((HEAP32[$307 + 4 >> 2] | 0) == 3) {
       HEAPF32[$93 >> 2] = +HEAPF32[$299 >> 2] - +HEAPF32[$307 >> 2];
       HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      HEAP32[$5 >> 2] = $43;
      switch (HEAP32[$308 >> 2] | 0) {
      case 3:
       {
        $$0$i1026$ph = $299;
        label = 64;
        break;
       }
      case 4:
       {
        if (!(__Z10luaO_str2dPKcPf((HEAP32[$299 >> 2] | 0) + 16 | 0, $2) | 0)) label = 63; else {
         HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
         HEAP32[$18 >> 2] = 3;
         $$0$i1026$ph = $3;
         label = 64;
        }
        break;
       }
      default:
       label = 63;
      }
      do if ((label | 0) == 63) {
       label = 0;
       label = 69;
      } else if ((label | 0) == 64) {
       label = 0;
       switch (HEAP32[$307 + 4 >> 2] | 0) {
       case 3:
        {
         $$0$i1028$ph = $307;
         label = 68;
         break;
        }
       case 4:
        {
         if (!(__Z10luaO_str2dPKcPf((HEAP32[$307 >> 2] | 0) + 16 | 0, $2) | 0)) label = 67; else {
          HEAP32[$4 >> 2] = HEAP32[$2 >> 2];
          HEAP32[$17 >> 2] = 3;
          $$0$i1028$ph = $4;
          label = 68;
         }
         break;
        }
       default:
        label = 67;
       }
       if ((label | 0) == 67) {
        label = 0;
        label = 69;
        break;
       } else if ((label | 0) == 68) {
        label = 0;
        HEAPF32[$93 >> 2] = +HEAPF32[$$0$i1026$ph >> 2] - +HEAPF32[$$0$i1028$ph >> 2];
        HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
        break;
       }
      } while (0);
      do if ((label | 0) == 69) {
       label = 0;
       $335 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $299, 6) | 0;
       if (!(HEAP32[$335 + 4 >> 2] | 0)) {
        $339 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $307, 6) | 0;
        if (!(HEAP32[$339 + 4 >> 2] | 0)) {
         __Z15luaG_aritherrorP9lua_StatePK10lua_TValueS3_($0, $299, $307);
         break;
        } else $$015$i1032 = $339;
       } else $$015$i1032 = $335;
       $343 = $93 - (HEAP32[$12 >> 2] | 0) | 0;
       $344 = HEAP32[$13 >> 2] | 0;
       HEAP32[$344 >> 2] = HEAP32[$$015$i1032 >> 2];
       HEAP32[$344 + 4 >> 2] = HEAP32[$$015$i1032 + 4 >> 2];
       $349 = HEAP32[$13 >> 2] | 0;
       HEAP32[$349 + 8 >> 2] = HEAP32[$299 >> 2];
       HEAP32[$349 + 12 >> 2] = HEAP32[$308 >> 2];
       $354 = HEAP32[$13 >> 2] | 0;
       HEAP32[$354 + 16 >> 2] = HEAP32[$307 >> 2];
       HEAP32[$354 + 20 >> 2] = HEAP32[$307 + 4 >> 2];
       $361 = HEAP32[$13 >> 2] | 0;
       if (((HEAP32[$14 >> 2] | 0) - $361 | 0) < 25) {
        __Z14luaD_growstackP9lua_Statei($0, 3);
        $366 = HEAP32[$13 >> 2] | 0;
       } else $366 = $361;
       HEAP32[$13 >> 2] = $366 + 24;
       __Z9luaD_callP9lua_StateP10lua_TValuei($0, $366, 1);
       $368 = (HEAP32[$12 >> 2] | 0) + $343 | 0;
       $369 = HEAP32[$13 >> 2] | 0;
       $370 = $369 + -8 | 0;
       HEAP32[$13 >> 2] = $370;
       HEAP32[$368 >> 2] = HEAP32[$370 >> 2];
       HEAP32[$368 + 4 >> 2] = HEAP32[$369 + -4 >> 2];
      } while (0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 14:
     {
      $376 = $44 >>> 23;
      $382 = ($376 & 256 | 0) == 0 ? $$1970 + ($376 << 3) | 0 : $41 + (($376 & 255) << 3) | 0;
      $383 = $44 >>> 14;
      $390 = ($383 & 256 | 0) == 0 ? $$1970 + (($383 & 511) << 3) | 0 : $41 + (($383 & 255) << 3) | 0;
      $391 = $382 + 4 | 0;
      if ((HEAP32[$391 >> 2] | 0) == 3) if ((HEAP32[$390 + 4 >> 2] | 0) == 3) {
       HEAPF32[$93 >> 2] = +HEAPF32[$382 >> 2] * +HEAPF32[$390 >> 2];
       HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      HEAP32[$5 >> 2] = $43;
      switch (HEAP32[$391 >> 2] | 0) {
      case 3:
       {
        $$0$i1038$ph = $382;
        label = 83;
        break;
       }
      case 4:
       {
        if (!(__Z10luaO_str2dPKcPf((HEAP32[$382 >> 2] | 0) + 16 | 0, $2) | 0)) label = 82; else {
         HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
         HEAP32[$20 >> 2] = 3;
         $$0$i1038$ph = $3;
         label = 83;
        }
        break;
       }
      default:
       label = 82;
      }
      do if ((label | 0) == 82) {
       label = 0;
       label = 88;
      } else if ((label | 0) == 83) {
       label = 0;
       switch (HEAP32[$390 + 4 >> 2] | 0) {
       case 3:
        {
         $$0$i1040$ph = $390;
         label = 87;
         break;
        }
       case 4:
        {
         if (!(__Z10luaO_str2dPKcPf((HEAP32[$390 >> 2] | 0) + 16 | 0, $2) | 0)) label = 86; else {
          HEAP32[$4 >> 2] = HEAP32[$2 >> 2];
          HEAP32[$19 >> 2] = 3;
          $$0$i1040$ph = $4;
          label = 87;
         }
         break;
        }
       default:
        label = 86;
       }
       if ((label | 0) == 86) {
        label = 0;
        label = 88;
        break;
       } else if ((label | 0) == 87) {
        label = 0;
        HEAPF32[$93 >> 2] = +HEAPF32[$$0$i1038$ph >> 2] * +HEAPF32[$$0$i1040$ph >> 2];
        HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
        break;
       }
      } while (0);
      do if ((label | 0) == 88) {
       label = 0;
       $418 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $382, 7) | 0;
       if (!(HEAP32[$418 + 4 >> 2] | 0)) {
        $422 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $390, 7) | 0;
        if (!(HEAP32[$422 + 4 >> 2] | 0)) {
         __Z15luaG_aritherrorP9lua_StatePK10lua_TValueS3_($0, $382, $390);
         break;
        } else $$015$i1044 = $422;
       } else $$015$i1044 = $418;
       $426 = $93 - (HEAP32[$12 >> 2] | 0) | 0;
       $427 = HEAP32[$13 >> 2] | 0;
       HEAP32[$427 >> 2] = HEAP32[$$015$i1044 >> 2];
       HEAP32[$427 + 4 >> 2] = HEAP32[$$015$i1044 + 4 >> 2];
       $432 = HEAP32[$13 >> 2] | 0;
       HEAP32[$432 + 8 >> 2] = HEAP32[$382 >> 2];
       HEAP32[$432 + 12 >> 2] = HEAP32[$391 >> 2];
       $437 = HEAP32[$13 >> 2] | 0;
       HEAP32[$437 + 16 >> 2] = HEAP32[$390 >> 2];
       HEAP32[$437 + 20 >> 2] = HEAP32[$390 + 4 >> 2];
       $444 = HEAP32[$13 >> 2] | 0;
       if (((HEAP32[$14 >> 2] | 0) - $444 | 0) < 25) {
        __Z14luaD_growstackP9lua_Statei($0, 3);
        $449 = HEAP32[$13 >> 2] | 0;
       } else $449 = $444;
       HEAP32[$13 >> 2] = $449 + 24;
       __Z9luaD_callP9lua_StateP10lua_TValuei($0, $449, 1);
       $451 = (HEAP32[$12 >> 2] | 0) + $426 | 0;
       $452 = HEAP32[$13 >> 2] | 0;
       $453 = $452 + -8 | 0;
       HEAP32[$13 >> 2] = $453;
       HEAP32[$451 >> 2] = HEAP32[$453 >> 2];
       HEAP32[$451 + 4 >> 2] = HEAP32[$452 + -4 >> 2];
      } while (0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 15:
     {
      $459 = $44 >>> 23;
      $465 = ($459 & 256 | 0) == 0 ? $$1970 + ($459 << 3) | 0 : $41 + (($459 & 255) << 3) | 0;
      $466 = $44 >>> 14;
      $473 = ($466 & 256 | 0) == 0 ? $$1970 + (($466 & 511) << 3) | 0 : $41 + (($466 & 255) << 3) | 0;
      $474 = $465 + 4 | 0;
      if ((HEAP32[$474 >> 2] | 0) == 3) if ((HEAP32[$473 + 4 >> 2] | 0) == 3) {
       HEAPF32[$93 >> 2] = +HEAPF32[$465 >> 2] / +HEAPF32[$473 >> 2];
       HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      HEAP32[$5 >> 2] = $43;
      switch (HEAP32[$474 >> 2] | 0) {
      case 3:
       {
        $$0$i1050$ph = $465;
        label = 102;
        break;
       }
      case 4:
       {
        if (!(__Z10luaO_str2dPKcPf((HEAP32[$465 >> 2] | 0) + 16 | 0, $2) | 0)) label = 101; else {
         HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
         HEAP32[$22 >> 2] = 3;
         $$0$i1050$ph = $3;
         label = 102;
        }
        break;
       }
      default:
       label = 101;
      }
      do if ((label | 0) == 101) {
       label = 0;
       label = 107;
      } else if ((label | 0) == 102) {
       label = 0;
       switch (HEAP32[$473 + 4 >> 2] | 0) {
       case 3:
        {
         $$0$i1052$ph = $473;
         label = 106;
         break;
        }
       case 4:
        {
         if (!(__Z10luaO_str2dPKcPf((HEAP32[$473 >> 2] | 0) + 16 | 0, $2) | 0)) label = 105; else {
          HEAP32[$4 >> 2] = HEAP32[$2 >> 2];
          HEAP32[$21 >> 2] = 3;
          $$0$i1052$ph = $4;
          label = 106;
         }
         break;
        }
       default:
        label = 105;
       }
       if ((label | 0) == 105) {
        label = 0;
        label = 107;
        break;
       } else if ((label | 0) == 106) {
        label = 0;
        HEAPF32[$93 >> 2] = +HEAPF32[$$0$i1050$ph >> 2] / +HEAPF32[$$0$i1052$ph >> 2];
        HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
        break;
       }
      } while (0);
      do if ((label | 0) == 107) {
       label = 0;
       $501 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $465, 8) | 0;
       if (!(HEAP32[$501 + 4 >> 2] | 0)) {
        $505 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $473, 8) | 0;
        if (!(HEAP32[$505 + 4 >> 2] | 0)) {
         __Z15luaG_aritherrorP9lua_StatePK10lua_TValueS3_($0, $465, $473);
         break;
        } else $$015$i1056 = $505;
       } else $$015$i1056 = $501;
       $509 = $93 - (HEAP32[$12 >> 2] | 0) | 0;
       $510 = HEAP32[$13 >> 2] | 0;
       HEAP32[$510 >> 2] = HEAP32[$$015$i1056 >> 2];
       HEAP32[$510 + 4 >> 2] = HEAP32[$$015$i1056 + 4 >> 2];
       $515 = HEAP32[$13 >> 2] | 0;
       HEAP32[$515 + 8 >> 2] = HEAP32[$465 >> 2];
       HEAP32[$515 + 12 >> 2] = HEAP32[$474 >> 2];
       $520 = HEAP32[$13 >> 2] | 0;
       HEAP32[$520 + 16 >> 2] = HEAP32[$473 >> 2];
       HEAP32[$520 + 20 >> 2] = HEAP32[$473 + 4 >> 2];
       $527 = HEAP32[$13 >> 2] | 0;
       if (((HEAP32[$14 >> 2] | 0) - $527 | 0) < 25) {
        __Z14luaD_growstackP9lua_Statei($0, 3);
        $532 = HEAP32[$13 >> 2] | 0;
       } else $532 = $527;
       HEAP32[$13 >> 2] = $532 + 24;
       __Z9luaD_callP9lua_StateP10lua_TValuei($0, $532, 1);
       $534 = (HEAP32[$12 >> 2] | 0) + $509 | 0;
       $535 = HEAP32[$13 >> 2] | 0;
       $536 = $535 + -8 | 0;
       HEAP32[$13 >> 2] = $536;
       HEAP32[$534 >> 2] = HEAP32[$536 >> 2];
       HEAP32[$534 + 4 >> 2] = HEAP32[$535 + -4 >> 2];
      } while (0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 16:
     {
      $542 = $44 >>> 23;
      $548 = ($542 & 256 | 0) == 0 ? $$1970 + ($542 << 3) | 0 : $41 + (($542 & 255) << 3) | 0;
      $549 = $44 >>> 14;
      $556 = ($549 & 256 | 0) == 0 ? $$1970 + (($549 & 511) << 3) | 0 : $41 + (($549 & 255) << 3) | 0;
      $557 = $548 + 4 | 0;
      if ((HEAP32[$557 >> 2] | 0) == 3) if ((HEAP32[$556 + 4 >> 2] | 0) == 3) {
       $563 = +HEAPF32[$548 >> 2];
       $564 = +HEAPF32[$556 >> 2];
       HEAPF32[$93 >> 2] = $563 - $564 * +__ZN13streflop_libm8__floorfEf(+($563 / $564));
       HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      HEAP32[$5 >> 2] = $43;
      switch (HEAP32[$557 >> 2] | 0) {
      case 3:
       {
        $$0$i1062$ph = $548;
        label = 121;
        break;
       }
      case 4:
       {
        if (!(__Z10luaO_str2dPKcPf((HEAP32[$548 >> 2] | 0) + 16 | 0, $2) | 0)) label = 120; else {
         HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
         HEAP32[$24 >> 2] = 3;
         $$0$i1062$ph = $3;
         label = 121;
        }
        break;
       }
      default:
       label = 120;
      }
      do if ((label | 0) == 120) {
       label = 0;
       label = 126;
      } else if ((label | 0) == 121) {
       label = 0;
       switch (HEAP32[$556 + 4 >> 2] | 0) {
       case 3:
        {
         $$0$i1064$ph = $556;
         label = 125;
         break;
        }
       case 4:
        {
         if (!(__Z10luaO_str2dPKcPf((HEAP32[$556 >> 2] | 0) + 16 | 0, $2) | 0)) label = 124; else {
          HEAP32[$4 >> 2] = HEAP32[$2 >> 2];
          HEAP32[$23 >> 2] = 3;
          $$0$i1064$ph = $4;
          label = 125;
         }
         break;
        }
       default:
        label = 124;
       }
       if ((label | 0) == 124) {
        label = 0;
        label = 126;
        break;
       } else if ((label | 0) == 125) {
        label = 0;
        $583 = +HEAPF32[$$0$i1062$ph >> 2];
        $584 = +HEAPF32[$$0$i1064$ph >> 2];
        HEAPF32[$93 >> 2] = $583 - $584 * +__ZN13streflop_libm8__floorfEf(+($583 / $584));
        HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
        break;
       }
      } while (0);
      do if ((label | 0) == 126) {
       label = 0;
       $590 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $548, 9) | 0;
       if (!(HEAP32[$590 + 4 >> 2] | 0)) {
        $594 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $556, 9) | 0;
        if (!(HEAP32[$594 + 4 >> 2] | 0)) {
         __Z15luaG_aritherrorP9lua_StatePK10lua_TValueS3_($0, $548, $556);
         break;
        } else $$015$i1068 = $594;
       } else $$015$i1068 = $590;
       $598 = $93 - (HEAP32[$12 >> 2] | 0) | 0;
       $599 = HEAP32[$13 >> 2] | 0;
       HEAP32[$599 >> 2] = HEAP32[$$015$i1068 >> 2];
       HEAP32[$599 + 4 >> 2] = HEAP32[$$015$i1068 + 4 >> 2];
       $604 = HEAP32[$13 >> 2] | 0;
       HEAP32[$604 + 8 >> 2] = HEAP32[$548 >> 2];
       HEAP32[$604 + 12 >> 2] = HEAP32[$557 >> 2];
       $609 = HEAP32[$13 >> 2] | 0;
       HEAP32[$609 + 16 >> 2] = HEAP32[$556 >> 2];
       HEAP32[$609 + 20 >> 2] = HEAP32[$556 + 4 >> 2];
       $616 = HEAP32[$13 >> 2] | 0;
       if (((HEAP32[$14 >> 2] | 0) - $616 | 0) < 25) {
        __Z14luaD_growstackP9lua_Statei($0, 3);
        $621 = HEAP32[$13 >> 2] | 0;
       } else $621 = $616;
       HEAP32[$13 >> 2] = $621 + 24;
       __Z9luaD_callP9lua_StateP10lua_TValuei($0, $621, 1);
       $623 = (HEAP32[$12 >> 2] | 0) + $598 | 0;
       $624 = HEAP32[$13 >> 2] | 0;
       $625 = $624 + -8 | 0;
       HEAP32[$13 >> 2] = $625;
       HEAP32[$623 >> 2] = HEAP32[$625 >> 2];
       HEAP32[$623 + 4 >> 2] = HEAP32[$624 + -4 >> 2];
      } while (0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 17:
     {
      $631 = $44 >>> 23;
      $637 = ($631 & 256 | 0) == 0 ? $$1970 + ($631 << 3) | 0 : $41 + (($631 & 255) << 3) | 0;
      $638 = $44 >>> 14;
      $645 = ($638 & 256 | 0) == 0 ? $$1970 + (($638 & 511) << 3) | 0 : $41 + (($638 & 255) << 3) | 0;
      $646 = $637 + 4 | 0;
      if ((HEAP32[$646 >> 2] | 0) == 3) if ((HEAP32[$645 + 4 >> 2] | 0) == 3) {
       HEAPF32[$93 >> 2] = +__ZN13streflop_libm14__ieee754_powfEff(+(+HEAPF32[$637 >> 2]), +(+HEAPF32[$645 >> 2]));
       HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      HEAP32[$5 >> 2] = $43;
      switch (HEAP32[$646 >> 2] | 0) {
      case 3:
       {
        $$0$i1074$ph = $637;
        label = 140;
        break;
       }
      case 4:
       {
        if (!(__Z10luaO_str2dPKcPf((HEAP32[$637 >> 2] | 0) + 16 | 0, $2) | 0)) label = 139; else {
         HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
         HEAP32[$26 >> 2] = 3;
         $$0$i1074$ph = $3;
         label = 140;
        }
        break;
       }
      default:
       label = 139;
      }
      do if ((label | 0) == 139) {
       label = 0;
       label = 145;
      } else if ((label | 0) == 140) {
       label = 0;
       switch (HEAP32[$645 + 4 >> 2] | 0) {
       case 3:
        {
         $$0$i1076$ph = $645;
         label = 144;
         break;
        }
       case 4:
        {
         if (!(__Z10luaO_str2dPKcPf((HEAP32[$645 >> 2] | 0) + 16 | 0, $2) | 0)) label = 143; else {
          HEAP32[$4 >> 2] = HEAP32[$2 >> 2];
          HEAP32[$25 >> 2] = 3;
          $$0$i1076$ph = $4;
          label = 144;
         }
         break;
        }
       default:
        label = 143;
       }
       if ((label | 0) == 143) {
        label = 0;
        label = 145;
        break;
       } else if ((label | 0) == 144) {
        label = 0;
        HEAPF32[$93 >> 2] = +__ZN13streflop_libm14__ieee754_powfEff(+(+HEAPF32[$$0$i1074$ph >> 2]), +(+HEAPF32[$$0$i1076$ph >> 2]));
        HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
        break;
       }
      } while (0);
      do if ((label | 0) == 145) {
       label = 0;
       $673 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $637, 10) | 0;
       if (!(HEAP32[$673 + 4 >> 2] | 0)) {
        $677 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $645, 10) | 0;
        if (!(HEAP32[$677 + 4 >> 2] | 0)) {
         __Z15luaG_aritherrorP9lua_StatePK10lua_TValueS3_($0, $637, $645);
         break;
        } else $$015$i1080 = $677;
       } else $$015$i1080 = $673;
       $681 = $93 - (HEAP32[$12 >> 2] | 0) | 0;
       $682 = HEAP32[$13 >> 2] | 0;
       HEAP32[$682 >> 2] = HEAP32[$$015$i1080 >> 2];
       HEAP32[$682 + 4 >> 2] = HEAP32[$$015$i1080 + 4 >> 2];
       $687 = HEAP32[$13 >> 2] | 0;
       HEAP32[$687 + 8 >> 2] = HEAP32[$637 >> 2];
       HEAP32[$687 + 12 >> 2] = HEAP32[$646 >> 2];
       $692 = HEAP32[$13 >> 2] | 0;
       HEAP32[$692 + 16 >> 2] = HEAP32[$645 >> 2];
       HEAP32[$692 + 20 >> 2] = HEAP32[$645 + 4 >> 2];
       $699 = HEAP32[$13 >> 2] | 0;
       if (((HEAP32[$14 >> 2] | 0) - $699 | 0) < 25) {
        __Z14luaD_growstackP9lua_Statei($0, 3);
        $704 = HEAP32[$13 >> 2] | 0;
       } else $704 = $699;
       HEAP32[$13 >> 2] = $704 + 24;
       __Z9luaD_callP9lua_StateP10lua_TValuei($0, $704, 1);
       $706 = (HEAP32[$12 >> 2] | 0) + $681 | 0;
       $707 = HEAP32[$13 >> 2] | 0;
       $708 = $707 + -8 | 0;
       HEAP32[$13 >> 2] = $708;
       HEAP32[$706 >> 2] = HEAP32[$708 >> 2];
       HEAP32[$706 + 4 >> 2] = HEAP32[$707 + -4 >> 2];
      } while (0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 18:
     {
      $714 = $44 >>> 23;
      $715 = $$1970 + ($714 << 3) | 0;
      $716 = $$1970 + ($714 << 3) + 4 | 0;
      if ((HEAP32[$716 >> 2] | 0) == 3) {
       HEAPF32[$93 >> 2] = -+HEAPF32[$715 >> 2];
       HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      HEAP32[$5 >> 2] = $43;
      L214 : do switch (HEAP32[$716 >> 2] | 0) {
      case 3:
       {
        $$0$i1086$ph1211 = $715;
        label = 161;
        break;
       }
      case 4:
       {
        if (!(__Z10luaO_str2dPKcPf((HEAP32[$715 >> 2] | 0) + 16 | 0, $2) | 0)) label = 157; else {
         HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
         HEAP32[$27 >> 2] = 3;
         switch (HEAP32[$716 >> 2] | 0) {
         case 3:
          {
           $$0$i1086$ph1211 = $3;
           label = 161;
           break L214;
           break;
          }
         case 4:
          {
           if (__Z10luaO_str2dPKcPf((HEAP32[$715 >> 2] | 0) + 16 | 0, $2) | 0) {
            $$0$i1086$ph1211 = $3;
            label = 161;
            break L214;
           }
           break;
          }
         default:
          {}
         }
         label = 162;
        }
        break;
       }
      default:
       label = 157;
      } while (0);
      if ((label | 0) == 157) {
       label = 0;
       label = 162;
      } else if ((label | 0) == 161) {
       label = 0;
       HEAPF32[$93 >> 2] = -+HEAPF32[$$0$i1086$ph1211 >> 2];
       HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
      }
      do if ((label | 0) == 162) {
       label = 0;
       $735 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $715, 11) | 0;
       if (!(HEAP32[$735 + 4 >> 2] | 0)) {
        $739 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $715, 11) | 0;
        if (!(HEAP32[$739 + 4 >> 2] | 0)) {
         __Z15luaG_aritherrorP9lua_StatePK10lua_TValueS3_($0, $715, $715);
         break;
        } else $$015$i1092 = $739;
       } else $$015$i1092 = $735;
       $743 = $93 - (HEAP32[$12 >> 2] | 0) | 0;
       $744 = HEAP32[$13 >> 2] | 0;
       HEAP32[$744 >> 2] = HEAP32[$$015$i1092 >> 2];
       HEAP32[$744 + 4 >> 2] = HEAP32[$$015$i1092 + 4 >> 2];
       $749 = HEAP32[$13 >> 2] | 0;
       HEAP32[$749 + 8 >> 2] = HEAP32[$715 >> 2];
       HEAP32[$749 + 12 >> 2] = HEAP32[$716 >> 2];
       $754 = HEAP32[$13 >> 2] | 0;
       HEAP32[$754 + 16 >> 2] = HEAP32[$715 >> 2];
       HEAP32[$754 + 20 >> 2] = HEAP32[$716 >> 2];
       $760 = HEAP32[$13 >> 2] | 0;
       if (((HEAP32[$14 >> 2] | 0) - $760 | 0) < 25) {
        __Z14luaD_growstackP9lua_Statei($0, 3);
        $765 = HEAP32[$13 >> 2] | 0;
       } else $765 = $760;
       HEAP32[$13 >> 2] = $765 + 24;
       __Z9luaD_callP9lua_StateP10lua_TValuei($0, $765, 1);
       $767 = (HEAP32[$12 >> 2] | 0) + $743 | 0;
       $768 = HEAP32[$13 >> 2] | 0;
       $769 = $768 + -8 | 0;
       HEAP32[$13 >> 2] = $769;
       HEAP32[$767 >> 2] = HEAP32[$769 >> 2];
       HEAP32[$767 + 4 >> 2] = HEAP32[$768 + -4 >> 2];
      } while (0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 19:
     {
      $775 = $44 >>> 23;
      $777 = HEAP32[$$1970 + ($775 << 3) + 4 >> 2] | 0;
      if (!$777) $784 = 1; else if (($777 | 0) == 1) $784 = (HEAP32[$$1970 + ($775 << 3) >> 2] | 0) == 0; else $784 = 0;
      HEAP32[$93 >> 2] = $784 & 1;
      HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 1;
      $$0969 = $$1970;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 20:
     {
      $786 = $44 >>> 23;
      $787 = $$1970 + ($786 << 3) | 0;
      $788 = $$1970 + ($786 << 3) + 4 | 0;
      switch (HEAP32[$788 >> 2] | 0) {
      case 5:
       {
        HEAPF32[$93 >> 2] = +(__Z9luaH_getnP5Table(HEAP32[$787 >> 2] | 0) | 0);
        HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
        $$0969 = $$1970;
        $$0973 = $43;
        continue L5;
        break;
       }
      case 4:
       {
        HEAPF32[$93 >> 2] = +((HEAP32[(HEAP32[$787 >> 2] | 0) + 12 >> 2] | 0) >>> 0);
        HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
        $$0969 = $$1970;
        $$0973 = $43;
        continue L5;
        break;
       }
      default:
       {
        HEAP32[$5 >> 2] = $43;
        $799 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $787, 12) | 0;
        if (!(HEAP32[$799 + 4 >> 2] | 0)) {
         $803 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, 108164, 12) | 0;
         if (!(HEAP32[$803 + 4 >> 2] | 0)) __Z14luaG_typeerrorP9lua_StatePK10lua_TValuePKc($0, $787, 89588); else {
          $$015$i = $803;
          label = 178;
         }
        } else {
         $$015$i = $799;
         label = 178;
        }
        if ((label | 0) == 178) {
         label = 0;
         $807 = $93 - (HEAP32[$12 >> 2] | 0) | 0;
         $808 = HEAP32[$13 >> 2] | 0;
         HEAP32[$808 >> 2] = HEAP32[$$015$i >> 2];
         HEAP32[$808 + 4 >> 2] = HEAP32[$$015$i + 4 >> 2];
         $813 = HEAP32[$13 >> 2] | 0;
         HEAP32[$813 + 8 >> 2] = HEAP32[$787 >> 2];
         HEAP32[$813 + 12 >> 2] = HEAP32[$788 >> 2];
         $818 = HEAP32[$13 >> 2] | 0;
         HEAP32[$818 + 16 >> 2] = HEAP32[27041];
         HEAP32[$818 + 20 >> 2] = HEAP32[27042];
         $824 = HEAP32[$13 >> 2] | 0;
         if (((HEAP32[$14 >> 2] | 0) - $824 | 0) < 25) {
          __Z14luaD_growstackP9lua_Statei($0, 3);
          $829 = HEAP32[$13 >> 2] | 0;
         } else $829 = $824;
         HEAP32[$13 >> 2] = $829 + 24;
         __Z9luaD_callP9lua_StateP10lua_TValuei($0, $829, 1);
         $831 = (HEAP32[$12 >> 2] | 0) + $807 | 0;
         $832 = HEAP32[$13 >> 2] | 0;
         $833 = $832 + -8 | 0;
         HEAP32[$13 >> 2] = $833;
         HEAP32[$831 >> 2] = HEAP32[$833 >> 2];
         HEAP32[$831 + 4 >> 2] = HEAP32[$832 + -4 >> 2];
        }
        $$0969 = HEAP32[$7 >> 2] | 0;
        $$0973 = $43;
        continue L5;
       }
      }
      break;
     }
    case 21:
     {
      $839 = $44 >>> 23;
      $841 = $44 >>> 14 & 511;
      HEAP32[$5 >> 2] = $43;
      __Z11luaV_concatP9lua_Stateii($0, 1 - $839 + $841 | 0, $841);
      $844 = HEAP32[$11 >> 2] | 0;
      if ((HEAP32[$844 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$844 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
      $850 = HEAP32[$7 >> 2] | 0;
      HEAP32[$850 + ($92 << 3) >> 2] = HEAP32[$850 + ($839 << 3) >> 2];
      HEAP32[$850 + ($92 << 3) + 4 >> 2] = HEAP32[$850 + ($839 << 3) + 4 >> 2];
      $$0969 = $850;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 22:
     {
      __Z14LuaMutexUnlockP9lua_State($0 | 0);
      __Z12LuaMutexLockP9lua_State($0 | 0);
      $$0969 = $$1970;
      $$0973 = $43 + (($44 >>> 14) + -131071 << 2) | 0;
      continue L5;
      break;
     }
    case 23:
     {
      $860 = $44 >>> 23;
      $866 = ($860 & 256 | 0) == 0 ? $$1970 + ($860 << 3) | 0 : $41 + (($860 & 255) << 3) | 0;
      $867 = $44 >>> 14;
      $874 = ($867 & 256 | 0) == 0 ? $$1970 + (($867 & 511) << 3) | 0 : $41 + (($867 & 255) << 3) | 0;
      HEAP32[$5 >> 2] = $43;
      if ((HEAP32[$866 + 4 >> 2] | 0) == (HEAP32[$874 + 4 >> 2] | 0)) $883 = (__Z13luaV_equalvalP9lua_StatePK10lua_TValueS3_($0, $866, $874) | 0) != 0; else $883 = 0;
      if (($883 & 1 | 0) == ($92 | 0)) {
       $888 = $43 + (((HEAP32[$43 >> 2] | 0) >>> 14) + -131071 << 2) | 0;
       __Z14LuaMutexUnlockP9lua_State($0 | 0);
       __Z12LuaMutexLockP9lua_State($0 | 0);
       $$2975 = $888;
      } else $$2975 = $43;
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $$2975 + 4 | 0;
      continue L5;
      break;
     }
    case 24:
     {
      HEAP32[$5 >> 2] = $43;
      $891 = $44 >>> 23;
      $898 = $44 >>> 14;
      if ((__Z13luaV_lessthanP9lua_StatePK10lua_TValueS3_($0, ($891 & 256 | 0) == 0 ? $$1970 + ($891 << 3) | 0 : $41 + (($891 & 255) << 3) | 0, ($898 & 256 | 0) == 0 ? $$1970 + (($898 & 511) << 3) | 0 : $41 + (($898 & 255) << 3) | 0) | 0) == ($92 | 0)) {
       $911 = $43 + (((HEAP32[$43 >> 2] | 0) >>> 14) + -131071 << 2) | 0;
       __Z14LuaMutexUnlockP9lua_State($0 | 0);
       __Z12LuaMutexLockP9lua_State($0 | 0);
       $$3976 = $911;
      } else $$3976 = $43;
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $$3976 + 4 | 0;
      continue L5;
      break;
     }
    case 25:
     {
      HEAP32[$5 >> 2] = $43;
      $914 = $44 >>> 23;
      $920 = ($914 & 256 | 0) == 0 ? $$1970 + ($914 << 3) | 0 : $41 + (($914 & 255) << 3) | 0;
      $921 = $44 >>> 14;
      $928 = ($921 & 256 | 0) == 0 ? $$1970 + (($921 & 511) << 3) | 0 : $41 + (($921 & 255) << 3) | 0;
      $929 = $920 + 4 | 0;
      $930 = HEAP32[$929 >> 2] | 0;
      $931 = $928 + 4 | 0;
      L270 : do if (($930 | 0) == (HEAP32[$931 >> 2] | 0)) switch ($930 | 0) {
      case 3:
       {
        $$0$i = +HEAPF32[$920 >> 2] <= +HEAPF32[$928 >> 2] & 1;
        break L270;
        break;
       }
      case 4:
       {
        $939 = HEAP32[$920 >> 2] | 0;
        $940 = HEAP32[$928 >> 2] | 0;
        $941 = $939 + 16 | 0;
        $942 = $940 + 16 | 0;
        $943 = _strcoll($941, $942) | 0;
        L296 : do if (!$943) {
         $$03858$i$i = HEAP32[$940 + 12 >> 2] | 0;
         $$04157$i$i = $942;
         $$04456$i$i = HEAP32[$939 + 12 >> 2] | 0;
         $$04755$i$i = $941;
         while (1) {
          $949 = _strlen($$04755$i$i) | 0;
          $951 = ($949 | 0) == ($$04456$i$i | 0);
          if (($949 | 0) == ($$03858$i$i | 0)) break;
          if ($951) {
           $$251$i$i = -1;
           break L296;
          }
          $954 = $949 + 1 | 0;
          $$04755$i$i = $$04755$i$i + $954 | 0;
          $$04157$i$i = $$04157$i$i + $954 | 0;
          $959 = _strcoll($$04755$i$i, $$04157$i$i) | 0;
          if ($959 | 0) {
           $$251$i$i = $959;
           break L296;
          } else {
           $$03858$i$i = $$03858$i$i - $954 | 0;
           $$04456$i$i = $$04456$i$i - $954 | 0;
          }
         }
         $$251$i$i = $951 & 1 ^ 1;
        } else $$251$i$i = $943; while (0);
        $$0$i = ($$251$i$i | 0) < 1 & 1;
        break L270;
        break;
       }
      default:
       {
        $963 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $920, 14) | 0;
        $964 = $963 + 4 | 0;
        if (HEAP32[$964 >> 2] | 0) if (__Z16luaO_rawequalObjPK10lua_TValueS1_($963, __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $928, 14) | 0) | 0) {
         $970 = HEAP32[$13 >> 2] | 0;
         $973 = $970 - (HEAP32[$12 >> 2] | 0) | 0;
         HEAP32[$970 >> 2] = HEAP32[$963 >> 2];
         HEAP32[$970 + 4 >> 2] = HEAP32[$964 >> 2];
         $977 = HEAP32[$13 >> 2] | 0;
         HEAP32[$977 + 8 >> 2] = HEAP32[$920 >> 2];
         HEAP32[$977 + 12 >> 2] = HEAP32[$929 >> 2];
         $982 = HEAP32[$13 >> 2] | 0;
         HEAP32[$982 + 16 >> 2] = HEAP32[$928 >> 2];
         HEAP32[$982 + 20 >> 2] = HEAP32[$931 >> 2];
         $988 = HEAP32[$13 >> 2] | 0;
         if (((HEAP32[$14 >> 2] | 0) - $988 | 0) < 25) {
          __Z14luaD_growstackP9lua_Statei($0, 3);
          $993 = HEAP32[$13 >> 2] | 0;
         } else $993 = $988;
         HEAP32[$13 >> 2] = $993 + 24;
         __Z9luaD_callP9lua_StateP10lua_TValuei($0, $993, 1);
         $995 = (HEAP32[$12 >> 2] | 0) + $973 | 0;
         $996 = HEAP32[$13 >> 2] | 0;
         $997 = $996 + -8 | 0;
         HEAP32[$13 >> 2] = $997;
         HEAP32[$995 >> 2] = HEAP32[$997 >> 2];
         HEAP32[$995 + 4 >> 2] = HEAP32[$996 + -4 >> 2];
         $1002 = HEAP32[$13 >> 2] | 0;
         $1004 = HEAP32[$1002 + 4 >> 2] | 0;
         if (!$1004) {
          $$0$i = 0;
          break L270;
         }
         if (($1004 | 0) != 1) {
          $$0$i = 1;
          break L270;
         }
         $$0$i = (HEAP32[$1002 >> 2] | 0) != 0 & 1;
         break L270;
        }
        $1009 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $928, 13) | 0;
        $1010 = $1009 + 4 | 0;
        if (HEAP32[$1010 >> 2] | 0) if (__Z16luaO_rawequalObjPK10lua_TValueS1_($1009, __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $920, 13) | 0) | 0) {
         $1016 = HEAP32[$13 >> 2] | 0;
         $1019 = $1016 - (HEAP32[$12 >> 2] | 0) | 0;
         HEAP32[$1016 >> 2] = HEAP32[$1009 >> 2];
         HEAP32[$1016 + 4 >> 2] = HEAP32[$1010 >> 2];
         $1023 = HEAP32[$13 >> 2] | 0;
         HEAP32[$1023 + 8 >> 2] = HEAP32[$928 >> 2];
         HEAP32[$1023 + 12 >> 2] = HEAP32[$931 >> 2];
         $1028 = HEAP32[$13 >> 2] | 0;
         HEAP32[$1028 + 16 >> 2] = HEAP32[$920 >> 2];
         HEAP32[$1028 + 20 >> 2] = HEAP32[$929 >> 2];
         $1034 = HEAP32[$13 >> 2] | 0;
         if (((HEAP32[$14 >> 2] | 0) - $1034 | 0) < 25) {
          __Z14luaD_growstackP9lua_Statei($0, 3);
          $1039 = HEAP32[$13 >> 2] | 0;
         } else $1039 = $1034;
         HEAP32[$13 >> 2] = $1039 + 24;
         __Z9luaD_callP9lua_StateP10lua_TValuei($0, $1039, 1);
         $1041 = (HEAP32[$12 >> 2] | 0) + $1019 | 0;
         $1042 = HEAP32[$13 >> 2] | 0;
         $1043 = $1042 + -8 | 0;
         HEAP32[$13 >> 2] = $1043;
         HEAP32[$1041 >> 2] = HEAP32[$1043 >> 2];
         HEAP32[$1041 + 4 >> 2] = HEAP32[$1042 + -4 >> 2];
         $1048 = HEAP32[$13 >> 2] | 0;
         $1050 = HEAP32[$1048 + 4 >> 2] | 0;
         if (!$1050) $1055 = 1; else if (($1050 | 0) == 1) $1055 = (HEAP32[$1048 >> 2] | 0) == 0; else $1055 = 0;
         $$0$i = $1055 & 1;
         break L270;
        }
        $$0$i = __Z15luaG_ordererrorP9lua_StatePK10lua_TValueS3_($0, $920, $928) | 0;
        break L270;
       }
      } else $$0$i = __Z15luaG_ordererrorP9lua_StatePK10lua_TValueS3_($0, $920, $928) | 0; while (0);
      if (($$0$i | 0) == ($92 | 0)) {
       $1061 = $43 + (((HEAP32[$43 >> 2] | 0) >>> 14) + -131071 << 2) | 0;
       __Z14LuaMutexUnlockP9lua_State($0 | 0);
       __Z12LuaMutexLockP9lua_State($0 | 0);
       $$4977 = $1061;
      } else $$4977 = $43;
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $$4977 + 4 | 0;
      continue L5;
      break;
     }
    case 26:
     {
      $1065 = HEAP32[$$1970 + ($92 << 3) + 4 >> 2] | 0;
      if (!$1065) $1071 = 1; else if (($1065 | 0) == 1) $1071 = (HEAP32[$93 >> 2] | 0) == 0; else $1071 = 0;
      if (($1071 & 1 | 0) == ($44 >>> 14 & 511 | 0)) $$5978 = $43; else {
       $1078 = $43 + (((HEAP32[$43 >> 2] | 0) >>> 14) + -131071 << 2) | 0;
       __Z14LuaMutexUnlockP9lua_State($0 | 0);
       __Z12LuaMutexLockP9lua_State($0 | 0);
       $$5978 = $1078;
      }
      $$0969 = $$1970;
      $$0973 = $$5978 + 4 | 0;
      continue L5;
      break;
     }
    case 27:
     {
      $1080 = $44 >>> 23;
      $1081 = $$1970 + ($1080 << 3) | 0;
      $1083 = HEAP32[$$1970 + ($1080 << 3) + 4 >> 2] | 0;
      if (!$1083) $1089 = 1; else if (($1083 | 0) == 1) $1089 = (HEAP32[$1081 >> 2] | 0) == 0; else $1089 = 0;
      if (($1089 & 1 | 0) == ($44 >>> 14 & 511 | 0)) $$6979 = $43; else {
       HEAP32[$93 >> 2] = HEAP32[$1081 >> 2];
       HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = $1083;
       $1098 = $43 + (((HEAP32[$43 >> 2] | 0) >>> 14) + -131071 << 2) | 0;
       __Z14LuaMutexUnlockP9lua_State($0 | 0);
       __Z12LuaMutexLockP9lua_State($0 | 0);
       $$6979 = $1098;
      }
      $$0969 = $$1970;
      $$0973 = $$6979 + 4 | 0;
      continue L5;
      break;
     }
    case 28:
     {
      $1100 = $44 >>> 23;
      $1102 = $44 >>> 14 & 511;
      if ($1100 | 0) HEAP32[$13 >> 2] = $93 + ($1100 << 3);
      HEAP32[$5 >> 2] = $43;
      switch (__Z12luaD_precallP9lua_StateP10lua_TValuei($0, $93, $1102 + -1 | 0) | 0) {
      case 0:
       {
        label = 240;
        break L3;
        break;
       }
      case 1:
       break;
      default:
       {
        label = 317;
        break L1;
       }
      }
      if ($1102 | 0) HEAP32[$13 >> 2] = HEAP32[(HEAP32[$6 >> 2] | 0) + 8 >> 2];
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 29:
     {
      $1113 = $44 >>> 23;
      if ($1113 | 0) HEAP32[$13 >> 2] = $93 + ($1113 << 3);
      HEAP32[$5 >> 2] = $43;
      switch (__Z12luaD_precallP9lua_StateP10lua_TValuei($0, $93, -1) | 0) {
      case 0:
       {
        break L5;
        break;
       }
      case 1:
       break;
      default:
       {
        label = 317;
        break L1;
       }
      }
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 31:
     {
      $1167 = +HEAPF32[$93 + 16 >> 2];
      $1169 = $1167 + +HEAPF32[$93 >> 2];
      $1171 = +HEAPF32[$93 + 8 >> 2];
      if ($1167 > 0.0) {
       if (!($1169 <= $1171)) {
        $$0969 = $$1970;
        $$0973 = $43;
        continue L5;
       }
      } else if (!($1171 <= $1169)) {
       $$0969 = $$1970;
       $$0973 = $43;
       continue L5;
      }
      __Z14LuaMutexUnlockP9lua_State($0 | 0);
      __Z12LuaMutexLockP9lua_State($0 | 0);
      HEAPF32[$93 >> 2] = $1169;
      HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 3;
      $1179 = $93 + 24 | 0;
      HEAPF32[$1179 >> 2] = $1169;
      HEAP32[$1179 + 4 >> 2] = 3;
      $$0969 = $$1970;
      $$0973 = $43 + (($44 >>> 14) + -131071 << 2) | 0;
      continue L5;
      break;
     }
    case 32:
     {
      $1181 = $93 + 8 | 0;
      $1182 = $93 + 16 | 0;
      HEAP32[$5 >> 2] = $43;
      $1183 = $$1970 + ($92 << 3) + 4 | 0;
      $1184 = HEAP32[$1183 >> 2] | 0;
      do if (($1184 | 0) == 3) label = 269; else {
       if (($1184 | 0) == 4) if (__Z10luaO_str2dPKcPf((HEAP32[$93 >> 2] | 0) + 16 | 0, $2) | 0) {
        HEAP32[$93 >> 2] = HEAP32[$2 >> 2];
        HEAP32[$1183 >> 2] = 3;
        label = 269;
        break;
       }
       __Z13luaG_runerrorP9lua_StatePKcz($0, 89602, $vararg_buffer);
      } while (0);
      L350 : do if ((label | 0) == 269) {
       label = 0;
       $1191 = $1181 + 4 | 0;
       $1192 = HEAP32[$1191 >> 2] | 0;
       do if (($1192 | 0) != 3) {
        if (($1192 | 0) == 4) if (__Z10luaO_str2dPKcPf((HEAP32[$1181 >> 2] | 0) + 16 | 0, $2) | 0) {
         HEAP32[$1181 >> 2] = HEAP32[$2 >> 2];
         HEAP32[$1191 >> 2] = 3;
         break;
        }
        __Z13luaG_runerrorP9lua_StatePKcz($0, 89639, $vararg_buffer1);
        break L350;
       } while (0);
       $1199 = $1182 + 4 | 0;
       $1200 = HEAP32[$1199 >> 2] | 0;
       if (($1200 | 0) != 3) {
        if (($1200 | 0) != 4) {
         label = 278;
         break L1;
        }
        if (!(__Z10luaO_str2dPKcPf((HEAP32[$1182 >> 2] | 0) + 16 | 0, $2) | 0)) {
         label = 278;
         break L1;
        }
        HEAP32[$1182 >> 2] = HEAP32[$2 >> 2];
        HEAP32[$1199 >> 2] = 3;
       }
      } while (0);
      HEAPF32[$93 >> 2] = +HEAPF32[$93 >> 2] - +HEAPF32[$1182 >> 2];
      HEAP32[$1183 >> 2] = 3;
      __Z14LuaMutexUnlockP9lua_State($0 | 0);
      __Z12LuaMutexLockP9lua_State($0 | 0);
      $$0969 = $$1970;
      $$0973 = $43 + (($44 >>> 14) + -131071 << 2) | 0;
      continue L5;
      break;
     }
    case 33:
     {
      $1213 = $93 + 24 | 0;
      $1214 = $93 + 16 | 0;
      $1215 = $1213 + 16 | 0;
      HEAP32[$1215 >> 2] = HEAP32[$1214 >> 2];
      HEAP32[$1215 + 4 >> 2] = HEAP32[$1214 + 4 >> 2];
      $1220 = $93 + 8 | 0;
      $1221 = $1213 + 8 | 0;
      HEAP32[$1221 >> 2] = HEAP32[$1220 >> 2];
      HEAP32[$1221 + 4 >> 2] = HEAP32[$1220 + 4 >> 2];
      HEAP32[$1213 >> 2] = HEAP32[$93 >> 2];
      HEAP32[$1213 + 4 >> 2] = HEAP32[$$1970 + ($92 << 3) + 4 >> 2];
      HEAP32[$13 >> 2] = $1213 + 24;
      HEAP32[$5 >> 2] = $43;
      __Z9luaD_callP9lua_StateP10lua_TValuei($0, $1213, $44 >>> 14 & 511);
      $1233 = HEAP32[$7 >> 2] | 0;
      HEAP32[$13 >> 2] = HEAP32[(HEAP32[$6 >> 2] | 0) + 8 >> 2];
      $1238 = $1233 + ($92 << 3) + 24 | 0;
      $1240 = HEAP32[$1238 + 4 >> 2] | 0;
      if (!$1240) $$8981 = $43; else {
       $1242 = $1238 + -8 | 0;
       HEAP32[$1242 >> 2] = HEAP32[$1238 >> 2];
       HEAP32[$1242 + 4 >> 2] = $1240;
       $1248 = $43 + (((HEAP32[$43 >> 2] | 0) >>> 14) + -131071 << 2) | 0;
       __Z14LuaMutexUnlockP9lua_State($0 | 0);
       __Z12LuaMutexLockP9lua_State($0 | 0);
       $$8981 = $1248;
      }
      $$0969 = $1233;
      $$0973 = $$8981 + 4 | 0;
      continue L5;
      break;
     }
    case 34:
     {
      $1250 = $44 >>> 23;
      $1252 = $44 >>> 14 & 511;
      if (!$1250) {
       $1258 = ((HEAP32[$13 >> 2] | 0) - $93 >> 3) + -1 | 0;
       HEAP32[$13 >> 2] = HEAP32[(HEAP32[$6 >> 2] | 0) + 8 >> 2];
       $$01000 = $1258;
      } else $$01000 = $1250;
      if (!$1252) {
       $$0999 = HEAP32[$43 >> 2] | 0;
       $$9982 = $$0973 + 8 | 0;
      } else {
       $$0999 = $1252;
       $$9982 = $43;
      }
      if ((HEAP32[$$1970 + ($92 << 3) + 4 >> 2] | 0) != 5) {
       $$0969 = $$1970;
       $$0973 = $$9982;
       continue L5;
      }
      $1268 = HEAP32[$93 >> 2] | 0;
      $1271 = $$01000 + -50 + ($$0999 * 50 | 0) | 0;
      if (($1271 | 0) > (HEAP32[$1268 + 28 >> 2] | 0)) __Z16luaH_resizearrayP9lua_StateP5Tablei($0, $1268, $1271);
      if (($$01000 | 0) <= 0) {
       $$0969 = $$1970;
       $$0973 = $$9982;
       continue L5;
      }
      $1276 = $1268 + 5 | 0;
      $$09981165 = $1271;
      $$110011164 = $$01000;
      while (1) {
       $1277 = $93 + ($$110011164 << 3) | 0;
       $1278 = $$09981165 + -1 | 0;
       $1279 = __Z11luaH_setnumP9lua_StateP5Tablei($0, $1268, $$09981165) | 0;
       HEAP32[$1279 >> 2] = HEAP32[$1277 >> 2];
       $1281 = $1277 + 4 | 0;
       HEAP32[$1279 + 4 >> 2] = HEAP32[$1281 >> 2];
       if ((HEAP32[$1281 >> 2] | 0) > 3) if (HEAP8[(HEAP32[$1277 >> 2] | 0) + 5 >> 0] & 3) if (HEAP8[$1276 >> 0] & 4) __Z16luaC_barrierbackP9lua_StateP5Table($0, $1268);
       if (($$110011164 | 0) > 1) {
        $$09981165 = $1278;
        $$110011164 = $$110011164 + -1 | 0;
       } else {
        $$0969 = $$1970;
        $$0973 = $$9982;
        continue L5;
       }
      }
      break;
     }
    case 35:
     {
      __Z10luaF_closeP9lua_StateP10lua_TValue($0, $93);
      $$0969 = $$1970;
      $$0973 = $43;
      continue L5;
      break;
     }
    case 36:
     {
      $1301 = HEAP32[(HEAP32[(HEAP32[$38 >> 2] | 0) + 16 >> 2] | 0) + ($44 >>> 14 << 2) >> 2] | 0;
      $1303 = HEAP8[$1301 + 72 >> 0] | 0;
      $1304 = $1303 & 255;
      $1306 = __Z16luaF_newLclosureP9lua_StateiP5Table($0, $1304, HEAP32[$42 >> 2] | 0) | 0;
      HEAP32[$1306 + 16 >> 2] = $1301;
      if (!($1303 << 24 >> 24)) $$10983$lcssa = $43; else {
       $1309 = $1306 + 20 | 0;
       $$09941161 = 0;
       $$109831162 = $43;
       while (1) {
        $1310 = HEAP32[$$109831162 >> 2] | 0;
        $1313 = $1310 >>> 23;
        if (($1310 & 63 | 0) == 4) HEAP32[$1309 + ($$09941161 << 2) >> 2] = HEAP32[$36 + 20 + ($1313 << 2) >> 2]; else HEAP32[$1309 + ($$09941161 << 2) >> 2] = __Z14luaF_findupvalP9lua_StateP10lua_TValue($0, $$1970 + ($1313 << 3) | 0) | 0;
        $$09941161 = $$09941161 + 1 | 0;
        if (($$09941161 | 0) == ($1304 | 0)) break; else $$109831162 = $$109831162 + 4 | 0;
       }
       $$10983$lcssa = $43 + ($1304 << 2) | 0;
      }
      HEAP32[$93 >> 2] = $1306;
      HEAP32[$$1970 + ($92 << 3) + 4 >> 2] = 6;
      HEAP32[$5 >> 2] = $$10983$lcssa;
      $1323 = HEAP32[$11 >> 2] | 0;
      if ((HEAP32[$1323 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$1323 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
      $$0969 = HEAP32[$7 >> 2] | 0;
      $$0973 = $$10983$lcssa;
      continue L5;
      break;
     }
    case 37:
     {
      $1330 = $44 >>> 23;
      $1331 = $1330 + -1 | 0;
      $1332 = HEAP32[$6 >> 2] | 0;
      $1342 = ((HEAP32[$1332 >> 2] | 0) - (HEAP32[$1332 + 4 >> 2] | 0) >> 3) - (HEAPU8[(HEAP32[$38 >> 2] | 0) + 73 >> 0] | 0) | 0;
      $1343 = $1342 + -1 | 0;
      if (!$1330) {
       HEAP32[$5 >> 2] = $43;
       if (((HEAP32[$14 >> 2] | 0) - (HEAP32[$13 >> 2] | 0) | 0) <= ($1343 << 3 | 0)) __Z14luaD_growstackP9lua_Statei($0, $1343);
       $1350 = HEAP32[$7 >> 2] | 0;
       $1351 = $1350 + ($92 << 3) | 0;
       HEAP32[$13 >> 2] = $1351 + ($1343 << 3);
       $$0986 = $1351;
       $$0988 = $1343;
       $$12 = $1350;
      } else {
       $$0986 = $93;
       $$0988 = $1331;
       $$12 = $$1970;
      }
      if (($$0988 | 0) <= 0) {
       $$0969 = $$12;
       $$0973 = $43;
       continue L5;
      }
      $1354 = 1 - $1342 | 0;
      $$09871160 = 0;
      while (1) {
       if (($$09871160 | 0) < ($1343 | 0)) {
        $1358 = (HEAP32[$1332 >> 2] | 0) + ($1354 << 3) + ($$09871160 << 3) | 0;
        HEAP32[$$0986 + ($$09871160 << 3) >> 2] = HEAP32[$1358 >> 2];
        $$sink = HEAP32[$1358 + 4 >> 2] | 0;
       } else $$sink = 0;
       HEAP32[$$0986 + ($$09871160 << 3) + 4 >> 2] = $$sink;
       $1364 = $$09871160 + 1 | 0;
       if (($1364 | 0) == ($$0988 | 0)) {
        $$0969 = $$12;
        $$0973 = $43;
        continue L5;
       } else $$09871160 = $1364;
      }
      break;
     }
    default:
     {
      $$0969 = $$1970;
      $$0973 = $43;
      continue L5;
     }
    } while (0);
   }
   $1117 = HEAP32[$6 >> 2] | 0;
   $1118 = $1117 + -20 | 0;
   $1119 = HEAP32[$1118 >> 2] | 0;
   $1121 = HEAP32[$1117 + 4 >> 2] | 0;
   $$pre1210 = $1117 + -24 | 0;
   if (!(HEAP32[$31 >> 2] | 0)) $1130 = $1119; else {
    __Z10luaF_closeP9lua_StateP10lua_TValue($0, HEAP32[$$pre1210 >> 2] | 0);
    $1130 = HEAP32[$1118 >> 2] | 0;
   }
   $1129 = $1130 + ((HEAP32[$1117 >> 2] | 0) - $1121 >> 3 << 3) | 0;
   HEAP32[$$pre1210 >> 2] = $1129;
   HEAP32[$7 >> 2] = $1129;
   if ($1121 >>> 0 < (HEAP32[$13 >> 2] | 0) >>> 0) {
    $$09961167 = 0;
    $1134 = $1121;
    $1135 = $1119;
    while (1) {
     HEAP32[$1135 >> 2] = HEAP32[$1134 >> 2];
     HEAP32[$1119 + ($$09961167 << 3) + 4 >> 2] = HEAP32[$1121 + ($$09961167 << 3) + 4 >> 2];
     $$09961167 = $$09961167 + 1 | 0;
     $1134 = $1121 + ($$09961167 << 3) | 0;
     $1143 = $1119 + ($$09961167 << 3) | 0;
     if ($1134 >>> 0 >= (HEAP32[$13 >> 2] | 0) >>> 0) {
      $$lcssa1148 = $1143;
      break;
     } else $1135 = $1143;
    }
   } else $$lcssa1148 = $1119;
   HEAP32[$13 >> 2] = $$lcssa1148;
   HEAP32[$1117 + -16 >> 2] = $$lcssa1148;
   HEAP32[$1117 + -12 >> 2] = HEAP32[$5 >> 2];
   $1147 = $1117 + -4 | 0;
   HEAP32[$1147 >> 2] = (HEAP32[$1147 >> 2] | 0) + 1;
   $1151 = (HEAP32[$6 >> 2] | 0) + -24 | 0;
   HEAP32[$6 >> 2] = $1151;
   $34 = $1151;
  }
  if ((label | 0) == 240) {
   label = 0;
   $$0$ph = $$0$ph + 1 | 0;
   continue;
  }
  $1153 = $44 >>> 23;
  if ($1153 | 0) HEAP32[$13 >> 2] = $93 + ($1153 << 3) + -8;
  if (HEAP32[$31 >> 2] | 0) __Z10luaF_closeP9lua_StateP10lua_TValue($0, $$1970);
  HEAP32[$5 >> 2] = $43;
  $1159 = __Z12luaD_poscallP9lua_StateP10lua_TValue($0, $93) | 0;
  $1160 = $$0$ph + -1 | 0;
  if (!$1160) {
   label = 317;
   break;
  }
  if (!$1159) {
   $$0$ph = $1160;
   continue;
  }
  HEAP32[$13 >> 2] = HEAP32[(HEAP32[$6 >> 2] | 0) + 8 >> 2];
  $$0$ph = $1160;
 }
 if ((label | 0) == 17) {
  HEAP32[$5 >> 2] = $$0973;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 278) __Z13luaG_runerrorP9lua_StatePKcz($0, 89668, $vararg_buffer3); else if ((label | 0) == 317) {
  STACKTOP = sp;
  return;
 }
}

function _printf_core($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$$3484$i = 0, $$$3484706$i = 0, $$$4266 = 0, $$$4502$i = 0, $$$5 = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i300 = 0, $$0228 = 0, $$0229396 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240$lcssa = 0, $$0240$lcssa460 = 0, $$0240395 = 0, $$0243 = 0, $$0247 = 0, $$0249$lcssa = 0, $$0249383 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0, $$0259 = 0, $$0262342 = 0, $$0262390 = 0, $$0269 = 0, $$0321 = 0, $$0463$lcssa$i = 0, $$0463594$i = 0, $$0464603$i = 0, $$0466$i = 0.0, $$0470$i = 0, $$0471$i = 0.0, $$0479$i = 0, $$0487652$i = 0, $$0488663$i = 0, $$0488665$i = 0, $$0496$$9$i = 0, $$0497664$i = 0, $$0498$i = 0, $$05$lcssa$i = 0, $$0509592$i = 0.0, $$0511$i = 0, $$0514647$i = 0, $$0520$i = 0, $$0522$$i = 0, $$0522$i = 0, $$0524$i = 0, $$0526$i = 0, $$0528639$i = 0, $$0528641$i = 0, $$0531646$i = 0, $$056$i = 0, $$06$i = 0, $$06$i290 = 0, $$06$i298 = 0, $$1 = 0, $$1230407 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241406 = 0, $$1244394 = 0, $$1248 = 0, $$1255 = 0, $$1260 = 0, $$1263 = 0, $$1263$ = 0, $$1270 = 0, $$1322 = 0, $$1465$i = 0, $$1467$i = 0.0, $$1469$i = 0.0, $$1472$i = 0.0, $$1480$i = 0, $$1482$lcssa$i = 0, $$1482671$i = 0, $$1489651$i = 0, $$1499$lcssa$i = 0, $$1499670$i = 0, $$1508593$i = 0, $$1512$lcssa$i = 0, $$1512617$i = 0, $$1515$i = 0, $$1521$i = 0, $$1525$i = 0, $$1529624$i = 0, $$1532$lcssa$i = 0, $$1532640$i = 0, $$1607$i = 0, $$2 = 0, $$2$i = 0, $$2234 = 0, $$2239 = 0, $$2242381 = 0, $$2245 = 0, $$2251 = 0, $$2256 = 0, $$2261 = 0, $$2271 = 0, $$2323$lcssa = 0, $$2323382 = 0, $$2473$i = 0.0, $$2476$i = 0, $$2483$ph$i = 0, $$2490$lcssa$i = 0, $$2490632$i = 0, $$2500$i = 0, $$2513$i = 0, $$2516628$i = 0, $$2530$i = 0, $$2533627$i = 0, $$3$i = 0.0, $$3265 = 0, $$3272 = 0, $$331 = 0, $$3379 = 0, $$3477$i = 0, $$3484$lcssa$i = 0, $$3484658$i = 0, $$3501$lcssa$i = 0, $$3501657$i = 0, $$3534623$i = 0, $$4$i = 0.0, $$4258458 = 0, $$4266 = 0, $$4325 = 0, $$4478$lcssa$i = 0, $$4478600$i = 0, $$4492$i = 0, $$4502$i = 0, $$4518$i = 0, $$5 = 0, $$5$lcssa$i = 0, $$538$$i = 0, $$538$i = 0, $$541$i = 0.0, $$544$i = 0, $$546$i = 0, $$5486$lcssa$i = 0, $$5486633$i = 0, $$5493606$i = 0, $$5519$ph$i = 0, $$554$i = 0, $$5611$i = 0, $$6 = 0, $$6$i = 0, $$6268 = 0, $$6494599$i = 0, $$7 = 0, $$7495610$i = 0, $$7505$$i = 0, $$7505$i = 0, $$7505$ph$i = 0, $$8$i = 0, $$9$ph$i = 0, $$lcssa683$i = 0, $$pn$i = 0, $$pr = 0, $$pr$i = 0, $$pr571$i = 0, $$pre$phi704$iZ2D = 0, $$pre454 = 0, $$pre700$i = 0, $10 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $113 = 0, $114 = 0, $118 = 0, $119 = 0, $12 = 0, $121 = 0, $13 = 0, $14 = 0, $145 = 0, $146 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $156 = 0, $158 = 0, $16 = 0, $160 = 0, $161 = 0, $166 = 0, $169 = 0, $17 = 0, $174 = 0, $175 = 0, $18 = 0, $180 = 0, $187 = 0, $188 = 0, $19 = 0, $199 = 0, $20 = 0, $21 = 0, $211 = 0, $218 = 0, $22 = 0, $220 = 0, $223 = 0, $224 = 0, $229 = 0, $23 = 0, $236 = 0, $24 = 0, $242 = 0, $248 = 0, $25 = 0, $250 = 0, $257 = 0, $259 = 0, $26 = 0, $262 = 0, $267 = 0, $27 = 0, $270 = 0, $271 = 0, $28 = 0, $280 = 0, $283 = 0, $285 = 0, $288 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $298 = 0, $300 = 0, $301 = 0, $305 = 0, $313 = 0, $319 = 0, $331 = 0, $334 = 0, $335 = 0, $347 = 0, $349 = 0, $35 = 0, $354 = 0, $358 = 0, $361 = 0, $37 = 0, $371 = 0.0, $378 = 0, $38 = 0, $382 = 0, $389 = 0, $391 = 0, $393 = 0, $394 = 0, $398 = 0, $404 = 0.0, $405 = 0, $408 = 0, $410 = 0, $413 = 0, $415 = 0, $42 = 0, $429 = 0, $43 = 0, $432 = 0, $435 = 0, $444 = 0, $446 = 0, $447 = 0, $453 = 0, $465 = 0, $470 = 0, $475 = 0, $479 = 0, $48 = 0, $489 = 0, $491 = 0, $498 = 0, $5 = 0, $500 = 0, $503 = 0, $505 = 0, $506 = 0, $507 = 0, $513 = 0, $515 = 0, $519 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $529 = 0, $53 = 0, $535 = 0, $536 = 0, $537 = 0, $54 = 0, $549 = 0, $560 = 0, $564 = 0, $565 = 0, $568 = 0, $573 = 0, $574 = 0, $576 = 0, $58 = 0, $584 = 0, $587 = 0, $590 = 0, $591 = 0, $592 = 0, $595 = 0, $599 = 0, $6 = 0, $607 = 0, $61 = 0, $610 = 0, $612 = 0, $614 = 0, $616 = 0, $62 = 0, $621 = 0, $622 = 0, $625 = 0, $627 = 0, $629 = 0, $631 = 0, $642 = 0, $645 = 0, $65 = 0, $650 = 0, $659 = 0, $660 = 0, $664 = 0, $667 = 0, $669 = 0, $671 = 0, $675 = 0, $678 = 0, $682 = 0, $69 = 0, $692 = 0, $697 = 0, $7 = 0, $704 = 0, $709 = 0, $72 = 0, $727 = 0, $73 = 0, $731 = 0, $739 = 0, $74 = 0, $746 = 0, $748 = 0, $752 = 0, $754 = 0, $763 = 0, $769 = 0, $78 = 0, $784 = 0, $786 = 0, $799 = 0, $8 = 0, $80 = 0, $809 = 0, $81 = 0, $9 = 0, $isdigittmp = 0, $isdigittmp274 = 0, $isdigittmp276 = 0, $isdigittmp4$i = 0, $isdigittmp4$i287 = 0, $isdigittmp7$i = 0, $isdigittmp7$i289 = 0, $notrhs$i = 0, $or$cond282 = 0, $storemerge = 0, $storemerge273345 = 0, $storemerge273389 = 0, $storemerge278 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 16 | 0;
 $7 = sp + 588 | 0;
 $8 = sp + 576 | 0;
 $9 = sp;
 $10 = sp + 536 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 528 | 0;
 $13 = ($0 | 0) != 0;
 $14 = $10 + 40 | 0;
 $15 = $14;
 $16 = $10 + 39 | 0;
 $17 = $11 + 4 | 0;
 $18 = $7;
 $19 = 0 - $18 | 0;
 $20 = $8 + 12 | 0;
 $21 = $8 + 11 | 0;
 $22 = $20;
 $23 = $22 - $18 | 0;
 $24 = -2 - $18 | 0;
 $25 = $22 + 2 | 0;
 $26 = $5 + 288 | 0;
 $27 = $7 + 9 | 0;
 $28 = $27;
 $29 = $7 + 8 | 0;
 $$0243 = 0;
 $$0247 = 0;
 $$0269 = 0;
 $$0321 = $1;
 L1 : while (1) {
  do if (($$0247 | 0) > -1) if (($$0243 | 0) > (2147483647 - $$0247 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   $$1248 = -1;
   break;
  } else {
   $$1248 = $$0243 + $$0247 | 0;
   break;
  } else $$1248 = $$0247; while (0);
  $35 = HEAP8[$$0321 >> 0] | 0;
  if (!($35 << 24 >> 24)) {
   label = 243;
   break;
  } else {
   $$1322 = $$0321;
   $37 = $35;
  }
  L9 : while (1) {
   switch ($37 << 24 >> 24) {
   case 37:
    {
     $$0249383 = $$1322;
     $$2323382 = $$1322;
     label = 9;
     break L9;
     break;
    }
   case 0:
    {
     $$0249$lcssa = $$1322;
     $$2323$lcssa = $$1322;
     break L9;
     break;
    }
   default:
    {}
   }
   $38 = $$1322 + 1 | 0;
   $$1322 = $38;
   $37 = HEAP8[$38 >> 0] | 0;
  }
  L12 : do if ((label | 0) == 9) while (1) {
   label = 0;
   if ((HEAP8[$$2323382 + 1 >> 0] | 0) != 37) {
    $$0249$lcssa = $$0249383;
    $$2323$lcssa = $$2323382;
    break L12;
   }
   $42 = $$0249383 + 1 | 0;
   $43 = $$2323382 + 2 | 0;
   if ((HEAP8[$43 >> 0] | 0) == 37) {
    $$0249383 = $42;
    $$2323382 = $43;
    label = 9;
   } else {
    $$0249$lcssa = $42;
    $$2323$lcssa = $43;
    break;
   }
  } while (0);
  $48 = $$0249$lcssa - $$0321 | 0;
  if ($13) if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($$0321, $48, $0) | 0;
  if ($48 | 0) {
   $$0243 = $48;
   $$0247 = $$1248;
   $$0321 = $$2323$lcssa;
   continue;
  }
  $53 = $$2323$lcssa + 1 | 0;
  $54 = HEAP8[$53 >> 0] | 0;
  $isdigittmp = ($54 << 24 >> 24) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $58 = (HEAP8[$$2323$lcssa + 2 >> 0] | 0) == 36;
   $$331 = $58 ? $$2323$lcssa + 3 | 0 : $53;
   $$0253 = $58 ? $isdigittmp : -1;
   $$1270 = $58 ? 1 : $$0269;
   $61 = HEAP8[$$331 >> 0] | 0;
   $storemerge = $$331;
  } else {
   $$0253 = -1;
   $$1270 = $$0269;
   $61 = $54;
   $storemerge = $53;
  }
  $62 = ($61 << 24 >> 24) + -32 | 0;
  L25 : do if ($62 >>> 0 < 32) {
   $$0262390 = 0;
   $65 = $62;
   $69 = $61;
   $storemerge273389 = $storemerge;
   while (1) {
    if (!(1 << $65 & 75913)) {
     $$0262342 = $$0262390;
     $78 = $69;
     $storemerge273345 = $storemerge273389;
     break L25;
    }
    $72 = 1 << ($69 << 24 >> 24) + -32 | $$0262390;
    $73 = $storemerge273389 + 1 | 0;
    $74 = HEAP8[$73 >> 0] | 0;
    $65 = ($74 << 24 >> 24) + -32 | 0;
    if ($65 >>> 0 >= 32) {
     $$0262342 = $72;
     $78 = $74;
     $storemerge273345 = $73;
     break;
    } else {
     $$0262390 = $72;
     $69 = $74;
     $storemerge273389 = $73;
    }
   }
  } else {
   $$0262342 = 0;
   $78 = $61;
   $storemerge273345 = $storemerge;
  } while (0);
  do if ($78 << 24 >> 24 == 42) {
   $80 = $storemerge273345 + 1 | 0;
   $81 = HEAP8[$80 >> 0] | 0;
   $isdigittmp276 = ($81 << 24 >> 24) + -48 | 0;
   if ($isdigittmp276 >>> 0 < 10) if ((HEAP8[$storemerge273345 + 2 >> 0] | 0) == 36) {
    HEAP32[$4 + ($isdigittmp276 << 2) >> 2] = 10;
    $$0259 = HEAP32[$3 + ((HEAP8[$80 >> 0] | 0) + -48 << 3) >> 2] | 0;
    $$2271 = 1;
    $storemerge278 = $storemerge273345 + 3 | 0;
   } else label = 24; else label = 24;
   if ((label | 0) == 24) {
    label = 0;
    if ($$1270 | 0) {
     $$0 = -1;
     break L1;
    }
    if (!$13) {
     $$1260 = 0;
     $$1263 = $$0262342;
     $$3272 = 0;
     $$4325 = $80;
     $$pr = $81;
     break;
    }
    $104 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $105 = HEAP32[$104 >> 2] | 0;
    HEAP32[$2 >> 2] = $104 + 4;
    $$0259 = $105;
    $$2271 = 0;
    $storemerge278 = $80;
   }
   $106 = ($$0259 | 0) < 0;
   $$1260 = $106 ? 0 - $$0259 | 0 : $$0259;
   $$1263 = $106 ? $$0262342 | 8192 : $$0262342;
   $$3272 = $$2271;
   $$4325 = $storemerge278;
   $$pr = HEAP8[$storemerge278 >> 0] | 0;
  } else {
   $isdigittmp4$i = ($78 << 24 >> 24) + -48 | 0;
   if ($isdigittmp4$i >>> 0 < 10) {
    $$06$i = 0;
    $113 = $storemerge273345;
    $isdigittmp7$i = $isdigittmp4$i;
    do {
     $$06$i = ($$06$i * 10 | 0) + $isdigittmp7$i | 0;
     $113 = $113 + 1 | 0;
     $114 = HEAP8[$113 >> 0] | 0;
     $isdigittmp7$i = ($114 << 24 >> 24) + -48 | 0;
    } while ($isdigittmp7$i >>> 0 < 10);
    if (($$06$i | 0) < 0) {
     $$0 = -1;
     break L1;
    } else {
     $$1260 = $$06$i;
     $$1263 = $$0262342;
     $$3272 = $$1270;
     $$4325 = $113;
     $$pr = $114;
    }
   } else {
    $$1260 = 0;
    $$1263 = $$0262342;
    $$3272 = $$1270;
    $$4325 = $storemerge273345;
    $$pr = $78;
   }
  } while (0);
  L45 : do if ($$pr << 24 >> 24 == 46) {
   $118 = $$4325 + 1 | 0;
   $119 = HEAP8[$118 >> 0] | 0;
   if ($119 << 24 >> 24 != 42) {
    $isdigittmp4$i287 = ($119 << 24 >> 24) + -48 | 0;
    if ($isdigittmp4$i287 >>> 0 < 10) {
     $$06$i290 = 0;
     $151 = $118;
     $isdigittmp7$i289 = $isdigittmp4$i287;
    } else {
     $$0254 = 0;
     $$6 = $118;
     break;
    }
    while (1) {
     $149 = ($$06$i290 * 10 | 0) + $isdigittmp7$i289 | 0;
     $150 = $151 + 1 | 0;
     $isdigittmp7$i289 = (HEAP8[$150 >> 0] | 0) + -48 | 0;
     if ($isdigittmp7$i289 >>> 0 >= 10) {
      $$0254 = $149;
      $$6 = $150;
      break L45;
     } else {
      $$06$i290 = $149;
      $151 = $150;
     }
    }
   }
   $121 = $$4325 + 2 | 0;
   $isdigittmp274 = (HEAP8[$121 >> 0] | 0) + -48 | 0;
   if ($isdigittmp274 >>> 0 < 10) if ((HEAP8[$$4325 + 3 >> 0] | 0) == 36) {
    HEAP32[$4 + ($isdigittmp274 << 2) >> 2] = 10;
    $$0254 = HEAP32[$3 + ((HEAP8[$121 >> 0] | 0) + -48 << 3) >> 2] | 0;
    $$6 = $$4325 + 4 | 0;
    break;
   }
   if ($$3272 | 0) {
    $$0 = -1;
    break L1;
   }
   if ($13) {
    $145 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $146 = HEAP32[$145 >> 2] | 0;
    HEAP32[$2 >> 2] = $145 + 4;
    $$0254 = $146;
    $$6 = $121;
   } else {
    $$0254 = 0;
    $$6 = $121;
   }
  } else {
   $$0254 = -1;
   $$6 = $$4325;
  } while (0);
  $$0252 = 0;
  $$7 = $$6;
  while (1) {
   $156 = (HEAP8[$$7 >> 0] | 0) + -65 | 0;
   if ($156 >>> 0 > 57) {
    $$0 = -1;
    break L1;
   }
   $158 = $$7 + 1 | 0;
   $160 = HEAP8[93269 + ($$0252 * 58 | 0) + $156 >> 0] | 0;
   $161 = $160 & 255;
   if (($161 + -1 | 0) >>> 0 < 8) {
    $$0252 = $161;
    $$7 = $158;
   } else break;
  }
  if (!($160 << 24 >> 24)) {
   $$0 = -1;
   break;
  }
  $166 = ($$0253 | 0) > -1;
  do if ($160 << 24 >> 24 == 19) if ($166) {
   $$0 = -1;
   break L1;
  } else label = 51; else {
   if ($166) {
    HEAP32[$4 + ($$0253 << 2) >> 2] = $161;
    $169 = $3 + ($$0253 << 3) | 0;
    $174 = HEAP32[$169 + 4 >> 2] | 0;
    $175 = $9;
    HEAP32[$175 >> 2] = HEAP32[$169 >> 2];
    HEAP32[$175 + 4 >> 2] = $174;
    label = 51;
    break;
   }
   if (!$13) {
    $$0 = 0;
    break L1;
   }
   _pop_arg($9, $161, $2);
  } while (0);
  if ((label | 0) == 51) {
   label = 0;
   if (!$13) {
    $$0243 = 0;
    $$0247 = $$1248;
    $$0269 = $$3272;
    $$0321 = $158;
    continue;
   }
  }
  $180 = HEAP8[$$7 >> 0] | 0;
  $$0235 = ($$0252 | 0) != 0 & ($180 & 15 | 0) == 3 ? $180 & -33 : $180;
  $187 = $$1263 & -65537;
  $$1263$ = ($$1263 & 8192 | 0) == 0 ? $$1263 : $187;
  L74 : do switch ($$0235 | 0) {
  case 110:
   {
    switch (($$0252 & 255) << 24 >> 24) {
    case 0:
     {
      HEAP32[HEAP32[$9 >> 2] >> 2] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $$0321 = $158;
      continue L1;
      break;
     }
    case 1:
     {
      HEAP32[HEAP32[$9 >> 2] >> 2] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $$0321 = $158;
      continue L1;
      break;
     }
    case 2:
     {
      $199 = HEAP32[$9 >> 2] | 0;
      HEAP32[$199 >> 2] = $$1248;
      HEAP32[$199 + 4 >> 2] = (($$1248 | 0) < 0) << 31 >> 31;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $$0321 = $158;
      continue L1;
      break;
     }
    case 3:
     {
      HEAP16[HEAP32[$9 >> 2] >> 1] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $$0321 = $158;
      continue L1;
      break;
     }
    case 4:
     {
      HEAP8[HEAP32[$9 >> 2] >> 0] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $$0321 = $158;
      continue L1;
      break;
     }
    case 6:
     {
      HEAP32[HEAP32[$9 >> 2] >> 2] = $$1248;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $$0321 = $158;
      continue L1;
      break;
     }
    case 7:
     {
      $211 = HEAP32[$9 >> 2] | 0;
      HEAP32[$211 >> 2] = $$1248;
      HEAP32[$211 + 4 >> 2] = (($$1248 | 0) < 0) << 31 >> 31;
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $$0321 = $158;
      continue L1;
      break;
     }
    default:
     {
      $$0243 = 0;
      $$0247 = $$1248;
      $$0269 = $$3272;
      $$0321 = $158;
      continue L1;
     }
    }
    break;
   }
  case 112:
   {
    $$1236 = 120;
    $$1255 = $$0254 >>> 0 > 8 ? $$0254 : 8;
    $$3265 = $$1263$ | 8;
    label = 63;
    break;
   }
  case 88:
  case 120:
   {
    $$1236 = $$0235;
    $$1255 = $$0254;
    $$3265 = $$1263$;
    label = 63;
    break;
   }
  case 111:
   {
    $257 = $9;
    $259 = HEAP32[$257 >> 2] | 0;
    $262 = HEAP32[$257 + 4 >> 2] | 0;
    if (($259 | 0) == 0 & ($262 | 0) == 0) $$0$lcssa$i300 = $14; else {
     $$06$i298 = $14;
     $267 = $259;
     $271 = $262;
     while (1) {
      $270 = $$06$i298 + -1 | 0;
      HEAP8[$270 >> 0] = $267 & 7 | 48;
      $267 = _bitshift64Lshr($267 | 0, $271 | 0, 3) | 0;
      $271 = tempRet0;
      if (($267 | 0) == 0 & ($271 | 0) == 0) {
       $$0$lcssa$i300 = $270;
       break;
      } else $$06$i298 = $270;
     }
    }
    if (!($$1263$ & 8)) {
     $$0228 = $$0$lcssa$i300;
     $$1233 = 0;
     $$1238 = 93749;
     $$2256 = $$0254;
     $$4266 = $$1263$;
     label = 76;
    } else {
     $280 = $15 - $$0$lcssa$i300 | 0;
     $$0228 = $$0$lcssa$i300;
     $$1233 = 0;
     $$1238 = 93749;
     $$2256 = ($$0254 | 0) > ($280 | 0) ? $$0254 : $280 + 1 | 0;
     $$4266 = $$1263$;
     label = 76;
    }
    break;
   }
  case 105:
  case 100:
   {
    $283 = $9;
    $285 = HEAP32[$283 >> 2] | 0;
    $288 = HEAP32[$283 + 4 >> 2] | 0;
    if (($288 | 0) < 0) {
     $290 = _i64Subtract(0, 0, $285 | 0, $288 | 0) | 0;
     $291 = tempRet0;
     $292 = $9;
     HEAP32[$292 >> 2] = $290;
     HEAP32[$292 + 4 >> 2] = $291;
     $$0232 = 1;
     $$0237 = 93749;
     $300 = $290;
     $301 = $291;
     label = 75;
     break L74;
    }
    if (!($$1263$ & 2048)) {
     $298 = $$1263$ & 1;
     $$0232 = $298;
     $$0237 = ($298 | 0) == 0 ? 93749 : 93751;
     $300 = $285;
     $301 = $288;
     label = 75;
    } else {
     $$0232 = 1;
     $$0237 = 93750;
     $300 = $285;
     $301 = $288;
     label = 75;
    }
    break;
   }
  case 117:
   {
    $188 = $9;
    $$0232 = 0;
    $$0237 = 93749;
    $300 = HEAP32[$188 >> 2] | 0;
    $301 = HEAP32[$188 + 4 >> 2] | 0;
    label = 75;
    break;
   }
  case 99:
   {
    HEAP8[$16 >> 0] = HEAP32[$9 >> 2];
    $$2 = $16;
    $$2234 = 0;
    $$2239 = 93749;
    $$2251 = $14;
    $$5 = 1;
    $$6268 = $187;
    break;
   }
  case 109:
   {
    $$1 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    label = 81;
    break;
   }
  case 115:
   {
    $331 = HEAP32[$9 >> 2] | 0;
    $$1 = $331 | 0 ? $331 : 93759;
    label = 81;
    break;
   }
  case 67:
   {
    HEAP32[$11 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$17 >> 2] = 0;
    HEAP32[$9 >> 2] = $11;
    $$4258458 = -1;
    $809 = $11;
    label = 85;
    break;
   }
  case 83:
   {
    $$pre454 = HEAP32[$9 >> 2] | 0;
    if (!$$0254) {
     _pad($0, 32, $$1260, 0, $$1263$);
     $$0240$lcssa460 = 0;
     label = 96;
    } else {
     $$4258458 = $$0254;
     $809 = $$pre454;
     label = 85;
    }
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    $371 = +HEAPF64[$9 >> 3];
    HEAP32[$6 >> 2] = 0;
    HEAPF64[tempDoublePtr >> 3] = $371;
    if ((HEAP32[tempDoublePtr + 4 >> 2] | 0) < 0) {
     $$0471$i = -$371;
     $$0520$i = 1;
     $$0522$i = 93766;
    } else {
     $378 = $$1263$ & 1;
     if (!($$1263$ & 2048)) {
      $$0471$i = $371;
      $$0520$i = $378;
      $$0522$i = ($378 | 0) == 0 ? 93767 : 93772;
     } else {
      $$0471$i = $371;
      $$0520$i = 1;
      $$0522$i = 93769;
     }
    }
    HEAPF64[tempDoublePtr >> 3] = $$0471$i;
    $382 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
    do if ($382 >>> 0 < 2146435072 | ($382 | 0) == 2146435072 & 0 < 0) {
     $404 = +_frexpl($$0471$i, $6) * 2.0;
     $405 = $404 != 0.0;
     if ($405) HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -1;
     $408 = $$0235 | 32;
     if (($408 | 0) == 97) {
      $410 = $$0235 & 32;
      $$0522$$i = ($410 | 0) == 0 ? $$0522$i : $$0522$i + 9 | 0;
      $413 = $$0520$i | 2;
      $415 = 12 - $$0254 | 0;
      do if ($$0254 >>> 0 > 11 | ($415 | 0) == 0) $$1472$i = $404; else {
       $$0509592$i = 8.0;
       $$1508593$i = $415;
       do {
        $$1508593$i = $$1508593$i + -1 | 0;
        $$0509592$i = $$0509592$i * 16.0;
       } while (($$1508593$i | 0) != 0);
       if ((HEAP8[$$0522$$i >> 0] | 0) == 45) {
        $$1472$i = -($$0509592$i + (-$404 - $$0509592$i));
        break;
       } else {
        $$1472$i = $404 + $$0509592$i - $$0509592$i;
        break;
       }
      } while (0);
      $429 = HEAP32[$6 >> 2] | 0;
      $432 = ($429 | 0) < 0 ? 0 - $429 | 0 : $429;
      $435 = _fmt_u($432, (($432 | 0) < 0) << 31 >> 31, $20) | 0;
      if (($435 | 0) == ($20 | 0)) {
       HEAP8[$21 >> 0] = 48;
       $$0511$i = $21;
      } else $$0511$i = $435;
      HEAP8[$$0511$i + -1 >> 0] = ($429 >> 31 & 2) + 43;
      $444 = $$0511$i + -2 | 0;
      HEAP8[$444 >> 0] = $$0235 + 15;
      $notrhs$i = ($$0254 | 0) < 1;
      $446 = ($$1263$ & 8 | 0) == 0;
      $$0524$i = $7;
      $$2473$i = $$1472$i;
      while (1) {
       $447 = ~~$$2473$i;
       $453 = $$0524$i + 1 | 0;
       HEAP8[$$0524$i >> 0] = HEAPU8[93733 + $447 >> 0] | $410;
       $$2473$i = ($$2473$i - +($447 | 0)) * 16.0;
       do if (($453 - $18 | 0) == 1) {
        if ($446 & ($notrhs$i & $$2473$i == 0.0)) {
         $$1525$i = $453;
         break;
        }
        HEAP8[$453 >> 0] = 46;
        $$1525$i = $$0524$i + 2 | 0;
       } else $$1525$i = $453; while (0);
       if (!($$2473$i != 0.0)) break; else $$0524$i = $$1525$i;
      }
      $$pre700$i = $$1525$i;
      $465 = $444;
      $$0526$i = ($$0254 | 0) != 0 & ($24 + $$pre700$i | 0) < ($$0254 | 0) ? $25 + $$0254 - $465 | 0 : $23 - $465 + $$pre700$i | 0;
      $470 = $$0526$i + $413 | 0;
      _pad($0, 32, $$1260, $470, $$1263$);
      if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($$0522$$i, $413, $0) | 0;
      _pad($0, 48, $$1260, $470, $$1263$ ^ 65536);
      $475 = $$pre700$i - $18 | 0;
      if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($7, $475, $0) | 0;
      $479 = $22 - $465 | 0;
      _pad($0, 48, $$0526$i - ($475 + $479) | 0, 0, 0);
      if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($444, $479, $0) | 0;
      _pad($0, 32, $$1260, $470, $$1263$ ^ 8192);
      $$0470$i = ($470 | 0) < ($$1260 | 0) ? $$1260 : $470;
      break;
     }
     $$538$i = ($$0254 | 0) < 0 ? 6 : $$0254;
     if ($405) {
      $489 = (HEAP32[$6 >> 2] | 0) + -28 | 0;
      HEAP32[$6 >> 2] = $489;
      $$3$i = $404 * 268435456.0;
      $$pr$i = $489;
     } else {
      $$3$i = $404;
      $$pr$i = HEAP32[$6 >> 2] | 0;
     }
     $$554$i = ($$pr$i | 0) < 0 ? $5 : $26;
     $$0498$i = $$554$i;
     $$4$i = $$3$i;
     do {
      $491 = ~~$$4$i >>> 0;
      HEAP32[$$0498$i >> 2] = $491;
      $$0498$i = $$0498$i + 4 | 0;
      $$4$i = ($$4$i - +($491 >>> 0)) * 1.0e9;
     } while ($$4$i != 0.0);
     if (($$pr$i | 0) > 0) {
      $$1482671$i = $$554$i;
      $$1499670$i = $$0498$i;
      $498 = $$pr$i;
      while (1) {
       $500 = ($498 | 0) > 29 ? 29 : $498;
       $$0488663$i = $$1499670$i + -4 | 0;
       do if ($$0488663$i >>> 0 < $$1482671$i >>> 0) $$2483$ph$i = $$1482671$i; else {
        $$0488665$i = $$0488663$i;
        $$0497664$i = 0;
        do {
         $503 = _bitshift64Shl(HEAP32[$$0488665$i >> 2] | 0, 0, $500 | 0) | 0;
         $505 = _i64Add($503 | 0, tempRet0 | 0, $$0497664$i | 0, 0) | 0;
         $506 = tempRet0;
         $507 = ___uremdi3($505 | 0, $506 | 0, 1e9, 0) | 0;
         HEAP32[$$0488665$i >> 2] = $507;
         $$0497664$i = ___udivdi3($505 | 0, $506 | 0, 1e9, 0) | 0;
         $$0488665$i = $$0488665$i + -4 | 0;
        } while ($$0488665$i >>> 0 >= $$1482671$i >>> 0);
        if (!$$0497664$i) {
         $$2483$ph$i = $$1482671$i;
         break;
        }
        $513 = $$1482671$i + -4 | 0;
        HEAP32[$513 >> 2] = $$0497664$i;
        $$2483$ph$i = $513;
       } while (0);
       $$2500$i = $$1499670$i;
       while (1) {
        if ($$2500$i >>> 0 <= $$2483$ph$i >>> 0) break;
        $515 = $$2500$i + -4 | 0;
        if (!(HEAP32[$515 >> 2] | 0)) $$2500$i = $515; else break;
       }
       $519 = (HEAP32[$6 >> 2] | 0) - $500 | 0;
       HEAP32[$6 >> 2] = $519;
       if (($519 | 0) > 0) {
        $$1482671$i = $$2483$ph$i;
        $$1499670$i = $$2500$i;
        $498 = $519;
       } else {
        $$1482$lcssa$i = $$2483$ph$i;
        $$1499$lcssa$i = $$2500$i;
        $$pr571$i = $519;
        break;
       }
      }
     } else {
      $$1482$lcssa$i = $$554$i;
      $$1499$lcssa$i = $$0498$i;
      $$pr571$i = $$pr$i;
     }
     if (($$pr571$i | 0) < 0) {
      $524 = (($$538$i + 25 | 0) / 9 | 0) + 1 | 0;
      $525 = ($408 | 0) == 102;
      $$3484658$i = $$1482$lcssa$i;
      $$3501657$i = $$1499$lcssa$i;
      $527 = $$pr571$i;
      while (1) {
       $526 = 0 - $527 | 0;
       $529 = ($526 | 0) > 9 ? 9 : $526;
       do if ($$3484658$i >>> 0 < $$3501657$i >>> 0) {
        $535 = (1 << $529) + -1 | 0;
        $536 = 1e9 >>> $529;
        $$0487652$i = 0;
        $$1489651$i = $$3484658$i;
        do {
         $537 = HEAP32[$$1489651$i >> 2] | 0;
         HEAP32[$$1489651$i >> 2] = ($537 >>> $529) + $$0487652$i;
         $$0487652$i = Math_imul($537 & $535, $536) | 0;
         $$1489651$i = $$1489651$i + 4 | 0;
        } while ($$1489651$i >>> 0 < $$3501657$i >>> 0);
        $$$3484$i = (HEAP32[$$3484658$i >> 2] | 0) == 0 ? $$3484658$i + 4 | 0 : $$3484658$i;
        if (!$$0487652$i) {
         $$$3484706$i = $$$3484$i;
         $$4502$i = $$3501657$i;
         break;
        }
        HEAP32[$$3501657$i >> 2] = $$0487652$i;
        $$$3484706$i = $$$3484$i;
        $$4502$i = $$3501657$i + 4 | 0;
       } else {
        $$$3484706$i = (HEAP32[$$3484658$i >> 2] | 0) == 0 ? $$3484658$i + 4 | 0 : $$3484658$i;
        $$4502$i = $$3501657$i;
       } while (0);
       $549 = $525 ? $$554$i : $$$3484706$i;
       $$$4502$i = ($$4502$i - $549 >> 2 | 0) > ($524 | 0) ? $549 + ($524 << 2) | 0 : $$4502$i;
       $527 = (HEAP32[$6 >> 2] | 0) + $529 | 0;
       HEAP32[$6 >> 2] = $527;
       if (($527 | 0) >= 0) {
        $$3484$lcssa$i = $$$3484706$i;
        $$3501$lcssa$i = $$$4502$i;
        break;
       } else {
        $$3484658$i = $$$3484706$i;
        $$3501657$i = $$$4502$i;
       }
      }
     } else {
      $$3484$lcssa$i = $$1482$lcssa$i;
      $$3501$lcssa$i = $$1499$lcssa$i;
     }
     $560 = $$554$i;
     do if ($$3484$lcssa$i >>> 0 < $$3501$lcssa$i >>> 0) {
      $564 = ($560 - $$3484$lcssa$i >> 2) * 9 | 0;
      $565 = HEAP32[$$3484$lcssa$i >> 2] | 0;
      if ($565 >>> 0 < 10) {
       $$1515$i = $564;
       break;
      } else {
       $$0514647$i = $564;
       $$0531646$i = 10;
      }
      while (1) {
       $$0531646$i = $$0531646$i * 10 | 0;
       $568 = $$0514647$i + 1 | 0;
       if ($565 >>> 0 < $$0531646$i >>> 0) {
        $$1515$i = $568;
        break;
       } else $$0514647$i = $568;
      }
     } else $$1515$i = 0; while (0);
     $573 = ($408 | 0) == 103;
     $574 = ($$538$i | 0) != 0;
     $576 = $$538$i - (($408 | 0) != 102 ? $$1515$i : 0) + (($574 & $573) << 31 >> 31) | 0;
     if (($576 | 0) < ((($$3501$lcssa$i - $560 >> 2) * 9 | 0) + -9 | 0)) {
      $584 = $576 + 9216 | 0;
      $587 = $$554$i + 4 + ((($584 | 0) / 9 | 0) + -1024 << 2) | 0;
      $$0528639$i = (($584 | 0) % 9 | 0) + 1 | 0;
      if (($$0528639$i | 0) < 9) {
       $$0528641$i = $$0528639$i;
       $$1532640$i = 10;
       while (1) {
        $590 = $$1532640$i * 10 | 0;
        $$0528641$i = $$0528641$i + 1 | 0;
        if (($$0528641$i | 0) == 9) {
         $$1532$lcssa$i = $590;
         break;
        } else $$1532640$i = $590;
       }
      } else $$1532$lcssa$i = 10;
      $591 = HEAP32[$587 >> 2] | 0;
      $592 = ($591 >>> 0) % ($$1532$lcssa$i >>> 0) | 0;
      $595 = ($587 + 4 | 0) == ($$3501$lcssa$i | 0);
      do if ($595 & ($592 | 0) == 0) {
       $$4492$i = $587;
       $$4518$i = $$1515$i;
       $$8$i = $$3484$lcssa$i;
      } else {
       $$541$i = ((($591 >>> 0) / ($$1532$lcssa$i >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
       $599 = ($$1532$lcssa$i | 0) / 2 | 0;
       if ($592 >>> 0 < $599 >>> 0) $$0466$i = .5; else $$0466$i = $595 & ($592 | 0) == ($599 | 0) ? 1.0 : 1.5;
       do if (!$$0520$i) {
        $$1467$i = $$0466$i;
        $$1469$i = $$541$i;
       } else {
        if ((HEAP8[$$0522$i >> 0] | 0) != 45) {
         $$1467$i = $$0466$i;
         $$1469$i = $$541$i;
         break;
        }
        $$1467$i = -$$0466$i;
        $$1469$i = -$$541$i;
       } while (0);
       $607 = $591 - $592 | 0;
       HEAP32[$587 >> 2] = $607;
       if (!($$1469$i + $$1467$i != $$1469$i)) {
        $$4492$i = $587;
        $$4518$i = $$1515$i;
        $$8$i = $$3484$lcssa$i;
        break;
       }
       $610 = $607 + $$1532$lcssa$i | 0;
       HEAP32[$587 >> 2] = $610;
       if ($610 >>> 0 > 999999999) {
        $$2490632$i = $587;
        $$5486633$i = $$3484$lcssa$i;
        while (1) {
         $612 = $$2490632$i + -4 | 0;
         HEAP32[$$2490632$i >> 2] = 0;
         if ($612 >>> 0 < $$5486633$i >>> 0) {
          $614 = $$5486633$i + -4 | 0;
          HEAP32[$614 >> 2] = 0;
          $$6$i = $614;
         } else $$6$i = $$5486633$i;
         $616 = (HEAP32[$612 >> 2] | 0) + 1 | 0;
         HEAP32[$612 >> 2] = $616;
         if ($616 >>> 0 > 999999999) {
          $$2490632$i = $612;
          $$5486633$i = $$6$i;
         } else {
          $$2490$lcssa$i = $612;
          $$5486$lcssa$i = $$6$i;
          break;
         }
        }
       } else {
        $$2490$lcssa$i = $587;
        $$5486$lcssa$i = $$3484$lcssa$i;
       }
       $621 = ($560 - $$5486$lcssa$i >> 2) * 9 | 0;
       $622 = HEAP32[$$5486$lcssa$i >> 2] | 0;
       if ($622 >>> 0 < 10) {
        $$4492$i = $$2490$lcssa$i;
        $$4518$i = $621;
        $$8$i = $$5486$lcssa$i;
        break;
       } else {
        $$2516628$i = $621;
        $$2533627$i = 10;
       }
       while (1) {
        $$2533627$i = $$2533627$i * 10 | 0;
        $625 = $$2516628$i + 1 | 0;
        if ($622 >>> 0 < $$2533627$i >>> 0) {
         $$4492$i = $$2490$lcssa$i;
         $$4518$i = $625;
         $$8$i = $$5486$lcssa$i;
         break;
        } else $$2516628$i = $625;
       }
      } while (0);
      $627 = $$4492$i + 4 | 0;
      $$5519$ph$i = $$4518$i;
      $$7505$ph$i = $$3501$lcssa$i >>> 0 > $627 >>> 0 ? $627 : $$3501$lcssa$i;
      $$9$ph$i = $$8$i;
     } else {
      $$5519$ph$i = $$1515$i;
      $$7505$ph$i = $$3501$lcssa$i;
      $$9$ph$i = $$3484$lcssa$i;
     }
     $629 = 0 - $$5519$ph$i | 0;
     $$7505$i = $$7505$ph$i;
     while (1) {
      if ($$7505$i >>> 0 <= $$9$ph$i >>> 0) {
       $$lcssa683$i = 0;
       break;
      }
      $631 = $$7505$i + -4 | 0;
      if (!(HEAP32[$631 >> 2] | 0)) $$7505$i = $631; else {
       $$lcssa683$i = 1;
       break;
      }
     }
     do if ($573) {
      $$538$$i = ($574 & 1 ^ 1) + $$538$i | 0;
      if (($$538$$i | 0) > ($$5519$ph$i | 0) & ($$5519$ph$i | 0) > -5) {
       $$0479$i = $$0235 + -1 | 0;
       $$2476$i = $$538$$i + -1 - $$5519$ph$i | 0;
      } else {
       $$0479$i = $$0235 + -2 | 0;
       $$2476$i = $$538$$i + -1 | 0;
      }
      $642 = $$1263$ & 8;
      if ($642 | 0) {
       $$1480$i = $$0479$i;
       $$3477$i = $$2476$i;
       $$pre$phi704$iZ2D = $642;
       break;
      }
      do if ($$lcssa683$i) {
       $645 = HEAP32[$$7505$i + -4 >> 2] | 0;
       if (!$645) {
        $$2530$i = 9;
        break;
       }
       if (!(($645 >>> 0) % 10 | 0)) {
        $$1529624$i = 0;
        $$3534623$i = 10;
       } else {
        $$2530$i = 0;
        break;
       }
       while (1) {
        $$3534623$i = $$3534623$i * 10 | 0;
        $650 = $$1529624$i + 1 | 0;
        if (($645 >>> 0) % ($$3534623$i >>> 0) | 0 | 0) {
         $$2530$i = $650;
         break;
        } else $$1529624$i = $650;
       }
      } else $$2530$i = 9; while (0);
      $659 = (($$7505$i - $560 >> 2) * 9 | 0) + -9 | 0;
      if (($$0479$i | 32 | 0) == 102) {
       $660 = $659 - $$2530$i | 0;
       $$544$i = ($660 | 0) < 0 ? 0 : $660;
       $$1480$i = $$0479$i;
       $$3477$i = ($$2476$i | 0) < ($$544$i | 0) ? $$2476$i : $$544$i;
       $$pre$phi704$iZ2D = 0;
       break;
      } else {
       $664 = $659 + $$5519$ph$i - $$2530$i | 0;
       $$546$i = ($664 | 0) < 0 ? 0 : $664;
       $$1480$i = $$0479$i;
       $$3477$i = ($$2476$i | 0) < ($$546$i | 0) ? $$2476$i : $$546$i;
       $$pre$phi704$iZ2D = 0;
       break;
      }
     } else {
      $$1480$i = $$0235;
      $$3477$i = $$538$i;
      $$pre$phi704$iZ2D = $$1263$ & 8;
     } while (0);
     $667 = $$3477$i | $$pre$phi704$iZ2D;
     $669 = ($667 | 0) != 0 & 1;
     $671 = ($$1480$i | 32 | 0) == 102;
     if ($671) {
      $$2513$i = 0;
      $$pn$i = ($$5519$ph$i | 0) > 0 ? $$5519$ph$i : 0;
     } else {
      $675 = ($$5519$ph$i | 0) < 0 ? $629 : $$5519$ph$i;
      $678 = _fmt_u($675, (($675 | 0) < 0) << 31 >> 31, $20) | 0;
      if (($22 - $678 | 0) < 2) {
       $$1512617$i = $678;
       while (1) {
        $682 = $$1512617$i + -1 | 0;
        HEAP8[$682 >> 0] = 48;
        if (($22 - $682 | 0) < 2) $$1512617$i = $682; else {
         $$1512$lcssa$i = $682;
         break;
        }
       }
      } else $$1512$lcssa$i = $678;
      HEAP8[$$1512$lcssa$i + -1 >> 0] = ($$5519$ph$i >> 31 & 2) + 43;
      $692 = $$1512$lcssa$i + -2 | 0;
      HEAP8[$692 >> 0] = $$1480$i;
      $$2513$i = $692;
      $$pn$i = $22 - $692 | 0;
     }
     $697 = $$0520$i + 1 + $$3477$i + $669 + $$pn$i | 0;
     _pad($0, 32, $$1260, $697, $$1263$);
     if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($$0522$i, $$0520$i, $0) | 0;
     _pad($0, 48, $$1260, $697, $$1263$ ^ 65536);
     do if ($671) {
      $$0496$$9$i = $$9$ph$i >>> 0 > $$554$i >>> 0 ? $$554$i : $$9$ph$i;
      $$5493606$i = $$0496$$9$i;
      do {
       $704 = _fmt_u(HEAP32[$$5493606$i >> 2] | 0, 0, $27) | 0;
       do if (($$5493606$i | 0) == ($$0496$$9$i | 0)) {
        if (($704 | 0) != ($27 | 0)) {
         $$1465$i = $704;
         break;
        }
        HEAP8[$29 >> 0] = 48;
        $$1465$i = $29;
       } else {
        if ($704 >>> 0 <= $7 >>> 0) {
         $$1465$i = $704;
         break;
        }
        _memset($7 | 0, 48, $704 - $18 | 0) | 0;
        $$0464603$i = $704;
        while (1) {
         $709 = $$0464603$i + -1 | 0;
         if ($709 >>> 0 > $7 >>> 0) $$0464603$i = $709; else {
          $$1465$i = $709;
          break;
         }
        }
       } while (0);
       if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($$1465$i, $28 - $$1465$i | 0, $0) | 0;
       $$5493606$i = $$5493606$i + 4 | 0;
      } while ($$5493606$i >>> 0 <= $$554$i >>> 0);
      do if ($667 | 0) {
       if (HEAP32[$0 >> 2] & 32 | 0) break;
       ___fwritex(102189, 1, $0) | 0;
      } while (0);
      if (($$3477$i | 0) > 0 & $$5493606$i >>> 0 < $$7505$i >>> 0) {
       $$4478600$i = $$3477$i;
       $$6494599$i = $$5493606$i;
       while (1) {
        $727 = _fmt_u(HEAP32[$$6494599$i >> 2] | 0, 0, $27) | 0;
        if ($727 >>> 0 > $7 >>> 0) {
         _memset($7 | 0, 48, $727 - $18 | 0) | 0;
         $$0463594$i = $727;
         while (1) {
          $731 = $$0463594$i + -1 | 0;
          if ($731 >>> 0 > $7 >>> 0) $$0463594$i = $731; else {
           $$0463$lcssa$i = $731;
           break;
          }
         }
        } else $$0463$lcssa$i = $727;
        if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($$0463$lcssa$i, ($$4478600$i | 0) > 9 ? 9 : $$4478600$i, $0) | 0;
        $$6494599$i = $$6494599$i + 4 | 0;
        $739 = $$4478600$i + -9 | 0;
        if (!(($$4478600$i | 0) > 9 & $$6494599$i >>> 0 < $$7505$i >>> 0)) {
         $$4478$lcssa$i = $739;
         break;
        } else $$4478600$i = $739;
       }
      } else $$4478$lcssa$i = $$3477$i;
      _pad($0, 48, $$4478$lcssa$i + 9 | 0, 9, 0);
     } else {
      $$7505$$i = $$lcssa683$i ? $$7505$i : $$9$ph$i + 4 | 0;
      if (($$3477$i | 0) > -1) {
       $746 = ($$pre$phi704$iZ2D | 0) == 0;
       $$5611$i = $$3477$i;
       $$7495610$i = $$9$ph$i;
       while (1) {
        $748 = _fmt_u(HEAP32[$$7495610$i >> 2] | 0, 0, $27) | 0;
        if (($748 | 0) == ($27 | 0)) {
         HEAP8[$29 >> 0] = 48;
         $$0$i = $29;
        } else $$0$i = $748;
        do if (($$7495610$i | 0) == ($$9$ph$i | 0)) {
         $754 = $$0$i + 1 | 0;
         if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($$0$i, 1, $0) | 0;
         if ($746 & ($$5611$i | 0) < 1) {
          $$2$i = $754;
          break;
         }
         if (HEAP32[$0 >> 2] & 32 | 0) {
          $$2$i = $754;
          break;
         }
         ___fwritex(102189, 1, $0) | 0;
         $$2$i = $754;
        } else {
         if ($$0$i >>> 0 <= $7 >>> 0) {
          $$2$i = $$0$i;
          break;
         }
         _memset($7 | 0, 48, $$0$i + $19 | 0) | 0;
         $$1607$i = $$0$i;
         while (1) {
          $752 = $$1607$i + -1 | 0;
          if ($752 >>> 0 > $7 >>> 0) $$1607$i = $752; else {
           $$2$i = $752;
           break;
          }
         }
        } while (0);
        $763 = $28 - $$2$i | 0;
        if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($$2$i, ($$5611$i | 0) > ($763 | 0) ? $763 : $$5611$i, $0) | 0;
        $769 = $$5611$i - $763 | 0;
        $$7495610$i = $$7495610$i + 4 | 0;
        if (!($$7495610$i >>> 0 < $$7505$$i >>> 0 & ($769 | 0) > -1)) {
         $$5$lcssa$i = $769;
         break;
        } else $$5611$i = $769;
       }
      } else $$5$lcssa$i = $$3477$i;
      _pad($0, 48, $$5$lcssa$i + 18 | 0, 18, 0);
      if (HEAP32[$0 >> 2] & 32 | 0) break;
      ___fwritex($$2513$i, $22 - $$2513$i | 0, $0) | 0;
     } while (0);
     _pad($0, 32, $$1260, $697, $$1263$ ^ 8192);
     $$0470$i = ($697 | 0) < ($$1260 | 0) ? $$1260 : $697;
    } else {
     $389 = ($$0235 & 32 | 0) != 0;
     $391 = $$0471$i != $$0471$i | 0.0 != 0.0;
     $$1521$i = $391 ? 0 : $$0520$i;
     $393 = $$1521$i + 3 | 0;
     _pad($0, 32, $$1260, $393, $187);
     $394 = HEAP32[$0 >> 2] | 0;
     if (!($394 & 32)) {
      ___fwritex($$0522$i, $$1521$i, $0) | 0;
      $398 = HEAP32[$0 >> 2] | 0;
     } else $398 = $394;
     if (!($398 & 32)) ___fwritex($391 ? ($389 ? 95968 : 93793) : $389 ? 93785 : 93789, 3, $0) | 0;
     _pad($0, 32, $$1260, $393, $$1263$ ^ 8192);
     $$0470$i = ($393 | 0) < ($$1260 | 0) ? $$1260 : $393;
    } while (0);
    $$0243 = $$0470$i;
    $$0247 = $$1248;
    $$0269 = $$3272;
    $$0321 = $158;
    continue L1;
    break;
   }
  default:
   {
    $$2 = $$0321;
    $$2234 = 0;
    $$2239 = 93749;
    $$2251 = $14;
    $$5 = $$0254;
    $$6268 = $$1263$;
   }
  } while (0);
  L310 : do if ((label | 0) == 63) {
   label = 0;
   $218 = $9;
   $220 = HEAP32[$218 >> 2] | 0;
   $223 = HEAP32[$218 + 4 >> 2] | 0;
   $224 = $$1236 & 32;
   if (($220 | 0) == 0 & ($223 | 0) == 0) {
    $$05$lcssa$i = $14;
    $248 = 0;
    $250 = 0;
   } else {
    $$056$i = $14;
    $229 = $220;
    $236 = $223;
    do {
     $$056$i = $$056$i + -1 | 0;
     HEAP8[$$056$i >> 0] = HEAPU8[93733 + ($229 & 15) >> 0] | $224;
     $229 = _bitshift64Lshr($229 | 0, $236 | 0, 4) | 0;
     $236 = tempRet0;
    } while (!(($229 | 0) == 0 & ($236 | 0) == 0));
    $242 = $9;
    $$05$lcssa$i = $$056$i;
    $248 = HEAP32[$242 >> 2] | 0;
    $250 = HEAP32[$242 + 4 >> 2] | 0;
   }
   $or$cond282 = ($$3265 & 8 | 0) == 0 | ($248 | 0) == 0 & ($250 | 0) == 0;
   $$0228 = $$05$lcssa$i;
   $$1233 = $or$cond282 ? 0 : 2;
   $$1238 = $or$cond282 ? 93749 : 93749 + ($$1236 >> 4) | 0;
   $$2256 = $$1255;
   $$4266 = $$3265;
   label = 76;
  } else if ((label | 0) == 75) {
   label = 0;
   $$0228 = _fmt_u($300, $301, $14) | 0;
   $$1233 = $$0232;
   $$1238 = $$0237;
   $$2256 = $$0254;
   $$4266 = $$1263$;
   label = 76;
  } else if ((label | 0) == 81) {
   label = 0;
   $334 = _memchr($$1, 0, $$0254) | 0;
   $335 = ($334 | 0) == 0;
   $$2 = $$1;
   $$2234 = 0;
   $$2239 = 93749;
   $$2251 = $335 ? $$1 + $$0254 | 0 : $334;
   $$5 = $335 ? $$0254 : $334 - $$1 | 0;
   $$6268 = $187;
  } else if ((label | 0) == 85) {
   label = 0;
   $$0229396 = $809;
   $$0240395 = 0;
   $$1244394 = 0;
   while (1) {
    $347 = HEAP32[$$0229396 >> 2] | 0;
    if (!$347) {
     $$0240$lcssa = $$0240395;
     $$2245 = $$1244394;
     break;
    }
    $349 = _wctomb($12, $347) | 0;
    if (($349 | 0) < 0 | $349 >>> 0 > ($$4258458 - $$0240395 | 0) >>> 0) {
     $$0240$lcssa = $$0240395;
     $$2245 = $349;
     break;
    }
    $354 = $349 + $$0240395 | 0;
    if ($$4258458 >>> 0 > $354 >>> 0) {
     $$0229396 = $$0229396 + 4 | 0;
     $$0240395 = $354;
     $$1244394 = $349;
    } else {
     $$0240$lcssa = $354;
     $$2245 = $349;
     break;
    }
   }
   if (($$2245 | 0) < 0) {
    $$0 = -1;
    break L1;
   }
   _pad($0, 32, $$1260, $$0240$lcssa, $$1263$);
   if (!$$0240$lcssa) {
    $$0240$lcssa460 = 0;
    label = 96;
   } else {
    $$1230407 = $809;
    $$1241406 = 0;
    while (1) {
     $358 = HEAP32[$$1230407 >> 2] | 0;
     if (!$358) {
      $$0240$lcssa460 = $$0240$lcssa;
      label = 96;
      break L310;
     }
     $361 = _wctomb($12, $358) | 0;
     $$1241406 = $361 + $$1241406 | 0;
     if (($$1241406 | 0) > ($$0240$lcssa | 0)) {
      $$0240$lcssa460 = $$0240$lcssa;
      label = 96;
      break L310;
     }
     if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($12, $361, $0) | 0;
     if ($$1241406 >>> 0 >= $$0240$lcssa >>> 0) {
      $$0240$lcssa460 = $$0240$lcssa;
      label = 96;
      break;
     } else $$1230407 = $$1230407 + 4 | 0;
    }
   }
  } while (0);
  if ((label | 0) == 96) {
   label = 0;
   _pad($0, 32, $$1260, $$0240$lcssa460, $$1263$ ^ 8192);
   $$0243 = ($$1260 | 0) > ($$0240$lcssa460 | 0) ? $$1260 : $$0240$lcssa460;
   $$0247 = $$1248;
   $$0269 = $$3272;
   $$0321 = $158;
   continue;
  }
  if ((label | 0) == 76) {
   label = 0;
   $$$4266 = ($$2256 | 0) > -1 ? $$4266 & -65537 : $$4266;
   $305 = $9;
   $313 = (HEAP32[$305 >> 2] | 0) != 0 | (HEAP32[$305 + 4 >> 2] | 0) != 0;
   if (($$2256 | 0) != 0 | $313) {
    $319 = ($313 & 1 ^ 1) + ($15 - $$0228) | 0;
    $$2 = $$0228;
    $$2234 = $$1233;
    $$2239 = $$1238;
    $$2251 = $14;
    $$5 = ($$2256 | 0) > ($319 | 0) ? $$2256 : $319;
    $$6268 = $$$4266;
   } else {
    $$2 = $14;
    $$2234 = $$1233;
    $$2239 = $$1238;
    $$2251 = $14;
    $$5 = 0;
    $$6268 = $$$4266;
   }
  }
  $784 = $$2251 - $$2 | 0;
  $$$5 = ($$5 | 0) < ($784 | 0) ? $784 : $$5;
  $786 = $$$5 + $$2234 | 0;
  $$2261 = ($$1260 | 0) < ($786 | 0) ? $786 : $$1260;
  _pad($0, 32, $$2261, $786, $$6268);
  if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($$2239, $$2234, $0) | 0;
  _pad($0, 48, $$2261, $786, $$6268 ^ 65536);
  _pad($0, 48, $$$5, $784, 0);
  if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($$2, $784, $0) | 0;
  _pad($0, 32, $$2261, $786, $$6268 ^ 8192);
  $$0243 = $$2261;
  $$0247 = $$1248;
  $$0269 = $$3272;
  $$0321 = $158;
 }
 L345 : do if ((label | 0) == 243) if (!$0) if (!$$0269) $$0 = 0; else {
  $$2242381 = 1;
  while (1) {
   $799 = HEAP32[$4 + ($$2242381 << 2) >> 2] | 0;
   if (!$799) {
    $$3379 = $$2242381;
    break;
   }
   _pop_arg($3 + ($$2242381 << 3) | 0, $799, $2);
   $$2242381 = $$2242381 + 1 | 0;
   if (($$2242381 | 0) >= 10) {
    $$0 = 1;
    break L345;
   }
  }
  while (1) {
   if (HEAP32[$4 + ($$3379 << 2) >> 2] | 0) {
    $$0 = -1;
    break L345;
   }
   $$3379 = $$3379 + 1 | 0;
   if (($$3379 | 0) >= 10) {
    $$0 = 1;
    break;
   }
  }
 } else $$0 = $$1248; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}
function ___floatscan($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $$0105$ph = 0, $$0106$ph = 0, $$0107$lcssa = 0, $$0107163 = 0, $$0113 = 0, $$0114 = 0.0, $$0133$i = 0, $$0142$i = 0, $$0146$i = 0, $$0148$i = 0, $$0151$i = 0.0, $$0152$i = 0.0, $$0155$i = 0.0, $$0159$i = 0, $$0166$i = 0, $$0166169$i = 0, $$0166170$i = 0, $$0324$i = 0, $$0327480$i = 0, $$0328$i = 0, $$0329$i = 0, $$0331476$i = 0, $$0335486$i = 0, $$0336$lcssa$i = 0, $$0336453$i = 0, $$0336454$i = 0, $$0336455$i = 0, $$0336503$i = 0, $$0340$lcssa$i = 0, $$0340457$i = 0, $$0340458$i = 0, $$0340459$i = 0, $$0340502$i = 0, $$0345$lcssa545$i = 0, $$0345484$i = 0, $$0355$i = 0.0, $$0356$i = 0.0, $$0360474$i = 0.0, $$0364$i = 0, $$0367$i = 0, $$0375$i = 0, $$0375$ph$i = 0, $$0380$lcssa544$i = 0, $$0380483$i = 0, $$0388$i = 0, $$0391$i = 0, $$0396$lcssa$i = 0, $$0396463$i = 0, $$0396464$i = 0, $$0396465$i = 0, $$0396499$i = 0, $$1$i = 0.0, $$1$lcssa = 0, $$1$ph$i = 0, $$10$i = 0, $$1108 = 0, $$1147$i = 0, $$1149$i = 0, $$1153$i = 0.0, $$1156$i = 0.0, $$1160$i = 0, $$1164 = 0, $$1325$be$i = 0, $$1325$ph$i = 0, $$1330$i = 0, $$1332$i = 0, $$1357$i = 0.0, $$1361$i = 0.0, $$1368$i = 0, $$1368$ph438$i = 0, $$1376$i = 0, $$1376$ph$i = 0, $$1376$ph549$i = 0, $$1389$lcssa$i = 0, $$1389501$i = 0, $$2 = 0, $$2$i = 0, $$2$i117 = 0, $$2$lcssa$i = 0, $$2109161 = 0, $$2144$i = 0, $$2150$i = 0, $$2154$i = 0.0, $$2157$i = 0.0, $$2161$i = 0, $$2338$i = 0, $$2342$i = 0, $$2347$ph439$i = 0, $$2362$i = 0.0, $$2366$i = 0, $$2369$i = 0, $$2382$ph437$i = 0, $$2390$i = 0, $$2393$i = 0, $$2398$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3110 = 0, $$3145$i = 0, $$3158$lcssa$i = 0.0, $$3158179$i = 0.0, $$3162 = 0, $$3162$lcssa$i = 0, $$3162183$i = 0, $$3339493$i = 0, $$3343$i = 0, $$3359$i = 0.0, $$3363$i = 0.0, $$3378$i = 0, $$3394$lcssa$i = 0, $$3394500$i = 0, $$3504$i = 0, $$4 = 0, $$4$i = 0.0, $$4111 = 0, $$416$i = 0, $$4163$lcssa$i = 0, $$4163178$i = 0, $$4344485$i = 0, $$4349$i = 0, $$4349$ph$i = 0, $$4349$ph550$i = 0, $$4371$i = 0, $$4379$i = 0, $$4384$ph$i = 0, $$4384$ph435$i = 0, $$4395$i = 0, $$4475$i = 0, $$5 = 0, $$5$i121 = 0, $$5$in$i = 0, $$5164$i = 0, $$5350478$i = 0, $$5385477$i = 0, $$6 = 0, $$6373$ph$i = 0, $$6479$i = 0, $$9473$i = 0, $$in = 0, $$pre$i = 0, $$pre$i119 = 0, $$pre$phi202$iZ2D = 0.0, $$sink$off0$i = 0, $103 = 0, $119 = 0, $127 = 0, $129 = 0, $13 = 0, $136 = 0, $143 = 0, $151 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $164 = 0, $168 = 0, $172 = 0, $174 = 0, $187 = 0.0, $19 = 0, $194 = 0, $196 = 0, $20 = 0, $205 = 0, $209 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $225 = 0, $226 = 0, $227 = 0, $237 = 0, $238 = 0, $251 = 0, $253 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $272 = 0, $274 = 0, $285 = 0, $289 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $297 = 0, $299 = 0, $3 = 0, $300 = 0, $301 = 0, $302 = 0, $311 = 0, $313 = 0.0, $325 = 0.0, $33 = 0, $333 = 0, $334 = 0, $341 = 0, $349 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $361 = 0, $363 = 0, $365 = 0, $368 = 0, $369 = 0, $370 = 0, $371 = 0, $372 = 0, $374 = 0, $379 = 0, $380 = 0, $384 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $405 = 0, $406 = 0, $415 = 0, $416 = 0, $417 = 0, $425 = 0, $429 = 0, $43 = 0, $431 = 0, $432 = 0, $434 = 0, $447 = 0, $449 = 0, $459 = 0, $46 = 0, $461 = 0, $473 = 0, $475 = 0, $496 = 0, $5 = 0, $508 = 0, $512 = 0, $515 = 0, $517 = 0, $518 = 0, $519 = 0, $522 = 0, $536 = 0, $537 = 0, $538 = 0, $542 = 0, $544 = 0, $546 = 0, $547 = 0, $553 = 0, $555 = 0, $560 = 0, $567 = 0, $570 = 0, $573 = 0, $580 = 0, $583 = 0, $585 = 0, $588 = 0, $591 = 0, $592 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $6 = 0, $601 = 0, $612 = 0, $618 = 0, $623 = 0, $626 = 0, $635 = 0.0, $636 = 0.0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $644 = 0.0, $647 = 0.0, $651 = 0, $654 = 0, $678 = 0.0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $73 = 0, $80 = 0, $86 = 0, $94 = 0, $or$cond168$i = 0, $or$cond413$i = 0, $or$cond417$i = 0, $storemerge$i = 0, $sum$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $3 = sp;
 switch ($1 | 0) {
 case 0:
  {
   $$0105$ph = -149;
   $$0106$ph = 24;
   label = 4;
   break;
  }
 case 1:
  {
   $$0105$ph = -1074;
   $$0106$ph = 53;
   label = 4;
   break;
  }
 case 2:
  {
   $$0105$ph = -1074;
   $$0106$ph = 53;
   label = 4;
   break;
  }
 default:
  $$0114 = 0.0;
 }
 L4 : do if ((label | 0) == 4) {
  $4 = $0 + 4 | 0;
  $5 = $0 + 100 | 0;
  do {
   $6 = HEAP32[$4 >> 2] | 0;
   if ($6 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
    HEAP32[$4 >> 2] = $6 + 1;
    $13 = HEAPU8[$6 >> 0] | 0;
   } else $13 = ___shgetc($0) | 0;
  } while ((_isspace($13) | 0) != 0);
  L13 : do switch ($13 | 0) {
  case 43:
  case 45:
   {
    $19 = 1 - ((($13 | 0) == 45 & 1) << 1) | 0;
    $20 = HEAP32[$4 >> 2] | 0;
    if ($20 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
     HEAP32[$4 >> 2] = $20 + 1;
     $$0 = HEAPU8[$20 >> 0] | 0;
     $$0113 = $19;
     break L13;
    } else {
     $$0 = ___shgetc($0) | 0;
     $$0113 = $19;
     break L13;
    }
    break;
   }
  default:
   {
    $$0 = $13;
    $$0113 = 1;
   }
  } while (0);
  $$0107163 = 0;
  $$1164 = $$0;
  while (1) {
   if (($$1164 | 32 | 0) != (HEAP8[95959 + $$0107163 >> 0] | 0)) {
    $$0107$lcssa = $$0107163;
    $$1$lcssa = $$1164;
    break;
   }
   do if ($$0107163 >>> 0 < 7) {
    $33 = HEAP32[$4 >> 2] | 0;
    if ($33 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
     HEAP32[$4 >> 2] = $33 + 1;
     $$2 = HEAPU8[$33 >> 0] | 0;
     break;
    } else {
     $$2 = ___shgetc($0) | 0;
     break;
    }
   } else $$2 = $$1164; while (0);
   $40 = $$0107163 + 1 | 0;
   if ($40 >>> 0 < 8) {
    $$0107163 = $40;
    $$1164 = $$2;
   } else {
    $$0107$lcssa = $40;
    $$1$lcssa = $$2;
    break;
   }
  }
  L29 : do switch ($$0107$lcssa | 0) {
  case 8:
   break;
  case 3:
   {
    label = 23;
    break;
   }
  default:
   {
    $43 = ($2 | 0) != 0;
    if ($43 & $$0107$lcssa >>> 0 > 3) if (($$0107$lcssa | 0) == 8) break L29; else {
     label = 23;
     break L29;
    }
    L34 : do if (!$$0107$lcssa) {
     $$2109161 = 0;
     $$3162 = $$1$lcssa;
     while (1) {
      if (($$3162 | 32 | 0) != (HEAP8[95968 + $$2109161 >> 0] | 0)) {
       $$3110 = $$2109161;
       $$5 = $$3162;
       break L34;
      }
      do if ($$2109161 >>> 0 < 2) {
       $64 = HEAP32[$4 >> 2] | 0;
       if ($64 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
        HEAP32[$4 >> 2] = $64 + 1;
        $$4 = HEAPU8[$64 >> 0] | 0;
        break;
       } else {
        $$4 = ___shgetc($0) | 0;
        break;
       }
      } else $$4 = $$3162; while (0);
      $71 = $$2109161 + 1 | 0;
      if ($71 >>> 0 < 3) {
       $$2109161 = $71;
       $$3162 = $$4;
      } else {
       $$3110 = $71;
       $$5 = $$4;
       break;
      }
     }
    } else {
     $$3110 = $$0107$lcssa;
     $$5 = $$1$lcssa;
    } while (0);
    switch ($$3110 | 0) {
    case 3:
     {
      $73 = HEAP32[$4 >> 2] | 0;
      if ($73 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
       HEAP32[$4 >> 2] = $73 + 1;
       $80 = HEAPU8[$73 >> 0] | 0;
      } else $80 = ___shgetc($0) | 0;
      if (($80 | 0) == 40) $$4111 = 1; else {
       if (!(HEAP32[$5 >> 2] | 0)) {
        $$0114 = nan;
        break L4;
       }
       HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
       $$0114 = nan;
       break L4;
      }
      while (1) {
       $86 = HEAP32[$4 >> 2] | 0;
       if ($86 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
        HEAP32[$4 >> 2] = $86 + 1;
        $94 = HEAPU8[$86 >> 0] | 0;
       } else $94 = ___shgetc($0) | 0;
       if (!(($94 + -48 | 0) >>> 0 < 10 | ($94 + -65 | 0) >>> 0 < 26)) if (!(($94 | 0) == 95 | ($94 + -97 | 0) >>> 0 < 26)) break;
       $$4111 = $$4111 + 1 | 0;
      }
      if (($94 | 0) == 41) {
       $$0114 = nan;
       break L4;
      }
      $103 = (HEAP32[$5 >> 2] | 0) == 0;
      if (!$103) HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
      if (!$43) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim($0, 0);
       $$0114 = 0.0;
       break L4;
      }
      if (!$$4111) {
       $$0114 = nan;
       break L4;
      } else $$in = $$4111;
      while (1) {
       $$in = $$in + -1 | 0;
       if (!$103) HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
       if (!$$in) {
        $$0114 = nan;
        break L4;
       }
      }
      break;
     }
    case 0:
     {
      do if (($$5 | 0) == 48) {
       $119 = HEAP32[$4 >> 2] | 0;
       if ($119 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
        HEAP32[$4 >> 2] = $119 + 1;
        $127 = HEAPU8[$119 >> 0] | 0;
       } else $127 = ___shgetc($0) | 0;
       if (($127 | 32 | 0) != 120) {
        if (!(HEAP32[$5 >> 2] | 0)) {
         $$6 = 48;
         break;
        }
        HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
        $$6 = 48;
        break;
       }
       $129 = HEAP32[$4 >> 2] | 0;
       if ($129 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
        HEAP32[$4 >> 2] = $129 + 1;
        $$0$i = HEAPU8[$129 >> 0] | 0;
        $$0142$i = 0;
       } else {
        $$0$i = ___shgetc($0) | 0;
        $$0142$i = 0;
       }
       L94 : while (1) {
        switch ($$0$i | 0) {
        case 46:
         {
          label = 74;
          break L94;
          break;
         }
        case 48:
         break;
        default:
         {
          $$0146$i = 0;
          $$0148$i = 0;
          $$0152$i = 1.0;
          $$0155$i = 0.0;
          $$0159$i = 0;
          $$2$i = $$0$i;
          $$2144$i = $$0142$i;
          $172 = 0;
          $174 = 0;
          $216 = 0;
          $218 = 0;
          break L94;
         }
        }
        $136 = HEAP32[$4 >> 2] | 0;
        if ($136 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
         HEAP32[$4 >> 2] = $136 + 1;
         $$0$i = HEAPU8[$136 >> 0] | 0;
         $$0142$i = 1;
         continue;
        } else {
         $$0$i = ___shgetc($0) | 0;
         $$0142$i = 1;
         continue;
        }
       }
       if ((label | 0) == 74) {
        $143 = HEAP32[$4 >> 2] | 0;
        if ($143 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
         HEAP32[$4 >> 2] = $143 + 1;
         $$1$ph$i = HEAPU8[$143 >> 0] | 0;
        } else $$1$ph$i = ___shgetc($0) | 0;
        if (($$1$ph$i | 0) == 48) {
         $158 = 0;
         $159 = 0;
         while (1) {
          $151 = HEAP32[$4 >> 2] | 0;
          if ($151 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
           HEAP32[$4 >> 2] = $151 + 1;
           $162 = HEAPU8[$151 >> 0] | 0;
          } else $162 = ___shgetc($0) | 0;
          $160 = _i64Add($158 | 0, $159 | 0, -1, -1) | 0;
          $161 = tempRet0;
          if (($162 | 0) == 48) {
           $158 = $160;
           $159 = $161;
          } else {
           $$0146$i = 1;
           $$0148$i = 0;
           $$0152$i = 1.0;
           $$0155$i = 0.0;
           $$0159$i = 0;
           $$2$i = $162;
           $$2144$i = 1;
           $172 = 0;
           $174 = 0;
           $216 = $160;
           $218 = $161;
           break;
          }
         }
        } else {
         $$0146$i = 1;
         $$0148$i = 0;
         $$0152$i = 1.0;
         $$0155$i = 0.0;
         $$0159$i = 0;
         $$2$i = $$1$ph$i;
         $$2144$i = $$0142$i;
         $172 = 0;
         $174 = 0;
         $216 = 0;
         $218 = 0;
        }
       }
       while (1) {
        $164 = $$2$i + -48 | 0;
        $$pre$i = $$2$i | 32;
        if ($164 >>> 0 < 10) label = 86; else {
         $168 = ($$2$i | 0) == 46;
         if (!($168 | ($$pre$i + -97 | 0) >>> 0 < 6)) {
          $$2$lcssa$i = $$2$i;
          break;
         }
         if ($168) if (!$$0146$i) {
          $$1147$i = 1;
          $$2150$i = $$0148$i;
          $$2154$i = $$0152$i;
          $$2157$i = $$0155$i;
          $$2161$i = $$0159$i;
          $$3145$i = $$2144$i;
          $693 = $174;
          $694 = $172;
          $695 = $174;
          $696 = $172;
         } else {
          $$2$lcssa$i = 46;
          break;
         } else label = 86;
        }
        if ((label | 0) == 86) {
         label = 0;
         $$0133$i = ($$2$i | 0) > 57 ? $$pre$i + -87 | 0 : $164;
         do if (($172 | 0) < 0 | ($172 | 0) == 0 & $174 >>> 0 < 8) {
          $$1149$i = $$0148$i;
          $$1153$i = $$0152$i;
          $$1156$i = $$0155$i;
          $$1160$i = $$0133$i + ($$0159$i << 4) | 0;
         } else {
          if (($172 | 0) < 0 | ($172 | 0) == 0 & $174 >>> 0 < 14) {
           $187 = $$0152$i * .0625;
           $$1149$i = $$0148$i;
           $$1153$i = $187;
           $$1156$i = $$0155$i + $187 * +($$0133$i | 0);
           $$1160$i = $$0159$i;
           break;
          }
          if (($$0148$i | 0) != 0 | ($$0133$i | 0) == 0) {
           $$1149$i = $$0148$i;
           $$1153$i = $$0152$i;
           $$1156$i = $$0155$i;
           $$1160$i = $$0159$i;
          } else {
           $$1149$i = 1;
           $$1153$i = $$0152$i;
           $$1156$i = $$0155$i + $$0152$i * .5;
           $$1160$i = $$0159$i;
          }
         } while (0);
         $194 = _i64Add($174 | 0, $172 | 0, 1, 0) | 0;
         $$1147$i = $$0146$i;
         $$2150$i = $$1149$i;
         $$2154$i = $$1153$i;
         $$2157$i = $$1156$i;
         $$2161$i = $$1160$i;
         $$3145$i = 1;
         $693 = $216;
         $694 = $218;
         $695 = $194;
         $696 = tempRet0;
        }
        $196 = HEAP32[$4 >> 2] | 0;
        if ($196 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
         HEAP32[$4 >> 2] = $196 + 1;
         $$0146$i = $$1147$i;
         $$0148$i = $$2150$i;
         $$0152$i = $$2154$i;
         $$0155$i = $$2157$i;
         $$0159$i = $$2161$i;
         $$2$i = HEAPU8[$196 >> 0] | 0;
         $$2144$i = $$3145$i;
         $172 = $696;
         $174 = $695;
         $216 = $693;
         $218 = $694;
         continue;
        } else {
         $$0146$i = $$1147$i;
         $$0148$i = $$2150$i;
         $$0152$i = $$2154$i;
         $$0155$i = $$2157$i;
         $$0159$i = $$2161$i;
         $$2$i = ___shgetc($0) | 0;
         $$2144$i = $$3145$i;
         $172 = $696;
         $174 = $695;
         $216 = $693;
         $218 = $694;
         continue;
        }
       }
       if (!$$2144$i) {
        $205 = (HEAP32[$5 >> 2] | 0) == 0;
        if (!$205) HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
        if (!$2) ___shlim($0, 0); else if (!$205) {
         $209 = HEAP32[$4 >> 2] | 0;
         HEAP32[$4 >> 2] = $209 + -1;
         if ($$0146$i | 0) HEAP32[$4 >> 2] = $209 + -2;
        }
        $$0114 = +($$0113 | 0) * 0.0;
        break L4;
       }
       $215 = ($$0146$i | 0) == 0;
       $217 = $215 ? $174 : $216;
       $219 = $215 ? $172 : $218;
       if (($172 | 0) < 0 | ($172 | 0) == 0 & $174 >>> 0 < 8) {
        $$3162183$i = $$0159$i;
        $226 = $174;
        $227 = $172;
        while (1) {
         $225 = $$3162183$i << 4;
         $226 = _i64Add($226 | 0, $227 | 0, 1, 0) | 0;
         $227 = tempRet0;
         if (!(($227 | 0) < 0 | ($227 | 0) == 0 & $226 >>> 0 < 8)) {
          $$3162$lcssa$i = $225;
          break;
         } else $$3162183$i = $225;
        }
       } else $$3162$lcssa$i = $$0159$i;
       if (($$2$lcssa$i | 32 | 0) == 112) {
        $237 = _scanexp($0, $2) | 0;
        $238 = tempRet0;
        if (($237 | 0) == 0 & ($238 | 0) == -2147483648) {
         if (!$2) {
          ___shlim($0, 0);
          $$0114 = 0.0;
          break L4;
         }
         if (!(HEAP32[$5 >> 2] | 0)) {
          $255 = 0;
          $256 = 0;
         } else {
          HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
          $255 = 0;
          $256 = 0;
         }
        } else {
         $255 = $237;
         $256 = $238;
        }
       } else if (!(HEAP32[$5 >> 2] | 0)) {
        $255 = 0;
        $256 = 0;
       } else {
        HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
        $255 = 0;
        $256 = 0;
       }
       $251 = _bitshift64Shl($217 | 0, $219 | 0, 2) | 0;
       $253 = _i64Add($251 | 0, tempRet0 | 0, -32, -1) | 0;
       $257 = _i64Add($253 | 0, tempRet0 | 0, $255 | 0, $256 | 0) | 0;
       $258 = tempRet0;
       if (!$$3162$lcssa$i) {
        $$0114 = +($$0113 | 0) * 0.0;
        break L4;
       }
       if (($258 | 0) > 0 | ($258 | 0) == 0 & $257 >>> 0 > (0 - $$0105$ph | 0) >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$0114 = +($$0113 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break L4;
       }
       $272 = $$0105$ph + -106 | 0;
       $274 = (($272 | 0) < 0) << 31 >> 31;
       if (($258 | 0) < ($274 | 0) | ($258 | 0) == ($274 | 0) & $257 >>> 0 < $272 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$0114 = +($$0113 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break L4;
       }
       if (($$3162$lcssa$i | 0) > -1) {
        $$3158179$i = $$0155$i;
        $$4163178$i = $$3162$lcssa$i;
        $290 = $257;
        $291 = $258;
        while (1) {
         $285 = !($$3158179$i >= .5);
         $289 = $285 & 1 | $$4163178$i << 1;
         $$5164$i = $289 ^ 1;
         $$4$i = $$3158179$i + ($285 ? $$3158179$i : $$3158179$i + -1.0);
         $292 = _i64Add($290 | 0, $291 | 0, -1, -1) | 0;
         $293 = tempRet0;
         if (($289 | 0) > -1) {
          $$3158179$i = $$4$i;
          $$4163178$i = $$5164$i;
          $290 = $292;
          $291 = $293;
         } else {
          $$3158$lcssa$i = $$4$i;
          $$4163$lcssa$i = $$5164$i;
          $299 = $292;
          $300 = $293;
          break;
         }
        }
       } else {
        $$3158$lcssa$i = $$0155$i;
        $$4163$lcssa$i = $$3162$lcssa$i;
        $299 = $257;
        $300 = $258;
       }
       $297 = _i64Subtract(32, 0, $$0105$ph | 0, (($$0105$ph | 0) < 0) << 31 >> 31 | 0) | 0;
       $301 = _i64Add($299 | 0, $300 | 0, $297 | 0, tempRet0 | 0) | 0;
       $302 = tempRet0;
       if (0 > ($302 | 0) | 0 == ($302 | 0) & $$0106$ph >>> 0 > $301 >>> 0) if (($301 | 0) < 0) {
        $$0166170$i = 0;
        $311 = 84;
        label = 127;
       } else {
        $$0166$i = $301;
        label = 125;
       } else {
        $$0166$i = $$0106$ph;
        label = 125;
       }
       if ((label | 0) == 125) if (($$0166$i | 0) < 53) {
        $$0166170$i = $$0166$i;
        $311 = 84 - $$0166$i | 0;
        label = 127;
       } else {
        $$0151$i = 0.0;
        $$0166169$i = $$0166$i;
        $$pre$phi202$iZ2D = +($$0113 | 0);
       }
       if ((label | 0) == 127) {
        $313 = +($$0113 | 0);
        $$0151$i = +_copysignl(+_scalbn(1.0, $311), $313);
        $$0166169$i = $$0166170$i;
        $$pre$phi202$iZ2D = $313;
       }
       $or$cond168$i = ($$4163$lcssa$i & 1 | 0) == 0 & ($$3158$lcssa$i != 0.0 & ($$0166169$i | 0) < 32);
       $325 = $$pre$phi202$iZ2D * ($or$cond168$i ? 0.0 : $$3158$lcssa$i) + ($$0151$i + $$pre$phi202$iZ2D * +((($or$cond168$i & 1) + $$4163$lcssa$i | 0) >>> 0)) - $$0151$i;
       if (!($325 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
       $$0114 = +_scalbnl($325, $299);
       break L4;
      } else $$6 = $$5; while (0);
      $sum$i = $$0105$ph + $$0106$ph | 0;
      $333 = 0 - $sum$i | 0;
      $$0324$i = $$6;
      $$0391$i = 0;
      L184 : while (1) {
       switch ($$0324$i | 0) {
       case 46:
        {
         label = 138;
         break L184;
         break;
        }
       case 48:
        break;
       default:
        {
         $$0388$i = 0;
         $$2$i117 = $$0324$i;
         $$2393$i = $$0391$i;
         $697 = 0;
         $698 = 0;
         break L184;
        }
       }
       $334 = HEAP32[$4 >> 2] | 0;
       if ($334 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
        HEAP32[$4 >> 2] = $334 + 1;
        $$0324$i = HEAPU8[$334 >> 0] | 0;
        $$0391$i = 1;
        continue;
       } else {
        $$0324$i = ___shgetc($0) | 0;
        $$0391$i = 1;
        continue;
       }
      }
      if ((label | 0) == 138) {
       $341 = HEAP32[$4 >> 2] | 0;
       if ($341 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
        HEAP32[$4 >> 2] = $341 + 1;
        $$1325$ph$i = HEAPU8[$341 >> 0] | 0;
       } else $$1325$ph$i = ___shgetc($0) | 0;
       if (($$1325$ph$i | 0) == 48) {
        $349 = 0;
        $350 = 0;
        while (1) {
         $351 = _i64Add($349 | 0, $350 | 0, -1, -1) | 0;
         $352 = tempRet0;
         $353 = HEAP32[$4 >> 2] | 0;
         if ($353 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
          HEAP32[$4 >> 2] = $353 + 1;
          $$1325$be$i = HEAPU8[$353 >> 0] | 0;
         } else $$1325$be$i = ___shgetc($0) | 0;
         if (($$1325$be$i | 0) == 48) {
          $349 = $351;
          $350 = $352;
         } else {
          $$0388$i = 1;
          $$2$i117 = $$1325$be$i;
          $$2393$i = 1;
          $697 = $351;
          $698 = $352;
          break;
         }
        }
       } else {
        $$0388$i = 1;
        $$2$i117 = $$1325$ph$i;
        $$2393$i = $$0391$i;
        $697 = 0;
        $698 = 0;
       }
      }
      HEAP32[$3 >> 2] = 0;
      $361 = $$2$i117 + -48 | 0;
      $363 = ($$2$i117 | 0) == 46;
      L203 : do if ($363 | $361 >>> 0 < 10) {
       $365 = $3 + 496 | 0;
       $$0336503$i = 0;
       $$0340502$i = 0;
       $$0396499$i = 0;
       $$1389501$i = $$0388$i;
       $$3394500$i = $$2393$i;
       $$3504$i = $$2$i117;
       $368 = 0;
       $369 = 0;
       $699 = $363;
       $700 = $361;
       $701 = $697;
       $702 = $698;
       L205 : while (1) {
        do if ($699) if (!$$1389501$i) {
         $$2338$i = $$0336503$i;
         $$2342$i = $$0340502$i;
         $$2390$i = 1;
         $$2398$i = $$0396499$i;
         $$4395$i = $$3394500$i;
         $703 = $368;
         $704 = $369;
         $705 = $368;
         $706 = $369;
        } else break L205; else {
         $370 = _i64Add($368 | 0, $369 | 0, 1, 0) | 0;
         $371 = tempRet0;
         $372 = ($$3504$i | 0) != 48;
         if (($$0340502$i | 0) >= 125) {
          if (!$372) {
           $$2338$i = $$0336503$i;
           $$2342$i = $$0340502$i;
           $$2390$i = $$1389501$i;
           $$2398$i = $$0396499$i;
           $$4395$i = $$3394500$i;
           $703 = $701;
           $704 = $702;
           $705 = $370;
           $706 = $371;
           break;
          }
          HEAP32[$365 >> 2] = HEAP32[$365 >> 2] | 1;
          $$2338$i = $$0336503$i;
          $$2342$i = $$0340502$i;
          $$2390$i = $$1389501$i;
          $$2398$i = $$0396499$i;
          $$4395$i = $$3394500$i;
          $703 = $701;
          $704 = $702;
          $705 = $370;
          $706 = $371;
          break;
         }
         $374 = $3 + ($$0340502$i << 2) | 0;
         if (!$$0336503$i) $storemerge$i = $700; else $storemerge$i = $$3504$i + -48 + ((HEAP32[$374 >> 2] | 0) * 10 | 0) | 0;
         HEAP32[$374 >> 2] = $storemerge$i;
         $379 = $$0336503$i + 1 | 0;
         $380 = ($379 | 0) == 9;
         $$2338$i = $380 ? 0 : $379;
         $$2342$i = ($380 & 1) + $$0340502$i | 0;
         $$2390$i = $$1389501$i;
         $$2398$i = $372 ? $370 : $$0396499$i;
         $$4395$i = 1;
         $703 = $701;
         $704 = $702;
         $705 = $370;
         $706 = $371;
        } while (0);
        $384 = HEAP32[$4 >> 2] | 0;
        if ($384 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
         HEAP32[$4 >> 2] = $384 + 1;
         $$3$be$i = HEAPU8[$384 >> 0] | 0;
        } else $$3$be$i = ___shgetc($0) | 0;
        $700 = $$3$be$i + -48 | 0;
        $699 = ($$3$be$i | 0) == 46;
        if (!($699 | $700 >>> 0 < 10)) {
         $$0336$lcssa$i = $$2338$i;
         $$0340$lcssa$i = $$2342$i;
         $$0396$lcssa$i = $$2398$i;
         $$1389$lcssa$i = $$2390$i;
         $$3$lcssa$i = $$3$be$i;
         $$3394$lcssa$i = $$4395$i;
         $396 = $703;
         $397 = $705;
         $399 = $704;
         $400 = $706;
         label = 161;
         break L203;
        } else {
         $$0336503$i = $$2338$i;
         $$0340502$i = $$2342$i;
         $$0396499$i = $$2398$i;
         $$1389501$i = $$2390$i;
         $$3394500$i = $$4395$i;
         $$3504$i = $$3$be$i;
         $368 = $705;
         $369 = $706;
         $701 = $703;
         $702 = $704;
        }
       }
       $$0336455$i = $$0336503$i;
       $$0340459$i = $$0340502$i;
       $$0396465$i = $$0396499$i;
       $707 = $368;
       $708 = $369;
       $709 = $701;
       $710 = $702;
       $711 = ($$3394500$i | 0) != 0;
       label = 169;
      } else {
       $$0336$lcssa$i = 0;
       $$0340$lcssa$i = 0;
       $$0396$lcssa$i = 0;
       $$1389$lcssa$i = $$0388$i;
       $$3$lcssa$i = $$2$i117;
       $$3394$lcssa$i = $$2393$i;
       $396 = $697;
       $397 = 0;
       $399 = $698;
       $400 = 0;
       label = 161;
      } while (0);
      do if ((label | 0) == 161) {
       $395 = ($$1389$lcssa$i | 0) == 0;
       $398 = $395 ? $397 : $396;
       $401 = $395 ? $400 : $399;
       $402 = ($$3394$lcssa$i | 0) != 0;
       if (!($402 & ($$3$lcssa$i | 32 | 0) == 101)) if (($$3$lcssa$i | 0) > -1) {
        $$0336455$i = $$0336$lcssa$i;
        $$0340459$i = $$0340$lcssa$i;
        $$0396465$i = $$0396$lcssa$i;
        $707 = $397;
        $708 = $400;
        $709 = $398;
        $710 = $401;
        $711 = $402;
        label = 169;
        break;
       } else {
        $$0336454$i = $$0336$lcssa$i;
        $$0340458$i = $$0340$lcssa$i;
        $$0396464$i = $$0396$lcssa$i;
        $712 = $397;
        $713 = $400;
        $714 = $402;
        $715 = $398;
        $716 = $401;
        label = 171;
        break;
       }
       $405 = _scanexp($0, $2) | 0;
       $406 = tempRet0;
       if (($405 | 0) == 0 & ($406 | 0) == -2147483648) {
        if (!$2) {
         ___shlim($0, 0);
         $$1$i = 0.0;
         break;
        }
        if (!(HEAP32[$5 >> 2] | 0)) {
         $415 = 0;
         $416 = 0;
        } else {
         HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
         $415 = 0;
         $416 = 0;
        }
       } else {
        $415 = $405;
        $416 = $406;
       }
       $417 = _i64Add($415 | 0, $416 | 0, $398 | 0, $401 | 0) | 0;
       $$0336453$i = $$0336$lcssa$i;
       $$0340457$i = $$0340$lcssa$i;
       $$0396463$i = $$0396$lcssa$i;
       $429 = $417;
       $431 = $397;
       $432 = tempRet0;
       $434 = $400;
       label = 173;
      } while (0);
      if ((label | 0) == 169) if (!(HEAP32[$5 >> 2] | 0)) {
       $$0336454$i = $$0336455$i;
       $$0340458$i = $$0340459$i;
       $$0396464$i = $$0396465$i;
       $712 = $707;
       $713 = $708;
       $714 = $711;
       $715 = $709;
       $716 = $710;
       label = 171;
      } else {
       HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
       if ($711) {
        $$0336453$i = $$0336455$i;
        $$0340457$i = $$0340459$i;
        $$0396463$i = $$0396465$i;
        $429 = $709;
        $431 = $707;
        $432 = $710;
        $434 = $708;
        label = 173;
       } else label = 172;
      }
      if ((label | 0) == 171) if ($714) {
       $$0336453$i = $$0336454$i;
       $$0340457$i = $$0340458$i;
       $$0396463$i = $$0396464$i;
       $429 = $715;
       $431 = $712;
       $432 = $716;
       $434 = $713;
       label = 173;
      } else label = 172;
      do if ((label | 0) == 172) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim($0, 0);
       $$1$i = 0.0;
      } else if ((label | 0) == 173) {
       $425 = HEAP32[$3 >> 2] | 0;
       if (!$425) {
        $$1$i = +($$0113 | 0) * 0.0;
        break;
       }
       if ((($434 | 0) < 0 | ($434 | 0) == 0 & $431 >>> 0 < 10) & (($429 | 0) == ($431 | 0) & ($432 | 0) == ($434 | 0))) if ($$0106$ph >>> 0 > 30 | ($425 >>> $$0106$ph | 0) == 0) {
        $$1$i = +($$0113 | 0) * +($425 >>> 0);
        break;
       }
       $447 = ($$0105$ph | 0) / -2 | 0;
       $449 = (($447 | 0) < 0) << 31 >> 31;
       if (($432 | 0) > ($449 | 0) | ($432 | 0) == ($449 | 0) & $429 >>> 0 > $447 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$1$i = +($$0113 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break;
       }
       $459 = $$0105$ph + -106 | 0;
       $461 = (($459 | 0) < 0) << 31 >> 31;
       if (($432 | 0) < ($461 | 0) | ($432 | 0) == ($461 | 0) & $429 >>> 0 < $459 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$1$i = +($$0113 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break;
       }
       if (!$$0336453$i) $$3343$i = $$0340457$i; else {
        if (($$0336453$i | 0) < 9) {
         $473 = $3 + ($$0340457$i << 2) | 0;
         $$3339493$i = $$0336453$i;
         $475 = HEAP32[$473 >> 2] | 0;
         do {
          $475 = $475 * 10 | 0;
          $$3339493$i = $$3339493$i + 1 | 0;
         } while (($$3339493$i | 0) != 9);
         HEAP32[$473 >> 2] = $475;
        }
        $$3343$i = $$0340457$i + 1 | 0;
       }
       if (($$0396463$i | 0) < 9) if (($$0396463$i | 0) <= ($429 | 0) & ($429 | 0) < 18) {
        if (($429 | 0) == 9) {
         $$1$i = +($$0113 | 0) * +((HEAP32[$3 >> 2] | 0) >>> 0);
         break;
        }
        if (($429 | 0) < 9) {
         $$1$i = +($$0113 | 0) * +((HEAP32[$3 >> 2] | 0) >>> 0) / +(HEAP32[70196 + (8 - $429 << 2) >> 2] | 0);
         break;
        }
        $496 = $$0106$ph + 27 + (Math_imul($429, -3) | 0) | 0;
        $$pre$i119 = HEAP32[$3 >> 2] | 0;
        if (($496 | 0) > 30 | ($$pre$i119 >>> $496 | 0) == 0) {
         $$1$i = +($$0113 | 0) * +($$pre$i119 >>> 0) * +(HEAP32[70196 + ($429 + -10 << 2) >> 2] | 0);
         break;
        }
       }
       $508 = ($429 | 0) % 9 | 0;
       if (!$508) {
        $$0375$ph$i = 0;
        $$1368$ph438$i = $$3343$i;
        $$2347$ph439$i = 0;
        $$2382$ph437$i = $429;
       } else {
        $512 = ($429 | 0) > -1 ? $508 : $508 + 9 | 0;
        $515 = HEAP32[70196 + (8 - $512 << 2) >> 2] | 0;
        if (!$$3343$i) {
         $$0345$lcssa545$i = 0;
         $$0367$i = 0;
         $$0380$lcssa544$i = $429;
        } else {
         $517 = 1e9 / ($515 | 0) | 0;
         $$0335486$i = 0;
         $$0345484$i = 0;
         $$0380483$i = $429;
         $$4344485$i = 0;
         do {
          $518 = $3 + ($$4344485$i << 2) | 0;
          $519 = HEAP32[$518 >> 2] | 0;
          $522 = (($519 >>> 0) / ($515 >>> 0) | 0) + $$0335486$i | 0;
          HEAP32[$518 >> 2] = $522;
          $$0335486$i = Math_imul(($519 >>> 0) % ($515 >>> 0) | 0, $517) | 0;
          $or$cond413$i = ($$4344485$i | 0) == ($$0345484$i | 0) & ($522 | 0) == 0;
          $$0380483$i = $or$cond413$i ? $$0380483$i + -9 | 0 : $$0380483$i;
          $$0345484$i = $or$cond413$i ? $$0345484$i + 1 & 127 : $$0345484$i;
          $$4344485$i = $$4344485$i + 1 | 0;
         } while (($$4344485$i | 0) != ($$3343$i | 0));
         if (!$$0335486$i) {
          $$0345$lcssa545$i = $$0345484$i;
          $$0367$i = $$3343$i;
          $$0380$lcssa544$i = $$0380483$i;
         } else {
          HEAP32[$3 + ($$3343$i << 2) >> 2] = $$0335486$i;
          $$0345$lcssa545$i = $$0345484$i;
          $$0367$i = $$3343$i + 1 | 0;
          $$0380$lcssa544$i = $$0380483$i;
         }
        }
        $$0375$ph$i = 0;
        $$1368$ph438$i = $$0367$i;
        $$2347$ph439$i = $$0345$lcssa545$i;
        $$2382$ph437$i = 9 - $512 + $$0380$lcssa544$i | 0;
       }
       L284 : while (1) {
        $536 = ($$2382$ph437$i | 0) < 18;
        $537 = ($$2382$ph437$i | 0) == 18;
        $538 = $3 + ($$2347$ph439$i << 2) | 0;
        $$0375$i = $$0375$ph$i;
        $$1368$i = $$1368$ph438$i;
        while (1) {
         if (!$536) {
          if (!$537) {
           $$1376$ph$i = $$0375$i;
           $$4349$ph$i = $$2347$ph439$i;
           $$4384$ph435$i = $$2382$ph437$i;
           $$6373$ph$i = $$1368$i;
           break L284;
          }
          if ((HEAP32[$538 >> 2] | 0) >>> 0 >= 9007199) {
           $$1376$ph$i = $$0375$i;
           $$4349$ph$i = $$2347$ph439$i;
           $$4384$ph435$i = 18;
           $$6373$ph$i = $$1368$i;
           break L284;
          }
         }
         $$0329$i = 0;
         $$2369$i = $$1368$i;
         $$5$in$i = $$1368$i + 127 | 0;
         while (1) {
          $$5$i121 = $$5$in$i & 127;
          $542 = $3 + ($$5$i121 << 2) | 0;
          $544 = _bitshift64Shl(HEAP32[$542 >> 2] | 0, 0, 29) | 0;
          $546 = _i64Add($544 | 0, tempRet0 | 0, $$0329$i | 0, 0) | 0;
          $547 = tempRet0;
          if ($547 >>> 0 > 0 | ($547 | 0) == 0 & $546 >>> 0 > 1e9) {
           $553 = ___udivdi3($546 | 0, $547 | 0, 1e9, 0) | 0;
           $555 = ___uremdi3($546 | 0, $547 | 0, 1e9, 0) | 0;
           $$1330$i = $553;
           $$sink$off0$i = $555;
          } else {
           $$1330$i = 0;
           $$sink$off0$i = $546;
          }
          HEAP32[$542 >> 2] = $$sink$off0$i;
          $560 = ($$5$i121 | 0) == ($$2347$ph439$i | 0);
          $$2369$i = ($$5$i121 | 0) != ($$2369$i + 127 & 127 | 0) | $560 ? $$2369$i : ($$sink$off0$i | 0) == 0 ? $$5$i121 : $$2369$i;
          if ($560) break; else {
           $$0329$i = $$1330$i;
           $$5$in$i = $$5$i121 + -1 | 0;
          }
         }
         $$0375$i = $$0375$i + -29 | 0;
         if ($$1330$i | 0) break; else $$1368$i = $$2369$i;
        }
        $567 = $$2347$ph439$i + 127 & 127;
        $570 = $$2369$i + 127 & 127;
        $573 = $3 + (($$2369$i + 126 & 127) << 2) | 0;
        if (($567 | 0) == ($$2369$i | 0)) {
         HEAP32[$573 >> 2] = HEAP32[$573 >> 2] | HEAP32[$3 + ($570 << 2) >> 2];
         $$4371$i = $570;
        } else $$4371$i = $$2369$i;
        HEAP32[$3 + ($567 << 2) >> 2] = $$1330$i;
        $$0375$ph$i = $$0375$i;
        $$1368$ph438$i = $$4371$i;
        $$2347$ph439$i = $567;
        $$2382$ph437$i = $$2382$ph437$i + 9 | 0;
       }
       L302 : while (1) {
        $612 = $$6373$ph$i + 1 & 127;
        $618 = $3 + (($$6373$ph$i + 127 & 127) << 2) | 0;
        $$1376$ph549$i = $$1376$ph$i;
        $$4349$ph550$i = $$4349$ph$i;
        $$4384$ph$i = $$4384$ph435$i;
        while (1) {
         $591 = ($$4384$ph$i | 0) == 18;
         $$416$i = ($$4384$ph$i | 0) > 27 ? 9 : 1;
         $$1376$i = $$1376$ph549$i;
         $$4349$i = $$4349$ph550$i;
         while (1) {
          $$0331476$i = 0;
          while (1) {
           $580 = $$0331476$i + $$4349$i & 127;
           if (($580 | 0) == ($$6373$ph$i | 0)) {
            $$1332$i = 2;
            label = 220;
            break;
           }
           $583 = HEAP32[$3 + ($580 << 2) >> 2] | 0;
           $585 = HEAP32[70228 + ($$0331476$i << 2) >> 2] | 0;
           if ($583 >>> 0 < $585 >>> 0) {
            $$1332$i = 2;
            label = 220;
            break;
           }
           if ($583 >>> 0 > $585 >>> 0) break;
           $588 = $$0331476$i + 1 | 0;
           if (($588 | 0) < 2) $$0331476$i = $588; else {
            $$1332$i = $588;
            label = 220;
            break;
           }
          }
          if ((label | 0) == 220) {
           label = 0;
           if ($591 & ($$1332$i | 0) == 2) {
            $$0360474$i = 0.0;
            $$4475$i = 0;
            $$9473$i = $$6373$ph$i;
            break L302;
           }
          }
          $592 = $$1376$i + $$416$i | 0;
          if (($$4349$i | 0) == ($$6373$ph$i | 0)) {
           $$1376$i = $592;
           $$4349$i = $$6373$ph$i;
          } else break;
         }
         $595 = (1 << $$416$i) + -1 | 0;
         $596 = 1e9 >>> $$416$i;
         $$0327480$i = 0;
         $$5350478$i = $$4349$i;
         $$5385477$i = $$4384$ph$i;
         $$6479$i = $$4349$i;
         do {
          $597 = $3 + ($$6479$i << 2) | 0;
          $598 = HEAP32[$597 >> 2] | 0;
          $601 = ($598 >>> $$416$i) + $$0327480$i | 0;
          HEAP32[$597 >> 2] = $601;
          $$0327480$i = Math_imul($598 & $595, $596) | 0;
          $or$cond417$i = ($$6479$i | 0) == ($$5350478$i | 0) & ($601 | 0) == 0;
          $$5385477$i = $or$cond417$i ? $$5385477$i + -9 | 0 : $$5385477$i;
          $$5350478$i = $or$cond417$i ? $$5350478$i + 1 & 127 : $$5350478$i;
          $$6479$i = $$6479$i + 1 & 127;
         } while (($$6479$i | 0) != ($$6373$ph$i | 0));
         if (!$$0327480$i) {
          $$1376$ph549$i = $592;
          $$4349$ph550$i = $$5350478$i;
          $$4384$ph$i = $$5385477$i;
          continue;
         }
         if (($612 | 0) != ($$5350478$i | 0)) break;
         HEAP32[$618 >> 2] = HEAP32[$618 >> 2] | 1;
         $$1376$ph549$i = $592;
         $$4349$ph550$i = $$5350478$i;
         $$4384$ph$i = $$5385477$i;
        }
        HEAP32[$3 + ($$6373$ph$i << 2) >> 2] = $$0327480$i;
        $$1376$ph$i = $592;
        $$4349$ph$i = $$5350478$i;
        $$4384$ph435$i = $$5385477$i;
        $$6373$ph$i = $612;
       }
       while (1) {
        $623 = $$4475$i + $$4349$i & 127;
        $626 = $$9473$i + 1 & 127;
        if (($623 | 0) == ($$9473$i | 0)) {
         HEAP32[$3 + ($626 + -1 << 2) >> 2] = 0;
         $$10$i = $626;
        } else $$10$i = $$9473$i;
        $$0360474$i = $$0360474$i * 1.0e9 + +((HEAP32[$3 + ($623 << 2) >> 2] | 0) >>> 0);
        $$4475$i = $$4475$i + 1 | 0;
        if (($$4475$i | 0) == 2) break; else $$9473$i = $$10$i;
       }
       $635 = +($$0113 | 0);
       $636 = $635 * $$0360474$i;
       $637 = $$1376$i + 53 | 0;
       $638 = $637 - $$0105$ph | 0;
       $639 = ($638 | 0) < ($$0106$ph | 0);
       $$0364$i = $639 & 1;
       $$0328$i = $639 ? (($638 | 0) < 0 ? 0 : $638) : $$0106$ph;
       if (($$0328$i | 0) < 53) {
        $644 = +_copysignl(+_scalbn(1.0, 105 - $$0328$i | 0), $636);
        $647 = +_fmodl($636, +_scalbn(1.0, 53 - $$0328$i | 0));
        $$0355$i = $644;
        $$0356$i = $647;
        $$1361$i = $644 + ($636 - $647);
       } else {
        $$0355$i = 0.0;
        $$0356$i = 0.0;
        $$1361$i = $636;
       }
       $651 = $$4349$i + 2 & 127;
       do if (($651 | 0) == ($$10$i | 0)) $$3359$i = $$0356$i; else {
        $654 = HEAP32[$3 + ($651 << 2) >> 2] | 0;
        do if ($654 >>> 0 < 5e8) {
         if (!$654) if (($$4349$i + 3 & 127 | 0) == ($$10$i | 0)) {
          $$1357$i = $$0356$i;
          break;
         }
         $$1357$i = $635 * .25 + $$0356$i;
        } else {
         if (($654 | 0) != 5e8) {
          $$1357$i = $635 * .75 + $$0356$i;
          break;
         }
         if (($$4349$i + 3 & 127 | 0) == ($$10$i | 0)) {
          $$1357$i = $635 * .5 + $$0356$i;
          break;
         } else {
          $$1357$i = $635 * .75 + $$0356$i;
          break;
         }
        } while (0);
        if ((53 - $$0328$i | 0) > 1) {
         if (+_fmodl($$1357$i, 1.0) != 0.0) {
          $$3359$i = $$1357$i;
          break;
         }
         $$3359$i = $$1357$i + 1.0;
        } else $$3359$i = $$1357$i;
       } while (0);
       $678 = $$1361$i + $$3359$i - $$0355$i;
       do if (($637 & 2147483647 | 0) > (-2 - $sum$i | 0)) {
        if (!(+Math_abs(+$678) >= 9007199254740992.0)) {
         $$2362$i = $678;
         $$2366$i = $$0364$i;
         $$3378$i = $$1376$i;
        } else {
         $$2362$i = $678 * .5;
         $$2366$i = $639 & ($$0328$i | 0) == ($638 | 0) ? 0 : $$0364$i;
         $$3378$i = $$1376$i + 1 | 0;
        }
        if (($$3378$i + 50 | 0) <= ($333 | 0)) if (!($$3359$i != 0.0 & ($$2366$i | 0) != 0)) {
         $$3363$i = $$2362$i;
         $$4379$i = $$3378$i;
         break;
        }
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$3363$i = $$2362$i;
        $$4379$i = $$3378$i;
       } else {
        $$3363$i = $678;
        $$4379$i = $$1376$i;
       } while (0);
       $$1$i = +_scalbnl($$3363$i, $$4379$i);
      } while (0);
      $$0114 = $$1$i;
      break L4;
      break;
     }
    default:
     {
      if (HEAP32[$5 >> 2] | 0) HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
      HEAP32[(___errno_location() | 0) >> 2] = 22;
      ___shlim($0, 0);
      $$0114 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((label | 0) == 23) {
   $46 = (HEAP32[$5 >> 2] | 0) == 0;
   if (!$46) HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
   if (($2 | 0) != 0 & $$0107$lcssa >>> 0 > 3) {
    $$1108 = $$0107$lcssa;
    do {
     if (!$46) HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
     $$1108 = $$1108 + -1 | 0;
    } while ($$1108 >>> 0 > 3);
   }
  }
  $$0114 = +($$0113 | 0) * inf;
 } while (0);
 STACKTOP = sp;
 return +$$0114;
}

function _malloc($0) {
 $0 = $0 | 0;
 var $$$4349$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i17$i = 0, $$0$i18$i = 0, $$01$i$i = 0, $$0187$i = 0, $$0189$i = 0, $$0190$i = 0, $$0191$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0, $$024370$i = 0, $$0286$i$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0294$i$i = 0, $$0295$i$i = 0, $$0340$i = 0, $$0342$i = 0, $$0343$i = 0, $$0345$i = 0, $$0351$i = 0, $$0356$i = 0, $$0357$i = 0, $$0359$i = 0, $$0360$i = 0, $$0366$i = 0, $$1194$i = 0, $$1196$i = 0, $$124469$i = 0, $$1290$i$i = 0, $$1292$i$i = 0, $$1341$i = 0, $$1346$i = 0, $$1361$i = 0, $$1368$i = 0, $$1372$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2353$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i201 = 0, $$3348$i = 0, $$3370$i = 0, $$4$lcssa$i = 0, $$413$i = 0, $$4349$lcssa$i = 0, $$434912$i = 0, $$4355$$4$i = 0, $$4355$ph$i = 0, $$435511$i = 0, $$5256$i = 0, $$723947$i = 0, $$748$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i20$iZ2D = 0, $$pre$phi$i206Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi10$i$iZ2D = 0, $$pre$phiZ2D = 0, $1 = 0, $1004 = 0, $1007 = 0, $1008 = 0, $101 = 0, $102 = 0, $1026 = 0, $1028 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1045 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $108 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $134 = 0, $14 = 0, $140 = 0, $143 = 0, $146 = 0, $149 = 0, $150 = 0, $151 = 0, $153 = 0, $156 = 0, $158 = 0, $16 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $172 = 0, $173 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $18 = 0, $184 = 0, $185 = 0, $19 = 0, $193 = 0, $198 = 0, $20 = 0, $202 = 0, $208 = 0, $215 = 0, $219 = 0, $228 = 0, $229 = 0, $231 = 0, $232 = 0, $236 = 0, $237 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $264 = 0, $269 = 0, $27 = 0, $276 = 0, $286 = 0, $290 = 0, $296 = 0, $30 = 0, $301 = 0, $304 = 0, $308 = 0, $310 = 0, $311 = 0, $313 = 0, $315 = 0, $317 = 0, $319 = 0, $321 = 0, $323 = 0, $325 = 0, $335 = 0, $336 = 0, $338 = 0, $34 = 0, $347 = 0, $349 = 0, $352 = 0, $354 = 0, $357 = 0, $359 = 0, $362 = 0, $365 = 0, $366 = 0, $368 = 0, $369 = 0, $37 = 0, $371 = 0, $372 = 0, $374 = 0, $375 = 0, $380 = 0, $381 = 0, $386 = 0, $389 = 0, $394 = 0, $398 = 0, $404 = 0, $41 = 0, $411 = 0, $415 = 0, $423 = 0, $426 = 0, $427 = 0, $428 = 0, $432 = 0, $433 = 0, $439 = 0, $44 = 0, $444 = 0, $445 = 0, $448 = 0, $450 = 0, $453 = 0, $458 = 0, $464 = 0, $466 = 0, $468 = 0, $47 = 0, $470 = 0, $487 = 0, $489 = 0, $49 = 0, $496 = 0, $497 = 0, $498 = 0, $50 = 0, $506 = 0, $508 = 0, $509 = 0, $511 = 0, $52 = 0, $520 = 0, $524 = 0, $526 = 0, $527 = 0, $528 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $546 = 0, $548 = 0, $549 = 0, $555 = 0, $557 = 0, $559 = 0, $56 = 0, $564 = 0, $566 = 0, $568 = 0, $569 = 0, $570 = 0, $578 = 0, $579 = 0, $58 = 0, $582 = 0, $586 = 0, $589 = 0, $591 = 0, $597 = 0, $6 = 0, $60 = 0, $601 = 0, $605 = 0, $614 = 0, $615 = 0, $62 = 0, $621 = 0, $624 = 0, $627 = 0, $629 = 0, $634 = 0, $64 = 0, $640 = 0, $645 = 0, $646 = 0, $647 = 0, $653 = 0, $654 = 0, $655 = 0, $659 = 0, $67 = 0, $670 = 0, $675 = 0, $676 = 0, $678 = 0, $684 = 0, $686 = 0, $69 = 0, $690 = 0, $696 = 0, $7 = 0, $70 = 0, $700 = 0, $706 = 0, $708 = 0, $71 = 0, $714 = 0, $718 = 0, $719 = 0, $72 = 0, $724 = 0, $73 = 0, $730 = 0, $735 = 0, $738 = 0, $739 = 0, $742 = 0, $744 = 0, $746 = 0, $749 = 0, $760 = 0, $765 = 0, $767 = 0, $77 = 0, $770 = 0, $772 = 0, $775 = 0, $778 = 0, $779 = 0, $780 = 0, $782 = 0, $784 = 0, $785 = 0, $787 = 0, $788 = 0, $793 = 0, $794 = 0, $8 = 0, $80 = 0, $803 = 0, $808 = 0, $811 = 0, $812 = 0, $818 = 0, $826 = 0, $832 = 0, $835 = 0, $836 = 0, $837 = 0, $84 = 0, $841 = 0, $842 = 0, $848 = 0, $853 = 0, $854 = 0, $857 = 0, $859 = 0, $862 = 0, $867 = 0, $87 = 0, $873 = 0, $875 = 0, $877 = 0, $878 = 0, $896 = 0, $898 = 0, $9 = 0, $905 = 0, $906 = 0, $907 = 0, $914 = 0, $918 = 0, $92 = 0, $922 = 0, $924 = 0, $93 = 0, $930 = 0, $931 = 0, $933 = 0, $934 = 0, $938 = 0, $943 = 0, $944 = 0, $945 = 0, $95 = 0, $951 = 0, $958 = 0, $96 = 0, $963 = 0, $966 = 0, $967 = 0, $968 = 0, $972 = 0, $973 = 0, $979 = 0, $98 = 0, $984 = 0, $985 = 0, $988 = 0, $990 = 0, $993 = 0, $998 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 do if ($0 >>> 0 < 245) {
  $6 = $0 >>> 0 < 11 ? 16 : $0 + 11 & -8;
  $7 = $6 >>> 3;
  $8 = HEAP32[27156] | 0;
  $9 = $8 >>> $7;
  if ($9 & 3 | 0) {
   $14 = ($9 & 1 ^ 1) + $7 | 0;
   $16 = 108664 + ($14 << 1 << 2) | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   $19 = $18 + 8 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   do if (($16 | 0) == ($20 | 0)) HEAP32[27156] = $8 & ~(1 << $14); else {
    if ($20 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
    $27 = $20 + 12 | 0;
    if ((HEAP32[$27 >> 2] | 0) == ($18 | 0)) {
     HEAP32[$27 >> 2] = $16;
     HEAP32[$17 >> 2] = $20;
     break;
    } else _abort();
   } while (0);
   $30 = $14 << 3;
   HEAP32[$18 + 4 >> 2] = $30 | 3;
   $34 = $18 + $30 + 4 | 0;
   HEAP32[$34 >> 2] = HEAP32[$34 >> 2] | 1;
   $$0 = $19;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $37 = HEAP32[27158] | 0;
  if ($6 >>> 0 > $37 >>> 0) {
   if ($9 | 0) {
    $41 = 2 << $7;
    $44 = $9 << $7 & ($41 | 0 - $41);
    $47 = ($44 & 0 - $44) + -1 | 0;
    $49 = $47 >>> 12 & 16;
    $50 = $47 >>> $49;
    $52 = $50 >>> 5 & 8;
    $54 = $50 >>> $52;
    $56 = $54 >>> 2 & 4;
    $58 = $54 >>> $56;
    $60 = $58 >>> 1 & 2;
    $62 = $58 >>> $60;
    $64 = $62 >>> 1 & 1;
    $67 = ($52 | $49 | $56 | $60 | $64) + ($62 >>> $64) | 0;
    $69 = 108664 + ($67 << 1 << 2) | 0;
    $70 = $69 + 8 | 0;
    $71 = HEAP32[$70 >> 2] | 0;
    $72 = $71 + 8 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    do if (($69 | 0) == ($73 | 0)) {
     $77 = $8 & ~(1 << $67);
     HEAP32[27156] = $77;
     $98 = $77;
    } else {
     if ($73 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
     $80 = $73 + 12 | 0;
     if ((HEAP32[$80 >> 2] | 0) == ($71 | 0)) {
      HEAP32[$80 >> 2] = $69;
      HEAP32[$70 >> 2] = $73;
      $98 = $8;
      break;
     } else _abort();
    } while (0);
    $84 = ($67 << 3) - $6 | 0;
    HEAP32[$71 + 4 >> 2] = $6 | 3;
    $87 = $71 + $6 | 0;
    HEAP32[$87 + 4 >> 2] = $84 | 1;
    HEAP32[$87 + $84 >> 2] = $84;
    if ($37 | 0) {
     $92 = HEAP32[27161] | 0;
     $93 = $37 >>> 3;
     $95 = 108664 + ($93 << 1 << 2) | 0;
     $96 = 1 << $93;
     if (!($98 & $96)) {
      HEAP32[27156] = $98 | $96;
      $$0199 = $95;
      $$pre$phiZ2D = $95 + 8 | 0;
     } else {
      $101 = $95 + 8 | 0;
      $102 = HEAP32[$101 >> 2] | 0;
      if ($102 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
       $$0199 = $102;
       $$pre$phiZ2D = $101;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $92;
     HEAP32[$$0199 + 12 >> 2] = $92;
     HEAP32[$92 + 8 >> 2] = $$0199;
     HEAP32[$92 + 12 >> 2] = $95;
    }
    HEAP32[27158] = $84;
    HEAP32[27161] = $87;
    $$0 = $72;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $108 = HEAP32[27157] | 0;
   if (!$108) $$0197 = $6; else {
    $112 = ($108 & 0 - $108) + -1 | 0;
    $114 = $112 >>> 12 & 16;
    $115 = $112 >>> $114;
    $117 = $115 >>> 5 & 8;
    $119 = $115 >>> $117;
    $121 = $119 >>> 2 & 4;
    $123 = $119 >>> $121;
    $125 = $123 >>> 1 & 2;
    $127 = $123 >>> $125;
    $129 = $127 >>> 1 & 1;
    $134 = HEAP32[108928 + (($117 | $114 | $121 | $125 | $129) + ($127 >>> $129) << 2) >> 2] | 0;
    $$0189$i = $134;
    $$0190$i = $134;
    $$0191$i = (HEAP32[$134 + 4 >> 2] & -8) - $6 | 0;
    while (1) {
     $140 = HEAP32[$$0189$i + 16 >> 2] | 0;
     if (!$140) {
      $143 = HEAP32[$$0189$i + 20 >> 2] | 0;
      if (!$143) break; else $146 = $143;
     } else $146 = $140;
     $149 = (HEAP32[$146 + 4 >> 2] & -8) - $6 | 0;
     $150 = $149 >>> 0 < $$0191$i >>> 0;
     $$0189$i = $146;
     $$0190$i = $150 ? $146 : $$0190$i;
     $$0191$i = $150 ? $149 : $$0191$i;
    }
    $151 = HEAP32[27160] | 0;
    if ($$0190$i >>> 0 < $151 >>> 0) _abort();
    $153 = $$0190$i + $6 | 0;
    if ($$0190$i >>> 0 >= $153 >>> 0) _abort();
    $156 = HEAP32[$$0190$i + 24 >> 2] | 0;
    $158 = HEAP32[$$0190$i + 12 >> 2] | 0;
    do if (($158 | 0) == ($$0190$i | 0)) {
     $169 = $$0190$i + 20 | 0;
     $170 = HEAP32[$169 >> 2] | 0;
     if (!$170) {
      $172 = $$0190$i + 16 | 0;
      $173 = HEAP32[$172 >> 2] | 0;
      if (!$173) {
       $$3$i = 0;
       break;
      } else {
       $$1194$i = $173;
       $$1196$i = $172;
      }
     } else {
      $$1194$i = $170;
      $$1196$i = $169;
     }
     while (1) {
      $175 = $$1194$i + 20 | 0;
      $176 = HEAP32[$175 >> 2] | 0;
      if ($176 | 0) {
       $$1194$i = $176;
       $$1196$i = $175;
       continue;
      }
      $178 = $$1194$i + 16 | 0;
      $179 = HEAP32[$178 >> 2] | 0;
      if (!$179) break; else {
       $$1194$i = $179;
       $$1196$i = $178;
      }
     }
     if ($$1196$i >>> 0 < $151 >>> 0) _abort(); else {
      HEAP32[$$1196$i >> 2] = 0;
      $$3$i = $$1194$i;
      break;
     }
    } else {
     $161 = HEAP32[$$0190$i + 8 >> 2] | 0;
     if ($161 >>> 0 < $151 >>> 0) _abort();
     $163 = $161 + 12 | 0;
     if ((HEAP32[$163 >> 2] | 0) != ($$0190$i | 0)) _abort();
     $166 = $158 + 8 | 0;
     if ((HEAP32[$166 >> 2] | 0) == ($$0190$i | 0)) {
      HEAP32[$163 >> 2] = $158;
      HEAP32[$166 >> 2] = $161;
      $$3$i = $158;
      break;
     } else _abort();
    } while (0);
    do if ($156 | 0) {
     $184 = HEAP32[$$0190$i + 28 >> 2] | 0;
     $185 = 108928 + ($184 << 2) | 0;
     if (($$0190$i | 0) == (HEAP32[$185 >> 2] | 0)) {
      HEAP32[$185 >> 2] = $$3$i;
      if (!$$3$i) {
       HEAP32[27157] = $108 & ~(1 << $184);
       break;
      }
     } else {
      if ($156 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
      $193 = $156 + 16 | 0;
      if ((HEAP32[$193 >> 2] | 0) == ($$0190$i | 0)) HEAP32[$193 >> 2] = $$3$i; else HEAP32[$156 + 20 >> 2] = $$3$i;
      if (!$$3$i) break;
     }
     $198 = HEAP32[27160] | 0;
     if ($$3$i >>> 0 < $198 >>> 0) _abort();
     HEAP32[$$3$i + 24 >> 2] = $156;
     $202 = HEAP32[$$0190$i + 16 >> 2] | 0;
     do if ($202 | 0) if ($202 >>> 0 < $198 >>> 0) _abort(); else {
      HEAP32[$$3$i + 16 >> 2] = $202;
      HEAP32[$202 + 24 >> 2] = $$3$i;
      break;
     } while (0);
     $208 = HEAP32[$$0190$i + 20 >> 2] | 0;
     if ($208 | 0) if ($208 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
      HEAP32[$$3$i + 20 >> 2] = $208;
      HEAP32[$208 + 24 >> 2] = $$3$i;
      break;
     }
    } while (0);
    if ($$0191$i >>> 0 < 16) {
     $215 = $$0191$i + $6 | 0;
     HEAP32[$$0190$i + 4 >> 2] = $215 | 3;
     $219 = $$0190$i + $215 + 4 | 0;
     HEAP32[$219 >> 2] = HEAP32[$219 >> 2] | 1;
    } else {
     HEAP32[$$0190$i + 4 >> 2] = $6 | 3;
     HEAP32[$153 + 4 >> 2] = $$0191$i | 1;
     HEAP32[$153 + $$0191$i >> 2] = $$0191$i;
     if ($37 | 0) {
      $228 = HEAP32[27161] | 0;
      $229 = $37 >>> 3;
      $231 = 108664 + ($229 << 1 << 2) | 0;
      $232 = 1 << $229;
      if (!($8 & $232)) {
       HEAP32[27156] = $8 | $232;
       $$0187$i = $231;
       $$pre$phi$iZ2D = $231 + 8 | 0;
      } else {
       $236 = $231 + 8 | 0;
       $237 = HEAP32[$236 >> 2] | 0;
       if ($237 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
        $$0187$i = $237;
        $$pre$phi$iZ2D = $236;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $228;
      HEAP32[$$0187$i + 12 >> 2] = $228;
      HEAP32[$228 + 8 >> 2] = $$0187$i;
      HEAP32[$228 + 12 >> 2] = $231;
     }
     HEAP32[27158] = $$0191$i;
     HEAP32[27161] = $153;
    }
    $$0 = $$0190$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else $$0197 = $6;
 } else if ($0 >>> 0 > 4294967231) $$0197 = -1; else {
  $245 = $0 + 11 | 0;
  $246 = $245 & -8;
  $247 = HEAP32[27157] | 0;
  if (!$247) $$0197 = $246; else {
   $249 = 0 - $246 | 0;
   $250 = $245 >>> 8;
   if (!$250) $$0356$i = 0; else if ($246 >>> 0 > 16777215) $$0356$i = 31; else {
    $255 = ($250 + 1048320 | 0) >>> 16 & 8;
    $256 = $250 << $255;
    $259 = ($256 + 520192 | 0) >>> 16 & 4;
    $261 = $256 << $259;
    $264 = ($261 + 245760 | 0) >>> 16 & 2;
    $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
    $$0356$i = $246 >>> ($269 + 7 | 0) & 1 | $269 << 1;
   }
   $276 = HEAP32[108928 + ($$0356$i << 2) >> 2] | 0;
   L123 : do if (!$276) {
    $$2353$i = 0;
    $$3$i201 = 0;
    $$3348$i = $249;
    label = 86;
   } else {
    $$0340$i = 0;
    $$0345$i = $249;
    $$0351$i = $276;
    $$0357$i = $246 << (($$0356$i | 0) == 31 ? 0 : 25 - ($$0356$i >>> 1) | 0);
    $$0360$i = 0;
    while (1) {
     $286 = (HEAP32[$$0351$i + 4 >> 2] & -8) - $246 | 0;
     if ($286 >>> 0 < $$0345$i >>> 0) if (!$286) {
      $$413$i = $$0351$i;
      $$434912$i = 0;
      $$435511$i = $$0351$i;
      label = 90;
      break L123;
     } else {
      $$1341$i = $$0351$i;
      $$1346$i = $286;
     } else {
      $$1341$i = $$0340$i;
      $$1346$i = $$0345$i;
     }
     $290 = HEAP32[$$0351$i + 20 >> 2] | 0;
     $$0351$i = HEAP32[$$0351$i + 16 + ($$0357$i >>> 31 << 2) >> 2] | 0;
     $$1361$i = ($290 | 0) == 0 | ($290 | 0) == ($$0351$i | 0) ? $$0360$i : $290;
     $296 = ($$0351$i | 0) == 0;
     if ($296) {
      $$2353$i = $$1361$i;
      $$3$i201 = $$1341$i;
      $$3348$i = $$1346$i;
      label = 86;
      break;
     } else {
      $$0340$i = $$1341$i;
      $$0345$i = $$1346$i;
      $$0357$i = $$0357$i << ($296 & 1 ^ 1);
      $$0360$i = $$1361$i;
     }
    }
   } while (0);
   if ((label | 0) == 86) {
    if (($$2353$i | 0) == 0 & ($$3$i201 | 0) == 0) {
     $301 = 2 << $$0356$i;
     $304 = $247 & ($301 | 0 - $301);
     if (!$304) {
      $$0197 = $246;
      break;
     }
     $308 = ($304 & 0 - $304) + -1 | 0;
     $310 = $308 >>> 12 & 16;
     $311 = $308 >>> $310;
     $313 = $311 >>> 5 & 8;
     $315 = $311 >>> $313;
     $317 = $315 >>> 2 & 4;
     $319 = $315 >>> $317;
     $321 = $319 >>> 1 & 2;
     $323 = $319 >>> $321;
     $325 = $323 >>> 1 & 1;
     $$4355$ph$i = HEAP32[108928 + (($313 | $310 | $317 | $321 | $325) + ($323 >>> $325) << 2) >> 2] | 0;
    } else $$4355$ph$i = $$2353$i;
    if (!$$4355$ph$i) {
     $$4$lcssa$i = $$3$i201;
     $$4349$lcssa$i = $$3348$i;
    } else {
     $$413$i = $$3$i201;
     $$434912$i = $$3348$i;
     $$435511$i = $$4355$ph$i;
     label = 90;
    }
   }
   if ((label | 0) == 90) while (1) {
    label = 0;
    $335 = (HEAP32[$$435511$i + 4 >> 2] & -8) - $246 | 0;
    $336 = $335 >>> 0 < $$434912$i >>> 0;
    $$$4349$i = $336 ? $335 : $$434912$i;
    $$4355$$4$i = $336 ? $$435511$i : $$413$i;
    $338 = HEAP32[$$435511$i + 16 >> 2] | 0;
    if ($338 | 0) {
     $$413$i = $$4355$$4$i;
     $$434912$i = $$$4349$i;
     $$435511$i = $338;
     label = 90;
     continue;
    }
    $$435511$i = HEAP32[$$435511$i + 20 >> 2] | 0;
    if (!$$435511$i) {
     $$4$lcssa$i = $$4355$$4$i;
     $$4349$lcssa$i = $$$4349$i;
     break;
    } else {
     $$413$i = $$4355$$4$i;
     $$434912$i = $$$4349$i;
     label = 90;
    }
   }
   if (!$$4$lcssa$i) $$0197 = $246; else if ($$4349$lcssa$i >>> 0 < ((HEAP32[27158] | 0) - $246 | 0) >>> 0) {
    $347 = HEAP32[27160] | 0;
    if ($$4$lcssa$i >>> 0 < $347 >>> 0) _abort();
    $349 = $$4$lcssa$i + $246 | 0;
    if ($$4$lcssa$i >>> 0 >= $349 >>> 0) _abort();
    $352 = HEAP32[$$4$lcssa$i + 24 >> 2] | 0;
    $354 = HEAP32[$$4$lcssa$i + 12 >> 2] | 0;
    do if (($354 | 0) == ($$4$lcssa$i | 0)) {
     $365 = $$4$lcssa$i + 20 | 0;
     $366 = HEAP32[$365 >> 2] | 0;
     if (!$366) {
      $368 = $$4$lcssa$i + 16 | 0;
      $369 = HEAP32[$368 >> 2] | 0;
      if (!$369) {
       $$3370$i = 0;
       break;
      } else {
       $$1368$i = $369;
       $$1372$i = $368;
      }
     } else {
      $$1368$i = $366;
      $$1372$i = $365;
     }
     while (1) {
      $371 = $$1368$i + 20 | 0;
      $372 = HEAP32[$371 >> 2] | 0;
      if ($372 | 0) {
       $$1368$i = $372;
       $$1372$i = $371;
       continue;
      }
      $374 = $$1368$i + 16 | 0;
      $375 = HEAP32[$374 >> 2] | 0;
      if (!$375) break; else {
       $$1368$i = $375;
       $$1372$i = $374;
      }
     }
     if ($$1372$i >>> 0 < $347 >>> 0) _abort(); else {
      HEAP32[$$1372$i >> 2] = 0;
      $$3370$i = $$1368$i;
      break;
     }
    } else {
     $357 = HEAP32[$$4$lcssa$i + 8 >> 2] | 0;
     if ($357 >>> 0 < $347 >>> 0) _abort();
     $359 = $357 + 12 | 0;
     if ((HEAP32[$359 >> 2] | 0) != ($$4$lcssa$i | 0)) _abort();
     $362 = $354 + 8 | 0;
     if ((HEAP32[$362 >> 2] | 0) == ($$4$lcssa$i | 0)) {
      HEAP32[$359 >> 2] = $354;
      HEAP32[$362 >> 2] = $357;
      $$3370$i = $354;
      break;
     } else _abort();
    } while (0);
    do if (!$352) $470 = $247; else {
     $380 = HEAP32[$$4$lcssa$i + 28 >> 2] | 0;
     $381 = 108928 + ($380 << 2) | 0;
     if (($$4$lcssa$i | 0) == (HEAP32[$381 >> 2] | 0)) {
      HEAP32[$381 >> 2] = $$3370$i;
      if (!$$3370$i) {
       $386 = $247 & ~(1 << $380);
       HEAP32[27157] = $386;
       $470 = $386;
       break;
      }
     } else {
      if ($352 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
      $389 = $352 + 16 | 0;
      if ((HEAP32[$389 >> 2] | 0) == ($$4$lcssa$i | 0)) HEAP32[$389 >> 2] = $$3370$i; else HEAP32[$352 + 20 >> 2] = $$3370$i;
      if (!$$3370$i) {
       $470 = $247;
       break;
      }
     }
     $394 = HEAP32[27160] | 0;
     if ($$3370$i >>> 0 < $394 >>> 0) _abort();
     HEAP32[$$3370$i + 24 >> 2] = $352;
     $398 = HEAP32[$$4$lcssa$i + 16 >> 2] | 0;
     do if ($398 | 0) if ($398 >>> 0 < $394 >>> 0) _abort(); else {
      HEAP32[$$3370$i + 16 >> 2] = $398;
      HEAP32[$398 + 24 >> 2] = $$3370$i;
      break;
     } while (0);
     $404 = HEAP32[$$4$lcssa$i + 20 >> 2] | 0;
     if (!$404) $470 = $247; else if ($404 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
      HEAP32[$$3370$i + 20 >> 2] = $404;
      HEAP32[$404 + 24 >> 2] = $$3370$i;
      $470 = $247;
      break;
     }
    } while (0);
    do if ($$4349$lcssa$i >>> 0 < 16) {
     $411 = $$4349$lcssa$i + $246 | 0;
     HEAP32[$$4$lcssa$i + 4 >> 2] = $411 | 3;
     $415 = $$4$lcssa$i + $411 + 4 | 0;
     HEAP32[$415 >> 2] = HEAP32[$415 >> 2] | 1;
    } else {
     HEAP32[$$4$lcssa$i + 4 >> 2] = $246 | 3;
     HEAP32[$349 + 4 >> 2] = $$4349$lcssa$i | 1;
     HEAP32[$349 + $$4349$lcssa$i >> 2] = $$4349$lcssa$i;
     $423 = $$4349$lcssa$i >>> 3;
     if ($$4349$lcssa$i >>> 0 < 256) {
      $426 = 108664 + ($423 << 1 << 2) | 0;
      $427 = HEAP32[27156] | 0;
      $428 = 1 << $423;
      if (!($427 & $428)) {
       HEAP32[27156] = $427 | $428;
       $$0366$i = $426;
       $$pre$phi$i206Z2D = $426 + 8 | 0;
      } else {
       $432 = $426 + 8 | 0;
       $433 = HEAP32[$432 >> 2] | 0;
       if ($433 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
        $$0366$i = $433;
        $$pre$phi$i206Z2D = $432;
       }
      }
      HEAP32[$$pre$phi$i206Z2D >> 2] = $349;
      HEAP32[$$0366$i + 12 >> 2] = $349;
      HEAP32[$349 + 8 >> 2] = $$0366$i;
      HEAP32[$349 + 12 >> 2] = $426;
      break;
     }
     $439 = $$4349$lcssa$i >>> 8;
     if (!$439) $$0359$i = 0; else if ($$4349$lcssa$i >>> 0 > 16777215) $$0359$i = 31; else {
      $444 = ($439 + 1048320 | 0) >>> 16 & 8;
      $445 = $439 << $444;
      $448 = ($445 + 520192 | 0) >>> 16 & 4;
      $450 = $445 << $448;
      $453 = ($450 + 245760 | 0) >>> 16 & 2;
      $458 = 14 - ($448 | $444 | $453) + ($450 << $453 >>> 15) | 0;
      $$0359$i = $$4349$lcssa$i >>> ($458 + 7 | 0) & 1 | $458 << 1;
     }
     $464 = 108928 + ($$0359$i << 2) | 0;
     HEAP32[$349 + 28 >> 2] = $$0359$i;
     $466 = $349 + 16 | 0;
     HEAP32[$466 + 4 >> 2] = 0;
     HEAP32[$466 >> 2] = 0;
     $468 = 1 << $$0359$i;
     if (!($470 & $468)) {
      HEAP32[27157] = $470 | $468;
      HEAP32[$464 >> 2] = $349;
      HEAP32[$349 + 24 >> 2] = $464;
      HEAP32[$349 + 12 >> 2] = $349;
      HEAP32[$349 + 8 >> 2] = $349;
      break;
     }
     $$0342$i = $$4349$lcssa$i << (($$0359$i | 0) == 31 ? 0 : 25 - ($$0359$i >>> 1) | 0);
     $$0343$i = HEAP32[$464 >> 2] | 0;
     while (1) {
      if ((HEAP32[$$0343$i + 4 >> 2] & -8 | 0) == ($$4349$lcssa$i | 0)) {
       label = 148;
       break;
      }
      $487 = $$0343$i + 16 + ($$0342$i >>> 31 << 2) | 0;
      $489 = HEAP32[$487 >> 2] | 0;
      if (!$489) {
       label = 145;
       break;
      } else {
       $$0342$i = $$0342$i << 1;
       $$0343$i = $489;
      }
     }
     if ((label | 0) == 145) if ($487 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
      HEAP32[$487 >> 2] = $349;
      HEAP32[$349 + 24 >> 2] = $$0343$i;
      HEAP32[$349 + 12 >> 2] = $349;
      HEAP32[$349 + 8 >> 2] = $349;
      break;
     } else if ((label | 0) == 148) {
      $496 = $$0343$i + 8 | 0;
      $497 = HEAP32[$496 >> 2] | 0;
      $498 = HEAP32[27160] | 0;
      if ($497 >>> 0 >= $498 >>> 0 & $$0343$i >>> 0 >= $498 >>> 0) {
       HEAP32[$497 + 12 >> 2] = $349;
       HEAP32[$496 >> 2] = $349;
       HEAP32[$349 + 8 >> 2] = $497;
       HEAP32[$349 + 12 >> 2] = $$0343$i;
       HEAP32[$349 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } while (0);
    $$0 = $$4$lcssa$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $$0197 = $246;
  }
 } while (0);
 $506 = HEAP32[27158] | 0;
 if ($506 >>> 0 >= $$0197 >>> 0) {
  $508 = $506 - $$0197 | 0;
  $509 = HEAP32[27161] | 0;
  if ($508 >>> 0 > 15) {
   $511 = $509 + $$0197 | 0;
   HEAP32[27161] = $511;
   HEAP32[27158] = $508;
   HEAP32[$511 + 4 >> 2] = $508 | 1;
   HEAP32[$511 + $508 >> 2] = $508;
   HEAP32[$509 + 4 >> 2] = $$0197 | 3;
  } else {
   HEAP32[27158] = 0;
   HEAP32[27161] = 0;
   HEAP32[$509 + 4 >> 2] = $506 | 3;
   $520 = $509 + $506 + 4 | 0;
   HEAP32[$520 >> 2] = HEAP32[$520 >> 2] | 1;
  }
  $$0 = $509 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $524 = HEAP32[27159] | 0;
 if ($524 >>> 0 > $$0197 >>> 0) {
  $526 = $524 - $$0197 | 0;
  HEAP32[27159] = $526;
  $527 = HEAP32[27162] | 0;
  $528 = $527 + $$0197 | 0;
  HEAP32[27162] = $528;
  HEAP32[$528 + 4 >> 2] = $526 | 1;
  HEAP32[$527 + 4 >> 2] = $$0197 | 3;
  $$0 = $527 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP32[27274] | 0)) {
  HEAP32[27276] = 4096;
  HEAP32[27275] = 4096;
  HEAP32[27277] = -1;
  HEAP32[27278] = -1;
  HEAP32[27279] = 0;
  HEAP32[27267] = 0;
  $538 = $1 & -16 ^ 1431655768;
  HEAP32[$1 >> 2] = $538;
  HEAP32[27274] = $538;
  $542 = 4096;
 } else $542 = HEAP32[27276] | 0;
 $539 = $$0197 + 48 | 0;
 $540 = $$0197 + 47 | 0;
 $541 = $542 + $540 | 0;
 $543 = 0 - $542 | 0;
 $544 = $541 & $543;
 if ($544 >>> 0 <= $$0197 >>> 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $546 = HEAP32[27266] | 0;
 if ($546 | 0) {
  $548 = HEAP32[27264] | 0;
  $549 = $548 + $544 | 0;
  if ($549 >>> 0 <= $548 >>> 0 | $549 >>> 0 > $546 >>> 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 L255 : do if (!(HEAP32[27267] & 4)) {
  $555 = HEAP32[27162] | 0;
  L257 : do if (!$555) label = 172; else {
   $$0$i17$i = 109072;
   while (1) {
    $557 = HEAP32[$$0$i17$i >> 2] | 0;
    if ($557 >>> 0 <= $555 >>> 0) {
     $559 = $$0$i17$i + 4 | 0;
     if (($557 + (HEAP32[$559 >> 2] | 0) | 0) >>> 0 > $555 >>> 0) break;
    }
    $564 = HEAP32[$$0$i17$i + 8 >> 2] | 0;
    if (!$564) {
     label = 172;
     break L257;
    } else $$0$i17$i = $564;
   }
   $589 = $541 - $524 & $543;
   if ($589 >>> 0 < 2147483647) {
    $591 = _sbrk($589 | 0) | 0;
    if (($591 | 0) == ((HEAP32[$$0$i17$i >> 2] | 0) + (HEAP32[$559 >> 2] | 0) | 0)) {
     if (($591 | 0) != (-1 | 0)) {
      $$723947$i = $589;
      $$748$i = $591;
      label = 190;
      break L255;
     }
    } else {
     $$2247$ph$i = $591;
     $$2253$ph$i = $589;
     label = 180;
    }
   }
  } while (0);
  do if ((label | 0) == 172) {
   $566 = _sbrk(0) | 0;
   if (($566 | 0) != (-1 | 0)) {
    $568 = $566;
    $569 = HEAP32[27275] | 0;
    $570 = $569 + -1 | 0;
    $$$i = (($570 & $568 | 0) == 0 ? 0 : ($570 + $568 & 0 - $569) - $568 | 0) + $544 | 0;
    $578 = HEAP32[27264] | 0;
    $579 = $$$i + $578 | 0;
    if ($$$i >>> 0 > $$0197 >>> 0 & $$$i >>> 0 < 2147483647) {
     $582 = HEAP32[27266] | 0;
     if ($582 | 0) if ($579 >>> 0 <= $578 >>> 0 | $579 >>> 0 > $582 >>> 0) break;
     $586 = _sbrk($$$i | 0) | 0;
     if (($586 | 0) == ($566 | 0)) {
      $$723947$i = $$$i;
      $$748$i = $566;
      label = 190;
      break L255;
     } else {
      $$2247$ph$i = $586;
      $$2253$ph$i = $$$i;
      label = 180;
     }
    }
   }
  } while (0);
  L274 : do if ((label | 0) == 180) {
   $597 = 0 - $$2253$ph$i | 0;
   do if ($539 >>> 0 > $$2253$ph$i >>> 0 & ($$2253$ph$i >>> 0 < 2147483647 & ($$2247$ph$i | 0) != (-1 | 0))) {
    $601 = HEAP32[27276] | 0;
    $605 = $540 - $$2253$ph$i + $601 & 0 - $601;
    if ($605 >>> 0 < 2147483647) if ((_sbrk($605 | 0) | 0) == (-1 | 0)) {
     _sbrk($597 | 0) | 0;
     break L274;
    } else {
     $$5256$i = $605 + $$2253$ph$i | 0;
     break;
    } else $$5256$i = $$2253$ph$i;
   } else $$5256$i = $$2253$ph$i; while (0);
   if (($$2247$ph$i | 0) != (-1 | 0)) {
    $$723947$i = $$5256$i;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L255;
   }
  } while (0);
  HEAP32[27267] = HEAP32[27267] | 4;
  label = 187;
 } else label = 187; while (0);
 if ((label | 0) == 187) if ($544 >>> 0 < 2147483647) {
  $614 = _sbrk($544 | 0) | 0;
  $615 = _sbrk(0) | 0;
  if ($614 >>> 0 < $615 >>> 0 & (($614 | 0) != (-1 | 0) & ($615 | 0) != (-1 | 0))) {
   $621 = $615 - $614 | 0;
   if ($621 >>> 0 > ($$0197 + 40 | 0) >>> 0) {
    $$723947$i = $621;
    $$748$i = $614;
    label = 190;
   }
  }
 }
 if ((label | 0) == 190) {
  $624 = (HEAP32[27264] | 0) + $$723947$i | 0;
  HEAP32[27264] = $624;
  if ($624 >>> 0 > (HEAP32[27265] | 0) >>> 0) HEAP32[27265] = $624;
  $627 = HEAP32[27162] | 0;
  do if (!$627) {
   $629 = HEAP32[27160] | 0;
   if (($629 | 0) == 0 | $$748$i >>> 0 < $629 >>> 0) HEAP32[27160] = $$748$i;
   HEAP32[27268] = $$748$i;
   HEAP32[27269] = $$723947$i;
   HEAP32[27271] = 0;
   HEAP32[27165] = HEAP32[27274];
   HEAP32[27164] = -1;
   $$01$i$i = 0;
   do {
    $634 = 108664 + ($$01$i$i << 1 << 2) | 0;
    HEAP32[$634 + 12 >> 2] = $634;
    HEAP32[$634 + 8 >> 2] = $634;
    $$01$i$i = $$01$i$i + 1 | 0;
   } while (($$01$i$i | 0) != 32);
   $640 = $$748$i + 8 | 0;
   $645 = ($640 & 7 | 0) == 0 ? 0 : 0 - $640 & 7;
   $646 = $$748$i + $645 | 0;
   $647 = $$723947$i + -40 - $645 | 0;
   HEAP32[27162] = $646;
   HEAP32[27159] = $647;
   HEAP32[$646 + 4 >> 2] = $647 | 1;
   HEAP32[$646 + $647 + 4 >> 2] = 40;
   HEAP32[27163] = HEAP32[27278];
  } else {
   $$024370$i = 109072;
   while (1) {
    $653 = HEAP32[$$024370$i >> 2] | 0;
    $654 = $$024370$i + 4 | 0;
    $655 = HEAP32[$654 >> 2] | 0;
    if (($$748$i | 0) == ($653 + $655 | 0)) {
     label = 200;
     break;
    }
    $659 = HEAP32[$$024370$i + 8 >> 2] | 0;
    if (!$659) break; else $$024370$i = $659;
   }
   if ((label | 0) == 200) if (!(HEAP32[$$024370$i + 12 >> 2] & 8)) if ($627 >>> 0 < $$748$i >>> 0 & $627 >>> 0 >= $653 >>> 0) {
    HEAP32[$654 >> 2] = $655 + $$723947$i;
    $670 = $627 + 8 | 0;
    $675 = ($670 & 7 | 0) == 0 ? 0 : 0 - $670 & 7;
    $676 = $627 + $675 | 0;
    $678 = $$723947$i - $675 + (HEAP32[27159] | 0) | 0;
    HEAP32[27162] = $676;
    HEAP32[27159] = $678;
    HEAP32[$676 + 4 >> 2] = $678 | 1;
    HEAP32[$676 + $678 + 4 >> 2] = 40;
    HEAP32[27163] = HEAP32[27278];
    break;
   }
   $684 = HEAP32[27160] | 0;
   if ($$748$i >>> 0 < $684 >>> 0) {
    HEAP32[27160] = $$748$i;
    $749 = $$748$i;
   } else $749 = $684;
   $686 = $$748$i + $$723947$i | 0;
   $$124469$i = 109072;
   while (1) {
    if ((HEAP32[$$124469$i >> 2] | 0) == ($686 | 0)) {
     label = 208;
     break;
    }
    $690 = HEAP32[$$124469$i + 8 >> 2] | 0;
    if (!$690) {
     $$0$i$i$i = 109072;
     break;
    } else $$124469$i = $690;
   }
   if ((label | 0) == 208) if (!(HEAP32[$$124469$i + 12 >> 2] & 8)) {
    HEAP32[$$124469$i >> 2] = $$748$i;
    $696 = $$124469$i + 4 | 0;
    HEAP32[$696 >> 2] = (HEAP32[$696 >> 2] | 0) + $$723947$i;
    $700 = $$748$i + 8 | 0;
    $706 = $$748$i + (($700 & 7 | 0) == 0 ? 0 : 0 - $700 & 7) | 0;
    $708 = $686 + 8 | 0;
    $714 = $686 + (($708 & 7 | 0) == 0 ? 0 : 0 - $708 & 7) | 0;
    $718 = $706 + $$0197 | 0;
    $719 = $714 - $706 - $$0197 | 0;
    HEAP32[$706 + 4 >> 2] = $$0197 | 3;
    do if (($714 | 0) == ($627 | 0)) {
     $724 = (HEAP32[27159] | 0) + $719 | 0;
     HEAP32[27159] = $724;
     HEAP32[27162] = $718;
     HEAP32[$718 + 4 >> 2] = $724 | 1;
    } else {
     if (($714 | 0) == (HEAP32[27161] | 0)) {
      $730 = (HEAP32[27158] | 0) + $719 | 0;
      HEAP32[27158] = $730;
      HEAP32[27161] = $718;
      HEAP32[$718 + 4 >> 2] = $730 | 1;
      HEAP32[$718 + $730 >> 2] = $730;
      break;
     }
     $735 = HEAP32[$714 + 4 >> 2] | 0;
     if (($735 & 3 | 0) == 1) {
      $738 = $735 & -8;
      $739 = $735 >>> 3;
      L326 : do if ($735 >>> 0 < 256) {
       $742 = HEAP32[$714 + 8 >> 2] | 0;
       $744 = HEAP32[$714 + 12 >> 2] | 0;
       $746 = 108664 + ($739 << 1 << 2) | 0;
       do if (($742 | 0) != ($746 | 0)) {
        if ($742 >>> 0 < $749 >>> 0) _abort();
        if ((HEAP32[$742 + 12 >> 2] | 0) == ($714 | 0)) break;
        _abort();
       } while (0);
       if (($744 | 0) == ($742 | 0)) {
        HEAP32[27156] = HEAP32[27156] & ~(1 << $739);
        break;
       }
       do if (($744 | 0) == ($746 | 0)) $$pre$phi10$i$iZ2D = $744 + 8 | 0; else {
        if ($744 >>> 0 < $749 >>> 0) _abort();
        $760 = $744 + 8 | 0;
        if ((HEAP32[$760 >> 2] | 0) == ($714 | 0)) {
         $$pre$phi10$i$iZ2D = $760;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$742 + 12 >> 2] = $744;
       HEAP32[$$pre$phi10$i$iZ2D >> 2] = $742;
      } else {
       $765 = HEAP32[$714 + 24 >> 2] | 0;
       $767 = HEAP32[$714 + 12 >> 2] | 0;
       do if (($767 | 0) == ($714 | 0)) {
        $778 = $714 + 16 | 0;
        $779 = $778 + 4 | 0;
        $780 = HEAP32[$779 >> 2] | 0;
        if (!$780) {
         $782 = HEAP32[$778 >> 2] | 0;
         if (!$782) {
          $$3$i$i = 0;
          break;
         } else {
          $$1290$i$i = $782;
          $$1292$i$i = $778;
         }
        } else {
         $$1290$i$i = $780;
         $$1292$i$i = $779;
        }
        while (1) {
         $784 = $$1290$i$i + 20 | 0;
         $785 = HEAP32[$784 >> 2] | 0;
         if ($785 | 0) {
          $$1290$i$i = $785;
          $$1292$i$i = $784;
          continue;
         }
         $787 = $$1290$i$i + 16 | 0;
         $788 = HEAP32[$787 >> 2] | 0;
         if (!$788) break; else {
          $$1290$i$i = $788;
          $$1292$i$i = $787;
         }
        }
        if ($$1292$i$i >>> 0 < $749 >>> 0) _abort(); else {
         HEAP32[$$1292$i$i >> 2] = 0;
         $$3$i$i = $$1290$i$i;
         break;
        }
       } else {
        $770 = HEAP32[$714 + 8 >> 2] | 0;
        if ($770 >>> 0 < $749 >>> 0) _abort();
        $772 = $770 + 12 | 0;
        if ((HEAP32[$772 >> 2] | 0) != ($714 | 0)) _abort();
        $775 = $767 + 8 | 0;
        if ((HEAP32[$775 >> 2] | 0) == ($714 | 0)) {
         HEAP32[$772 >> 2] = $767;
         HEAP32[$775 >> 2] = $770;
         $$3$i$i = $767;
         break;
        } else _abort();
       } while (0);
       if (!$765) break;
       $793 = HEAP32[$714 + 28 >> 2] | 0;
       $794 = 108928 + ($793 << 2) | 0;
       do if (($714 | 0) == (HEAP32[$794 >> 2] | 0)) {
        HEAP32[$794 >> 2] = $$3$i$i;
        if ($$3$i$i | 0) break;
        HEAP32[27157] = HEAP32[27157] & ~(1 << $793);
        break L326;
       } else {
        if ($765 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
        $803 = $765 + 16 | 0;
        if ((HEAP32[$803 >> 2] | 0) == ($714 | 0)) HEAP32[$803 >> 2] = $$3$i$i; else HEAP32[$765 + 20 >> 2] = $$3$i$i;
        if (!$$3$i$i) break L326;
       } while (0);
       $808 = HEAP32[27160] | 0;
       if ($$3$i$i >>> 0 < $808 >>> 0) _abort();
       HEAP32[$$3$i$i + 24 >> 2] = $765;
       $811 = $714 + 16 | 0;
       $812 = HEAP32[$811 >> 2] | 0;
       do if ($812 | 0) if ($812 >>> 0 < $808 >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 16 >> 2] = $812;
        HEAP32[$812 + 24 >> 2] = $$3$i$i;
        break;
       } while (0);
       $818 = HEAP32[$811 + 4 >> 2] | 0;
       if (!$818) break;
       if ($818 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 20 >> 2] = $818;
        HEAP32[$818 + 24 >> 2] = $$3$i$i;
        break;
       }
      } while (0);
      $$0$i18$i = $714 + $738 | 0;
      $$0286$i$i = $738 + $719 | 0;
     } else {
      $$0$i18$i = $714;
      $$0286$i$i = $719;
     }
     $826 = $$0$i18$i + 4 | 0;
     HEAP32[$826 >> 2] = HEAP32[$826 >> 2] & -2;
     HEAP32[$718 + 4 >> 2] = $$0286$i$i | 1;
     HEAP32[$718 + $$0286$i$i >> 2] = $$0286$i$i;
     $832 = $$0286$i$i >>> 3;
     if ($$0286$i$i >>> 0 < 256) {
      $835 = 108664 + ($832 << 1 << 2) | 0;
      $836 = HEAP32[27156] | 0;
      $837 = 1 << $832;
      do if (!($836 & $837)) {
       HEAP32[27156] = $836 | $837;
       $$0294$i$i = $835;
       $$pre$phi$i20$iZ2D = $835 + 8 | 0;
      } else {
       $841 = $835 + 8 | 0;
       $842 = HEAP32[$841 >> 2] | 0;
       if ($842 >>> 0 >= (HEAP32[27160] | 0) >>> 0) {
        $$0294$i$i = $842;
        $$pre$phi$i20$iZ2D = $841;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i20$iZ2D >> 2] = $718;
      HEAP32[$$0294$i$i + 12 >> 2] = $718;
      HEAP32[$718 + 8 >> 2] = $$0294$i$i;
      HEAP32[$718 + 12 >> 2] = $835;
      break;
     }
     $848 = $$0286$i$i >>> 8;
     do if (!$848) $$0295$i$i = 0; else {
      if ($$0286$i$i >>> 0 > 16777215) {
       $$0295$i$i = 31;
       break;
      }
      $853 = ($848 + 1048320 | 0) >>> 16 & 8;
      $854 = $848 << $853;
      $857 = ($854 + 520192 | 0) >>> 16 & 4;
      $859 = $854 << $857;
      $862 = ($859 + 245760 | 0) >>> 16 & 2;
      $867 = 14 - ($857 | $853 | $862) + ($859 << $862 >>> 15) | 0;
      $$0295$i$i = $$0286$i$i >>> ($867 + 7 | 0) & 1 | $867 << 1;
     } while (0);
     $873 = 108928 + ($$0295$i$i << 2) | 0;
     HEAP32[$718 + 28 >> 2] = $$0295$i$i;
     $875 = $718 + 16 | 0;
     HEAP32[$875 + 4 >> 2] = 0;
     HEAP32[$875 >> 2] = 0;
     $877 = HEAP32[27157] | 0;
     $878 = 1 << $$0295$i$i;
     if (!($877 & $878)) {
      HEAP32[27157] = $877 | $878;
      HEAP32[$873 >> 2] = $718;
      HEAP32[$718 + 24 >> 2] = $873;
      HEAP32[$718 + 12 >> 2] = $718;
      HEAP32[$718 + 8 >> 2] = $718;
      break;
     }
     $$0287$i$i = $$0286$i$i << (($$0295$i$i | 0) == 31 ? 0 : 25 - ($$0295$i$i >>> 1) | 0);
     $$0288$i$i = HEAP32[$873 >> 2] | 0;
     while (1) {
      if ((HEAP32[$$0288$i$i + 4 >> 2] & -8 | 0) == ($$0286$i$i | 0)) {
       label = 278;
       break;
      }
      $896 = $$0288$i$i + 16 + ($$0287$i$i >>> 31 << 2) | 0;
      $898 = HEAP32[$896 >> 2] | 0;
      if (!$898) {
       label = 275;
       break;
      } else {
       $$0287$i$i = $$0287$i$i << 1;
       $$0288$i$i = $898;
      }
     }
     if ((label | 0) == 275) if ($896 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
      HEAP32[$896 >> 2] = $718;
      HEAP32[$718 + 24 >> 2] = $$0288$i$i;
      HEAP32[$718 + 12 >> 2] = $718;
      HEAP32[$718 + 8 >> 2] = $718;
      break;
     } else if ((label | 0) == 278) {
      $905 = $$0288$i$i + 8 | 0;
      $906 = HEAP32[$905 >> 2] | 0;
      $907 = HEAP32[27160] | 0;
      if ($906 >>> 0 >= $907 >>> 0 & $$0288$i$i >>> 0 >= $907 >>> 0) {
       HEAP32[$906 + 12 >> 2] = $718;
       HEAP32[$905 >> 2] = $718;
       HEAP32[$718 + 8 >> 2] = $906;
       HEAP32[$718 + 12 >> 2] = $$0288$i$i;
       HEAP32[$718 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } while (0);
    $$0 = $706 + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $$0$i$i$i = 109072;
   while (1) {
    $914 = HEAP32[$$0$i$i$i >> 2] | 0;
    if ($914 >>> 0 <= $627 >>> 0) {
     $918 = $914 + (HEAP32[$$0$i$i$i + 4 >> 2] | 0) | 0;
     if ($918 >>> 0 > $627 >>> 0) break;
    }
    $$0$i$i$i = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
   }
   $922 = $918 + -47 | 0;
   $924 = $922 + 8 | 0;
   $930 = $922 + (($924 & 7 | 0) == 0 ? 0 : 0 - $924 & 7) | 0;
   $931 = $627 + 16 | 0;
   $933 = $930 >>> 0 < $931 >>> 0 ? $627 : $930;
   $934 = $933 + 8 | 0;
   $938 = $$748$i + 8 | 0;
   $943 = ($938 & 7 | 0) == 0 ? 0 : 0 - $938 & 7;
   $944 = $$748$i + $943 | 0;
   $945 = $$723947$i + -40 - $943 | 0;
   HEAP32[27162] = $944;
   HEAP32[27159] = $945;
   HEAP32[$944 + 4 >> 2] = $945 | 1;
   HEAP32[$944 + $945 + 4 >> 2] = 40;
   HEAP32[27163] = HEAP32[27278];
   $951 = $933 + 4 | 0;
   HEAP32[$951 >> 2] = 27;
   HEAP32[$934 >> 2] = HEAP32[27268];
   HEAP32[$934 + 4 >> 2] = HEAP32[27269];
   HEAP32[$934 + 8 >> 2] = HEAP32[27270];
   HEAP32[$934 + 12 >> 2] = HEAP32[27271];
   HEAP32[27268] = $$748$i;
   HEAP32[27269] = $$723947$i;
   HEAP32[27271] = 0;
   HEAP32[27270] = $934;
   $$0$i$i = $933 + 24 | 0;
   do {
    $$0$i$i = $$0$i$i + 4 | 0;
    HEAP32[$$0$i$i >> 2] = 7;
   } while (($$0$i$i + 4 | 0) >>> 0 < $918 >>> 0);
   if (($933 | 0) != ($627 | 0)) {
    $958 = $933 - $627 | 0;
    HEAP32[$951 >> 2] = HEAP32[$951 >> 2] & -2;
    HEAP32[$627 + 4 >> 2] = $958 | 1;
    HEAP32[$933 >> 2] = $958;
    $963 = $958 >>> 3;
    if ($958 >>> 0 < 256) {
     $966 = 108664 + ($963 << 1 << 2) | 0;
     $967 = HEAP32[27156] | 0;
     $968 = 1 << $963;
     if (!($967 & $968)) {
      HEAP32[27156] = $967 | $968;
      $$0211$i$i = $966;
      $$pre$phi$i$iZ2D = $966 + 8 | 0;
     } else {
      $972 = $966 + 8 | 0;
      $973 = HEAP32[$972 >> 2] | 0;
      if ($973 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
       $$0211$i$i = $973;
       $$pre$phi$i$iZ2D = $972;
      }
     }
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $627;
     HEAP32[$$0211$i$i + 12 >> 2] = $627;
     HEAP32[$627 + 8 >> 2] = $$0211$i$i;
     HEAP32[$627 + 12 >> 2] = $966;
     break;
    }
    $979 = $958 >>> 8;
    if (!$979) $$0212$i$i = 0; else if ($958 >>> 0 > 16777215) $$0212$i$i = 31; else {
     $984 = ($979 + 1048320 | 0) >>> 16 & 8;
     $985 = $979 << $984;
     $988 = ($985 + 520192 | 0) >>> 16 & 4;
     $990 = $985 << $988;
     $993 = ($990 + 245760 | 0) >>> 16 & 2;
     $998 = 14 - ($988 | $984 | $993) + ($990 << $993 >>> 15) | 0;
     $$0212$i$i = $958 >>> ($998 + 7 | 0) & 1 | $998 << 1;
    }
    $1004 = 108928 + ($$0212$i$i << 2) | 0;
    HEAP32[$627 + 28 >> 2] = $$0212$i$i;
    HEAP32[$627 + 20 >> 2] = 0;
    HEAP32[$931 >> 2] = 0;
    $1007 = HEAP32[27157] | 0;
    $1008 = 1 << $$0212$i$i;
    if (!($1007 & $1008)) {
     HEAP32[27157] = $1007 | $1008;
     HEAP32[$1004 >> 2] = $627;
     HEAP32[$627 + 24 >> 2] = $1004;
     HEAP32[$627 + 12 >> 2] = $627;
     HEAP32[$627 + 8 >> 2] = $627;
     break;
    }
    $$0206$i$i = $958 << (($$0212$i$i | 0) == 31 ? 0 : 25 - ($$0212$i$i >>> 1) | 0);
    $$0207$i$i = HEAP32[$1004 >> 2] | 0;
    while (1) {
     if ((HEAP32[$$0207$i$i + 4 >> 2] & -8 | 0) == ($958 | 0)) {
      label = 304;
      break;
     }
     $1026 = $$0207$i$i + 16 + ($$0206$i$i >>> 31 << 2) | 0;
     $1028 = HEAP32[$1026 >> 2] | 0;
     if (!$1028) {
      label = 301;
      break;
     } else {
      $$0206$i$i = $$0206$i$i << 1;
      $$0207$i$i = $1028;
     }
    }
    if ((label | 0) == 301) if ($1026 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
     HEAP32[$1026 >> 2] = $627;
     HEAP32[$627 + 24 >> 2] = $$0207$i$i;
     HEAP32[$627 + 12 >> 2] = $627;
     HEAP32[$627 + 8 >> 2] = $627;
     break;
    } else if ((label | 0) == 304) {
     $1035 = $$0207$i$i + 8 | 0;
     $1036 = HEAP32[$1035 >> 2] | 0;
     $1037 = HEAP32[27160] | 0;
     if ($1036 >>> 0 >= $1037 >>> 0 & $$0207$i$i >>> 0 >= $1037 >>> 0) {
      HEAP32[$1036 + 12 >> 2] = $627;
      HEAP32[$1035 >> 2] = $627;
      HEAP32[$627 + 8 >> 2] = $1036;
      HEAP32[$627 + 12 >> 2] = $$0207$i$i;
      HEAP32[$627 + 24 >> 2] = 0;
      break;
     } else _abort();
    }
   }
  } while (0);
  $1045 = HEAP32[27159] | 0;
  if ($1045 >>> 0 > $$0197 >>> 0) {
   $1047 = $1045 - $$0197 | 0;
   HEAP32[27159] = $1047;
   $1048 = HEAP32[27162] | 0;
   $1049 = $1048 + $$0197 | 0;
   HEAP32[27162] = $1049;
   HEAP32[$1049 + 4 >> 2] = $1047 | 1;
   HEAP32[$1048 + 4 >> 2] = $$0197 | 3;
   $$0 = $1048 + 8 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL4llexP8LexStateP7SemInfo($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$053$i = 0, $$1$i = 0, $$2 = 0, $$be$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i101$iZ2D = 0, $$pre$phi$i114Z2D = 0, $$pre$phi$i123Z2D = 0, $$pre$phi$i131Z2D = 0, $$pre$phi$i139Z2D = 0, $$pre$phi$i61$iZ2D = 0, $$pre$phi$i69$iZ2D = 0, $$pre$phi$i77$iZ2D = 0, $$pre$phi$i85$iZ2D = 0, $$pre$phi$i93$iZ2D = 0, $100 = 0, $105 = 0, $106 = 0, $107 = 0, $110 = 0, $111 = 0, $112 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $142 = 0, $144 = 0, $145 = 0, $148 = 0, $149 = 0, $150 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $160 = 0, $161 = 0, $164 = 0, $166 = 0, $170 = 0, $171 = 0, $173 = 0, $178 = 0, $179 = 0, $181 = 0, $183 = 0, $184 = 0, $185 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $195 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $200 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $208 = 0, $209 = 0, $21 = 0, $212 = 0, $213 = 0, $214 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $224 = 0, $225 = 0, $230 = 0, $231 = 0, $233 = 0, $235 = 0, $239 = 0, $241 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $248 = 0, $249 = 0, $25 = 0, $254 = 0, $255 = 0, $257 = 0, $259 = 0, $26 = 0, $263 = 0, $266 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $273 = 0, $274 = 0, $275 = 0, $280 = 0, $283 = 0, $285 = 0, $286 = 0, $289 = 0, $290 = 0, $291 = 0, $296 = 0, $3 = 0, $300 = 0, $301 = 0, $302 = 0, $304 = 0, $305 = 0, $310 = 0, $311 = 0, $313 = 0, $315 = 0, $319 = 0, $32 = 0, $322 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $329 = 0, $330 = 0, $335 = 0, $336 = 0, $338 = 0, $34 = 0, $340 = 0, $344 = 0, $346 = 0, $348 = 0, $349 = 0, $350 = 0, $353 = 0, $354 = 0, $355 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $365 = 0, $366 = 0, $371 = 0, $372 = 0, $374 = 0, $376 = 0, $380 = 0, $383 = 0, $385 = 0, $386 = 0, $387 = 0, $390 = 0, $391 = 0, $392 = 0, $397 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $403 = 0, $404 = 0, $407 = 0, $409 = 0, $41 = 0, $413 = 0, $414 = 0, $416 = 0, $42 = 0, $421 = 0, $423 = 0, $425 = 0, $426 = 0, $427 = 0, $430 = 0, $431 = 0, $432 = 0, $437 = 0, $438 = 0, $445 = 0, $446 = 0, $45 = 0, $451 = 0, $452 = 0, $456 = 0, $46 = 0, $462 = 0, $463 = 0, $464 = 0, $466 = 0, $467 = 0, $47 = 0, $470 = 0, $472 = 0, $476 = 0, $477 = 0, $479 = 0, $484 = 0, $486 = 0, $488 = 0, $489 = 0, $490 = 0, $493 = 0, $494 = 0, $495 = 0, $500 = 0, $502 = 0, $503 = 0, $504 = 0, $506 = 0, $507 = 0, $510 = 0, $512 = 0, $516 = 0, $517 = 0, $519 = 0, $52 = 0, $524 = 0, $527 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $534 = 0, $535 = 0, $536 = 0, $541 = 0, $543 = 0, $544 = 0, $545 = 0, $547 = 0, $548 = 0, $551 = 0, $553 = 0, $557 = 0, $558 = 0, $56 = 0, $560 = 0, $565 = 0, $568 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $575 = 0, $576 = 0, $577 = 0, $582 = 0, $585 = 0, $586 = 0, $589 = 0, $590 = 0, $591 = 0, $596 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $607 = 0, $608 = 0, $61 = 0, $613 = 0, $614 = 0, $616 = 0, $618 = 0, $62 = 0, $622 = 0, $624 = 0, $626 = 0, $628 = 0, $629 = 0, $630 = 0, $633 = 0, $634 = 0, $635 = 0, $640 = 0, $644 = 0, $648 = 0, $649 = 0, $654 = 0, $655 = 0, $659 = 0, $666 = 0, $67 = 0, $670 = 0, $671 = 0, $674 = 0, $675 = 0, $676 = 0, $681 = 0, $69 = 0, $7 = 0, $70 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $92 = 0, $94 = 0, $95 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer17 = 0, $vararg_buffer22 = 0, $vararg_buffer27 = 0, $vararg_buffer3 = 0, $vararg_buffer32 = 0, $vararg_buffer37 = 0, $vararg_buffer42 = 0, $vararg_buffer47 = 0, $vararg_buffer52 = 0, $vararg_buffer57 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 $vararg_buffer57 = sp + 184 | 0;
 $vararg_buffer52 = sp + 168 | 0;
 $vararg_buffer47 = sp + 152 | 0;
 $vararg_buffer42 = sp + 136 | 0;
 $vararg_buffer37 = sp + 120 | 0;
 $vararg_buffer32 = sp + 104 | 0;
 $vararg_buffer27 = sp + 88 | 0;
 $vararg_buffer22 = sp + 72 | 0;
 $vararg_buffer17 = sp + 56 | 0;
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 200 | 0;
 $3 = $0 + 40 | 0;
 HEAP32[(HEAP32[$3 >> 2] | 0) + 4 >> 2] = 0;
 $6 = $0 + 36 | 0;
 L1 : while (1) {
  $7 = HEAP32[$0 >> 2] | 0;
  L3 : while (1) {
   switch ($7 | 0) {
   case 91:
    {
     label = 21;
     break L1;
     break;
    }
   case 61:
    {
     break L1;
     break;
    }
   case 60:
    {
     label = 33;
     break L1;
     break;
    }
   case 62:
    {
     label = 41;
     break L1;
     break;
    }
   case 126:
    {
     label = 49;
     break L1;
     break;
    }
   case 39:
   case 34:
    {
     label = 57;
     break L1;
     break;
    }
   case 46:
    {
     label = 161;
     break L1;
     break;
    }
   case -1:
    {
     $$2 = 287;
     label = 230;
     break L1;
     break;
    }
   case 13:
   case 10:
    {
     label = 4;
     break L3;
     break;
    }
   case 45:
    {
     break L3;
     break;
    }
   default:
    {}
   }
   if (!(_isspace($7) | 0)) {
    label = 204;
    break L1;
   }
   $585 = HEAP32[$6 >> 2] | 0;
   $586 = HEAP32[$585 >> 2] | 0;
   HEAP32[$585 >> 2] = $586 + -1;
   $589 = HEAP32[$6 >> 2] | 0;
   if (!$586) $596 = __Z9luaZ_fillP3Zio($589) | 0; else {
    $590 = $589 + 4 | 0;
    $591 = HEAP32[$590 >> 2] | 0;
    HEAP32[$590 >> 2] = $591 + 1;
    $596 = HEAPU8[$591 >> 0] | 0;
   }
   HEAP32[$0 >> 2] = $596;
   $7 = $596;
  }
  if ((label | 0) == 4) {
   label = 0;
   __ZL13inclinenumberP8LexState($0);
   continue;
  }
  $8 = HEAP32[$6 >> 2] | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = $9 + -1;
  $12 = HEAP32[$6 >> 2] | 0;
  if (!$9) $19 = __Z9luaZ_fillP3Zio($12) | 0; else {
   $13 = $12 + 4 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   HEAP32[$13 >> 2] = $14 + 1;
   $19 = HEAPU8[$14 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $19;
  if (($19 | 0) != 45) {
   $$2 = 45;
   label = 230;
   break;
  }
  $21 = HEAP32[$6 >> 2] | 0;
  $22 = HEAP32[$21 >> 2] | 0;
  HEAP32[$21 >> 2] = $22 + -1;
  $25 = HEAP32[$6 >> 2] | 0;
  if (!$22) $32 = __Z9luaZ_fillP3Zio($25) | 0; else {
   $26 = $25 + 4 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   HEAP32[$26 >> 2] = $27 + 1;
   $32 = HEAPU8[$27 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $32;
  do if (($32 | 0) == 91) {
   $34 = __ZL8skip_sepP8LexState($0) | 0;
   HEAP32[(HEAP32[$3 >> 2] | 0) + 4 >> 2] = 0;
   if (($34 | 0) > -1) {
    __ZL16read_long_stringP8LexStateP7SemInfoi($0, 0, $34);
    HEAP32[(HEAP32[$3 >> 2] | 0) + 4 >> 2] = 0;
    continue L1;
   } else {
    $40 = HEAP32[$0 >> 2] | 0;
    break;
   }
  } else $40 = $32; while (0);
  while (1) {
   switch ($40 | 0) {
   case -1:
   case 13:
   case 10:
    {
     continue L1;
     break;
    }
   default:
    {}
   }
   $41 = HEAP32[$6 >> 2] | 0;
   $42 = HEAP32[$41 >> 2] | 0;
   HEAP32[$41 >> 2] = $42 + -1;
   $45 = HEAP32[$6 >> 2] | 0;
   if (!$42) $52 = __Z9luaZ_fillP3Zio($45) | 0; else {
    $46 = $45 + 4 | 0;
    $47 = HEAP32[$46 >> 2] | 0;
    HEAP32[$46 >> 2] = $47 + 1;
    $52 = HEAPU8[$47 >> 0] | 0;
   }
   HEAP32[$0 >> 2] = $52;
   $40 = $52;
  }
 }
 do if ((label | 0) == 21) {
  $53 = __ZL8skip_sepP8LexState($0) | 0;
  if (($53 | 0) > -1) {
   __ZL16read_long_stringP8LexStateP7SemInfoi($0, $1, $53);
   $$2 = 286;
   STACKTOP = sp;
   return $$2 | 0;
  }
  if (($53 | 0) == -1) {
   $$2 = 91;
   STACKTOP = sp;
   return $$2 | 0;
  } else {
   __Z13luaX_lexerrorP8LexStatePKci($0, 90003, 286);
   break;
  }
 } else if ((label | 0) == 33) {
  $81 = HEAP32[$6 >> 2] | 0;
  $82 = HEAP32[$81 >> 2] | 0;
  HEAP32[$81 >> 2] = $82 + -1;
  $85 = HEAP32[$6 >> 2] | 0;
  if (!$82) $92 = __Z9luaZ_fillP3Zio($85) | 0; else {
   $86 = $85 + 4 | 0;
   $87 = HEAP32[$86 >> 2] | 0;
   HEAP32[$86 >> 2] = $87 + 1;
   $92 = HEAPU8[$87 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $92;
  if (($92 | 0) != 61) {
   $$2 = 60;
   STACKTOP = sp;
   return $$2 | 0;
  }
  $94 = HEAP32[$6 >> 2] | 0;
  $95 = HEAP32[$94 >> 2] | 0;
  HEAP32[$94 >> 2] = $95 + -1;
  $98 = HEAP32[$6 >> 2] | 0;
  if (!$95) $105 = __Z9luaZ_fillP3Zio($98) | 0; else {
   $99 = $98 + 4 | 0;
   $100 = HEAP32[$99 >> 2] | 0;
   HEAP32[$99 >> 2] = $100 + 1;
   $105 = HEAPU8[$100 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $105;
  $$2 = 282;
  STACKTOP = sp;
  return $$2 | 0;
 } else if ((label | 0) == 41) {
  $106 = HEAP32[$6 >> 2] | 0;
  $107 = HEAP32[$106 >> 2] | 0;
  HEAP32[$106 >> 2] = $107 + -1;
  $110 = HEAP32[$6 >> 2] | 0;
  if (!$107) $117 = __Z9luaZ_fillP3Zio($110) | 0; else {
   $111 = $110 + 4 | 0;
   $112 = HEAP32[$111 >> 2] | 0;
   HEAP32[$111 >> 2] = $112 + 1;
   $117 = HEAPU8[$112 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $117;
  if (($117 | 0) != 61) {
   $$2 = 62;
   STACKTOP = sp;
   return $$2 | 0;
  }
  $119 = HEAP32[$6 >> 2] | 0;
  $120 = HEAP32[$119 >> 2] | 0;
  HEAP32[$119 >> 2] = $120 + -1;
  $123 = HEAP32[$6 >> 2] | 0;
  if (!$120) $130 = __Z9luaZ_fillP3Zio($123) | 0; else {
   $124 = $123 + 4 | 0;
   $125 = HEAP32[$124 >> 2] | 0;
   HEAP32[$124 >> 2] = $125 + 1;
   $130 = HEAPU8[$125 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $130;
  $$2 = 281;
  STACKTOP = sp;
  return $$2 | 0;
 } else if ((label | 0) == 49) {
  $131 = HEAP32[$6 >> 2] | 0;
  $132 = HEAP32[$131 >> 2] | 0;
  HEAP32[$131 >> 2] = $132 + -1;
  $135 = HEAP32[$6 >> 2] | 0;
  if (!$132) $142 = __Z9luaZ_fillP3Zio($135) | 0; else {
   $136 = $135 + 4 | 0;
   $137 = HEAP32[$136 >> 2] | 0;
   HEAP32[$136 >> 2] = $137 + 1;
   $142 = HEAPU8[$137 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $142;
  if (($142 | 0) != 61) {
   $$2 = 126;
   STACKTOP = sp;
   return $$2 | 0;
  }
  $144 = HEAP32[$6 >> 2] | 0;
  $145 = HEAP32[$144 >> 2] | 0;
  HEAP32[$144 >> 2] = $145 + -1;
  $148 = HEAP32[$6 >> 2] | 0;
  if (!$145) $155 = __Z9luaZ_fillP3Zio($148) | 0; else {
   $149 = $148 + 4 | 0;
   $150 = HEAP32[$149 >> 2] | 0;
   HEAP32[$149 >> 2] = $150 + 1;
   $155 = HEAPU8[$150 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $155;
  $$2 = 283;
  STACKTOP = sp;
  return $$2 | 0;
 } else if ((label | 0) == 57) {
  $156 = HEAP32[$3 >> 2] | 0;
  $157 = $156 + 4 | 0;
  $158 = HEAP32[$157 >> 2] | 0;
  $160 = $156 + 8 | 0;
  $161 = HEAP32[$160 >> 2] | 0;
  if (($158 + 1 | 0) >>> 0 > $161 >>> 0) {
   if ($161 >>> 0 > 2147483645) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$0 + 44 >> 2] | 0) + 16 | 0, 80);
    $170 = $0 + 32 | 0;
    $171 = HEAP32[$170 >> 2] | 0;
    $173 = HEAP32[$0 + 4 >> 2] | 0;
    HEAP32[$vararg_buffer >> 2] = $2;
    HEAP32[$vararg_buffer + 4 >> 2] = $173;
    HEAP32[$vararg_buffer + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($171, 89955, $vararg_buffer) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$170 >> 2] | 0, 3);
   }
   $164 = $161 << 1;
   $166 = HEAP32[$0 + 32 >> 2] | 0;
   if (($164 | 0) == -2) {
    $$pre$phi$i$iZ2D = $156;
    $178 = __Z11luaM_toobigP9lua_State($166) | 0;
   } else {
    $$pre$phi$i$iZ2D = $156;
    $178 = __Z13luaM_realloc_P9lua_StatePvjj($166, HEAP32[$156 >> 2] | 0, $161, $164) | 0;
   }
   HEAP32[$$pre$phi$i$iZ2D >> 2] = $178;
   HEAP32[$160 >> 2] = $164;
   $181 = HEAP32[$157 >> 2] | 0;
   $183 = $178;
  } else {
   $181 = $158;
   $183 = HEAP32[$156 >> 2] | 0;
  }
  $179 = $7 & 255;
  HEAP32[$157 >> 2] = $181 + 1;
  HEAP8[$183 + $181 >> 0] = $179;
  $184 = HEAP32[$6 >> 2] | 0;
  $185 = HEAP32[$184 >> 2] | 0;
  HEAP32[$184 >> 2] = $185 + -1;
  $188 = HEAP32[$6 >> 2] | 0;
  if (!$185) $195 = __Z9luaZ_fillP3Zio($188) | 0; else {
   $189 = $188 + 4 | 0;
   $190 = HEAP32[$189 >> 2] | 0;
   HEAP32[$189 >> 2] = $190 + 1;
   $195 = HEAPU8[$190 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $195;
  L99 : do if (($195 | 0) != ($7 | 0)) {
   $197 = $0 + 44 | 0;
   $198 = $0 + 32 | 0;
   $199 = $0 + 4 | 0;
   $200 = $195;
   L101 : while (1) {
    L103 : do switch ($200 | 0) {
    case -1:
     {
      label = 72;
      break L101;
      break;
     }
    case 13:
    case 10:
     {
      __Z13luaX_lexerrorP8LexStatePKci($0, 90033, 286);
      label = 70;
      break;
     }
    case 92:
     {
      $208 = HEAP32[$6 >> 2] | 0;
      $209 = HEAP32[$208 >> 2] | 0;
      HEAP32[$208 >> 2] = $209 + -1;
      $212 = HEAP32[$6 >> 2] | 0;
      if (!$209) $219 = __Z9luaZ_fillP3Zio($212) | 0; else {
       $213 = $212 + 4 | 0;
       $214 = HEAP32[$213 >> 2] | 0;
       HEAP32[$213 >> 2] = $214 + 1;
       $219 = HEAPU8[$214 >> 0] | 0;
      }
      HEAP32[$0 >> 2] = $219;
      switch ($219 | 0) {
      case -1:
       {
        $$be$i = -1;
        break L103;
        break;
       }
      case 97:
       {
        $$1$i = 7;
        break;
       }
      case 98:
       {
        $$1$i = 8;
        break;
       }
      case 102:
       {
        $$1$i = 12;
        break;
       }
      case 110:
       {
        $$1$i = 10;
        break;
       }
      case 114:
       {
        $$1$i = 13;
        break;
       }
      case 116:
       {
        $$1$i = 9;
        break;
       }
      case 118:
       {
        $$1$i = 11;
        break;
       }
      case 13:
      case 10:
       {
        $220 = HEAP32[$3 >> 2] | 0;
        $221 = $220 + 4 | 0;
        $222 = HEAP32[$221 >> 2] | 0;
        $224 = $220 + 8 | 0;
        $225 = HEAP32[$224 >> 2] | 0;
        if (($222 + 1 | 0) >>> 0 > $225 >>> 0) {
         if ($225 >>> 0 > 2147483645) {
          label = 87;
          break L101;
         }
         $233 = $225 << 1;
         $235 = HEAP32[$198 >> 2] | 0;
         if (($233 | 0) == -2) {
          $$pre$phi$i61$iZ2D = $220;
          $239 = __Z11luaM_toobigP9lua_State($235) | 0;
         } else {
          $$pre$phi$i61$iZ2D = $220;
          $239 = __Z13luaM_realloc_P9lua_StatePvjj($235, HEAP32[$220 >> 2] | 0, $225, $233) | 0;
         }
         HEAP32[$$pre$phi$i61$iZ2D >> 2] = $239;
         HEAP32[$224 >> 2] = $233;
         $241 = HEAP32[$221 >> 2] | 0;
         $243 = $239;
        } else {
         $241 = $222;
         $243 = HEAP32[$220 >> 2] | 0;
        }
        HEAP32[$221 >> 2] = $241 + 1;
        HEAP8[$243 + $241 >> 0] = 10;
        __ZL13inclinenumberP8LexState($0);
        label = 70;
        break L103;
        break;
       }
      default:
       {
        if (($219 + -48 | 0) >>> 0 < 10) {
         $$0$i = 0;
         $$053$i = 0;
         $283 = $219;
        } else {
         $244 = HEAP32[$3 >> 2] | 0;
         $245 = $244 + 4 | 0;
         $246 = HEAP32[$245 >> 2] | 0;
         $248 = $244 + 8 | 0;
         $249 = HEAP32[$248 >> 2] | 0;
         if (($246 + 1 | 0) >>> 0 > $249 >>> 0) {
          if ($249 >>> 0 > 2147483645) {
           label = 97;
           break L101;
          }
          $257 = $249 << 1;
          $259 = HEAP32[$198 >> 2] | 0;
          if (($257 | 0) == -2) {
           $$pre$phi$i69$iZ2D = $244;
           $263 = __Z11luaM_toobigP9lua_State($259) | 0;
          } else {
           $$pre$phi$i69$iZ2D = $244;
           $263 = __Z13luaM_realloc_P9lua_StatePvjj($259, HEAP32[$244 >> 2] | 0, $249, $257) | 0;
          }
          HEAP32[$$pre$phi$i69$iZ2D >> 2] = $263;
          HEAP32[$248 >> 2] = $257;
          $266 = HEAP32[$245 >> 2] | 0;
          $268 = $263;
         } else {
          $266 = $246;
          $268 = HEAP32[$244 >> 2] | 0;
         }
         HEAP32[$245 >> 2] = $266 + 1;
         HEAP8[$268 + $266 >> 0] = $219;
         $269 = HEAP32[$6 >> 2] | 0;
         $270 = HEAP32[$269 >> 2] | 0;
         HEAP32[$269 >> 2] = $270 + -1;
         $273 = HEAP32[$6 >> 2] | 0;
         if (!$270) $280 = __Z9luaZ_fillP3Zio($273) | 0; else {
          $274 = $273 + 4 | 0;
          $275 = HEAP32[$274 >> 2] | 0;
          HEAP32[$274 >> 2] = $275 + 1;
          $280 = HEAPU8[$275 >> 0] | 0;
         }
         HEAP32[$0 >> 2] = $280;
         $$be$i = $280;
         break L103;
        }
        while (1) {
         $$053$i = $283 + -48 + ($$053$i * 10 | 0) | 0;
         $285 = HEAP32[$6 >> 2] | 0;
         $286 = HEAP32[$285 >> 2] | 0;
         HEAP32[$285 >> 2] = $286 + -1;
         $289 = HEAP32[$6 >> 2] | 0;
         if (!$286) $296 = __Z9luaZ_fillP3Zio($289) | 0; else {
          $290 = $289 + 4 | 0;
          $291 = HEAP32[$290 >> 2] | 0;
          HEAP32[$290 >> 2] = $291 + 1;
          $296 = HEAPU8[$291 >> 0] | 0;
         }
         HEAP32[$0 >> 2] = $296;
         $$0$i = $$0$i + 1 | 0;
         if (!(($$0$i | 0) < 3 & ($296 + -48 | 0) >>> 0 < 10)) break; else $283 = $296;
        }
        if (($$053$i | 0) > 255) __Z13luaX_lexerrorP8LexStatePKci($0, 90051, 286);
        $300 = HEAP32[$3 >> 2] | 0;
        $301 = $300 + 4 | 0;
        $302 = HEAP32[$301 >> 2] | 0;
        $304 = $300 + 8 | 0;
        $305 = HEAP32[$304 >> 2] | 0;
        if (($302 + 1 | 0) >>> 0 > $305 >>> 0) {
         if ($305 >>> 0 > 2147483645) {
          label = 115;
          break L101;
         }
         $313 = $305 << 1;
         $315 = HEAP32[$198 >> 2] | 0;
         if (($313 | 0) == -2) {
          $$pre$phi$i77$iZ2D = $300;
          $319 = __Z11luaM_toobigP9lua_State($315) | 0;
         } else {
          $$pre$phi$i77$iZ2D = $300;
          $319 = __Z13luaM_realloc_P9lua_StatePvjj($315, HEAP32[$300 >> 2] | 0, $305, $313) | 0;
         }
         HEAP32[$$pre$phi$i77$iZ2D >> 2] = $319;
         HEAP32[$304 >> 2] = $313;
         $322 = HEAP32[$301 >> 2] | 0;
         $324 = $319;
        } else {
         $322 = $302;
         $324 = HEAP32[$300 >> 2] | 0;
        }
        HEAP32[$301 >> 2] = $322 + 1;
        HEAP8[$324 + $322 >> 0] = $$053$i;
        label = 70;
        break L103;
       }
      }
      $325 = HEAP32[$3 >> 2] | 0;
      $326 = $325 + 4 | 0;
      $327 = HEAP32[$326 >> 2] | 0;
      $329 = $325 + 8 | 0;
      $330 = HEAP32[$329 >> 2] | 0;
      if (($327 + 1 | 0) >>> 0 > $330 >>> 0) {
       if ($330 >>> 0 > 2147483645) {
        label = 124;
        break L101;
       }
       $338 = $330 << 1;
       $340 = HEAP32[$198 >> 2] | 0;
       if (($338 | 0) == -2) {
        $$pre$phi$i85$iZ2D = $325;
        $344 = __Z11luaM_toobigP9lua_State($340) | 0;
       } else {
        $$pre$phi$i85$iZ2D = $325;
        $344 = __Z13luaM_realloc_P9lua_StatePvjj($340, HEAP32[$325 >> 2] | 0, $330, $338) | 0;
       }
       HEAP32[$$pre$phi$i85$iZ2D >> 2] = $344;
       HEAP32[$329 >> 2] = $338;
       $346 = HEAP32[$326 >> 2] | 0;
       $348 = $344;
      } else {
       $346 = $327;
       $348 = HEAP32[$325 >> 2] | 0;
      }
      HEAP32[$326 >> 2] = $346 + 1;
      HEAP8[$348 + $346 >> 0] = $$1$i;
      $349 = HEAP32[$6 >> 2] | 0;
      $350 = HEAP32[$349 >> 2] | 0;
      HEAP32[$349 >> 2] = $350 + -1;
      $353 = HEAP32[$6 >> 2] | 0;
      if (!$350) $360 = __Z9luaZ_fillP3Zio($353) | 0; else {
       $354 = $353 + 4 | 0;
       $355 = HEAP32[$354 >> 2] | 0;
       HEAP32[$354 >> 2] = $355 + 1;
       $360 = HEAPU8[$355 >> 0] | 0;
      }
      HEAP32[$0 >> 2] = $360;
      $$be$i = $360;
      break;
     }
    default:
     {
      $361 = HEAP32[$3 >> 2] | 0;
      $362 = $361 + 4 | 0;
      $363 = HEAP32[$362 >> 2] | 0;
      $365 = $361 + 8 | 0;
      $366 = HEAP32[$365 >> 2] | 0;
      if (($363 + 1 | 0) >>> 0 > $366 >>> 0) {
       if ($366 >>> 0 > 2147483645) {
        label = 136;
        break L101;
       }
       $374 = $366 << 1;
       $376 = HEAP32[$198 >> 2] | 0;
       if (($374 | 0) == -2) {
        $$pre$phi$i93$iZ2D = $361;
        $380 = __Z11luaM_toobigP9lua_State($376) | 0;
       } else {
        $$pre$phi$i93$iZ2D = $361;
        $380 = __Z13luaM_realloc_P9lua_StatePvjj($376, HEAP32[$361 >> 2] | 0, $366, $374) | 0;
       }
       HEAP32[$$pre$phi$i93$iZ2D >> 2] = $380;
       HEAP32[$365 >> 2] = $374;
       $383 = HEAP32[$362 >> 2] | 0;
       $385 = $380;
      } else {
       $383 = $363;
       $385 = HEAP32[$361 >> 2] | 0;
      }
      HEAP32[$362 >> 2] = $383 + 1;
      HEAP8[$385 + $383 >> 0] = $200;
      $386 = HEAP32[$6 >> 2] | 0;
      $387 = HEAP32[$386 >> 2] | 0;
      HEAP32[$386 >> 2] = $387 + -1;
      $390 = HEAP32[$6 >> 2] | 0;
      if (!$387) $397 = __Z9luaZ_fillP3Zio($390) | 0; else {
       $391 = $390 + 4 | 0;
       $392 = HEAP32[$391 >> 2] | 0;
       HEAP32[$391 >> 2] = $392 + 1;
       $397 = HEAPU8[$392 >> 0] | 0;
      }
      HEAP32[$0 >> 2] = $397;
      $$be$i = $397;
     }
    } while (0);
    if ((label | 0) == 70) {
     label = 0;
     $$be$i = HEAP32[$0 >> 2] | 0;
    }
    if (($$be$i | 0) == ($7 | 0)) break L99; else $200 = $$be$i;
   }
   if ((label | 0) == 72) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$197 >> 2] | 0) + 16 | 0, 80);
    $203 = HEAP32[$198 >> 2] | 0;
    $204 = HEAP32[$199 >> 2] | 0;
    HEAP32[$vararg_buffer3 >> 2] = $2;
    HEAP32[$vararg_buffer3 + 4 >> 2] = $204;
    HEAP32[$vararg_buffer3 + 8 >> 2] = 90033;
    $205 = __Z16luaO_pushfstringP9lua_StatePKcz($203, 89955, $vararg_buffer3) | 0;
    $206 = HEAP32[$198 >> 2] | 0;
    HEAP32[$vararg_buffer8 >> 2] = $205;
    HEAP32[$vararg_buffer8 + 4 >> 2] = 89937;
    __Z16luaO_pushfstringP9lua_StatePKcz($206, 89990, $vararg_buffer8) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$198 >> 2] | 0, 3);
   } else if ((label | 0) == 87) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$197 >> 2] | 0) + 16 | 0, 80);
    $230 = HEAP32[$198 >> 2] | 0;
    $231 = HEAP32[$199 >> 2] | 0;
    HEAP32[$vararg_buffer12 >> 2] = $2;
    HEAP32[$vararg_buffer12 + 4 >> 2] = $231;
    HEAP32[$vararg_buffer12 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($230, 89955, $vararg_buffer12) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$198 >> 2] | 0, 3);
   } else if ((label | 0) == 97) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$197 >> 2] | 0) + 16 | 0, 80);
    $254 = HEAP32[$198 >> 2] | 0;
    $255 = HEAP32[$199 >> 2] | 0;
    HEAP32[$vararg_buffer17 >> 2] = $2;
    HEAP32[$vararg_buffer17 + 4 >> 2] = $255;
    HEAP32[$vararg_buffer17 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($254, 89955, $vararg_buffer17) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$198 >> 2] | 0, 3);
   } else if ((label | 0) == 115) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$197 >> 2] | 0) + 16 | 0, 80);
    $310 = HEAP32[$198 >> 2] | 0;
    $311 = HEAP32[$199 >> 2] | 0;
    HEAP32[$vararg_buffer22 >> 2] = $2;
    HEAP32[$vararg_buffer22 + 4 >> 2] = $311;
    HEAP32[$vararg_buffer22 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($310, 89955, $vararg_buffer22) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$198 >> 2] | 0, 3);
   } else if ((label | 0) == 124) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$197 >> 2] | 0) + 16 | 0, 80);
    $335 = HEAP32[$198 >> 2] | 0;
    $336 = HEAP32[$199 >> 2] | 0;
    HEAP32[$vararg_buffer27 >> 2] = $2;
    HEAP32[$vararg_buffer27 + 4 >> 2] = $336;
    HEAP32[$vararg_buffer27 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($335, 89955, $vararg_buffer27) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$198 >> 2] | 0, 3);
   } else if ((label | 0) == 136) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$197 >> 2] | 0) + 16 | 0, 80);
    $371 = HEAP32[$198 >> 2] | 0;
    $372 = HEAP32[$199 >> 2] | 0;
    HEAP32[$vararg_buffer32 >> 2] = $2;
    HEAP32[$vararg_buffer32 + 4 >> 2] = $372;
    HEAP32[$vararg_buffer32 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($371, 89955, $vararg_buffer32) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$198 >> 2] | 0, 3);
   }
  } while (0);
  $399 = HEAP32[$3 >> 2] | 0;
  $400 = $399 + 4 | 0;
  $401 = HEAP32[$400 >> 2] | 0;
  $403 = $399 + 8 | 0;
  $404 = HEAP32[$403 >> 2] | 0;
  if (($401 + 1 | 0) >>> 0 > $404 >>> 0) {
   if ($404 >>> 0 > 2147483645) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$0 + 44 >> 2] | 0) + 16 | 0, 80);
    $413 = $0 + 32 | 0;
    $414 = HEAP32[$413 >> 2] | 0;
    $416 = HEAP32[$0 + 4 >> 2] | 0;
    HEAP32[$vararg_buffer37 >> 2] = $2;
    HEAP32[$vararg_buffer37 + 4 >> 2] = $416;
    HEAP32[$vararg_buffer37 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($414, 89955, $vararg_buffer37) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$413 >> 2] | 0, 3);
   }
   $407 = $404 << 1;
   $409 = HEAP32[$0 + 32 >> 2] | 0;
   if (($407 | 0) == -2) {
    $$pre$phi$i101$iZ2D = $399;
    $421 = __Z11luaM_toobigP9lua_State($409) | 0;
   } else {
    $$pre$phi$i101$iZ2D = $399;
    $421 = __Z13luaM_realloc_P9lua_StatePvjj($409, HEAP32[$399 >> 2] | 0, $404, $407) | 0;
   }
   HEAP32[$$pre$phi$i101$iZ2D >> 2] = $421;
   HEAP32[$403 >> 2] = $407;
   $423 = HEAP32[$400 >> 2] | 0;
   $425 = $421;
  } else {
   $423 = $401;
   $425 = HEAP32[$399 >> 2] | 0;
  }
  HEAP32[$400 >> 2] = $423 + 1;
  HEAP8[$425 + $423 >> 0] = $179;
  $426 = HEAP32[$6 >> 2] | 0;
  $427 = HEAP32[$426 >> 2] | 0;
  HEAP32[$426 >> 2] = $427 + -1;
  $430 = HEAP32[$6 >> 2] | 0;
  if (!$427) $437 = __Z9luaZ_fillP3Zio($430) | 0; else {
   $431 = $430 + 4 | 0;
   $432 = HEAP32[$431 >> 2] | 0;
   HEAP32[$431 >> 2] = $432 + 1;
   $437 = HEAPU8[$432 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $437;
  $438 = HEAP32[$3 >> 2] | 0;
  $445 = HEAP32[$0 + 32 >> 2] | 0;
  $446 = __Z12luaS_newlstrP9lua_StatePKcj($445, (HEAP32[$438 >> 2] | 0) + 1 | 0, (HEAP32[$438 + 4 >> 2] | 0) + -2 | 0) | 0;
  $451 = __Z11luaH_setstrP9lua_StateP5TableP7TString($445, HEAP32[(HEAP32[$0 + 28 >> 2] | 0) + 4 >> 2] | 0, $446) | 0;
  $452 = $451 + 4 | 0;
  if (!(HEAP32[$452 >> 2] | 0)) {
   HEAP32[$451 >> 2] = 1;
   HEAP32[$452 >> 2] = 1;
   $456 = HEAP32[$445 + 16 >> 2] | 0;
   if ((HEAP32[$456 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$456 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($445);
  }
  HEAP32[$1 >> 2] = $446;
  $$2 = 286;
  STACKTOP = sp;
  return $$2 | 0;
 } else if ((label | 0) == 161) {
  $462 = HEAP32[$3 >> 2] | 0;
  $463 = $462 + 4 | 0;
  $464 = HEAP32[$463 >> 2] | 0;
  $466 = $462 + 8 | 0;
  $467 = HEAP32[$466 >> 2] | 0;
  if (($464 + 1 | 0) >>> 0 > $467 >>> 0) {
   if ($467 >>> 0 > 2147483645) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$0 + 44 >> 2] | 0) + 16 | 0, 80);
    $476 = $0 + 32 | 0;
    $477 = HEAP32[$476 >> 2] | 0;
    $479 = HEAP32[$0 + 4 >> 2] | 0;
    HEAP32[$vararg_buffer42 >> 2] = $2;
    HEAP32[$vararg_buffer42 + 4 >> 2] = $479;
    HEAP32[$vararg_buffer42 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($477, 89955, $vararg_buffer42) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$476 >> 2] | 0, 3);
   }
   $470 = $467 << 1;
   $472 = HEAP32[$0 + 32 >> 2] | 0;
   if (($470 | 0) == -2) {
    $$pre$phi$i114Z2D = $462;
    $484 = __Z11luaM_toobigP9lua_State($472) | 0;
   } else {
    $$pre$phi$i114Z2D = $462;
    $484 = __Z13luaM_realloc_P9lua_StatePvjj($472, HEAP32[$462 >> 2] | 0, $467, $470) | 0;
   }
   HEAP32[$$pre$phi$i114Z2D >> 2] = $484;
   HEAP32[$466 >> 2] = $470;
   $486 = HEAP32[$463 >> 2] | 0;
   $488 = $484;
  } else {
   $486 = $464;
   $488 = HEAP32[$462 >> 2] | 0;
  }
  HEAP32[$463 >> 2] = $486 + 1;
  HEAP8[$488 + $486 >> 0] = 46;
  $489 = HEAP32[$6 >> 2] | 0;
  $490 = HEAP32[$489 >> 2] | 0;
  HEAP32[$489 >> 2] = $490 + -1;
  $493 = HEAP32[$6 >> 2] | 0;
  if (!$490) $500 = __Z9luaZ_fillP3Zio($493) | 0; else {
   $494 = $493 + 4 | 0;
   $495 = HEAP32[$494 >> 2] | 0;
   HEAP32[$494 >> 2] = $495 + 1;
   $500 = HEAPU8[$495 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $500;
  if (!(_memchr(102189, $500, 2) | 0)) {
   if (($500 + -48 | 0) >>> 0 >= 10) {
    $$2 = 46;
    STACKTOP = sp;
    return $$2 | 0;
   }
   __ZL12read_numeralP8LexStateP7SemInfo($0, $1);
   $$2 = 284;
   STACKTOP = sp;
   return $$2 | 0;
  }
  $502 = HEAP32[$3 >> 2] | 0;
  $503 = $502 + 4 | 0;
  $504 = HEAP32[$503 >> 2] | 0;
  $506 = $502 + 8 | 0;
  $507 = HEAP32[$506 >> 2] | 0;
  if (($504 + 1 | 0) >>> 0 > $507 >>> 0) {
   if ($507 >>> 0 > 2147483645) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$0 + 44 >> 2] | 0) + 16 | 0, 80);
    $516 = $0 + 32 | 0;
    $517 = HEAP32[$516 >> 2] | 0;
    $519 = HEAP32[$0 + 4 >> 2] | 0;
    HEAP32[$vararg_buffer47 >> 2] = $2;
    HEAP32[$vararg_buffer47 + 4 >> 2] = $519;
    HEAP32[$vararg_buffer47 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($517, 89955, $vararg_buffer47) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$516 >> 2] | 0, 3);
   }
   $510 = $507 << 1;
   $512 = HEAP32[$0 + 32 >> 2] | 0;
   if (($510 | 0) == -2) {
    $$pre$phi$i131Z2D = $502;
    $524 = __Z11luaM_toobigP9lua_State($512) | 0;
   } else {
    $$pre$phi$i131Z2D = $502;
    $524 = __Z13luaM_realloc_P9lua_StatePvjj($512, HEAP32[$502 >> 2] | 0, $507, $510) | 0;
   }
   HEAP32[$$pre$phi$i131Z2D >> 2] = $524;
   HEAP32[$506 >> 2] = $510;
   $527 = HEAP32[$503 >> 2] | 0;
   $529 = $524;
  } else {
   $527 = $504;
   $529 = HEAP32[$502 >> 2] | 0;
  }
  HEAP32[$503 >> 2] = $527 + 1;
  HEAP8[$529 + $527 >> 0] = $500;
  $530 = HEAP32[$6 >> 2] | 0;
  $531 = HEAP32[$530 >> 2] | 0;
  HEAP32[$530 >> 2] = $531 + -1;
  $534 = HEAP32[$6 >> 2] | 0;
  if (!$531) $541 = __Z9luaZ_fillP3Zio($534) | 0; else {
   $535 = $534 + 4 | 0;
   $536 = HEAP32[$535 >> 2] | 0;
   HEAP32[$535 >> 2] = $536 + 1;
   $541 = HEAPU8[$536 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $541;
  if (!(_memchr(102189, $541, 2) | 0)) {
   $$2 = 278;
   STACKTOP = sp;
   return $$2 | 0;
  }
  $543 = HEAP32[$3 >> 2] | 0;
  $544 = $543 + 4 | 0;
  $545 = HEAP32[$544 >> 2] | 0;
  $547 = $543 + 8 | 0;
  $548 = HEAP32[$547 >> 2] | 0;
  if (($545 + 1 | 0) >>> 0 > $548 >>> 0) {
   if ($548 >>> 0 > 2147483645) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$0 + 44 >> 2] | 0) + 16 | 0, 80);
    $557 = $0 + 32 | 0;
    $558 = HEAP32[$557 >> 2] | 0;
    $560 = HEAP32[$0 + 4 >> 2] | 0;
    HEAP32[$vararg_buffer52 >> 2] = $2;
    HEAP32[$vararg_buffer52 + 4 >> 2] = $560;
    HEAP32[$vararg_buffer52 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($558, 89955, $vararg_buffer52) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$557 >> 2] | 0, 3);
   }
   $551 = $548 << 1;
   $553 = HEAP32[$0 + 32 >> 2] | 0;
   if (($551 | 0) == -2) {
    $$pre$phi$i139Z2D = $543;
    $565 = __Z11luaM_toobigP9lua_State($553) | 0;
   } else {
    $$pre$phi$i139Z2D = $543;
    $565 = __Z13luaM_realloc_P9lua_StatePvjj($553, HEAP32[$543 >> 2] | 0, $548, $551) | 0;
   }
   HEAP32[$$pre$phi$i139Z2D >> 2] = $565;
   HEAP32[$547 >> 2] = $551;
   $568 = HEAP32[$544 >> 2] | 0;
   $570 = $565;
  } else {
   $568 = $545;
   $570 = HEAP32[$543 >> 2] | 0;
  }
  HEAP32[$544 >> 2] = $568 + 1;
  HEAP8[$570 + $568 >> 0] = $541;
  $571 = HEAP32[$6 >> 2] | 0;
  $572 = HEAP32[$571 >> 2] | 0;
  HEAP32[$571 >> 2] = $572 + -1;
  $575 = HEAP32[$6 >> 2] | 0;
  if (!$572) $582 = __Z9luaZ_fillP3Zio($575) | 0; else {
   $576 = $575 + 4 | 0;
   $577 = HEAP32[$576 >> 2] | 0;
   HEAP32[$576 >> 2] = $577 + 1;
   $582 = HEAPU8[$577 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $582;
  $$2 = 279;
  STACKTOP = sp;
  return $$2 | 0;
 } else if ((label | 0) == 204) {
  if (($7 + -48 | 0) >>> 0 < 10) {
   __ZL12read_numeralP8LexStateP7SemInfo($0, $1);
   $$2 = 284;
   STACKTOP = sp;
   return $$2 | 0;
  }
  if (!(($7 | 0) == 95 | (_isalpha($7) | 0) != 0)) {
   $670 = HEAP32[$6 >> 2] | 0;
   $671 = HEAP32[$670 >> 2] | 0;
   HEAP32[$670 >> 2] = $671 + -1;
   $674 = HEAP32[$6 >> 2] | 0;
   if (!$671) $681 = __Z9luaZ_fillP3Zio($674) | 0; else {
    $675 = $674 + 4 | 0;
    $676 = HEAP32[$675 >> 2] | 0;
    HEAP32[$675 >> 2] = $676 + 1;
    $681 = HEAPU8[$676 >> 0] | 0;
   }
   HEAP32[$0 >> 2] = $681;
   $$2 = $7;
   STACKTOP = sp;
   return $$2 | 0;
  }
  $600 = $0 + 44 | 0;
  $601 = $0 + 32 | 0;
  $602 = $0 + 4 | 0;
  $624 = $7;
  while (1) {
   $603 = HEAP32[$3 >> 2] | 0;
   $604 = $603 + 4 | 0;
   $605 = HEAP32[$604 >> 2] | 0;
   $607 = $603 + 8 | 0;
   $608 = HEAP32[$607 >> 2] | 0;
   if (($605 + 1 | 0) >>> 0 > $608 >>> 0) {
    if ($608 >>> 0 > 2147483645) {
     label = 211;
     break;
    }
    $616 = $608 << 1;
    $618 = HEAP32[$601 >> 2] | 0;
    if (($616 | 0) == -2) {
     $$pre$phi$i123Z2D = $603;
     $622 = __Z11luaM_toobigP9lua_State($618) | 0;
    } else {
     $$pre$phi$i123Z2D = $603;
     $622 = __Z13luaM_realloc_P9lua_StatePvjj($618, HEAP32[$603 >> 2] | 0, $608, $616) | 0;
    }
    HEAP32[$$pre$phi$i123Z2D >> 2] = $622;
    HEAP32[$607 >> 2] = $616;
    $626 = HEAP32[$604 >> 2] | 0;
    $628 = $622;
   } else {
    $626 = $605;
    $628 = HEAP32[$603 >> 2] | 0;
   }
   HEAP32[$604 >> 2] = $626 + 1;
   HEAP8[$628 + $626 >> 0] = $624;
   $629 = HEAP32[$6 >> 2] | 0;
   $630 = HEAP32[$629 >> 2] | 0;
   HEAP32[$629 >> 2] = $630 + -1;
   $633 = HEAP32[$6 >> 2] | 0;
   if (!$630) $640 = __Z9luaZ_fillP3Zio($633) | 0; else {
    $634 = $633 + 4 | 0;
    $635 = HEAP32[$634 >> 2] | 0;
    HEAP32[$634 >> 2] = $635 + 1;
    $640 = HEAPU8[$635 >> 0] | 0;
   }
   HEAP32[$0 >> 2] = $640;
   if (($640 | 0) == 95 | (_isalnum($640) | 0) != 0) $624 = $640; else break;
  }
  if ((label | 0) == 211) {
   __Z12luaO_chunkidPcPKcj($2, (HEAP32[$600 >> 2] | 0) + 16 | 0, 80);
   $613 = HEAP32[$601 >> 2] | 0;
   $614 = HEAP32[$602 >> 2] | 0;
   HEAP32[$vararg_buffer57 >> 2] = $2;
   HEAP32[$vararg_buffer57 + 4 >> 2] = $614;
   HEAP32[$vararg_buffer57 + 8 >> 2] = 89965;
   __Z16luaO_pushfstringP9lua_StatePKcz($613, 89955, $vararg_buffer57) | 0;
   __Z10luaD_throwP9lua_Statei(HEAP32[$601 >> 2] | 0, 3);
  }
  $644 = HEAP32[$3 >> 2] | 0;
  $648 = HEAP32[$601 >> 2] | 0;
  $649 = __Z12luaS_newlstrP9lua_StatePKcj($648, HEAP32[$644 >> 2] | 0, HEAP32[$644 + 4 >> 2] | 0) | 0;
  $654 = __Z11luaH_setstrP9lua_StateP5TableP7TString($648, HEAP32[(HEAP32[$0 + 28 >> 2] | 0) + 4 >> 2] | 0, $649) | 0;
  $655 = $654 + 4 | 0;
  if (!(HEAP32[$655 >> 2] | 0)) {
   HEAP32[$654 >> 2] = 1;
   HEAP32[$655 >> 2] = 1;
   $659 = HEAP32[$648 + 16 >> 2] | 0;
   if ((HEAP32[$659 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$659 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($648);
  }
  $666 = HEAP8[$649 + 6 >> 0] | 0;
  if (!($666 << 24 >> 24)) {
   HEAP32[$1 >> 2] = $649;
   $$2 = 285;
   STACKTOP = sp;
   return $$2 | 0;
  } else {
   $$2 = $666 & 255 | 256;
   STACKTOP = sp;
   return $$2 | 0;
  }
 } else if ((label | 0) == 230) {
  STACKTOP = sp;
  return $$2 | 0;
 } while (0);
 $56 = HEAP32[$6 >> 2] | 0;
 $57 = HEAP32[$56 >> 2] | 0;
 HEAP32[$56 >> 2] = $57 + -1;
 $60 = HEAP32[$6 >> 2] | 0;
 if (!$57) $67 = __Z9luaZ_fillP3Zio($60) | 0; else {
  $61 = $60 + 4 | 0;
  $62 = HEAP32[$61 >> 2] | 0;
  HEAP32[$61 >> 2] = $62 + 1;
  $67 = HEAPU8[$62 >> 0] | 0;
 }
 HEAP32[$0 >> 2] = $67;
 if (($67 | 0) != 61) {
  $$2 = 61;
  STACKTOP = sp;
  return $$2 | 0;
 }
 $69 = HEAP32[$6 >> 2] | 0;
 $70 = HEAP32[$69 >> 2] | 0;
 HEAP32[$69 >> 2] = $70 + -1;
 $73 = HEAP32[$6 >> 2] | 0;
 if (!$70) $80 = __Z9luaZ_fillP3Zio($73) | 0; else {
  $74 = $73 + 4 | 0;
  $75 = HEAP32[$74 >> 2] | 0;
  HEAP32[$74 >> 2] = $75 + 1;
  $80 = HEAPU8[$75 >> 0] | 0;
 }
 HEAP32[$0 >> 2] = $80;
 $$2 = 280;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i164 = 0, $$0$i$i$i$i179 = 0, $$0$i$i$i$i204 = 0, $$0$i$i$i$i226 = 0, $$0$i$i$i$i254 = 0, $$0$i$i$i$i272 = 0, $$0$i$i149 = 0, $$0$i$i151 = 0, $$0$i$i152 = 0, $$0$i$i155 = 0, $$0$i$i158 = 0, $$0$i$i162 = 0, $$0$i$i176 = 0, $$0$i$i178 = 0, $$0$i$i192 = 0, $$0$i$i196 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i170 = 0, $$0$i$i2$i$i185 = 0, $$0$i$i2$i$i210 = 0, $$0$i$i2$i$i232 = 0, $$0$i$i2$i$i260 = 0, $$0$i$i2$i$i278 = 0, $$0$i$i201 = 0, $$0$i$i218 = 0, $$0$i$i223 = 0, $$0$i$i241 = 0, $$0$i$i247 = 0, $$0$i$i252 = 0, $$0$i$i269 = 0, $$0126 = 0, $$0131 = 0, $$0133 = 0, $$10 = 0, $$1132 = 0, $$2128$ph = 0, $$lcssa = 0, $$pre$i4$i$i187 = 0, $$pre$i4$i$i187391 = 0, $$pre$i4$i$i187393 = 0, $$pre$i4$i$i212 = 0, $$pre$i4$i$i212371$ph = 0, $$pre$i4$i$i212371396 = 0, $$pre$i4$i$i234 = 0, $$pre$i4$i$i262 = 0, $$pre$i4$i$i262366 = 0, $$pre$i4$i$i262368 = 0, $$pre$i4$i$i280 = 0, $$pre$i4$i$i280379 = 0, $$pre$i4$i$i280380 = 0, $$pre383 = 0, $$sink = 0, $$sroa$0297$0 = 0, $$sroa$0317$0 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $117 = 0, $12 = 0, $120 = 0, $13 = 0, $130 = 0, $133 = 0, $14 = 0, $143 = 0, $144 = 0, $146 = 0, $15 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $171 = 0, $175 = 0, $176 = 0, $18 = 0, $180 = 0, $183 = 0, $185 = 0, $187 = 0, $189 = 0, $19 = 0, $190 = 0, $196 = 0, $20 = 0, $202 = 0, $203 = 0, $204 = 0, $21 = 0, $212 = 0, $218 = 0, $22 = 0, $224 = 0, $225 = 0, $226 = 0, $23 = 0, $234 = 0, $24 = 0, $243 = 0, $245 = 0, $25 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $260 = 0, $27 = 0, $271 = 0, $277 = 0, $278 = 0, $279 = 0, $287 = 0, $301 = 0, $303 = 0, $305 = 0, $310 = 0, $311 = 0, $314 = 0, $318 = 0, $327 = 0, $329 = 0, $330 = 0, $331 = 0, $333 = 0, $334 = 0, $335 = 0, $338 = 0, $342 = 0, $345 = 0, $352 = 0, $353 = 0, $356 = 0, $359 = 0, $360 = 0, $362 = 0, $365 = 0, $375 = 0, $378 = 0, $388 = 0, $389 = 0, $391 = 0, $402 = 0, $403 = 0, $404 = 0, $41 = 0, $414 = 0, $415 = 0, $42 = 0, $425 = 0, $428 = 0, $438 = 0, $44 = 0, $441 = 0, $45 = 0, $451 = 0, $452 = 0, $454 = 0, $467 = 0, $47 = 0, $471 = 0, $473 = 0, $482 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $498 = 0, $50 = 0, $504 = 0, $507 = 0, $510 = 0, $52 = 0, $522 = 0, $53 = 0, $532 = 0, $534 = 0, $54 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $559 = 0, $56 = 0, $562 = 0, $572 = 0, $575 = 0, $58 = 0, $585 = 0, $586 = 0, $588 = 0, $606 = 0, $608 = 0, $61 = 0, $617 = 0, $621 = 0, $622 = 0, $623 = 0, $639 = 0, $640 = 0, $641 = 0, $646 = 0, $647 = 0, $650 = 0, $660 = 0, $663 = 0, $673 = 0, $675 = 0, $688 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $704 = 0, $705 = 0, $71 = 0, $711 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $720 = 0, $721 = 0, $722 = 0, $74 = 0, $87 = 0, $89 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $11 = sp + 96 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 88 | 0;
 $14 = sp + 80 | 0;
 $15 = sp + 76 | 0;
 $16 = sp + 504 | 0;
 $17 = sp + 72 | 0;
 $18 = sp + 68 | 0;
 $19 = sp + 56 | 0;
 $20 = sp + 44 | 0;
 $21 = sp + 32 | 0;
 $22 = sp + 20 | 0;
 $23 = sp + 8 | 0;
 $24 = sp + 4 | 0;
 $25 = sp;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$13 >> 2] = $12;
 $27 = $13 + 4 | 0;
 HEAP32[$27 >> 2] = 187;
 HEAP32[$14 >> 2] = $12;
 HEAP32[$15 >> 2] = $12 + 400;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$19 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 $$0$i$i149 = 0;
 while (1) {
  if (($$0$i$i149 | 0) == 3) break;
  HEAP32[$20 + ($$0$i$i149 << 2) >> 2] = 0;
  $$0$i$i149 = $$0$i$i149 + 1 | 0;
 }
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 $$0$i$i152 = 0;
 while (1) {
  if (($$0$i$i152 | 0) == 3) break;
  HEAP32[$21 + ($$0$i$i152 << 2) >> 2] = 0;
  $$0$i$i152 = $$0$i$i152 + 1 | 0;
 }
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $$0$i$i155 = 0;
 while (1) {
  if (($$0$i$i155 | 0) == 3) break;
  HEAP32[$22 + ($$0$i$i155 << 2) >> 2] = 0;
  $$0$i$i155 = $$0$i$i155 + 1 | 0;
 }
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = 0;
 $$0$i$i158 = 0;
 while (1) {
  if (($$0$i$i158 | 0) == 3) break;
  HEAP32[$23 + ($$0$i$i158 << 2) >> 2] = 0;
  $$0$i$i158 = $$0$i$i158 + 1 | 0;
 }
 __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($2, $3, $16, $17, $18, $19, $20, $21, $22, $24);
 HEAP32[$9 >> 2] = HEAP32[$8 >> 2];
 $41 = $21 + 8 + 3 | 0;
 $42 = $21 + 4 | 0;
 $44 = $22 + 8 + 3 | 0;
 $45 = $22 + 4 | 0;
 $47 = ($4 & 512 | 0) != 0;
 $49 = $20 + 8 + 3 | 0;
 $50 = $20 + 4 | 0;
 $52 = $23 + 8 + 3 | 0;
 $53 = $23 + 4 | 0;
 $54 = $16 + 3 | 0;
 $55 = $19 + 11 | 0;
 $56 = $19 + 4 | 0;
 $$0131 = 0;
 $$0133 = 0;
 L21 : while (1) {
  if ($$0133 >>> 0 >= 4) {
   label = 231;
   break;
  }
  $58 = HEAP32[$0 >> 2] | 0;
  do if (!$58) $714 = 1; else {
   $61 = HEAP32[$58 + 12 >> 2] | 0;
   if (($61 | 0) == (HEAP32[$58 + 16 >> 2] | 0)) $$0$i$i$i$i164 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 255]($58) | 0; else $$0$i$i$i$i164 = HEAP32[$61 >> 2] | 0;
   if (($$0$i$i$i$i164 | 0) == -1) {
    HEAP32[$0 >> 2] = 0;
    $714 = 1;
    break;
   } else {
    $714 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $71 = HEAP32[$1 >> 2] | 0;
  do if (!$71) label = 31; else {
   $74 = HEAP32[$71 + 12 >> 2] | 0;
   if (($74 | 0) == (HEAP32[$71 + 16 >> 2] | 0)) $$0$i$i2$i$i170 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] & 255]($71) | 0; else $$0$i$i2$i$i170 = HEAP32[$74 >> 2] | 0;
   if (($$0$i$i2$i$i170 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    label = 31;
    break;
   } else if ($714) {
    $715 = $71;
    break;
   } else {
    label = 231;
    break L21;
   }
  } while (0);
  if ((label | 0) == 31) {
   label = 0;
   if ($714) {
    label = 231;
    break;
   } else $715 = 0;
  }
  L46 : do switch (HEAP8[$16 + $$0133 >> 0] | 0) {
  case 1:
   {
    if (($$0133 | 0) == 3) $$1132 = $$0131; else {
     $87 = HEAP32[$0 >> 2] | 0;
     $89 = HEAP32[$87 + 12 >> 2] | 0;
     if (($89 | 0) == (HEAP32[$87 + 16 >> 2] | 0)) $$0$i$i176 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$87 >> 2] | 0) + 36 >> 2] & 255]($87) | 0; else $$0$i$i176 = HEAP32[$89 >> 2] | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, $$0$i$i176) | 0)) {
      label = 43;
      break L21;
     }
     $102 = HEAP32[$0 >> 2] | 0;
     $103 = $102 + 12 | 0;
     $104 = HEAP32[$103 >> 2] | 0;
     if (($104 | 0) == (HEAP32[$102 + 16 >> 2] | 0)) $$0$i$i178 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$102 >> 2] | 0) + 40 >> 2] & 255]($102) | 0; else {
      HEAP32[$103 >> 2] = $104 + 4;
      $$0$i$i178 = HEAP32[$104 >> 2] | 0;
     }
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23, $$0$i$i178);
     $$pre$i4$i$i187 = $715;
     $130 = $715;
     label = 45;
    }
    break;
   }
  case 0:
   {
    if (($$0133 | 0) == 3) $$1132 = $$0131; else {
     $$pre$i4$i$i187 = $715;
     $130 = $715;
     label = 45;
    }
    break;
   }
  case 3:
   {
    $171 = HEAP8[$41 >> 0] | 0;
    $175 = $171 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $171 & 255;
    $176 = HEAP8[$44 >> 0] | 0;
    $180 = $176 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $176 & 255;
    if (($175 | 0) == (0 - $180 | 0)) $$1132 = $$0131; else {
     $183 = ($175 | 0) == 0;
     $185 = HEAP32[$0 >> 2] | 0;
     $187 = HEAP32[$185 + 12 >> 2] | 0;
     $189 = HEAP32[$185 + 16 >> 2] | 0;
     $190 = ($187 | 0) == ($189 | 0);
     if ($183 | ($180 | 0) == 0) {
      if ($190) $$0$i$i218 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$185 >> 2] | 0) + 36 >> 2] & 255]($185) | 0; else $$0$i$i218 = HEAP32[$187 >> 2] | 0;
      if ($183) {
       $218 = HEAP8[$44 >> 0] | 0;
       if (($$0$i$i218 | 0) != (HEAP32[($218 << 24 >> 24 < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 2] | 0)) {
        $$1132 = $$0131;
        break L46;
       }
       $224 = HEAP32[$0 >> 2] | 0;
       $225 = $224 + 12 | 0;
       $226 = HEAP32[$225 >> 2] | 0;
       if (($226 | 0) == (HEAP32[$224 + 16 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$224 >> 2] | 0) + 40 >> 2] & 255]($224) | 0;
        $234 = HEAP8[$44 >> 0] | 0;
       } else {
        HEAP32[$225 >> 2] = $226 + 4;
        $234 = $218;
       }
       HEAP8[$6 >> 0] = 1;
       $$1132 = ($234 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $234 & 255) >>> 0 > 1 ? $22 : $$0131;
       break L46;
      }
      $196 = HEAP8[$41 >> 0] | 0;
      if (($$0$i$i218 | 0) != (HEAP32[($196 << 24 >> 24 < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 2] | 0)) {
       HEAP8[$6 >> 0] = 1;
       $$1132 = $$0131;
       break L46;
      }
      $202 = HEAP32[$0 >> 2] | 0;
      $203 = $202 + 12 | 0;
      $204 = HEAP32[$203 >> 2] | 0;
      if (($204 | 0) == (HEAP32[$202 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$202 >> 2] | 0) + 40 >> 2] & 255]($202) | 0;
       $212 = HEAP8[$41 >> 0] | 0;
      } else {
       HEAP32[$203 >> 2] = $204 + 4;
       $212 = $196;
      }
      $$1132 = ($212 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $212 & 255) >>> 0 > 1 ? $21 : $$0131;
      break L46;
     }
     if ($190) {
      $243 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$185 >> 2] | 0) + 36 >> 2] & 255]($185) | 0;
      $$pre383 = HEAP32[$0 >> 2] | 0;
      $$0$i$i241 = $243;
      $245 = HEAP8[$41 >> 0] | 0;
      $252 = $$pre383;
      $253 = HEAP32[$$pre383 + 12 >> 2] | 0;
      $255 = HEAP32[$$pre383 + 16 >> 2] | 0;
     } else {
      $$0$i$i241 = HEAP32[$187 >> 2] | 0;
      $245 = $171;
      $252 = $185;
      $253 = $187;
      $255 = $189;
     }
     $251 = $252 + 12 | 0;
     $254 = ($253 | 0) == ($255 | 0);
     if (($$0$i$i241 | 0) == (HEAP32[($245 << 24 >> 24 < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 2] | 0)) {
      if ($254) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$252 >> 2] | 0) + 40 >> 2] & 255]($252) | 0;
       $260 = HEAP8[$41 >> 0] | 0;
      } else {
       HEAP32[$251 >> 2] = $253 + 4;
       $260 = $245;
      }
      $$1132 = ($260 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $260 & 255) >>> 0 > 1 ? $21 : $$0131;
      break L46;
     }
     if ($254) $$0$i$i247 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$252 >> 2] | 0) + 36 >> 2] & 255]($252) | 0; else $$0$i$i247 = HEAP32[$253 >> 2] | 0;
     $271 = HEAP8[$44 >> 0] | 0;
     if (($$0$i$i247 | 0) != (HEAP32[($271 << 24 >> 24 < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 2] | 0)) {
      label = 101;
      break L21;
     }
     $277 = HEAP32[$0 >> 2] | 0;
     $278 = $277 + 12 | 0;
     $279 = HEAP32[$278 >> 2] | 0;
     if (($279 | 0) == (HEAP32[$277 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$277 >> 2] | 0) + 40 >> 2] & 255]($277) | 0;
      $287 = HEAP8[$44 >> 0] | 0;
     } else {
      HEAP32[$278 >> 2] = $279 + 4;
      $287 = $271;
     }
     HEAP8[$6 >> 0] = 1;
     $$1132 = ($287 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $287 & 255) >>> 0 > 1 ? $22 : $$0131;
    }
    break;
   }
  case 2:
   {
    if (!($$0133 >>> 0 < 2 | ($$0131 | 0) != 0)) if (!($47 | ($$0133 | 0) == 2 & (HEAP8[$54 >> 0] | 0) != 0)) {
     $$1132 = 0;
     break L46;
    }
    $301 = HEAP8[$49 >> 0] | 0;
    $303 = HEAP32[$20 >> 2] | 0;
    $305 = $301 << 24 >> 24 < 0 ? $303 : $20;
    L107 : do if (!$$0133) {
     $$pre$i4$i$i280 = $715;
     $$sroa$0297$0 = $305;
     $352 = $301;
     $356 = $303;
     $375 = $715;
    } else if ((HEAPU8[$16 + ($$0133 + -1) >> 0] | 0) < 2) {
     $$sroa$0317$0 = $305;
     $310 = $301;
     $314 = $303;
     while (1) {
      $311 = $310 << 24 >> 24 < 0;
      $318 = $$sroa$0317$0;
      if (($318 | 0) == (($311 ? $314 : $20) + (($311 ? HEAP32[$50 >> 2] | 0 : $310 & 255) << 2) | 0)) {
       $327 = $310;
       $329 = $314;
       break;
      }
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, HEAP32[$318 >> 2] | 0) | 0)) {
       label = 108;
       break;
      }
      $$sroa$0317$0 = $318 + 4 | 0;
      $310 = HEAP8[$49 >> 0] | 0;
      $314 = HEAP32[$20 >> 2] | 0;
     }
     if ((label | 0) == 108) {
      label = 0;
      $327 = HEAP8[$49 >> 0] | 0;
      $329 = HEAP32[$20 >> 2] | 0;
     }
     $330 = $327 << 24 >> 24 < 0 ? $329 : $20;
     $331 = $330;
     $333 = $$sroa$0317$0 - $331 >> 2;
     $334 = HEAP8[$52 >> 0] | 0;
     $335 = $334 << 24 >> 24 < 0;
     $338 = $335 ? HEAP32[$53 >> 2] | 0 : $334 & 255;
     if ($333 >>> 0 > $338 >>> 0) {
      $$pre$i4$i$i280 = $715;
      $$sroa$0297$0 = $331;
      $352 = $327;
      $356 = $329;
      $375 = $715;
     } else {
      $342 = ($335 ? HEAP32[$23 >> 2] | 0 : $23) + ($338 << 2) | 0;
      $$sink = $330;
      $345 = $342 + (0 - $333 << 2) | 0;
      while (1) {
       if (($345 | 0) == ($342 | 0)) {
        $$pre$i4$i$i280 = $715;
        $$sroa$0297$0 = $$sroa$0317$0;
        $352 = $327;
        $356 = $329;
        $375 = $715;
        break L107;
       }
       if ((HEAP32[$345 >> 2] | 0) != (HEAP32[$$sink >> 2] | 0)) {
        $$pre$i4$i$i280 = $715;
        $$sroa$0297$0 = $331;
        $352 = $327;
        $356 = $329;
        $375 = $715;
        break L107;
       }
       $$sink = $$sink + 4 | 0;
       $345 = $345 + 4 | 0;
      }
     }
    } else {
     $$pre$i4$i$i280 = $715;
     $$sroa$0297$0 = $305;
     $352 = $301;
     $356 = $303;
     $375 = $715;
    } while (0);
    L121 : while (1) {
     $353 = $352 << 24 >> 24 < 0;
     $359 = ($353 ? $356 : $20) + (($353 ? HEAP32[$50 >> 2] | 0 : $352 & 255) << 2) | 0;
     $360 = $$sroa$0297$0;
     if (($360 | 0) == ($359 | 0)) {
      $$lcssa = $359;
      break;
     }
     $362 = HEAP32[$0 >> 2] | 0;
     do if (!$362) $388 = 1; else {
      $365 = HEAP32[$362 + 12 >> 2] | 0;
      if (($365 | 0) == (HEAP32[$362 + 16 >> 2] | 0)) $$0$i$i$i$i272 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$362 >> 2] | 0) + 36 >> 2] & 255]($362) | 0; else $$0$i$i$i$i272 = HEAP32[$365 >> 2] | 0;
      if (($$0$i$i$i$i272 | 0) == -1) {
       HEAP32[$0 >> 2] = 0;
       $388 = 1;
       break;
      } else {
       $388 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$375) {
      $$pre$i4$i$i280380 = $$pre$i4$i$i280;
      label = 129;
     } else {
      $378 = HEAP32[$375 + 12 >> 2] | 0;
      if (($378 | 0) == (HEAP32[$375 + 16 >> 2] | 0)) $$0$i$i2$i$i278 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$375 >> 2] | 0) + 36 >> 2] & 255]($375) | 0; else $$0$i$i2$i$i278 = HEAP32[$378 >> 2] | 0;
      if (($$0$i$i2$i$i278 | 0) == -1) {
       HEAP32[$1 >> 2] = 0;
       $$pre$i4$i$i280380 = 0;
       label = 129;
       break;
      } else if ($388 ^ ($$pre$i4$i$i280 | 0) == 0) {
       $$pre$i4$i$i280379 = $$pre$i4$i$i280;
       $717 = $$pre$i4$i$i280;
       break;
      } else {
       $$lcssa = $360;
       break L121;
      }
     } while (0);
     if ((label | 0) == 129) {
      label = 0;
      if ($388) {
       $$lcssa = $360;
       break;
      } else {
       $$pre$i4$i$i280379 = $$pre$i4$i$i280380;
       $717 = 0;
      }
     }
     $389 = HEAP32[$0 >> 2] | 0;
     $391 = HEAP32[$389 + 12 >> 2] | 0;
     if (($391 | 0) == (HEAP32[$389 + 16 >> 2] | 0)) $$0$i$i269 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$389 >> 2] | 0) + 36 >> 2] & 255]($389) | 0; else $$0$i$i269 = HEAP32[$391 >> 2] | 0;
     if (($$0$i$i269 | 0) != (HEAP32[$360 >> 2] | 0)) {
      $$lcssa = $360;
      break;
     }
     $402 = HEAP32[$0 >> 2] | 0;
     $403 = $402 + 12 | 0;
     $404 = HEAP32[$403 >> 2] | 0;
     if (($404 | 0) == (HEAP32[$402 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$402 >> 2] | 0) + 40 >> 2] & 255]($402) | 0; else HEAP32[$403 >> 2] = $404 + 4;
     $$pre$i4$i$i280 = $$pre$i4$i$i280379;
     $$sroa$0297$0 = $360 + 4 | 0;
     $352 = HEAP8[$49 >> 0] | 0;
     $356 = HEAP32[$20 >> 2] | 0;
     $375 = $717;
    }
    if ($47) {
     $414 = HEAP8[$49 >> 0] | 0;
     $415 = $414 << 24 >> 24 < 0;
     if (($$lcssa | 0) == (($415 ? HEAP32[$20 >> 2] | 0 : $20) + (($415 ? HEAP32[$50 >> 2] | 0 : $414 & 255) << 2) | 0)) $$1132 = $$0131; else {
      label = 141;
      break L21;
     }
    } else $$1132 = $$0131;
    break;
   }
  case 4:
   {
    $$0126 = 0;
    $$pre$i4$i$i262 = $715;
    $438 = $715;
    L157 : while (1) {
     $425 = HEAP32[$0 >> 2] | 0;
     do if (!$425) $451 = 1; else {
      $428 = HEAP32[$425 + 12 >> 2] | 0;
      if (($428 | 0) == (HEAP32[$425 + 16 >> 2] | 0)) $$0$i$i$i$i254 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$425 >> 2] | 0) + 36 >> 2] & 255]($425) | 0; else $$0$i$i$i$i254 = HEAP32[$428 >> 2] | 0;
      if (($$0$i$i$i$i254 | 0) == -1) {
       HEAP32[$0 >> 2] = 0;
       $451 = 1;
       break;
      } else {
       $451 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$438) {
      $$pre$i4$i$i262366 = $$pre$i4$i$i262;
      label = 155;
     } else {
      $441 = HEAP32[$438 + 12 >> 2] | 0;
      if (($441 | 0) == (HEAP32[$438 + 16 >> 2] | 0)) $$0$i$i2$i$i260 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$438 >> 2] | 0) + 36 >> 2] & 255]($438) | 0; else $$0$i$i2$i$i260 = HEAP32[$441 >> 2] | 0;
      if (($$0$i$i2$i$i260 | 0) == -1) {
       HEAP32[$1 >> 2] = 0;
       $$pre$i4$i$i262366 = 0;
       label = 155;
       break;
      } else if ($451 ^ ($$pre$i4$i$i262 | 0) == 0) {
       $$pre$i4$i$i262368 = $$pre$i4$i$i262;
       $718 = $$pre$i4$i$i262;
       break;
      } else {
       $$pre$i4$i$i234 = $$pre$i4$i$i262;
       break L157;
      }
     } while (0);
     if ((label | 0) == 155) {
      label = 0;
      if ($451) {
       $$pre$i4$i$i234 = $$pre$i4$i$i262366;
       break;
      } else {
       $$pre$i4$i$i262368 = $$pre$i4$i$i262366;
       $718 = 0;
      }
     }
     $452 = HEAP32[$0 >> 2] | 0;
     $454 = HEAP32[$452 + 12 >> 2] | 0;
     if (($454 | 0) == (HEAP32[$452 + 16 >> 2] | 0)) $$0$i$i252 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$452 >> 2] | 0) + 36 >> 2] & 255]($452) | 0; else $$0$i$i252 = HEAP32[$454 >> 2] | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 2048, $$0$i$i252) | 0) {
      $467 = HEAP32[$9 >> 2] | 0;
      if (($467 | 0) == (HEAP32[$11 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
       $471 = HEAP32[$9 >> 2] | 0;
      } else $471 = $467;
      HEAP32[$9 >> 2] = $471 + 4;
      HEAP32[$471 >> 2] = $$0$i$i252;
      $$2128$ph = $$0126 + 1 | 0;
     } else {
      $473 = HEAP8[$55 >> 0] | 0;
      if (!(($$0$i$i252 | 0) == (HEAP32[$18 >> 2] | 0) & ($$0126 | 0 ? (($473 << 24 >> 24 < 0 ? HEAP32[$56 >> 2] | 0 : $473 & 255) | 0) != 0 : 0))) {
       $$pre$i4$i$i234 = $$pre$i4$i$i262368;
       break;
      }
      $482 = HEAP32[$14 >> 2] | 0;
      if (($482 | 0) == (HEAP32[$15 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
       $486 = HEAP32[$14 >> 2] | 0;
      } else $486 = $482;
      HEAP32[$14 >> 2] = $486 + 4;
      HEAP32[$486 >> 2] = $$0126;
      $$2128$ph = 0;
     }
     $487 = HEAP32[$0 >> 2] | 0;
     $488 = $487 + 12 | 0;
     $489 = HEAP32[$488 >> 2] | 0;
     if (($489 | 0) == (HEAP32[$487 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$487 >> 2] | 0) + 40 >> 2] & 255]($487) | 0;
      $$0126 = $$2128$ph;
      $$pre$i4$i$i262 = $$pre$i4$i$i262368;
      $438 = $718;
      continue;
     } else {
      HEAP32[$488 >> 2] = $489 + 4;
      $$0126 = $$2128$ph;
      $$pre$i4$i$i262 = $$pre$i4$i$i262368;
      $438 = $718;
      continue;
     }
    }
    $498 = HEAP32[$14 >> 2] | 0;
    if ($$0126 | 0 ? (HEAP32[$13 >> 2] | 0) != ($498 | 0) : 0) {
     if (($498 | 0) == (HEAP32[$15 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
      $504 = HEAP32[$14 >> 2] | 0;
     } else $504 = $498;
     HEAP32[$14 >> 2] = $504 + 4;
     HEAP32[$504 >> 2] = $$0126;
    }
    L206 : do if ((HEAP32[$24 >> 2] | 0) > 0) {
     $507 = HEAP32[$0 >> 2] | 0;
     do if (!$507) $719 = 1; else {
      $510 = HEAP32[$507 + 12 >> 2] | 0;
      if (($510 | 0) == (HEAP32[$507 + 16 >> 2] | 0)) $$0$i$i$i$i226 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$507 >> 2] | 0) + 36 >> 2] & 255]($507) | 0; else $$0$i$i$i$i226 = HEAP32[$510 >> 2] | 0;
      if (($$0$i$i$i$i226 | 0) == -1) {
       HEAP32[$0 >> 2] = 0;
       $719 = 1;
       break;
      } else {
       $719 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$$pre$i4$i$i234) label = 189; else {
      $522 = HEAP32[$$pre$i4$i$i234 + 12 >> 2] | 0;
      if (($522 | 0) == (HEAP32[$$pre$i4$i$i234 + 16 >> 2] | 0)) $$0$i$i2$i$i232 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i234 >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i234) | 0; else $$0$i$i2$i$i232 = HEAP32[$522 >> 2] | 0;
      if (($$0$i$i2$i$i232 | 0) == -1) {
       HEAP32[$1 >> 2] = 0;
       label = 189;
       break;
      } else if ($719) {
       $720 = $$pre$i4$i$i234;
       break;
      } else {
       label = 195;
       break L21;
      }
     } while (0);
     if ((label | 0) == 189) {
      label = 0;
      if ($719) {
       label = 195;
       break L21;
      } else $720 = 0;
     }
     $532 = HEAP32[$0 >> 2] | 0;
     $534 = HEAP32[$532 + 12 >> 2] | 0;
     if (($534 | 0) == (HEAP32[$532 + 16 >> 2] | 0)) $$0$i$i223 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$532 >> 2] | 0) + 36 >> 2] & 255]($532) | 0; else $$0$i$i223 = HEAP32[$534 >> 2] | 0;
     if (($$0$i$i223 | 0) != (HEAP32[$17 >> 2] | 0)) {
      label = 195;
      break L21;
     }
     $547 = HEAP32[$0 >> 2] | 0;
     $548 = $547 + 12 | 0;
     $549 = HEAP32[$548 >> 2] | 0;
     if (($549 | 0) == (HEAP32[$547 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$547 >> 2] | 0) + 40 >> 2] & 255]($547) | 0;
      $$pre$i4$i$i212 = $720;
      $572 = $720;
     } else {
      HEAP32[$548 >> 2] = $549 + 4;
      $$pre$i4$i$i212 = $720;
      $572 = $720;
     }
     while (1) {
      if ((HEAP32[$24 >> 2] | 0) <= 0) break L206;
      $559 = HEAP32[$0 >> 2] | 0;
      do if (!$559) $585 = 1; else {
       $562 = HEAP32[$559 + 12 >> 2] | 0;
       if (($562 | 0) == (HEAP32[$559 + 16 >> 2] | 0)) $$0$i$i$i$i204 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$559 >> 2] | 0) + 36 >> 2] & 255]($559) | 0; else $$0$i$i$i$i204 = HEAP32[$562 >> 2] | 0;
       if (($$0$i$i$i$i204 | 0) == -1) {
        HEAP32[$0 >> 2] = 0;
        $585 = 1;
        break;
       } else {
        $585 = (HEAP32[$0 >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$572) {
       $$pre$i4$i$i212371$ph = $$pre$i4$i$i212;
       label = 213;
      } else {
       $575 = HEAP32[$572 + 12 >> 2] | 0;
       if (($575 | 0) == (HEAP32[$572 + 16 >> 2] | 0)) $$0$i$i2$i$i210 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$572 >> 2] | 0) + 36 >> 2] & 255]($572) | 0; else $$0$i$i2$i$i210 = HEAP32[$575 >> 2] | 0;
       if (($$0$i$i2$i$i210 | 0) == -1) {
        HEAP32[$1 >> 2] = 0;
        $$pre$i4$i$i212371$ph = 0;
        label = 213;
        break;
       } else if ($585 ^ ($$pre$i4$i$i212 | 0) == 0) {
        $$pre$i4$i$i212371396 = $$pre$i4$i$i212;
        $721 = $$pre$i4$i$i212;
        break;
       } else {
        label = 219;
        break L21;
       }
      } while (0);
      if ((label | 0) == 213) {
       label = 0;
       if ($585) {
        label = 219;
        break L21;
       } else {
        $$pre$i4$i$i212371396 = $$pre$i4$i$i212371$ph;
        $721 = 0;
       }
      }
      $586 = HEAP32[$0 >> 2] | 0;
      $588 = HEAP32[$586 + 12 >> 2] | 0;
      if (($588 | 0) == (HEAP32[$586 + 16 >> 2] | 0)) $$0$i$i201 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$586 >> 2] | 0) + 36 >> 2] & 255]($586) | 0; else $$0$i$i201 = HEAP32[$588 >> 2] | 0;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 2048, $$0$i$i201) | 0)) {
       label = 219;
       break L21;
      }
      if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$11 >> 2] | 0)) __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
      $606 = HEAP32[$0 >> 2] | 0;
      $608 = HEAP32[$606 + 12 >> 2] | 0;
      if (($608 | 0) == (HEAP32[$606 + 16 >> 2] | 0)) $$0$i$i162 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$606 >> 2] | 0) + 36 >> 2] & 255]($606) | 0; else $$0$i$i162 = HEAP32[$608 >> 2] | 0;
      $617 = HEAP32[$9 >> 2] | 0;
      HEAP32[$9 >> 2] = $617 + 4;
      HEAP32[$617 >> 2] = $$0$i$i162;
      HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -1;
      $621 = HEAP32[$0 >> 2] | 0;
      $622 = $621 + 12 | 0;
      $623 = HEAP32[$622 >> 2] | 0;
      if (($623 | 0) == (HEAP32[$621 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$621 >> 2] | 0) + 40 >> 2] & 255]($621) | 0;
       $$pre$i4$i$i212 = $$pre$i4$i$i212371396;
       $572 = $721;
       continue;
      } else {
       HEAP32[$622 >> 2] = $623 + 4;
       $$pre$i4$i$i212 = $$pre$i4$i$i212371396;
       $572 = $721;
       continue;
      }
     }
    } while (0);
    if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$8 >> 2] | 0)) {
     label = 229;
     break L21;
    } else $$1132 = $$0131;
    break;
   }
  default:
   $$1132 = $$0131;
  } while (0);
  L279 : do if ((label | 0) == 45) while (1) {
   label = 0;
   $117 = HEAP32[$0 >> 2] | 0;
   do if (!$117) $143 = 1; else {
    $120 = HEAP32[$117 + 12 >> 2] | 0;
    if (($120 | 0) == (HEAP32[$117 + 16 >> 2] | 0)) $$0$i$i$i$i179 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$117 >> 2] | 0) + 36 >> 2] & 255]($117) | 0; else $$0$i$i$i$i179 = HEAP32[$120 >> 2] | 0;
    if (($$0$i$i$i$i179 | 0) == -1) {
     HEAP32[$0 >> 2] = 0;
     $143 = 1;
     break;
    } else {
     $143 = (HEAP32[$0 >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$130) {
    $$pre$i4$i$i187391 = $$pre$i4$i$i187;
    label = 58;
   } else {
    $133 = HEAP32[$130 + 12 >> 2] | 0;
    if (($133 | 0) == (HEAP32[$130 + 16 >> 2] | 0)) $$0$i$i2$i$i185 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 36 >> 2] & 255]($130) | 0; else $$0$i$i2$i$i185 = HEAP32[$133 >> 2] | 0;
    if (($$0$i$i2$i$i185 | 0) == -1) {
     HEAP32[$1 >> 2] = 0;
     $$pre$i4$i$i187391 = 0;
     label = 58;
     break;
    } else if ($143 ^ ($$pre$i4$i$i187 | 0) == 0) {
     $$pre$i4$i$i187393 = $$pre$i4$i$i187;
     $716 = $$pre$i4$i$i187;
     break;
    } else {
     $$1132 = $$0131;
     break L279;
    }
   } while (0);
   if ((label | 0) == 58) {
    label = 0;
    if ($143) {
     $$1132 = $$0131;
     break L279;
    } else {
     $$pre$i4$i$i187393 = $$pre$i4$i$i187391;
     $716 = 0;
    }
   }
   $144 = HEAP32[$0 >> 2] | 0;
   $146 = HEAP32[$144 + 12 >> 2] | 0;
   if (($146 | 0) == (HEAP32[$144 + 16 >> 2] | 0)) $$0$i$i192 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$144 >> 2] | 0) + 36 >> 2] & 255]($144) | 0; else $$0$i$i192 = HEAP32[$146 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, $$0$i$i192) | 0)) {
    $$1132 = $$0131;
    break L279;
   }
   $159 = HEAP32[$0 >> 2] | 0;
   $160 = $159 + 12 | 0;
   $161 = HEAP32[$160 >> 2] | 0;
   if (($161 | 0) == (HEAP32[$159 + 16 >> 2] | 0)) $$0$i$i196 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$159 >> 2] | 0) + 40 >> 2] & 255]($159) | 0; else {
    HEAP32[$160 >> 2] = $161 + 4;
    $$0$i$i196 = HEAP32[$161 >> 2] | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23, $$0$i$i196);
   $$pre$i4$i$i187 = $$pre$i4$i$i187393;
   $130 = $716;
   label = 45;
  } while (0);
  $$0131 = $$1132;
  $$0133 = $$0133 + 1 | 0;
 }
 L314 : do if ((label | 0) == 43) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 101) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 141) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 195) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 219) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 229) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 231) {
  L316 : do if ($$0131 | 0) {
   $639 = $$0131 + 8 + 3 | 0;
   $640 = $$0131 + 4 | 0;
   $$0 = 1;
   L318 : while (1) {
    $641 = HEAP8[$639 >> 0] | 0;
    if ($641 << 24 >> 24 < 0) $646 = HEAP32[$640 >> 2] | 0; else $646 = $641 & 255;
    if ($$0 >>> 0 >= $646 >>> 0) break L316;
    $647 = HEAP32[$0 >> 2] | 0;
    do if (!$647) $722 = 1; else {
     $650 = HEAP32[$647 + 12 >> 2] | 0;
     if (($650 | 0) == (HEAP32[$647 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$647 >> 2] | 0) + 36 >> 2] & 255]($647) | 0; else $$0$i$i$i$i = HEAP32[$650 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$0 >> 2] = 0;
      $722 = 1;
      break;
     } else {
      $722 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $660 = HEAP32[$1 >> 2] | 0;
    do if (!$660) label = 250; else {
     $663 = HEAP32[$660 + 12 >> 2] | 0;
     if (($663 | 0) == (HEAP32[$660 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$660 >> 2] | 0) + 36 >> 2] & 255]($660) | 0; else $$0$i$i2$i$i = HEAP32[$663 >> 2] | 0;
     if (($$0$i$i2$i$i | 0) == -1) {
      HEAP32[$1 >> 2] = 0;
      label = 250;
      break;
     } else if ($722) break; else break L318;
    } while (0);
    if ((label | 0) == 250) {
     label = 0;
     if ($722) break;
    }
    $673 = HEAP32[$0 >> 2] | 0;
    $675 = HEAP32[$673 + 12 >> 2] | 0;
    if (($675 | 0) == (HEAP32[$673 + 16 >> 2] | 0)) $$0$i$i151 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$673 >> 2] | 0) + 36 >> 2] & 255]($673) | 0; else $$0$i$i151 = HEAP32[$675 >> 2] | 0;
    if ((HEAP8[$639 >> 0] | 0) < 0) $688 = HEAP32[$$0131 >> 2] | 0; else $688 = $$0131;
    if (($$0$i$i151 | 0) != (HEAP32[$688 + ($$0 << 2) >> 2] | 0)) break;
    $693 = $$0 + 1 | 0;
    $694 = HEAP32[$0 >> 2] | 0;
    $695 = $694 + 12 | 0;
    $696 = HEAP32[$695 >> 2] | 0;
    if (($696 | 0) == (HEAP32[$694 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$694 >> 2] | 0) + 40 >> 2] & 255]($694) | 0;
     $$0 = $693;
     continue;
    } else {
     HEAP32[$695 >> 2] = $696 + 4;
     $$0 = $693;
     continue;
    }
   }
   HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
   $$10 = 0;
   break L314;
  } while (0);
  $704 = HEAP32[$13 >> 2] | 0;
  $705 = HEAP32[$14 >> 2] | 0;
  if (($704 | 0) == ($705 | 0)) $$10 = 1; else {
   HEAP32[$25 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19, $704, $705, $25);
   if (!(HEAP32[$25 >> 2] | 0)) {
    $$10 = 1;
    break;
   } else {
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
    $$10 = 0;
    break;
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($23);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($22);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($21);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $711 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = 0;
 if ($711 | 0) FUNCTION_TABLE_vi[HEAP32[$27 >> 2] & 255]($711);
 STACKTOP = sp;
 return $$10 | 0;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i147 = 0, $$0$i$i150 = 0, $$0$i$i151 = 0, $$0$i$i154 = 0, $$0$i$i157 = 0, $$0$i$i161 = 0, $$0$i$i171 = 0, $$0$i$i173 = 0, $$0$i$i183 = 0, $$0$i$i189 = 0, $$0$i$i193 = 0, $$0$i$i209 = 0, $$0$i$i221 = 0, $$0$i$i229 = 0, $$0$i$i237 = 0, $$0$i$i239 = 0, $$0$i$i254 = 0, $$0124 = 0, $$0129 = 0, $$0131 = 0, $$10 = 0, $$1130 = 0, $$2126$ph = 0, $$lcssa = 0, $$pre$i3$i$i179 = 0, $$pre$i3$i$i179378 = 0, $$pre$i3$i$i179380 = 0, $$pre$i3$i$i201 = 0, $$pre$i3$i$i201362$ph = 0, $$pre$i3$i$i201362383 = 0, $$pre$i3$i$i217 = 0, $$pre$i3$i$i247 = 0, $$pre$i3$i$i247357 = 0, $$pre$i3$i$i247359 = 0, $$pre$i3$i$i262 = 0, $$pre$i3$i$i262366 = 0, $$pre$i3$i$i262367 = 0, $$pre370 = 0, $$sink = 0, $$sroa$0281$0 = 0, $$sroa$0301$0 = 0, $103 = 0, $104 = 0, $105 = 0, $11 = 0, $12 = 0, $120 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $147 = 0, $149 = 0, $15 = 0, $16 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $180 = 0, $184 = 0, $185 = 0, $189 = 0, $19 = 0, $192 = 0, $194 = 0, $196 = 0, $198 = 0, $199 = 0, $20 = 0, $206 = 0, $207 = 0, $21 = 0, $213 = 0, $214 = 0, $215 = 0, $22 = 0, $223 = 0, $229 = 0, $23 = 0, $235 = 0, $236 = 0, $237 = 0, $24 = 0, $245 = 0, $25 = 0, $254 = 0, $258 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $27 = 0, $273 = 0, $286 = 0, $292 = 0, $293 = 0, $294 = 0, $302 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $328 = 0, $329 = 0, $331 = 0, $340 = 0, $341 = 0, $342 = 0, $345 = 0, $349 = 0, $352 = 0, $359 = 0, $360 = 0, $363 = 0, $366 = 0, $367 = 0, $369 = 0, $381 = 0, $382 = 0, $383 = 0, $396 = 0, $398 = 0, $40 = 0, $41 = 0, $411 = 0, $412 = 0, $413 = 0, $42 = 0, $423 = 0, $424 = 0, $43 = 0, $434 = 0, $44 = 0, $446 = 0, $447 = 0, $448 = 0, $46 = 0, $461 = 0, $463 = 0, $47 = 0, $473 = 0, $48 = 0, $480 = 0, $484 = 0, $486 = 0, $49 = 0, $495 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $51 = 0, $511 = 0, $517 = 0, $52 = 0, $520 = 0, $53 = 0, $532 = 0, $533 = 0, $545 = 0, $547 = 0, $55 = 0, $562 = 0, $563 = 0, $564 = 0, $574 = 0, $586 = 0, $587 = 0, $588 = 0, $601 = 0, $603 = 0, $625 = 0, $627 = 0, $638 = 0, $642 = 0, $643 = 0, $644 = 0, $659 = 0, $660 = 0, $661 = 0, $666 = 0, $667 = 0, $67 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $69 = 0, $693 = 0, $695 = 0, $710 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $726 = 0, $727 = 0, $733 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $740 = 0, $741 = 0, $84 = 0, $86 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $11 = sp + 88 | 0;
 $12 = sp + 96 | 0;
 $13 = sp + 80 | 0;
 $14 = sp + 72 | 0;
 $15 = sp + 68 | 0;
 $16 = sp + 500 | 0;
 $17 = sp + 497 | 0;
 $18 = sp + 496 | 0;
 $19 = sp + 56 | 0;
 $20 = sp + 44 | 0;
 $21 = sp + 32 | 0;
 $22 = sp + 20 | 0;
 $23 = sp + 8 | 0;
 $24 = sp + 4 | 0;
 $25 = sp;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$13 >> 2] = $12;
 $27 = $13 + 4 | 0;
 HEAP32[$27 >> 2] = 187;
 HEAP32[$14 >> 2] = $12;
 HEAP32[$15 >> 2] = $12 + 400;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$19 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 $$0$i$i147 = 0;
 while (1) {
  if (($$0$i$i147 | 0) == 3) break;
  HEAP32[$20 + ($$0$i$i147 << 2) >> 2] = 0;
  $$0$i$i147 = $$0$i$i147 + 1 | 0;
 }
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 $$0$i$i151 = 0;
 while (1) {
  if (($$0$i$i151 | 0) == 3) break;
  HEAP32[$21 + ($$0$i$i151 << 2) >> 2] = 0;
  $$0$i$i151 = $$0$i$i151 + 1 | 0;
 }
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $$0$i$i154 = 0;
 while (1) {
  if (($$0$i$i154 | 0) == 3) break;
  HEAP32[$22 + ($$0$i$i154 << 2) >> 2] = 0;
  $$0$i$i154 = $$0$i$i154 + 1 | 0;
 }
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = 0;
 $$0$i$i157 = 0;
 while (1) {
  if (($$0$i$i157 | 0) == 3) break;
  HEAP32[$23 + ($$0$i$i157 << 2) >> 2] = 0;
  $$0$i$i157 = $$0$i$i157 + 1 | 0;
 }
 __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($2, $3, $16, $17, $18, $19, $20, $21, $22, $24);
 HEAP32[$9 >> 2] = HEAP32[$8 >> 2];
 $40 = $7 + 8 | 0;
 $41 = $21 + 11 | 0;
 $42 = $21 + 4 | 0;
 $43 = $22 + 11 | 0;
 $44 = $22 + 4 | 0;
 $46 = ($4 & 512 | 0) != 0;
 $47 = $20 + 11 | 0;
 $48 = $20 + 4 | 0;
 $49 = $23 + 11 | 0;
 $50 = $23 + 4 | 0;
 $51 = $16 + 3 | 0;
 $52 = $19 + 11 | 0;
 $53 = $19 + 4 | 0;
 $$0129 = 0;
 $$0131 = 0;
 L21 : while (1) {
  if ($$0131 >>> 0 >= 4) {
   label = 217;
   break;
  }
  $55 = HEAP32[$0 >> 2] | 0;
  do if (!$55) $67 = 0; else if ((HEAP32[$55 + 12 >> 2] | 0) == (HEAP32[$55 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 36 >> 2] & 255]($55) | 0) == -1) {
   HEAP32[$0 >> 2] = 0;
   $67 = 0;
   break;
  } else {
   $67 = HEAP32[$0 >> 2] | 0;
   break;
  } else $67 = $55; while (0);
  $68 = ($67 | 0) == 0;
  $69 = HEAP32[$1 >> 2] | 0;
  do if (!$69) label = 28; else {
   if ((HEAP32[$69 + 12 >> 2] | 0) != (HEAP32[$69 + 16 >> 2] | 0)) if ($68) {
    $736 = $69;
    break;
   } else {
    label = 217;
    break L21;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$69 >> 2] | 0) + 36 >> 2] & 255]($69) | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    label = 28;
    break;
   } else if ($68) {
    $736 = $69;
    break;
   } else {
    label = 217;
    break L21;
   }
  } while (0);
  if ((label | 0) == 28) {
   label = 0;
   if ($68) {
    label = 217;
    break;
   } else $736 = 0;
  }
  L42 : do switch (HEAP8[$16 + $$0131 >> 0] | 0) {
  case 1:
   {
    if (($$0131 | 0) == 3) $$1130 = $$0129; else {
     $84 = HEAP32[$0 >> 2] | 0;
     $86 = HEAP32[$84 + 12 >> 2] | 0;
     if (($86 | 0) == (HEAP32[$84 + 16 >> 2] | 0)) $$0$i$i171 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$84 >> 2] | 0) + 36 >> 2] & 255]($84) | 0; else $$0$i$i171 = HEAPU8[$86 >> 0] | 0;
     if (($$0$i$i171 & 255) << 24 >> 24 <= -1) {
      label = 41;
      break L21;
     }
     if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i171 << 24 >> 24 << 1) >> 1] & 8192)) {
      label = 41;
      break L21;
     }
     $103 = HEAP32[$0 >> 2] | 0;
     $104 = $103 + 12 | 0;
     $105 = HEAP32[$104 >> 2] | 0;
     if (($105 | 0) == (HEAP32[$103 + 16 >> 2] | 0)) $$0$i$i173 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$103 >> 2] | 0) + 40 >> 2] & 255]($103) | 0; else {
      HEAP32[$104 >> 2] = $105 + 1;
      $$0$i$i173 = HEAPU8[$105 >> 0] | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23, $$0$i$i173 & 255);
     $$pre$i3$i$i179 = $736;
     $134 = $736;
     label = 43;
    }
    break;
   }
  case 0:
   {
    if (($$0131 | 0) == 3) $$1130 = $$0129; else {
     $$pre$i3$i$i179 = $736;
     $134 = $736;
     label = 43;
    }
    break;
   }
  case 3:
   {
    $180 = HEAP8[$41 >> 0] | 0;
    $184 = $180 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $180 & 255;
    $185 = HEAP8[$43 >> 0] | 0;
    $189 = $185 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $185 & 255;
    if (($184 | 0) == (0 - $189 | 0)) $$1130 = $$0129; else {
     $192 = ($184 | 0) == 0;
     $194 = HEAP32[$0 >> 2] | 0;
     $196 = HEAP32[$194 + 12 >> 2] | 0;
     $198 = HEAP32[$194 + 16 >> 2] | 0;
     $199 = ($196 | 0) == ($198 | 0);
     if ($192 | ($189 | 0) == 0) {
      if ($199) $$0$i$i221 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$194 >> 2] | 0) + 36 >> 2] & 255]($194) | 0; else $$0$i$i221 = HEAPU8[$196 >> 0] | 0;
      $206 = $$0$i$i221 & 255;
      if ($192) {
       $229 = HEAP8[$43 >> 0] | 0;
       if ($206 << 24 >> 24 != (HEAP8[($229 << 24 >> 24 < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 0] | 0)) {
        $$1130 = $$0129;
        break L42;
       }
       $235 = HEAP32[$0 >> 2] | 0;
       $236 = $235 + 12 | 0;
       $237 = HEAP32[$236 >> 2] | 0;
       if (($237 | 0) == (HEAP32[$235 + 16 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$235 >> 2] | 0) + 40 >> 2] & 255]($235) | 0;
        $245 = HEAP8[$43 >> 0] | 0;
       } else {
        HEAP32[$236 >> 2] = $237 + 1;
        $245 = $229;
       }
       HEAP8[$6 >> 0] = 1;
       $$1130 = ($245 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $245 & 255) >>> 0 > 1 ? $22 : $$0129;
       break L42;
      }
      $207 = HEAP8[$41 >> 0] | 0;
      if ($206 << 24 >> 24 != (HEAP8[($207 << 24 >> 24 < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 0] | 0)) {
       HEAP8[$6 >> 0] = 1;
       $$1130 = $$0129;
       break L42;
      }
      $213 = HEAP32[$0 >> 2] | 0;
      $214 = $213 + 12 | 0;
      $215 = HEAP32[$214 >> 2] | 0;
      if (($215 | 0) == (HEAP32[$213 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$213 >> 2] | 0) + 40 >> 2] & 255]($213) | 0;
       $223 = HEAP8[$41 >> 0] | 0;
      } else {
       HEAP32[$214 >> 2] = $215 + 1;
       $223 = $207;
      }
      $$1130 = ($223 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $223 & 255) >>> 0 > 1 ? $21 : $$0129;
      break L42;
     }
     if ($199) {
      $254 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$194 >> 2] | 0) + 36 >> 2] & 255]($194) | 0;
      $$pre370 = HEAP32[$0 >> 2] | 0;
      $$0$i$i229 = $254;
      $258 = HEAP8[$41 >> 0] | 0;
      $265 = $$pre370;
      $266 = HEAP32[$$pre370 + 12 >> 2] | 0;
      $268 = HEAP32[$$pre370 + 16 >> 2] | 0;
     } else {
      $$0$i$i229 = HEAPU8[$196 >> 0] | 0;
      $258 = $180;
      $265 = $194;
      $266 = $196;
      $268 = $198;
     }
     $264 = $265 + 12 | 0;
     $267 = ($266 | 0) == ($268 | 0);
     if (($$0$i$i229 & 255) << 24 >> 24 == (HEAP8[($258 << 24 >> 24 < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 0] | 0)) {
      if ($267) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$265 >> 2] | 0) + 40 >> 2] & 255]($265) | 0;
       $273 = HEAP8[$41 >> 0] | 0;
      } else {
       HEAP32[$264 >> 2] = $266 + 1;
       $273 = $258;
      }
      $$1130 = ($273 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $273 & 255) >>> 0 > 1 ? $21 : $$0129;
      break L42;
     }
     if ($267) $$0$i$i239 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$265 >> 2] | 0) + 36 >> 2] & 255]($265) | 0; else $$0$i$i239 = HEAPU8[$266 >> 0] | 0;
     $286 = HEAP8[$43 >> 0] | 0;
     if (($$0$i$i239 & 255) << 24 >> 24 != (HEAP8[($286 << 24 >> 24 < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 0] | 0)) {
      label = 97;
      break L21;
     }
     $292 = HEAP32[$0 >> 2] | 0;
     $293 = $292 + 12 | 0;
     $294 = HEAP32[$293 >> 2] | 0;
     if (($294 | 0) == (HEAP32[$292 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$292 >> 2] | 0) + 40 >> 2] & 255]($292) | 0;
      $302 = HEAP8[$43 >> 0] | 0;
     } else {
      HEAP32[$293 >> 2] = $294 + 1;
      $302 = $286;
     }
     HEAP8[$6 >> 0] = 1;
     $$1130 = ($302 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $302 & 255) >>> 0 > 1 ? $22 : $$0129;
    }
    break;
   }
  case 2:
   {
    if (!($$0131 >>> 0 < 2 | ($$0129 | 0) != 0)) if (!($46 | ($$0131 | 0) == 2 & (HEAP8[$51 >> 0] | 0) != 0)) {
     $$1130 = 0;
     break L42;
    }
    $316 = HEAP8[$47 >> 0] | 0;
    $317 = $316 << 24 >> 24 < 0;
    $318 = HEAP32[$20 >> 2] | 0;
    $319 = $317 ? $318 : $20;
    $320 = $319;
    L104 : do if (!$$0131) {
     $$pre$i3$i$i262 = $736;
     $$sroa$0281$0 = $320;
     $359 = $316;
     $363 = $318;
     $383 = $736;
    } else if ((HEAPU8[$16 + ($$0131 + -1) >> 0] | 0) < 2) {
     $328 = $319 + ($317 ? HEAP32[$48 >> 2] | 0 : $316 & 255) | 0;
     $$sroa$0301$0 = $320;
     while (1) {
      $329 = $$sroa$0301$0;
      if (($329 | 0) == ($328 | 0)) break;
      $331 = HEAP8[$329 >> 0] | 0;
      if ($331 << 24 >> 24 <= -1) break;
      if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($331 << 24 >> 24 << 1) >> 1] & 8192)) break;
      $$sroa$0301$0 = $329 + 1 | 0;
     }
     $340 = $$sroa$0301$0 - $320 | 0;
     $341 = HEAP8[$49 >> 0] | 0;
     $342 = $341 << 24 >> 24 < 0;
     $345 = $342 ? HEAP32[$50 >> 2] | 0 : $341 & 255;
     if ($340 >>> 0 > $345 >>> 0) {
      $$pre$i3$i$i262 = $736;
      $$sroa$0281$0 = $320;
      $359 = $316;
      $363 = $318;
      $383 = $736;
     } else {
      $349 = ($342 ? HEAP32[$23 >> 2] | 0 : $23) + $345 | 0;
      $$sink = $319;
      $352 = $349 + (0 - $340) | 0;
      while (1) {
       if (($352 | 0) == ($349 | 0)) {
        $$pre$i3$i$i262 = $736;
        $$sroa$0281$0 = $$sroa$0301$0;
        $359 = $316;
        $363 = $318;
        $383 = $736;
        break L104;
       }
       if ((HEAP8[$352 >> 0] | 0) != (HEAP8[$$sink >> 0] | 0)) {
        $$pre$i3$i$i262 = $736;
        $$sroa$0281$0 = $320;
        $359 = $316;
        $363 = $318;
        $383 = $736;
        break L104;
       }
       $$sink = $$sink + 1 | 0;
       $352 = $352 + 1 | 0;
      }
     }
    } else {
     $$pre$i3$i$i262 = $736;
     $$sroa$0281$0 = $320;
     $359 = $316;
     $363 = $318;
     $383 = $736;
    } while (0);
    L118 : while (1) {
     $360 = $359 << 24 >> 24 < 0;
     $366 = ($360 ? $363 : $20) + ($360 ? HEAP32[$48 >> 2] | 0 : $359 & 255) | 0;
     $367 = $$sroa$0281$0;
     if (($367 | 0) == ($366 | 0)) {
      $$lcssa = $366;
      break;
     }
     $369 = HEAP32[$0 >> 2] | 0;
     do if (!$369) $381 = 0; else if ((HEAP32[$369 + 12 >> 2] | 0) == (HEAP32[$369 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$369 >> 2] | 0) + 36 >> 2] & 255]($369) | 0) == -1) {
      HEAP32[$0 >> 2] = 0;
      $381 = 0;
      break;
     } else {
      $381 = HEAP32[$0 >> 2] | 0;
      break;
     } else $381 = $369; while (0);
     $382 = ($381 | 0) == 0;
     do if (!$383) {
      $$pre$i3$i$i262367 = $$pre$i3$i$i262;
      label = 123;
     } else {
      if ((HEAP32[$383 + 12 >> 2] | 0) != (HEAP32[$383 + 16 >> 2] | 0)) if ($382) {
       $$pre$i3$i$i262366 = $$pre$i3$i$i262;
       $738 = $383;
       break;
      } else {
       $$lcssa = $367;
       break L118;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$383 >> 2] | 0) + 36 >> 2] & 255]($383) | 0) == -1) {
       HEAP32[$1 >> 2] = 0;
       $$pre$i3$i$i262367 = 0;
       label = 123;
       break;
      } else if ($382 ^ ($$pre$i3$i$i262 | 0) == 0) {
       $$pre$i3$i$i262366 = $$pre$i3$i$i262;
       $738 = $$pre$i3$i$i262;
       break;
      } else {
       $$lcssa = $367;
       break L118;
      }
     } while (0);
     if ((label | 0) == 123) {
      label = 0;
      if ($382) {
       $$lcssa = $367;
       break;
      } else {
       $$pre$i3$i$i262366 = $$pre$i3$i$i262367;
       $738 = 0;
      }
     }
     $396 = HEAP32[$0 >> 2] | 0;
     $398 = HEAP32[$396 + 12 >> 2] | 0;
     if (($398 | 0) == (HEAP32[$396 + 16 >> 2] | 0)) $$0$i$i254 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$396 >> 2] | 0) + 36 >> 2] & 255]($396) | 0; else $$0$i$i254 = HEAPU8[$398 >> 0] | 0;
     if (($$0$i$i254 & 255) << 24 >> 24 != (HEAP8[$367 >> 0] | 0)) {
      $$lcssa = $367;
      break;
     }
     $411 = HEAP32[$0 >> 2] | 0;
     $412 = $411 + 12 | 0;
     $413 = HEAP32[$412 >> 2] | 0;
     if (($413 | 0) == (HEAP32[$411 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$411 >> 2] | 0) + 40 >> 2] & 255]($411) | 0; else HEAP32[$412 >> 2] = $413 + 1;
     $$pre$i3$i$i262 = $$pre$i3$i$i262366;
     $$sroa$0281$0 = $367 + 1 | 0;
     $359 = HEAP8[$47 >> 0] | 0;
     $363 = HEAP32[$20 >> 2] | 0;
     $383 = $738;
    }
    if ($46) {
     $423 = HEAP8[$47 >> 0] | 0;
     $424 = $423 << 24 >> 24 < 0;
     if (($$lcssa | 0) == (($424 ? HEAP32[$20 >> 2] | 0 : $20) + ($424 ? HEAP32[$48 >> 2] | 0 : $423 & 255) | 0)) $$1130 = $$0129; else {
      label = 135;
      break L21;
     }
    } else $$1130 = $$0129;
    break;
   }
  case 4:
   {
    $$0124 = 0;
    $$pre$i3$i$i247 = $736;
    $448 = $736;
    L150 : while (1) {
     $434 = HEAP32[$0 >> 2] | 0;
     do if (!$434) $446 = 0; else if ((HEAP32[$434 + 12 >> 2] | 0) == (HEAP32[$434 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$434 >> 2] | 0) + 36 >> 2] & 255]($434) | 0) == -1) {
      HEAP32[$0 >> 2] = 0;
      $446 = 0;
      break;
     } else {
      $446 = HEAP32[$0 >> 2] | 0;
      break;
     } else $446 = $434; while (0);
     $447 = ($446 | 0) == 0;
     do if (!$448) {
      $$pre$i3$i$i247357 = $$pre$i3$i$i247;
      label = 146;
     } else {
      if ((HEAP32[$448 + 12 >> 2] | 0) != (HEAP32[$448 + 16 >> 2] | 0)) if ($447) {
       $$pre$i3$i$i247359 = $$pre$i3$i$i247;
       $739 = $448;
       break;
      } else {
       $$pre$i3$i$i217 = $$pre$i3$i$i247;
       break L150;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$448 >> 2] | 0) + 36 >> 2] & 255]($448) | 0) == -1) {
       HEAP32[$1 >> 2] = 0;
       $$pre$i3$i$i247357 = 0;
       label = 146;
       break;
      } else if ($447 ^ ($$pre$i3$i$i247 | 0) == 0) {
       $$pre$i3$i$i247359 = $$pre$i3$i$i247;
       $739 = $$pre$i3$i$i247;
       break;
      } else {
       $$pre$i3$i$i217 = $$pre$i3$i$i247;
       break L150;
      }
     } while (0);
     if ((label | 0) == 146) {
      label = 0;
      if ($447) {
       $$pre$i3$i$i217 = $$pre$i3$i$i247357;
       break;
      } else {
       $$pre$i3$i$i247359 = $$pre$i3$i$i247357;
       $739 = 0;
      }
     }
     $461 = HEAP32[$0 >> 2] | 0;
     $463 = HEAP32[$461 + 12 >> 2] | 0;
     if (($463 | 0) == (HEAP32[$461 + 16 >> 2] | 0)) $$0$i$i237 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$461 >> 2] | 0) + 36 >> 2] & 255]($461) | 0; else $$0$i$i237 = HEAPU8[$463 >> 0] | 0;
     $473 = $$0$i$i237 & 255;
     if ($473 << 24 >> 24 > -1) if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i237 << 24 >> 24 << 1) >> 1] & 2048)) label = 156; else {
      $480 = HEAP32[$9 >> 2] | 0;
      if (($480 | 0) == (HEAP32[$11 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
       $484 = HEAP32[$9 >> 2] | 0;
      } else $484 = $480;
      HEAP32[$9 >> 2] = $484 + 1;
      HEAP8[$484 >> 0] = $473;
      $$2126$ph = $$0124 + 1 | 0;
     } else label = 156;
     if ((label | 0) == 156) {
      label = 0;
      $486 = HEAP8[$52 >> 0] | 0;
      if (!($473 << 24 >> 24 == (HEAP8[$18 >> 0] | 0) & ($$0124 | 0 ? (($486 << 24 >> 24 < 0 ? HEAP32[$53 >> 2] | 0 : $486 & 255) | 0) != 0 : 0))) {
       $$pre$i3$i$i217 = $$pre$i3$i$i247359;
       break;
      }
      $495 = HEAP32[$14 >> 2] | 0;
      if (($495 | 0) == (HEAP32[$15 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
       $499 = HEAP32[$14 >> 2] | 0;
      } else $499 = $495;
      HEAP32[$14 >> 2] = $499 + 4;
      HEAP32[$499 >> 2] = $$0124;
      $$2126$ph = 0;
     }
     $500 = HEAP32[$0 >> 2] | 0;
     $501 = $500 + 12 | 0;
     $502 = HEAP32[$501 >> 2] | 0;
     if (($502 | 0) == (HEAP32[$500 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$500 >> 2] | 0) + 40 >> 2] & 255]($500) | 0;
      $$0124 = $$2126$ph;
      $$pre$i3$i$i247 = $$pre$i3$i$i247359;
      $448 = $739;
      continue;
     } else {
      HEAP32[$501 >> 2] = $502 + 1;
      $$0124 = $$2126$ph;
      $$pre$i3$i$i247 = $$pre$i3$i$i247359;
      $448 = $739;
      continue;
     }
    }
    $511 = HEAP32[$14 >> 2] | 0;
    if ($$0124 | 0 ? (HEAP32[$13 >> 2] | 0) != ($511 | 0) : 0) {
     if (($511 | 0) == (HEAP32[$15 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
      $517 = HEAP32[$14 >> 2] | 0;
     } else $517 = $511;
     HEAP32[$14 >> 2] = $517 + 4;
     HEAP32[$517 >> 2] = $$0124;
    }
    L197 : do if ((HEAP32[$24 >> 2] | 0) > 0) {
     $520 = HEAP32[$0 >> 2] | 0;
     do if (!$520) $532 = 0; else if ((HEAP32[$520 + 12 >> 2] | 0) == (HEAP32[$520 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$520 >> 2] | 0) + 36 >> 2] & 255]($520) | 0) == -1) {
      HEAP32[$0 >> 2] = 0;
      $532 = 0;
      break;
     } else {
      $532 = HEAP32[$0 >> 2] | 0;
      break;
     } else $532 = $520; while (0);
     $533 = ($532 | 0) == 0;
     do if (!$$pre$i3$i$i217) label = 178; else {
      if ((HEAP32[$$pre$i3$i$i217 + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i217 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i217 >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i217) | 0) == -1) {
       HEAP32[$1 >> 2] = 0;
       label = 178;
       break;
      }
      if ($533) $740 = $$pre$i3$i$i217; else {
       label = 183;
       break L21;
      }
     } while (0);
     if ((label | 0) == 178) {
      label = 0;
      if ($533) {
       label = 183;
       break L21;
      } else $740 = 0;
     }
     $545 = HEAP32[$0 >> 2] | 0;
     $547 = HEAP32[$545 + 12 >> 2] | 0;
     if (($547 | 0) == (HEAP32[$545 + 16 >> 2] | 0)) $$0$i$i209 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$545 >> 2] | 0) + 36 >> 2] & 255]($545) | 0; else $$0$i$i209 = HEAPU8[$547 >> 0] | 0;
     if (($$0$i$i209 & 255) << 24 >> 24 != (HEAP8[$17 >> 0] | 0)) {
      label = 183;
      break L21;
     }
     $562 = HEAP32[$0 >> 2] | 0;
     $563 = $562 + 12 | 0;
     $564 = HEAP32[$563 >> 2] | 0;
     if (($564 | 0) == (HEAP32[$562 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$562 >> 2] | 0) + 40 >> 2] & 255]($562) | 0;
      $$pre$i3$i$i201 = $740;
      $588 = $740;
     } else {
      HEAP32[$563 >> 2] = $564 + 1;
      $$pre$i3$i$i201 = $740;
      $588 = $740;
     }
     while (1) {
      if ((HEAP32[$24 >> 2] | 0) <= 0) break L197;
      $574 = HEAP32[$0 >> 2] | 0;
      do if (!$574) $586 = 0; else if ((HEAP32[$574 + 12 >> 2] | 0) == (HEAP32[$574 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$574 >> 2] | 0) + 36 >> 2] & 255]($574) | 0) == -1) {
       HEAP32[$0 >> 2] = 0;
       $586 = 0;
       break;
      } else {
       $586 = HEAP32[$0 >> 2] | 0;
       break;
      } else $586 = $574; while (0);
      $587 = ($586 | 0) == 0;
      do if (!$588) {
       $$pre$i3$i$i201362$ph = $$pre$i3$i$i201;
       label = 198;
      } else {
       if ((HEAP32[$588 + 12 >> 2] | 0) != (HEAP32[$588 + 16 >> 2] | 0)) if ($587) {
        $$pre$i3$i$i201362383 = $$pre$i3$i$i201;
        $741 = $588;
        break;
       } else {
        label = 205;
        break L21;
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$588 >> 2] | 0) + 36 >> 2] & 255]($588) | 0) == -1) {
        HEAP32[$1 >> 2] = 0;
        $$pre$i3$i$i201362$ph = 0;
        label = 198;
        break;
       } else if ($587 ^ ($$pre$i3$i$i201 | 0) == 0) {
        $$pre$i3$i$i201362383 = $$pre$i3$i$i201;
        $741 = $$pre$i3$i$i201;
        break;
       } else {
        label = 205;
        break L21;
       }
      } while (0);
      if ((label | 0) == 198) {
       label = 0;
       if ($587) {
        label = 205;
        break L21;
       } else {
        $$pre$i3$i$i201362383 = $$pre$i3$i$i201362$ph;
        $741 = 0;
       }
      }
      $601 = HEAP32[$0 >> 2] | 0;
      $603 = HEAP32[$601 + 12 >> 2] | 0;
      if (($603 | 0) == (HEAP32[$601 + 16 >> 2] | 0)) $$0$i$i193 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$601 >> 2] | 0) + 36 >> 2] & 255]($601) | 0; else $$0$i$i193 = HEAPU8[$603 >> 0] | 0;
      if (($$0$i$i193 & 255) << 24 >> 24 <= -1) {
       label = 205;
       break L21;
      }
      if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i193 << 24 >> 24 << 1) >> 1] & 2048)) {
       label = 205;
       break L21;
      }
      if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$11 >> 2] | 0)) __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
      $625 = HEAP32[$0 >> 2] | 0;
      $627 = HEAP32[$625 + 12 >> 2] | 0;
      if (($627 | 0) == (HEAP32[$625 + 16 >> 2] | 0)) $$0$i$i161 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$625 >> 2] | 0) + 36 >> 2] & 255]($625) | 0; else $$0$i$i161 = HEAPU8[$627 >> 0] | 0;
      $638 = HEAP32[$9 >> 2] | 0;
      HEAP32[$9 >> 2] = $638 + 1;
      HEAP8[$638 >> 0] = $$0$i$i161;
      HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -1;
      $642 = HEAP32[$0 >> 2] | 0;
      $643 = $642 + 12 | 0;
      $644 = HEAP32[$643 >> 2] | 0;
      if (($644 | 0) == (HEAP32[$642 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$642 >> 2] | 0) + 40 >> 2] & 255]($642) | 0;
       $$pre$i3$i$i201 = $$pre$i3$i$i201362383;
       $588 = $741;
       continue;
      } else {
       HEAP32[$643 >> 2] = $644 + 1;
       $$pre$i3$i$i201 = $$pre$i3$i$i201362383;
       $588 = $741;
       continue;
      }
     }
    } while (0);
    if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$8 >> 2] | 0)) {
     label = 215;
     break L21;
    } else $$1130 = $$0129;
    break;
   }
  default:
   $$1130 = $$0129;
  } while (0);
  L261 : do if ((label | 0) == 43) while (1) {
   label = 0;
   $120 = HEAP32[$0 >> 2] | 0;
   do if (!$120) $132 = 0; else if ((HEAP32[$120 + 12 >> 2] | 0) == (HEAP32[$120 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$120 >> 2] | 0) + 36 >> 2] & 255]($120) | 0) == -1) {
    HEAP32[$0 >> 2] = 0;
    $132 = 0;
    break;
   } else {
    $132 = HEAP32[$0 >> 2] | 0;
    break;
   } else $132 = $120; while (0);
   $133 = ($132 | 0) == 0;
   do if (!$134) {
    $$pre$i3$i$i179378 = $$pre$i3$i$i179;
    label = 53;
   } else {
    if ((HEAP32[$134 + 12 >> 2] | 0) != (HEAP32[$134 + 16 >> 2] | 0)) if ($133) {
     $$pre$i3$i$i179380 = $$pre$i3$i$i179;
     $737 = $134;
     break;
    } else {
     $$1130 = $$0129;
     break L261;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$134 >> 2] | 0) + 36 >> 2] & 255]($134) | 0) == -1) {
     HEAP32[$1 >> 2] = 0;
     $$pre$i3$i$i179378 = 0;
     label = 53;
     break;
    } else if ($133 ^ ($$pre$i3$i$i179 | 0) == 0) {
     $$pre$i3$i$i179380 = $$pre$i3$i$i179;
     $737 = $$pre$i3$i$i179;
     break;
    } else {
     $$1130 = $$0129;
     break L261;
    }
   } while (0);
   if ((label | 0) == 53) {
    label = 0;
    if ($133) {
     $$1130 = $$0129;
     break L261;
    } else {
     $$pre$i3$i$i179380 = $$pre$i3$i$i179378;
     $737 = 0;
    }
   }
   $147 = HEAP32[$0 >> 2] | 0;
   $149 = HEAP32[$147 + 12 >> 2] | 0;
   if (($149 | 0) == (HEAP32[$147 + 16 >> 2] | 0)) $$0$i$i183 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$147 >> 2] | 0) + 36 >> 2] & 255]($147) | 0; else $$0$i$i183 = HEAPU8[$149 >> 0] | 0;
   if (($$0$i$i183 & 255) << 24 >> 24 <= -1) {
    $$1130 = $$0129;
    break L261;
   }
   if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i183 << 24 >> 24 << 1) >> 1] & 8192)) {
    $$1130 = $$0129;
    break L261;
   }
   $166 = HEAP32[$0 >> 2] | 0;
   $167 = $166 + 12 | 0;
   $168 = HEAP32[$167 >> 2] | 0;
   if (($168 | 0) == (HEAP32[$166 + 16 >> 2] | 0)) $$0$i$i189 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$166 >> 2] | 0) + 40 >> 2] & 255]($166) | 0; else {
    HEAP32[$167 >> 2] = $168 + 1;
    $$0$i$i189 = HEAPU8[$168 >> 0] | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23, $$0$i$i189 & 255);
   $$pre$i3$i$i179 = $$pre$i3$i$i179380;
   $134 = $737;
   label = 43;
  } while (0);
  $$0129 = $$1130;
  $$0131 = $$0131 + 1 | 0;
 }
 L293 : do if ((label | 0) == 41) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 97) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 135) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 183) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 205) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 215) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 217) {
  L295 : do if ($$0129 | 0) {
   $659 = $$0129 + 11 | 0;
   $660 = $$0129 + 4 | 0;
   $$0 = 1;
   L297 : while (1) {
    $661 = HEAP8[$659 >> 0] | 0;
    if ($661 << 24 >> 24 < 0) $666 = HEAP32[$660 >> 2] | 0; else $666 = $661 & 255;
    if ($$0 >>> 0 >= $666 >>> 0) break L295;
    $667 = HEAP32[$0 >> 2] | 0;
    do if (!$667) $679 = 0; else if ((HEAP32[$667 + 12 >> 2] | 0) == (HEAP32[$667 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$667 >> 2] | 0) + 36 >> 2] & 255]($667) | 0) == -1) {
     HEAP32[$0 >> 2] = 0;
     $679 = 0;
     break;
    } else {
     $679 = HEAP32[$0 >> 2] | 0;
     break;
    } else $679 = $667; while (0);
    $680 = ($679 | 0) == 0;
    $681 = HEAP32[$1 >> 2] | 0;
    do if (!$681) label = 233; else {
     if ((HEAP32[$681 + 12 >> 2] | 0) == (HEAP32[$681 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$681 >> 2] | 0) + 36 >> 2] & 255]($681) | 0) == -1) {
      HEAP32[$1 >> 2] = 0;
      label = 233;
      break;
     }
     if (!$680) break L297;
    } while (0);
    if ((label | 0) == 233) {
     label = 0;
     if ($680) break;
    }
    $693 = HEAP32[$0 >> 2] | 0;
    $695 = HEAP32[$693 + 12 >> 2] | 0;
    if (($695 | 0) == (HEAP32[$693 + 16 >> 2] | 0)) $$0$i$i150 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$693 >> 2] | 0) + 36 >> 2] & 255]($693) | 0; else $$0$i$i150 = HEAPU8[$695 >> 0] | 0;
    if ((HEAP8[$659 >> 0] | 0) < 0) $710 = HEAP32[$$0129 >> 2] | 0; else $710 = $$0129;
    if (($$0$i$i150 & 255) << 24 >> 24 != (HEAP8[$710 + $$0 >> 0] | 0)) break;
    $715 = $$0 + 1 | 0;
    $716 = HEAP32[$0 >> 2] | 0;
    $717 = $716 + 12 | 0;
    $718 = HEAP32[$717 >> 2] | 0;
    if (($718 | 0) == (HEAP32[$716 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$716 >> 2] | 0) + 40 >> 2] & 255]($716) | 0;
     $$0 = $715;
     continue;
    } else {
     HEAP32[$717 >> 2] = $718 + 1;
     $$0 = $715;
     continue;
    }
   }
   HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
   $$10 = 0;
   break L293;
  } while (0);
  $726 = HEAP32[$13 >> 2] | 0;
  $727 = HEAP32[$14 >> 2] | 0;
  if (($726 | 0) == ($727 | 0)) $$10 = 1; else {
   HEAP32[$25 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19, $726, $727, $25);
   if (!(HEAP32[$25 >> 2] | 0)) {
    $$10 = 1;
    break;
   } else {
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
    $$10 = 0;
    break;
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $733 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = 0;
 if ($733 | 0) FUNCTION_TABLE_vi[HEAP32[$27 >> 2] & 255]($733);
 STACKTOP = sp;
 return $$10 | 0;
}

function __ZL9statementP8LexState($0) {
 $0 = $0 | 0;
 var $$$i$i = 0, $$$i$i$i = 0, $$0 = 0, $$0$i$i$lcssa = 0, $$0$i$i46 = 0, $$0$i$i76 = 0, $$0$i17$i79 = 0, $$0$i22$i$lcssa = 0, $$0$i22$i83 = 0, $$0$i24 = 0, $$0$i53 = 0, $$0$i64 = 0, $$0$i65$lcssa = 0, $$0$i6575 = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$013$i = 0, $$01821$i = 0, $$01821$i$i = 0, $$01824$i = 0, $$01824$i$i = 0, $$01826$i = 0, $$01826$i$i = 0, $$021$i = 0, $$023$i = 0, $$023$i$i = 0, $$025$i = 0, $$025$i$i = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i26 = 0, $$idx$val$i$i38 = 0, $$idx$val$i17$i = 0, $$idx$val$i26$i = 0, $$idx$val$i35$i = 0, $$idx$val$i55 = 0, $$idx14$i = 0, $$idx14$val$i = 0, $$pre$phiZ2D = 0, $1 = 0, $102 = 0, $109 = 0, $116 = 0, $118 = 0, $120 = 0, $124 = 0, $126 = 0, $129 = 0, $132 = 0, $134 = 0, $136 = 0, $139 = 0, $142 = 0, $146 = 0, $149 = 0, $151 = 0, $157 = 0, $158 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $184 = 0, $193 = 0, $194 = 0, $195 = 0, $198 = 0, $199 = 0, $2 = 0, $202 = 0, $207 = 0, $209 = 0, $211 = 0, $213 = 0, $216 = 0, $219 = 0, $226 = 0, $23 = 0, $233 = 0, $236 = 0, $238 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $26 = 0, $262 = 0, $272 = 0, $281 = 0, $290 = 0, $292 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $3 = 0, $30 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $316 = 0, $325 = 0, $327 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $338 = 0, $339 = 0, $340 = 0, $341 = 0, $35 = 0, $352 = 0, $364 = 0, $368 = 0, $369 = 0, $370 = 0, $378 = 0, $380 = 0, $381 = 0, $385 = 0, $389 = 0, $39 = 0, $391 = 0, $395 = 0, $398 = 0, $4 = 0, $425 = 0, $426 = 0, $427 = 0, $429 = 0, $43 = 0, $432 = 0, $433 = 0, $437 = 0, $439 = 0, $44 = 0, $442 = 0, $444 = 0, $45 = 0, $450 = 0, $451 = 0, $454 = 0, $456 = 0, $46 = 0, $47 = 0, $471 = 0, $481 = 0, $482 = 0, $487 = 0, $499 = 0, $5 = 0, $51 = 0, $512 = 0, $52 = 0, $521 = 0, $53 = 0, $530 = 0, $531 = 0, $539 = 0, $54 = 0, $6 = 0, $65 = 0, $74 = 0, $75 = 0, $78 = 0, $82 = 0, $87 = 0, $9 = 0, $90 = 0, $91 = 0, $93 = 0, $94 = 0, $95 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer16 = 0, $vararg_buffer19 = 0, $vararg_buffer22 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer22 = sp + 64 | 0;
 $vararg_buffer19 = sp + 56 | 0;
 $vararg_buffer16 = sp + 48 | 0;
 $vararg_buffer13 = sp + 40 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $1 = sp + 104 | 0;
 $2 = sp + 80 | 0;
 $3 = sp + 68 | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $0 + 12 | 0;
 do switch (HEAP32[$6 >> 2] | 0) {
 case 266:
  {
   $9 = HEAP32[$0 + 28 >> 2] | 0;
   HEAP32[$1 >> 2] = -1;
   $$0$i24 = __ZL15test_then_blockP8LexState($0) | 0;
   L9 : while (1) {
    switch (HEAP32[$6 >> 2] | 0) {
    case 260:
     {
      label = 5;
      break L9;
      break;
     }
    case 261:
     break;
    default:
     {
      label = 6;
      break L9;
     }
    }
    __Z11luaK_concatP9FuncStatePii($9, $1, __Z9luaK_jumpP9FuncState($9) | 0);
    __Z16luaK_patchtohereP9FuncStatei($9, $$0$i24);
    $$0$i24 = __ZL15test_then_blockP8LexState($0) | 0;
   }
   if ((label | 0) == 5) {
    __Z11luaK_concatP9FuncStatePii($9, $1, __Z9luaK_jumpP9FuncState($9) | 0);
    __Z16luaK_patchtohereP9FuncStatei($9, $$0$i24);
    __Z9luaX_nextP8LexState($0);
    __ZL5blockP8LexState($0);
   } else if ((label | 0) == 6) __Z11luaK_concatP9FuncStatePii($9, $1, $$0$i24);
   __Z16luaK_patchtohereP9FuncStatei($9, HEAP32[$1 >> 2] | 0);
   __ZL11check_matchP8LexStateiii($0, 262, 266, $5);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 277:
  {
   $16 = $0 + 28 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   __Z9luaX_nextP8LexState($0);
   $18 = __Z13luaK_getlabelP9FuncState($17) | 0;
   __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
   if ((HEAP32[$1 >> 2] | 0) == 1) HEAP32[$1 >> 2] = 3;
   __Z13luaK_goiftrueP9FuncStateP7expdesc(HEAP32[$16 >> 2] | 0, $1);
   $23 = HEAP32[$1 + 16 >> 2] | 0;
   HEAP32[$2 + 4 >> 2] = -1;
   HEAP8[$2 + 10 >> 0] = 1;
   $26 = $17 + 50 | 0;
   HEAP8[$2 + 8 >> 0] = HEAP8[$26 >> 0] | 0;
   HEAP8[$2 + 9 >> 0] = 0;
   $30 = $17 + 20 | 0;
   HEAP32[$2 >> 2] = HEAP32[$30 >> 2];
   HEAP32[$30 >> 2] = $2;
   if ((HEAP32[$6 >> 2] | 0) != 259) {
    $35 = HEAP32[$0 + 32 >> 2] | 0;
    HEAP32[$vararg_buffer >> 2] = __Z14luaX_token2strP8LexStatei($0, 259) | 0;
    __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($35, 87798, $vararg_buffer) | 0);
   }
   __Z9luaX_nextP8LexState($0);
   __ZL5blockP8LexState($0);
   __Z14luaK_patchlistP9FuncStateii($17, __Z9luaK_jumpP9FuncState($17) | 0, $18);
   __ZL11check_matchP8LexStateiii($0, 262, 277, $5);
   $39 = HEAP32[$30 >> 2] | 0;
   HEAP32[$30 >> 2] = HEAP32[$39 >> 2];
   $43 = $39 + 8 | 0;
   $44 = HEAP16[$43 >> 1] | 0;
   $45 = $44 & 255;
   $$idx$val$i$i = HEAP32[(HEAP32[$17 + 12 >> 2] | 0) + 28 >> 2] | 0;
   $46 = $$idx$val$i$i + 50 | 0;
   $47 = HEAP8[$46 >> 0] | 0;
   if (($47 & 255) > ($45 & 255)) {
    $51 = $$idx$val$i$i + 24 | 0;
    $54 = $47;
    do {
     $52 = HEAP32[$51 >> 2] | 0;
     $53 = $54 + -1 << 24 >> 24;
     HEAP8[$46 >> 0] = $53;
     HEAP32[(HEAP32[(HEAP32[$$idx$val$i$i >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i$i + 172 + (($53 & 255) << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = $52;
     $54 = HEAP8[$46 >> 0] | 0;
    } while (($54 & 255) > ($45 & 255));
    $65 = HEAP8[$39 + 9 >> 0] | 0;
   } else $65 = ($44 & 65535) >>> 8 & 255;
   if ($65 << 24 >> 24) __Z12luaK_codeABCP9FuncState6OpCodeiii($17, 35, HEAPU8[$43 >> 0] | 0, 0, 0) | 0;
   HEAP32[$17 + 36 >> 2] = HEAPU8[$26 >> 0];
   __Z16luaK_patchtohereP9FuncStatei($17, HEAP32[$39 + 4 >> 2] | 0);
   __Z16luaK_patchtohereP9FuncStatei($17, $23);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 259:
  {
   __Z9luaX_nextP8LexState($0);
   __ZL5blockP8LexState($0);
   __ZL11check_matchP8LexStateiii($0, 262, 259, $5);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 264:
  {
   $74 = $0 + 28 | 0;
   $75 = HEAP32[$74 >> 2] | 0;
   HEAP32[$2 + 4 >> 2] = -1;
   HEAP8[$2 + 10 >> 0] = 1;
   $78 = $75 + 50 | 0;
   HEAP8[$2 + 8 >> 0] = HEAP8[$78 >> 0] | 0;
   HEAP8[$2 + 9 >> 0] = 0;
   $82 = $75 + 20 | 0;
   HEAP32[$2 >> 2] = HEAP32[$82 >> 2];
   HEAP32[$82 >> 2] = $2;
   __Z9luaX_nextP8LexState($0);
   if ((HEAP32[$6 >> 2] | 0) != 285) {
    $87 = HEAP32[$0 + 32 >> 2] | 0;
    HEAP32[$vararg_buffer1 >> 2] = __Z14luaX_token2strP8LexStatei($0, 285) | 0;
    __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($87, 87798, $vararg_buffer1) | 0);
   }
   $90 = $0 + 16 | 0;
   $91 = HEAP32[$90 >> 2] | 0;
   __Z9luaX_nextP8LexState($0);
   switch (HEAP32[$6 >> 2] | 0) {
   case 61:
    {
     $93 = HEAP32[$74 >> 2] | 0;
     $94 = $93 + 36 | 0;
     $95 = HEAP32[$94 >> 2] | 0;
     __ZL12new_localvarP8LexStateP7TStringi($0, __Z14luaX_newstringP8LexStatePKcj($0, 87812, 11) | 0, 0);
     __ZL12new_localvarP8LexStateP7TStringi($0, __Z14luaX_newstringP8LexStatePKcj($0, 87824, 11) | 0, 1);
     __ZL12new_localvarP8LexStateP7TStringi($0, __Z14luaX_newstringP8LexStatePKcj($0, 87836, 10) | 0, 2);
     __ZL12new_localvarP8LexStateP7TStringi($0, $91, 3);
     if ((HEAP32[$6 >> 2] | 0) != 61) {
      $102 = HEAP32[$0 + 32 >> 2] | 0;
      HEAP32[$vararg_buffer4 >> 2] = __Z14luaX_token2strP8LexStatei($0, 61) | 0;
      __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($102, 87798, $vararg_buffer4) | 0);
     }
     __Z9luaX_nextP8LexState($0);
     __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
     __Z16luaK_exp2nextregP9FuncStateP7expdesc(HEAP32[$74 >> 2] | 0, $1);
     if ((HEAP32[$6 >> 2] | 0) != 44) {
      $109 = HEAP32[$0 + 32 >> 2] | 0;
      HEAP32[$vararg_buffer7 >> 2] = __Z14luaX_token2strP8LexStatei($0, 44) | 0;
      __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($109, 87798, $vararg_buffer7) | 0);
     }
     __Z9luaX_nextP8LexState($0);
     __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
     __Z16luaK_exp2nextregP9FuncStateP7expdesc(HEAP32[$74 >> 2] | 0, $1);
     if ((HEAP32[$6 >> 2] | 0) == 44) {
      __Z9luaX_nextP8LexState($0);
      __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
      __Z16luaK_exp2nextregP9FuncStateP7expdesc(HEAP32[$74 >> 2] | 0, $1);
     } else {
      $116 = HEAP32[$94 >> 2] | 0;
      __Z12luaK_codeABxP9FuncState6OpCodeij($93, 1, $116, __Z12luaK_numberKP9FuncStatef($93, 1.0) | 0) | 0;
      __Z16luaK_reserveregsP9FuncStatei($93, 1);
     }
     __ZL7forbodyP8LexStateiiii($0, $95, $5, 1, 1);
     break;
    }
   case 267:
   case 44:
    {
     $118 = HEAP32[$74 >> 2] | 0;
     $120 = HEAP32[$118 + 36 >> 2] | 0;
     __ZL12new_localvarP8LexStateP7TStringi($0, __Z14luaX_newstringP8LexStatePKcj($0, 87847, 15) | 0, 0);
     __ZL12new_localvarP8LexStateP7TStringi($0, __Z14luaX_newstringP8LexStatePKcj($0, 87863, 11) | 0, 1);
     __ZL12new_localvarP8LexStateP7TStringi($0, __Z14luaX_newstringP8LexStatePKcj($0, 87875, 13) | 0, 2);
     __ZL12new_localvarP8LexStateP7TStringi($0, $91, 3);
     $124 = HEAP32[$6 >> 2] | 0;
     if (($124 | 0) == 44) {
      $126 = $0 + 32 | 0;
      $$0$i$i76 = 4;
      while (1) {
       __Z9luaX_nextP8LexState($0);
       if ((HEAP32[$6 >> 2] | 0) != 285) {
        $129 = HEAP32[$126 >> 2] | 0;
        HEAP32[$vararg_buffer10 >> 2] = __Z14luaX_token2strP8LexStatei($0, 285) | 0;
        __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($129, 87798, $vararg_buffer10) | 0);
       }
       $132 = HEAP32[$90 >> 2] | 0;
       __Z9luaX_nextP8LexState($0);
       __ZL12new_localvarP8LexStateP7TStringi($0, $132, $$0$i$i76);
       $134 = HEAP32[$6 >> 2] | 0;
       if (($134 | 0) == 44) $$0$i$i76 = $$0$i$i76 + 1 | 0; else break;
      }
      $$0$i$i$lcssa = $$0$i$i76 + -2 | 0;
      $136 = $134;
     } else {
      $$0$i$i$lcssa = 1;
      $136 = $124;
     }
     if (($136 | 0) != 267) {
      $139 = HEAP32[$0 + 32 >> 2] | 0;
      HEAP32[$vararg_buffer13 >> 2] = __Z14luaX_token2strP8LexStatei($0, 267) | 0;
      __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($139, 87798, $vararg_buffer13) | 0);
     }
     __Z9luaX_nextP8LexState($0);
     $142 = HEAP32[$4 >> 2] | 0;
     __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
     if ((HEAP32[$6 >> 2] | 0) == 44) {
      $$0$i6575 = 1;
      while (1) {
       __Z9luaX_nextP8LexState($0);
       __Z16luaK_exp2nextregP9FuncStateP7expdesc(HEAP32[$74 >> 2] | 0, $1);
       __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
       $146 = $$0$i6575 + 1 | 0;
       if ((HEAP32[$6 >> 2] | 0) == 44) $$0$i6575 = $146; else {
        $$0$i65$lcssa = $146;
        break;
       }
      }
     } else $$0$i65$lcssa = 1;
     $$idx$val$i17$i = HEAP32[$74 >> 2] | 0;
     $149 = 3 - $$0$i65$lcssa | 0;
     switch (HEAP32[$1 >> 2] | 0) {
     case 14:
     case 13:
      {
       $151 = $149 + 1 | 0;
       $$$i$i$i = ($151 | 0) < 0 ? 0 : $151;
       __Z15luaK_setreturnsP9FuncStateP7expdesci($$idx$val$i17$i, $1, $$$i$i$i);
       if (($$$i$i$i | 0) > 1) __Z16luaK_reserveregsP9FuncStatei($$idx$val$i17$i, $$$i$i$i + -1 | 0);
       break;
      }
     case 0:
      {
       label = 46;
       break;
      }
     default:
      {
       __Z16luaK_exp2nextregP9FuncStateP7expdesc($$idx$val$i17$i, $1);
       label = 46;
      }
     }
     if ((label | 0) == 46) if (($149 | 0) > 0) {
      $157 = HEAP32[$$idx$val$i17$i + 36 >> 2] | 0;
      __Z16luaK_reserveregsP9FuncStatei($$idx$val$i17$i, $149);
      __Z8luaK_nilP9FuncStateii($$idx$val$i17$i, $157, $149);
     }
     __Z15luaK_checkstackP9FuncStatei($118, 3);
     __ZL7forbodyP8LexStateiiii($0, $120, $142, $$0$i$i$lcssa, 0);
     break;
    }
   default:
    __Z16luaX_syntaxerrorP8LexStatePKc($0, 87889);
   }
   __ZL11check_matchP8LexStateiii($0, 262, 264, $5);
   $158 = HEAP32[$82 >> 2] | 0;
   HEAP32[$82 >> 2] = HEAP32[$158 >> 2];
   $162 = $158 + 8 | 0;
   $163 = HEAP16[$162 >> 1] | 0;
   $164 = $163 & 255;
   $$idx$val$i$i26 = HEAP32[(HEAP32[$75 + 12 >> 2] | 0) + 28 >> 2] | 0;
   $165 = $$idx$val$i$i26 + 50 | 0;
   $166 = HEAP8[$165 >> 0] | 0;
   if (($166 & 255) > ($164 & 255)) {
    $170 = $$idx$val$i$i26 + 24 | 0;
    $173 = $166;
    do {
     $171 = HEAP32[$170 >> 2] | 0;
     $172 = $173 + -1 << 24 >> 24;
     HEAP8[$165 >> 0] = $172;
     HEAP32[(HEAP32[(HEAP32[$$idx$val$i$i26 >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i$i26 + 172 + (($172 & 255) << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = $171;
     $173 = HEAP8[$165 >> 0] | 0;
    } while (($173 & 255) > ($164 & 255));
    $184 = HEAP8[$158 + 9 >> 0] | 0;
   } else $184 = ($163 & 65535) >>> 8 & 255;
   if ($184 << 24 >> 24) __Z12luaK_codeABCP9FuncState6OpCodeiii($75, 35, HEAPU8[$162 >> 0] | 0, 0, 0) | 0;
   HEAP32[$75 + 36 >> 2] = HEAPU8[$78 >> 0];
   __Z16luaK_patchtohereP9FuncStatei($75, HEAP32[$158 + 4 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 272:
  {
   $193 = $0 + 28 | 0;
   $194 = HEAP32[$193 >> 2] | 0;
   $195 = __Z13luaK_getlabelP9FuncState($194) | 0;
   HEAP32[$2 + 4 >> 2] = -1;
   HEAP8[$2 + 10 >> 0] = 1;
   $198 = $194 + 50 | 0;
   $199 = HEAP8[$198 >> 0] | 0;
   HEAP8[$2 + 8 >> 0] = $199;
   HEAP8[$2 + 9 >> 0] = 0;
   $202 = $194 + 20 | 0;
   HEAP32[$2 >> 2] = HEAP32[$202 >> 2];
   HEAP32[$3 + 4 >> 2] = -1;
   HEAP8[$3 + 10 >> 0] = 0;
   HEAP8[$3 + 8 >> 0] = $199;
   $207 = $3 + 9 | 0;
   HEAP8[$207 >> 0] = 0;
   HEAP32[$3 >> 2] = $2;
   HEAP32[$202 >> 2] = $3;
   __Z9luaX_nextP8LexState($0);
   $209 = $0 + 32 | 0;
   $211 = (HEAP32[$209 >> 2] | 0) + 52 | 0;
   $213 = (HEAP16[$211 >> 1] | 0) + 1 << 16 >> 16;
   HEAP16[$211 >> 1] = $213;
   if (($213 & 65535) > 200) __Z13luaX_lexerrorP8LexStatePKci($0, 87765, 0);
   L94 : do {
    switch (HEAP32[$6 >> 2] | 0) {
    case 287:
    case 276:
    case 262:
    case 261:
    case 260:
     {
      break L94;
      break;
     }
    default:
     {}
    }
    $216 = __ZL9statementP8LexState($0) | 0;
    if ((HEAP32[$6 >> 2] | 0) == 59) __Z9luaX_nextP8LexState($0);
    $219 = HEAP32[$193 >> 2] | 0;
    HEAP32[$219 + 36 >> 2] = HEAPU8[$219 + 50 >> 0];
   } while (!($216 | 0));
   $226 = (HEAP32[$209 >> 2] | 0) + 52 | 0;
   HEAP16[$226 >> 1] = (HEAP16[$226 >> 1] | 0) + -1 << 16 >> 16;
   __ZL11check_matchP8LexStateiii($0, 276, 272, $5);
   __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
   if ((HEAP32[$1 >> 2] | 0) == 1) HEAP32[$1 >> 2] = 3;
   __Z13luaK_goiftrueP9FuncStateP7expdesc(HEAP32[$193 >> 2] | 0, $1);
   $233 = HEAP32[$1 + 16 >> 2] | 0;
   if (!(HEAP8[$207 >> 0] | 0)) {
    $236 = HEAP32[$202 >> 2] | 0;
    HEAP32[$202 >> 2] = HEAP32[$236 >> 2];
    $238 = $194 + 12 | 0;
    $240 = $236 + 8 | 0;
    $241 = HEAP16[$240 >> 1] | 0;
    $242 = $241 & 255;
    $$idx$val$i$i38 = HEAP32[(HEAP32[$238 >> 2] | 0) + 28 >> 2] | 0;
    $243 = $$idx$val$i$i38 + 50 | 0;
    $244 = HEAP8[$243 >> 0] | 0;
    if (($244 & 255) > ($242 & 255)) {
     $248 = $$idx$val$i$i38 + 24 | 0;
     $251 = $244;
     do {
      $249 = HEAP32[$248 >> 2] | 0;
      $250 = $251 + -1 << 24 >> 24;
      HEAP8[$243 >> 0] = $250;
      HEAP32[(HEAP32[(HEAP32[$$idx$val$i$i38 >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i$i38 + 172 + (($250 & 255) << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = $249;
      $251 = HEAP8[$243 >> 0] | 0;
     } while (($251 & 255) > ($242 & 255));
     $262 = HEAP8[$236 + 9 >> 0] | 0;
    } else $262 = ($241 & 65535) >>> 8 & 255;
    if ($262 << 24 >> 24) __Z12luaK_codeABCP9FuncState6OpCodeiii($194, 35, HEAPU8[$240 >> 0] | 0, 0, 0) | 0;
    HEAP32[$194 + 36 >> 2] = HEAPU8[$198 >> 0];
    __Z16luaK_patchtohereP9FuncStatei($194, HEAP32[$236 + 4 >> 2] | 0);
    __Z14luaK_patchlistP9FuncStateii(HEAP32[$193 >> 2] | 0, $233, $195);
    $$pre$phiZ2D = $238;
   } else {
    $272 = HEAP32[$193 >> 2] | 0;
    $$01824$i$i = HEAP32[$272 + 20 >> 2] | 0;
    L117 : do if (!$$01824$i$i) {
     $$0$lcssa$i$i = 0;
     label = 78;
    } else {
     $$01826$i$i = $$01824$i$i;
     $$025$i$i = 0;
     while (1) {
      if (HEAP8[$$01826$i$i + 10 >> 0] | 0) {
       $$01821$i$i = $$01826$i$i;
       $$023$i$i = $$025$i$i;
       break L117;
      }
      $281 = HEAPU8[$$01826$i$i + 9 >> 0] | $$025$i$i;
      $$01826$i$i = HEAP32[$$01826$i$i >> 2] | 0;
      if (!$$01826$i$i) {
       $$0$lcssa$i$i = $281;
       label = 78;
       break;
      } else $$025$i$i = $281;
     }
    } while (0);
    if ((label | 0) == 78) {
     __Z16luaX_syntaxerrorP8LexStatePKc($0, 87910);
     $$01821$i$i = 0;
     $$023$i$i = $$0$lcssa$i$i;
    }
    if ($$023$i$i | 0) __Z12luaK_codeABCP9FuncState6OpCodeiii($272, 35, HEAPU8[$$01821$i$i + 8 >> 0] | 0, 0, 0) | 0;
    __Z11luaK_concatP9FuncStatePii($272, $$01821$i$i + 4 | 0, __Z9luaK_jumpP9FuncState($272) | 0);
    __Z16luaK_patchtohereP9FuncStatei(HEAP32[$193 >> 2] | 0, $233);
    $290 = HEAP32[$202 >> 2] | 0;
    HEAP32[$202 >> 2] = HEAP32[$290 >> 2];
    $292 = $194 + 12 | 0;
    $294 = $290 + 8 | 0;
    $295 = HEAP16[$294 >> 1] | 0;
    $296 = $295 & 255;
    $$idx$val$i26$i = HEAP32[(HEAP32[$292 >> 2] | 0) + 28 >> 2] | 0;
    $297 = $$idx$val$i26$i + 50 | 0;
    $298 = HEAP8[$297 >> 0] | 0;
    if (($298 & 255) > ($296 & 255)) {
     $302 = $$idx$val$i26$i + 24 | 0;
     $305 = $298;
     do {
      $303 = HEAP32[$302 >> 2] | 0;
      $304 = $305 + -1 << 24 >> 24;
      HEAP8[$297 >> 0] = $304;
      HEAP32[(HEAP32[(HEAP32[$$idx$val$i26$i >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i26$i + 172 + (($304 & 255) << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = $303;
      $305 = HEAP8[$297 >> 0] | 0;
     } while (($305 & 255) > ($296 & 255));
     $316 = HEAP8[$290 + 9 >> 0] | 0;
    } else $316 = ($295 & 65535) >>> 8 & 255;
    if ($316 << 24 >> 24) __Z12luaK_codeABCP9FuncState6OpCodeiii($194, 35, HEAPU8[$294 >> 0] | 0, 0, 0) | 0;
    HEAP32[$194 + 36 >> 2] = HEAPU8[$198 >> 0];
    __Z16luaK_patchtohereP9FuncStatei($194, HEAP32[$290 + 4 >> 2] | 0);
    $325 = HEAP32[$193 >> 2] | 0;
    __Z14luaK_patchlistP9FuncStateii($325, __Z9luaK_jumpP9FuncState($194) | 0, $195);
    $$pre$phiZ2D = $292;
   }
   $327 = HEAP32[$202 >> 2] | 0;
   HEAP32[$202 >> 2] = HEAP32[$327 >> 2];
   $330 = $327 + 8 | 0;
   $331 = HEAP16[$330 >> 1] | 0;
   $332 = $331 & 255;
   $$idx$val$i35$i = HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 28 >> 2] | 0;
   $333 = $$idx$val$i35$i + 50 | 0;
   $334 = HEAP8[$333 >> 0] | 0;
   if (($334 & 255) > ($332 & 255)) {
    $338 = $$idx$val$i35$i + 24 | 0;
    $341 = $334;
    do {
     $339 = HEAP32[$338 >> 2] | 0;
     $340 = $341 + -1 << 24 >> 24;
     HEAP8[$333 >> 0] = $340;
     HEAP32[(HEAP32[(HEAP32[$$idx$val$i35$i >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i35$i + 172 + (($340 & 255) << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = $339;
     $341 = HEAP8[$333 >> 0] | 0;
    } while (($341 & 255) > ($332 & 255));
    $352 = HEAP8[$327 + 9 >> 0] | 0;
   } else $352 = ($331 & 65535) >>> 8 & 255;
   if ($352 << 24 >> 24) __Z12luaK_codeABCP9FuncState6OpCodeiii($194, 35, HEAPU8[$330 >> 0] | 0, 0, 0) | 0;
   HEAP32[$194 + 36 >> 2] = HEAPU8[$198 >> 0];
   __Z16luaK_patchtohereP9FuncStatei($194, HEAP32[$327 + 4 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 265:
  {
   __Z9luaX_nextP8LexState($0);
   if ((HEAP32[$6 >> 2] | 0) != 285) {
    $364 = HEAP32[$0 + 32 >> 2] | 0;
    HEAP32[$vararg_buffer16 >> 2] = __Z14luaX_token2strP8LexStatei($0, 285) | 0;
    __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($364, 87798, $vararg_buffer16) | 0);
   }
   $368 = HEAP32[$0 + 16 >> 2] | 0;
   __Z9luaX_nextP8LexState($0);
   $369 = $0 + 28 | 0;
   $370 = HEAP32[$369 >> 2] | 0;
   if ((__ZL12singlevarauxP9FuncStateP7TStringP7expdesci($370, $368, $1, 1) | 0) == 8) HEAP32[$1 + 4 >> 2] = __Z12luaK_stringKP9FuncStateP7TString($370, $368) | 0;
   L155 : while (1) {
    switch (HEAP32[$6 >> 2] | 0) {
    case 58:
     {
      label = 103;
      break L155;
      break;
     }
    case 46:
     break;
    default:
     {
      $$0$i$i46 = 0;
      break L155;
     }
    }
    __ZL5fieldP8LexStateP7expdesc($0, $1);
   }
   if ((label | 0) == 103) {
    __ZL5fieldP8LexStateP7expdesc($0, $1);
    $$0$i$i46 = 1;
   }
   __ZL4bodyP8LexStateP7expdescii($0, $2, $$0$i$i46, $5);
   __Z13luaK_storevarP9FuncStateP7expdescS2_(HEAP32[$369 >> 2] | 0, $1, $2);
   __Z12luaK_fixlineP9FuncStatei(HEAP32[$369 >> 2] | 0, $5);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 268:
  {
   __Z9luaX_nextP8LexState($0);
   $378 = HEAP32[$6 >> 2] | 0;
   if (($378 | 0) == 265) {
    __Z9luaX_nextP8LexState($0);
    $380 = $0 + 28 | 0;
    $381 = HEAP32[$380 >> 2] | 0;
    if ((HEAP32[$6 >> 2] | 0) != 285) {
     $385 = HEAP32[$0 + 32 >> 2] | 0;
     HEAP32[$vararg_buffer19 >> 2] = __Z14luaX_token2strP8LexStatei($0, 285) | 0;
     __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($385, 87798, $vararg_buffer19) | 0);
    }
    $389 = HEAP32[$0 + 16 >> 2] | 0;
    __Z9luaX_nextP8LexState($0);
    __ZL12new_localvarP8LexStateP7TStringi($0, $389, 0);
    $391 = HEAP32[$381 + 36 >> 2] | 0;
    HEAP32[$1 + 12 >> 2] = -1;
    HEAP32[$1 + 16 >> 2] = -1;
    HEAP32[$1 >> 2] = 6;
    HEAP32[$1 + 4 >> 2] = $391;
    __Z16luaK_reserveregsP9FuncStatei($381, 1);
    $$idx$val$i = HEAP32[$380 >> 2] | 0;
    $395 = $$idx$val$i + 50 | 0;
    $398 = (HEAPU8[$395 >> 0] | 0) + 1 | 0;
    HEAP8[$395 >> 0] = $398;
    HEAP32[(HEAP32[(HEAP32[$$idx$val$i >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i + 172 + (($398 & 255) + -1 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$$idx$val$i + 24 >> 2];
    __ZL4bodyP8LexStateP7expdescii($0, $2, 0, HEAP32[$4 >> 2] | 0);
    __Z13luaK_storevarP9FuncStateP7expdescS2_($381, $1, $2);
    HEAP32[(HEAP32[(HEAP32[$381 >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$381 + 172 + ((HEAPU8[$381 + 50 >> 0] | 0) + -1 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$381 + 24 >> 2];
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $425 = $0 + 16 | 0;
   $426 = $0 + 32 | 0;
   $$013$i = 0;
   $427 = $378;
   L170 : while (1) {
    if (($427 | 0) != 285) {
     $429 = HEAP32[$426 >> 2] | 0;
     HEAP32[$vararg_buffer22 >> 2] = __Z14luaX_token2strP8LexStatei($0, 285) | 0;
     __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($429, 87798, $vararg_buffer22) | 0);
    }
    $432 = HEAP32[$425 >> 2] | 0;
    __Z9luaX_nextP8LexState($0);
    $433 = $$013$i + 1 | 0;
    __ZL12new_localvarP8LexStateP7TStringi($0, $432, $$013$i);
    switch (HEAP32[$6 >> 2] | 0) {
    case 61:
     {
      label = 114;
      break L170;
      break;
     }
    case 44:
     break;
    default:
     {
      label = 117;
      break L170;
     }
    }
    __Z9luaX_nextP8LexState($0);
    $$013$i = $433;
    $427 = HEAP32[$6 >> 2] | 0;
   }
   if ((label | 0) == 114) {
    __Z9luaX_nextP8LexState($0);
    __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
    if ((HEAP32[$6 >> 2] | 0) == 44) {
     $437 = $0 + 28 | 0;
     $$0$i17$i79 = 1;
     while (1) {
      __Z9luaX_nextP8LexState($0);
      __Z16luaK_exp2nextregP9FuncStateP7expdesc(HEAP32[$437 >> 2] | 0, $1);
      __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
      $439 = $$0$i17$i79 + 1 | 0;
      if ((HEAP32[$6 >> 2] | 0) == 44) $$0$i17$i79 = $439; else {
       $$0$i53 = $439;
       break;
      }
     }
    } else $$0$i53 = 1;
   } else if ((label | 0) == 117) {
    HEAP32[$1 >> 2] = 0;
    $$0$i53 = 0;
   }
   $$idx14$i = $0 + 28 | 0;
   $$idx14$val$i = HEAP32[$$idx14$i >> 2] | 0;
   $442 = $433 - $$0$i53 | 0;
   switch (HEAP32[$1 >> 2] | 0) {
   case 14:
   case 13:
    {
     $444 = $442 + 1 | 0;
     $$$i$i = ($444 | 0) < 0 ? 0 : $444;
     __Z15luaK_setreturnsP9FuncStateP7expdesci($$idx14$val$i, $1, $$$i$i);
     if (($$$i$i | 0) > 1) __Z16luaK_reserveregsP9FuncStatei($$idx14$val$i, $$$i$i + -1 | 0);
     break;
    }
   case 0:
    {
     label = 122;
     break;
    }
   default:
    {
     __Z16luaK_exp2nextregP9FuncStateP7expdesc($$idx14$val$i, $1);
     label = 122;
    }
   }
   if ((label | 0) == 122) if (($442 | 0) > 0) {
    $450 = HEAP32[$$idx14$val$i + 36 >> 2] | 0;
    __Z16luaK_reserveregsP9FuncStatei($$idx14$val$i, $442);
    __Z8luaK_nilP9FuncStateii($$idx14$val$i, $450, $442);
   }
   $$idx$val$i55 = HEAP32[$$idx14$i >> 2] | 0;
   $451 = $$idx$val$i55 + 50 | 0;
   $454 = (HEAPU8[$451 >> 0] | 0) + $433 | 0;
   HEAP8[$451 >> 0] = $454;
   $456 = $$idx$val$i55 + 24 | 0;
   HEAP32[(HEAP32[(HEAP32[$$idx$val$i55 >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i55 + 172 + (($454 & 255) - $433 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$456 >> 2];
   if ($$013$i | 0) {
    $471 = $$013$i;
    do {
     HEAP32[(HEAP32[(HEAP32[$$idx$val$i55 >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i55 + 172 + ((HEAPU8[$451 >> 0] | 0) - $471 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$456 >> 2];
     $471 = $471 + -1 | 0;
    } while (($471 | 0) != 0);
   }
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 273:
  {
   $481 = $0 + 28 | 0;
   $482 = HEAP32[$481 >> 2] | 0;
   __Z9luaX_nextP8LexState($0);
   L197 : do switch (HEAP32[$6 >> 2] | 0) {
   case 59:
   case 287:
   case 276:
   case 262:
   case 261:
   case 260:
    {
     $$0$i64 = 0;
     $$021$i = 0;
     break;
    }
   default:
    {
     __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
     if ((HEAP32[$6 >> 2] | 0) == 44) {
      $$0$i22$i83 = 1;
      while (1) {
       __Z9luaX_nextP8LexState($0);
       __Z16luaK_exp2nextregP9FuncStateP7expdesc(HEAP32[$481 >> 2] | 0, $1);
       __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
       $487 = $$0$i22$i83 + 1 | 0;
       if ((HEAP32[$6 >> 2] | 0) == 44) $$0$i22$i83 = $487; else {
        $$0$i22$i$lcssa = $487;
        break;
       }
      }
     } else $$0$i22$i$lcssa = 1;
     if (((HEAP32[$1 >> 2] | 0) + -13 | 0) >>> 0 < 2) {
      __Z15luaK_setreturnsP9FuncStateP7expdesci($482, $1, -1);
      if (($$0$i22$i$lcssa | 0) == 1 & (HEAP32[$1 >> 2] | 0) == 13) {
       $499 = (HEAP32[(HEAP32[$482 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$1 + 4 >> 2] << 2) | 0;
       HEAP32[$499 >> 2] = HEAP32[$499 >> 2] & -64 | 29;
      }
      $$0$i64 = -1;
      $$021$i = HEAPU8[$482 + 50 >> 0] | 0;
      break L197;
     } else if (($$0$i22$i$lcssa | 0) == 1) {
      $$0$i64 = 1;
      $$021$i = __Z15luaK_exp2anyregP9FuncStateP7expdesc($482, $1) | 0;
      break L197;
     } else {
      __Z16luaK_exp2nextregP9FuncStateP7expdesc($482, $1);
      $$0$i64 = $$0$i22$i$lcssa;
      $$021$i = HEAPU8[$482 + 50 >> 0] | 0;
      break L197;
     }
    }
   } while (0);
   __Z8luaK_retP9FuncStateii($482, $$021$i, $$0$i64);
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 258:
  {
   __Z9luaX_nextP8LexState($0);
   $512 = HEAP32[$0 + 28 >> 2] | 0;
   $$01824$i = HEAP32[$512 + 20 >> 2] | 0;
   L215 : do if (!$$01824$i) {
    $$0$lcssa$i = 0;
    label = 141;
   } else {
    $$01826$i = $$01824$i;
    $$025$i = 0;
    while (1) {
     if (HEAP8[$$01826$i + 10 >> 0] | 0) {
      $$01821$i = $$01826$i;
      $$023$i = $$025$i;
      break L215;
     }
     $521 = HEAPU8[$$01826$i + 9 >> 0] | $$025$i;
     $$01826$i = HEAP32[$$01826$i >> 2] | 0;
     if (!$$01826$i) {
      $$0$lcssa$i = $521;
      label = 141;
      break;
     } else $$025$i = $521;
    }
   } while (0);
   if ((label | 0) == 141) {
    __Z16luaX_syntaxerrorP8LexStatePKc($0, 87910);
    $$01821$i = 0;
    $$023$i = $$0$lcssa$i;
   }
   if ($$023$i | 0) __Z12luaK_codeABCP9FuncState6OpCodeiii($512, 35, HEAPU8[$$01821$i + 8 >> 0] | 0, 0, 0) | 0;
   __Z11luaK_concatP9FuncStatePii($512, $$01821$i + 4 | 0, __Z9luaK_jumpP9FuncState($512) | 0);
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 default:
  {
   $530 = HEAP32[$0 + 28 >> 2] | 0;
   $531 = $1 + 4 | 0;
   __ZL10primaryexpP8LexStateP7expdesc($0, $531);
   if ((HEAP32[$531 >> 2] | 0) == 13) {
    $539 = (HEAP32[(HEAP32[$530 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$1 + 8 >> 2] << 2) | 0;
    HEAP32[$539 >> 2] = HEAP32[$539 >> 2] & -8372225 | 16384;
   } else {
    HEAP32[$1 >> 2] = 0;
    __ZL10assignmentP8LexStateP10LHS_assigni($0, $1, 1);
   }
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 return 0;
}

function __ZN6googleL29ParseCommandLineFlagsInternalEPiPPPcbb($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i19$i$i = 0, $$0$i$i24$i$i = 0, $$0$i$i38$i$i = 0, $$0$i$i47$i$i = 0, $$05$i$i$i$i$i = 0, $$082$i = 0, $$084222$i = 0, $$088221$i = 0, $$181$i = 0, $$185$i = 0, $$189112$i = 0, $$286$i = 0, $$290$i = 0, $$387113$i = 0, $$391$i = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val23$i79$i$i = 0, $$idx1$val$i$i = 0, $$idx3$val$i$i = 0, $$idx4$val$i$i = 0, $$idx4$val$i$i$i$i = 0, $$idx94$i = 0, $$idx94$val$i = 0, $$idx96$val$i = 0, $$sroa$068$0144$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $111 = 0, $119 = 0, $12 = 0, $122 = 0, $125 = 0, $126 = 0, $128 = 0, $13 = 0, $130 = 0, $136 = 0, $138 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $145 = 0, $15 = 0, $16 = 0, $161 = 0, $169 = 0, $182 = 0, $183 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $19 = 0, $192 = 0, $196 = 0, $201 = 0, $206 = 0, $21 = 0, $210 = 0, $211 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $22 = 0, $220 = 0, $224 = 0, $227 = 0, $228 = 0, $230 = 0, $231 = 0, $232 = 0, $237 = 0, $240 = 0, $241 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $25 = 0, $250 = 0, $254 = 0, $258 = 0, $260 = 0, $261 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $270 = 0, $274 = 0, $278 = 0, $28 = 0, $280 = 0, $282 = 0, $285 = 0, $29 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $30 = 0, $31 = 0, $32 = 0, $36 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $70 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $4 = sp + 160 | 0;
 $5 = sp + 148 | 0;
 $6 = sp + 136 | 0;
 $7 = sp + 124 | 0;
 $8 = sp + 112 | 0;
 $9 = sp + 64 | 0;
 $10 = sp + 52 | 0;
 $11 = sp + 40 | 0;
 $12 = sp + 28 | 0;
 $13 = sp;
 $14 = sp + 100 | 0;
 $15 = sp + 88 | 0;
 $16 = sp + 76 | 0;
 __ZN6google7SetArgvEiPPKc(HEAP32[$0 >> 2] | 0, HEAP32[$1 >> 2] | 0);
 $19 = HEAP32[27053] | 0;
 if (!$19) {
  $21 = __Znwj(32) | 0;
  $22 = $21 + 4 | 0;
  HEAP32[$22 >> 2] = 0;
  HEAP32[$21 + 8 >> 2] = 0;
  HEAP32[$21 >> 2] = $22;
  $25 = $21 + 16 | 0;
  HEAP32[$25 >> 2] = 0;
  HEAP32[$21 + 20 >> 2] = 0;
  HEAP32[$21 + 12 >> 2] = $25;
  HEAP32[$21 + 24 >> 2] = 0;
  HEAP32[27053] = $21;
  $28 = $21;
 } else $28 = $19;
 HEAP32[$13 >> 2] = $28;
 $29 = $13 + 4 | 0;
 $30 = $13 + 8 | 0;
 HEAP32[$30 >> 2] = 0;
 $31 = $13 + 12 | 0;
 HEAP32[$31 >> 2] = 0;
 $32 = $13 + 8 | 0;
 HEAP32[$29 >> 2] = $32;
 HEAP32[$13 + 20 >> 2] = 0;
 HEAP32[$13 + 24 >> 2] = 0;
 $36 = $13 + 20 | 0;
 HEAP32[$13 + 16 >> 2] = $36;
 __ZN6google12_GLOBAL__N_121CommandLineFlagParser21ProcessFlagfileLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeE($14, $13, HEAP32[27048] | 0, 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 __ZN6google12_GLOBAL__N_121CommandLineFlagParser20ProcessFromenvLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeEb($15, $13, HEAP32[27049] | 0, 0, 1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
 __ZN6google12_GLOBAL__N_121CommandLineFlagParser20ProcessFromenvLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeEb($16, $13, HEAP32[27050] | 0, 0, 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
 $40 = HEAP32[$0 >> 2] | 0;
 L4 : do if (($40 | 0) > 1) {
  $42 = $13 + 16 | 0;
  $43 = $13 + 4 | 0;
  $44 = $4 + 11 | 0;
  $45 = $4 + 4 | 0;
  $$084222$i = 1;
  $$088221$i = $40;
  while (1) {
   $47 = (HEAP32[$1 >> 2] | 0) + ($$084222$i << 2) | 0;
   $48 = HEAP32[$47 >> 2] | 0;
   if ((HEAP8[$48 >> 0] | 0) == 45) {
    $51 = $48 + 1 | 0;
    $52 = HEAP8[$51 >> 0] | 0;
    if (!($52 << 24 >> 24)) label = 7; else {
     $$181$i = $52 << 24 >> 24 == 45 ? $48 + 2 | 0 : $51;
     if (!(HEAP8[$$181$i >> 0] | 0)) break;
     HEAP32[$7 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     HEAP32[$9 >> 2] = 0;
     HEAP32[$9 + 4 >> 2] = 0;
     HEAP32[$9 + 8 >> 2] = 0;
     $70 = __ZN6google12_GLOBAL__N_112FlagRegistry19SplitArgumentLockedEPKcPNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPS3_SB_(HEAP32[$13 >> 2] | 0, $$181$i, $7, $8, $9) | 0;
     L12 : do if (!$70) {
      HEAP32[$4 >> 2] = $7;
      __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($6, $42, $7, 112127, $4, $5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((HEAP32[$6 >> 2] | 0) + 28 | 0, 114224) | 0;
      HEAP32[$4 >> 2] = $7;
      __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($6, $43, $7, 112127, $4, $5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_((HEAP32[$6 >> 2] | 0) + 28 | 0, $9) | 0;
      $$082$i = 4;
      $$286$i = $$084222$i;
     } else {
      $76 = HEAP32[$8 >> 2] | 0;
      do if (!$76) {
       $78 = $$084222$i + 1 | 0;
       if (($78 | 0) < ($$088221$i | 0)) {
        $111 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($78 << 2) >> 2] | 0;
        HEAP32[$8 >> 2] = $111;
        if ((HEAP8[$111 >> 0] | 0) != 45) {
         $$185$i = $78;
         $125 = $111;
         break;
        }
        if ((HEAP8[(HEAP32[$70 + 16 >> 2] | 0) + 4 >> 0] | 0) != 6) {
         $$185$i = $78;
         $125 = $111;
         break;
        }
        $$idx96$val$i = HEAP32[$70 + 4 >> 2] | 0;
        if (!(_strstr($$idx96$val$i, 104928) | 0)) if (!(_strstr($$idx96$val$i, 104922) | 0)) {
         $$185$i = $78;
         $125 = $111;
         break;
        }
        $119 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(109464, 91495, 33) | 0;
        $$idx$val$i = HEAP32[$70 >> 2] | 0;
        $122 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($119, $$idx$val$i, _strlen($$idx$val$i) | 0) | 0, 91529, 16) | 0;
        __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($122, $111, _strlen($111) | 0) | 0, 91546, 2) | 0;
        $$185$i = $78;
        $125 = $111;
        break;
       }
       HEAP32[$4 >> 2] = $7;
       __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($6, $43, $7, 112127, $4, $5);
       $80 = HEAP32[$6 >> 2] | 0;
       $81 = $80 + 28 | 0;
       HEAP32[$11 >> 2] = 0;
       HEAP32[$11 + 4 >> 2] = 0;
       HEAP32[$11 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($11, 90192, 7);
       $82 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($11, 91442) | 0;
       HEAP32[$10 >> 2] = HEAP32[$82 >> 2];
       HEAP32[$10 + 4 >> 2] = HEAP32[$82 + 4 >> 2];
       HEAP32[$10 + 8 >> 2] = HEAP32[$82 + 8 >> 2];
       HEAP32[$82 >> 2] = 0;
       HEAP32[$82 + 4 >> 2] = 0;
       HEAP32[$82 + 8 >> 2] = 0;
       $86 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($10, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$084222$i << 2) >> 2] | 0) | 0;
       HEAP32[$6 >> 2] = HEAP32[$86 >> 2];
       HEAP32[$6 + 4 >> 2] = HEAP32[$86 + 4 >> 2];
       HEAP32[$6 + 8 >> 2] = HEAP32[$86 + 8 >> 2];
       HEAP32[$86 >> 2] = 0;
       HEAP32[$86 + 4 >> 2] = 0;
       HEAP32[$86 + 8 >> 2] = 0;
       $87 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($6, 93211) | 0;
       HEAP32[$5 >> 2] = HEAP32[$87 >> 2];
       HEAP32[$5 + 4 >> 2] = HEAP32[$87 + 4 >> 2];
       HEAP32[$5 + 8 >> 2] = HEAP32[$87 + 8 >> 2];
       HEAP32[$87 >> 2] = 0;
       HEAP32[$87 + 4 >> 2] = 0;
       HEAP32[$87 + 8 >> 2] = 0;
       $88 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($5, 91449) | 0;
       HEAP32[$4 >> 2] = HEAP32[$88 >> 2];
       HEAP32[$4 + 4 >> 2] = HEAP32[$88 + 4 >> 2];
       HEAP32[$4 + 8 >> 2] = HEAP32[$88 + 8 >> 2];
       HEAP32[$88 >> 2] = 0;
       HEAP32[$88 + 4 >> 2] = 0;
       HEAP32[$88 + 8 >> 2] = 0;
       $89 = $81 + 11 | 0;
       if ((HEAP8[$89 >> 0] | 0) < 0) {
        HEAP8[HEAP32[$81 >> 2] >> 0] = 0;
        HEAP32[$80 + 32 >> 2] = 0;
       } else {
        HEAP8[$81 >> 0] = 0;
        HEAP8[$89 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($81, 0);
       HEAP32[$81 >> 2] = HEAP32[$4 >> 2];
       HEAP32[$81 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
       HEAP32[$81 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
       HEAP32[$4 >> 2] = 0;
       HEAP32[$4 + 4 >> 2] = 0;
       HEAP32[$4 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
       $$idx94$i = $70 + 4 | 0;
       $$idx94$val$i = HEAP32[$$idx94$i >> 2] | 0;
       if ($$idx94$val$i | 0) if ((HEAP8[$$idx94$val$i >> 0] | 0) > 1) {
        HEAP32[$4 >> 2] = $7;
        __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($6, $43, $7, 112127, $4, $5);
        $98 = (HEAP32[$6 >> 2] | 0) + 28 | 0;
        HEAP32[$5 >> 2] = 0;
        HEAP32[$5 + 4 >> 2] = 0;
        HEAP32[$5 + 8 >> 2] = 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 91474, 20);
        $99 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($5, HEAP32[$$idx94$i >> 2] | 0) | 0;
        HEAP32[$4 >> 2] = HEAP32[$99 >> 2];
        HEAP32[$4 + 4 >> 2] = HEAP32[$99 + 4 >> 2];
        HEAP32[$4 + 8 >> 2] = HEAP32[$99 + 8 >> 2];
        HEAP32[$99 >> 2] = 0;
        HEAP32[$99 + 4 >> 2] = 0;
        HEAP32[$99 + 8 >> 2] = 0;
        $100 = HEAP8[$44 >> 0] | 0;
        $101 = $100 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($98, $101 ? HEAP32[$4 >> 2] | 0 : $4, $101 ? HEAP32[$45 >> 2] | 0 : $100 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
       }
       HEAP32[$4 >> 2] = $7;
       __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($6, $43, $7, 112127, $4, $5);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc((HEAP32[$6 >> 2] | 0) + 28 | 0, 93202) | 0;
       $$082$i = 2;
       $$286$i = $$084222$i;
       break L12;
      } else {
       $$185$i = $$084222$i;
       $125 = $76;
      } while (0);
      __ZN6google12_GLOBAL__N_121CommandLineFlagParser25ProcessSingleOptionLockedEPNS0_15CommandLineFlagEPKcNS_15FlagSettingModeE($12, $13, $70, $125, 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
      $$082$i = 0;
      $$286$i = $$185$i;
     } while (0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     switch ($$082$i & 7) {
     case 4:
     case 0:
      {
       $$189112$i = $$088221$i;
       $$387113$i = $$286$i;
       break;
      }
     default:
      {
       $$290$i = $$088221$i;
       break L4;
      }
     }
    }
   } else label = 7;
   if ((label | 0) == 7) {
    label = 0;
    _memmove($47 | 0, $47 + 4 | 0, (HEAP32[$0 >> 2] | 0) + ($$084222$i ^ 1073741823) << 2 | 0) | 0;
    HEAP32[(HEAP32[$1 >> 2] | 0) + ((HEAP32[$0 >> 2] | 0) + -1 << 2) >> 2] = $48;
    $$189112$i = $$088221$i + -1 | 0;
    $$387113$i = $$084222$i + -1 | 0;
   }
   $126 = $$387113$i + 1 | 0;
   if (($126 | 0) < ($$189112$i | 0)) {
    $$084222$i = $126;
    $$088221$i = $$189112$i;
   } else {
    $$290$i = $$189112$i;
    break L4;
   }
  }
  $$290$i = $$084222$i + 1 | 0;
 } else $$290$i = $40; while (0);
 if ($2) {
  $128 = HEAP32[$1 >> 2] | 0;
  $130 = $$290$i + -1 | 0;
  HEAP32[$128 + ($130 << 2) >> 2] = HEAP32[$128 >> 2];
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + ($130 << 2);
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) - $130;
  $$391$i = 1;
 } else $$391$i = $$290$i;
 if ($3) __ZN6google26HandleCommandLineHelpFlagsEv();
 $136 = HEAP32[$13 >> 2] | 0;
 $$idx$val23$i79$i$i = HEAP32[$136 >> 2] | 0;
 $138 = $$idx$val23$i79$i$i;
 if (($138 | 0) != ($136 + 4 | 0)) {
  $$sroa$068$0144$i$i = $$idx$val23$i79$i$i;
  $141 = $138;
  while (1) {
   $140 = $141 + 20 | 0;
   $142 = HEAP32[$140 >> 2] | 0;
   do if (!(HEAP8[$142 + 12 >> 0] | 0)) {
    $145 = HEAP32[$142 + 20 >> 2] | 0;
    $$idx4$val$i$i$i$i = HEAP32[$142 + 24 >> 2] | 0;
    if ($$idx4$val$i$i$i$i | 0) {
     $$idx$val$i$i$i$i = HEAP32[$142 >> 2] | 0;
     switch (HEAP8[$145 + 4 >> 0] | 0) {
     case 0:
      {
       $$0$i$i24$i$i = FUNCTION_TABLE_iii[$$idx4$val$i$i$i$i & 31]($$idx$val$i$i$i$i, (HEAP8[HEAP32[$145 >> 2] >> 0] | 0) != 0) | 0;
       label = 45;
       break;
      }
     case 1:
      {
       $$0$i$i24$i$i = FUNCTION_TABLE_iii[$$idx4$val$i$i$i$i & 31]($$idx$val$i$i$i$i, HEAP32[HEAP32[$145 >> 2] >> 2] | 0) | 0;
       label = 45;
       break;
      }
     case 2:
      {
       $$0$i$i24$i$i = FUNCTION_TABLE_iii[$$idx4$val$i$i$i$i & 31]($$idx$val$i$i$i$i, HEAP32[HEAP32[$145 >> 2] >> 2] | 0) | 0;
       label = 45;
       break;
      }
     case 3:
      {
       $161 = HEAP32[$145 >> 2] | 0;
       $$0$i$i24$i$i = FUNCTION_TABLE_iiii[$$idx4$val$i$i$i$i & 63]($$idx$val$i$i$i$i, HEAP32[$161 >> 2] | 0, HEAP32[$161 + 4 >> 2] | 0) | 0;
       label = 45;
       break;
      }
     case 4:
      {
       $169 = HEAP32[$145 >> 2] | 0;
       $$0$i$i24$i$i = FUNCTION_TABLE_iiii[$$idx4$val$i$i$i$i & 63]($$idx$val$i$i$i$i, HEAP32[$169 >> 2] | 0, HEAP32[$169 + 4 >> 2] | 0) | 0;
       label = 45;
       break;
      }
     case 5:
      {
       $$0$i$i24$i$i = FUNCTION_TABLE_iid[$$idx4$val$i$i$i$i & 0]($$idx$val$i$i$i$i, +HEAPF64[HEAP32[$145 >> 2] >> 3]) | 0;
       label = 45;
       break;
      }
     case 6:
      {
       $$0$i$i24$i$i = FUNCTION_TABLE_iii[$$idx4$val$i$i$i$i & 31]($$idx$val$i$i$i$i, HEAP32[$145 >> 2] | 0) | 0;
       label = 45;
       break;
      }
     default:
      $$idx4$val$i$i = $$idx$val$i$i$i$i;
     }
     if ((label | 0) == 45) {
      label = 0;
      if ($$0$i$i24$i$i) break;
      $$idx4$val$i$i = HEAP32[HEAP32[$140 >> 2] >> 2] | 0;
     };
     HEAP32[$5 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, $$idx4$val$i$i, _strlen($$idx4$val$i$i) | 0);
     $182 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($29, $4, $5) | 0;
     $183 = HEAP32[$182 >> 2] | 0;
     if (!$183) {
      $185 = __Znwj(40) | 0;
      $186 = $185 + 16 | 0;
      HEAP32[$186 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$186 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$186 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      HEAP32[$5 >> 2] = 0;
      HEAP32[$5 + 4 >> 2] = 0;
      HEAP32[$5 + 8 >> 2] = 0;
      $187 = $185 + 28 | 0;
      HEAP32[$187 >> 2] = 0;
      HEAP32[$187 + 4 >> 2] = 0;
      HEAP32[$187 + 8 >> 2] = 0;
      $188 = HEAP32[$4 >> 2] | 0;
      HEAP32[$185 >> 2] = 0;
      HEAP32[$185 + 4 >> 2] = 0;
      HEAP32[$185 + 8 >> 2] = $188;
      HEAP32[$182 >> 2] = $185;
      $192 = HEAP32[HEAP32[$29 >> 2] >> 2] | 0;
      if (!$192) $196 = $185; else {
       HEAP32[$29 >> 2] = $192;
       $196 = HEAP32[$182 >> 2] | 0;
      }
      __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$30 >> 2] | 0, $196);
      HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
      $$0$i$i38$i$i = $185;
     } else $$0$i$i38$i$i = $183;
     $201 = HEAP8[$$0$i$i38$i$i + 28 + 11 >> 0] | 0;
     if ($201 << 24 >> 24 < 0) $206 = HEAP32[$$0$i$i38$i$i + 32 >> 2] | 0; else $206 = $201 & 255;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     if (!$206) {
      $$idx3$val$i$i = HEAP32[HEAP32[$140 >> 2] >> 2] | 0;
      HEAP32[$5 >> 2] = 0;
      HEAP32[$5 + 4 >> 2] = 0;
      HEAP32[$5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, $$idx3$val$i$i, _strlen($$idx3$val$i$i) | 0);
      $210 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($29, $4, $5) | 0;
      $211 = HEAP32[$210 >> 2] | 0;
      if (!$211) {
       $213 = __Znwj(40) | 0;
       $214 = $213 + 16 | 0;
       HEAP32[$214 >> 2] = HEAP32[$5 >> 2];
       HEAP32[$214 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
       HEAP32[$214 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
       HEAP32[$5 >> 2] = 0;
       HEAP32[$5 + 4 >> 2] = 0;
       HEAP32[$5 + 8 >> 2] = 0;
       $215 = $213 + 28 | 0;
       HEAP32[$215 >> 2] = 0;
       HEAP32[$215 + 4 >> 2] = 0;
       HEAP32[$215 + 8 >> 2] = 0;
       $216 = HEAP32[$4 >> 2] | 0;
       HEAP32[$213 >> 2] = 0;
       HEAP32[$213 + 4 >> 2] = 0;
       HEAP32[$213 + 8 >> 2] = $216;
       HEAP32[$210 >> 2] = $213;
       $220 = HEAP32[HEAP32[$29 >> 2] >> 2] | 0;
       if (!$220) $224 = $213; else {
        HEAP32[$29 >> 2] = $220;
        $224 = HEAP32[$210 >> 2] | 0;
       }
       __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$30 >> 2] | 0, $224);
       HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
       $$0$i$i47$i$i = $213;
      } else $$0$i$i47$i$i = $211;
      $227 = $$0$i$i47$i$i + 28 | 0;
      HEAP32[$8 >> 2] = 0;
      HEAP32[$8 + 4 >> 2] = 0;
      HEAP32[$8 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($8, 90192, 7);
      $228 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($8, 91436) | 0;
      HEAP32[$7 >> 2] = HEAP32[$228 >> 2];
      HEAP32[$7 + 4 >> 2] = HEAP32[$228 + 4 >> 2];
      HEAP32[$7 + 8 >> 2] = HEAP32[$228 + 8 >> 2];
      HEAP32[$228 >> 2] = 0;
      HEAP32[$228 + 4 >> 2] = 0;
      HEAP32[$228 + 8 >> 2] = 0;
      $230 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($7, HEAP32[HEAP32[$140 >> 2] >> 2] | 0) | 0;
      HEAP32[$6 >> 2] = HEAP32[$230 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$230 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$230 + 8 >> 2];
      HEAP32[$230 >> 2] = 0;
      HEAP32[$230 + 4 >> 2] = 0;
      HEAP32[$230 + 8 >> 2] = 0;
      $231 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($6, 91549) | 0;
      HEAP32[$4 >> 2] = HEAP32[$231 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$231 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$231 + 8 >> 2];
      HEAP32[$231 >> 2] = 0;
      HEAP32[$231 + 4 >> 2] = 0;
      HEAP32[$231 + 8 >> 2] = 0;
      $232 = $227 + 11 | 0;
      if ((HEAP8[$232 >> 0] | 0) < 0) {
       HEAP8[HEAP32[$227 >> 2] >> 0] = 0;
       HEAP32[$$0$i$i47$i$i + 32 >> 2] = 0;
      } else {
       HEAP8[$227 >> 0] = 0;
       HEAP8[$232 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($227, 0);
      HEAP32[$227 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$227 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$227 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      HEAP32[$4 >> 2] = 0;
      HEAP32[$4 + 4 >> 2] = 0;
      HEAP32[$4 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      $237 = HEAP32[$140 >> 2] | 0;
      if (!(HEAP8[$237 + 12 >> 0] | 0)) {
       $$idx1$val$i$i = HEAP32[$237 >> 2] | 0;
       HEAP32[$5 >> 2] = 0;
       HEAP32[$5 + 4 >> 2] = 0;
       HEAP32[$5 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, $$idx1$val$i$i, _strlen($$idx1$val$i$i) | 0);
       $240 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($29, $4, $5) | 0;
       $241 = HEAP32[$240 >> 2] | 0;
       if (!$241) {
        $243 = __Znwj(40) | 0;
        $244 = $243 + 16 | 0;
        HEAP32[$244 >> 2] = HEAP32[$5 >> 2];
        HEAP32[$244 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
        HEAP32[$244 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
        HEAP32[$5 >> 2] = 0;
        HEAP32[$5 + 4 >> 2] = 0;
        HEAP32[$5 + 8 >> 2] = 0;
        $245 = $243 + 28 | 0;
        HEAP32[$245 >> 2] = 0;
        HEAP32[$245 + 4 >> 2] = 0;
        HEAP32[$245 + 8 >> 2] = 0;
        $246 = HEAP32[$4 >> 2] | 0;
        HEAP32[$243 >> 2] = 0;
        HEAP32[$243 + 4 >> 2] = 0;
        HEAP32[$243 + 8 >> 2] = $246;
        HEAP32[$240 >> 2] = $243;
        $250 = HEAP32[HEAP32[$29 >> 2] >> 2] | 0;
        if (!$250) $254 = $243; else {
         HEAP32[$29 >> 2] = $250;
         $254 = HEAP32[$240 >> 2] | 0;
        }
        __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$30 >> 2] | 0, $254);
        HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
        $$0$i$i19$i$i = $243;
       } else $$0$i$i19$i$i = $241;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($$0$i$i19$i$i + 28 | 0, 91581) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
       $258 = HEAP32[$140 >> 2] | 0;
      } else $258 = $237;
      $$idx$val$i$i = HEAP32[$258 >> 2] | 0;
      HEAP32[$5 >> 2] = 0;
      HEAP32[$5 + 4 >> 2] = 0;
      HEAP32[$5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, $$idx$val$i$i, _strlen($$idx$val$i$i) | 0);
      $260 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($29, $4, $5) | 0;
      $261 = HEAP32[$260 >> 2] | 0;
      if (!$261) {
       $263 = __Znwj(40) | 0;
       $264 = $263 + 16 | 0;
       HEAP32[$264 >> 2] = HEAP32[$5 >> 2];
       HEAP32[$264 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
       HEAP32[$264 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
       HEAP32[$5 >> 2] = 0;
       HEAP32[$5 + 4 >> 2] = 0;
       HEAP32[$5 + 8 >> 2] = 0;
       $265 = $263 + 28 | 0;
       HEAP32[$265 >> 2] = 0;
       HEAP32[$265 + 4 >> 2] = 0;
       HEAP32[$265 + 8 >> 2] = 0;
       $266 = HEAP32[$4 >> 2] | 0;
       HEAP32[$263 >> 2] = 0;
       HEAP32[$263 + 4 >> 2] = 0;
       HEAP32[$263 + 8 >> 2] = $266;
       HEAP32[$260 >> 2] = $263;
       $270 = HEAP32[HEAP32[$29 >> 2] >> 2] | 0;
       if (!$270) $274 = $263; else {
        HEAP32[$29 >> 2] = $270;
        $274 = HEAP32[$260 >> 2] | 0;
       }
       __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$30 >> 2] | 0, $274);
       HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
       $$0$i$i$i$i = $263;
      } else $$0$i$i$i$i = $261;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($$0$i$i$i$i + 28 | 0, 93202) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     }
    }
   } while (0);
   $278 = $$sroa$068$0144$i$i;
   $280 = HEAP32[$278 + 4 >> 2] | 0;
   if (!$280) {
    $$0$i$i$i$i$i = $278;
    while (1) {
     $285 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$285 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$05$i$i$i$i$i = $285;
      break;
     } else $$0$i$i$i$i$i = $285;
    }
   } else {
    $$0$i$i$i$i$i$i = $280;
    while (1) {
     $282 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$282) {
      $$05$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $282;
    }
   }
   if (($$05$i$i$i$i$i | 0) == ((HEAP32[$13 >> 2] | 0) + 4 | 0)) break; else {
    $$sroa$068$0144$i$i = $$05$i$i$i$i$i;
    $141 = $$05$i$i$i$i$i;
   }
  }
 }
 if (!(__ZN6google12_GLOBAL__N_121CommandLineFlagParser12ReportErrorsEv($13) | 0)) {
  $294 = $13 + 16 | 0;
  $295 = HEAP32[$36 >> 2] | 0;
  __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($294, $295);
  $296 = $13 + 4 | 0;
  $297 = HEAP32[$32 >> 2] | 0;
  __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($296, $297);
  STACKTOP = sp;
  return $$391$i | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
 $294 = $13 + 16 | 0;
 $295 = HEAP32[$36 >> 2] | 0;
 __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($294, $295);
 $296 = $13 + 4 | 0;
 $297 = HEAP32[$32 >> 2] | 0;
 __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($296, $297);
 STACKTOP = sp;
 return $$391$i | 0;
}

function __ZNSt3__26__sortIRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEvT0_S6_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i189 = 0, $$0$i192 = 0, $$0$i195 = 0, $$0$i198 = 0, $$0$i201 = 0, $$0$i204 = 0, $$0$i207 = 0, $$0$i210 = 0, $$0$i213 = 0, $$0$ph = 0, $$0154 = 0, $$0160270 = 0, $$0167 = 0, $$0174 = 0, $$0180$ph = 0, $$1 = 0, $$1155 = 0, $$1161 = 0, $$2156 = 0, $$2162 = 0, $$2176 = 0, $$3157 = 0, $$3163 = 0, $$3170 = 0, $$4158 = 0, $$4164 = 0, $$4171 = 0, $$5159 = 0, $$5165 = 0, $$5172 = 0, $$6166 = 0, $$6173 = 0, $10 = 0, $101 = 0, $102 = 0, $106 = 0, $107 = 0, $11 = 0, $112 = 0, $113 = 0, $12 = 0, $127 = 0, $13 = 0, $130 = 0, $135 = 0, $14 = 0, $149 = 0, $15 = 0, $150 = 0, $156 = 0, $16 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $174 = 0, $179 = 0, $18 = 0, $180 = 0, $185 = 0, $188 = 0, $19 = 0, $192 = 0, $193 = 0, $199 = 0, $20 = 0, $21 = 0, $212 = 0, $214 = 0, $22 = 0, $220 = 0, $23 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $239 = 0, $24 = 0, $244 = 0, $245 = 0, $249 = 0, $25 = 0, $255 = 0, $26 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $273 = 0, $278 = 0, $279 = 0, $28 = 0, $284 = 0, $286 = 0, $29 = 0, $291 = 0, $292 = 0, $293 = 0, $299 = 0, $3 = 0, $30 = 0, $31 = 0, $312 = 0, $314 = 0, $32 = 0, $320 = 0, $33 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $339 = 0, $34 = 0, $344 = 0, $345 = 0, $35 = 0, $352 = 0, $358 = 0, $36 = 0, $364 = 0, $37 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $383 = 0, $388 = 0, $389 = 0, $39 = 0, $395 = 0, $396 = 0, $398 = 0, $4 = 0, $40 = 0, $46 = 0, $5 = 0, $52 = 0, $6 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $8 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0, $$0154$looptemp = 0, $$2156$looptemp = 0, $$5159$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $3 = sp;
 $4 = $3 + 12 | 0;
 $5 = $3 + 24 | 0;
 $6 = $3 + 36 | 0;
 $7 = $3 + 48 | 0;
 $8 = $3 + 60 | 0;
 $9 = $3 + 72 | 0;
 $10 = $3 + 12 | 0;
 $11 = $3 + 24 | 0;
 $12 = $3 + 36 | 0;
 $13 = $3 + 48 | 0;
 $14 = $3 + 60 | 0;
 $15 = $3 + 72 | 0;
 $16 = $3 + 12 | 0;
 $17 = $3 + 24 | 0;
 $18 = $3 + 36 | 0;
 $19 = $3 + 48 | 0;
 $20 = $3 + 60 | 0;
 $21 = $3 + 72 | 0;
 $22 = $3 + 12 | 0;
 $23 = $3 + 24 | 0;
 $24 = $3 + 36 | 0;
 $25 = $3 + 48 | 0;
 $26 = $3 + 60 | 0;
 $27 = $3 + 72 | 0;
 $28 = $3 + 12 | 0;
 $29 = $3 + 24 | 0;
 $30 = $3 + 36 | 0;
 $31 = $3 + 48 | 0;
 $32 = $3 + 60 | 0;
 $33 = $3 + 72 | 0;
 $$0$ph = $0;
 $$0180$ph = $1;
 L1 : while (1) {
  $34 = $$0180$ph;
  $35 = $$0180$ph + -80 | 0;
  $36 = $$0180$ph + -20 | 0;
  $37 = $36 + 11 | 0;
  $38 = $35 + 11 | 0;
  $$0 = $$0$ph;
  while (1) {
   $$1 = $$0;
   L5 : while (1) {
    $39 = $$1;
    $40 = $34 - $39 | 0;
    switch (($40 | 0) / 80 | 0 | 0) {
    case 2:
     {
      label = 5;
      break L1;
      break;
     }
    case 3:
     {
      label = 9;
      break L1;
      break;
     }
    case 4:
     {
      label = 10;
      break L1;
      break;
     }
    case 5:
     {
      label = 11;
      break L1;
      break;
     }
    case 1:
    case 0:
     {
      label = 69;
      break L1;
      break;
     }
    default:
     {}
    }
    if (($40 | 0) < 560) {
     label = 13;
     break L1;
    }
    $94 = ($40 >>> 0) / 160 | 0;
    $95 = $$1 + ($94 * 80 | 0) | 0;
    if (($40 | 0) > 79920) {
     $96 = ($40 >>> 0) / 320 | 0;
     $$0167 = __ZNSt3__27__sort5IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_S6_S6_T_($$1, $$1 + ($96 * 80 | 0) | 0, $95, $95 + ($96 * 80 | 0) | 0, $35, $2) | 0;
    } else $$0167 = __ZNSt3__27__sort3IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_T_($$1, $95, $35, $2) | 0;
    $101 = $$1 + 60 | 0;
    $102 = $101 + 11 | 0;
    $106 = (HEAP8[$102 >> 0] | 0) < 0 ? HEAP32[$101 >> 2] | 0 : $101;
    $107 = $$1 + ($94 * 80 | 0) + 60 | 0;
    $112 = (HEAP8[$107 + 11 >> 0] | 0) < 0 ? HEAP32[$107 >> 2] | 0 : $107;
    $113 = _strcmp($106, $112) | 0;
    if (!$113) $$0$i189 = _strcmp((HEAP8[$$1 + 11 >> 0] | 0) < 0 ? HEAP32[$$1 >> 2] | 0 : $$1, (HEAP8[$95 + 11 >> 0] | 0) < 0 ? HEAP32[$95 >> 2] | 0 : $95) | 0; else $$0$i189 = $113;
    if (($$0$i189 | 0) < 0) {
     $$3157 = $35;
     $$3170 = $$0167;
     break;
    }
    $127 = $95 + 11 | 0;
    $$0154 = $35;
    while (1) {
     $$0154$looptemp = $$0154;
     $$0154 = $$0154 + -80 | 0;
     if (($$1 | 0) == ($$0154 | 0)) break;
     $249 = $$0154$looptemp + -20 | 0;
     $255 = _strcmp((HEAP8[$249 + 11 >> 0] | 0) < 0 ? HEAP32[$249 >> 2] | 0 : $249, $112) | 0;
     if (!$255) $$0$i204 = _strcmp((HEAP8[$$0154 + 11 >> 0] | 0) < 0 ? HEAP32[$$0154 >> 2] | 0 : $$0154, (HEAP8[$127 >> 0] | 0) < 0 ? HEAP32[$95 >> 2] | 0 : $95) | 0; else $$0$i204 = $255;
     if (($$0$i204 | 0) < 0) {
      label = 46;
      break L5;
     }
    }
    $130 = $$1 + 80 | 0;
    $135 = _strcmp($106, (HEAP8[$37 >> 0] | 0) < 0 ? HEAP32[$36 >> 2] | 0 : $36) | 0;
    if (!$135) $$0$i192 = _strcmp((HEAP8[$$1 + 11 >> 0] | 0) < 0 ? HEAP32[$$1 >> 2] | 0 : $$1, (HEAP8[$38 >> 0] | 0) < 0 ? HEAP32[$35 >> 2] | 0 : $35) | 0; else $$0$i192 = $135;
    if (($$0$i192 | 0) < 0) $$1161 = $130; else {
     if (($130 | 0) == ($35 | 0)) {
      label = 69;
      break L1;
     }
     $149 = $$1 + 11 | 0;
     $$0160270 = $130;
     while (1) {
      $150 = $$0160270 + 60 | 0;
      $156 = _strcmp($106, (HEAP8[$150 + 11 >> 0] | 0) < 0 ? HEAP32[$150 >> 2] | 0 : $150) | 0;
      if (!$156) $$0$i195 = _strcmp((HEAP8[$149 >> 0] | 0) < 0 ? HEAP32[$$1 >> 2] | 0 : $$1, (HEAP8[$$0160270 + 11 >> 0] | 0) < 0 ? HEAP32[$$0160270 >> 2] | 0 : $$0160270) | 0; else $$0$i195 = $156;
      if (($$0$i195 | 0) < 0) break;
      $185 = $$0160270 + 80 | 0;
      if (($185 | 0) == ($35 | 0)) {
       label = 69;
       break L1;
      } else $$0160270 = $185;
     }
     HEAP32[$3 >> 2] = HEAP32[$$0160270 >> 2];
     HEAP32[$3 + 4 >> 2] = HEAP32[$$0160270 + 4 >> 2];
     HEAP32[$3 + 8 >> 2] = HEAP32[$$0160270 + 8 >> 2];
     HEAP32[$$0160270 >> 2] = 0;
     HEAP32[$$0160270 + 4 >> 2] = 0;
     HEAP32[$$0160270 + 8 >> 2] = 0;
     $169 = $$0160270 + 12 | 0;
     HEAP32[$10 >> 2] = HEAP32[$169 >> 2];
     HEAP32[$10 + 4 >> 2] = HEAP32[$169 + 4 >> 2];
     HEAP32[$10 + 8 >> 2] = HEAP32[$169 + 8 >> 2];
     HEAP32[$169 >> 2] = 0;
     HEAP32[$169 + 4 >> 2] = 0;
     HEAP32[$169 + 8 >> 2] = 0;
     $170 = $$0160270 + 24 | 0;
     HEAP32[$11 >> 2] = HEAP32[$170 >> 2];
     HEAP32[$11 + 4 >> 2] = HEAP32[$170 + 4 >> 2];
     HEAP32[$11 + 8 >> 2] = HEAP32[$170 + 8 >> 2];
     HEAP32[$170 >> 2] = 0;
     HEAP32[$170 + 4 >> 2] = 0;
     HEAP32[$170 + 8 >> 2] = 0;
     $171 = $$0160270 + 36 | 0;
     HEAP32[$12 >> 2] = HEAP32[$171 >> 2];
     HEAP32[$12 + 4 >> 2] = HEAP32[$171 + 4 >> 2];
     HEAP32[$12 + 8 >> 2] = HEAP32[$171 + 8 >> 2];
     HEAP32[$171 >> 2] = 0;
     HEAP32[$171 + 4 >> 2] = 0;
     HEAP32[$171 + 8 >> 2] = 0;
     $172 = $$0160270 + 48 | 0;
     HEAP32[$13 >> 2] = HEAP32[$172 >> 2];
     HEAP32[$13 + 4 >> 2] = HEAP32[$172 + 4 >> 2];
     HEAP32[$13 + 8 >> 2] = HEAP32[$172 + 8 >> 2];
     HEAP32[$172 >> 2] = 0;
     HEAP32[$172 + 4 >> 2] = 0;
     HEAP32[$172 + 8 >> 2] = 0;
     HEAP32[$14 >> 2] = HEAP32[$150 >> 2];
     HEAP32[$14 + 4 >> 2] = HEAP32[$150 + 4 >> 2];
     HEAP32[$14 + 8 >> 2] = HEAP32[$150 + 8 >> 2];
     HEAP32[$150 >> 2] = 0;
     HEAP32[$150 + 4 >> 2] = 0;
     HEAP32[$150 + 8 >> 2] = 0;
     $174 = $$0160270 + 72 | 0;
     $179 = HEAP32[$174 + 4 >> 2] | 0;
     $180 = $15;
     HEAP32[$180 >> 2] = HEAP32[$174 >> 2];
     HEAP32[$180 + 4 >> 2] = $179;
     __ZN6google19CommandLineFlagInfoaSEOS0_($$0160270, $35) | 0;
     __ZN6google19CommandLineFlagInfoaSEOS0_($35, $3) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$1161 = $$0160270 + 80 | 0;
    }
    if (($$1161 | 0) == ($35 | 0)) {
     label = 69;
     break L1;
    }
    $188 = $$1 + 11 | 0;
    $$1155 = $35;
    $$2162 = $$1161;
    while (1) {
     $192 = (HEAP8[$102 >> 0] | 0) < 0 ? HEAP32[$101 >> 2] | 0 : $101;
     $$3163 = $$2162;
     while (1) {
      $193 = $$3163 + 60 | 0;
      $199 = _strcmp($192, (HEAP8[$193 + 11 >> 0] | 0) < 0 ? HEAP32[$193 >> 2] | 0 : $193) | 0;
      if (!$199) $$0$i198 = _strcmp((HEAP8[$188 >> 0] | 0) < 0 ? HEAP32[$$1 >> 2] | 0 : $$1, (HEAP8[$$3163 + 11 >> 0] | 0) < 0 ? HEAP32[$$3163 >> 2] | 0 : $$3163) | 0; else $$0$i198 = $199;
      $212 = $$3163 + 80 | 0;
      if (($$0$i198 | 0) < 0) {
       $$2156 = $$1155;
       break;
      } else $$3163 = $212;
     }
     do {
      $$2156$looptemp = $$2156;
      $$2156 = $$2156 + -80 | 0;
      $214 = $$2156$looptemp + -20 | 0;
      $220 = _strcmp($192, (HEAP8[$214 + 11 >> 0] | 0) < 0 ? HEAP32[$214 >> 2] | 0 : $214) | 0;
      if (!$220) $$0$i201 = _strcmp((HEAP8[$188 >> 0] | 0) < 0 ? HEAP32[$$1 >> 2] | 0 : $$1, (HEAP8[$$2156 + 11 >> 0] | 0) < 0 ? HEAP32[$$2156 >> 2] | 0 : $$2156) | 0; else $$0$i201 = $220;
     } while (($$0$i201 | 0) < 0);
     if ($$3163 >>> 0 >= $$2156 >>> 0) {
      $$1 = $$3163;
      continue L5;
     };
     HEAP32[$3 >> 2] = HEAP32[$$3163 >> 2];
     HEAP32[$3 + 4 >> 2] = HEAP32[$$3163 + 4 >> 2];
     HEAP32[$3 + 8 >> 2] = HEAP32[$$3163 + 8 >> 2];
     HEAP32[$$3163 >> 2] = 0;
     HEAP32[$$3163 + 4 >> 2] = 0;
     HEAP32[$$3163 + 8 >> 2] = 0;
     $234 = $$3163 + 12 | 0;
     HEAP32[$4 >> 2] = HEAP32[$234 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$234 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$234 + 8 >> 2];
     HEAP32[$234 >> 2] = 0;
     HEAP32[$234 + 4 >> 2] = 0;
     HEAP32[$234 + 8 >> 2] = 0;
     $235 = $$3163 + 24 | 0;
     HEAP32[$5 >> 2] = HEAP32[$235 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$235 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$235 + 8 >> 2];
     HEAP32[$235 >> 2] = 0;
     HEAP32[$235 + 4 >> 2] = 0;
     HEAP32[$235 + 8 >> 2] = 0;
     $236 = $$3163 + 36 | 0;
     HEAP32[$6 >> 2] = HEAP32[$236 >> 2];
     HEAP32[$6 + 4 >> 2] = HEAP32[$236 + 4 >> 2];
     HEAP32[$6 + 8 >> 2] = HEAP32[$236 + 8 >> 2];
     HEAP32[$236 >> 2] = 0;
     HEAP32[$236 + 4 >> 2] = 0;
     HEAP32[$236 + 8 >> 2] = 0;
     $237 = $$3163 + 48 | 0;
     HEAP32[$7 >> 2] = HEAP32[$237 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$237 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$237 + 8 >> 2];
     HEAP32[$237 >> 2] = 0;
     HEAP32[$237 + 4 >> 2] = 0;
     HEAP32[$237 + 8 >> 2] = 0;
     HEAP32[$8 >> 2] = HEAP32[$193 >> 2];
     HEAP32[$8 + 4 >> 2] = HEAP32[$193 + 4 >> 2];
     HEAP32[$8 + 8 >> 2] = HEAP32[$193 + 8 >> 2];
     HEAP32[$193 >> 2] = 0;
     HEAP32[$193 + 4 >> 2] = 0;
     HEAP32[$193 + 8 >> 2] = 0;
     $239 = $$3163 + 72 | 0;
     $244 = HEAP32[$239 + 4 >> 2] | 0;
     $245 = $9;
     HEAP32[$245 >> 2] = HEAP32[$239 >> 2];
     HEAP32[$245 + 4 >> 2] = $244;
     __ZN6google19CommandLineFlagInfoaSEOS0_($$3163, $$2156) | 0;
     __ZN6google19CommandLineFlagInfoaSEOS0_($$2156, $3) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$1155 = $$2156;
     $$2162 = $212;
    }
   }
   if ((label | 0) == 46) {
    label = 0;
    HEAP32[$3 >> 2] = HEAP32[$$1 >> 2];
    HEAP32[$3 + 4 >> 2] = HEAP32[$$1 + 4 >> 2];
    HEAP32[$3 + 8 >> 2] = HEAP32[$$1 + 8 >> 2];
    HEAP32[$$1 >> 2] = 0;
    HEAP32[$$1 + 4 >> 2] = 0;
    HEAP32[$$1 + 8 >> 2] = 0;
    $268 = $$1 + 12 | 0;
    HEAP32[$28 >> 2] = HEAP32[$268 >> 2];
    HEAP32[$28 + 4 >> 2] = HEAP32[$268 + 4 >> 2];
    HEAP32[$28 + 8 >> 2] = HEAP32[$268 + 8 >> 2];
    HEAP32[$268 >> 2] = 0;
    HEAP32[$268 + 4 >> 2] = 0;
    HEAP32[$268 + 8 >> 2] = 0;
    $269 = $$1 + 24 | 0;
    HEAP32[$29 >> 2] = HEAP32[$269 >> 2];
    HEAP32[$29 + 4 >> 2] = HEAP32[$269 + 4 >> 2];
    HEAP32[$29 + 8 >> 2] = HEAP32[$269 + 8 >> 2];
    HEAP32[$269 >> 2] = 0;
    HEAP32[$269 + 4 >> 2] = 0;
    HEAP32[$269 + 8 >> 2] = 0;
    $270 = $$1 + 36 | 0;
    HEAP32[$30 >> 2] = HEAP32[$270 >> 2];
    HEAP32[$30 + 4 >> 2] = HEAP32[$270 + 4 >> 2];
    HEAP32[$30 + 8 >> 2] = HEAP32[$270 + 8 >> 2];
    HEAP32[$270 >> 2] = 0;
    HEAP32[$270 + 4 >> 2] = 0;
    HEAP32[$270 + 8 >> 2] = 0;
    $271 = $$1 + 48 | 0;
    HEAP32[$31 >> 2] = HEAP32[$271 >> 2];
    HEAP32[$31 + 4 >> 2] = HEAP32[$271 + 4 >> 2];
    HEAP32[$31 + 8 >> 2] = HEAP32[$271 + 8 >> 2];
    HEAP32[$271 >> 2] = 0;
    HEAP32[$271 + 4 >> 2] = 0;
    HEAP32[$271 + 8 >> 2] = 0;
    HEAP32[$32 >> 2] = HEAP32[$101 >> 2];
    HEAP32[$32 + 4 >> 2] = HEAP32[$101 + 4 >> 2];
    HEAP32[$32 + 8 >> 2] = HEAP32[$101 + 8 >> 2];
    HEAP32[$101 >> 2] = 0;
    HEAP32[$101 + 4 >> 2] = 0;
    HEAP32[$101 + 8 >> 2] = 0;
    $273 = $$1 + 72 | 0;
    $278 = HEAP32[$273 + 4 >> 2] | 0;
    $279 = $33;
    HEAP32[$279 >> 2] = HEAP32[$273 >> 2];
    HEAP32[$279 + 4 >> 2] = $278;
    __ZN6google19CommandLineFlagInfoaSEOS0_($$1, $$0154) | 0;
    __ZN6google19CommandLineFlagInfoaSEOS0_($$0154, $3) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $$3157 = $$0154;
    $$3170 = $$0167 + 1 | 0;
   }
   $284 = $$1 + 80 | 0;
   L56 : do if ($284 >>> 0 < $$3157 >>> 0) {
    $$0174 = $95;
    $$4158 = $$3157;
    $$4164 = $284;
    $$4171 = $$3170;
    while (1) {
     $286 = $$0174 + 60 | 0;
     $291 = (HEAP8[$286 + 11 >> 0] | 0) < 0 ? HEAP32[$286 >> 2] | 0 : $286;
     $292 = $$0174 + 11 | 0;
     $$5165 = $$4164;
     while (1) {
      $293 = $$5165 + 60 | 0;
      $299 = _strcmp((HEAP8[$293 + 11 >> 0] | 0) < 0 ? HEAP32[$293 >> 2] | 0 : $293, $291) | 0;
      if (!$299) $$0$i207 = _strcmp((HEAP8[$$5165 + 11 >> 0] | 0) < 0 ? HEAP32[$$5165 >> 2] | 0 : $$5165, (HEAP8[$292 >> 0] | 0) < 0 ? HEAP32[$$0174 >> 2] | 0 : $$0174) | 0; else $$0$i207 = $299;
      $312 = $$5165 + 80 | 0;
      if (($$0$i207 | 0) < 0) $$5165 = $312; else {
       $$5159 = $$4158;
       break;
      }
     }
     do {
      $$5159$looptemp = $$5159;
      $$5159 = $$5159 + -80 | 0;
      $314 = $$5159$looptemp + -20 | 0;
      $320 = _strcmp((HEAP8[$314 + 11 >> 0] | 0) < 0 ? HEAP32[$314 >> 2] | 0 : $314, $291) | 0;
      if (!$320) $$0$i210 = _strcmp((HEAP8[$$5159 + 11 >> 0] | 0) < 0 ? HEAP32[$$5159 >> 2] | 0 : $$5159, (HEAP8[$292 >> 0] | 0) < 0 ? HEAP32[$$0174 >> 2] | 0 : $$0174) | 0; else $$0$i210 = $320;
     } while (($$0$i210 | 0) >= 0);
     if ($$5165 >>> 0 > $$5159 >>> 0) {
      $$2176 = $$0174;
      $$5172 = $$4171;
      $$6166 = $$5165;
      break L56;
     };
     HEAP32[$3 >> 2] = HEAP32[$$5165 >> 2];
     HEAP32[$3 + 4 >> 2] = HEAP32[$$5165 + 4 >> 2];
     HEAP32[$3 + 8 >> 2] = HEAP32[$$5165 + 8 >> 2];
     HEAP32[$$5165 >> 2] = 0;
     HEAP32[$$5165 + 4 >> 2] = 0;
     HEAP32[$$5165 + 8 >> 2] = 0;
     $334 = $$5165 + 12 | 0;
     HEAP32[$22 >> 2] = HEAP32[$334 >> 2];
     HEAP32[$22 + 4 >> 2] = HEAP32[$334 + 4 >> 2];
     HEAP32[$22 + 8 >> 2] = HEAP32[$334 + 8 >> 2];
     HEAP32[$334 >> 2] = 0;
     HEAP32[$334 + 4 >> 2] = 0;
     HEAP32[$334 + 8 >> 2] = 0;
     $335 = $$5165 + 24 | 0;
     HEAP32[$23 >> 2] = HEAP32[$335 >> 2];
     HEAP32[$23 + 4 >> 2] = HEAP32[$335 + 4 >> 2];
     HEAP32[$23 + 8 >> 2] = HEAP32[$335 + 8 >> 2];
     HEAP32[$335 >> 2] = 0;
     HEAP32[$335 + 4 >> 2] = 0;
     HEAP32[$335 + 8 >> 2] = 0;
     $336 = $$5165 + 36 | 0;
     HEAP32[$24 >> 2] = HEAP32[$336 >> 2];
     HEAP32[$24 + 4 >> 2] = HEAP32[$336 + 4 >> 2];
     HEAP32[$24 + 8 >> 2] = HEAP32[$336 + 8 >> 2];
     HEAP32[$336 >> 2] = 0;
     HEAP32[$336 + 4 >> 2] = 0;
     HEAP32[$336 + 8 >> 2] = 0;
     $337 = $$5165 + 48 | 0;
     HEAP32[$25 >> 2] = HEAP32[$337 >> 2];
     HEAP32[$25 + 4 >> 2] = HEAP32[$337 + 4 >> 2];
     HEAP32[$25 + 8 >> 2] = HEAP32[$337 + 8 >> 2];
     HEAP32[$337 >> 2] = 0;
     HEAP32[$337 + 4 >> 2] = 0;
     HEAP32[$337 + 8 >> 2] = 0;
     HEAP32[$26 >> 2] = HEAP32[$293 >> 2];
     HEAP32[$26 + 4 >> 2] = HEAP32[$293 + 4 >> 2];
     HEAP32[$26 + 8 >> 2] = HEAP32[$293 + 8 >> 2];
     HEAP32[$293 >> 2] = 0;
     HEAP32[$293 + 4 >> 2] = 0;
     HEAP32[$293 + 8 >> 2] = 0;
     $339 = $$5165 + 72 | 0;
     $344 = HEAP32[$339 + 4 >> 2] | 0;
     $345 = $27;
     HEAP32[$345 >> 2] = HEAP32[$339 >> 2];
     HEAP32[$345 + 4 >> 2] = $344;
     __ZN6google19CommandLineFlagInfoaSEOS0_($$5165, $$5159) | 0;
     __ZN6google19CommandLineFlagInfoaSEOS0_($$5159, $3) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$0174 = ($$0174 | 0) == ($$5165 | 0) ? $$5159 : $$0174;
     $$4158 = $$5159;
     $$4164 = $312;
     $$4171 = $$4171 + 1 | 0;
    }
   } else {
    $$2176 = $95;
    $$5172 = $$3170;
    $$6166 = $284;
   } while (0);
   if (($$6166 | 0) == ($$2176 | 0)) $$6173 = $$5172; else {
    $352 = $$2176 + 60 | 0;
    $358 = $$6166 + 60 | 0;
    $364 = _strcmp((HEAP8[$352 + 11 >> 0] | 0) < 0 ? HEAP32[$352 >> 2] | 0 : $352, (HEAP8[$358 + 11 >> 0] | 0) < 0 ? HEAP32[$358 >> 2] | 0 : $358) | 0;
    if (!$364) $$0$i213 = _strcmp((HEAP8[$$2176 + 11 >> 0] | 0) < 0 ? HEAP32[$$2176 >> 2] | 0 : $$2176, (HEAP8[$$6166 + 11 >> 0] | 0) < 0 ? HEAP32[$$6166 >> 2] | 0 : $$6166) | 0; else $$0$i213 = $364;
    if (($$0$i213 | 0) < 0) {
     HEAP32[$3 >> 2] = HEAP32[$$6166 >> 2];
     HEAP32[$3 + 4 >> 2] = HEAP32[$$6166 + 4 >> 2];
     HEAP32[$3 + 8 >> 2] = HEAP32[$$6166 + 8 >> 2];
     HEAP32[$$6166 >> 2] = 0;
     HEAP32[$$6166 + 4 >> 2] = 0;
     HEAP32[$$6166 + 8 >> 2] = 0;
     $378 = $$6166 + 12 | 0;
     HEAP32[$16 >> 2] = HEAP32[$378 >> 2];
     HEAP32[$16 + 4 >> 2] = HEAP32[$378 + 4 >> 2];
     HEAP32[$16 + 8 >> 2] = HEAP32[$378 + 8 >> 2];
     HEAP32[$378 >> 2] = 0;
     HEAP32[$378 + 4 >> 2] = 0;
     HEAP32[$378 + 8 >> 2] = 0;
     $379 = $$6166 + 24 | 0;
     HEAP32[$17 >> 2] = HEAP32[$379 >> 2];
     HEAP32[$17 + 4 >> 2] = HEAP32[$379 + 4 >> 2];
     HEAP32[$17 + 8 >> 2] = HEAP32[$379 + 8 >> 2];
     HEAP32[$379 >> 2] = 0;
     HEAP32[$379 + 4 >> 2] = 0;
     HEAP32[$379 + 8 >> 2] = 0;
     $380 = $$6166 + 36 | 0;
     HEAP32[$18 >> 2] = HEAP32[$380 >> 2];
     HEAP32[$18 + 4 >> 2] = HEAP32[$380 + 4 >> 2];
     HEAP32[$18 + 8 >> 2] = HEAP32[$380 + 8 >> 2];
     HEAP32[$380 >> 2] = 0;
     HEAP32[$380 + 4 >> 2] = 0;
     HEAP32[$380 + 8 >> 2] = 0;
     $381 = $$6166 + 48 | 0;
     HEAP32[$19 >> 2] = HEAP32[$381 >> 2];
     HEAP32[$19 + 4 >> 2] = HEAP32[$381 + 4 >> 2];
     HEAP32[$19 + 8 >> 2] = HEAP32[$381 + 8 >> 2];
     HEAP32[$381 >> 2] = 0;
     HEAP32[$381 + 4 >> 2] = 0;
     HEAP32[$381 + 8 >> 2] = 0;
     HEAP32[$20 >> 2] = HEAP32[$358 >> 2];
     HEAP32[$20 + 4 >> 2] = HEAP32[$358 + 4 >> 2];
     HEAP32[$20 + 8 >> 2] = HEAP32[$358 + 8 >> 2];
     HEAP32[$358 >> 2] = 0;
     HEAP32[$358 + 4 >> 2] = 0;
     HEAP32[$358 + 8 >> 2] = 0;
     $383 = $$6166 + 72 | 0;
     $388 = HEAP32[$383 + 4 >> 2] | 0;
     $389 = $21;
     HEAP32[$389 >> 2] = HEAP32[$383 >> 2];
     HEAP32[$389 + 4 >> 2] = $388;
     __ZN6google19CommandLineFlagInfoaSEOS0_($$6166, $$2176) | 0;
     __ZN6google19CommandLineFlagInfoaSEOS0_($$2176, $3) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$6173 = $$5172 + 1 | 0;
    } else $$6173 = $$5172;
   }
   if (!$$6173) {
    $395 = __ZNSt3__227__insertion_sort_incompleteIRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEbT0_S6_T_($$1, $$6166, $2) | 0;
    $396 = $$6166 + 80 | 0;
    if (__ZNSt3__227__insertion_sort_incompleteIRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEbT0_S6_T_($396, $$0180$ph, $2) | 0) {
     label = 68;
     break;
    }
    if ($395) {
     $$0 = $396;
     continue;
    }
   }
   $398 = $$6166;
   if (($398 - $39 | 0) >= ($34 - $398 | 0)) {
    label = 67;
    break;
   }
   __ZNSt3__26__sortIRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEvT0_S6_T_($$1, $$6166, $2);
   $$0 = $$6166 + 80 | 0;
  }
  if ((label | 0) == 67) {
   label = 0;
   __ZNSt3__26__sortIRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEvT0_S6_T_($$6166 + 80 | 0, $$0180$ph, $2);
   $$0$ph = $$1;
   $$0180$ph = $$6166;
   continue;
  } else if ((label | 0) == 68) {
   label = 0;
   if ($395) {
    label = 69;
    break;
   } else {
    $$0$ph = $$1;
    $$0180$ph = $$6166;
    continue;
   }
  }
 }
 if ((label | 0) == 5) {
  $46 = $$1 + 60 | 0;
  $52 = _strcmp((HEAP8[$37 >> 0] | 0) < 0 ? HEAP32[$36 >> 2] | 0 : $36, (HEAP8[$46 + 11 >> 0] | 0) < 0 ? HEAP32[$46 >> 2] | 0 : $46) | 0;
  if (!$52) $$0$i = _strcmp((HEAP8[$38 >> 0] | 0) < 0 ? HEAP32[$35 >> 2] | 0 : $35, (HEAP8[$$1 + 11 >> 0] | 0) < 0 ? HEAP32[$$1 >> 2] | 0 : $$1) | 0; else $$0$i = $52;
  if (($$0$i | 0) >= 0) {
   STACKTOP = sp;
   return;
  };
  HEAP32[$3 >> 2] = HEAP32[$$1 >> 2];
  HEAP32[$3 + 4 >> 2] = HEAP32[$$1 + 4 >> 2];
  HEAP32[$3 + 8 >> 2] = HEAP32[$$1 + 8 >> 2];
  HEAP32[$$1 >> 2] = 0;
  HEAP32[$$1 + 4 >> 2] = 0;
  HEAP32[$$1 + 8 >> 2] = 0;
  $65 = $3 + 12 | 0;
  $66 = $$1 + 12 | 0;
  HEAP32[$65 >> 2] = HEAP32[$66 >> 2];
  HEAP32[$65 + 4 >> 2] = HEAP32[$66 + 4 >> 2];
  HEAP32[$65 + 8 >> 2] = HEAP32[$66 + 8 >> 2];
  HEAP32[$66 >> 2] = 0;
  HEAP32[$66 + 4 >> 2] = 0;
  HEAP32[$66 + 8 >> 2] = 0;
  $67 = $3 + 24 | 0;
  $68 = $$1 + 24 | 0;
  HEAP32[$67 >> 2] = HEAP32[$68 >> 2];
  HEAP32[$67 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
  HEAP32[$67 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
  HEAP32[$68 >> 2] = 0;
  HEAP32[$68 + 4 >> 2] = 0;
  HEAP32[$68 + 8 >> 2] = 0;
  $69 = $3 + 36 | 0;
  $70 = $$1 + 36 | 0;
  HEAP32[$69 >> 2] = HEAP32[$70 >> 2];
  HEAP32[$69 + 4 >> 2] = HEAP32[$70 + 4 >> 2];
  HEAP32[$69 + 8 >> 2] = HEAP32[$70 + 8 >> 2];
  HEAP32[$70 >> 2] = 0;
  HEAP32[$70 + 4 >> 2] = 0;
  HEAP32[$70 + 8 >> 2] = 0;
  $71 = $3 + 48 | 0;
  $72 = $$1 + 48 | 0;
  HEAP32[$71 >> 2] = HEAP32[$72 >> 2];
  HEAP32[$71 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
  HEAP32[$71 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
  HEAP32[$72 >> 2] = 0;
  HEAP32[$72 + 4 >> 2] = 0;
  HEAP32[$72 + 8 >> 2] = 0;
  $73 = $3 + 60 | 0;
  HEAP32[$73 >> 2] = HEAP32[$46 >> 2];
  HEAP32[$73 + 4 >> 2] = HEAP32[$46 + 4 >> 2];
  HEAP32[$73 + 8 >> 2] = HEAP32[$46 + 8 >> 2];
  HEAP32[$46 >> 2] = 0;
  HEAP32[$46 + 4 >> 2] = 0;
  HEAP32[$46 + 8 >> 2] = 0;
  $76 = $$1 + 72 | 0;
  $81 = HEAP32[$76 + 4 >> 2] | 0;
  $82 = $3 + 72 | 0;
  HEAP32[$82 >> 2] = HEAP32[$76 >> 2];
  HEAP32[$82 + 4 >> 2] = $81;
  __ZN6google19CommandLineFlagInfoaSEOS0_($$1, $35) | 0;
  __ZN6google19CommandLineFlagInfoaSEOS0_($35, $3) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($65);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 9) {
  __ZNSt3__27__sort3IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_T_($$1, $$1 + 80 | 0, $35, $2) | 0;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 10) {
  __ZNSt3__27__sort4IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_S6_T_($$1, $$1 + 80 | 0, $$1 + 160 | 0, $35, $2) | 0;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 11) {
  __ZNSt3__27__sort5IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_S6_S6_T_($$1, $$1 + 80 | 0, $$1 + 160 | 0, $$1 + 240 | 0, $35, $2) | 0;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 13) {
  __ZNSt3__218__insertion_sort_3IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEvT0_S6_T_($$1, $$0180$ph, $2);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 69) {
  STACKTOP = sp;
  return;
 }
}

function __ZN10CGameSetup4InitERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$05$i117 = 0, $$056 = 0, $$lcssa$i116 = 0, $$pre8$i115 = 0, $10 = 0, $109 = 0, $110 = 0, $111 = 0, $113 = 0, $114 = 0, $116 = 0, $117 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $125 = 0, $127 = 0, $128 = 0, $131 = 0, $134 = 0, $135 = 0, $137 = 0, $139 = 0, $146 = 0, $148 = 0, $149 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $27 = 0, $28 = 0, $3 = 0, $33 = 0, $34 = 0, $39 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $5 = 0, $51 = 0, $52 = 0, $57 = 0, $6 = 0, $62 = 0, $75 = 0, $78 = 0, $81 = 0, $86 = 0, $88 = 0, $9 = 0, $90 = 0, $94 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $vararg_buffer = sp;
 $2 = sp + 144 | 0;
 $3 = sp + 72 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp + 36 | 0;
 __ZN10CGameSetup10ResetStateEv($0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0 + 80 | 0, $1) | 0;
 $9 = HEAP8[$1 + 11 >> 0] | 0;
 $10 = $9 << 24 >> 24 < 0;
 __ZN9TdfParserC1EPKcj($3 | 0, ($10 ? HEAP32[$1 >> 2] | 0 : $1) | 0, ($10 ? HEAP32[$1 + 4 >> 2] | 0 : $9 & 255) | 0);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81279, 4);
 $17 = __ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $2 | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 if (!$17) {
  $$056 = 0;
  __ZN9TdfParserD1Ev($3 | 0);
  STACKTOP = sp;
  return $$056 | 0;
 }
 HEAP32[$2 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81284, 12);
 __ZNK9TdfParser7GetTDefIjEEvRT_RKS1_RKNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE($3, $0 + 8 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81297, 12);
 __ZNK9TdfParser7GetTDefIjEEvRT_RKS1_RKNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE($3, $0 + 12 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81310, 12);
 __ZNK9TdfParser7GetTDefIjEEvRT_RKS1_RKNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE($3, $0 + 16 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $21 = $0 + 68 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 114224, 0);
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 81323, 11);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2 | 0, $3 | 0, $4 | 0, $5 | 0);
 $22 = $21 + 11 | 0;
 if ((HEAP8[$22 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$21 >> 2] >> 0] = 0;
  HEAP32[$0 + 72 >> 2] = 0;
 } else {
  HEAP8[$21 >> 0] = 0;
  HEAP8[$22 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($21, 0);
 HEAP32[$21 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$21 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$21 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $27 = $0 + 56 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 114224, 0);
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 81335, 13);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2 | 0, $3 | 0, $4 | 0, $5 | 0);
 $28 = $27 + 11 | 0;
 if ((HEAP8[$28 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$27 >> 2] >> 0] = 0;
  HEAP32[$0 + 60 >> 2] = 0;
 } else {
  HEAP8[$27 >> 0] = 0;
  HEAP8[$28 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($27, 0);
 HEAP32[$27 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$27 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$27 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $33 = $0 + 44 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 114224, 0);
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 81349, 12);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2 | 0, $3 | 0, $4 | 0, $5 | 0);
 $34 = $33 + 11 | 0;
 if ((HEAP8[$34 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$33 >> 2] >> 0] = 0;
  HEAP32[$0 + 48 >> 2] = 0;
 } else {
  HEAP8[$33 >> 0] = 0;
  HEAP8[$34 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($33, 0);
 HEAP32[$33 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$33 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$33 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $39 = $0 + 104 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 114224, 0);
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 81362, 13);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2 | 0, $3 | 0, $4 | 0, $5 | 0);
 $40 = $39 + 11 | 0;
 if ((HEAP8[$40 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$39 >> 2] >> 0] = 0;
  HEAP32[$0 + 108 >> 2] = 0;
 } else {
  HEAP8[$39 >> 0] = 0;
  HEAP8[$40 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($39, 0);
 HEAP32[$39 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$39 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$39 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $45 = $0 + 116 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 114224, 0);
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 81376, 13);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2 | 0, $3 | 0, $4 | 0, $5 | 0);
 $46 = $45 + 11 | 0;
 if ((HEAP8[$46 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$45 >> 2] >> 0] = 0;
  HEAP32[$0 + 120 >> 2] = 0;
 } else {
  HEAP8[$45 >> 0] = 0;
  HEAP8[$46 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($45, 0);
 HEAP32[$45 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$45 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$45 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $51 = $0 + 92 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 114224, 0);
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 81390, 13);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2 | 0, $3 | 0, $4 | 0, $5 | 0);
 $52 = $51 + 11 | 0;
 if ((HEAP8[$52 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$51 >> 2] >> 0] = 0;
  HEAP32[$0 + 96 >> 2] = 0;
 } else {
  HEAP8[$51 >> 0] = 0;
  HEAP8[$52 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($51, 0);
 HEAP32[$51 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$51 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$51 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $57 = HEAP8[$52 >> 0] | 0;
 if ($57 << 24 >> 24 < 0) $62 = HEAP32[$0 + 96 >> 2] | 0; else $62 = $57 & 255;
 HEAP8[$0 + 6 >> 0] = ($62 | 0) != 0 & 1;
 HEAP32[$2 >> 2] = 4;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81404, 19);
 __ZNK9TdfParser7GetTDefIjEEvRT_RKS1_RKNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE($3, $0 + 20 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 91301, 1);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81424, 15);
 __ZNK9TdfParser6GetDefIbEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0 + 7 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 91301, 1);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81440, 23);
 __ZNK9TdfParser6GetDefIbEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0 + 1 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 91299, 1);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81464, 27);
 __ZNK9TdfParser6GetDefIbEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0 + 2 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81492, 5);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81498, 24);
 __ZNK9TdfParser6GetDefIiEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0 + 28 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 91299, 1);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81523, 32);
 __ZNK9TdfParser6GetDefIbEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0 + 4 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 91301, 1);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81556, 32);
 __ZNK9TdfParser6GetDefIbEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0 + 3 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81589, 3);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81593, 24);
 __ZNK9TdfParser6GetDefIfEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0 + 32 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81618, 3);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81622, 24);
 __ZNK9TdfParser6GetDefIfEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0 + 36 | 0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 91301, 1);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81647, 27);
 __ZNK9TdfParser6GetDefIbEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81675, 15);
 $75 = __ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $2 | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 if ($75) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81675, 15);
  __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEEaSERKSD_($0 + 300 | 0, __ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $2 | 0) | 0) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 };
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81691, 15);
 $78 = __ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $2 | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 if ($78) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81691, 15);
  __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEEaSERKSD_($0 + 328 | 0, __ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $2 | 0) | 0) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 }
 $81 = $0 + 40 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 81707, 2);
 $86 = (HEAP8[$5 + 11 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5;
 HEAP32[$vararg_buffer >> 2] = 0;
 _snprintf($2, 64, $86, $vararg_buffer) | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, $2, _strlen($2) | 0);
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81710, 17);
 __ZNK9TdfParser6GetDefIjEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $81, $4, $vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 $88 = HEAP32[$81 >> 2] | 0;
 $90 = ($88 | 0) < 0 ? 0 : $88;
 HEAP32[$81 >> 2] = $90;
 HEAP32[$vararg_buffer >> 2] = 3;
 HEAP32[$81 >> 2] = HEAP32[(($90 | 0) > 3 ? $vararg_buffer : $81) >> 2];
 $94 = $2 + 4 | 0;
 HEAP32[$94 >> 2] = 0;
 HEAP32[$94 + 4 >> 2] = 0;
 HEAP32[$94 + 8 >> 2] = 0;
 HEAP32[$94 + 12 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = -1;
 HEAP32[$2 + 24 >> 2] = 0;
 __ZN10CGameSetup11LoadPlayersERK9TdfParserRN6emilib7HashSetINSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEN6spring11synced_hashISB_EENS3_14HashSetEqualToISB_EEEE($0, $3, $2);
 __ZN10CGameSetup15LoadSkirmishAIsERK9TdfParserRN6emilib7HashSetINSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEN6spring11synced_hashISB_EENS3_14HashSetEqualToISB_EEEE($0, $3, $2);
 __ZN10CGameSetup9LoadTeamsERK9TdfParser($0, $3);
 __ZN10CGameSetup13LoadAllyTeamsERK9TdfParser($0, $3);
 __ZN10CGameSetup12RemapPlayersEv($0);
 __ZN10CGameSetup10RemapTeamsEv($0);
 __ZN10CGameSetup14RemapAllyteamsEv($0);
 __ZN10CGameSetup12LoadMutatorsERK9TdfParserRNSt3__26vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEE(0, $3, $0 + 260 | 0);
 __ZN10CGameSetup20LoadUnitRestrictionsERK9TdfParser($0, $3);
 __Z22GetRapidPackageFromTagRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($vararg_buffer | 0, $27 | 0);
 if ((HEAP8[$28 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$27 >> 2] >> 0] = 0;
  HEAP32[$0 + 60 >> 2] = 0;
 } else {
  HEAP8[$27 >> 0] = 0;
  HEAP8[$28 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($27, 0);
 HEAP32[$27 >> 2] = HEAP32[$vararg_buffer >> 2];
 HEAP32[$27 + 4 >> 2] = HEAP32[$vararg_buffer + 4 >> 2];
 HEAP32[$27 + 8 >> 2] = HEAP32[$vararg_buffer + 8 >> 2];
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNK15CArchiveScanner15NameFromArchiveERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($vararg_buffer | 0, HEAP32[_archiveScanner >> 2] | 0, $27 | 0);
 if ((HEAP8[$28 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$27 >> 2] >> 0] = 0;
  HEAP32[$0 + 60 >> 2] = 0;
 } else {
  HEAP8[$27 >> 0] = 0;
  HEAP8[$28 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($27, 0);
 HEAP32[$27 >> 2] = HEAP32[$vararg_buffer >> 2];
 HEAP32[$27 + 4 >> 2] = HEAP32[$vararg_buffer + 4 >> 2];
 HEAP32[$27 + 8 >> 2] = HEAP32[$vararg_buffer + 8 >> 2];
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNK15CArchiveScanner14GetArchiveDataERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($6 | 0, HEAP32[_archiveScanner >> 2] | 0, $27 | 0);
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81728, 9);
 $109 = __ZNK15CArchiveScanner11ArchiveData16GetInfoValueBoolERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($6 | 0, $vararg_buffer | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, $109 ? 91301 : 91299, 1);
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81738, 14);
 __ZNK9TdfParser6GetDefIbEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $0 + 5 | 0, $4, $vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $110 = $6 + 24 | 0;
 $111 = HEAP32[$110 >> 2] | 0;
 if ($111 | 0) {
  $113 = $6 + 28 | 0;
  $114 = HEAP32[$113 >> 2] | 0;
  if (($114 | 0) == ($111 | 0)) $120 = $111; else {
   $117 = $114;
   do {
    $116 = $117 + -12 | 0;
    HEAP32[$113 >> 2] = $116;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($116);
    $117 = HEAP32[$113 >> 2] | 0;
   } while (($117 | 0) != ($111 | 0));
   $120 = HEAP32[$110 >> 2] | 0;
  }
  __ZdlPv($120);
 }
 $121 = $6 + 12 | 0;
 $122 = HEAP32[$121 >> 2] | 0;
 if ($122 | 0) {
  $124 = $6 + 16 | 0;
  $125 = HEAP32[$124 >> 2] | 0;
  if (($125 | 0) == ($122 | 0)) $131 = $122; else {
   $128 = $125;
   do {
    $127 = $128 + -12 | 0;
    HEAP32[$124 >> 2] = $127;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($127);
    $128 = HEAP32[$124 >> 2] | 0;
   } while (($128 | 0) != ($122 | 0));
   $131 = HEAP32[$121 >> 2] | 0;
  }
  __ZdlPv($131);
 }
 __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8InfoItemEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($6, HEAP32[$6 + 4 >> 2] | 0);
 $134 = $2 + 12 | 0;
 $135 = HEAP32[$134 >> 2] | 0;
 $137 = HEAP32[$94 >> 2] | 0;
 $$pre8$i115 = $2 + 8 | 0;
 if (!$135) $$lcssa$i116 = $137; else {
  $$05$i117 = 0;
  $139 = $137;
  $148 = $135;
  while (1) {
   if ((HEAP8[$139 + $$05$i117 >> 0] | 0) == 2) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((HEAP32[$$pre8$i115 >> 2] | 0) + ($$05$i117 * 12 | 0) | 0);
    $146 = HEAP32[$134 >> 2] | 0;
    $149 = HEAP32[$94 >> 2] | 0;
   } else {
    $146 = $148;
    $149 = $139;
   }
   $$05$i117 = $$05$i117 + 1 | 0;
   if ($$05$i117 >>> 0 >= $146 >>> 0) {
    $$lcssa$i116 = $149;
    break;
   } else {
    $139 = $149;
    $148 = $146;
   }
  }
 }
 _free($$lcssa$i116);
 _free(HEAP32[$$pre8$i115 >> 2] | 0);
 $$056 = 1;
 __ZN9TdfParserD1Ev($3 | 0);
 STACKTOP = sp;
 return $$056 | 0;
}

function __ZL12LoadFunctionP9LoadStateP7TString($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i64 = 0, $$0$i65$i = 0, $$1$i75 = 0, $$176$i = 0, $$3$i72 = 0, $$372$i = 0, $$pre = 0, $$pre$phi$i57Z2D = 0, $$pre$phi$iZ2D = 0, $100 = 0, $109 = 0, $118 = 0, $127 = 0, $13 = 0, $131 = 0, $133 = 0, $138 = 0, $140 = 0, $141 = 0, $145 = 0, $150 = 0, $157 = 0, $16 = 0, $161 = 0, $163 = 0, $168 = 0, $170 = 0, $174 = 0, $175 = 0, $177 = 0, $179 = 0, $18 = 0, $180 = 0, $182 = 0, $184 = 0, $185 = 0, $189 = 0, $198 = 0, $2 = 0, $208 = 0, $216 = 0, $219 = 0, $22 = 0, $223 = 0, $228 = 0, $236 = 0, $243 = 0, $247 = 0, $249 = 0, $254 = 0, $256 = 0, $260 = 0, $261 = 0, $263 = 0, $265 = 0, $268 = 0, $27 = 0, $275 = 0, $279 = 0, $281 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $293 = 0, $298 = 0, $30 = 0, $305 = 0, $309 = 0, $311 = 0, $316 = 0, $318 = 0, $322 = 0, $323 = 0, $326 = 0, $327 = 0, $329 = 0, $334 = 0, $337 = 0, $34 = 0, $341 = 0, $346 = 0, $358 = 0, $361 = 0, $363 = 0, $368 = 0, $372 = 0, $375 = 0, $377 = 0, $38 = 0, $382 = 0, $387 = 0, $391 = 0, $393 = 0, $398 = 0, $4 = 0, $400 = 0, $404 = 0, $405 = 0, $408 = 0, $409 = 0, $411 = 0, $416 = 0, $419 = 0, $423 = 0, $428 = 0, $43 = 0, $440 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $450 = 0, $451 = 0, $48 = 0, $56 = 0, $6 = 0, $61 = 0, $65 = 0, $67 = 0, $72 = 0, $76 = 0, $8 = 0, $80 = 0, $82 = 0, $87 = 0, $91 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer102 = 0, $vararg_buffer106 = 0, $vararg_buffer110 = 0, $vararg_buffer114 = 0, $vararg_buffer118 = 0, $vararg_buffer122 = 0, $vararg_buffer126 = 0, $vararg_buffer130 = 0, $vararg_buffer134 = 0, $vararg_buffer138 = 0, $vararg_buffer14 = 0, $vararg_buffer142 = 0, $vararg_buffer146 = 0, $vararg_buffer150 = 0, $vararg_buffer154 = 0, $vararg_buffer18 = 0, $vararg_buffer2 = 0, $vararg_buffer22 = 0, $vararg_buffer26 = 0, $vararg_buffer30 = 0, $vararg_buffer34 = 0, $vararg_buffer38 = 0, $vararg_buffer42 = 0, $vararg_buffer46 = 0, $vararg_buffer50 = 0, $vararg_buffer54 = 0, $vararg_buffer58 = 0, $vararg_buffer6 = 0, $vararg_buffer62 = 0, $vararg_buffer66 = 0, $vararg_buffer70 = 0, $vararg_buffer74 = 0, $vararg_buffer78 = 0, $vararg_buffer82 = 0, $vararg_buffer86 = 0, $vararg_buffer90 = 0, $vararg_buffer94 = 0, $vararg_buffer98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 $vararg_buffer154 = sp + 312 | 0;
 $vararg_buffer150 = sp + 304 | 0;
 $vararg_buffer146 = sp + 296 | 0;
 $vararg_buffer142 = sp + 288 | 0;
 $vararg_buffer138 = sp + 280 | 0;
 $vararg_buffer134 = sp + 272 | 0;
 $vararg_buffer130 = sp + 264 | 0;
 $vararg_buffer126 = sp + 256 | 0;
 $vararg_buffer122 = sp + 248 | 0;
 $vararg_buffer118 = sp + 240 | 0;
 $vararg_buffer114 = sp + 232 | 0;
 $vararg_buffer110 = sp + 224 | 0;
 $vararg_buffer106 = sp + 216 | 0;
 $vararg_buffer102 = sp + 208 | 0;
 $vararg_buffer98 = sp + 200 | 0;
 $vararg_buffer94 = sp + 192 | 0;
 $vararg_buffer90 = sp + 184 | 0;
 $vararg_buffer86 = sp + 176 | 0;
 $vararg_buffer82 = sp + 168 | 0;
 $vararg_buffer78 = sp + 160 | 0;
 $vararg_buffer74 = sp + 152 | 0;
 $vararg_buffer70 = sp + 144 | 0;
 $vararg_buffer66 = sp + 136 | 0;
 $vararg_buffer62 = sp + 128 | 0;
 $vararg_buffer58 = sp + 120 | 0;
 $vararg_buffer54 = sp + 112 | 0;
 $vararg_buffer50 = sp + 104 | 0;
 $vararg_buffer46 = sp + 96 | 0;
 $vararg_buffer42 = sp + 88 | 0;
 $vararg_buffer38 = sp + 80 | 0;
 $vararg_buffer34 = sp + 72 | 0;
 $vararg_buffer30 = sp + 64 | 0;
 $vararg_buffer26 = sp + 56 | 0;
 $vararg_buffer22 = sp + 48 | 0;
 $vararg_buffer18 = sp + 40 | 0;
 $vararg_buffer14 = sp + 32 | 0;
 $vararg_buffer10 = sp + 24 | 0;
 $vararg_buffer6 = sp + 16 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 320 | 0;
 $4 = (HEAP32[$0 >> 2] | 0) + 52 | 0;
 $6 = (HEAP16[$4 >> 1] | 0) + 1 << 16 >> 16;
 HEAP16[$4 >> 1] = $6;
 if (($6 & 65535) > 200) {
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = 89454;
  __Z16luaO_pushfstringP9lua_StatePKcz($8, 89412, $vararg_buffer) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $13 = __Z13luaF_newprotoP9lua_State(HEAP32[$0 >> 2] | 0) | 0;
 $16 = HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0;
 HEAP32[$16 >> 2] = $13;
 HEAP32[$16 + 4 >> 2] = 9;
 $18 = HEAP32[$0 >> 2] | 0;
 $22 = HEAP32[$18 + 8 >> 2] | 0;
 if (((HEAP32[$18 + 28 >> 2] | 0) - $22 | 0) < 9) {
  __Z14luaD_growstackP9lua_Statei($18, 1);
  $$pre = HEAP32[$0 >> 2] | 0;
  $27 = $$pre;
  $29 = HEAP32[$$pre + 8 >> 2] | 0;
 } else {
  $27 = $18;
  $29 = $22;
 }
 HEAP32[$27 + 8 >> 2] = $29 + 8;
 $30 = $0 + 4 | 0;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
  $34 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer2 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer2 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($34, 89412, $vararg_buffer2) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $38 = HEAP32[$2 >> 2] | 0;
 if (!$38) $$0$i = 0; else {
  $43 = __Z14luaZ_openspaceP9lua_StateP7Mbufferj(HEAP32[$0 >> 2] | 0, HEAP32[$0 + 8 >> 2] | 0, $38) | 0;
  if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $43, HEAP32[$2 >> 2] | 0) | 0) {
   $48 = HEAP32[$0 >> 2] | 0;
   HEAP32[$vararg_buffer6 >> 2] = HEAP32[$0 + 12 >> 2];
   HEAP32[$vararg_buffer6 + 4 >> 2] = 89397;
   __Z16luaO_pushfstringP9lua_StatePKcz($48, 89412, $vararg_buffer6) | 0;
   __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
  }
  $$0$i = __Z12luaS_newlstrP9lua_StatePKcj(HEAP32[$0 >> 2] | 0, $43, (HEAP32[$2 >> 2] | 0) + -1 | 0) | 0;
 }
 $56 = $13 + 32 | 0;
 HEAP32[$56 >> 2] = ($$0$i | 0) == 0 ? $1 : $$0$i;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
  $61 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer10 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer10 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($61, 89412, $vararg_buffer10) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $65 = HEAP32[$2 >> 2] | 0;
 if (($65 | 0) < 0) {
  $67 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer14 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer14 + 4 >> 2] = 89468;
  __Z16luaO_pushfstringP9lua_StatePKcz($67, 89412, $vararg_buffer14) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
  $72 = HEAP32[$2 >> 2] | 0;
 } else $72 = $65;
 HEAP32[$13 + 60 >> 2] = $72;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
  $76 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer18 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer18 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($76, 89412, $vararg_buffer18) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $80 = HEAP32[$2 >> 2] | 0;
 if (($80 | 0) < 0) {
  $82 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer22 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer22 + 4 >> 2] = 89468;
  __Z16luaO_pushfstringP9lua_StatePKcz($82, 89412, $vararg_buffer22) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
  $87 = HEAP32[$2 >> 2] | 0;
 } else $87 = $80;
 HEAP32[$13 + 64 >> 2] = $87;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 1) | 0) {
  $91 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer26 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer26 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($91, 89412, $vararg_buffer26) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 HEAP8[$13 + 72 >> 0] = HEAP8[$2 >> 0] | 0;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 1) | 0) {
  $100 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer30 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer30 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($100, 89412, $vararg_buffer30) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 HEAP8[$13 + 73 >> 0] = HEAP8[$2 >> 0] | 0;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 1) | 0) {
  $109 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer34 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer34 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($109, 89412, $vararg_buffer34) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 HEAP8[$13 + 74 >> 0] = HEAP8[$2 >> 0] | 0;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 1) | 0) {
  $118 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer38 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer38 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($118, 89412, $vararg_buffer38) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 HEAP8[$13 + 75 >> 0] = HEAP8[$2 >> 0] | 0;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
  $127 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer42 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer42 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($127, 89412, $vararg_buffer42) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $131 = HEAP32[$2 >> 2] | 0;
 if (($131 | 0) < 0) {
  $133 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer46 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer46 + 4 >> 2] = 89468;
  __Z16luaO_pushfstringP9lua_StatePKcz($133, 89412, $vararg_buffer46) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
  $138 = HEAP32[$2 >> 2] | 0;
 } else $138 = $131;
 $140 = HEAP32[$0 >> 2] | 0;
 if (($138 + 1 | 0) >>> 0 < 1073741824) {
  $141 = $138 << 2;
  $$pre$phi$iZ2D = $141;
  $145 = __Z13luaM_realloc_P9lua_StatePvjj($140, 0, 0, $141) | 0;
 } else {
  $$pre$phi$iZ2D = $138 << 2;
  $145 = __Z11luaM_toobigP9lua_State($140) | 0;
 }
 HEAP32[$13 + 12 >> 2] = $145;
 HEAP32[$13 + 44 >> 2] = $138;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $145, $$pre$phi$iZ2D) | 0) {
  $150 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer50 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer50 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($150, 89412, $vararg_buffer50) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
  $157 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer54 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer54 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($157, 89412, $vararg_buffer54) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $161 = HEAP32[$2 >> 2] | 0;
 if (($161 | 0) < 0) {
  $163 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer58 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer58 + 4 >> 2] = 89468;
  __Z16luaO_pushfstringP9lua_StatePKcz($163, 89412, $vararg_buffer58) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
  $168 = HEAP32[$2 >> 2] | 0;
 } else $168 = $161;
 $170 = HEAP32[$0 >> 2] | 0;
 if (($168 + 1 | 0) >>> 0 < 536870912) $175 = __Z13luaM_realloc_P9lua_StatePvjj($170, 0, 0, $168 << 3) | 0; else $175 = __Z11luaM_toobigP9lua_State($170) | 0;
 $174 = $13 + 8 | 0;
 HEAP32[$174 >> 2] = $175;
 HEAP32[$13 + 40 >> 2] = $168;
 $177 = ($168 | 0) > 0;
 L63 : do if ($177) {
  HEAP32[$175 + 4 >> 2] = 0;
  if (($168 | 0) != 1) {
   $182 = 1;
   do {
    HEAP32[(HEAP32[$174 >> 2] | 0) + ($182 << 3) + 4 >> 2] = 0;
    $182 = $182 + 1 | 0;
   } while (($182 | 0) != ($168 | 0));
  }
  if (!$177) break;
  $179 = $0 + 12 | 0;
  $180 = $0 + 8 | 0;
  $$1$i75 = 0;
  while (1) {
   $184 = HEAP32[$174 >> 2] | 0;
   $185 = $184 + ($$1$i75 << 3) | 0;
   if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 1) | 0) {
    $189 = HEAP32[$0 >> 2] | 0;
    HEAP32[$vararg_buffer62 >> 2] = HEAP32[$179 >> 2];
    HEAP32[$vararg_buffer62 + 4 >> 2] = 89397;
    __Z16luaO_pushfstringP9lua_StatePKcz($189, 89412, $vararg_buffer62) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
   }
   switch (HEAP8[$2 >> 0] | 0) {
   case 0:
    {
     HEAP32[$184 + ($$1$i75 << 3) + 4 >> 2] = 0;
     break;
    }
   case 1:
    {
     if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 1) | 0) {
      $198 = HEAP32[$0 >> 2] | 0;
      HEAP32[$vararg_buffer66 >> 2] = HEAP32[$179 >> 2];
      HEAP32[$vararg_buffer66 + 4 >> 2] = 89397;
      __Z16luaO_pushfstringP9lua_StatePKcz($198, 89412, $vararg_buffer66) | 0;
      __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
     }
     HEAP32[$185 >> 2] = (HEAP8[$2 >> 0] | 0) != 0 & 1;
     HEAP32[$184 + ($$1$i75 << 3) + 4 >> 2] = 1;
     break;
    }
   case 3:
    {
     if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
      $208 = HEAP32[$0 >> 2] | 0;
      HEAP32[$vararg_buffer70 >> 2] = HEAP32[$179 >> 2];
      HEAP32[$vararg_buffer70 + 4 >> 2] = 89397;
      __Z16luaO_pushfstringP9lua_StatePKcz($208, 89412, $vararg_buffer70) | 0;
      __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
     }
     HEAP32[$185 >> 2] = HEAP32[$2 >> 2];
     HEAP32[$184 + ($$1$i75 << 3) + 4 >> 2] = 3;
     break;
    }
   case 4:
    {
     if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
      $216 = HEAP32[$0 >> 2] | 0;
      HEAP32[$vararg_buffer74 >> 2] = HEAP32[$179 >> 2];
      HEAP32[$vararg_buffer74 + 4 >> 2] = 89397;
      __Z16luaO_pushfstringP9lua_StatePKcz($216, 89412, $vararg_buffer74) | 0;
      __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
     }
     $219 = HEAP32[$2 >> 2] | 0;
     if (!$219) $$0$i$i64 = 0; else {
      $223 = __Z14luaZ_openspaceP9lua_StateP7Mbufferj(HEAP32[$0 >> 2] | 0, HEAP32[$180 >> 2] | 0, $219) | 0;
      if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $223, HEAP32[$2 >> 2] | 0) | 0) {
       $228 = HEAP32[$0 >> 2] | 0;
       HEAP32[$vararg_buffer78 >> 2] = HEAP32[$179 >> 2];
       HEAP32[$vararg_buffer78 + 4 >> 2] = 89397;
       __Z16luaO_pushfstringP9lua_StatePKcz($228, 89412, $vararg_buffer78) | 0;
       __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
      }
      $$0$i$i64 = __Z12luaS_newlstrP9lua_StatePKcj(HEAP32[$0 >> 2] | 0, $223, (HEAP32[$2 >> 2] | 0) + -1 | 0) | 0;
     }
     HEAP32[$185 >> 2] = $$0$i$i64;
     HEAP32[$184 + ($$1$i75 << 3) + 4 >> 2] = 4;
     break;
    }
   default:
    {
     $236 = HEAP32[$0 >> 2] | 0;
     HEAP32[$vararg_buffer82 >> 2] = HEAP32[$179 >> 2];
     HEAP32[$vararg_buffer82 + 4 >> 2] = 89480;
     __Z16luaO_pushfstringP9lua_StatePKcz($236, 89412, $vararg_buffer82) | 0;
     __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
    }
   }
   $$1$i75 = $$1$i75 + 1 | 0;
   if (($$1$i75 | 0) == ($168 | 0)) break L63;
  }
 } while (0);
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
  $243 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer86 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer86 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($243, 89412, $vararg_buffer86) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $247 = HEAP32[$2 >> 2] | 0;
 if (($247 | 0) < 0) {
  $249 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer90 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer90 + 4 >> 2] = 89468;
  __Z16luaO_pushfstringP9lua_StatePKcz($249, 89412, $vararg_buffer90) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
  $254 = HEAP32[$2 >> 2] | 0;
 } else $254 = $247;
 $256 = HEAP32[$0 >> 2] | 0;
 if (($254 + 1 | 0) >>> 0 < 1073741824) $261 = __Z13luaM_realloc_P9lua_StatePvjj($256, 0, 0, $254 << 2) | 0; else $261 = __Z11luaM_toobigP9lua_State($256) | 0;
 $260 = $13 + 16 | 0;
 HEAP32[$260 >> 2] = $261;
 HEAP32[$13 + 52 >> 2] = $254;
 $263 = ($254 | 0) > 0;
 do if ($263) {
  HEAP32[$261 >> 2] = 0;
  if (($254 | 0) != 1) {
   $265 = 1;
   do {
    HEAP32[(HEAP32[$260 >> 2] | 0) + ($265 << 2) >> 2] = 0;
    $265 = $265 + 1 | 0;
   } while (($265 | 0) != ($254 | 0));
  }
  if ($263) $$3$i72 = 0; else break;
  do {
   $268 = __ZL12LoadFunctionP9LoadStateP7TString($0, HEAP32[$56 >> 2] | 0) | 0;
   HEAP32[(HEAP32[$260 >> 2] | 0) + ($$3$i72 << 2) >> 2] = $268;
   $$3$i72 = $$3$i72 + 1 | 0;
  } while (($$3$i72 | 0) != ($254 | 0));
 } while (0);
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
  $275 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer94 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer94 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($275, 89412, $vararg_buffer94) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $279 = HEAP32[$2 >> 2] | 0;
 if (($279 | 0) < 0) {
  $281 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer98 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer98 + 4 >> 2] = 89468;
  __Z16luaO_pushfstringP9lua_StatePKcz($281, 89412, $vararg_buffer98) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
  $286 = HEAP32[$2 >> 2] | 0;
 } else $286 = $279;
 $288 = HEAP32[$0 >> 2] | 0;
 if (($286 + 1 | 0) >>> 0 < 1073741824) {
  $289 = $286 << 2;
  $$pre$phi$i57Z2D = $289;
  $293 = __Z13luaM_realloc_P9lua_StatePvjj($288, 0, 0, $289) | 0;
 } else {
  $$pre$phi$i57Z2D = $286 << 2;
  $293 = __Z11luaM_toobigP9lua_State($288) | 0;
 }
 HEAP32[$13 + 20 >> 2] = $293;
 HEAP32[$13 + 48 >> 2] = $286;
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $293, $$pre$phi$i57Z2D) | 0) {
  $298 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer102 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer102 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($298, 89412, $vararg_buffer102) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
  $305 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer106 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer106 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($305, 89412, $vararg_buffer106) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $309 = HEAP32[$2 >> 2] | 0;
 if (($309 | 0) < 0) {
  $311 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer110 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer110 + 4 >> 2] = 89468;
  __Z16luaO_pushfstringP9lua_StatePKcz($311, 89412, $vararg_buffer110) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
  $316 = HEAP32[$2 >> 2] | 0;
 } else $316 = $309;
 $318 = HEAP32[$0 >> 2] | 0;
 if (($316 + 1 | 0) >>> 0 < 357913942) $323 = __Z13luaM_realloc_P9lua_StatePvjj($318, 0, 0, $316 * 12 | 0) | 0; else $323 = __Z11luaM_toobigP9lua_State($318) | 0;
 $322 = $13 + 24 | 0;
 HEAP32[$322 >> 2] = $323;
 HEAP32[$13 + 56 >> 2] = $316;
 if (($316 | 0) > 0) {
  HEAP32[$323 >> 2] = 0;
  if (($316 | 0) != 1) {
   $329 = 1;
   do {
    HEAP32[(HEAP32[$322 >> 2] | 0) + ($329 * 12 | 0) >> 2] = 0;
    $329 = $329 + 1 | 0;
   } while (($329 | 0) != ($316 | 0));
  }
  $326 = $0 + 12 | 0;
  $327 = $0 + 8 | 0;
  $$176$i = 0;
  do {
   if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
    $334 = HEAP32[$0 >> 2] | 0;
    HEAP32[$vararg_buffer114 >> 2] = HEAP32[$326 >> 2];
    HEAP32[$vararg_buffer114 + 4 >> 2] = 89397;
    __Z16luaO_pushfstringP9lua_StatePKcz($334, 89412, $vararg_buffer114) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
   }
   $337 = HEAP32[$2 >> 2] | 0;
   if (!$337) $$0$i$i = 0; else {
    $341 = __Z14luaZ_openspaceP9lua_StateP7Mbufferj(HEAP32[$0 >> 2] | 0, HEAP32[$327 >> 2] | 0, $337) | 0;
    if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $341, HEAP32[$2 >> 2] | 0) | 0) {
     $346 = HEAP32[$0 >> 2] | 0;
     HEAP32[$vararg_buffer118 >> 2] = HEAP32[$326 >> 2];
     HEAP32[$vararg_buffer118 + 4 >> 2] = 89397;
     __Z16luaO_pushfstringP9lua_StatePKcz($346, 89412, $vararg_buffer118) | 0;
     __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
    }
    $$0$i$i = __Z12luaS_newlstrP9lua_StatePKcj(HEAP32[$0 >> 2] | 0, $341, (HEAP32[$2 >> 2] | 0) + -1 | 0) | 0;
   }
   HEAP32[(HEAP32[$322 >> 2] | 0) + ($$176$i * 12 | 0) >> 2] = $$0$i$i;
   if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
    $358 = HEAP32[$0 >> 2] | 0;
    HEAP32[$vararg_buffer122 >> 2] = HEAP32[$326 >> 2];
    HEAP32[$vararg_buffer122 + 4 >> 2] = 89397;
    __Z16luaO_pushfstringP9lua_StatePKcz($358, 89412, $vararg_buffer122) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
   }
   $361 = HEAP32[$2 >> 2] | 0;
   if (($361 | 0) < 0) {
    $363 = HEAP32[$0 >> 2] | 0;
    HEAP32[$vararg_buffer126 >> 2] = HEAP32[$326 >> 2];
    HEAP32[$vararg_buffer126 + 4 >> 2] = 89468;
    __Z16luaO_pushfstringP9lua_StatePKcz($363, 89412, $vararg_buffer126) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
    $368 = HEAP32[$2 >> 2] | 0;
   } else $368 = $361;
   HEAP32[(HEAP32[$322 >> 2] | 0) + ($$176$i * 12 | 0) + 4 >> 2] = $368;
   if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
    $372 = HEAP32[$0 >> 2] | 0;
    HEAP32[$vararg_buffer130 >> 2] = HEAP32[$326 >> 2];
    HEAP32[$vararg_buffer130 + 4 >> 2] = 89397;
    __Z16luaO_pushfstringP9lua_StatePKcz($372, 89412, $vararg_buffer130) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
   }
   $375 = HEAP32[$2 >> 2] | 0;
   if (($375 | 0) < 0) {
    $377 = HEAP32[$0 >> 2] | 0;
    HEAP32[$vararg_buffer134 >> 2] = HEAP32[$326 >> 2];
    HEAP32[$vararg_buffer134 + 4 >> 2] = 89468;
    __Z16luaO_pushfstringP9lua_StatePKcz($377, 89412, $vararg_buffer134) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
    $382 = HEAP32[$2 >> 2] | 0;
   } else $382 = $375;
   HEAP32[(HEAP32[$322 >> 2] | 0) + ($$176$i * 12 | 0) + 8 >> 2] = $382;
   $$176$i = $$176$i + 1 | 0;
  } while (($$176$i | 0) != ($316 | 0));
 }
 if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
  $387 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer138 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer138 + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($387, 89412, $vararg_buffer138) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 }
 $391 = HEAP32[$2 >> 2] | 0;
 if (($391 | 0) < 0) {
  $393 = HEAP32[$0 >> 2] | 0;
  HEAP32[$vararg_buffer142 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$vararg_buffer142 + 4 >> 2] = 89468;
  __Z16luaO_pushfstringP9lua_StatePKcz($393, 89412, $vararg_buffer142) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
  $398 = HEAP32[$2 >> 2] | 0;
 } else $398 = $391;
 $400 = HEAP32[$0 >> 2] | 0;
 if (($398 + 1 | 0) >>> 0 < 1073741824) $405 = __Z13luaM_realloc_P9lua_StatePvjj($400, 0, 0, $398 << 2) | 0; else $405 = __Z11luaM_toobigP9lua_State($400) | 0;
 $404 = $13 + 28 | 0;
 HEAP32[$404 >> 2] = $405;
 HEAP32[$13 + 36 >> 2] = $398;
 if (($398 | 0) > 0) {
  HEAP32[$405 >> 2] = 0;
  if (($398 | 0) != 1) {
   $411 = 1;
   do {
    HEAP32[(HEAP32[$404 >> 2] | 0) + ($411 << 2) >> 2] = 0;
    $411 = $411 + 1 | 0;
   } while (($411 | 0) != ($398 | 0));
  }
  $408 = $0 + 8 | 0;
  $409 = $0 + 12 | 0;
  $$372$i = 0;
  do {
   if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $2, 4) | 0) {
    $416 = HEAP32[$0 >> 2] | 0;
    HEAP32[$vararg_buffer146 >> 2] = HEAP32[$409 >> 2];
    HEAP32[$vararg_buffer146 + 4 >> 2] = 89397;
    __Z16luaO_pushfstringP9lua_StatePKcz($416, 89412, $vararg_buffer146) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
   }
   $419 = HEAP32[$2 >> 2] | 0;
   if (!$419) $$0$i65$i = 0; else {
    $423 = __Z14luaZ_openspaceP9lua_StateP7Mbufferj(HEAP32[$0 >> 2] | 0, HEAP32[$408 >> 2] | 0, $419) | 0;
    if (__Z9luaZ_readP3ZioPvj(HEAP32[$30 >> 2] | 0, $423, HEAP32[$2 >> 2] | 0) | 0) {
     $428 = HEAP32[$0 >> 2] | 0;
     HEAP32[$vararg_buffer150 >> 2] = HEAP32[$409 >> 2];
     HEAP32[$vararg_buffer150 + 4 >> 2] = 89397;
     __Z16luaO_pushfstringP9lua_StatePKcz($428, 89412, $vararg_buffer150) | 0;
     __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
    }
    $$0$i65$i = __Z12luaS_newlstrP9lua_StatePKcj(HEAP32[$0 >> 2] | 0, $423, (HEAP32[$2 >> 2] | 0) + -1 | 0) | 0;
   }
   HEAP32[(HEAP32[$404 >> 2] | 0) + ($$372$i << 2) >> 2] = $$0$i65$i;
   $$372$i = $$372$i + 1 | 0;
  } while (($$372$i | 0) != ($398 | 0));
 }
 if (__Z14luaG_checkcodePK5Proto($13) | 0) {
  $444 = HEAP32[$0 >> 2] | 0;
  $445 = $444 + 8 | 0;
  $446 = HEAP32[$445 >> 2] | 0;
  $447 = $446 + -8 | 0;
  HEAP32[$445 >> 2] = $447;
  $448 = HEAP32[$0 >> 2] | 0;
  $449 = $448 + 52 | 0;
  $450 = HEAP16[$449 >> 1] | 0;
  $451 = $450 + -1 << 16 >> 16;
  HEAP16[$449 >> 1] = $451;
  STACKTOP = sp;
  return $13 | 0;
 }
 $440 = HEAP32[$0 >> 2] | 0;
 HEAP32[$vararg_buffer154 >> 2] = HEAP32[$0 + 12 >> 2];
 HEAP32[$vararg_buffer154 + 4 >> 2] = 89493;
 __Z16luaO_pushfstringP9lua_StatePKcz($440, 89412, $vararg_buffer154) | 0;
 __Z10luaD_throwP9lua_Statei(HEAP32[$0 >> 2] | 0, 3);
 $444 = HEAP32[$0 >> 2] | 0;
 $445 = $444 + 8 | 0;
 $446 = HEAP32[$445 >> 2] | 0;
 $447 = $446 + -8 | 0;
 HEAP32[$445 >> 2] = $447;
 $448 = HEAP32[$0 >> 2] | 0;
 $449 = $448 + 52 | 0;
 $450 = HEAP16[$449 >> 1] | 0;
 $451 = $450 + -1 << 16 >> 16;
 HEAP16[$449 >> 1] = $451;
 STACKTOP = sp;
 return $13 | 0;
}

function _vfscanf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$$0268 = 0, $$0$i = 0, $$0266$lcssa = 0, $$0266408 = 0, $$0268 = 0, $$0270 = 0, $$0272 = 0, $$0273420 = 0, $$0276$ph = 0, $$0278$ph = 0, $$0278$ph$phi = 0, $$0278$ph331 = 0, $$0283419 = 0, $$0286411 = 0, $$0288416 = 0, $$0292 = 0, $$0293 = 0, $$0294415 = 0, $$0305414 = 0, $$10 = 0, $$10304 = 0, $$11 = 0, $$1267 = 0, $$1271 = 0, $$1274 = 0, $$1277$ph = 0, $$1279 = 0, $$1284 = 0, $$1289 = 0, $$1295 = 0, $$1306 = 0, $$2 = 0, $$2275 = 0, $$2280 = 0, $$2280$ph = 0, $$2280$ph$phi = 0, $$2285 = 0, $$2290 = 0, $$2296 = 0, $$2307$ph = 0, $$3$lcssa = 0, $$3281 = 0, $$3291 = 0, $$3297$ph = 0, $$3407 = 0, $$4 = 0, $$4282 = 0, $$4309 = 0, $$5 = 0, $$5299 = 0, $$5310 = 0, $$6 = 0, $$6300 = 0, $$6311 = 0, $$7 = 0, $$7$ph = 0, $$7301 = 0, $$7312 = 0, $$8 = 0, $$8302 = 0, $$8313 = 0, $$9 = 0, $$9303 = 0, $$9314 = 0, $$lcssa349 = 0, $$pre$phi493Z2D = 0, $$sroa$2$0$$sroa_idx13 = 0, $100 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $111 = 0, $112 = 0, $113 = 0, $115 = 0, $118 = 0, $12 = 0, $121 = 0, $123 = 0, $131 = 0, $135 = 0, $14 = 0, $142 = 0, $148 = 0, $15 = 0, $154 = 0, $156 = 0, $157 = 0, $16 = 0, $162 = 0, $166 = 0, $17 = 0, $170 = 0, $172 = 0, $178 = 0, $18 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $186 = 0, $19 = 0, $191 = 0, $195 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $204 = 0, $206 = 0, $207 = 0, $21 = 0, $215 = 0, $22 = 0, $225 = 0, $227 = 0, $23 = 0, $231 = 0, $233 = 0, $241 = 0, $249 = 0, $25 = 0, $250 = 0, $253 = 0, $255 = 0, $261 = 0, $268 = 0, $270 = 0, $276 = 0, $28 = 0, $283 = 0, $288 = 0, $289 = 0, $296 = 0, $3 = 0, $309 = 0, $313 = 0.0, $33 = 0, $332 = 0, $4 = 0, $40 = 0, $46 = 0, $5 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $68 = 0, $7 = 0, $88 = 0, $89 = 0, $97 = 0, $98 = 0, $99 = 0, $isdigittmp = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp + 33 | 0;
 $6 = sp;
 $7 = sp + 32 | 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $332 = ___lockfile($0) | 0; else $332 = 0;
 $12 = HEAP8[$1 >> 0] | 0;
 L4 : do if (!($12 << 24 >> 24)) $$3291 = 0; else {
  $14 = $0 + 4 | 0;
  $15 = $0 + 100 | 0;
  $16 = $0 + 108 | 0;
  $17 = $0 + 8 | 0;
  $18 = $5 + 10 | 0;
  $19 = $5 + 33 | 0;
  $$sroa$2$0$$sroa_idx13 = $4 + 4 | 0;
  $20 = $5 + 46 | 0;
  $21 = $5 + 94 | 0;
  $22 = $5 + 1 | 0;
  $23 = $5 + 1 | 0;
  $$0273420 = $1;
  $$0283419 = 0;
  $$0288416 = 0;
  $$0294415 = 0;
  $$0305414 = 0;
  $25 = $12;
  L6 : while (1) {
   L8 : do if (!(_isspace($25 & 255) | 0)) {
    $54 = $25 << 24 >> 24 == 37;
    L10 : do if ($54) {
     $55 = $$0273420 + 1 | 0;
     $56 = HEAP8[$55 >> 0] | 0;
     L12 : do switch ($56 << 24 >> 24) {
     case 37:
      {
       break L10;
       break;
      }
     case 42:
      {
       $$0293 = 0;
       $$2275 = $$0273420 + 2 | 0;
       break;
      }
     default:
      {
       $isdigittmp = ($56 & 255) + -48 | 0;
       if ($isdigittmp >>> 0 < 10) if ((HEAP8[$$0273420 + 2 >> 0] | 0) == 36) {
        HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
        $$0$i = $isdigittmp;
        while (1) {
         $88 = (HEAP32[$3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
         $89 = HEAP32[$88 >> 2] | 0;
         HEAP32[$3 >> 2] = $88 + 4;
         if ($$0$i >>> 0 > 1) $$0$i = $$0$i + -1 | 0; else break;
        }
        $$0293 = $89;
        $$2275 = $$0273420 + 3 | 0;
        break L12;
       }
       $97 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
       $98 = HEAP32[$97 >> 2] | 0;
       HEAP32[$2 >> 2] = $97 + 4;
       $$0293 = $98;
       $$2275 = $55;
      }
     } while (0);
     $99 = HEAP8[$$2275 >> 0] | 0;
     $100 = $99 & 255;
     if (($100 + -48 | 0) >>> 0 < 10) {
      $$0266408 = 0;
      $$3407 = $$2275;
      $104 = $100;
      while (1) {
       $103 = ($$0266408 * 10 | 0) + -48 + $104 | 0;
       $105 = $$3407 + 1 | 0;
       $106 = HEAP8[$105 >> 0] | 0;
       $104 = $106 & 255;
       if (($104 + -48 | 0) >>> 0 >= 10) {
        $$0266$lcssa = $103;
        $$3$lcssa = $105;
        $$lcssa349 = $106;
        break;
       } else {
        $$0266408 = $103;
        $$3407 = $105;
       }
      }
     } else {
      $$0266$lcssa = 0;
      $$3$lcssa = $$2275;
      $$lcssa349 = $99;
     }
     if ($$lcssa349 << 24 >> 24 == 109) {
      $111 = $$3$lcssa + 1 | 0;
      $$0270 = ($$0293 | 0) != 0 & 1;
      $$1295 = 0;
      $$1306 = 0;
      $$4 = $111;
      $113 = HEAP8[$111 >> 0] | 0;
     } else {
      $$0270 = 0;
      $$1295 = $$0294415;
      $$1306 = $$0305414;
      $$4 = $$3$lcssa;
      $113 = $$lcssa349;
     }
     $112 = $$4 + 1 | 0;
     switch ($113 << 24 >> 24) {
     case 104:
      {
       $115 = (HEAP8[$112 >> 0] | 0) == 104;
       $$0268 = $115 ? -2 : -1;
       $$5 = $115 ? $$4 + 2 | 0 : $112;
       break;
      }
     case 108:
      {
       $118 = (HEAP8[$112 >> 0] | 0) == 108;
       $$0268 = $118 ? 3 : 1;
       $$5 = $118 ? $$4 + 2 | 0 : $112;
       break;
      }
     case 106:
      {
       $$0268 = 3;
       $$5 = $112;
       break;
      }
     case 116:
     case 122:
      {
       $$0268 = 1;
       $$5 = $112;
       break;
      }
     case 76:
      {
       $$0268 = 2;
       $$5 = $112;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       $$0268 = 0;
       $$5 = $$4;
       break;
      }
     default:
      {
       $$7312 = $$1306;
       $$8302 = $$1295;
       label = 154;
       break L6;
      }
     }
     $121 = HEAPU8[$$5 >> 0] | 0;
     $123 = ($121 & 47 | 0) == 3;
     $$ = $123 ? $121 | 32 : $121;
     $$$0268 = $123 ? 1 : $$0268;
     $trunc = $$ & 255;
     switch ($trunc << 24 >> 24) {
     case 99:
      {
       $$1267 = ($$0266$lcssa | 0) < 1 ? 1 : $$0266$lcssa;
       $$1284 = $$0283419;
       break;
      }
     case 91:
      {
       $$1267 = $$0266$lcssa;
       $$1284 = $$0283419;
       break;
      }
     case 110:
      {
       if (!$$0293) {
        $$11 = $$5;
        $$1289 = $$0288416;
        $$2285 = $$0283419;
        $$6311 = $$1306;
        $$7301 = $$1295;
        break L8;
       }
       switch ($$$0268 | 0) {
       case -2:
        {
         HEAP8[$$0293 >> 0] = $$0283419;
         $$11 = $$5;
         $$1289 = $$0288416;
         $$2285 = $$0283419;
         $$6311 = $$1306;
         $$7301 = $$1295;
         break L8;
         break;
        }
       case -1:
        {
         HEAP16[$$0293 >> 1] = $$0283419;
         $$11 = $$5;
         $$1289 = $$0288416;
         $$2285 = $$0283419;
         $$6311 = $$1306;
         $$7301 = $$1295;
         break L8;
         break;
        }
       case 0:
        {
         HEAP32[$$0293 >> 2] = $$0283419;
         $$11 = $$5;
         $$1289 = $$0288416;
         $$2285 = $$0283419;
         $$6311 = $$1306;
         $$7301 = $$1295;
         break L8;
         break;
        }
       case 1:
        {
         HEAP32[$$0293 >> 2] = $$0283419;
         $$11 = $$5;
         $$1289 = $$0288416;
         $$2285 = $$0283419;
         $$6311 = $$1306;
         $$7301 = $$1295;
         break L8;
         break;
        }
       case 3:
        {
         $131 = $$0293;
         HEAP32[$131 >> 2] = $$0283419;
         HEAP32[$131 + 4 >> 2] = (($$0283419 | 0) < 0) << 31 >> 31;
         $$11 = $$5;
         $$1289 = $$0288416;
         $$2285 = $$0283419;
         $$6311 = $$1306;
         $$7301 = $$1295;
         break L8;
         break;
        }
       default:
        {
         $$11 = $$5;
         $$1289 = $$0288416;
         $$2285 = $$0283419;
         $$6311 = $$1306;
         $$7301 = $$1295;
         break L8;
        }
       }
       break;
      }
     default:
      {
       ___shlim($0, 0);
       do {
        $135 = HEAP32[$14 >> 2] | 0;
        if ($135 >>> 0 < (HEAP32[$15 >> 2] | 0) >>> 0) {
         HEAP32[$14 >> 2] = $135 + 1;
         $142 = HEAPU8[$135 >> 0] | 0;
        } else $142 = ___shgetc($0) | 0;
       } while ((_isspace($142) | 0) != 0);
       if (!(HEAP32[$15 >> 2] | 0)) $154 = HEAP32[$14 >> 2] | 0; else {
        $148 = (HEAP32[$14 >> 2] | 0) + -1 | 0;
        HEAP32[$14 >> 2] = $148;
        $154 = $148;
       }
       $$1267 = $$0266$lcssa;
       $$1284 = (HEAP32[$16 >> 2] | 0) + $$0283419 + $154 - (HEAP32[$17 >> 2] | 0) | 0;
      }
     }
     ___shlim($0, $$1267);
     $156 = HEAP32[$14 >> 2] | 0;
     $157 = HEAP32[$15 >> 2] | 0;
     if ($156 >>> 0 < $157 >>> 0) {
      HEAP32[$14 >> 2] = $156 + 1;
      $162 = $157;
     } else {
      if ((___shgetc($0) | 0) < 0) {
       $$7312 = $$1306;
       $$8302 = $$1295;
       label = 154;
       break L6;
      }
      $162 = HEAP32[$15 >> 2] | 0;
     }
     if ($162 | 0) HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + -1;
     L68 : do switch ($trunc << 24 >> 24) {
     case 91:
     case 99:
     case 115:
      {
       $166 = ($$ | 0) == 99;
       L70 : do if (($$ | 16 | 0) == 115) {
        _memset($22 | 0, -1, 256) | 0;
        HEAP8[$5 >> 0] = 0;
        if (($$ | 0) == 115) {
         HEAP8[$19 >> 0] = 0;
         HEAP8[$18 >> 0] = 0;
         HEAP8[$18 + 1 >> 0] = 0;
         HEAP8[$18 + 2 >> 0] = 0;
         HEAP8[$18 + 3 >> 0] = 0;
         HEAP8[$18 + 4 >> 0] = 0;
         $$9 = $$5;
        } else $$9 = $$5;
       } else {
        $170 = $$5 + 1 | 0;
        $172 = (HEAP8[$170 >> 0] | 0) == 94;
        $$0292 = $172 & 1;
        $$6 = $172 ? $$5 + 2 | 0 : $170;
        _memset($23 | 0, $172 & 1 | 0, 256) | 0;
        HEAP8[$5 >> 0] = 0;
        switch (HEAP8[$$6 >> 0] | 0) {
        case 45:
         {
          $178 = ($$0292 ^ 1) & 255;
          HEAP8[$20 >> 0] = $178;
          $$7$ph = $$6 + 1 | 0;
          $$pre$phi493Z2D = $178;
          break;
         }
        case 93:
         {
          $181 = ($$0292 ^ 1) & 255;
          HEAP8[$21 >> 0] = $181;
          $$7$ph = $$6 + 1 | 0;
          $$pre$phi493Z2D = $181;
          break;
         }
        default:
         {
          $$7$ph = $$6;
          $$pre$phi493Z2D = ($$0292 ^ 1) & 255;
         }
        }
        $$7 = $$7$ph;
        while (1) {
         $182 = HEAP8[$$7 >> 0] | 0;
         L81 : do switch ($182 << 24 >> 24) {
         case 0:
          {
           $$7312 = $$1306;
           $$8302 = $$1295;
           label = 154;
           break L6;
           break;
          }
         case 93:
          {
           $$9 = $$7;
           break L70;
           break;
          }
         case 45:
          {
           $183 = $$7 + 1 | 0;
           $184 = HEAP8[$183 >> 0] | 0;
           switch ($184 << 24 >> 24) {
           case 93:
           case 0:
            {
             $$8 = $$7;
             $195 = 45;
             break L81;
             break;
            }
           default:
            {}
           }
           $186 = HEAP8[$$7 + -1 >> 0] | 0;
           if (($186 & 255) < ($184 & 255)) {
            $$0286411 = $186 & 255;
            do {
             $$0286411 = $$0286411 + 1 | 0;
             HEAP8[$5 + $$0286411 >> 0] = $$pre$phi493Z2D;
             $191 = HEAP8[$183 >> 0] | 0;
            } while (($$0286411 | 0) < ($191 & 255 | 0));
            $$8 = $183;
            $195 = $191;
           } else {
            $$8 = $183;
            $195 = $184;
           }
           break;
          }
         default:
          {
           $$8 = $$7;
           $195 = $182;
          }
         } while (0);
         HEAP8[$5 + (($195 & 255) + 1) >> 0] = $$pre$phi493Z2D;
         $$7 = $$8 + 1 | 0;
        }
       } while (0);
       $200 = $166 ? $$1267 + 1 | 0 : 31;
       $201 = ($$$0268 | 0) == 1;
       $202 = ($$0270 | 0) != 0;
       L89 : do if ($201) {
        if ($202) {
         $204 = _malloc($200 << 2) | 0;
         if (!$204) {
          $$7312 = 0;
          $$8302 = $204;
          label = 154;
          break L6;
         } else $$2296 = $204;
        } else $$2296 = $$0293;
        HEAP32[$4 >> 2] = 0;
        HEAP32[$$sroa$2$0$$sroa_idx13 >> 2] = 0;
        $$0276$ph = $200;
        $$0278$ph = 0;
        $$3297$ph = $$2296;
        L95 : while (1) {
         $206 = ($$3297$ph | 0) == 0;
         $$0278$ph331 = $$0278$ph;
         while (1) {
          L99 : while (1) {
           $207 = HEAP32[$14 >> 2] | 0;
           if ($207 >>> 0 < (HEAP32[$15 >> 2] | 0) >>> 0) {
            HEAP32[$14 >> 2] = $207 + 1;
            $215 = HEAPU8[$207 >> 0] | 0;
           } else $215 = ___shgetc($0) | 0;
           if (!(HEAP8[$5 + ($215 + 1) >> 0] | 0)) break L95;
           HEAP8[$7 >> 0] = $215;
           switch (_mbrtowc($6, $7, 1, $4) | 0) {
           case -1:
            {
             $$7312 = 0;
             $$8302 = $$3297$ph;
             label = 154;
             break L6;
             break;
            }
           case -2:
            break;
           default:
            break L99;
           }
          }
          if ($206) $$1279 = $$0278$ph331; else {
           HEAP32[$$3297$ph + ($$0278$ph331 << 2) >> 2] = HEAP32[$6 >> 2];
           $$1279 = $$0278$ph331 + 1 | 0;
          }
          if ($202 & ($$1279 | 0) == ($$0276$ph | 0)) break; else $$0278$ph331 = $$1279;
         }
         $225 = $$0276$ph << 1 | 1;
         $227 = _realloc($$3297$ph, $225 << 2) | 0;
         if (!$227) {
          $$7312 = 0;
          $$8302 = $$3297$ph;
          label = 154;
          break L6;
         } else {
          $$0278$ph$phi = $$0276$ph;
          $$0276$ph = $225;
          $$3297$ph = $227;
          $$0278$ph = $$0278$ph$phi;
         }
        }
        if (!(_mbsinit($4) | 0)) {
         $$7312 = 0;
         $$8302 = $$3297$ph;
         label = 154;
         break L6;
        } else {
         $$4282 = $$0278$ph331;
         $$4309 = 0;
         $$5299 = $$3297$ph;
        }
       } else {
        if ($202) {
         $231 = _malloc($200) | 0;
         if (!$231) {
          $$7312 = 0;
          $$8302 = 0;
          label = 154;
          break L6;
         } else {
          $$1277$ph = $200;
          $$2280$ph = 0;
          $$2307$ph = $231;
         }
         while (1) {
          $$2280 = $$2280$ph;
          do {
           $233 = HEAP32[$14 >> 2] | 0;
           if ($233 >>> 0 < (HEAP32[$15 >> 2] | 0) >>> 0) {
            HEAP32[$14 >> 2] = $233 + 1;
            $241 = HEAPU8[$233 >> 0] | 0;
           } else $241 = ___shgetc($0) | 0;
           if (!(HEAP8[$5 + ($241 + 1) >> 0] | 0)) {
            $$4282 = $$2280;
            $$4309 = $$2307$ph;
            $$5299 = 0;
            break L89;
           }
           HEAP8[$$2307$ph + $$2280 >> 0] = $241;
           $$2280 = $$2280 + 1 | 0;
          } while (($$2280 | 0) != ($$1277$ph | 0));
          $249 = $$1277$ph << 1 | 1;
          $250 = _realloc($$2307$ph, $249) | 0;
          if (!$250) {
           $$7312 = $$2307$ph;
           $$8302 = 0;
           label = 154;
           break L6;
          } else {
           $$2280$ph$phi = $$1277$ph;
           $$1277$ph = $249;
           $$2307$ph = $250;
           $$2280$ph = $$2280$ph$phi;
          }
         }
        }
        if (!$$0293) {
         $270 = $162;
         while (1) {
          $268 = HEAP32[$14 >> 2] | 0;
          if ($268 >>> 0 < $270 >>> 0) {
           HEAP32[$14 >> 2] = $268 + 1;
           $276 = HEAPU8[$268 >> 0] | 0;
          } else $276 = ___shgetc($0) | 0;
          if (!(HEAP8[$5 + ($276 + 1) >> 0] | 0)) {
           $$4282 = 0;
           $$4309 = 0;
           $$5299 = 0;
           break L89;
          }
          $270 = HEAP32[$15 >> 2] | 0;
         }
        } else {
         $$3281 = 0;
         $255 = $162;
         while (1) {
          $253 = HEAP32[$14 >> 2] | 0;
          if ($253 >>> 0 < $255 >>> 0) {
           HEAP32[$14 >> 2] = $253 + 1;
           $261 = HEAPU8[$253 >> 0] | 0;
          } else $261 = ___shgetc($0) | 0;
          if (!(HEAP8[$5 + ($261 + 1) >> 0] | 0)) {
           $$4282 = $$3281;
           $$4309 = $$0293;
           $$5299 = 0;
           break L89;
          }
          HEAP8[$$0293 + $$3281 >> 0] = $261;
          $$3281 = $$3281 + 1 | 0;
          $255 = HEAP32[$15 >> 2] | 0;
         }
        }
       } while (0);
       if (!(HEAP32[$15 >> 2] | 0)) $288 = HEAP32[$14 >> 2] | 0; else {
        $283 = (HEAP32[$14 >> 2] | 0) + -1 | 0;
        HEAP32[$14 >> 2] = $283;
        $288 = $283;
       }
       $289 = $288 - (HEAP32[$17 >> 2] | 0) + (HEAP32[$16 >> 2] | 0) | 0;
       if (!$289) {
        $$10304 = $$5299;
        $$2 = $$0270;
        $$2290 = $$0288416;
        $$9314 = $$4309;
        break L6;
       }
       if (!(($289 | 0) == ($$1267 | 0) | $166 ^ 1)) {
        $$10304 = $$5299;
        $$2 = $$0270;
        $$2290 = $$0288416;
        $$9314 = $$4309;
        break L6;
       }
       do if ($202) if ($201) {
        HEAP32[$$0293 >> 2] = $$5299;
        break;
       } else {
        HEAP32[$$0293 >> 2] = $$4309;
        break;
       } while (0);
       if ($166) {
        $$10 = $$9;
        $$5310 = $$4309;
        $$6300 = $$5299;
       } else {
        if ($$5299 | 0) HEAP32[$$5299 + ($$4282 << 2) >> 2] = 0;
        if (!$$4309) {
         $$10 = $$9;
         $$5310 = 0;
         $$6300 = $$5299;
         break L68;
        }
        HEAP8[$$4309 + $$4282 >> 0] = 0;
        $$10 = $$9;
        $$5310 = $$4309;
        $$6300 = $$5299;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       $$0272 = 16;
       label = 136;
       break;
      }
     case 111:
      {
       $$0272 = 8;
       label = 136;
       break;
      }
     case 117:
     case 100:
      {
       $$0272 = 10;
       label = 136;
       break;
      }
     case 105:
      {
       $$0272 = 0;
       label = 136;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       $313 = +___floatscan($0, $$$0268, 0);
       if ((HEAP32[$16 >> 2] | 0) == ((HEAP32[$17 >> 2] | 0) - (HEAP32[$14 >> 2] | 0) | 0)) {
        $$10304 = $$1295;
        $$2 = $$0270;
        $$2290 = $$0288416;
        $$9314 = $$1306;
        break L6;
       }
       if (!$$0293) {
        $$10 = $$5;
        $$5310 = $$1306;
        $$6300 = $$1295;
       } else switch ($$$0268 | 0) {
       case 0:
        {
         HEAPF32[$$0293 >> 2] = $313;
         $$10 = $$5;
         $$5310 = $$1306;
         $$6300 = $$1295;
         break L68;
         break;
        }
       case 1:
        {
         HEAPF64[$$0293 >> 3] = $313;
         $$10 = $$5;
         $$5310 = $$1306;
         $$6300 = $$1295;
         break L68;
         break;
        }
       case 2:
        {
         HEAPF64[$$0293 >> 3] = $313;
         $$10 = $$5;
         $$5310 = $$1306;
         $$6300 = $$1295;
         break L68;
         break;
        }
       default:
        {
         $$10 = $$5;
         $$5310 = $$1306;
         $$6300 = $$1295;
         break L68;
        }
       }
       break;
      }
     default:
      {
       $$10 = $$5;
       $$5310 = $$1306;
       $$6300 = $$1295;
      }
     } while (0);
     L169 : do if ((label | 0) == 136) {
      label = 0;
      $296 = ___intscan($0, $$0272, 0, -1, -1) | 0;
      if ((HEAP32[$16 >> 2] | 0) == ((HEAP32[$17 >> 2] | 0) - (HEAP32[$14 >> 2] | 0) | 0)) {
       $$10304 = $$1295;
       $$2 = $$0270;
       $$2290 = $$0288416;
       $$9314 = $$1306;
       break L6;
      }
      if (($$0293 | 0) != 0 & ($$ | 0) == 112) {
       HEAP32[$$0293 >> 2] = $296;
       $$10 = $$5;
       $$5310 = $$1306;
       $$6300 = $$1295;
       break;
      }
      if (!$$0293) {
       $$10 = $$5;
       $$5310 = $$1306;
       $$6300 = $$1295;
      } else switch ($$$0268 | 0) {
      case -2:
       {
        HEAP8[$$0293 >> 0] = $296;
        $$10 = $$5;
        $$5310 = $$1306;
        $$6300 = $$1295;
        break L169;
        break;
       }
      case -1:
       {
        HEAP16[$$0293 >> 1] = $296;
        $$10 = $$5;
        $$5310 = $$1306;
        $$6300 = $$1295;
        break L169;
        break;
       }
      case 0:
       {
        HEAP32[$$0293 >> 2] = $296;
        $$10 = $$5;
        $$5310 = $$1306;
        $$6300 = $$1295;
        break L169;
        break;
       }
      case 1:
       {
        HEAP32[$$0293 >> 2] = $296;
        $$10 = $$5;
        $$5310 = $$1306;
        $$6300 = $$1295;
        break L169;
        break;
       }
      case 3:
       {
        $309 = $$0293;
        HEAP32[$309 >> 2] = $296;
        HEAP32[$309 + 4 >> 2] = tempRet0;
        $$10 = $$5;
        $$5310 = $$1306;
        $$6300 = $$1295;
        break L169;
        break;
       }
      default:
       {
        $$10 = $$5;
        $$5310 = $$1306;
        $$6300 = $$1295;
        break L169;
       }
      }
     } while (0);
     $$11 = $$10;
     $$1289 = (($$0293 | 0) != 0 & 1) + $$0288416 | 0;
     $$2285 = (HEAP32[$16 >> 2] | 0) + $$1284 + (HEAP32[$14 >> 2] | 0) - (HEAP32[$17 >> 2] | 0) | 0;
     $$6311 = $$5310;
     $$7301 = $$6300;
     break L8;
    } while (0);
    $58 = $$0273420 + ($54 & 1) | 0;
    ___shlim($0, 0);
    $59 = HEAP32[$14 >> 2] | 0;
    if ($59 >>> 0 < (HEAP32[$15 >> 2] | 0) >>> 0) {
     HEAP32[$14 >> 2] = $59 + 1;
     $68 = HEAPU8[$59 >> 0] | 0;
    } else $68 = ___shgetc($0) | 0;
    if (($68 | 0) != (HEAPU8[$58 >> 0] | 0)) {
     label = 22;
     break L6;
    }
    $$11 = $58;
    $$1289 = $$0288416;
    $$2285 = $$0283419 + 1 | 0;
    $$6311 = $$0305414;
    $$7301 = $$0294415;
   } else {
    $$1274 = $$0273420;
    while (1) {
     $28 = $$1274 + 1 | 0;
     if (!(_isspace(HEAPU8[$28 >> 0] | 0) | 0)) break; else $$1274 = $28;
    }
    ___shlim($0, 0);
    do {
     $33 = HEAP32[$14 >> 2] | 0;
     if ($33 >>> 0 < (HEAP32[$15 >> 2] | 0) >>> 0) {
      HEAP32[$14 >> 2] = $33 + 1;
      $40 = HEAPU8[$33 >> 0] | 0;
     } else $40 = ___shgetc($0) | 0;
    } while ((_isspace($40) | 0) != 0);
    if (!(HEAP32[$15 >> 2] | 0)) $52 = HEAP32[$14 >> 2] | 0; else {
     $46 = (HEAP32[$14 >> 2] | 0) + -1 | 0;
     HEAP32[$14 >> 2] = $46;
     $52 = $46;
    }
    $$11 = $$1274;
    $$1289 = $$0288416;
    $$2285 = (HEAP32[$16 >> 2] | 0) + $$0283419 + $52 - (HEAP32[$17 >> 2] | 0) | 0;
    $$6311 = $$0305414;
    $$7301 = $$0294415;
   } while (0);
   $$0273420 = $$11 + 1 | 0;
   $25 = HEAP8[$$0273420 >> 0] | 0;
   if (!($25 << 24 >> 24)) {
    $$3291 = $$1289;
    break L4;
   } else {
    $$0283419 = $$2285;
    $$0288416 = $$1289;
    $$0294415 = $$7301;
    $$0305414 = $$6311;
   }
  }
  if ((label | 0) == 22) {
   if (HEAP32[$15 >> 2] | 0) HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + -1;
   if (($$0288416 | 0) != 0 | ($68 | 0) > -1) {
    $$3291 = $$0288416;
    break;
   } else {
    $$1271 = 0;
    $$8313 = $$0305414;
    $$9303 = $$0294415;
    label = 155;
   }
  } else if ((label | 0) == 154) if (!$$0288416) {
   $$1271 = $$0270;
   $$8313 = $$7312;
   $$9303 = $$8302;
   label = 155;
  } else {
   $$10304 = $$8302;
   $$2 = $$0270;
   $$2290 = $$0288416;
   $$9314 = $$7312;
  }
  if ((label | 0) == 155) {
   $$10304 = $$9303;
   $$2 = $$1271;
   $$2290 = -1;
   $$9314 = $$8313;
  }
  if (!$$2) $$3291 = $$2290; else {
   _free($$9314);
   _free($$10304);
   $$3291 = $$2290;
  }
 } while (0);
 if ($332 | 0) ___unlockfile($0);
 STACKTOP = sp;
 return $$3291 | 0;
}

function __ZN6google26HandleCommandLineHelpFlagsEv() {
 var $$02431$i$i82 = 0, $$02530$i$i83 = 0, $$02629$i$i84 = 0, $$idx$val = 0, $$idx19$val = 0, $$pn$i = 0, $$sink26$i = 0, $$sink85 = 0, $$sroa$02$010$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $110 = 0, $113 = 0, $119 = 0, $12 = 0, $121 = 0, $122 = 0, $124 = 0, $130 = 0, $134 = 0, $137 = 0, $143 = 0, $146 = 0, $147 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $157 = 0, $158 = 0, $160 = 0, $161 = 0, $174 = 0, $180 = 0, $184 = 0, $185 = 0, $188 = 0, $19 = 0, $190 = 0, $192 = 0, $193 = 0, $2 = 0, $20 = 0, $201 = 0, $204 = 0, $206 = 0, $207 = 0, $210 = 0, $217 = 0, $224 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $236 = 0, $238 = 0, $239 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $251 = 0, $26 = 0, $263 = 0, $267 = 0, $271 = 0, $276 = 0, $281 = 0, $286 = 0, $29 = 0, $297 = 0, $3 = 0, $301 = 0, $303 = 0, $306 = 0, $308 = 0, $310 = 0, $311 = 0, $314 = 0, $315 = 0, $33 = 0, $38 = 0, $39 = 0, $4 = 0, $42 = 0, $46 = 0, $5 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $66 = 0, $7 = 0, $71 = 0, $77 = 0, $84 = 0, $86 = 0, $87 = 0, $9 = 0, $91 = 0, $94 = 0, $98 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer14 = 0, $vararg_buffer19 = 0, $vararg_buffer24 = 0, $vararg_buffer29 = 0, $vararg_buffer34 = 0, $vararg_buffer37 = 0, $vararg_buffer4 = 0, $vararg_buffer41 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $vararg_buffer41 = sp + 144 | 0;
 $vararg_buffer37 = sp + 136 | 0;
 $vararg_buffer34 = sp + 128 | 0;
 $vararg_buffer29 = sp + 112 | 0;
 $vararg_buffer24 = sp + 96 | 0;
 $vararg_buffer19 = sp + 80 | 0;
 $vararg_buffer14 = sp + 64 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer4 = sp + 32 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp;
 $0 = sp + 208 | 0;
 $1 = sp + 196 | 0;
 $2 = sp + 184 | 0;
 $3 = sp + 172 | 0;
 $4 = sp + 160 | 0;
 $5 = sp + 148 | 0;
 $6 = __ZN6google26ProgramInvocationShortNameEv() | 0;
 __ZN6google28HandleCommandLineCompletionsEv();
 HEAP32[$5 >> 2] = 0;
 $7 = $5 + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 114224, 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, 47);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, $6) | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $9 = $0 + 11 | 0;
 $10 = HEAP8[$9 >> 0] | 0;
 $11 = $10 << 24 >> 24 < 0;
 $12 = $0 + 4 | 0;
 $15 = $11 ? HEAP32[$12 >> 2] | 0 : $10 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($1, $11 ? HEAP32[$0 >> 2] | 0 : $0, $15, $15 + 1 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($1, 102189, 1) | 0;
 $19 = HEAP32[$7 >> 2] | 0;
 $20 = $5 + 8 | 0;
 if ($19 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
  HEAP32[$19 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$19 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$19 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 12;
 } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($5, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $25 = HEAP8[$9 >> 0] | 0;
 $26 = $25 << 24 >> 24 < 0;
 $29 = $26 ? HEAP32[$12 >> 2] | 0 : $25 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($1, $26 ? HEAP32[$0 >> 2] | 0 : $0, $29, $29 + 6 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($1, 92831, 6) | 0;
 $33 = HEAP32[$7 >> 2] | 0;
 if ($33 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
  HEAP32[$33 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$33 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$33 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 12;
 } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($5, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $38 = HEAP8[$9 >> 0] | 0;
 $39 = $38 << 24 >> 24 < 0;
 $42 = $39 ? HEAP32[$12 >> 2] | 0 : $38 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($1, $39 ? HEAP32[$0 >> 2] | 0 : $0, $42, $42 + 6 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($1, 92838, 6) | 0;
 $46 = HEAP32[$7 >> 2] | 0;
 if ($46 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
  HEAP32[$46 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$46 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$46 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 12;
 } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($5, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 do if (!(HEAP8[112133] | 0)) {
  if ((HEAP8[112131] | HEAP8[112129]) << 24 >> 24) {
   __ZN6google26ShowUsageWithFlagsRestrictEPKcS1_($6, 114224);
   FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
   break;
  }
  $59 = HEAP32[27107] | 0;
  $60 = $59 + 11 | 0;
  $61 = HEAP8[$60 >> 0] | 0;
  $62 = $61 << 24 >> 24 < 0;
  if ($62) $66 = HEAP32[$59 + 4 >> 2] | 0; else $66 = $61 & 255;
  if ($66 | 0) {
   HEAP8[$0 >> 0] = 47;
   HEAP32[$2 >> 2] = 0;
   HEAP32[$2 + 4 >> 2] = 0;
   HEAP32[$2 + 8 >> 2] = 0;
   $71 = $62 ? HEAP32[$59 + 4 >> 2] | 0 : $61 & 255;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($2, $0, 1, $71 + 1 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($2, (HEAP8[$60 >> 0] | 0) < 0 ? HEAP32[$59 >> 2] | 0 : $59, $71) | 0;
   $77 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($2, 102189) | 0;
   HEAP32[$1 >> 2] = HEAP32[$77 >> 2];
   HEAP32[$1 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
   HEAP32[$1 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
   HEAP32[$77 >> 2] = 0;
   HEAP32[$77 + 4 >> 2] = 0;
   HEAP32[$77 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   __ZN6google26ShowUsageWithFlagsRestrictEPKcS1_($6, (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1);
   FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   break;
  }
  $84 = HEAP32[27108] | 0;
  $86 = HEAP8[$84 + 11 >> 0] | 0;
  $87 = $86 << 24 >> 24 < 0;
  if ($87) $91 = HEAP32[$84 + 4 >> 2] | 0; else $91 = $86 & 255;
  if ($91 | 0) {
   if ($87) $94 = HEAP32[$84 >> 2] | 0; else $94 = $84;
   __ZN6google26ShowUsageWithFlagsRestrictEPKcS1_($6, $94);
   FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
   break;
  }
  if (!(HEAP8[112135] | 0)) {
   if (!(HEAP8[112137] | 0)) {
    if (!(HEAP8[112139] | 0)) break;
    $297 = __ZN6google13VersionStringEv() | 0;
    if (!$297) label = 88; else if (!(HEAP8[$297 >> 0] | 0)) label = 88; else {
     $301 = HEAP32[17382] | 0;
     HEAP32[$vararg_buffer37 >> 2] = __ZN6google26ProgramInvocationShortNameEv() | 0;
     HEAP32[$vararg_buffer37 + 4 >> 2] = $297;
     _fprintf($301, 92472, $vararg_buffer37) | 0;
    }
    if ((label | 0) == 88) {
     $303 = HEAP32[17382] | 0;
     HEAP32[$vararg_buffer41 >> 2] = __ZN6google26ProgramInvocationShortNameEv() | 0;
     _fprintf($303, 93265, $vararg_buffer41) | 0;
    }
    FUNCTION_TABLE_vi[HEAP32[17379] & 255](0);
    break;
   }
   HEAP32[$0 >> 2] = 0;
   $204 = $0 + 4 | 0;
   HEAP32[$204 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZN6google11GetAllFlagsEPNSt3__26vectorINS_19CommandLineFlagInfoENS0_9allocatorIS2_EEEE($0);
   $206 = HEAP32[17382] | 0;
   _fwrite(92324, 22, 1, $206) | 0;
   _fwrite(92347, 11, 1, $206) | 0;
   $207 = _strrchr($6, 47) | 0;
   $210 = $207 | 0 ? $207 + 1 | 0 : $6;
   HEAP32[$2 >> 2] = 0;
   HEAP32[$2 + 4 >> 2] = 0;
   HEAP32[$2 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $210, _strlen($210) | 0);
   __ZN6googleL7XMLTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1, $2);
   HEAP32[$vararg_buffer >> 2] = (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
   _fprintf($206, 92359, $vararg_buffer) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $217 = __ZN6google12ProgramUsageEv() | 0;
   HEAP32[$vararg_buffer >> 2] = 0;
   HEAP32[$vararg_buffer + 4 >> 2] = 0;
   HEAP32[$vararg_buffer + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, $217, _strlen($217) | 0);
   __ZN6googleL7XMLTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3, $vararg_buffer);
   HEAP32[$vararg_buffer1 >> 2] = (HEAP8[$3 + 11 >> 0] | 0) < 0 ? HEAP32[$3 >> 2] | 0 : $3;
   _fprintf($206, 92382, $vararg_buffer1) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
   $224 = HEAP32[$0 >> 2] | 0;
   if (($224 | 0) != (HEAP32[$204 >> 2] | 0)) {
    $227 = $vararg_buffer1 + 11 | 0;
    $228 = $vararg_buffer4 + 11 | 0;
    $229 = $vararg_buffer9 + 11 | 0;
    $230 = $vararg_buffer14 + 11 | 0;
    $231 = $vararg_buffer19 + 11 | 0;
    $232 = $vararg_buffer24 + 11 | 0;
    $233 = $4 + 11 | 0;
    $$sink26$i = $224;
    do {
     $248 = $$sink26$i + 24 | 0;
     $249 = _strlen(90172) | 0;
     $251 = HEAP8[$248 + 11 >> 0] | 0;
     if (($249 | 0) == (($251 << 24 >> 24 < 0 ? HEAP32[$$sink26$i + 28 >> 2] | 0 : $251 & 255) | 0)) {
      if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($248, 0, -1, 90172, $249) | 0) label = 81;
     } else label = 81;
     if ((label | 0) == 81) {
      label = 0;
      HEAP32[$4 >> 2] = 0;
      HEAP32[$4 + 4 >> 2] = 0;
      HEAP32[$4 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 92414, 6);
      __ZN6googleL7XMLTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($vararg_buffer1, $$sink26$i + 60 | 0);
      $263 = (HEAP8[$227 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer1 >> 2] | 0 : $vararg_buffer1;
      HEAP32[$vararg_buffer4 >> 2] = 92421;
      HEAP32[$vararg_buffer4 + 4 >> 2] = $263;
      HEAP32[$vararg_buffer4 + 8 >> 2] = 92421;
      __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($4, 92426, $vararg_buffer4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer1);
      __ZN6googleL7XMLTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($vararg_buffer4, $$sink26$i);
      $267 = (HEAP8[$228 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer4 >> 2] | 0 : $vararg_buffer4;
      HEAP32[$vararg_buffer9 >> 2] = 92438;
      HEAP32[$vararg_buffer9 + 4 >> 2] = $267;
      HEAP32[$vararg_buffer9 + 8 >> 2] = 92438;
      __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($4, 92426, $vararg_buffer9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer4);
      __ZN6googleL7XMLTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($vararg_buffer9, $248);
      $271 = (HEAP8[$229 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer9 >> 2] | 0 : $vararg_buffer9;
      HEAP32[$vararg_buffer14 >> 2] = 92443;
      HEAP32[$vararg_buffer14 + 4 >> 2] = $271;
      HEAP32[$vararg_buffer14 + 8 >> 2] = 92443;
      __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($4, 92426, $vararg_buffer14);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer9);
      __ZN6googleL7XMLTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($vararg_buffer14, $$sink26$i + 48 | 0);
      $276 = (HEAP8[$230 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer14 >> 2] | 0 : $vararg_buffer14;
      HEAP32[$vararg_buffer19 >> 2] = 92157;
      HEAP32[$vararg_buffer19 + 4 >> 2] = $276;
      HEAP32[$vararg_buffer19 + 8 >> 2] = 92157;
      __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($4, 92426, $vararg_buffer19);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer14);
      __ZN6googleL7XMLTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($vararg_buffer19, $$sink26$i + 36 | 0);
      $281 = (HEAP8[$231 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer19 >> 2] | 0 : $vararg_buffer19;
      HEAP32[$vararg_buffer24 >> 2] = 92451;
      HEAP32[$vararg_buffer24 + 4 >> 2] = $281;
      HEAP32[$vararg_buffer24 + 8 >> 2] = 92451;
      __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($4, 92426, $vararg_buffer24);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer19);
      __ZN6googleL7XMLTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($vararg_buffer24, $$sink26$i + 12 | 0);
      $286 = (HEAP8[$232 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer24 >> 2] | 0 : $vararg_buffer24;
      HEAP32[$vararg_buffer29 >> 2] = 92459;
      HEAP32[$vararg_buffer29 + 4 >> 2] = $286;
      HEAP32[$vararg_buffer29 + 8 >> 2] = 92459;
      __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($4, 92426, $vararg_buffer29);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer24);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($4, 92464) | 0;
      HEAP32[$vararg_buffer34 >> 2] = (HEAP8[$233 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4;
      _fprintf($206, 93265, $vararg_buffer34) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     }
     $$sink26$i = $$sink26$i + 80 | 0;
    } while (($$sink26$i | 0) != (HEAP32[$204 >> 2] | 0));
   }
   _fwrite(92401, 12, 1, $206) | 0;
   $234 = HEAP32[$0 >> 2] | 0;
   if ($234 | 0) {
    $236 = HEAP32[$204 >> 2] | 0;
    if (($236 | 0) == ($234 | 0)) $247 = $234; else {
     $239 = $236;
     do {
      $238 = $239 + -80 | 0;
      HEAP32[$204 >> 2] = $238;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($239 + -20 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($239 + -32 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($239 + -44 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($239 + -56 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($239 + -68 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($238);
      $239 = HEAP32[$204 >> 2] | 0;
     } while (($239 | 0) != ($234 | 0));
     $247 = HEAP32[$0 >> 2] | 0;
    }
    __ZdlPv($247);
   }
   FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
   break;
  }
  HEAP32[$0 >> 2] = 0;
  $98 = $0 + 4 | 0;
  HEAP32[$98 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZN6google11GetAllFlagsEPNSt3__26vectorINS_19CommandLineFlagInfoENS0_9allocatorIS2_EEEE($0);
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  $100 = HEAP32[$0 >> 2] | 0;
  $101 = HEAP32[$98 >> 2] | 0;
  if (($100 | 0) == ($101 | 0)) {
   $107 = 0;
   $110 = 0;
  } else {
   $103 = $2 + 11 | 0;
   $104 = $2 + 4 | 0;
   $105 = $1 + 11 | 0;
   $106 = $1 + 4 | 0;
   $$sink85 = $100;
   $315 = $101;
   while (1) {
    $113 = $$sink85 + 60 | 0;
    $$idx$val = HEAP32[$5 >> 2] | 0;
    $$idx19$val = HEAP32[$7 >> 2] | 0;
    L71 : do if (($$idx$val | 0) == ($$idx19$val | 0)) $184 = $315; else {
     $119 = (HEAP8[$113 + 11 >> 0] | 0) < 0 ? HEAP32[$113 >> 2] | 0 : $113;
     $$sroa$02$010$i = $$idx$val;
     L73 : while (1) {
      $121 = HEAP8[$$sroa$02$010$i + 11 >> 0] | 0;
      $122 = $121 << 24 >> 24 < 0;
      if ($122) $124 = HEAP32[$$sroa$02$010$i >> 2] | 0; else $124 = $$sroa$02$010$i;
      if (_strstr($119, $124) | 0) break;
      if ($122) $130 = HEAP32[$$sroa$02$010$i + 4 >> 2] | 0; else $130 = $121 & 255;
      do if ($130 | 0) {
       if ($122) $134 = HEAP32[$$sroa$02$010$i >> 2] | 0; else $134 = $$sroa$02$010$i;
       if ((HEAP8[$134 >> 0] | 0) != 47) break;
       if ($122) $$pn$i = HEAP32[$$sroa$02$010$i >> 2] | 0; else $$pn$i = $$sroa$02$010$i;
       $137 = $$pn$i + 1 | 0;
       if (!(_strncmp($119, $137, _strlen($137) | 0) | 0)) break L73;
      } while (0);
      $$sroa$02$010$i = $$sroa$02$010$i + 12 | 0;
      if (($$sroa$02$010$i | 0) == ($$idx19$val | 0)) {
       $184 = $315;
       break L71;
      }
     }
     $143 = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($113, 47, -1) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($3, $113, 0, ($143 | 0) == -1 ? 0 : $143, $113);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($3, 47);
     HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     HEAP32[$3 >> 2] = 0;
     HEAP32[$3 + 4 >> 2] = 0;
     HEAP32[$3 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $146 = HEAP8[$103 >> 0] | 0;
     $147 = $146 << 24 >> 24 < 0;
     $149 = $146 & 255;
     $150 = $147 ? HEAP32[$104 >> 2] | 0 : $149;
     $151 = HEAP8[$105 >> 0] | 0;
     $152 = $151 << 24 >> 24 < 0;
     $157 = HEAP32[$2 >> 2] | 0;
     L97 : do if (($150 | 0) == (($152 ? HEAP32[$106 >> 2] | 0 : $151 & 255) | 0)) {
      $158 = $147 ? $157 : $2;
      $160 = $152 ? HEAP32[$1 >> 2] | 0 : $1;
      $161 = ($150 | 0) == 0;
      if ($147) {
       if ($161) break;
       if (!(_memcmp($158, $160, $150) | 0)) break; else {
        label = 59;
        break;
       }
      }
      if (!$161) {
       if (($157 & 255) << 24 >> 24 == (HEAP8[$160 >> 0] | 0)) {
        $$02431$i$i82 = $149;
        $$02530$i$i83 = $160;
        $$02629$i$i84 = $2;
       } else {
        label = 59;
        break;
       }
       while (1) {
        $$02431$i$i82 = $$02431$i$i82 + -1 | 0;
        $$02629$i$i84 = $$02629$i$i84 + 1 | 0;
        if (!$$02431$i$i82) break L97;
        $$02530$i$i83 = $$02530$i$i83 + 1 | 0;
        if ((HEAP8[$$02629$i$i84 >> 0] | 0) != (HEAP8[$$02530$i$i83 >> 0] | 0)) {
         label = 59;
         break;
        }
       }
      }
     } else label = 59; while (0);
     if ((label | 0) == 59) {
      label = 0;
      __ZN6google26ShowUsageWithFlagsRestrictEPKcS1_($6, $147 ? $157 : $2);
      $174 = HEAP8[$105 >> 0] | 0;
      if (($174 << 24 >> 24 < 0 ? HEAP32[$106 >> 2] | 0 : $174 & 255) | 0) {
       $180 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(109464, 92255, 33) | 0;
       __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($180, $6, _strlen($6) | 0) | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($1, $2) | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     $184 = HEAP32[$98 >> 2] | 0;
    } while (0);
    $$sink85 = $$sink85 + 80 | 0;
    if (($$sink85 | 0) == ($184 | 0)) break; else $315 = $184;
   }
   $107 = HEAP8[$105 >> 0] | 0;
   $110 = HEAP32[$106 >> 2] | 0;
  }
  if (!(($107 << 24 >> 24 < 0 ? $110 : $107 & 255) | 0)) {
   $185 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(109464, 92289, 34) | 0;
   __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($185, $6, _strlen($6) | 0) | 0;
  }
  FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $188 = HEAP32[$0 >> 2] | 0;
  if ($188 | 0) {
   $190 = HEAP32[$98 >> 2] | 0;
   if (($190 | 0) == ($188 | 0)) $201 = $188; else {
    $193 = $190;
    do {
     $192 = $193 + -80 | 0;
     HEAP32[$98 >> 2] = $192;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193 + -20 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193 + -32 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193 + -44 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193 + -56 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193 + -68 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($192);
     $193 = HEAP32[$98 >> 2] | 0;
    } while (($193 | 0) != ($188 | 0));
    $201 = HEAP32[$0 >> 2] | 0;
   }
   __ZdlPv($201);
  }
 } else {
  __ZN6googleL26ShowUsageWithFlagsMatchingEPKcRKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE($6, $5);
  FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
 } while (0);
 $306 = HEAP32[$5 >> 2] | 0;
 if (!$306) {
  STACKTOP = sp;
  return;
 }
 $308 = HEAP32[$7 >> 2] | 0;
 if (($308 | 0) == ($306 | 0)) $314 = $306; else {
  $311 = $308;
  do {
   $310 = $311 + -12 | 0;
   HEAP32[$7 >> 2] = $310;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($310);
   $311 = HEAP32[$7 >> 2] | 0;
  } while (($311 | 0) != ($306 | 0));
  $314 = HEAP32[$5 >> 2] | 0;
 }
 __ZdlPv($314);
 STACKTOP = sp;
 return;
}

function __ZN10CGameSetup15LoadSkirmishAIsERK9TdfParserRN6emilib7HashSetINSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEN6spring11synced_hashISB_EENS3_14HashSetEqualToISB_EEEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa$i = 0, $$035694 = 0, $$04$i = 0, $$0692 = 0, $$sroa$6135$0690 = 0, $10 = 0, $106 = 0, $107 = 0, $11 = 0, $110 = 0, $119 = 0, $12 = 0, $122 = 0, $123 = 0, $13 = 0, $131 = 0, $132 = 0, $133 = 0, $136 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $145 = 0, $15 = 0, $150 = 0, $152 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $175 = 0, $176 = 0, $179 = 0, $18 = 0, $183 = 0, $185 = 0, $187 = 0, $188 = 0, $19 = 0, $191 = 0, $199 = 0, $20 = 0, $201 = 0, $202 = 0, $208 = 0, $21 = 0, $212 = 0, $214 = 0, $218 = 0, $22 = 0, $220 = 0, $227 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $73 = 0, $8 = 0, $82 = 0, $83 = 0, $86 = 0, $9 = 0, $95 = 0, $96 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 240 | 0;
 $4 = sp + 224 | 0;
 $5 = sp + 116 | 0;
 $6 = sp + 104 | 0;
 $7 = sp + 92 | 0;
 $8 = sp + 80 | 0;
 $9 = sp + 68 | 0;
 $10 = sp + 56 | 0;
 $11 = sp + 44 | 0;
 $12 = sp + 32 | 0;
 $13 = sp + 20 | 0;
 $14 = $7 + 11 | 0;
 $15 = $4 + 11 | 0;
 $16 = $4 + 4 | 0;
 $17 = $5 + 4 | 0;
 $18 = $5 + 8 | 0;
 $19 = $5 + 20 | 0;
 $20 = $5 + 24 | 0;
 $21 = $5 + 28 | 0;
 $22 = $5 + 68 | 0;
 $23 = $5 + 84 | 0;
 $24 = $5 + 88 | 0;
 $25 = $5 + 96 | 0;
 $26 = $5 + 100 | 0;
 $27 = $5 + 104 | 0;
 $28 = $8 + 11 | 0;
 $29 = $9 + 11 | 0;
 $30 = $21 + 11 | 0;
 $31 = $5 + 32 | 0;
 $32 = $5 + 40 | 0;
 $33 = $32 + 11 | 0;
 $34 = $5 + 44 | 0;
 $35 = $5 + 64 | 0;
 $36 = $5 + 76 | 0;
 $37 = $5 + 72 | 0;
 $38 = $5 + 56 | 0;
 $39 = $5 + 60 | 0;
 $40 = $5 + 52 | 0;
 $41 = $2 + 12 | 0;
 $42 = $2 + 16 | 0;
 $43 = $2 + 4 | 0;
 $44 = $0 + 252 | 0;
 $45 = $0 + 256 | 0;
 $46 = $0 + 248 | 0;
 $47 = $2 + 8 | 0;
 $48 = $6 + 11 | 0;
 $49 = $6 + 4 | 0;
 $50 = $13 + 11 | 0;
 $51 = $12 + 11 | 0;
 $52 = $12 + 4 | 0;
 $53 = $7 + 11 | 0;
 $54 = $7 + 4 | 0;
 $$035694 = 0;
 while (1) {
  HEAP32[$7 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($7, 81707, 2);
  $58 = (HEAP8[$14 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7;
  HEAP32[$vararg_buffer >> 2] = $$035694;
  _snprintf($3, 64, $58, $vararg_buffer) | 0;
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, $3, _strlen($3) | 0);
  $60 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($6, 0, 82206) | 0;
  HEAP32[$5 >> 2] = HEAP32[$60 >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$60 + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$60 + 8 >> 2];
  HEAP32[$60 >> 2] = 0;
  HEAP32[$60 + 4 >> 2] = 0;
  HEAP32[$60 + 8 >> 2] = 0;
  $61 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($5, 82059) | 0;
  HEAP32[$4 >> 2] = HEAP32[$61 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$61 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$61 + 8 >> 2];
  HEAP32[$61 >> 2] = 0;
  HEAP32[$61 + 4 >> 2] = 0;
  HEAP32[$61 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $62 = HEAP8[$15 >> 0] | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($vararg_buffer, $4, 0, ($62 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $62 & 255) + -1 | 0, $4);
  $68 = __ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1 | 0, $vararg_buffer | 0) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
  if ($68) {
   HEAP32[$5 >> 2] = 68116;
   HEAP32[$17 >> 2] = -1;
   HEAP32[$18 >> 2] = 0;
   HEAP32[$18 + 4 >> 2] = 0;
   HEAP32[$18 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($18, 82741, 7);
   HEAP32[$19 >> 2] = -1;
   HEAP32[$20 >> 2] = 10;
   HEAP32[$5 >> 2] = 68132;
   HEAP32[$22 >> 2] = 0;
   HEAP32[$22 + 4 >> 2] = 0;
   HEAP32[$22 + 8 >> 2] = 0;
   HEAP32[$22 + 12 >> 2] = 0;
   dest = $21;
   stop = dest + 36 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$23 >> 2] = -1;
   HEAP32[$24 >> 2] = 0;
   HEAP32[$25 >> 2] = 0;
   HEAP32[$26 >> 2] = 0;
   HEAP32[$27 >> 2] = 0;
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 82214, 2);
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   $69 = HEAP8[$15 >> 0] | 0;
   $70 = $69 << 24 >> 24 < 0;
   $73 = $70 ? HEAP32[$16 >> 2] | 0 : $69 & 255;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($6, $70 ? HEAP32[$4 >> 2] | 0 : $4, $73, $73 + 4 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($6, 82217, 4) | 0;
   __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($8 | 0, $1 | 0, $3 | 0, $6 | 0);
   HEAP32[$17 >> 2] = _atoi((HEAP8[$28 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 82214, 2);
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   $82 = HEAP8[$15 >> 0] | 0;
   $83 = $82 << 24 >> 24 < 0;
   $86 = $83 ? HEAP32[$16 >> 2] | 0 : $82 & 255;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($6, $83 ? HEAP32[$4 >> 2] | 0 : $4, $86, $86 + 4 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($6, 82222, 4) | 0;
   __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($9 | 0, $1 | 0, $3 | 0, $6 | 0);
   HEAP32[$19 >> 2] = _atoi((HEAP8[$29 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, 114224, 0);
   HEAP32[$7 >> 2] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
   HEAP32[$7 + 8 >> 2] = 0;
   $95 = HEAP8[$15 >> 0] | 0;
   $96 = $95 << 24 >> 24 < 0;
   $99 = $96 ? HEAP32[$16 >> 2] | 0 : $95 & 255;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($7, $96 ? HEAP32[$4 >> 2] | 0 : $4, $99, $99 + 9 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($7, 82227, 9) | 0;
   __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($3 | 0, $1 | 0, $6 | 0, $7 | 0);
   if ((HEAP8[$30 >> 0] | 0) < 0) {
    HEAP8[HEAP32[$21 >> 2] >> 0] = 0;
    HEAP32[$31 >> 2] = 0;
   } else {
    HEAP8[$21 >> 0] = 0;
    HEAP8[$30 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($21, 0);
   HEAP32[$21 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$21 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$21 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, 114224, 0);
   HEAP32[$7 >> 2] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
   HEAP32[$7 + 8 >> 2] = 0;
   $106 = HEAP8[$15 >> 0] | 0;
   $107 = $106 << 24 >> 24 < 0;
   $110 = $107 ? HEAP32[$16 >> 2] | 0 : $106 & 255;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($7, $107 ? HEAP32[$4 >> 2] | 0 : $4, $110, $110 + 7 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($7, 82237, 7) | 0;
   __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($3 | 0, $1 | 0, $6 | 0, $7 | 0);
   if ((HEAP8[$33 >> 0] | 0) < 0) {
    HEAP8[HEAP32[$32 >> 2] >> 0] = 0;
    HEAP32[$34 >> 2] = 0;
   } else {
    HEAP8[$32 >> 0] = 0;
    HEAP8[$33 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($32, 0);
   HEAP32[$32 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$32 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$32 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   if ((HEAP32[$17 >> 2] | 0) == -1) {
    label = 11;
    break;
   }
   if ((HEAP32[$19 >> 2] | 0) == -1) {
    label = 13;
    break;
   }
   $123 = HEAP8[$30 >> 0] | 0;
   if (!(($123 << 24 >> 24 < 0 ? HEAP32[$31 >> 2] | 0 : $123 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($21, 0, -1, 114224, 0) | 0)) {
    label = 16;
    break;
   };
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   $132 = HEAP8[$15 >> 0] | 0;
   $133 = $132 << 24 >> 24 < 0;
   $136 = $133 ? HEAP32[$16 >> 2] | 0 : $132 & 255;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($3, $133 ? HEAP32[$4 >> 2] | 0 : $4, $136, $136 + 7 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($3, 82358, 7) | 0;
   $140 = __ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1 | 0, $3 | 0) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   if ($140) {
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    $141 = HEAP8[$15 >> 0] | 0;
    $142 = $141 << 24 >> 24 < 0;
    $145 = $142 ? HEAP32[$16 >> 2] | 0 : $141 & 255;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($3, $142 ? HEAP32[$4 >> 2] | 0 : $4, $145, $145 + 7 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($3, 82358, 7) | 0;
    __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEEaSERKSD_($35, __ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1 | 0, $3 | 0) | 0) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $150 = HEAP32[$36 >> 2] | 0;
    L20 : do if (!$150) $$0$lcssa$i = 0; else {
     $152 = HEAP32[$22 >> 2] | 0;
     $$04$i = 0;
     while (1) {
      if ((HEAP8[$152 + $$04$i >> 0] | 0) == 2) {
       $$0$lcssa$i = $$04$i;
       break L20;
      }
      $156 = $$04$i + 1 | 0;
      if ($156 >>> 0 < $150 >>> 0) $$04$i = $156; else {
       $$0$lcssa$i = $156;
       break;
      }
     }
    } while (0);
    if (($$0$lcssa$i | 0) != ($150 | 0)) {
     $$sroa$6135$0690 = $$0$lcssa$i;
     while (1) {
      $162 = (HEAP32[$37 >> 2] | 0) + ($$sroa$6135$0690 * 24 | 0) | 0;
      $163 = HEAP32[$38 >> 2] | 0;
      if (($163 | 0) == (HEAP32[$39 >> 2] | 0)) __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_($40, $162); else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($163, $162);
       HEAP32[$38 >> 2] = (HEAP32[$38 >> 2] | 0) + 12;
      }
      $168 = HEAP32[$36 >> 2] | 0;
      $169 = HEAP32[$22 >> 2] | 0;
      $170 = $$sroa$6135$0690;
      do {
       $170 = $170 + 1 | 0;
       if ($170 >>> 0 >= $168 >>> 0) break;
      } while ((HEAP8[$169 + $170 >> 0] | 0) != 2);
      if (($170 | 0) == ($150 | 0)) break; else $$sroa$6135$0690 = $170;
     }
    }
   };
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   $175 = HEAP8[$15 >> 0] | 0;
   $176 = $175 << 24 >> 24 < 0;
   $179 = $176 ? HEAP32[$16 >> 2] | 0 : $175 & 255;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($3, $176 ? HEAP32[$4 >> 2] | 0 : $4, $179, $179 + 4 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($3, 82366, 4) | 0;
   __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($6 | 0, $1 | 0, $21 | 0, $3 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($7, $6);
   $183 = __ZNK6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE18find_filled_bucketERKS7_($2, $7) | 0;
   $185 = HEAP32[$41 >> 2] | 0;
   if (((($183 | 0) == -1 ? $185 : $183) | 0) != ($185 | 0)) {
    $$0692 = 0;
    while (1) {
     HEAP32[$11 >> 2] = 0;
     HEAP32[$11 + 4 >> 2] = 0;
     HEAP32[$11 + 8 >> 2] = 0;
     $187 = HEAP8[$48 >> 0] | 0;
     $188 = $187 << 24 >> 24 < 0;
     $191 = $188 ? HEAP32[$49 >> 2] | 0 : $187 & 255;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($11, $188 ? HEAP32[$6 >> 2] | 0 : $6, $191, $191 + 1 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($11, 82371, 1) | 0;
     HEAP32[$13 >> 2] = 0;
     HEAP32[$13 + 4 >> 2] = 0;
     HEAP32[$13 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($13, 81707, 2);
     $199 = (HEAP8[$50 >> 0] | 0) < 0 ? HEAP32[$13 >> 2] | 0 : $13;
     HEAP32[$vararg_buffer1 >> 2] = $$0692;
     _snprintf($3, 64, $199, $vararg_buffer1) | 0;
     HEAP32[$12 >> 2] = 0;
     HEAP32[$12 + 4 >> 2] = 0;
     HEAP32[$12 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($12, $3, _strlen($3) | 0);
     $201 = HEAP8[$51 >> 0] | 0;
     $202 = $201 << 24 >> 24 < 0;
     $208 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($11, $202 ? HEAP32[$12 >> 2] | 0 : $12, $202 ? HEAP32[$52 >> 2] | 0 : $201 & 255) | 0;
     HEAP32[$10 >> 2] = HEAP32[$208 >> 2];
     HEAP32[$10 + 4 >> 2] = HEAP32[$208 + 4 >> 2];
     HEAP32[$10 + 8 >> 2] = HEAP32[$208 + 8 >> 2];
     HEAP32[$208 >> 2] = 0;
     HEAP32[$208 + 4 >> 2] = 0;
     HEAP32[$208 + 8 >> 2] = 0;
     if ((HEAP8[$53 >> 0] | 0) < 0) {
      HEAP8[HEAP32[$7 >> 2] >> 0] = 0;
      HEAP32[$54 >> 2] = 0;
     } else {
      HEAP8[$7 >> 0] = 0;
      HEAP8[$53 >> 0] = 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
     HEAP32[$7 >> 2] = HEAP32[$10 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
     HEAP32[$10 >> 2] = 0;
     HEAP32[$10 + 4 >> 2] = 0;
     HEAP32[$10 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
     $212 = __ZNK6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE18find_filled_bucketERKS7_($2, $7) | 0;
     $214 = HEAP32[$41 >> 2] | 0;
     if (((($212 | 0) == -1 ? $214 : $212) | 0) == ($214 | 0)) break; else $$0692 = $$0692 + 1 | 0;
    }
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($18, $7) | 0;
   __ZN6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE7reserveEj($2, (HEAP32[$42 >> 2] | 0) + 1 | 0);
   $218 = __ZN6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE16find_or_allocateERKS7_($2, $18) | 0;
   $220 = (HEAP32[$43 >> 2] | 0) + $218 | 0;
   if ((HEAP8[$220 >> 0] | 0) != 2) {
    HEAP8[$220 >> 0] = 2;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_((HEAP32[$47 >> 2] | 0) + ($218 * 12 | 0) | 0, $18);
    HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + 1;
   }
   $227 = HEAP32[$44 >> 2] | 0;
   if (($227 | 0) == (HEAP32[$45 >> 2] | 0)) __ZNSt3__26vectorI14SkirmishAIDataNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($46, $5); else {
    __ZN14SkirmishAIDataC2ERKS_($227, $5);
    HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 108;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   __ZN14SkirmishAIDataD2Ev($5);
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $$035694 = $$035694 + 1 | 0;
  if (($$035694 | 0) >= 251) {
   label = 2;
   break;
  }
 }
 if ((label | 0) == 2) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 11) {
  $119 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 82245, 35);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($119, $vararg_buffer);
  HEAP32[$119 >> 2] = 68080;
  ___cxa_throw($119 | 0, 192, 31);
 } else if ((label | 0) == 13) {
  $122 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 82281, 35);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($122, $vararg_buffer);
  HEAP32[$122 >> 2] = 68080;
  ___cxa_throw($122 | 0, 192, 31);
 } else if ((label | 0) == 16) {
  $131 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 82317, 40);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($131, $vararg_buffer);
  HEAP32[$131 >> 2] = 68080;
  ___cxa_throw($131 | 0, 192, 31);
 }
}

function __ZL5matchP10MatchStatePKcS2_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$$i = 0, $$$i$i = 0, $$$i$i$i = 0, $$$i104 = 0, $$$i96 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i115 = 0, $$0$i$i117 = 0, $$0$i106 = 0, $$0$i92 = 0, $$0$in$i$i = 0, $$014$i$ph = 0, $$014$i202 = 0, $$015$i = 0, $$015$i110 = 0, $$022$be$i = 0, $$022$i = 0, $$022$i102 = 0, $$02227$i = 0, $$023$be$i = 0, $$023$be$i$i = 0, $$023$be$i$i$i = 0, $$023$be$i100 = 0, $$02325$i = 0, $$02325$i$i = 0, $$02325$i$i$i = 0, $$02325$i98 = 0, $$02426$i = 0, $$02426$i$phi = 0, $$08$i$i = 0, $$081$ph = 0, $$083 = 0, $$083$ph = 0, $$083$ph134 = 0, $$1$i = 0, $$1$i109 = 0, $$24$i$i = 0, $$24$i$i$i = 0, $$24$i97 = 0, $$4 = 0, $$pre$phi275Z2D = 0, $$pre272 = 0, $10 = 0, $106 = 0, $107 = 0, $108 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $118 = 0, $123 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $137 = 0, $138 = 0, $14 = 0, $143 = 0, $152 = 0, $153 = 0, $158 = 0, $161 = 0, $166 = 0, $167 = 0, $174 = 0, $187 = 0, $190 = 0, $191 = 0, $20 = 0, $201 = 0, $202 = 0, $203 = 0, $208 = 0, $210 = 0, $211 = 0, $212 = 0, $214 = 0, $215 = 0, $217 = 0, $218 = 0, $223 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $245 = 0, $246 = 0, $248 = 0, $249 = 0, $255 = 0, $257 = 0, $258 = 0, $259 = 0, $261 = 0, $262 = 0, $264 = 0, $265 = 0, $270 = 0, $282 = 0, $284 = 0, $3 = 0, $30 = 0, $34 = 0, $4 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $6 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $77 = 0, $8 = 0, $81 = 0, $83 = 0, $91 = 0, $94 = 0, $95 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer17 = sp + 72 | 0;
 $vararg_buffer15 = sp + 64 | 0;
 $vararg_buffer13 = sp + 56 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = $0 + 4 | 0;
 $4 = $0 + 8 | 0;
 $5 = $0 + 12 | 0;
 $$081$ph = $1;
 $$083$ph = $2;
 L1 : while (1) {
  $6 = $$081$ph + 1 | 0;
  $7 = $$081$ph + -1 | 0;
  $$083$ph134 = $$083$ph;
  L3 : while (1) {
   $$083 = $$083$ph134;
   L5 : while (1) {
    $8 = HEAP8[$$083 >> 0] | 0;
    switch ($8 << 24 >> 24 | 0) {
    case 40:
     {
      label = 5;
      break L1;
      break;
     }
    case 41:
     {
      label = 14;
      break L1;
      break;
     }
    case 0:
     {
      $$4 = $$081$ph;
      label = 125;
      break L1;
      break;
     }
    case 37:
     {
      $49 = $$083 + 1 | 0;
      $50 = HEAP8[$49 >> 0] | 0;
      switch ($50 << 24 >> 24 | 0) {
      case 98:
       {
        label = 21;
        break L3;
        break;
       }
      case 102:
       {
        break L5;
        break;
       }
      default:
       {}
      }
      $152 = $50 & 255;
      if (($152 + -48 | 0) >>> 0 < 10) {
       label = 67;
       break L3;
      }
      if (!(HEAP8[$49 >> 0] | 0)) __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88569, $vararg_buffer15) | 0;
      $$015$i = $$083 + 2 | 0;
      $$pre$phi275Z2D = $49;
      break;
     }
    case 36:
     {
      $174 = $$083 + 1 | 0;
      if (!(HEAP8[$174 >> 0] | 0)) {
       label = 75;
       break L1;
      } else {
       $$015$i = $174;
       $$pre$phi275Z2D = $174;
      }
      break;
     }
    default:
     {
      $$pre272 = $$083 + 1 | 0;
      if ($8 << 24 >> 24 == 91) {
       $$$i = (HEAP8[$$pre272 >> 0] | 0) == 94 ? $$083 + 2 | 0 : $$pre272;
       $$0$i92 = $$$i;
       $187 = HEAP8[$$$i >> 0] | 0;
       while (1) {
        if (!($187 << 24 >> 24)) {
         __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88604, $vararg_buffer17) | 0;
         $191 = HEAP8[$$0$i92 >> 0] | 0;
        } else $191 = $187;
        $190 = $$0$i92 + 1 | 0;
        if ($191 << 24 >> 24 == 37) $$1$i = (HEAP8[$190 >> 0] | 0) == 0 ? $190 : $$0$i92 + 2 | 0; else $$1$i = $190;
        $187 = HEAP8[$$1$i >> 0] | 0;
        if ($187 << 24 >> 24 == 93) break; else $$0$i92 = $$1$i;
       }
       $$015$i = $$1$i + 1 | 0;
       $$pre$phi275Z2D = $$pre272;
      } else {
       $$015$i = $$pre272;
       $$pre$phi275Z2D = $$pre272;
      }
     }
    }
    if ($$081$ph >>> 0 < (HEAP32[$3 >> 2] | 0) >>> 0) {
     $201 = HEAP8[$$081$ph >> 0] | 0;
     $202 = $201 & 255;
     $203 = HEAP8[$$083 >> 0] | 0;
     L29 : do switch ($203 << 24 >> 24 | 0) {
     case 46:
      {
       $$0$i = 1;
       break;
      }
     case 37:
      {
       $$0$i = __ZL11match_classii($202, HEAPU8[$$pre$phi275Z2D >> 0] | 0) | 0;
       break;
      }
     case 91:
      {
       $208 = $$015$i + -1 | 0;
       $210 = (HEAP8[$$pre$phi275Z2D >> 0] | 0) == 94;
       $$$i$i = $210 ? $$pre$phi275Z2D : $$083;
       $211 = $210 & 1;
       $$24$i$i = $211 ^ 1;
       $212 = $$$i$i + 1 | 0;
       if ($212 >>> 0 < $208 >>> 0) {
        $$02325$i$i = $$$i$i;
        $215 = $212;
        while (1) {
         $214 = HEAP8[$215 >> 0] | 0;
         $217 = $$02325$i$i + 2 | 0;
         $218 = HEAP8[$217 >> 0] | 0;
         do if ($214 << 24 >> 24 == 37) if (!(__ZL11match_classii($202, $218 & 255) | 0)) $$023$be$i$i = $217; else {
          $$0$i = $$24$i$i;
          break L29;
         } else {
          if ($218 << 24 >> 24 == 45) {
           $223 = $$02325$i$i + 3 | 0;
           if ($223 >>> 0 < $208 >>> 0) {
            if (($214 & 255) > ($201 & 255)) {
             $$023$be$i$i = $223;
             break;
            }
            if ((HEAPU8[$223 >> 0] | 0) < ($201 & 255)) {
             $$023$be$i$i = $223;
             break;
            } else {
             $$0$i = $$24$i$i;
             break L29;
            }
           }
          }
          if ($214 << 24 >> 24 == $201 << 24 >> 24) {
           $$0$i = $$24$i$i;
           break L29;
          } else $$023$be$i$i = $215;
         } while (0);
         $215 = $$023$be$i$i + 1 | 0;
         if ($215 >>> 0 >= $208 >>> 0) {
          $$0$i = $211;
          break;
         } else $$02325$i$i = $$023$be$i$i;
        }
       } else $$0$i = $211;
       break;
      }
     default:
      $$0$i = $203 << 24 >> 24 == $201 << 24 >> 24 & 1;
     } while (0);
     $284 = ($$0$i | 0) != 0;
    } else $284 = 0;
    switch (HEAP8[$$015$i >> 0] | 0) {
    case 42:
     {
      label = 105;
      break L1;
      break;
     }
    case 43:
     {
      label = 106;
      break L1;
      break;
     }
    case 45:
     {
      label = 102;
      break L1;
      break;
     }
    case 63:
     break;
    default:
     {
      label = 124;
      break L3;
     }
    }
    $238 = $$015$i + 1 | 0;
    if (!$284) {
     $$083 = $238;
     continue;
    }
    $239 = __ZL5matchP10MatchStatePKcS2_($0, $6, $238) | 0;
    if (!$239) $$083 = $238; else {
     $$4 = $239;
     label = 125;
     break L1;
    }
   }
   $77 = $$083 + 2 | 0;
   if ((HEAP8[$77 >> 0] | 0) == 91) $83 = 91; else {
    __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88534, $vararg_buffer7) | 0;
    $83 = HEAP8[$77 >> 0] | 0;
   }
   $81 = $$083 + 3 | 0;
   switch ($83 << 24 >> 24 | 0) {
   case 37:
    {
     if (!(HEAP8[$81 >> 0] | 0)) __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88569, $vararg_buffer9) | 0;
     $$015$i110 = $$083 + 4 | 0;
     break;
    }
   case 91:
    {
     $$$i104 = (HEAP8[$81 >> 0] | 0) == 94 ? $$083 + 4 | 0 : $81;
     $$0$i106 = $$$i104;
     $91 = HEAP8[$$$i104 >> 0] | 0;
     while (1) {
      if (!($91 << 24 >> 24)) {
       __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88604, $vararg_buffer11) | 0;
       $95 = HEAP8[$$0$i106 >> 0] | 0;
      } else $95 = $91;
      $94 = $$0$i106 + 1 | 0;
      if ($95 << 24 >> 24 == 37) $$1$i109 = (HEAP8[$94 >> 0] | 0) == 0 ? $94 : $$0$i106 + 2 | 0; else $$1$i109 = $94;
      $91 = HEAP8[$$1$i109 >> 0] | 0;
      if ($91 << 24 >> 24 == 93) break; else $$0$i106 = $$1$i109;
     }
     $$015$i110 = $$1$i109 + 1 | 0;
     break;
    }
   default:
    $$015$i110 = $81;
   }
   if (($$081$ph | 0) == (HEAP32[$0 >> 2] | 0)) $107 = 0; else $107 = HEAP8[$7 >> 0] | 0;
   $106 = $107 & 255;
   $108 = $$015$i110 + -1 | 0;
   $110 = (HEAP8[$81 >> 0] | 0) == 94;
   $$$i96 = $110 ? $81 : $77;
   $111 = $110 & 1;
   $$24$i97 = $111 ^ 1;
   $112 = $$$i96 + 1 | 0;
   $113 = $112 >>> 0 < $108 >>> 0;
   L71 : do if ($113) {
    $$02325$i98 = $$$i96;
    $115 = $112;
    while (1) {
     $114 = HEAP8[$115 >> 0] | 0;
     $117 = $$02325$i98 + 2 | 0;
     $118 = HEAP8[$117 >> 0] | 0;
     do if ($114 << 24 >> 24 == 37) if (!(__ZL11match_classii($106, $118 & 255) | 0)) $$023$be$i100 = $117; else {
      $$022$i102 = $$24$i97;
      break L71;
     } else {
      if ($118 << 24 >> 24 == 45) {
       $123 = $$02325$i98 + 3 | 0;
       if ($123 >>> 0 < $108 >>> 0) {
        if (($114 & 255) > ($107 & 255)) {
         $$023$be$i100 = $123;
         break;
        }
        if ((HEAPU8[$123 >> 0] | 0) < ($107 & 255)) {
         $$023$be$i100 = $123;
         break;
        } else {
         $$022$i102 = $$24$i97;
         break L71;
        }
       }
      }
      if ($114 << 24 >> 24 == $107 << 24 >> 24) {
       $$022$i102 = $$24$i97;
       break L71;
      } else $$023$be$i100 = $115;
     } while (0);
     $115 = $$023$be$i100 + 1 | 0;
     if ($115 >>> 0 >= $108 >>> 0) {
      $$022$i102 = $111;
      break;
     } else $$02325$i98 = $$023$be$i100;
    }
   } else $$022$i102 = $111; while (0);
   if ($$022$i102 | 0) {
    $$4 = 0;
    label = 125;
    break L1;
   }
   $132 = HEAP8[$$081$ph >> 0] | 0;
   $133 = $132 & 255;
   L85 : do if ($113) {
    $$02325$i = $$$i96;
    $135 = $112;
    while (1) {
     $134 = HEAP8[$135 >> 0] | 0;
     $137 = $$02325$i + 2 | 0;
     $138 = HEAP8[$137 >> 0] | 0;
     do if ($134 << 24 >> 24 == 37) if (!(__ZL11match_classii($133, $138 & 255) | 0)) $$023$be$i = $137; else {
      $$022$i = $$24$i97;
      break L85;
     } else {
      if ($138 << 24 >> 24 == 45) {
       $143 = $$02325$i + 3 | 0;
       if ($143 >>> 0 < $108 >>> 0) {
        if (($134 & 255) > ($132 & 255)) {
         $$023$be$i = $143;
         break;
        }
        if ((HEAPU8[$143 >> 0] | 0) < ($132 & 255)) {
         $$023$be$i = $143;
         break;
        } else {
         $$022$i = $$24$i97;
         break L85;
        }
       }
      }
      if ($134 << 24 >> 24 == $132 << 24 >> 24) {
       $$022$i = $$24$i97;
       break L85;
      } else $$023$be$i = $135;
     } while (0);
     $135 = $$023$be$i + 1 | 0;
     if ($135 >>> 0 >= $108 >>> 0) {
      $$022$i = $111;
      break;
     } else $$02325$i = $$023$be$i;
    }
   } else $$022$i = $111; while (0);
   if (!$$022$i) {
    $$4 = 0;
    label = 125;
    break L1;
   } else $$083$ph134 = $$015$i110;
  }
  if ((label | 0) == 21) {
   label = 0;
   $52 = $$083 + 2 | 0;
   $53 = HEAP8[$52 >> 0] | 0;
   if (!($53 << 24 >> 24)) label = 23; else if (!(HEAP8[$$083 + 3 >> 0] | 0)) label = 23; else $61 = $53;
   if ((label | 0) == 23) {
    label = 0;
    __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88515, $vararg_buffer5) | 0;
    $61 = HEAP8[$52 >> 0] | 0;
   }
   if ((HEAP8[$$081$ph >> 0] | 0) != $61 << 24 >> 24) {
    $$4 = 0;
    label = 125;
    break;
   }
   $63 = HEAP8[$$083 + 3 >> 0] | 0;
   $64 = HEAP32[$3 >> 2] | 0;
   if ($6 >>> 0 < $64 >>> 0) {
    $$02227$i = 1;
    $$02426$i = $$081$ph;
    $67 = $6;
   } else {
    $$4 = 0;
    label = 125;
    break;
   }
   while (1) {
    $66 = HEAP8[$67 >> 0] | 0;
    if ($66 << 24 >> 24 == $63 << 24 >> 24) {
     $69 = $$02227$i + -1 | 0;
     if (!$69) break; else $$022$be$i = $69;
    } else $$022$be$i = ($66 << 24 >> 24 == $61 << 24 >> 24 & 1) + $$02227$i | 0;
    $71 = $67 + 1 | 0;
    if ($71 >>> 0 < $64 >>> 0) {
     $$02426$i$phi = $67;
     $$02227$i = $$022$be$i;
     $67 = $71;
     $$02426$i = $$02426$i$phi;
    } else {
     $$4 = 0;
     label = 125;
     break L1;
    }
   }
   $$081$ph = $$02426$i + 2 | 0;
   $$083$ph = $$083 + 4 | 0;
   continue;
  } else if ((label | 0) == 67) {
   label = 0;
   $153 = $152 + -49 | 0;
   if (($50 & 255) < 49) label = 70; else if (($153 | 0) < (HEAP32[$5 >> 2] | 0)) {
    $158 = HEAP32[$0 + 16 + ($153 << 3) + 4 >> 2] | 0;
    if (($158 | 0) == -1) label = 70; else {
     $$0$i$i = $153;
     $166 = $158;
    }
   } else label = 70;
   if ((label | 0) == 70) {
    label = 0;
    $161 = __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88450, $vararg_buffer13) | 0;
    $$0$i$i = $161;
    $166 = HEAP32[$0 + 16 + ($161 << 3) + 4 >> 2] | 0;
   }
   $167 = $$081$ph + $166 | 0;
   if (((HEAP32[$3 >> 2] | 0) - $$081$ph | 0) >>> 0 < $166 >>> 0) {
    $$4 = 0;
    label = 125;
    break;
   }
   if (($167 | 0) == 0 | (_memcmp(HEAP32[$0 + 16 + ($$0$i$i << 3) >> 2] | 0, $$081$ph, $166) | 0) != 0) {
    $$4 = 0;
    label = 125;
    break;
   }
   $$081$ph = $167;
   $$083$ph = $$083 + 2 | 0;
   continue;
  } else if ((label | 0) == 124) {
   label = 0;
   if ($284) {
    $$081$ph = $6;
    $$083$ph = $$015$i;
    continue;
   } else {
    $$4 = 0;
    label = 125;
    break;
   }
  }
 }
 if ((label | 0) == 5) {
  $10 = $$083 + 1 | 0;
  if ((HEAP8[$10 >> 0] | 0) == 41) {
   $14 = HEAP32[$5 >> 2] | 0;
   if (($14 | 0) > 31) __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88432, $vararg_buffer) | 0;
   HEAP32[$0 + 16 + ($14 << 3) >> 2] = $$081$ph;
   HEAP32[$0 + 16 + ($14 << 3) + 4 >> 2] = -2;
   HEAP32[$5 >> 2] = $14 + 1;
   $20 = __ZL5matchP10MatchStatePKcS2_($0, $$081$ph, $$083 + 2 | 0) | 0;
   if ($20 | 0) {
    $$4 = $20;
    STACKTOP = sp;
    return $$4 | 0;
   }
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
   $$4 = 0;
   STACKTOP = sp;
   return $$4 | 0;
  } else {
   $24 = HEAP32[$5 >> 2] | 0;
   if (($24 | 0) > 31) __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88432, $vararg_buffer1) | 0;
   HEAP32[$0 + 16 + ($24 << 3) >> 2] = $$081$ph;
   HEAP32[$0 + 16 + ($24 << 3) + 4 >> 2] = -1;
   HEAP32[$5 >> 2] = $24 + 1;
   $30 = __ZL5matchP10MatchStatePKcS2_($0, $$081$ph, $10) | 0;
   if ($30 | 0) {
    $$4 = $30;
    STACKTOP = sp;
    return $$4 | 0;
   }
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
   $$4 = 0;
   STACKTOP = sp;
   return $$4 | 0;
  }
 } else if ((label | 0) == 14) {
  $34 = $$083 + 1 | 0;
  $$0$in$i$i = HEAP32[$5 >> 2] | 0;
  while (1) {
   $$0$i$i115 = $$0$in$i$i + -1 | 0;
   if (($$0$in$i$i | 0) <= 0) {
    label = 17;
    break;
   }
   if ((HEAP32[$0 + 16 + ($$0$i$i115 << 3) + 4 >> 2] | 0) == -1) {
    $$08$i$i = $$0$i$i115;
    break;
   } else $$0$in$i$i = $$0$i$i115;
  }
  if ((label | 0) == 17) $$08$i$i = __Z10luaL_errorP9lua_StatePKcz(HEAP32[$4 >> 2] | 0, 88491, $vararg_buffer3) | 0;
  $46 = $0 + 16 + ($$08$i$i << 3) + 4 | 0;
  HEAP32[$46 >> 2] = $$081$ph - (HEAP32[$0 + 16 + ($$08$i$i << 3) >> 2] | 0);
  $47 = __ZL5matchP10MatchStatePKcS2_($0, $$081$ph, $34) | 0;
  if ($47 | 0) {
   $$4 = $47;
   STACKTOP = sp;
   return $$4 | 0;
  }
  HEAP32[$46 >> 2] = -1;
  $$4 = 0;
  STACKTOP = sp;
  return $$4 | 0;
 } else if ((label | 0) == 75) {
  $$4 = ($$081$ph | 0) == (HEAP32[$3 >> 2] | 0) ? $$081$ph : 0;
  STACKTOP = sp;
  return $$4 | 0;
 } else if ((label | 0) == 102) {
  $236 = $$015$i + 1 | 0;
  $237 = $$015$i + -1 | 0;
  $$014$i$ph = $$081$ph;
  L134 : while (1) {
   $282 = __ZL5matchP10MatchStatePKcS2_($0, $$014$i$ph, $236) | 0;
   if (!$282) $$014$i202 = $$014$i$ph; else {
    $$4 = $282;
    label = 125;
    break;
   }
   L136 : while (1) {
    if ($$014$i202 >>> 0 >= (HEAP32[$3 >> 2] | 0) >>> 0) {
     $$4 = 0;
     label = 125;
     break L134;
    }
    $245 = HEAP8[$$014$i202 >> 0] | 0;
    $246 = HEAP8[$$083 >> 0] | 0;
    switch ($246 << 24 >> 24 | 0) {
    case 37:
     {
      label = 111;
      break L136;
      break;
     }
    case 91:
     {
      label = 112;
      break L136;
      break;
     }
    case 46:
     break;
    default:
     {
      label = 121;
      break L136;
     }
    }
    $248 = $$014$i202 + 1 | 0;
    $249 = __ZL5matchP10MatchStatePKcS2_($0, $248, $236) | 0;
    if (!$249) $$014$i202 = $248; else {
     $$4 = $249;
     label = 125;
     break L134;
    }
   }
   L140 : do if ((label | 0) == 111) {
    label = 0;
    $$0$i$i117 = __ZL11match_classii($245 & 255, HEAPU8[$$pre$phi275Z2D >> 0] | 0) | 0;
   } else if ((label | 0) == 112) {
    label = 0;
    $255 = $245 & 255;
    $257 = (HEAP8[$$pre$phi275Z2D >> 0] | 0) == 94;
    $$$i$i$i = $257 ? $$pre$phi275Z2D : $$083;
    $258 = $257 & 1;
    $$24$i$i$i = $258 ^ 1;
    $259 = $$$i$i$i + 1 | 0;
    if ($259 >>> 0 < $237 >>> 0) {
     $$02325$i$i$i = $$$i$i$i;
     $262 = $259;
     while (1) {
      $261 = HEAP8[$262 >> 0] | 0;
      $264 = $$02325$i$i$i + 2 | 0;
      $265 = HEAP8[$264 >> 0] | 0;
      do if ($261 << 24 >> 24 == 37) if (!(__ZL11match_classii($255, $265 & 255) | 0)) $$023$be$i$i$i = $264; else {
       $$0$i$i117 = $$24$i$i$i;
       break L140;
      } else {
       if ($265 << 24 >> 24 == 45) {
        $270 = $$02325$i$i$i + 3 | 0;
        if ($270 >>> 0 < $237 >>> 0) {
         if (($261 & 255) > ($245 & 255)) {
          $$023$be$i$i$i = $270;
          break;
         }
         if ((HEAPU8[$270 >> 0] | 0) < ($245 & 255)) {
          $$023$be$i$i$i = $270;
          break;
         } else {
          $$0$i$i117 = $$24$i$i$i;
          break L140;
         }
        }
       }
       if ($261 << 24 >> 24 == $245 << 24 >> 24) {
        $$0$i$i117 = $$24$i$i$i;
        break L140;
       } else $$023$be$i$i$i = $262;
      } while (0);
      $262 = $$023$be$i$i$i + 1 | 0;
      if ($262 >>> 0 >= $237 >>> 0) {
       $$0$i$i117 = $258;
       break;
      } else $$02325$i$i$i = $$023$be$i$i$i;
     }
    } else $$0$i$i117 = $258;
   } else if ((label | 0) == 121) {
    label = 0;
    $$0$i$i117 = $246 << 24 >> 24 == $245 << 24 >> 24 & 1;
   } while (0);
   if (!$$0$i$i117) {
    $$4 = 0;
    label = 125;
    break;
   } else $$014$i$ph = $$014$i202 + 1 | 0;
  }
  if ((label | 0) == 125) {
   STACKTOP = sp;
   return $$4 | 0;
  }
 } else if ((label | 0) == 105) {
  $$4 = __ZL10max_expandP10MatchStatePKcS2_S2_($0, $$081$ph, $$083, $$015$i) | 0;
  STACKTOP = sp;
  return $$4 | 0;
 } else if ((label | 0) == 106) {
  if (!$284) {
   $$4 = 0;
   STACKTOP = sp;
   return $$4 | 0;
  }
  $$4 = __ZL10max_expandP10MatchStatePKcS2_S2_($0, $6, $$083, $$015$i) | 0;
  STACKTOP = sp;
  return $$4 | 0;
 } else if ((label | 0) == 125) {
  STACKTOP = sp;
  return $$4 | 0;
 }
 return 0;
}

function __ZN6google12_GLOBAL__N_121CommandLineFlagParser20ProcessFromenvLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeEb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i51 = 0, $$0$i$i67 = 0, $$0$i$i83 = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph6$i$i$i$i = 0, $$045205 = 0, $$07$ph5$i$i$i$i = 0, $$073$i$i$i$i = 0, $$in = 0, $10 = 0, $101 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $111 = 0, $115 = 0, $12 = 0, $120 = 0, $121 = 0, $127 = 0, $132 = 0, $134 = 0, $136 = 0, $14 = 0, $141 = 0, $142 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $151 = 0, $155 = 0, $158 = 0, $159 = 0, $160 = 0, $166 = 0, $167 = 0, $168 = 0, $175 = 0, $178 = 0, $184 = 0, $185 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $194 = 0, $198 = 0, $201 = 0, $205 = 0, $206 = 0, $21 = 0, $211 = 0, $215 = 0, $216 = 0, $223 = 0, $224 = 0, $228 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $68 = 0, $7 = 0, $74 = 0, $77 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $87 = 0, $9 = 0, $91 = 0, $94 = 0, $95 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $5 = sp + 100 | 0;
 $6 = sp + 88 | 0;
 $7 = sp + 76 | 0;
 $8 = sp + 64 | 0;
 $9 = sp + 52 | 0;
 $10 = sp + 40 | 0;
 $11 = sp + 28 | 0;
 $12 = sp + 16 | 0;
 $14 = HEAP8[$2 + 11 >> 0] | 0;
 $15 = $14 << 24 >> 24 < 0;
 if (!(($15 ? HEAP32[$2 + 4 >> 2] | 0 : $14 & 255) | 0)) {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 114224, 0);
  STACKTOP = sp;
  return;
 };
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$7 >> 2] = 0;
 $21 = $7 + 4 | 0;
 HEAP32[$21 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 __ZN6google12_GLOBAL__N_1L13ParseFlagListEPKcPNSt3__26vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEE($15 ? HEAP32[$2 >> 2] | 0 : $2, $7);
 $25 = HEAP32[$21 >> 2] | 0;
 $26 = HEAP32[$7 >> 2] | 0;
 $28 = $26;
 if (($25 | 0) == ($26 | 0)) {
  $$in = $25;
  $44 = $28;
 } else {
  $29 = $1 + 4 | 0;
  $30 = $1 + 8 | 0;
  $31 = $1 + 12 | 0;
  $32 = $1 + 16 | 0;
  $33 = $1 + 20 | 0;
  $34 = $1 + 24 | 0;
  $35 = $9 + 11 | 0;
  $36 = $9 + 4 | 0;
  $37 = $8 + 11 | 0;
  $38 = $8 + 4 | 0;
  $39 = $9 + 11 | 0;
  $40 = $9 + 4 | 0;
  $41 = $5 + 11 | 0;
  $42 = $5 + 4 | 0;
  $$045205 = 0;
  $53 = $28;
  while (1) {
   $52 = $53 + ($$045205 * 12 | 0) | 0;
   if ((HEAP8[$52 + 11 >> 0] | 0) < 0) $62 = HEAP32[$52 >> 2] | 0; else $62 = $52;
   $59 = (HEAP32[$1 >> 2] | 0) + 4 | 0;
   $60 = HEAP32[$59 >> 2] | 0;
   if (!$60) label = 22; else {
    $$0$ph6$i$i$i$i = $59;
    $$07$ph5$i$i$i$i = $60;
    L14 : while (1) {
     $$073$i$i$i$i = $$07$ph5$i$i$i$i;
     while (1) {
      if ((_strcmp(HEAP32[$$073$i$i$i$i + 16 >> 2] | 0, $62) | 0) >= 0) break;
      $68 = HEAP32[$$073$i$i$i$i + 4 >> 2] | 0;
      if (!$68) {
       $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i;
       break L14;
      } else $$073$i$i$i$i = $68;
     }
     $$07$ph5$i$i$i$i = HEAP32[$$073$i$i$i$i >> 2] | 0;
     if (!$$07$ph5$i$i$i$i) {
      $$0$ph$lcssa$i$i$i$i = $$073$i$i$i$i;
      break;
     } else $$0$ph6$i$i$i$i = $$073$i$i$i$i;
    }
    if (($$0$ph$lcssa$i$i$i$i | 0) == ($59 | 0)) label = 22; else if ((_strcmp($62, HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) | 0) < 0) label = 22; else {
     $74 = HEAP32[$$0$ph$lcssa$i$i$i$i + 20 >> 2] | 0;
     if (!$74) label = 22; else {
      HEAP32[$5 >> 2] = 0;
      HEAP32[$5 + 4 >> 2] = 0;
      HEAP32[$5 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 91063, 6);
      HEAP32[$9 >> 2] = 0;
      HEAP32[$9 + 4 >> 2] = 0;
      HEAP32[$9 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($9, $62, _strlen($62) | 0);
      $120 = HEAP8[$35 >> 0] | 0;
      $121 = $120 << 24 >> 24 < 0;
      $127 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($5, $121 ? HEAP32[$9 >> 2] | 0 : $9, $121 ? HEAP32[$36 >> 2] | 0 : $120 & 255) | 0;
      HEAP32[$8 >> 2] = HEAP32[$127 >> 2];
      HEAP32[$8 + 4 >> 2] = HEAP32[$127 + 4 >> 2];
      HEAP32[$8 + 8 >> 2] = HEAP32[$127 + 8 >> 2];
      HEAP32[$127 >> 2] = 0;
      HEAP32[$127 + 4 >> 2] = 0;
      HEAP32[$127 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      HEAP32[$9 >> 2] = 0;
      HEAP32[$9 + 4 >> 2] = 0;
      HEAP32[$9 + 8 >> 2] = 0;
      $132 = _getenv(((HEAP8[$37 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8) | 0) | 0;
      L24 : do if (!$132) {
       if ($4) {
        HEAP32[$10 >> 2] = 0;
        HEAP32[$10 + 4 >> 2] = 0;
        HEAP32[$10 + 8 >> 2] = 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($10, $62, _strlen($62) | 0);
        $141 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($29, $5, $10) | 0;
        $142 = HEAP32[$141 >> 2] | 0;
        if (!$142) {
         $144 = __Znwj(40) | 0;
         $145 = $144 + 16 | 0;
         HEAP32[$145 >> 2] = HEAP32[$10 >> 2];
         HEAP32[$145 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
         HEAP32[$145 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
         HEAP32[$10 >> 2] = 0;
         HEAP32[$10 + 4 >> 2] = 0;
         HEAP32[$10 + 8 >> 2] = 0;
         $146 = $144 + 28 | 0;
         HEAP32[$146 >> 2] = 0;
         HEAP32[$146 + 4 >> 2] = 0;
         HEAP32[$146 + 8 >> 2] = 0;
         $147 = HEAP32[$5 >> 2] | 0;
         HEAP32[$144 >> 2] = 0;
         HEAP32[$144 + 4 >> 2] = 0;
         HEAP32[$144 + 8 >> 2] = $147;
         HEAP32[$141 >> 2] = $144;
         $151 = HEAP32[HEAP32[$29 >> 2] >> 2] | 0;
         if (!$151) $155 = $144; else {
          HEAP32[$29 >> 2] = $151;
          $155 = HEAP32[$141 >> 2] | 0;
         }
         __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$30 >> 2] | 0, $155);
         HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
         $$0$i$i67 = $144;
        } else $$0$i$i67 = $142;
        $158 = $$0$i$i67 + 28 | 0;
        HEAP32[$12 >> 2] = 0;
        HEAP32[$12 + 4 >> 2] = 0;
        HEAP32[$12 + 8 >> 2] = 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($12, 90192, 7);
        $159 = HEAP8[$37 >> 0] | 0;
        $160 = $159 << 24 >> 24 < 0;
        $166 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($12, $160 ? HEAP32[$8 >> 2] | 0 : $8, $160 ? HEAP32[$38 >> 2] | 0 : $159 & 255) | 0;
        HEAP32[$11 >> 2] = HEAP32[$166 >> 2];
        HEAP32[$11 + 4 >> 2] = HEAP32[$166 + 4 >> 2];
        HEAP32[$11 + 8 >> 2] = HEAP32[$166 + 8 >> 2];
        HEAP32[$166 >> 2] = 0;
        HEAP32[$166 + 4 >> 2] = 0;
        HEAP32[$166 + 8 >> 2] = 0;
        $167 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($11, 91070) | 0;
        HEAP32[$5 >> 2] = HEAP32[$167 >> 2];
        HEAP32[$5 + 4 >> 2] = HEAP32[$167 + 4 >> 2];
        HEAP32[$5 + 8 >> 2] = HEAP32[$167 + 8 >> 2];
        HEAP32[$167 >> 2] = 0;
        HEAP32[$167 + 4 >> 2] = 0;
        HEAP32[$167 + 8 >> 2] = 0;
        $168 = $158 + 11 | 0;
        if ((HEAP8[$168 >> 0] | 0) < 0) {
         HEAP8[HEAP32[$158 >> 2] >> 0] = 0;
         HEAP32[$$0$i$i67 + 32 >> 2] = 0;
        } else {
         HEAP8[$158 >> 0] = 0;
         HEAP8[$168 >> 0] = 0;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($158, 0);
        HEAP32[$158 >> 2] = HEAP32[$5 >> 2];
        HEAP32[$158 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
        HEAP32[$158 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
        HEAP32[$5 >> 2] = 0;
        HEAP32[$5 + 4 >> 2] = 0;
        HEAP32[$5 + 8 >> 2] = 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
       }
      } else {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($9, $132) | 0;
       $134 = HEAP8[$39 >> 0] | 0;
       $136 = HEAP32[$40 >> 2] | 0;
       if ((($134 << 24 >> 24 < 0 ? $136 : $134 & 255) | 0) == 7) {
        if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($9, 0, -1, 90336, 7) | 0) {
         $175 = HEAP8[$39 >> 0] | 0;
         $178 = HEAP32[$40 >> 2] | 0;
         label = 47;
        }
       } else {
        $175 = $134;
        $178 = $136;
        label = 47;
       }
       do if ((label | 0) == 47) {
        label = 0;
        if ((($175 << 24 >> 24 < 0 ? $178 : $175 & 255) | 0) == 10) {
         if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($9, 0, -1, 90408, 10) | 0)) break;
         $211 = HEAP8[$39 >> 0] | 0;
        } else $211 = $175;
        __ZN6google12_GLOBAL__N_121CommandLineFlagParser25ProcessSingleOptionLockedEPNS0_15CommandLineFlagEPKcNS_15FlagSettingModeE($5, $1, $74, $211 << 24 >> 24 < 0 ? HEAP32[$9 >> 2] | 0 : $9, $3);
        $215 = HEAP8[$41 >> 0] | 0;
        $216 = $215 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($6, $216 ? HEAP32[$5 >> 2] | 0 : $5, $216 ? HEAP32[$42 >> 2] | 0 : $215 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        break L24;
       } while (0);
       HEAP32[$10 >> 2] = 0;
       HEAP32[$10 + 4 >> 2] = 0;
       HEAP32[$10 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($10, $62, _strlen($62) | 0);
       $184 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($29, $5, $10) | 0;
       $185 = HEAP32[$184 >> 2] | 0;
       if (!$185) {
        $187 = __Znwj(40) | 0;
        $188 = $187 + 16 | 0;
        HEAP32[$188 >> 2] = HEAP32[$10 >> 2];
        HEAP32[$188 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
        HEAP32[$188 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
        HEAP32[$10 >> 2] = 0;
        HEAP32[$10 + 4 >> 2] = 0;
        HEAP32[$10 + 8 >> 2] = 0;
        $189 = $187 + 28 | 0;
        HEAP32[$189 >> 2] = 0;
        HEAP32[$189 + 4 >> 2] = 0;
        HEAP32[$189 + 8 >> 2] = 0;
        $190 = HEAP32[$5 >> 2] | 0;
        HEAP32[$187 >> 2] = 0;
        HEAP32[$187 + 4 >> 2] = 0;
        HEAP32[$187 + 8 >> 2] = $190;
        HEAP32[$184 >> 2] = $187;
        $194 = HEAP32[HEAP32[$29 >> 2] >> 2] | 0;
        if (!$194) $198 = $187; else {
         HEAP32[$29 >> 2] = $194;
         $198 = HEAP32[$184 >> 2] | 0;
        }
        __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$30 >> 2] | 0, $198);
        HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
        $$0$i$i83 = $187;
       } else $$0$i$i83 = $185;
       $201 = $$0$i$i83 + 28 | 0;
       $205 = (HEAP8[$39 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
       HEAP32[$vararg_buffer2 >> 2] = 90192;
       HEAP32[$vararg_buffer2 + 4 >> 2] = $205;
       __ZN6google12StringPrintfEPKcz($5, 91097, $vararg_buffer2);
       $206 = $201 + 11 | 0;
       if ((HEAP8[$206 >> 0] | 0) < 0) {
        HEAP8[HEAP32[$201 >> 2] >> 0] = 0;
        HEAP32[$$0$i$i83 + 32 >> 2] = 0;
       } else {
        HEAP8[$201 >> 0] = 0;
        HEAP8[$206 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($201, 0);
       HEAP32[$201 >> 2] = HEAP32[$5 >> 2];
       HEAP32[$201 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
       HEAP32[$201 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
       HEAP32[$5 >> 2] = 0;
       HEAP32[$5 + 4 >> 2] = 0;
       HEAP32[$5 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
      } while (0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     }
    }
   }
   if ((label | 0) == 22) {
    label = 0;
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($8, $62, _strlen($62) | 0);
    $77 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($29, $5, $8) | 0;
    $78 = HEAP32[$77 >> 2] | 0;
    if (!$78) {
     $80 = __Znwj(40) | 0;
     $81 = $80 + 16 | 0;
     HEAP32[$81 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$81 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$81 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     HEAP32[$8 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     $82 = $80 + 28 | 0;
     HEAP32[$82 >> 2] = 0;
     HEAP32[$82 + 4 >> 2] = 0;
     HEAP32[$82 + 8 >> 2] = 0;
     $83 = HEAP32[$5 >> 2] | 0;
     HEAP32[$80 >> 2] = 0;
     HEAP32[$80 + 4 >> 2] = 0;
     HEAP32[$80 + 8 >> 2] = $83;
     HEAP32[$77 >> 2] = $80;
     $87 = HEAP32[HEAP32[$29 >> 2] >> 2] | 0;
     if (!$87) $91 = $80; else {
      HEAP32[$29 >> 2] = $87;
      $91 = HEAP32[$77 >> 2] | 0;
     }
     __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$30 >> 2] | 0, $91);
     HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
     $$0$i$i = $80;
    } else $$0$i$i = $78;
    $94 = $$0$i$i + 28 | 0;
    HEAP32[$vararg_buffer >> 2] = 90192;
    HEAP32[$vararg_buffer + 4 >> 2] = $62;
    __ZN6google12StringPrintfEPKcz($5, 90997, $vararg_buffer);
    $95 = $94 + 11 | 0;
    if ((HEAP8[$95 >> 0] | 0) < 0) {
     HEAP8[HEAP32[$94 >> 2] >> 0] = 0;
     HEAP32[$$0$i$i + 32 >> 2] = 0;
    } else {
     HEAP8[$94 >> 0] = 0;
     HEAP8[$95 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($94, 0);
    HEAP32[$94 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$94 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$94 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($8, $62, _strlen($62) | 0);
    $101 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($32, $5, $8) | 0;
    $102 = HEAP32[$101 >> 2] | 0;
    if (!$102) {
     $104 = __Znwj(40) | 0;
     $105 = $104 + 16 | 0;
     HEAP32[$105 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$105 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$105 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     HEAP32[$8 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     $106 = $104 + 28 | 0;
     HEAP32[$106 >> 2] = 0;
     HEAP32[$106 + 4 >> 2] = 0;
     HEAP32[$106 + 8 >> 2] = 0;
     $107 = HEAP32[$5 >> 2] | 0;
     HEAP32[$104 >> 2] = 0;
     HEAP32[$104 + 4 >> 2] = 0;
     HEAP32[$104 + 8 >> 2] = $107;
     HEAP32[$101 >> 2] = $104;
     $111 = HEAP32[HEAP32[$32 >> 2] >> 2] | 0;
     if (!$111) $115 = $104; else {
      HEAP32[$32 >> 2] = $111;
      $115 = HEAP32[$101 >> 2] | 0;
     }
     __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$33 >> 2] | 0, $115);
     HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 1;
     $$0$i$i51 = $104;
    } else $$0$i$i51 = $102;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($$0$i$i51 + 28 | 0, 114224) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
   }
   $$045205 = $$045205 + 1 | 0;
   $223 = HEAP32[$21 >> 2] | 0;
   $224 = HEAP32[$7 >> 2] | 0;
   $228 = $224;
   if ($$045205 >>> 0 >= (($223 - $224 | 0) / 12 | 0) >>> 0) {
    $$in = $223;
    $44 = $228;
    break;
   } else $53 = $228;
  }
 }
 $43 = $$in;
 HEAP32[$0 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 if ($44 | 0) {
  if (($43 | 0) == ($44 | 0)) $51 = $44; else {
   $48 = $43;
   do {
    $47 = $48 + -12 | 0;
    HEAP32[$21 >> 2] = $47;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
    $48 = HEAP32[$21 >> 2] | 0;
   } while (($48 | 0) != ($44 | 0));
   $51 = HEAP32[$7 >> 2] | 0;
  }
  __ZdlPv($51);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 STACKTOP = sp;
 return;
}

function _main($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$$0 = 0, $$0 = 0, $$0$lcssa$i$i$i = 0, $$0149 = 0, $10 = 0, $101 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $112 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $124 = 0, $127 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $137 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $145 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $153 = 0, $157 = 0, $159 = 0, $165 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $173 = 0, $177 = 0, $179 = 0, $185 = 0, $187 = 0, $193 = 0, $196 = 0, $198 = 0, $199 = 0, $2 = 0, $204 = 0, $215 = 0, $22 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $227 = 0, $229 = 0, $231 = 0, $233 = 0, $234 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $243 = 0, $25 = 0, $257 = 0, $259 = 0, $264 = 0, $268 = 0, $272 = 0, $277 = 0, $280 = 0, $283 = 0, $286 = 0, $289 = 0, $292 = 0, $295 = 0, $298 = 0, $3 = 0, $30 = 0, $301 = 0, $304 = 0, $307 = 0, $310 = 0, $313 = 0, $316 = 0, $319 = 0, $320 = 0, $36 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $66 = 0, $67 = 0, $7 = 0, $72 = 0, $79 = 0, $8 = 0, $80 = 0, $85 = 0, $9 = 0, $96 = 0, $97 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer17 = 0, $vararg_buffer3 = 0, $vararg_buffer35 = 0, $vararg_buffer37 = 0, $vararg_buffer6 = 0, $vararg_buffer8 = 0, sp = 0, $167$looptemp = 0, $168$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 5856 | 0;
 $vararg_buffer37 = sp + 5528 | 0;
 $vararg_buffer35 = sp + 5520 | 0;
 $vararg_buffer17 = sp + 5456 | 0;
 $vararg_buffer14 = sp + 5448 | 0;
 $vararg_buffer11 = sp + 5440 | 0;
 $vararg_buffer8 = sp + 5432 | 0;
 $vararg_buffer6 = sp + 280 | 0;
 $vararg_buffer3 = sp + 272 | 0;
 $vararg_buffer1 = sp + 48 | 0;
 $vararg_buffer = sp + 16 | 0;
 $2 = sp + 5836 | 0;
 $3 = sp + 5820 | 0;
 $4 = sp + 5840 | 0;
 $5 = sp + 5824 | 0;
 $6 = sp + 5808 | 0;
 $7 = sp + 5584 | 0;
 $8 = sp + 5568 | 0;
 $9 = sp + 5532 | 0;
 $10 = sp + 5560 | 0;
 $11 = sp + 5552 | 0;
 $12 = sp + 5544 | 0;
 $13 = sp + 8 | 0;
 $14 = sp;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$3 >> 2] = $1;
 __ZN9Threading13SetMainThreadEv();
 __ZN12spring_clock12PushTickRateEb(0);
 $15 = __ZN12spring_clock8GetTicksEv() | 0;
 $17 = __ZN11spring_time2xsE;
 HEAP32[$17 >> 2] = $15;
 HEAP32[$17 + 4 >> 2] = tempRet0;
 __ZN10CLogOutput13LogSystemInfoEv();
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 $22 = HEAP32[HEAP32[$3 >> 2] >> 2] | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, $22, _strlen($22) | 0);
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $24 = $6 + 11 | 0;
 $25 = HEAP8[$24 >> 0] | 0;
 $30 = $25 << 24 >> 24 < 0 ? HEAP32[$6 + 4 >> 2] | 0 : $25 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($8, 84756, 7, $30 + 7 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($8, (HEAP8[$24 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6, $30) | 0;
 $36 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($8, 84764) | 0;
 HEAP32[$7 >> 2] = HEAP32[$36 >> 2];
 HEAP32[$7 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
 HEAP32[$7 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
 HEAP32[$36 >> 2] = 0;
 HEAP32[$36 + 4 >> 2] = 0;
 HEAP32[$36 + 8 >> 2] = 0;
 __ZN6google15SetUsageMessageERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($7);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZN6google16SetVersionStringERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(__ZN13SpringVersion7GetFullEv() | 0);
 __ZN6google21ParseCommandLineFlagsEPiPPPcb($2, $3, 1) | 0;
 _ParseCmdLine(HEAP32[$2 >> 2] | 0, HEAP32[$3 >> 2] | 0, $4);
 __ZN12GlobalConfig11InstantiateEv();
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($7, 114224, 0);
 __ZN21FileSystemInitializer19InitializeLogOutputERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($7 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 __ZN21FileSystemInitializer10InitializeEv() | 0;
 __ZN12CrashHandler7InstallEv();
 _log_frontend_record(35, 84268, 84794, $vararg_buffer);
 $40 = $4 + 11 | 0;
 HEAP32[$vararg_buffer1 >> 2] = (HEAP8[$40 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4;
 _log_frontend_record(35, 84268, 84837, $vararg_buffer1);
 $45 = __Znwj(68) | 0;
 __ZN11ClientSetupC2Ev($45);
 $46 = $45;
 $47 = __Znwj(16) | 0;
 HEAP32[$47 + 4 >> 2] = 0;
 HEAP32[$47 + 8 >> 2] = 0;
 HEAP32[$47 >> 2] = 68428;
 HEAP32[$47 + 12 >> 2] = $46;
 $51 = __Znwj(36) | 0;
 __ZN8GameDataC2Ev($51);
 $52 = $51;
 $53 = __Znwj(16) | 0;
 HEAP32[$53 + 4 >> 2] = 0;
 HEAP32[$53 + 8 >> 2] = 0;
 HEAP32[$53 >> 2] = 68456;
 HEAP32[$53 + 12 >> 2] = $52;
 $57 = __Znwj(356) | 0;
 __ZN10CGameSetupC2Ev($57);
 $58 = $57;
 $59 = __Znwj(16) | 0;
 HEAP32[$59 + 4 >> 2] = 0;
 HEAP32[$59 + 8 >> 2] = 0;
 HEAP32[$59 >> 2] = 68484;
 HEAP32[$59 + 12 >> 2] = $58;
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 84866, 5);
 __ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($vararg_buffer1 | 0, $4 | 0, $vararg_buffer | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 if ((HEAP32[$vararg_buffer1 + 220 >> 2] | 0) <= -1) {
  $66 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  $67 = HEAP8[$40 >> 0] | 0;
  $72 = $67 << 24 >> 24 < 0 ? HEAP32[$4 + 4 >> 2] | 0 : $67 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($vararg_buffer, 84872, 41, $72 + 41 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($vararg_buffer, (HEAP8[$40 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4, $72) | 0;
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($66, $vararg_buffer);
  HEAP32[$66 >> 2] = 68080;
  ___cxa_throw($66 | 0, 192, 31);
 }
 if (!(__ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($vararg_buffer1 | 0, $5 | 0) | 0)) {
  $79 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  $80 = HEAP8[$40 >> 0] | 0;
  $85 = $80 << 24 >> 24 < 0 ? HEAP32[$4 + 4 >> 2] | 0 : $80 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($vararg_buffer, 84914, 23, $85 + 23 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($vararg_buffer, (HEAP8[$40 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4, $85) | 0;
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($79, $vararg_buffer);
  HEAP32[$79 >> 2] = 68080;
  ___cxa_throw($79 | 0, 192, 31);
 }
 __ZN11ClientSetup19LoadFromStartScriptERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($45, $5);
 if (!(__ZN10CGameSetup4InitERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($57, $5) | 0)) {
  HEAP32[$vararg_buffer3 >> 2] = (HEAP8[$40 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4;
  _log_frontend_record(50, 84268, 84938, $vararg_buffer3);
  $$0 = 1;
  $$0149 = 0;
  __ZN12CFileHandlerD2Ev($vararg_buffer1);
  __ZNSt3__219__shared_weak_count16__release_sharedEv($59);
  __ZNSt3__219__shared_weak_count16__release_sharedEv($53);
  __ZNSt3__219__shared_weak_count16__release_sharedEv($47);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $$$0 = $$0149 ? 0 : $$0;
  STACKTOP = sp;
  return $$$0 | 0;
 }
 $96 = $vararg_buffer + 8 | 0;
 $97 = $96;
 HEAP32[$97 >> 2] = 695383991;
 HEAP32[$97 + 4 >> 2] = -1266912361;
 $101 = $vararg_buffer;
 HEAP32[$101 >> 2] = 271183393;
 HEAP32[$101 + 4 >> 2] = -367295438;
 $105 = $vararg_buffer + 16 | 0;
 HEAP32[$105 >> 2] = 0;
 HEAP32[$105 + 4 >> 2] = 0;
 HEAP32[$105 + 8 >> 2] = 0;
 HEAP32[$105 + 12 >> 2] = 0;
 $106 = HEAP32[17103] | 0;
 $107 = _time(0) | 0;
 $108 = __ZN12spring_clock8GetTicksEv() | 0;
 $112 = __ZN11spring_time2xsE;
 $118 = _i64Subtract($108 | 0, tempRet0 | 0, HEAP32[$112 >> 2] | 0, HEAP32[$112 + 4 >> 2] | 0) | 0;
 $120 = ___muldi3($118 | 0, tempRet0 | 0, 9007, 0) | 0;
 $122 = _i64Add($120 | 0, tempRet0 | 0, 9007, 0) | 0;
 $124 = ___remdi3($107 | 0, (($107 | 0) < 0) << 31 >> 31 | 0, $122 | 0, tempRet0 | 0) | 0;
 $127 = $vararg_buffer + 24 | 0;
 HEAP32[$127 >> 2] = $124;
 HEAP32[$127 + 4 >> 2] = 0;
 $132 = _bitshift64Shl($vararg_buffer | 0, 0, 1) | 0;
 $133 = tempRet0;
 $134 = $132 | 1;
 $135 = _i64Add($124 | 0, 0, $134 | 0, $133 | 0) | 0;
 $137 = ___muldi3($135 | 0, tempRet0 | 0, 1284865837, 1481765933) | 0;
 $139 = _i64Add($137 | 0, tempRet0 | 0, $134 | 0, $133 | 0) | 0;
 $140 = tempRet0;
 $141 = $96;
 HEAP32[$141 >> 2] = $134;
 HEAP32[$141 + 4 >> 2] = $133;
 $145 = ___muldi3($139 | 0, $140 | 0, 1284865837, 1481765933) | 0;
 $147 = _i64Add($145 | 0, tempRet0 | 0, $134 | 0, $133 | 0) | 0;
 $148 = tempRet0;
 $149 = $vararg_buffer;
 HEAP32[$149 >> 2] = $147;
 HEAP32[$149 + 4 >> 2] = $148;
 $153 = _bitshift64Lshr($139 | 0, $140 | 0, 18) | 0;
 $157 = _bitshift64Lshr($153 ^ $139 | 0, tempRet0 ^ $140 | 0, 27) | 0;
 $159 = _bitshift64Lshr($139 | 0, $140 | 0, 59) | 0;
 $165 = $157 >>> $159 | $157 << (0 - $159 & 31);
 if (!$165) {
  $167 = $147;
  $168 = $148;
  do {
   $169 = ___muldi3($167 | 0, $168 | 0, 1284865837, 1481765933) | 0;
   $167$looptemp = $167;
   $167 = _i64Add($169 | 0, tempRet0 | 0, $134 | 0, $133 | 0) | 0;
   $168$looptemp = $168;
   $168 = tempRet0;
   $173 = _bitshift64Lshr($167$looptemp | 0, $168$looptemp | 0, 18) | 0;
   $177 = _bitshift64Lshr($173 ^ $167$looptemp | 0, tempRet0 ^ $168$looptemp | 0, 27) | 0;
   $179 = _bitshift64Lshr($167$looptemp | 0, $168$looptemp | 0, 59) | 0;
   $185 = $177 >>> $179 | $177 << (0 - $179 & 31);
  } while (!($185 | 0));
  $187 = $vararg_buffer;
  HEAP32[$187 >> 2] = $167;
  HEAP32[$187 + 4 >> 2] = $168;
  $$0$lcssa$i$i$i = $185;
 } else $$0$lcssa$i$i$i = $165;
 __ZN8GameData13SetRandomSeedEj($51, ($$0$lcssa$i$i$i >>> 0) % 4294967295 | 0);
 $193 = HEAP32[$57 + 8 >> 2] | 0;
 if (!$193) {
  $196 = $57 + 44 | 0;
  __ZN8GameData14SetMapChecksumEj($51, __ZN15CArchiveScanner26GetArchiveCompleteChecksumERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(HEAP32[_archiveScanner >> 2] | 0, $196 | 0) | 0);
  HEAP32[$8 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  $198 = $57 + 55 | 0;
  $199 = HEAP8[$198 >> 0] | 0;
  $204 = $199 << 24 >> 24 < 0 ? HEAP32[$57 + 48 >> 2] | 0 : $199 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($8, 84963, 5, $204 + 5 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($8, (HEAP8[$198 >> 0] | 0) < 0 ? HEAP32[$196 >> 2] | 0 : $196, $204) | 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  HEAP32[$9 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($9, 84866, 5);
  __ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($7 | 0, $8 | 0, $9 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  if ((HEAP32[$7 + 220 >> 2] | 0) <= -1) __ZN11CVFSHandler18AddArchiveWithDepsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(HEAP32[_vfsHandler >> 2] | 0, $196 | 0, 0) | 0;
  __ZN10CGameSetup18LoadStartPositionsEb($57, 0);
  __ZN12CFileHandlerD2Ev($7);
 } else {
  __ZN8GameData14SetMapChecksumEj($51, $193);
  __ZN10CGameSetup18LoadStartPositionsEb($57, 0);
 }
 $215 = HEAP32[$57 + 12 >> 2] | 0;
 if (!$215) {
  __ZNK15CArchiveScanner15ArchiveFromNameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($7 | 0, HEAP32[_archiveScanner >> 2] | 0, $57 + 56 | 0);
  __ZN8GameData14SetModChecksumEj($51, __ZN15CArchiveScanner26GetArchiveCompleteChecksumERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(HEAP32[_archiveScanner >> 2] | 0, $7 | 0) | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 } else __ZN8GameData14SetModChecksumEj($51, $215);
 _log_frontend_record(35, 84268, 84969, $vararg_buffer6);
 __ZN8GameData12SetSetupTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($51, $57 + 80 | 0);
 HEAP32[$10 >> 2] = $46;
 $222 = $10 + 4 | 0;
 HEAP32[$222 >> 2] = $47;
 __ZNSt3__219__shared_weak_count12__add_sharedEv($47);
 HEAP32[$11 >> 2] = $52;
 $223 = $11 + 4 | 0;
 HEAP32[$223 >> 2] = $53;
 __ZNSt3__219__shared_weak_count12__add_sharedEv($53);
 HEAP32[$12 >> 2] = $58;
 $224 = $12 + 4 | 0;
 HEAP32[$224 >> 2] = $59;
 __ZNSt3__219__shared_weak_count12__add_sharedEv($59);
 __ZN11CGameServerC1ENSt3__210shared_ptrIK11ClientSetupEENS1_IK8GameDataEENS1_IK10CGameSetupEE($vararg_buffer6 | 0, $10 | 0, $11 | 0, $12 | 0);
 $225 = HEAP32[$224 >> 2] | 0;
 if ($225 | 0) __ZNSt3__219__shared_weak_count16__release_sharedEv($225);
 $227 = HEAP32[$223 >> 2] | 0;
 if ($227 | 0) __ZNSt3__219__shared_weak_count16__release_sharedEv($227);
 $229 = HEAP32[$222 >> 2] | 0;
 if ($229 | 0) __ZNSt3__219__shared_weak_count16__release_sharedEv($229);
 $231 = $vararg_buffer6 + 5129 | 0;
 $233 = ___muldi3($106 * 1e3 | 0, 0, 1e6, 0) | 0;
 $234 = tempRet0;
 while (1) {
  if (HEAP8[$231 >> 0] | 0) break;
  if (__ZNK11CGameServer11HasFinishedEv($vararg_buffer6 | 0) | 0) break;
  $243 = $13;
  HEAP32[$243 >> 2] = $233;
  HEAP32[$243 + 4 >> 2] = $234;
  __ZN11spring_time5sleepEb($13 | 0, 0);
 }
 $237 = $vararg_buffer6 + 5052 | 0;
 $238 = $57 + 56 | 0;
 $239 = $57 + 67 | 0;
 $240 = $57 + 44 | 0;
 $241 = $57 + 55 | 0;
 while (1) {
  if (__ZNK11CGameServer11HasFinishedEv($vararg_buffer6 | 0) | 0) break;
  if (!(HEAP8[106264] | 0)) if (___cxa_guard_acquire(106264) | 0) HEAP8[112118] = (HEAP32[$237 >> 2] | 0) != 0 & 1;
  if (HEAP8[112118] | 0) {
   HEAP8[112118] = 0;
   $257 = HEAP32[$237 >> 2] | 0;
   $259 = $257 + 356 | 0;
   if ((HEAP8[$259 + 11 >> 0] | 0) < 0) $264 = HEAP32[$259 >> 2] | 0; else $264 = $259;
   HEAP32[$vararg_buffer8 >> 2] = $264;
   _log_frontend_record(35, 84268, 84988, $vararg_buffer8);
   if ((HEAP8[$239 >> 0] | 0) < 0) $268 = HEAP32[$238 >> 2] | 0; else $268 = $238;
   HEAP32[$vararg_buffer11 >> 2] = $268;
   _log_frontend_record(35, 84268, 85007, $vararg_buffer11);
   if ((HEAP8[$241 >> 0] | 0) < 0) $272 = HEAP32[$240 >> 2] | 0; else $272 = $240;
   HEAP32[$vararg_buffer14 >> 2] = $272;
   _log_frontend_record(35, 84268, 85021, $vararg_buffer14);
   $277 = HEAPU8[$257 + 285 >> 0] | 0;
   $280 = HEAPU8[$257 + 286 >> 0] | 0;
   $283 = HEAPU8[$257 + 287 >> 0] | 0;
   $286 = HEAPU8[$257 + 288 >> 0] | 0;
   $289 = HEAPU8[$257 + 289 >> 0] | 0;
   $292 = HEAPU8[$257 + 290 >> 0] | 0;
   $295 = HEAPU8[$257 + 291 >> 0] | 0;
   $298 = HEAPU8[$257 + 292 >> 0] | 0;
   $301 = HEAPU8[$257 + 293 >> 0] | 0;
   $304 = HEAPU8[$257 + 294 >> 0] | 0;
   $307 = HEAPU8[$257 + 295 >> 0] | 0;
   $310 = HEAPU8[$257 + 296 >> 0] | 0;
   $313 = HEAPU8[$257 + 297 >> 0] | 0;
   $316 = HEAPU8[$257 + 298 >> 0] | 0;
   $319 = HEAPU8[$257 + 299 >> 0] | 0;
   HEAP32[$vararg_buffer17 >> 2] = HEAPU8[$257 + 284 >> 0];
   HEAP32[$vararg_buffer17 + 4 >> 2] = $277;
   HEAP32[$vararg_buffer17 + 8 >> 2] = $280;
   HEAP32[$vararg_buffer17 + 12 >> 2] = $283;
   HEAP32[$vararg_buffer17 + 16 >> 2] = $286;
   HEAP32[$vararg_buffer17 + 20 >> 2] = $289;
   HEAP32[$vararg_buffer17 + 24 >> 2] = $292;
   HEAP32[$vararg_buffer17 + 28 >> 2] = $295;
   HEAP32[$vararg_buffer17 + 32 >> 2] = $298;
   HEAP32[$vararg_buffer17 + 36 >> 2] = $301;
   HEAP32[$vararg_buffer17 + 40 >> 2] = $304;
   HEAP32[$vararg_buffer17 + 44 >> 2] = $307;
   HEAP32[$vararg_buffer17 + 48 >> 2] = $310;
   HEAP32[$vararg_buffer17 + 52 >> 2] = $313;
   HEAP32[$vararg_buffer17 + 56 >> 2] = $316;
   HEAP32[$vararg_buffer17 + 60 >> 2] = $319;
   _log_frontend_record(35, 84268, 85035, $vararg_buffer17);
  }
  $320 = $14;
  HEAP32[$320 >> 2] = $233;
  HEAP32[$320 + 4 >> 2] = $234;
  __ZN11spring_time5sleepEb($14 | 0, 1);
 }
 __ZN11CGameServerD1Ev($vararg_buffer6 | 0);
 _log_frontend_record(35, 84268, 85108, $vararg_buffer35);
 __ZN21FileSystemInitializer7CleanupEb(1);
 __ZN12GlobalConfig10DeallocateEv();
 __ZN14DataDirLocater12FreeInstanceEv();
 __ZN12spring_clock11PopTickRateEv();
 _log_frontend_record(35, 84268, 85116, $vararg_buffer37);
 $$0 = 0;
 $$0149 = 1;
 __ZN12CFileHandlerD2Ev($vararg_buffer1);
 __ZNSt3__219__shared_weak_count16__release_sharedEv($59);
 __ZNSt3__219__shared_weak_count16__release_sharedEv($53);
 __ZNSt3__219__shared_weak_count16__release_sharedEv($47);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $$$0 = $$0149 ? 0 : $$0;
 STACKTOP = sp;
 return $$$0 | 0;
}

function __ZN9LuaParser8SetupEnvEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $102 = 0, $104 = 0, $107 = 0, $109 = 0, $113 = 0, $114 = 0, $122 = 0, $124 = 0, $127 = 0, $129 = 0, $133 = 0, $134 = 0, $142 = 0, $144 = 0, $147 = 0, $149 = 0, $150 = 0, $152 = 0, $156 = 0, $158 = 0, $159 = 0, $161 = 0, $164 = 0, $166 = 0, $170 = 0, $171 = 0, $179 = 0, $181 = 0, $184 = 0, $186 = 0, $190 = 0, $191 = 0, $199 = 0, $2 = 0, $201 = 0, $204 = 0, $206 = 0, $210 = 0, $211 = 0, $219 = 0, $221 = 0, $224 = 0, $226 = 0, $230 = 0, $231 = 0, $239 = 0, $241 = 0, $244 = 0, $246 = 0, $250 = 0, $251 = 0, $259 = 0, $261 = 0, $264 = 0, $266 = 0, $267 = 0, $269 = 0, $27 = 0, $273 = 0, $275 = 0, $276 = 0, $278 = 0, $29 = 0, $3 = 0, $30 = 0, $37 = 0, $39 = 0, $40 = 0, $48 = 0, $49 = 0, $56 = 0, $58 = 0, $59 = 0, $67 = 0, $69 = 0, $73 = 0, $74 = 0, $82 = 0, $84 = 0, $87 = 0, $89 = 0, $93 = 0, $94 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 48 | 0;
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 160, 0);
 __Z9lua_pcallP9lua_Stateiii(HEAP32[$3 >> 2] | 0, 0, 0, 0) | 0;
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 161, 0);
 __Z9lua_pcallP9lua_Stateiii(HEAP32[$3 >> 2] | 0, 0, 0, 0) | 0;
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 162, 0);
 __Z9lua_pcallP9lua_Stateiii(HEAP32[$3 >> 2] | 0, 0, 0, 0) | 0;
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 163, 0);
 __Z9lua_pcallP9lua_Stateiii(HEAP32[$3 >> 2] | 0, 0, 0, 0) | 0;
 __Z11lua_pushnilP9lua_State(HEAP32[$3 >> 2] | 0);
 __Z12lua_setfieldP9lua_StateiPKc(HEAP32[$3 >> 2] | 0, -10002, 85886);
 __Z11lua_pushnilP9lua_State(HEAP32[$3 >> 2] | 0);
 __Z12lua_setfieldP9lua_StateiPKc(HEAP32[$3 >> 2] | 0, -10002, 85927);
 __Z11lua_pushnilP9lua_State(HEAP32[$3 >> 2] | 0);
 __Z12lua_setfieldP9lua_StateiPKc(HEAP32[$3 >> 2] | 0, -10002, 83232);
 __Z11lua_pushnilP9lua_State(HEAP32[$3 >> 2] | 0);
 __Z12lua_setfieldP9lua_StateiPKc(HEAP32[$3 >> 2] | 0, -10002, 83240);
 __Z11lua_pushnilP9lua_State(HEAP32[$3 >> 2] | 0);
 __Z12lua_setfieldP9lua_StateiPKc(HEAP32[$3 >> 2] | 0, -10002, 85899);
 __Z11lua_pushnilP9lua_State(HEAP32[$3 >> 2] | 0);
 __Z12lua_setfieldP9lua_StateiPKc(HEAP32[$3 >> 2] | 0, -10002, 85871);
 __Z11lua_pushnilP9lua_State(HEAP32[$3 >> 2] | 0);
 __Z12lua_setfieldP9lua_StateiPKc(HEAP32[$3 >> 2] | 0, -10002, 85819);
 __Z12lua_getfieldP9lua_StateiPKc(HEAP32[$3 >> 2] | 0, -10002, 87185);
 $27 = HEAP32[$3 >> 2] | 0;
 if ($1) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 87299, 6);
  $29 = HEAP8[$2 + 11 >> 0] | 0;
  $30 = $29 << 24 >> 24 < 0;
  __Z15lua_pushlstringP9lua_StatePKcj($27, $30 ? HEAP32[$2 >> 2] | 0 : $2, $30 ? HEAP32[$2 + 4 >> 2] | 0 : $29 & 255);
  __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($27, 164, 0);
  __Z10lua_rawsetP9lua_Statei($27, -3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $37 = HEAP32[$3 >> 2] | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 87306, 10);
  $39 = HEAP8[$2 + 11 >> 0] | 0;
  $40 = $39 << 24 >> 24 < 0;
  __Z15lua_pushlstringP9lua_StatePKcj($37, $40 ? HEAP32[$2 >> 2] | 0 : $2, $40 ? HEAP32[$2 + 4 >> 2] | 0 : $39 & 255);
  __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($37, 165, 0);
  __Z10lua_rawsetP9lua_Statei($37, -3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 } else {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 87299, 6);
  $48 = HEAP8[$2 + 11 >> 0] | 0;
  $49 = $48 << 24 >> 24 < 0;
  __Z15lua_pushlstringP9lua_StatePKcj($27, $49 ? HEAP32[$2 >> 2] | 0 : $2, $49 ? HEAP32[$2 + 4 >> 2] | 0 : $48 & 255);
  __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($27, 166, 0);
  __Z10lua_rawsetP9lua_Statei($27, -3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $56 = HEAP32[$3 >> 2] | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 87306, 10);
  $58 = HEAP8[$2 + 11 >> 0] | 0;
  $59 = $58 << 24 >> 24 < 0;
  __Z15lua_pushlstringP9lua_StatePKcj($56, $59 ? HEAP32[$2 >> 2] | 0 : $2, $59 ? HEAP32[$2 + 4 >> 2] | 0 : $58 & 255);
  __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($56, 167, 0);
  __Z10lua_rawsetP9lua_Statei($56, -3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 }
 __Z10lua_settopP9lua_Statei(HEAP32[$3 >> 2] | 0, -2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83248, 18);
 $67 = HEAP32[$3 >> 2] | 0;
 do if ($67 | 0) {
  $69 = $0 + 120 | 0;
  if ((HEAP32[$69 >> 2] | 0) >= 0) {
   $73 = HEAP8[$2 + 11 >> 0] | 0;
   $74 = $73 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj($67, $74 ? HEAP32[$2 >> 2] | 0 : $2, $74 ? HEAP32[$2 + 4 >> 2] | 0 : $73 & 255);
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 168, 0);
   $82 = HEAP32[$3 >> 2] | 0;
   if ($82 | 0) {
    $84 = HEAP32[$69 >> 2] | 0;
    if (($84 | 0) >= 0) if (!$84) {
     __Z10lua_rawsetP9lua_Statei($82, -10002);
     break;
    } else {
     __Z10lua_rawsetP9lua_Statei($82, -3);
     break;
    }
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83267, 6);
 __ZN9LuaParser8GetTableERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb($0, $2, 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83274, 4);
 $87 = HEAP32[$3 >> 2] | 0;
 do if ($87 | 0) {
  $89 = $0 + 120 | 0;
  if ((HEAP32[$89 >> 2] | 0) >= 0) {
   $93 = HEAP8[$2 + 11 >> 0] | 0;
   $94 = $93 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj($87, $94 ? HEAP32[$2 >> 2] | 0 : $2, $94 ? HEAP32[$2 + 4 >> 2] | 0 : $93 & 255);
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 169, 0);
   $102 = HEAP32[$3 >> 2] | 0;
   if ($102 | 0) {
    $104 = HEAP32[$89 >> 2] | 0;
    if (($104 | 0) >= 0) if (!$104) {
     __Z10lua_rawsetP9lua_Statei($102, -10002);
     break;
    } else {
     __Z10lua_rawsetP9lua_Statei($102, -3);
     break;
    }
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83279, 3);
 $107 = HEAP32[$3 >> 2] | 0;
 do if ($107 | 0) {
  $109 = $0 + 120 | 0;
  if ((HEAP32[$109 >> 2] | 0) >= 0) {
   $113 = HEAP8[$2 + 11 >> 0] | 0;
   $114 = $113 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj($107, $114 ? HEAP32[$2 >> 2] | 0 : $2, $114 ? HEAP32[$2 + 4 >> 2] | 0 : $113 & 255);
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 170, 0);
   $122 = HEAP32[$3 >> 2] | 0;
   if ($122 | 0) {
    $124 = HEAP32[$109 >> 2] | 0;
    if (($124 | 0) >= 0) if (!$124) {
     __Z10lua_rawsetP9lua_Statei($122, -10002);
     break;
    } else {
     __Z10lua_rawsetP9lua_Statei($122, -3);
     break;
    }
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83283, 9);
 $127 = HEAP32[$3 >> 2] | 0;
 do if ($127 | 0) {
  $129 = $0 + 120 | 0;
  if ((HEAP32[$129 >> 2] | 0) >= 0) {
   $133 = HEAP8[$2 + 11 >> 0] | 0;
   $134 = $133 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj($127, $134 ? HEAP32[$2 >> 2] | 0 : $2, $134 ? HEAP32[$2 + 4 >> 2] | 0 : $133 & 255);
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 171, 0);
   $142 = HEAP32[$3 >> 2] | 0;
   if ($142 | 0) {
    $144 = HEAP32[$129 >> 2] | 0;
    if (($144 | 0) >= 0) if (!$144) {
     __Z10lua_rawsetP9lua_Statei($142, -10002);
     break;
    } else {
     __Z10lua_rawsetP9lua_Statei($142, -3);
     break;
    }
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $147 = HEAP32[$3 >> 2] | 0;
 do if ($147 | 0) {
  $149 = $0 + 120 | 0;
  $150 = HEAP32[$149 >> 2] | 0;
  if (($150 | 0) >= 0) {
   $152 = $150 + -1 | 0;
   HEAP32[$149 >> 2] = $152;
   if ($150 | 0) if (!$152) {
    __Z10lua_rawsetP9lua_Statei($147, -10002);
    break;
   } else {
    __Z10lua_rawsetP9lua_Statei($147, -3);
    break;
   }
  }
 } while (0);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83293, 6);
 __ZN9LuaParser8GetTableERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb($0, $2, 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZN14LuaConstEngine11PushEntriesEP9lua_State(HEAP32[$3 >> 2] | 0) | 0;
 $156 = HEAP32[$3 >> 2] | 0;
 do if ($156 | 0) {
  $158 = $0 + 120 | 0;
  $159 = HEAP32[$158 >> 2] | 0;
  if (($159 | 0) >= 0) {
   $161 = $159 + -1 | 0;
   HEAP32[$158 >> 2] = $161;
   if ($159 | 0) if (!$161) {
    __Z10lua_rawsetP9lua_Statei($156, -10002);
    break;
   } else {
    __Z10lua_rawsetP9lua_Statei($156, -3);
    break;
   }
  }
 } while (0);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83300, 3);
 __ZN9LuaParser8GetTableERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb($0, $2, 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83304, 7);
 $164 = HEAP32[$3 >> 2] | 0;
 do if ($164 | 0) {
  $166 = $0 + 120 | 0;
  if ((HEAP32[$166 >> 2] | 0) >= 0) {
   $170 = HEAP8[$2 + 11 >> 0] | 0;
   $171 = $170 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj($164, $171 ? HEAP32[$2 >> 2] | 0 : $2, $171 ? HEAP32[$2 + 4 >> 2] | 0 : $170 & 255);
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 172, 0);
   $179 = HEAP32[$3 >> 2] | 0;
   if ($179 | 0) {
    $181 = HEAP32[$166 >> 2] | 0;
    if (($181 | 0) >= 0) if (!$181) {
     __Z10lua_rawsetP9lua_Statei($179, -10002);
     break;
    } else {
     __Z10lua_rawsetP9lua_Statei($179, -3);
     break;
    }
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83312, 7);
 $184 = HEAP32[$3 >> 2] | 0;
 do if ($184 | 0) {
  $186 = $0 + 120 | 0;
  if ((HEAP32[$186 >> 2] | 0) >= 0) {
   $190 = HEAP8[$2 + 11 >> 0] | 0;
   $191 = $190 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj($184, $191 ? HEAP32[$2 >> 2] | 0 : $2, $191 ? HEAP32[$2 + 4 >> 2] | 0 : $190 & 255);
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 173, 0);
   $199 = HEAP32[$3 >> 2] | 0;
   if ($199 | 0) {
    $201 = HEAP32[$186 >> 2] | 0;
    if (($201 | 0) >= 0) if (!$201) {
     __Z10lua_rawsetP9lua_Statei($199, -10002);
     break;
    } else {
     __Z10lua_rawsetP9lua_Statei($199, -3);
     break;
    }
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83320, 7);
 $204 = HEAP32[$3 >> 2] | 0;
 do if ($204 | 0) {
  $206 = $0 + 120 | 0;
  if ((HEAP32[$206 >> 2] | 0) >= 0) {
   $210 = HEAP8[$2 + 11 >> 0] | 0;
   $211 = $210 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj($204, $211 ? HEAP32[$2 >> 2] | 0 : $2, $211 ? HEAP32[$2 + 4 >> 2] | 0 : $210 & 255);
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 174, 0);
   $219 = HEAP32[$3 >> 2] | 0;
   if ($219 | 0) {
    $221 = HEAP32[$206 >> 2] | 0;
    if (($221 | 0) >= 0) if (!$221) {
     __Z10lua_rawsetP9lua_Statei($219, -10002);
     break;
    } else {
     __Z10lua_rawsetP9lua_Statei($219, -3);
     break;
    }
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83328, 8);
 $224 = HEAP32[$3 >> 2] | 0;
 do if ($224 | 0) {
  $226 = $0 + 120 | 0;
  if ((HEAP32[$226 >> 2] | 0) >= 0) {
   $230 = HEAP8[$2 + 11 >> 0] | 0;
   $231 = $230 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj($224, $231 ? HEAP32[$2 >> 2] | 0 : $2, $231 ? HEAP32[$2 + 4 >> 2] | 0 : $230 & 255);
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 175, 0);
   $239 = HEAP32[$3 >> 2] | 0;
   if ($239 | 0) {
    $241 = HEAP32[$226 >> 2] | 0;
    if (($241 | 0) >= 0) if (!$241) {
     __Z10lua_rawsetP9lua_Statei($239, -10002);
     break;
    } else {
     __Z10lua_rawsetP9lua_Statei($239, -3);
     break;
    }
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83337, 10);
 $244 = HEAP32[$3 >> 2] | 0;
 do if ($244 | 0) {
  $246 = $0 + 120 | 0;
  if ((HEAP32[$246 >> 2] | 0) >= 0) {
   $250 = HEAP8[$2 + 11 >> 0] | 0;
   $251 = $250 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj($244, $251 ? HEAP32[$2 >> 2] | 0 : $2, $251 ? HEAP32[$2 + 4 >> 2] | 0 : $250 & 255);
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei(HEAP32[$3 >> 2] | 0, 176, 0);
   $259 = HEAP32[$3 >> 2] | 0;
   if ($259 | 0) {
    $261 = HEAP32[$246 >> 2] | 0;
    if (($261 | 0) >= 0) if (!$261) {
     __Z10lua_rawsetP9lua_Statei($259, -10002);
     break;
    } else {
     __Z10lua_rawsetP9lua_Statei($259, -3);
     break;
    }
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $264 = HEAP32[$3 >> 2] | 0;
 do if ($264 | 0) {
  $266 = $0 + 120 | 0;
  $267 = HEAP32[$266 >> 2] | 0;
  if (($267 | 0) >= 0) {
   $269 = $267 + -1 | 0;
   HEAP32[$266 >> 2] = $269;
   if ($267 | 0) if (!$269) {
    __Z10lua_rawsetP9lua_Statei($264, -10002);
    break;
   } else {
    __Z10lua_rawsetP9lua_Statei($264, -3);
    break;
   }
  }
 } while (0);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83348, 3);
 __ZN9LuaParser8GetTableERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb($0, $2, 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZN8LuaUtils14PushLogEntriesEP9lua_State(HEAP32[$3 >> 2] | 0) | 0;
 $273 = HEAP32[$3 >> 2] | 0;
 if (!$273) {
  STACKTOP = sp;
  return;
 }
 $275 = $0 + 120 | 0;
 $276 = HEAP32[$275 >> 2] | 0;
 if (($276 | 0) < 0) {
  STACKTOP = sp;
  return;
 }
 $278 = $276 + -1 | 0;
 HEAP32[$275 >> 2] = $278;
 if (!$276) {
  STACKTOP = sp;
  return;
 }
 if (!$278) {
  __Z10lua_rawsetP9lua_Statei($273, -10002);
  STACKTOP = sp;
  return;
 } else {
  __Z10lua_rawsetP9lua_Statei($273, -3);
  STACKTOP = sp;
  return;
 }
}

function __ZL12DumpFunctionPK5ProtoPK7TStringP9DumpState($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i45 = 0, $$047$i = 0, $$1$i44 = 0, $$146$i = 0, $$pre$phiZ2D = 0, $$pre50 = 0, $$pre54 = 0, $$pre57 = 0, $11 = 0, $118 = 0, $120 = 0, $121 = 0, $133 = 0, $144 = 0, $154 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $172 = 0, $192 = 0, $202 = 0, $215 = 0, $22 = 0, $224 = 0, $236 = 0, $242 = 0, $248 = 0, $249 = 0, $253 = 0, $256 = 0, $26 = 0, $272 = 0, $284 = 0, $285 = 0, $286 = 0, $289 = 0, $299 = 0, $3 = 0, $30 = 0, $312 = 0, $319 = 0, $322 = 0, $33 = 0, $331 = 0, $333 = 0, $346 = 0, $358 = 0, $359 = 0, $360 = 0, $363 = 0, $373 = 0, $38 = 0, $386 = 0, $394 = 0, $4 = 0, $47 = 0, $5 = 0, $59 = 0, $70 = 0, $72 = 0, $94 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 32 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) == ($1 | 0)) label = 3; else if (($5 | 0) == 0 | (HEAP32[$2 + 12 >> 2] | 0) != 0) label = 3; else {
  $22 = $5 + 16 | 0;
  HEAP32[$3 >> 2] = (HEAP32[$5 + 12 >> 2] | 0) + 1;
  $26 = $2 + 16 | 0;
  if (!(HEAP32[$26 >> 2] | 0)) {
   __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
   $30 = $2 + 4 | 0;
   $33 = $2 + 8 | 0;
   HEAP32[$26 >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$30 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$33 >> 2] | 0) | 0;
   __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
   if (!(HEAP32[$26 >> 2] | 0)) {
    $38 = HEAP32[$3 >> 2] | 0;
    __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
    HEAP32[$26 >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$30 >> 2] & 15](HEAP32[$2 >> 2] | 0, $22, $38, HEAP32[$33 >> 2] | 0) | 0;
    __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
   }
  }
  $$pre$phiZ2D = $26;
 }
 if ((label | 0) == 3) {
  HEAP32[$3 >> 2] = 0;
  $11 = $2 + 16 | 0;
  if (!(HEAP32[$11 >> 2] | 0)) {
   __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
   HEAP32[$11 >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$2 + 8 >> 2] | 0) | 0;
   __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
  }
  $$pre$phiZ2D = $11;
 }
 HEAP32[$3 >> 2] = HEAP32[$0 + 60 >> 2];
 $47 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if (!$47) {
  __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
  HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$2 + 8 >> 2] | 0) | 0;
  __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
  $59 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 } else $59 = $47;
 HEAP32[$3 >> 2] = HEAP32[$0 + 64 >> 2];
 if (!$59) {
  __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
  HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$2 + 8 >> 2] | 0) | 0;
  __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
  $72 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 } else $72 = $59;
 $70 = HEAP16[$0 + 72 >> 1] | 0;
 HEAP8[$3 >> 0] = $70;
 if (!$72) {
  __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
  HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 1, HEAP32[$2 + 8 >> 2] | 0) | 0;
  __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
  $$pre50 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  HEAP8[$3 >> 0] = HEAP8[$0 + 73 >> 0] | 0;
  if (!$$pre50) {
   __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
   HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 1, HEAP32[$2 + 8 >> 2] | 0) | 0;
   __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
   $96 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  } else $96 = $$pre50;
 } else {
  HEAP8[$3 >> 0] = ($70 & 65535) >>> 8;
  $96 = $72;
 }
 $94 = HEAP16[$0 + 74 >> 1] | 0;
 HEAP8[$3 >> 0] = $94;
 if (!$96) {
  __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
  HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 1, HEAP32[$2 + 8 >> 2] | 0) | 0;
  __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
  $$pre54 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  HEAP8[$3 >> 0] = HEAP8[$0 + 75 >> 0] | 0;
  if (!$$pre54) {
   __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
   HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 1, HEAP32[$2 + 8 >> 2] | 0) | 0;
   __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
   $121 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  } else $121 = $$pre54;
 } else {
  HEAP8[$3 >> 0] = ($94 & 65535) >>> 8;
  $121 = $96;
 }
 $118 = HEAP32[$0 + 12 >> 2] | 0;
 $120 = HEAP32[$0 + 44 >> 2] | 0;
 HEAP32[$3 >> 2] = $120;
 if (!$121) {
  __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
  HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$2 + 8 >> 2] | 0) | 0;
  __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
  if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
   __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
   HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $118, $120 << 2, HEAP32[$2 + 8 >> 2] | 0) | 0;
   __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
   $$pre57 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   $144 = HEAP32[$0 + 40 >> 2] | 0;
   HEAP32[$3 >> 2] = $144;
   if (!$$pre57) {
    __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
    HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$2 + 8 >> 2] | 0) | 0;
    __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
    $154 = $144;
    $394 = $3;
   } else {
    $154 = $144;
    $394 = $3;
   }
  } else label = 25;
 } else label = 25;
 if ((label | 0) == 25) {
  $133 = HEAP32[$0 + 40 >> 2] | 0;
  HEAP32[$3 >> 2] = $133;
  $154 = $133;
  $394 = $3;
 }
 L38 : do if (($154 | 0) > 0) {
  $156 = $0 + 8 | 0;
  $157 = $2 + 4 | 0;
  $158 = $2 + 8 | 0;
  $$0$i45 = 0;
  while (1) {
   $159 = HEAP32[$156 >> 2] | 0;
   $160 = $159 + ($$0$i45 << 3) | 0;
   $161 = $159 + ($$0$i45 << 3) + 4 | 0;
   $162 = HEAP32[$161 >> 2] | 0;
   HEAP8[$3 >> 0] = $162;
   if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
    __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
    HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$157 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 1, HEAP32[$158 >> 2] | 0) | 0;
    __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
    $172 = HEAP32[$161 >> 2] | 0;
   } else $172 = $162;
   L45 : do switch ($172 | 0) {
   case 4:
    {
     $192 = HEAP32[$160 >> 2] | 0;
     if (!$192) {
      HEAP32[$3 >> 2] = 0;
      if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
       __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
       HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$157 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$158 >> 2] | 0) | 0;
       __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
      }
      break L45;
     }
     $202 = $192 + 16 | 0;
     HEAP32[$3 >> 2] = (HEAP32[$192 + 12 >> 2] | 0) + 1;
     if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
      __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
      HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$157 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$158 >> 2] | 0) | 0;
      __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
      if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
       $215 = HEAP32[$3 >> 2] | 0;
       __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
       HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$157 >> 2] & 15](HEAP32[$2 >> 2] | 0, $202, $215, HEAP32[$158 >> 2] | 0) | 0;
       __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
      }
     }
     break;
    }
   case 1:
    {
     HEAP8[$3 >> 0] = HEAP32[$160 >> 2];
     if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
      __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
      HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$157 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 1, HEAP32[$158 >> 2] | 0) | 0;
      __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
     }
     break;
    }
   case 3:
    {
     HEAP32[$3 >> 2] = HEAP32[$160 >> 2];
     if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
      __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
      HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$157 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$158 >> 2] | 0) | 0;
      __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
     }
     break;
    }
   default:
    {}
   } while (0);
   $$0$i45 = $$0$i45 + 1 | 0;
   if (($$0$i45 | 0) == ($154 | 0)) break L38;
  }
 } while (0);
 $224 = HEAP32[$0 + 52 >> 2] | 0;
 HEAP32[$3 >> 2] = $224;
 if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
  __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
  HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$2 + 8 >> 2] | 0) | 0;
  __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
 }
 if (($224 | 0) > 0) {
  $236 = $0 + 16 | 0;
  $$1$i44 = 0;
  do {
   __ZL12DumpFunctionPK5ProtoPK7TStringP9DumpState(HEAP32[(HEAP32[$236 >> 2] | 0) + ($$1$i44 << 2) >> 2] | 0, HEAP32[$4 >> 2] | 0, $2);
   $$1$i44 = $$1$i44 + 1 | 0;
  } while (($$1$i44 | 0) != ($224 | 0));
 }
 $242 = $2 + 12 | 0;
 if (!(HEAP32[$242 >> 2] | 0)) $249 = HEAP32[$0 + 48 >> 2] | 0; else $249 = 0;
 $248 = HEAP32[$0 + 20 >> 2] | 0;
 HEAP32[$3 >> 2] = $249;
 if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
  __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
  $253 = $2 + 4 | 0;
  $256 = $2 + 8 | 0;
  HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$253 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$256 >> 2] | 0) | 0;
  __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
  if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
   __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
   HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$253 >> 2] & 15](HEAP32[$2 >> 2] | 0, $248, $249 << 2, HEAP32[$256 >> 2] | 0) | 0;
   __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
  }
 } else {}
 if (!(HEAP32[$242 >> 2] | 0)) $272 = HEAP32[$0 + 56 >> 2] | 0; else $272 = 0;
 HEAP32[$3 >> 2] = $272;
 if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
  __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
  HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$2 + 8 >> 2] | 0) | 0;
  __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
 }
 if (($272 | 0) > 0) {
  $284 = $0 + 24 | 0;
  $285 = $2 + 4 | 0;
  $286 = $2 + 8 | 0;
  $$047$i = 0;
  do {
   $289 = HEAP32[(HEAP32[$284 >> 2] | 0) + ($$047$i * 12 | 0) >> 2] | 0;
   if (!$289) {
    HEAP32[$3 >> 2] = 0;
    if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
     __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
     HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$285 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$286 >> 2] | 0) | 0;
     __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
    }
   } else {
    $299 = $289 + 16 | 0;
    HEAP32[$3 >> 2] = (HEAP32[$289 + 12 >> 2] | 0) + 1;
    do if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
     __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
     HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$285 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$286 >> 2] | 0) | 0;
     __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
     if (HEAP32[$$pre$phiZ2D >> 2] | 0) break;
     $312 = HEAP32[$3 >> 2] | 0;
     __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
     HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$285 >> 2] & 15](HEAP32[$2 >> 2] | 0, $299, $312, HEAP32[$286 >> 2] | 0) | 0;
     __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
    } while (0);
   }
   $319 = HEAP32[$284 >> 2] | 0;
   HEAP32[$3 >> 2] = HEAP32[$319 + ($$047$i * 12 | 0) + 4 >> 2];
   $322 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   if (!$322) {
    __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
    HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$285 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$286 >> 2] | 0) | 0;
    __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
    $331 = HEAP32[$284 >> 2] | 0;
    $333 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   } else {
    $331 = $319;
    $333 = $322;
   }
   HEAP32[$3 >> 2] = HEAP32[$331 + ($$047$i * 12 | 0) + 8 >> 2];
   if (!$333) {
    __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
    HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$285 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$286 >> 2] | 0) | 0;
    __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
   }
   $$047$i = $$047$i + 1 | 0;
  } while (($$047$i | 0) != ($272 | 0));
 }
 if (!(HEAP32[$242 >> 2] | 0)) $346 = HEAP32[$0 + 36 >> 2] | 0; else $346 = 0;
 HEAP32[$3 >> 2] = $346;
 if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
  __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
  HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$2 + 4 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$2 + 8 >> 2] | 0) | 0;
  __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
 }
 if (($346 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $358 = $0 + 28 | 0;
 $359 = $2 + 4 | 0;
 $360 = $2 + 8 | 0;
 $$146$i = 0;
 do {
  $363 = HEAP32[(HEAP32[$358 >> 2] | 0) + ($$146$i << 2) >> 2] | 0;
  if (!$363) {
   HEAP32[$3 >> 2] = 0;
   if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
    __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
    HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$359 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$360 >> 2] | 0) | 0;
    __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
   }
  } else {
   $373 = $363 + 16 | 0;
   HEAP32[$3 >> 2] = (HEAP32[$363 + 12 >> 2] | 0) + 1;
   do if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
    __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
    HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$359 >> 2] & 15](HEAP32[$2 >> 2] | 0, $3, 4, HEAP32[$360 >> 2] | 0) | 0;
    __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
    if (HEAP32[$$pre$phiZ2D >> 2] | 0) break;
    $386 = HEAP32[$3 >> 2] | 0;
    __Z14LuaMutexUnlockP9lua_State(HEAP32[$2 >> 2] | 0);
    HEAP32[$$pre$phiZ2D >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$359 >> 2] & 15](HEAP32[$2 >> 2] | 0, $373, $386, HEAP32[$360 >> 2] | 0) | 0;
    __Z12LuaMutexLockP9lua_State(HEAP32[$2 >> 2] | 0);
   } while (0);
  }
  $$146$i = $$146$i + 1 | 0;
 } while (($$146$i | 0) != ($346 | 0));
 STACKTOP = sp;
 return;
}

function __ZN11ClientSetup19LoadFromStartScriptERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $25 = 0, $26 = 0, $3 = 0, $31 = 0, $33 = 0, $38 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $63 = 0, $64 = 0, $69 = 0, $7 = 0, $70 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $vararg_buffer = sp;
 $2 = sp + 144 | 0;
 $3 = sp + 72 | 0;
 $4 = sp + 56 | 0;
 $5 = sp + 44 | 0;
 $6 = sp + 32 | 0;
 $7 = sp + 20 | 0;
 $9 = HEAP8[$1 + 11 >> 0] | 0;
 $10 = $9 << 24 >> 24 < 0;
 __ZN9TdfParserC1EPKcj($3 | 0, ($10 ? HEAP32[$1 >> 2] | 0 : $1) | 0, ($10 ? HEAP32[$1 + 4 >> 2] | 0 : $9 & 255) | 0);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81279, 4);
 $17 = __ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $2 | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 if (!$17) {
  $18 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 80863, 41);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($18, $2);
  HEAP32[$18 >> 2] = 68080;
  ___cxa_throw($18 | 0, 192, 31);
 }
 $19 = $0 + 48 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 80905, 11);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2 | 0, $3 | 0, $19 | 0, $4 | 0);
 $20 = $19 + 11 | 0;
 if ((HEAP8[$20 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$19 >> 2] >> 0] = 0;
  HEAP32[$0 + 52 >> 2] = 0;
 } else {
  HEAP8[$19 >> 0] = 0;
  HEAP8[$20 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($19, 0);
 HEAP32[$19 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$19 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$19 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $25 = $0 + 60 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 81707, 2);
 $31 = (HEAP8[$5 + 11 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5;
 HEAP32[$vararg_buffer >> 2] = $26;
 _snprintf($2, 64, $31, $vararg_buffer) | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, $2, _strlen($2) | 0);
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 80917, 13);
 __ZNK9TdfParser6GetDefIiEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($3, $25, $4, $vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 114224, 0);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 80931, 17);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($vararg_buffer | 0, $3 | 0, $2 | 0, $4 | 0);
 $33 = $0 + 11 | 0;
 if ((HEAP8[$33 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
 } else {
  HEAP8[$0 >> 0] = 0;
  HEAP8[$33 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, 0);
 HEAP32[$0 >> 2] = HEAP32[$vararg_buffer >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$vararg_buffer + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$vararg_buffer + 8 >> 2];
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $38 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 114224, 0);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 80949, 13);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($vararg_buffer | 0, $3 | 0, $2 | 0, $4 | 0);
 $39 = $38 + 11 | 0;
 if ((HEAP8[$39 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$38 >> 2] >> 0] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
 } else {
  HEAP8[$38 >> 0] = 0;
  HEAP8[$39 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($38, 0);
 HEAP32[$38 >> 2] = HEAP32[$vararg_buffer >> 2];
 HEAP32[$38 + 4 >> 2] = HEAP32[$vararg_buffer + 4 >> 2];
 HEAP32[$38 + 8 >> 2] = HEAP32[$vararg_buffer + 8 >> 2];
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $44 = $0 + 64 | 0;
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 80963, 11);
 $45 = __ZNK9TdfParser8GetValueERbRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($3 | 0, $44 | 0, $vararg_buffer | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 if (!$45) _log_frontend_record(40, 114224, 80975, sp + 16 | 0);
 if (!(HEAP8[$44 >> 0] | 0)) {
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81042, 88);
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81131, 18);
  __Z15ErrorMessageBoxRKNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_j($vararg_buffer | 0, $2 | 0, 5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 };
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81150, 15);
 $48 = __ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_($3 | 0, $2 | 0, $vararg_buffer | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 if ($48) {
  $49 = HEAP32[_configHandler >> 2] | 0;
  $52 = HEAP32[(HEAP32[$49 >> 2] | 0) + 8 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81166, 10);
  FUNCTION_TABLE_viiii[$52 & 15]($49, $vararg_buffer, $2, 1);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 };
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81177, 15);
 $53 = __ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_($3 | 0, $4 | 0, $vararg_buffer | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 if ($53) {
  $54 = HEAP32[_configHandler >> 2] | 0;
  $57 = HEAP32[(HEAP32[$54 >> 2] | 0) + 8 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81193, 10);
  FUNCTION_TABLE_viiii[$57 & 15]($54, $vararg_buffer, $4, 1);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 };
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81204, 17);
 $58 = __ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_($3 | 0, $5 | 0, $vararg_buffer | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 if ($58) {
  $59 = HEAP32[_configHandler >> 2] | 0;
  $62 = HEAP32[(HEAP32[$59 >> 2] | 0) + 8 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, 81222, 12);
  FUNCTION_TABLE_viiii[$62 & 15]($59, $vararg_buffer, $5, 1);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 }
 $63 = $0 + 24 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, 114224, 0);
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($7, 81235, 13);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($vararg_buffer | 0, $3 | 0, $6 | 0, $7 | 0);
 $64 = $63 + 11 | 0;
 if ((HEAP8[$64 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$63 >> 2] >> 0] = 0;
  HEAP32[$0 + 28 >> 2] = 0;
 } else {
  HEAP8[$63 >> 0] = 0;
  HEAP8[$64 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($63, 0);
 HEAP32[$63 >> 2] = HEAP32[$vararg_buffer >> 2];
 HEAP32[$63 + 4 >> 2] = HEAP32[$vararg_buffer + 4 >> 2];
 HEAP32[$63 + 8 >> 2] = HEAP32[$vararg_buffer + 8 >> 2];
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 $69 = $0 + 36 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, 114224, 0);
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($7, 81249, 13);
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($vararg_buffer | 0, $3 | 0, $6 | 0, $7 | 0);
 $70 = $69 + 11 | 0;
 if ((HEAP8[$70 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$69 >> 2] >> 0] = 0;
  HEAP32[$0 + 40 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($69, 0);
  HEAP32[$69 >> 2] = HEAP32[$vararg_buffer >> 2];
  HEAP32[$69 + 4 >> 2] = HEAP32[$vararg_buffer + 4 >> 2];
  HEAP32[$69 + 8 >> 2] = HEAP32[$vararg_buffer + 8 >> 2];
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  __ZN9TdfParserD1Ev($3 | 0);
  STACKTOP = sp;
  return;
 } else {
  HEAP8[$69 >> 0] = 0;
  HEAP8[$70 >> 0] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($69, 0);
  HEAP32[$69 >> 2] = HEAP32[$vararg_buffer >> 2];
  HEAP32[$69 + 4 >> 2] = HEAP32[$vararg_buffer + 4 >> 2];
  HEAP32[$69 + 8 >> 2] = HEAP32[$vararg_buffer + 8 >> 2];
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  __ZN9TdfParserD1Ev($3 | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZN10CGameSetup13LoadAllyTeamsERK9TdfParser($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa$i = 0, $$0314 = 0, $$04$i = 0, $$042322 = 0, $$043315 = 0, $$05$i$i = 0, $$1 = 0, $$lcssa$i$i = 0, $$pre8$i$i = 0, $$sroa$6$0320 = 0, $10 = 0, $101 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $117 = 0, $12 = 0, $125 = 0, $127 = 0, $13 = 0, $132 = 0, $134 = 0, $135 = 0, $139 = 0, $14 = 0, $141 = 0, $142 = 0, $148 = 0, $15 = 0, $154 = 0, $156 = 0, $16 = 0, $160 = 0, $17 = 0, $173 = 0, $174 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $5 = 0, $51 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $63 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $82 = 0, $87 = 0, $89 = 0, $9 = 0, $94 = 0, $96 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vararg_buffer10 = sp + 64 | 0;
 $vararg_buffer7 = sp + 48 | 0;
 $vararg_buffer4 = sp + 32 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 168 | 0;
 $3 = sp + 156 | 0;
 $4 = sp + 144 | 0;
 $5 = sp + 120 | 0;
 $6 = sp + 104 | 0;
 $7 = sp + 92 | 0;
 $8 = sp + 80 | 0;
 $9 = sp + 68 | 0;
 HEAP32[$3 >> 2] = 0;
 $10 = $6 + 11 | 0;
 $11 = $0 + 240 | 0;
 $12 = $0 + 244 | 0;
 $13 = $0 + 236 | 0;
 $14 = $0 + 184 | 0;
 $15 = $2 + 40 | 0;
 $16 = $2 + 32 | 0;
 $$pre8$i$i = $2 + 36 | 0;
 $17 = $2 + 16 | 0;
 $18 = $5 + 12 | 0;
 $$042322 = 0;
 $38 = 0;
 while (1) {
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, 81707, 2);
  $37 = (HEAP8[$10 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6;
  HEAP32[$vararg_buffer >> 2] = $38;
  _snprintf($2, 64, $37, $vararg_buffer) | 0;
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, $2, _strlen($2) | 0);
  $40 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($5, 0, 82027) | 0;
  HEAP32[$4 >> 2] = HEAP32[$40 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
  HEAP32[$40 >> 2] = 0;
  HEAP32[$40 + 4 >> 2] = 0;
  HEAP32[$40 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  if (__ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1 | 0, $4 | 0) | 0) {
   __ZN8AllyTeamC2Ev($2);
   $42 = __ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1 | 0, $4 | 0) | 0;
   $43 = $42 + 12 | 0;
   $44 = HEAP32[$43 >> 2] | 0;
   L5 : do if (!$44) $$0$lcssa$i = 0; else {
    $47 = HEAP32[$42 + 4 >> 2] | 0;
    $$04$i = 0;
    while (1) {
     if ((HEAP8[$47 + $$04$i >> 0] | 0) == 2) {
      $$0$lcssa$i = $$04$i;
      break L5;
     }
     $51 = $$04$i + 1 | 0;
     if ($51 >>> 0 < $44 >>> 0) $$04$i = $51; else {
      $$0$lcssa$i = $51;
      break;
     }
    }
   } while (0);
   if (($$0$lcssa$i | 0) != ($44 | 0)) {
    $54 = $42 + 8 | 0;
    $55 = $42 + 4 | 0;
    $$sroa$6$0320 = $$0$lcssa$i;
    while (1) {
     $63 = HEAP32[$54 >> 2] | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5, $63 + ($$sroa$6$0320 * 24 | 0) | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($18, $63 + ($$sroa$6$0320 * 24 | 0) + 12 | 0);
     __ZN8AllyTeam8SetValueERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2, $5, $18);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $66 = HEAP32[$43 >> 2] | 0;
     $67 = HEAP32[$55 >> 2] | 0;
     $68 = $$sroa$6$0320;
     do {
      $68 = $68 + 1 | 0;
      if ($68 >>> 0 >= $66 >>> 0) break;
     } while ((HEAP8[$67 + $68 >> 0] | 0) != 2);
     if (($68 | 0) == ($44 | 0)) break; else $$sroa$6$0320 = $68;
    }
   }
   $58 = HEAP32[$11 >> 2] | 0;
   if (($58 | 0) == (HEAP32[$12 >> 2] | 0)) __ZNSt3__26vectorI8AllyTeamNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($13, $2); else {
    __ZN8AllyTeamC2ERKS_($58, $2);
    HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 56;
   }
   $74 = $$042322 + 1 | 0;
   HEAP32[(__ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($14, $3) | 0) >> 2] = $$042322;
   $75 = HEAP32[$15 >> 2] | 0;
   $77 = HEAP32[$16 >> 2] | 0;
   if (!$75) $$lcssa$i$i = $77; else {
    $$05$i$i = 0;
    $173 = $75;
    $79 = $77;
    while (1) {
     if ((HEAP8[$79 + $$05$i$i >> 0] | 0) == 2) {
      $82 = HEAP32[$$pre8$i$i >> 2] | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82 + ($$05$i$i * 24 | 0) + 12 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82 + ($$05$i$i * 24 | 0) | 0);
      $174 = HEAP32[$16 >> 2] | 0;
      $87 = HEAP32[$15 >> 2] | 0;
     } else {
      $174 = $79;
      $87 = $173;
     }
     $$05$i$i = $$05$i$i + 1 | 0;
     if ($$05$i$i >>> 0 >= $87 >>> 0) {
      $$lcssa$i$i = $174;
      break;
     } else {
      $173 = $87;
      $79 = $174;
     }
    }
   }
   _free($$lcssa$i$i);
   _free(HEAP32[$$pre8$i$i >> 2] | 0);
   $89 = HEAP32[$17 >> 2] | 0;
   if ($89 | 0) __ZdlPv($89);
   $$1 = $74;
  } else $$1 = $$042322;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $38 = (HEAP32[$3 >> 2] | 0) + 1 | 0;
  HEAP32[$3 >> 2] = $38;
  if (($38 | 0) >= 255) break; else $$042322 = $$1;
 }
 $20 = HEAP32[$13 >> 2] | 0;
 $21 = (HEAP32[$11 >> 2] | 0) - $20 | 0;
 $22 = ($21 | 0) / 56 | 0;
 L36 : do if ($21 | 0) {
  $25 = $5 + 11 | 0;
  $26 = $vararg_buffer + 11 | 0;
  $27 = $vararg_buffer + 4 | 0;
  $28 = $7 + 11 | 0;
  $29 = $8 + 11 | 0;
  $30 = $9 + 11 | 0;
  $31 = $vararg_buffer4 + 11 | 0;
  $32 = $vararg_buffer4 + 4 | 0;
  $33 = $vararg_buffer7 + 11 | 0;
  $$043315 = 0;
  $96 = $20;
  while (1) {
   __ZNSt3__26vectorIbNS_9allocatorIbEEE6resizeEjb($96 + ($$043315 * 56 | 0) + 16 | 0, $22, 0);
   $101 = (HEAP32[(HEAP32[$13 >> 2] | 0) + ($$043315 * 56 | 0) + 16 >> 2] | 0) + ($$043315 >>> 5 << 2) | 0;
   HEAP32[$101 >> 2] = HEAP32[$101 >> 2] | 1 << ($$043315 & 31);
   HEAP32[$5 >> 2] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   HEAP32[$5 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 81707, 2);
   $109 = (HEAP8[$25 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5;
   HEAP32[$vararg_buffer1 >> 2] = $$043315;
   _snprintf($2, 64, $109, $vararg_buffer1) | 0;
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, $2, _strlen($2) | 0);
   $111 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($4, 0, 82027) | 0;
   HEAP32[$3 >> 2] = HEAP32[$111 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$111 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$111 + 8 >> 2];
   HEAP32[$111 >> 2] = 0;
   HEAP32[$111 + 4 >> 2] = 0;
   HEAP32[$111 + 8 >> 2] = 0;
   $112 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($3, 82059) | 0;
   HEAP32[$vararg_buffer >> 2] = HEAP32[$112 >> 2];
   HEAP32[$vararg_buffer + 4 >> 2] = HEAP32[$112 + 4 >> 2];
   HEAP32[$vararg_buffer + 8 >> 2] = HEAP32[$112 + 8 >> 2];
   HEAP32[$112 >> 2] = 0;
   HEAP32[$112 + 4 >> 2] = 0;
   HEAP32[$112 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   HEAP32[$vararg_buffer1 >> 2] = 0;
   HEAP32[$vararg_buffer1 + 4 >> 2] = 0;
   HEAP32[$vararg_buffer1 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer1, 91299, 1);
   HEAP32[$2 >> 2] = 0;
   HEAP32[$2 + 4 >> 2] = 0;
   HEAP32[$2 + 8 >> 2] = 0;
   $113 = HEAP8[$26 >> 0] | 0;
   $114 = $113 << 24 >> 24 < 0;
   $117 = $114 ? HEAP32[$27 >> 2] | 0 : $113 & 255;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($2, $114 ? HEAP32[$vararg_buffer >> 2] | 0 : $vararg_buffer, $117, $117 + 9 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($2, 82061, 9) | 0;
   __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($7 | 0, $1 | 0, $vararg_buffer1 | 0, $2 | 0);
   $125 = _atoi((HEAP8[$28 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer1);
   if ($125 | 0) {
    $$0314 = 0;
    do {
     HEAP32[$8 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($8, 81707, 2);
     $132 = (HEAP8[$29 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
     HEAP32[$vararg_buffer4 >> 2] = $$043315;
     _snprintf($2, 64, $132, $vararg_buffer4) | 0;
     HEAP32[$6 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, $2, _strlen($2) | 0);
     $134 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($6, 0, 82027) | 0;
     HEAP32[$5 >> 2] = HEAP32[$134 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$134 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$134 + 8 >> 2];
     HEAP32[$134 >> 2] = 0;
     HEAP32[$134 + 4 >> 2] = 0;
     HEAP32[$134 + 8 >> 2] = 0;
     $135 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($5, 82071) | 0;
     HEAP32[$4 >> 2] = HEAP32[$135 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$135 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$135 + 8 >> 2];
     HEAP32[$135 >> 2] = 0;
     HEAP32[$135 + 4 >> 2] = 0;
     HEAP32[$135 + 8 >> 2] = 0;
     HEAP32[$9 >> 2] = 0;
     HEAP32[$9 + 4 >> 2] = 0;
     HEAP32[$9 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($9, 81707, 2);
     $139 = (HEAP8[$30 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
     HEAP32[$vararg_buffer7 >> 2] = $$0314;
     _snprintf($2, 64, $139, $vararg_buffer7) | 0;
     HEAP32[$vararg_buffer4 >> 2] = 0;
     HEAP32[$vararg_buffer4 + 4 >> 2] = 0;
     HEAP32[$vararg_buffer4 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer4, $2, _strlen($2) | 0);
     $141 = HEAP8[$31 >> 0] | 0;
     $142 = $141 << 24 >> 24 < 0;
     $148 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($4, $142 ? HEAP32[$vararg_buffer4 >> 2] | 0 : $vararg_buffer4, $142 ? HEAP32[$32 >> 2] | 0 : $141 & 255) | 0;
     HEAP32[$3 >> 2] = HEAP32[$148 >> 2];
     HEAP32[$3 + 4 >> 2] = HEAP32[$148 + 4 >> 2];
     HEAP32[$3 + 8 >> 2] = HEAP32[$148 + 8 >> 2];
     HEAP32[$148 >> 2] = 0;
     HEAP32[$148 + 4 >> 2] = 0;
     HEAP32[$148 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     HEAP32[$vararg_buffer4 >> 2] = 0;
     HEAP32[$vararg_buffer4 + 4 >> 2] = 0;
     HEAP32[$vararg_buffer4 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer4, 91299, 1);
     __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($vararg_buffer7 | 0, $1 | 0, $vararg_buffer4 | 0, $3 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer4);
     HEAP32[$vararg_buffer4 >> 2] = _atoi((HEAP8[$33 >> 0] | 0) < 0 ? HEAP32[$vararg_buffer7 >> 2] | 0 : $vararg_buffer7) | 0;
     $154 = HEAP32[$13 >> 2] | 0;
     $156 = HEAP32[(__ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($14, $vararg_buffer4) | 0) >> 2] | 0;
     $160 = (HEAP32[$154 + ($$043315 * 56 | 0) + 16 >> 2] | 0) + ($156 >>> 5 << 2) | 0;
     HEAP32[$160 >> 2] = HEAP32[$160 >> 2] | 1 << ($156 & 31);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$0314 = $$0314 + 1 | 0;
    } while ($$0314 >>> 0 < $125 >>> 0);
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
   $127 = $$043315 + 1 | 0;
   if ($127 >>> 0 >= $22 >>> 0) break L36;
   $$043315 = $127;
   $96 = HEAP32[$13 >> 2] | 0;
  }
 } while (0);
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 82041, 17);
 $94 = __ZNK9TdfParser8GetValueIjEEbRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($1, $vararg_buffer, $2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 if (!$94) {
  STACKTOP = sp;
  return;
 }
 if ((((HEAP32[$11 >> 2] | 0) - (HEAP32[$13 >> 2] | 0) | 0) / 56 | 0 | 0) == (HEAP32[$vararg_buffer >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 _log_frontend_record(40, 114224, 82077, $vararg_buffer10);
 STACKTOP = sp;
 return;
}

function __ZNSt3__27__sort3IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_T_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $$0$i28 = 0, $$0$i31 = 0, $$0$i34 = 0, $$026 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $105 = 0, $11 = 0, $110 = 0, $111 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $126 = 0, $131 = 0, $132 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $147 = 0, $152 = 0, $153 = 0, $165 = 0, $17 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $190 = 0, $195 = 0, $196 = 0, $31 = 0, $32 = 0, $37 = 0, $4 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $67 = 0, $68 = 0, $80 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $4 = sp;
 $5 = $1 + 60 | 0;
 $6 = $5 + 11 | 0;
 $10 = (HEAP8[$6 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5;
 $11 = $0 + 60 | 0;
 $12 = $11 + 11 | 0;
 $17 = _strcmp($10, (HEAP8[$12 >> 0] | 0) < 0 ? HEAP32[$11 >> 2] | 0 : $11) | 0;
 if (!$17) $$0$i = _strcmp((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, (HEAP8[$0 + 11 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0) | 0; else $$0$i = $17;
 $31 = $2 + 60 | 0;
 $32 = $31 + 11 | 0;
 $37 = _strcmp((HEAP8[$32 >> 0] | 0) < 0 ? HEAP32[$31 >> 2] | 0 : $31, $10) | 0;
 if (!$37) $$0$i28 = _strcmp((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2, (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1) | 0; else $$0$i28 = $37;
 $50 = ($$0$i28 | 0) < 0;
 if (($$0$i | 0) >= 0) {
  if (!$50) {
   $$026 = 0;
   STACKTOP = sp;
   return $$026 | 0;
  };
  HEAP32[$4 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  $51 = $4 + 12 | 0;
  $52 = $1 + 12 | 0;
  HEAP32[$51 >> 2] = HEAP32[$52 >> 2];
  HEAP32[$51 + 4 >> 2] = HEAP32[$52 + 4 >> 2];
  HEAP32[$51 + 8 >> 2] = HEAP32[$52 + 8 >> 2];
  HEAP32[$52 >> 2] = 0;
  HEAP32[$52 + 4 >> 2] = 0;
  HEAP32[$52 + 8 >> 2] = 0;
  $53 = $4 + 24 | 0;
  $54 = $1 + 24 | 0;
  HEAP32[$53 >> 2] = HEAP32[$54 >> 2];
  HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
  HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
  HEAP32[$54 >> 2] = 0;
  HEAP32[$54 + 4 >> 2] = 0;
  HEAP32[$54 + 8 >> 2] = 0;
  $55 = $4 + 36 | 0;
  $56 = $1 + 36 | 0;
  HEAP32[$55 >> 2] = HEAP32[$56 >> 2];
  HEAP32[$55 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
  HEAP32[$55 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
  HEAP32[$56 >> 2] = 0;
  HEAP32[$56 + 4 >> 2] = 0;
  HEAP32[$56 + 8 >> 2] = 0;
  $57 = $4 + 48 | 0;
  $58 = $1 + 48 | 0;
  HEAP32[$57 >> 2] = HEAP32[$58 >> 2];
  HEAP32[$57 + 4 >> 2] = HEAP32[$58 + 4 >> 2];
  HEAP32[$57 + 8 >> 2] = HEAP32[$58 + 8 >> 2];
  HEAP32[$58 >> 2] = 0;
  HEAP32[$58 + 4 >> 2] = 0;
  HEAP32[$58 + 8 >> 2] = 0;
  $59 = $4 + 60 | 0;
  HEAP32[$59 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$59 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$59 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  $62 = $1 + 72 | 0;
  $67 = HEAP32[$62 + 4 >> 2] | 0;
  $68 = $4 + 72 | 0;
  HEAP32[$68 >> 2] = HEAP32[$62 >> 2];
  HEAP32[$68 + 4 >> 2] = $67;
  __ZN6google19CommandLineFlagInfoaSEOS0_($1, $2) | 0;
  __ZN6google19CommandLineFlagInfoaSEOS0_($2, $4) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $80 = _strcmp((HEAP8[$6 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5, (HEAP8[$12 >> 0] | 0) < 0 ? HEAP32[$11 >> 2] | 0 : $11) | 0;
  if (!$80) $$0$i31 = _strcmp((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, (HEAP8[$0 + 11 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0) | 0; else $$0$i31 = $80;
  if (($$0$i31 | 0) >= 0) {
   $$026 = 1;
   STACKTOP = sp;
   return $$026 | 0;
  };
  HEAP32[$4 >> 2] = HEAP32[$0 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  $94 = $4 + 12 | 0;
  $95 = $0 + 12 | 0;
  HEAP32[$94 >> 2] = HEAP32[$95 >> 2];
  HEAP32[$94 + 4 >> 2] = HEAP32[$95 + 4 >> 2];
  HEAP32[$94 + 8 >> 2] = HEAP32[$95 + 8 >> 2];
  HEAP32[$95 >> 2] = 0;
  HEAP32[$95 + 4 >> 2] = 0;
  HEAP32[$95 + 8 >> 2] = 0;
  $96 = $4 + 24 | 0;
  $97 = $0 + 24 | 0;
  HEAP32[$96 >> 2] = HEAP32[$97 >> 2];
  HEAP32[$96 + 4 >> 2] = HEAP32[$97 + 4 >> 2];
  HEAP32[$96 + 8 >> 2] = HEAP32[$97 + 8 >> 2];
  HEAP32[$97 >> 2] = 0;
  HEAP32[$97 + 4 >> 2] = 0;
  HEAP32[$97 + 8 >> 2] = 0;
  $98 = $4 + 36 | 0;
  $99 = $0 + 36 | 0;
  HEAP32[$98 >> 2] = HEAP32[$99 >> 2];
  HEAP32[$98 + 4 >> 2] = HEAP32[$99 + 4 >> 2];
  HEAP32[$98 + 8 >> 2] = HEAP32[$99 + 8 >> 2];
  HEAP32[$99 >> 2] = 0;
  HEAP32[$99 + 4 >> 2] = 0;
  HEAP32[$99 + 8 >> 2] = 0;
  $100 = $4 + 48 | 0;
  $101 = $0 + 48 | 0;
  HEAP32[$100 >> 2] = HEAP32[$101 >> 2];
  HEAP32[$100 + 4 >> 2] = HEAP32[$101 + 4 >> 2];
  HEAP32[$100 + 8 >> 2] = HEAP32[$101 + 8 >> 2];
  HEAP32[$101 >> 2] = 0;
  HEAP32[$101 + 4 >> 2] = 0;
  HEAP32[$101 + 8 >> 2] = 0;
  $102 = $4 + 60 | 0;
  HEAP32[$102 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$102 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$102 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  HEAP32[$11 >> 2] = 0;
  HEAP32[$11 + 4 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  $105 = $0 + 72 | 0;
  $110 = HEAP32[$105 + 4 >> 2] | 0;
  $111 = $4 + 72 | 0;
  HEAP32[$111 >> 2] = HEAP32[$105 >> 2];
  HEAP32[$111 + 4 >> 2] = $110;
  __ZN6google19CommandLineFlagInfoaSEOS0_($0, $1) | 0;
  __ZN6google19CommandLineFlagInfoaSEOS0_($1, $4) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($102);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($100);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($98);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($96);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($94);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $$026 = 2;
  STACKTOP = sp;
  return $$026 | 0;
 }
 if ($50) {
  HEAP32[$4 >> 2] = HEAP32[$0 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  $115 = $4 + 12 | 0;
  $116 = $0 + 12 | 0;
  HEAP32[$115 >> 2] = HEAP32[$116 >> 2];
  HEAP32[$115 + 4 >> 2] = HEAP32[$116 + 4 >> 2];
  HEAP32[$115 + 8 >> 2] = HEAP32[$116 + 8 >> 2];
  HEAP32[$116 >> 2] = 0;
  HEAP32[$116 + 4 >> 2] = 0;
  HEAP32[$116 + 8 >> 2] = 0;
  $117 = $4 + 24 | 0;
  $118 = $0 + 24 | 0;
  HEAP32[$117 >> 2] = HEAP32[$118 >> 2];
  HEAP32[$117 + 4 >> 2] = HEAP32[$118 + 4 >> 2];
  HEAP32[$117 + 8 >> 2] = HEAP32[$118 + 8 >> 2];
  HEAP32[$118 >> 2] = 0;
  HEAP32[$118 + 4 >> 2] = 0;
  HEAP32[$118 + 8 >> 2] = 0;
  $119 = $4 + 36 | 0;
  $120 = $0 + 36 | 0;
  HEAP32[$119 >> 2] = HEAP32[$120 >> 2];
  HEAP32[$119 + 4 >> 2] = HEAP32[$120 + 4 >> 2];
  HEAP32[$119 + 8 >> 2] = HEAP32[$120 + 8 >> 2];
  HEAP32[$120 >> 2] = 0;
  HEAP32[$120 + 4 >> 2] = 0;
  HEAP32[$120 + 8 >> 2] = 0;
  $121 = $4 + 48 | 0;
  $122 = $0 + 48 | 0;
  HEAP32[$121 >> 2] = HEAP32[$122 >> 2];
  HEAP32[$121 + 4 >> 2] = HEAP32[$122 + 4 >> 2];
  HEAP32[$121 + 8 >> 2] = HEAP32[$122 + 8 >> 2];
  HEAP32[$122 >> 2] = 0;
  HEAP32[$122 + 4 >> 2] = 0;
  HEAP32[$122 + 8 >> 2] = 0;
  $123 = $4 + 60 | 0;
  HEAP32[$123 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$123 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$123 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  HEAP32[$11 >> 2] = 0;
  HEAP32[$11 + 4 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  $126 = $0 + 72 | 0;
  $131 = HEAP32[$126 + 4 >> 2] | 0;
  $132 = $4 + 72 | 0;
  HEAP32[$132 >> 2] = HEAP32[$126 >> 2];
  HEAP32[$132 + 4 >> 2] = $131;
  __ZN6google19CommandLineFlagInfoaSEOS0_($0, $2) | 0;
  __ZN6google19CommandLineFlagInfoaSEOS0_($2, $4) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($123);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($121);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($119);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($117);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($115);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $$026 = 1;
  STACKTOP = sp;
  return $$026 | 0;
 };
 HEAP32[$4 >> 2] = HEAP32[$0 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $136 = $4 + 12 | 0;
 $137 = $0 + 12 | 0;
 HEAP32[$136 >> 2] = HEAP32[$137 >> 2];
 HEAP32[$136 + 4 >> 2] = HEAP32[$137 + 4 >> 2];
 HEAP32[$136 + 8 >> 2] = HEAP32[$137 + 8 >> 2];
 HEAP32[$137 >> 2] = 0;
 HEAP32[$137 + 4 >> 2] = 0;
 HEAP32[$137 + 8 >> 2] = 0;
 $138 = $4 + 24 | 0;
 $139 = $0 + 24 | 0;
 HEAP32[$138 >> 2] = HEAP32[$139 >> 2];
 HEAP32[$138 + 4 >> 2] = HEAP32[$139 + 4 >> 2];
 HEAP32[$138 + 8 >> 2] = HEAP32[$139 + 8 >> 2];
 HEAP32[$139 >> 2] = 0;
 HEAP32[$139 + 4 >> 2] = 0;
 HEAP32[$139 + 8 >> 2] = 0;
 $140 = $4 + 36 | 0;
 $141 = $0 + 36 | 0;
 HEAP32[$140 >> 2] = HEAP32[$141 >> 2];
 HEAP32[$140 + 4 >> 2] = HEAP32[$141 + 4 >> 2];
 HEAP32[$140 + 8 >> 2] = HEAP32[$141 + 8 >> 2];
 HEAP32[$141 >> 2] = 0;
 HEAP32[$141 + 4 >> 2] = 0;
 HEAP32[$141 + 8 >> 2] = 0;
 $142 = $4 + 48 | 0;
 $143 = $0 + 48 | 0;
 HEAP32[$142 >> 2] = HEAP32[$143 >> 2];
 HEAP32[$142 + 4 >> 2] = HEAP32[$143 + 4 >> 2];
 HEAP32[$142 + 8 >> 2] = HEAP32[$143 + 8 >> 2];
 HEAP32[$143 >> 2] = 0;
 HEAP32[$143 + 4 >> 2] = 0;
 HEAP32[$143 + 8 >> 2] = 0;
 $144 = $4 + 60 | 0;
 HEAP32[$144 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$144 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
 HEAP32[$144 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 $147 = $0 + 72 | 0;
 $152 = HEAP32[$147 + 4 >> 2] | 0;
 $153 = $4 + 72 | 0;
 HEAP32[$153 >> 2] = HEAP32[$147 >> 2];
 HEAP32[$153 + 4 >> 2] = $152;
 __ZN6google19CommandLineFlagInfoaSEOS0_($0, $1) | 0;
 __ZN6google19CommandLineFlagInfoaSEOS0_($1, $4) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($144);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($142);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($140);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($138);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($136);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $165 = _strcmp((HEAP8[$32 >> 0] | 0) < 0 ? HEAP32[$31 >> 2] | 0 : $31, (HEAP8[$6 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5) | 0;
 if (!$165) $$0$i34 = _strcmp((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2, (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1) | 0; else $$0$i34 = $165;
 if (($$0$i34 | 0) >= 0) {
  $$026 = 1;
  STACKTOP = sp;
  return $$026 | 0;
 };
 HEAP32[$4 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $179 = $4 + 12 | 0;
 $180 = $1 + 12 | 0;
 HEAP32[$179 >> 2] = HEAP32[$180 >> 2];
 HEAP32[$179 + 4 >> 2] = HEAP32[$180 + 4 >> 2];
 HEAP32[$179 + 8 >> 2] = HEAP32[$180 + 8 >> 2];
 HEAP32[$180 >> 2] = 0;
 HEAP32[$180 + 4 >> 2] = 0;
 HEAP32[$180 + 8 >> 2] = 0;
 $181 = $4 + 24 | 0;
 $182 = $1 + 24 | 0;
 HEAP32[$181 >> 2] = HEAP32[$182 >> 2];
 HEAP32[$181 + 4 >> 2] = HEAP32[$182 + 4 >> 2];
 HEAP32[$181 + 8 >> 2] = HEAP32[$182 + 8 >> 2];
 HEAP32[$182 >> 2] = 0;
 HEAP32[$182 + 4 >> 2] = 0;
 HEAP32[$182 + 8 >> 2] = 0;
 $183 = $4 + 36 | 0;
 $184 = $1 + 36 | 0;
 HEAP32[$183 >> 2] = HEAP32[$184 >> 2];
 HEAP32[$183 + 4 >> 2] = HEAP32[$184 + 4 >> 2];
 HEAP32[$183 + 8 >> 2] = HEAP32[$184 + 8 >> 2];
 HEAP32[$184 >> 2] = 0;
 HEAP32[$184 + 4 >> 2] = 0;
 HEAP32[$184 + 8 >> 2] = 0;
 $185 = $4 + 48 | 0;
 $186 = $1 + 48 | 0;
 HEAP32[$185 >> 2] = HEAP32[$186 >> 2];
 HEAP32[$185 + 4 >> 2] = HEAP32[$186 + 4 >> 2];
 HEAP32[$185 + 8 >> 2] = HEAP32[$186 + 8 >> 2];
 HEAP32[$186 >> 2] = 0;
 HEAP32[$186 + 4 >> 2] = 0;
 HEAP32[$186 + 8 >> 2] = 0;
 $187 = $4 + 60 | 0;
 HEAP32[$187 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$187 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$187 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 $190 = $1 + 72 | 0;
 $195 = HEAP32[$190 + 4 >> 2] | 0;
 $196 = $4 + 72 | 0;
 HEAP32[$196 >> 2] = HEAP32[$190 >> 2];
 HEAP32[$196 + 4 >> 2] = $195;
 __ZN6google19CommandLineFlagInfoaSEOS0_($1, $2) | 0;
 __ZN6google19CommandLineFlagInfoaSEOS0_($2, $4) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($187);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($185);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($183);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($181);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($179);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $$026 = 2;
 STACKTOP = sp;
 return $$026 | 0;
}

function __ZL13propagatemarkP12global_State($0) {
 $0 = $0 | 0;
 var $$$031$i = 0, $$0 = 0, $$02731$i = 0, $$030$i = 0, $$031$lcssa$i = 0, $$03138$i = 0, $$032$lcssa$i = 0, $$03235$i = 0, $$039$i = 0, $$044$i = 0, $$0657275$i = 0, $$0667176$i = 0, $$0667177$i = 0, $$13334$i = 0, $$142$i = 0, $$240$i = 0, $$339$i = 0, $$in$i = 0, $$phi$trans$insert$i = 0, $$pr$pre$i = 0, $$pr82$i = 0, $$pre$phi$iZ2D = 0, $$pre$phi77Z2D = 0, $$pre$phiZ2D = 0, $$pre72$pre$phiZZ2D = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $106 = 0, $108 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $124 = 0, $129 = 0, $13 = 0, $132 = 0, $156 = 0, $162 = 0, $166 = 0, $167 = 0, $173 = 0, $180 = 0, $183 = 0, $188 = 0, $190 = 0, $192 = 0, $2 = 0, $202 = 0, $208 = 0, $210 = 0, $220 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $233 = 0, $237 = 0, $238 = 0, $244 = 0, $249 = 0, $251 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $270 = 0, $271 = 0, $284 = 0, $286 = 0, $291 = 0, $292 = 0, $294 = 0, $295 = 0, $296 = 0, $298 = 0, $299 = 0, $3 = 0, $304 = 0, $311 = 0, $312 = 0, $313 = 0, $315 = 0, $318 = 0, $32 = 0, $320 = 0, $327 = 0, $328 = 0, $329 = 0, $331 = 0, $334 = 0, $34 = 0, $342 = 0, $345 = 0, $347 = 0, $35 = 0, $354 = 0, $362 = 0, $364 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $39 = 0, $48 = 0, $51 = 0, $53 = 0, $55 = 0, $60 = 0, $66 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $75 = 0, $79 = 0, $84 = 0, $89 = 0, $91 = 0, $94 = 0, $99 = 0, label = 0;
 $1 = $0 + 36 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $2 + 5 | 0;
 HEAP8[$3 >> 0] = HEAPU8[$3 >> 0] | 4;
 switch (HEAP8[$2 + 4 >> 0] | 0) {
 case 5:
  {
   $10 = $2 + 24 | 0;
   HEAP32[$1 >> 2] = HEAP32[$10 >> 2];
   $12 = $2 + 8 | 0;
   $13 = HEAP32[$12 >> 2] | 0;
   do if (!$13) {
    $$0667176$i = 0;
    $368 = 0;
    label = 13;
   } else {
    if (!(HEAP8[$13 + 5 >> 0] & 3)) $$pr82$i = $13; else {
     __ZL16reallymarkobjectP12global_StateP8GCObject($0, $13);
     $$pr$pre$i = HEAP32[$12 >> 2] | 0;
     if (!$$pr$pre$i) {
      $$0667176$i = 0;
      $368 = 0;
      label = 13;
      break;
     } else $$pr82$i = $$pr$pre$i;
    }
    if (!(HEAP8[$$pr82$i + 6 >> 0] & 8)) {
     $26 = __Z10luaT_gettmP5Table3TMSP7TString($$pr82$i, 3, HEAP32[$0 + 172 >> 2] | 0) | 0;
     if (!$26) {
      $$0667176$i = 0;
      $368 = 0;
      label = 13;
     } else if ((HEAP32[$26 + 4 >> 2] | 0) == 4) {
      $32 = (HEAP32[$26 >> 2] | 0) + 16 | 0;
      $34 = (_strchr($32, 107) | 0) != 0;
      $35 = $34 & 1;
      $37 = (_strchr($32, 118) | 0) != 0;
      if ($34 | $37) {
       $39 = $2 + 5 | 0;
       HEAP8[$39 >> 0] = ($37 & 1) << 4 | $35 << 3 | HEAPU8[$39 >> 0] & 231;
       $48 = $0 + 44 | 0;
       HEAP32[$10 >> 2] = HEAP32[$48 >> 2];
       HEAP32[$48 >> 2] = $2;
      }
      if ($34 & $37) {
       $$pre72$pre$phiZZ2D = $2 + 7 | 0;
       label = 51;
       break;
      } else if ($37) {
       $$0657275$i = 1;
       $$0667177$i = $35;
       $369 = $34;
       $370 = 1;
       label = 19;
       break;
      } else {
       $$0667176$i = $35;
       $368 = $34;
       label = 13;
       break;
      }
     } else {
      $$0667176$i = 0;
      $368 = 0;
      label = 13;
     }
    } else {
     $$0667176$i = 0;
     $368 = 0;
     label = 13;
    }
   } while (0);
   if ((label | 0) == 13) {
    $51 = HEAP32[$2 + 28 >> 2] | 0;
    if (!$51) {
     $$0657275$i = 0;
     $$0667177$i = $$0667176$i;
     $369 = $368;
     $370 = 0;
     label = 19;
    } else {
     $53 = $2 + 12 | 0;
     $$in$i = $51;
     do {
      $$in$i = $$in$i + -1 | 0;
      $55 = HEAP32[$53 >> 2] | 0;
      if ((HEAP32[$55 + ($$in$i << 3) + 4 >> 2] | 0) > 3) {
       $60 = HEAP32[$55 + ($$in$i << 3) >> 2] | 0;
       if (HEAP8[$60 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $60);
      }
     } while (($$in$i | 0) != 0);
     $$0657275$i = 0;
     $$0667177$i = $$0667176$i;
     $369 = $368;
     $370 = 0;
     label = 19;
    }
   }
   if ((label | 0) == 19) {
    $66 = $2 + 7 | 0;
    $70 = (1 << HEAPU8[$66 >> 0]) + -1 | 0;
    $71 = $2 + 16 | 0;
    L28 : do if ($369) {
     if ($370) {
      $91 = $70;
      while (1) {
       $89 = HEAP32[$71 >> 2] | 0;
       if (!(HEAP32[$89 + ($91 * 20 | 0) + 4 >> 2] | 0)) {
        $94 = $89 + ($91 * 20 | 0) + 12 | 0;
        if ((HEAP32[$94 >> 2] | 0) > 3) HEAP32[$94 >> 2] = 11;
       }
       if (!$91) break L28; else $91 = $91 + -1 | 0;
      }
     } else $74 = $70;
     while (1) {
      $72 = HEAP32[$71 >> 2] | 0;
      $75 = HEAP32[$72 + ($74 * 20 | 0) + 4 >> 2] | 0;
      if (!$75) {
       $84 = $72 + ($74 * 20 | 0) + 12 | 0;
       if ((HEAP32[$84 >> 2] | 0) > 3) HEAP32[$84 >> 2] = 11;
      } else if (($75 | 0) > 3) {
       $79 = HEAP32[$72 + ($74 * 20 | 0) >> 2] | 0;
       if (HEAP8[$79 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $79);
      }
      if (!$74) break; else $74 = $74 + -1 | 0;
     }
    } else {
     if ($370) {
      $101 = $70;
      while (1) {
       $99 = HEAP32[$71 >> 2] | 0;
       $104 = $99 + ($101 * 20 | 0) + 12 | 0;
       $106 = (HEAP32[$104 >> 2] | 0) > 3;
       if (!(HEAP32[$99 + ($101 * 20 | 0) + 4 >> 2] | 0)) {
        if ($106) HEAP32[$104 >> 2] = 11;
       } else if ($106) {
        $108 = HEAP32[$99 + ($101 * 20 | 0) + 8 >> 2] | 0;
        if (HEAP8[$108 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $108);
       }
       if (!$101) break L28; else $101 = $101 + -1 | 0;
      }
     } else $117 = $70;
     while (1) {
      $115 = HEAP32[$71 >> 2] | 0;
      $116 = $115 + ($117 * 20 | 0) + 4 | 0;
      $118 = HEAP32[$116 >> 2] | 0;
      $120 = $115 + ($117 * 20 | 0) + 12 | 0;
      $122 = (HEAP32[$120 >> 2] | 0) > 3;
      if (!$118) {
       if ($122) HEAP32[$120 >> 2] = 11;
      } else {
       if ($122) {
        $124 = HEAP32[$115 + ($117 * 20 | 0) + 8 >> 2] | 0;
        if (!(HEAP8[$124 + 5 >> 0] & 3)) $129 = $118; else {
         __ZL16reallymarkobjectP12global_StateP8GCObject($0, $124);
         $129 = HEAP32[$116 >> 2] | 0;
        }
       } else $129 = $118;
       if (($129 | 0) > 3) {
        $132 = HEAP32[$115 + ($117 * 20 | 0) >> 2] | 0;
        if (HEAP8[$132 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $132);
       }
      }
      if (!$117) break; else $117 = $117 + -1 | 0;
     }
    } while (0);
    if (!($$0657275$i | $$0667177$i)) $$pre$phiZ2D = $66; else {
     $$pre72$pre$phiZZ2D = $66;
     label = 51;
    }
   }
   if ((label | 0) == 51) {
    HEAP8[$3 >> 0] = HEAPU8[$3 >> 0] & 251;
    $$pre$phiZ2D = $$pre72$pre$phiZZ2D;
   }
   $$0 = (HEAP32[$2 + 28 >> 2] << 3) + 32 + (20 << HEAPU8[$$pre$phiZ2D >> 0]) | 0;
   return $$0 | 0;
  }
 case 6:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 + 8 >> 2];
   $156 = HEAP32[$2 + 12 >> 2] | 0;
   if (HEAP8[$156 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $156);
   $162 = HEAP16[$2 + 6 >> 1] | 0;
   $166 = ($162 & 65535) >>> 8 & 255;
   if (!(($162 & 255) << 24 >> 24)) {
    $183 = HEAP32[$2 + 16 >> 2] | 0;
    if (!(HEAP8[$183 + 5 >> 0] & 3)) {
     $$pre$phi$iZ2D = $2 + 7 | 0;
     $188 = $166;
    } else {
     __ZL16reallymarkobjectP12global_StateP8GCObject($0, $183);
     $$phi$trans$insert$i = $2 + 7 | 0;
     $$pre$phi$iZ2D = $$phi$trans$insert$i;
     $188 = HEAP8[$$phi$trans$insert$i >> 0] | 0;
    }
    if ($188 << 24 >> 24) {
     $190 = $2 + 20 | 0;
     $$030$i = 0;
     do {
      $192 = HEAP32[$190 + ($$030$i << 2) >> 2] | 0;
      if (HEAP8[$192 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $192);
      $$030$i = $$030$i + 1 | 0;
     } while (($$030$i | 0) < (HEAPU8[$$pre$phi$iZ2D >> 0] | 0));
    }
   } else {
    $167 = $2 + 7 | 0;
    if ($166 << 24 >> 24) {
     $$02731$i = 0;
     $371 = $166;
     while (1) {
      if ((HEAP32[$2 + 20 + ($$02731$i << 3) + 4 >> 2] | 0) > 3) {
       $173 = HEAP32[$2 + 20 + ($$02731$i << 3) >> 2] | 0;
       if (!(HEAP8[$173 + 5 >> 0] & 3)) $180 = $371; else {
        __ZL16reallymarkobjectP12global_StateP8GCObject($0, $173);
        $180 = HEAP8[$167 >> 0] | 0;
       }
      } else $180 = $371;
      $$02731$i = $$02731$i + 1 | 0;
      if (($$02731$i | 0) >= ($180 & 255 | 0)) break; else $371 = $180;
     }
    }
   }
   $202 = HEAP16[$2 + 6 >> 1] | 0;
   $$0 = ((($202 & 65535) >>> 8 & 65535) << (($202 & 255) << 24 >> 24 == 0 ? 2 : 3)) + 20 | 0;
   return $$0 | 0;
  }
 case 8:
  {
   $208 = $2 + 92 | 0;
   HEAP32[$1 >> 2] = HEAP32[$208 >> 2];
   $210 = $0 + 40 | 0;
   HEAP32[$208 >> 2] = HEAP32[$210 >> 2];
   HEAP32[$210 >> 2] = $2;
   HEAP8[$3 >> 0] = HEAPU8[$3 >> 0] & 251;
   if ((HEAP32[$2 + 76 >> 2] | 0) > 3) {
    $220 = HEAP32[$2 + 72 >> 2] | 0;
    if (HEAP8[$220 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $220);
   }
   $225 = $2 + 8 | 0;
   $226 = HEAP32[$225 >> 2] | 0;
   $227 = $2 + 40 | 0;
   $228 = HEAP32[$227 >> 2] | 0;
   $229 = $2 + 20 | 0;
   $230 = HEAP32[$229 >> 2] | 0;
   if ($228 >>> 0 > $230 >>> 0) $$031$lcssa$i = $226; else {
    $$03138$i = $226;
    $$039$i = $228;
    while (1) {
     $233 = HEAP32[$$039$i + 8 >> 2] | 0;
     $$$031$i = $$03138$i >>> 0 < $233 >>> 0 ? $233 : $$03138$i;
     $$039$i = $$039$i + 24 | 0;
     if ($$039$i >>> 0 > $230 >>> 0) {
      $$031$lcssa$i = $$$031$i;
      break;
     } else $$03138$i = $$$031$i;
    }
   }
   $237 = $2 + 32 | 0;
   $238 = HEAP32[$237 >> 2] | 0;
   if ($238 >>> 0 < $226 >>> 0) {
    $$03235$i = $238;
    $372 = $226;
    while (1) {
     if ((HEAP32[$$03235$i + 4 >> 2] | 0) > 3) {
      $244 = HEAP32[$$03235$i >> 2] | 0;
      if (!(HEAP8[$244 + 5 >> 0] & 3)) $251 = $372; else {
       __ZL16reallymarkobjectP12global_StateP8GCObject($0, $244);
       $251 = HEAP32[$225 >> 2] | 0;
      }
     } else $251 = $372;
     $249 = $$03235$i + 8 | 0;
     if ($249 >>> 0 < $251 >>> 0) {
      $$03235$i = $249;
      $372 = $251;
     } else {
      $$032$lcssa$i = $249;
      break;
     }
    }
   } else $$032$lcssa$i = $238;
   if ($$032$lcssa$i >>> 0 <= $$031$lcssa$i >>> 0) {
    $$13334$i = $$032$lcssa$i;
    do {
     HEAP32[$$13334$i + 4 >> 2] = 0;
     $$13334$i = $$13334$i + 8 | 0;
    } while ($$13334$i >>> 0 <= $$031$lcssa$i >>> 0);
   }
   $257 = $$031$lcssa$i - (HEAP32[$237 >> 2] | 0) | 0;
   $258 = $2 + 48 | 0;
   $259 = HEAP32[$258 >> 2] | 0;
   if (($259 | 0) > 2e4) $$pre$phi77Z2D = $2 + 44 | 0; else {
    if (($259 | 0) > 16 ? ((((HEAP32[$229 >> 2] | 0) - (HEAP32[$227 >> 2] | 0) | 0) / 24 | 0) << 2 | 0) < ($259 | 0) : 0) __Z14luaD_reallocCIP9lua_Statei($2, ($259 | 0) / 2 | 0);
    $270 = $2 + 44 | 0;
    $271 = HEAP32[$270 >> 2] | 0;
    if (($257 >> 1 | 0) < ($271 | 0) & ($271 | 0) > 90) {
     __Z17luaD_reallocstackP9lua_Statei($2, ($271 | 0) / 2 | 0);
     $$pre$phi77Z2D = $270;
    } else $$pre$phi77Z2D = $270;
   }
   $$0 = (HEAP32[$$pre$phi77Z2D >> 2] << 3) + 104 + ((HEAP32[$258 >> 2] | 0) * 24 | 0) | 0;
   return $$0 | 0;
  }
 case 9:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 + 68 >> 2];
   $284 = HEAP32[$2 + 32 >> 2] | 0;
   if ($284 | 0) {
    $286 = $284 + 5 | 0;
    HEAP8[$286 >> 0] = HEAPU8[$286 >> 0] & 252;
   }
   $291 = $2 + 40 | 0;
   $292 = HEAP32[$291 >> 2] | 0;
   if (($292 | 0) > 0) {
    $294 = $2 + 8 | 0;
    $$044$i = 0;
    $373 = $292;
    while (1) {
     $299 = HEAP32[$294 >> 2] | 0;
     if ((HEAP32[$299 + ($$044$i << 3) + 4 >> 2] | 0) > 3) {
      $304 = HEAP32[$299 + ($$044$i << 3) >> 2] | 0;
      if (!(HEAP8[$304 + 5 >> 0] & 3)) $311 = $373; else {
       __ZL16reallymarkobjectP12global_StateP8GCObject($0, $304);
       $311 = HEAP32[$291 >> 2] | 0;
      }
     } else $311 = $373;
     $$044$i = $$044$i + 1 | 0;
     if (($$044$i | 0) >= ($311 | 0)) break; else $373 = $311;
    }
   }
   $295 = $2 + 36 | 0;
   $296 = HEAP32[$295 >> 2] | 0;
   if (($296 | 0) > 0) {
    $298 = $2 + 28 | 0;
    $$142$i = 0;
    $374 = $296;
    while (1) {
     $318 = HEAP32[(HEAP32[$298 >> 2] | 0) + ($$142$i << 2) >> 2] | 0;
     if (!$318) $327 = $374; else {
      $320 = $318 + 5 | 0;
      HEAP8[$320 >> 0] = HEAPU8[$320 >> 0] & 252;
      $327 = HEAP32[$295 >> 2] | 0;
     }
     $$142$i = $$142$i + 1 | 0;
     if (($$142$i | 0) >= ($327 | 0)) break; else $374 = $327;
    }
   }
   $312 = $2 + 52 | 0;
   $313 = HEAP32[$312 >> 2] | 0;
   if (($313 | 0) > 0) {
    $315 = $2 + 16 | 0;
    $$240$i = 0;
    $376 = $313;
    while (1) {
     $334 = HEAP32[(HEAP32[$315 >> 2] | 0) + ($$240$i << 2) >> 2] | 0;
     if (!$334) $342 = $376; else if (!(HEAP8[$334 + 5 >> 0] & 3)) $342 = $376; else {
      __ZL16reallymarkobjectP12global_StateP8GCObject($0, $334);
      $342 = HEAP32[$312 >> 2] | 0;
     }
     $$240$i = $$240$i + 1 | 0;
     if (($$240$i | 0) >= ($342 | 0)) {
      $375 = $342;
      break;
     } else $376 = $342;
    }
   } else $375 = $313;
   $328 = $2 + 56 | 0;
   $329 = HEAP32[$328 >> 2] | 0;
   if (($329 | 0) > 0) {
    $331 = $2 + 24 | 0;
    $$339$i = 0;
    $377 = $329;
    while (1) {
     $345 = HEAP32[(HEAP32[$331 >> 2] | 0) + ($$339$i * 12 | 0) >> 2] | 0;
     if (!$345) $354 = $377; else {
      $347 = $345 + 5 | 0;
      HEAP8[$347 >> 0] = HEAPU8[$347 >> 0] & 252;
      $354 = HEAP32[$328 >> 2] | 0;
     }
     $$339$i = $$339$i + 1 | 0;
     if (($$339$i | 0) >= ($354 | 0)) break; else $377 = $354;
    }
    $362 = $354;
    $364 = HEAP32[$312 >> 2] | 0;
   } else {
    $362 = $329;
    $364 = $375;
   }
   $$0 = (HEAP32[$291 >> 2] << 3) + 76 + ($362 * 12 | 0) + ($364 + (HEAP32[$2 + 44 >> 2] | 0) + (HEAP32[$2 + 48 >> 2] | 0) + (HEAP32[$295 >> 2] | 0) << 2) | 0;
   return $$0 | 0;
  }
 default:
  {
   $$0 = 0;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZL7exp2regP9FuncStateP7expdesci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i79 = 0, $$0$i$i103 = 0, $$0$i$i103$us = 0, $$0$i$i68 = 0, $$0$i$i68$us = 0, $$0$i$i71 = 0, $$0$i$i78 = 0, $$012$i = 0, $$012$i$us = 0, $$012$i87 = 0, $$012$i87$us = 0, $$043 = 0, $$0913$i = 0, $$0913$i60 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i$i = 0, $$idx$val$idx$val$i$i76 = 0, $$idx10$val$idx$val$i = 0, $$idx10$val$idx$val$i58 = 0, $$pre$phi128Z2D = 0, $$pre$phi130Z2D = 0, $101 = 0, $102 = 0, $107 = 0, $11 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $122 = 0, $127 = 0, $132 = 0, $137 = 0, $139 = 0, $14 = 0, $141 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $148 = 0, $153 = 0, $154 = 0, $160 = 0, $162 = 0, $167 = 0, $179 = 0, $180 = 0, $19 = 0, $190 = 0, $191 = 0, $193 = 0, $198 = 0, $199 = 0, $205 = 0, $217 = 0, $218 = 0, $227 = 0, $232 = 0, $237 = 0, $239 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $246 = 0, $25 = 0, $251 = 0, $252 = 0, $258 = 0, $260 = 0, $265 = 0, $277 = 0, $278 = 0, $288 = 0, $289 = 0, $29 = 0, $291 = 0, $296 = 0, $297 = 0, $30 = 0, $303 = 0, $31 = 0, $315 = 0, $316 = 0, $325 = 0, $330 = 0, $335 = 0, $34 = 0, $37 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $56 = 0, $62 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $79 = 0, $82 = 0, $83 = 0, $85 = 0, $9 = 0, $90 = 0, $95 = 0, $99 = 0, $storemerge$i = 0, $storemerge$i106 = 0, label = 0, $$012$i87$us$looptemp = 0, $$012$i87$looptemp = 0, $$012$i$us$looptemp = 0, $$012$i$looptemp = 0;
 __ZL13discharge2regP9FuncStateP7expdesci($0, $1, $2);
 $5 = $1 + 12 | 0;
 do if ((HEAP32[$1 >> 2] | 0) == 10) {
  $7 = HEAP32[$1 + 4 >> 2] | 0;
  if (($7 | 0) != -1) {
   $9 = HEAP32[$5 >> 2] | 0;
   if (($9 | 0) == -1) {
    HEAP32[$5 >> 2] = $7;
    break;
   }
   $$idx$val$idx$val$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
   $$0$i = $9;
   while (1) {
    $11 = $$idx$val$idx$val$i + ($$0$i << 2) | 0;
    $12 = HEAP32[$11 >> 2] | 0;
    $14 = ($12 >>> 14) + -131071 | 0;
    $$0$i$i = ($14 | 0) == -1 ? -1 : $$0$i + 1 + $14 | 0;
    if (($$0$i$i | 0) == -1) break; else $$0$i = $$0$i$i;
   }
   $19 = $7 + ~$$0$i | 0;
   if (((($19 | 0) > -1 ? $19 : 0 - $19 | 0) | 0) > 131071) {
    __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
    $25 = HEAP32[$11 >> 2] | 0;
   } else $25 = $12;
   HEAP32[$11 >> 2] = $25 & 16383 | ($19 << 14) + 2147467264;
  }
 } while (0);
 $29 = HEAP32[$5 >> 2] | 0;
 $30 = $1 + 16 | 0;
 $31 = HEAP32[$30 >> 2] | 0;
 if (($29 | 0) == ($31 | 0)) {
  HEAP32[$5 >> 2] = -1;
  HEAP32[$30 >> 2] = -1;
  $335 = $1 + 4 | 0;
  HEAP32[$335 >> 2] = $2;
  HEAP32[$1 >> 2] = 12;
  return;
 }
 L17 : do if (($29 | 0) == -1) label = 18; else {
  $$idx10$val$idx$val$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
  $$0913$i = $29;
  while (1) {
   $34 = $$idx10$val$idx$val$i + ($$0913$i << 2) | 0;
   if (($$0913$i | 0) > 0) {
    $37 = HEAP32[$34 + -4 >> 2] | 0;
    if ((HEAP8[87697 + ($37 & 63) >> 0] | 0) < 0) $43 = $37; else label = 15;
   } else label = 15;
   if ((label | 0) == 15) {
    label = 0;
    $43 = HEAP32[$34 >> 2] | 0;
   }
   if (($43 & 63 | 0) != 27) {
    label = 25;
    break L17;
   }
   $47 = ((HEAP32[$34 >> 2] | 0) >>> 14) + -131071 | 0;
   $$0913$i = ($47 | 0) == -1 ? -1 : $$0913$i + 1 + $47 | 0;
   if (($$0913$i | 0) == -1) {
    label = 18;
    break;
   }
  }
 } while (0);
 L27 : do if ((label | 0) == 18) if (($31 | 0) == -1) {
  $$0 = -1;
  $$043 = -1;
 } else {
  $$idx10$val$idx$val$i58 = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
  $$0913$i60 = $31;
  while (1) {
   $53 = $$idx10$val$idx$val$i58 + ($$0913$i60 << 2) | 0;
   if (($$0913$i60 | 0) > 0) {
    $56 = HEAP32[$53 + -4 >> 2] | 0;
    if ((HEAP8[87697 + ($56 & 63) >> 0] | 0) < 0) $62 = $56; else label = 22;
   } else label = 22;
   if ((label | 0) == 22) {
    label = 0;
    $62 = HEAP32[$53 >> 2] | 0;
   }
   if (($62 & 63 | 0) != 27) {
    label = 25;
    break L27;
   }
   $66 = ((HEAP32[$53 >> 2] | 0) >>> 14) + -131071 | 0;
   $$0913$i60 = ($66 | 0) == -1 ? -1 : $$0913$i60 + 1 + $66 | 0;
   if (($$0913$i60 | 0) == -1) {
    $$0 = -1;
    $$043 = -1;
    break;
   }
  }
 } while (0);
 do if ((label | 0) == 25) {
  if ((HEAP32[$1 >> 2] | 0) == 10) {
   $$pre$phi128Z2D = $0 + 12 | 0;
   $$pre$phi130Z2D = $0 + 32 | 0;
   $115 = -1;
  } else {
   $73 = $0 + 32 | 0;
   $74 = HEAP32[$73 >> 2] | 0;
   HEAP32[$73 >> 2] = -1;
   $75 = $0 + 12 | 0;
   $79 = __ZL9luaK_codeP9FuncStateji($0, 2147450902, HEAP32[(HEAP32[$75 >> 2] | 0) + 8 >> 2] | 0) | 0;
   if (($74 | 0) == -1) {
    $$pre$phi128Z2D = $75;
    $$pre$phi130Z2D = $73;
    $115 = $79;
   } else if (($79 | 0) == -1) {
    $$pre$phi128Z2D = $75;
    $$pre$phi130Z2D = $73;
    $115 = $74;
   } else {
    $$idx$val$idx$val$i$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
    $$0$i$i71 = $79;
    while (1) {
     $82 = $$idx$val$idx$val$i$i + ($$0$i$i71 << 2) | 0;
     $83 = HEAP32[$82 >> 2] | 0;
     $85 = ($83 >>> 14) + -131071 | 0;
     $$0$i$i$i = ($85 | 0) == -1 ? -1 : $$0$i$i71 + 1 + $85 | 0;
     if (($$0$i$i$i | 0) == -1) break; else $$0$i$i71 = $$0$i$i$i;
    }
    $90 = $74 + ~$$0$i$i71 | 0;
    if (((($90 | 0) > -1 ? $90 : 0 - $90 | 0) | 0) > 131071) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$75 >> 2] | 0, 89696);
     $95 = HEAP32[$82 >> 2] | 0;
    } else $95 = $83;
    HEAP32[$82 >> 2] = $95 & 16383 | ($90 << 14) + 2147467264;
    $$pre$phi128Z2D = $75;
    $$pre$phi130Z2D = $73;
    $115 = $79;
   }
  }
  $99 = $0 + 24 | 0;
  $101 = $0 + 28 | 0;
  HEAP32[$101 >> 2] = HEAP32[$99 >> 2];
  $102 = $2 << 6;
  $107 = __ZL9luaK_codeP9FuncStateji($0, $102 | 16386, HEAP32[(HEAP32[$$pre$phi128Z2D >> 2] | 0) + 8 >> 2] | 0) | 0;
  HEAP32[$101 >> 2] = HEAP32[$99 >> 2];
  $113 = __ZL9luaK_codeP9FuncStateji($0, $102 | 8388610, HEAP32[(HEAP32[$$pre$phi128Z2D >> 2] | 0) + 8 >> 2] | 0) | 0;
  HEAP32[$101 >> 2] = HEAP32[$99 >> 2];
  if (($115 | 0) == -1) {
   $$0 = $107;
   $$043 = $113;
  } else {
   $117 = HEAP32[$$pre$phi130Z2D >> 2] | 0;
   if (($117 | 0) == -1) {
    HEAP32[$$pre$phi130Z2D >> 2] = $115;
    $$0 = $107;
    $$043 = $113;
    break;
   }
   $$idx$val$idx$val$i$i76 = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
   $$0$i$i78 = $117;
   while (1) {
    $119 = $$idx$val$idx$val$i$i76 + ($$0$i$i78 << 2) | 0;
    $120 = HEAP32[$119 >> 2] | 0;
    $122 = ($120 >>> 14) + -131071 | 0;
    $$0$i$i$i79 = ($122 | 0) == -1 ? -1 : $$0$i$i78 + 1 + $122 | 0;
    if (($$0$i$i$i79 | 0) == -1) break; else $$0$i$i78 = $$0$i$i$i79;
   }
   $127 = $115 + ~$$0$i$i78 | 0;
   if (((($127 | 0) > -1 ? $127 : 0 - $127 | 0) | 0) > 131071) {
    __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$$pre$phi128Z2D >> 2] | 0, 89696);
    $132 = HEAP32[$119 >> 2] | 0;
   } else $132 = $120;
   HEAP32[$119 >> 2] = $132 & 16383 | ($127 << 14) + 2147467264;
   $$0 = $107;
   $$043 = $113;
  }
 } while (0);
 $137 = HEAP32[$0 + 24 >> 2] | 0;
 HEAP32[$0 + 28 >> 2] = $137;
 $139 = HEAP32[$30 >> 2] | 0;
 L63 : do if (($139 | 0) != -1) {
  $141 = $0 + 12 | 0;
  $143 = $2 << 6;
  $144 = $143 & 16320;
  if (($2 | 0) == 255) {
   $$012$i87$us = $139;
   while (1) {
    $145 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i87$us << 2) | 0;
    $146 = HEAP32[$145 >> 2] | 0;
    $148 = ($146 >>> 14) + -131071 | 0;
    $$012$i87$us$looptemp = $$012$i87$us;
    $$012$i87$us = ($148 | 0) == -1 ? -1 : $$012$i87$us + 1 + $148 | 0;
    if (($$012$i87$us$looptemp | 0) > 0) {
     $153 = $145 + -4 | 0;
     $154 = HEAP32[$153 >> 2] | 0;
     if ((HEAP8[87697 + ($154 & 63) >> 0] | 0) < 0) {
      $$0$i$i103$us = $153;
      $160 = $154;
     } else label = 46;
    } else label = 46;
    if ((label | 0) == 46) {
     label = 0;
     $$0$i$i103$us = $145;
     $160 = $146;
    }
    if (($160 & 63 | 0) == 27) {
     HEAP32[$$0$i$i103$us >> 2] = $160 & 8372224 | $160 >>> 23 << 6 | 26;
     $179 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i87$us$looptemp << 2) | 0;
     $180 = $137 + ~$$012$i87$us$looptemp | 0;
     if (((($180 | 0) > -1 ? $180 : 0 - $180 | 0) | 0) > 131071) __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$141 >> 2] | 0, 89696);
     HEAP32[$179 >> 2] = HEAP32[$179 >> 2] & 16383 | ($180 << 14) + 2147467264;
    } else {
     $162 = $$0 + ~$$012$i87$us$looptemp | 0;
     if (((($162 | 0) > -1 ? $162 : 0 - $162 | 0) | 0) > 131071) {
      __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$141 >> 2] | 0, 89696);
      $167 = HEAP32[$145 >> 2] | 0;
     } else $167 = $146;
     HEAP32[$145 >> 2] = $167 & 16383 | ($162 << 14) + 2147467264;
    }
    if (($$012$i87$us | 0) == -1) break L63;
   }
  } else $$012$i87 = $139;
  do {
   $190 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i87 << 2) | 0;
   $191 = HEAP32[$190 >> 2] | 0;
   $193 = ($191 >>> 14) + -131071 | 0;
   $$012$i87$looptemp = $$012$i87;
   $$012$i87 = ($193 | 0) == -1 ? -1 : $$012$i87 + 1 + $193 | 0;
   if (($$012$i87$looptemp | 0) > 0) {
    $198 = $190 + -4 | 0;
    $199 = HEAP32[$198 >> 2] | 0;
    if ((HEAP8[87697 + ($199 & 63) >> 0] | 0) < 0) {
     $$0$i$i103 = $198;
     $205 = $199;
    } else label = 57;
   } else label = 57;
   if ((label | 0) == 57) {
    label = 0;
    $$0$i$i103 = $190;
    $205 = $191;
   }
   if (($205 & 63 | 0) == 27) {
    if (($205 >>> 23 | 0) == ($2 | 0)) $storemerge$i106 = $205 & 8372224 | $143 | 26; else $storemerge$i106 = $205 & -16321 | $144;
    HEAP32[$$0$i$i103 >> 2] = $storemerge$i106;
    $217 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i87$looptemp << 2) | 0;
    $218 = $137 + ~$$012$i87$looptemp | 0;
    if (((($218 | 0) > -1 ? $218 : 0 - $218 | 0) | 0) > 131071) __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$141 >> 2] | 0, 89696);
    HEAP32[$217 >> 2] = HEAP32[$217 >> 2] & 16383 | ($218 << 14) + 2147467264;
   } else {
    $227 = $$0 + ~$$012$i87$looptemp | 0;
    if (((($227 | 0) > -1 ? $227 : 0 - $227 | 0) | 0) > 131071) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$141 >> 2] | 0, 89696);
     $232 = HEAP32[$190 >> 2] | 0;
    } else $232 = $191;
    HEAP32[$190 >> 2] = $232 & 16383 | ($227 << 14) + 2147467264;
   }
  } while (($$012$i87 | 0) != -1);
 } while (0);
 $237 = HEAP32[$5 >> 2] | 0;
 if (($237 | 0) == -1) {
  HEAP32[$5 >> 2] = -1;
  HEAP32[$30 >> 2] = -1;
  $335 = $1 + 4 | 0;
  HEAP32[$335 >> 2] = $2;
  HEAP32[$1 >> 2] = 12;
  return;
 }
 $239 = $0 + 12 | 0;
 $241 = $2 << 6;
 $242 = $241 & 16320;
 if (($2 | 0) == 255) {
  $$012$i$us = $237;
  do {
   $243 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i$us << 2) | 0;
   $244 = HEAP32[$243 >> 2] | 0;
   $246 = ($244 >>> 14) + -131071 | 0;
   $$012$i$us$looptemp = $$012$i$us;
   $$012$i$us = ($246 | 0) == -1 ? -1 : $$012$i$us + 1 + $246 | 0;
   if (($$012$i$us$looptemp | 0) > 0) {
    $251 = $243 + -4 | 0;
    $252 = HEAP32[$251 >> 2] | 0;
    if ((HEAP8[87697 + ($252 & 63) >> 0] | 0) < 0) {
     $$0$i$i68$us = $251;
     $258 = $252;
    } else label = 73;
   } else label = 73;
   if ((label | 0) == 73) {
    label = 0;
    $$0$i$i68$us = $243;
    $258 = $244;
   }
   if (($258 & 63 | 0) == 27) {
    HEAP32[$$0$i$i68$us >> 2] = $258 & 8372224 | $258 >>> 23 << 6 | 26;
    $277 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i$us$looptemp << 2) | 0;
    $278 = $137 + ~$$012$i$us$looptemp | 0;
    if (((($278 | 0) > -1 ? $278 : 0 - $278 | 0) | 0) > 131071) __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$239 >> 2] | 0, 89696);
    HEAP32[$277 >> 2] = HEAP32[$277 >> 2] & 16383 | ($278 << 14) + 2147467264;
   } else {
    $260 = $$043 + ~$$012$i$us$looptemp | 0;
    if (((($260 | 0) > -1 ? $260 : 0 - $260 | 0) | 0) > 131071) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$239 >> 2] | 0, 89696);
     $265 = HEAP32[$243 >> 2] | 0;
    } else $265 = $244;
    HEAP32[$243 >> 2] = $265 & 16383 | ($260 << 14) + 2147467264;
   }
  } while (($$012$i$us | 0) != -1);
  HEAP32[$5 >> 2] = -1;
  HEAP32[$30 >> 2] = -1;
  $335 = $1 + 4 | 0;
  HEAP32[$335 >> 2] = $2;
  HEAP32[$1 >> 2] = 12;
  return;
 } else $$012$i = $237;
 do {
  $288 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i << 2) | 0;
  $289 = HEAP32[$288 >> 2] | 0;
  $291 = ($289 >>> 14) + -131071 | 0;
  $$012$i$looptemp = $$012$i;
  $$012$i = ($291 | 0) == -1 ? -1 : $$012$i + 1 + $291 | 0;
  if (($$012$i$looptemp | 0) > 0) {
   $296 = $288 + -4 | 0;
   $297 = HEAP32[$296 >> 2] | 0;
   if ((HEAP8[87697 + ($297 & 63) >> 0] | 0) < 0) {
    $$0$i$i68 = $296;
    $303 = $297;
   } else label = 84;
  } else label = 84;
  if ((label | 0) == 84) {
   label = 0;
   $$0$i$i68 = $288;
   $303 = $289;
  }
  if (($303 & 63 | 0) == 27) {
   if (($303 >>> 23 | 0) == ($2 | 0)) $storemerge$i = $303 & 8372224 | $241 | 26; else $storemerge$i = $303 & -16321 | $242;
   HEAP32[$$0$i$i68 >> 2] = $storemerge$i;
   $315 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i$looptemp << 2) | 0;
   $316 = $137 + ~$$012$i$looptemp | 0;
   if (((($316 | 0) > -1 ? $316 : 0 - $316 | 0) | 0) > 131071) __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$239 >> 2] | 0, 89696);
   HEAP32[$315 >> 2] = HEAP32[$315 >> 2] & 16383 | ($316 << 14) + 2147467264;
  } else {
   $325 = $$043 + ~$$012$i$looptemp | 0;
   if (((($325 | 0) > -1 ? $325 : 0 - $325 | 0) | 0) > 131071) {
    __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$239 >> 2] | 0, 89696);
    $330 = HEAP32[$288 >> 2] | 0;
   } else $330 = $289;
   HEAP32[$288 >> 2] = $330 & 16383 | ($325 << 14) + 2147467264;
  }
 } while (($$012$i | 0) != -1);
 HEAP32[$5 >> 2] = -1;
 HEAP32[$30 >> 2] = -1;
 $335 = $1 + 4 | 0;
 HEAP32[$335 >> 2] = $2;
 HEAP32[$1 >> 2] = 12;
 return;
}

function _strstr($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$in16$i = 0, $$014$lcssa$i = 0, $$01415$i = 0, $$016$lcssa$i = 0, $$01618$i = 0, $$0165$i = 0, $$0167$i = 0, $$0168$i = 0, $$0169$i = 0, $$0174$ph$ph$lcssa217$i = 0, $$0174$ph$ph$lcssa217329$i = 0, $$0174$ph$ph256$i = 0, $$0178244$i = 0, $$018$lcssa$i = 0, $$0182$ph197$ph255$i = 0, $$0182$ph197250$i = 0, $$0182$ph262$i = 0, $$01820$i = 0, $$0184$ph$lcssa$i = 0, $$0184$ph$lcssa328$i = 0, $$0184$ph261$i = 0, $$0186265$i = 0, $$019$i = 0, $$021$i = 0, $$1175$$0174$i = 0, $$1175$ph$ph$lcssa208$i = 0, $$1175$ph$ph235$i = 0, $$1179224$i = 0, $$1183$ph193$ph234$i = 0, $$1183$ph193229$i = 0, $$1183$ph241$i = 0, $$1185$$0184$i = 0, $$1185$ph$lcssa$i = 0, $$1185$ph240$i = 0, $$3$i = 0, $$3172$i = 0, $$3177$i = 0, $$3181223$i = 0, $$4$i = 0, $$lcssa$i = 0, $$lcssa$i23 = 0, $$pr$i = 0, $10 = 0, $102 = 0, $103 = 0, $115 = 0, $119 = 0, $12 = 0, $122 = 0, $13 = 0, $130 = 0, $132 = 0, $137 = 0, $139 = 0, $142 = 0, $146 = 0, $150 = 0, $155 = 0, $157 = 0, $158 = 0, $16 = 0, $161 = 0, $165 = 0, $173 = 0, $175 = 0, $179 = 0, $183 = 0, $184 = 0, $185 = 0, $187 = 0, $190 = 0, $197 = 0, $2 = 0, $209 = 0, $21 = 0, $216 = 0, $218 = 0, $223 = 0, $237 = 0, $238 = 0, $239 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $35 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $52 = 0, $61 = 0, $63 = 0, $64 = 0, $7 = 0, $73 = 0, $74 = 0, $88 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056 | 0;
 $2 = sp + 1024 | 0;
 $3 = sp;
 $4 = HEAP8[$1 >> 0] | 0;
 do if (!($4 << 24 >> 24)) $$0 = $0; else {
  $7 = _strchr($0, $4 << 24 >> 24) | 0;
  if (!$7) $$0 = 0; else {
   $10 = HEAP8[$1 + 1 >> 0] | 0;
   if (!($10 << 24 >> 24)) $$0 = $7; else {
    $12 = $7 + 1 | 0;
    $13 = HEAP8[$12 >> 0] | 0;
    if (!($13 << 24 >> 24)) $$0 = 0; else {
     $16 = HEAP8[$1 + 2 >> 0] | 0;
     if (!($16 << 24 >> 24)) {
      $21 = $10 & 255 | ($4 & 255) << 8;
      $$0$in16$i = HEAPU8[$7 >> 0] << 8 | $13 & 255;
      $$01415$i = $12;
      $237 = $13;
      while (1) {
       $27 = $$0$in16$i & 65535;
       if (($27 | 0) == ($21 | 0)) {
        $$014$lcssa$i = $$01415$i;
        $35 = $237;
        break;
       }
       $30 = $$01415$i + 1 | 0;
       $31 = HEAP8[$30 >> 0] | 0;
       if (!($31 << 24 >> 24)) {
        $$014$lcssa$i = $30;
        $35 = 0;
        break;
       } else {
        $$0$in16$i = $31 & 255 | $27 << 8;
        $$01415$i = $30;
        $237 = $31;
       }
      }
      $$0 = $35 << 24 >> 24 ? $$014$lcssa$i + -1 | 0 : 0;
      break;
     }
     $39 = $7 + 2 | 0;
     $40 = HEAP8[$39 >> 0] | 0;
     if (!($40 << 24 >> 24)) $$0 = 0; else {
      $43 = HEAP8[$1 + 3 >> 0] | 0;
      if (!($43 << 24 >> 24)) {
       $52 = ($10 & 255) << 16 | ($4 & 255) << 24 | ($16 & 255) << 8;
       $61 = ($40 & 255) << 8 | ($13 & 255) << 16 | HEAPU8[$7 >> 0] << 24;
       if (($61 | 0) == ($52 | 0)) {
        $$016$lcssa$i = $39;
        $$lcssa$i = $40;
       } else {
        $$01618$i = $39;
        $$019$i = $61;
        while (1) {
         $63 = $$01618$i + 1 | 0;
         $64 = HEAP8[$63 >> 0] | 0;
         $$019$i = ($64 & 255 | $$019$i) << 8;
         if ($64 << 24 >> 24 == 0 | ($$019$i | 0) == ($52 | 0)) {
          $$016$lcssa$i = $63;
          $$lcssa$i = $64;
          break;
         } else $$01618$i = $63;
        }
       }
       $$0 = $$lcssa$i << 24 >> 24 ? $$016$lcssa$i + -2 | 0 : 0;
       break;
      }
      $73 = $7 + 3 | 0;
      $74 = HEAP8[$73 >> 0] | 0;
      if (!($74 << 24 >> 24)) $$0 = 0; else {
       if (!(HEAP8[$1 + 4 >> 0] | 0)) {
        $88 = ($10 & 255) << 16 | ($4 & 255) << 24 | ($16 & 255) << 8 | $43 & 255;
        $99 = ($40 & 255) << 8 | ($13 & 255) << 16 | $74 & 255 | HEAPU8[$7 >> 0] << 24;
        if (($99 | 0) == ($88 | 0)) {
         $$018$lcssa$i = $73;
         $$lcssa$i23 = $74;
        } else {
         $$01820$i = $73;
         $$021$i = $99;
         while (1) {
          $102 = $$01820$i + 1 | 0;
          $103 = HEAP8[$102 >> 0] | 0;
          $$021$i = $103 & 255 | $$021$i << 8;
          if ($103 << 24 >> 24 == 0 | ($$021$i | 0) == ($88 | 0)) {
           $$018$lcssa$i = $102;
           $$lcssa$i23 = $103;
           break;
          } else $$01820$i = $102;
         }
        }
        $$0 = $$lcssa$i23 << 24 >> 24 ? $$018$lcssa$i + -3 | 0 : 0;
        break;
       };
       HEAP32[$2 >> 2] = 0;
       HEAP32[$2 + 4 >> 2] = 0;
       HEAP32[$2 + 8 >> 2] = 0;
       HEAP32[$2 + 12 >> 2] = 0;
       HEAP32[$2 + 16 >> 2] = 0;
       HEAP32[$2 + 20 >> 2] = 0;
       HEAP32[$2 + 24 >> 2] = 0;
       HEAP32[$2 + 28 >> 2] = 0;
       $$0186265$i = 0;
       $115 = $4;
       while (1) {
        if (!(HEAP8[$7 + $$0186265$i >> 0] | 0)) {
         $$3$i = 0;
         break;
        }
        $119 = $2 + ((($115 & 255) >>> 5 & 255) << 2) | 0;
        HEAP32[$119 >> 2] = HEAP32[$119 >> 2] | 1 << ($115 & 31);
        $122 = $$0186265$i + 1 | 0;
        HEAP32[$3 + (($115 & 255) << 2) >> 2] = $122;
        $115 = HEAP8[$1 + $122 >> 0] | 0;
        if (!($115 << 24 >> 24)) {
         label = 23;
         break;
        } else $$0186265$i = $122;
       }
       L32 : do if ((label | 0) == 23) {
        L34 : do if ($122 >>> 0 > 1) {
         $$0182$ph262$i = 0;
         $$0184$ph261$i = -1;
         $238 = 1;
         L35 : while (1) {
          $$0174$ph$ph256$i = 1;
          $$0182$ph197$ph255$i = $$0182$ph262$i;
          $239 = $238;
          while (1) {
           $$0182$ph197250$i = $$0182$ph197$ph255$i;
           $240 = $239;
           L39 : while (1) {
            $$0178244$i = 1;
            $130 = $240;
            while (1) {
             $137 = HEAP8[$1 + ($$0178244$i + $$0184$ph261$i) >> 0] | 0;
             $139 = HEAP8[$1 + $130 >> 0] | 0;
             if ($137 << 24 >> 24 != $139 << 24 >> 24) break L39;
             if (($$0178244$i | 0) == ($$0174$ph$ph256$i | 0)) break;
             $$0178244$i = $$0178244$i + 1 | 0;
             $132 = $$0178244$i + $$0182$ph197250$i | 0;
             if ($132 >>> 0 >= $122 >>> 0) {
              $$0174$ph$ph$lcssa217$i = $$0174$ph$ph256$i;
              $$0184$ph$lcssa$i = $$0184$ph261$i;
              break L35;
             } else $130 = $132;
            }
            $142 = $$0182$ph197250$i + $$0174$ph$ph256$i | 0;
            $240 = $142 + 1 | 0;
            if ($240 >>> 0 >= $122 >>> 0) {
             $$0174$ph$ph$lcssa217$i = $$0174$ph$ph256$i;
             $$0184$ph$lcssa$i = $$0184$ph261$i;
             break L35;
            } else $$0182$ph197250$i = $142;
           }
           $146 = $130 - $$0184$ph261$i | 0;
           if (($137 & 255) <= ($139 & 255)) break;
           $239 = $130 + 1 | 0;
           if ($239 >>> 0 >= $122 >>> 0) {
            $$0174$ph$ph$lcssa217$i = $146;
            $$0184$ph$lcssa$i = $$0184$ph261$i;
            break L35;
           } else {
            $$0174$ph$ph256$i = $146;
            $$0182$ph197$ph255$i = $130;
           }
          }
          $238 = $$0182$ph197250$i + 2 | 0;
          if ($238 >>> 0 >= $122 >>> 0) {
           $$0174$ph$ph$lcssa217$i = 1;
           $$0184$ph$lcssa$i = $$0182$ph197250$i;
           break;
          } else {
           $$0182$ph262$i = $$0182$ph197250$i + 1 | 0;
           $$0184$ph261$i = $$0182$ph197250$i;
          }
         }
         $$1183$ph241$i = 0;
         $$1185$ph240$i = -1;
         $241 = 1;
         while (1) {
          $$1175$ph$ph235$i = 1;
          $$1183$ph193$ph234$i = $$1183$ph241$i;
          $243 = $241;
          while (1) {
           $$1183$ph193229$i = $$1183$ph193$ph234$i;
           $242 = $243;
           L54 : while (1) {
            $$1179224$i = 1;
            $157 = $242;
            while (1) {
             $155 = HEAP8[$1 + ($$1179224$i + $$1185$ph240$i) >> 0] | 0;
             $158 = HEAP8[$1 + $157 >> 0] | 0;
             if ($155 << 24 >> 24 != $158 << 24 >> 24) break L54;
             if (($$1179224$i | 0) == ($$1175$ph$ph235$i | 0)) break;
             $$1179224$i = $$1179224$i + 1 | 0;
             $150 = $$1179224$i + $$1183$ph193229$i | 0;
             if ($150 >>> 0 >= $122 >>> 0) {
              $$0174$ph$ph$lcssa217329$i = $$0174$ph$ph$lcssa217$i;
              $$0184$ph$lcssa328$i = $$0184$ph$lcssa$i;
              $$1175$ph$ph$lcssa208$i = $$1175$ph$ph235$i;
              $$1185$ph$lcssa$i = $$1185$ph240$i;
              break L34;
             } else $157 = $150;
            }
            $161 = $$1183$ph193229$i + $$1175$ph$ph235$i | 0;
            $242 = $161 + 1 | 0;
            if ($242 >>> 0 >= $122 >>> 0) {
             $$0174$ph$ph$lcssa217329$i = $$0174$ph$ph$lcssa217$i;
             $$0184$ph$lcssa328$i = $$0184$ph$lcssa$i;
             $$1175$ph$ph$lcssa208$i = $$1175$ph$ph235$i;
             $$1185$ph$lcssa$i = $$1185$ph240$i;
             break L34;
            } else $$1183$ph193229$i = $161;
           }
           $165 = $157 - $$1185$ph240$i | 0;
           if (($155 & 255) >= ($158 & 255)) break;
           $243 = $157 + 1 | 0;
           if ($243 >>> 0 >= $122 >>> 0) {
            $$0174$ph$ph$lcssa217329$i = $$0174$ph$ph$lcssa217$i;
            $$0184$ph$lcssa328$i = $$0184$ph$lcssa$i;
            $$1175$ph$ph$lcssa208$i = $165;
            $$1185$ph$lcssa$i = $$1185$ph240$i;
            break L34;
           } else {
            $$1175$ph$ph235$i = $165;
            $$1183$ph193$ph234$i = $157;
           }
          }
          $241 = $$1183$ph193229$i + 2 | 0;
          if ($241 >>> 0 >= $122 >>> 0) {
           $$0174$ph$ph$lcssa217329$i = $$0174$ph$ph$lcssa217$i;
           $$0184$ph$lcssa328$i = $$0184$ph$lcssa$i;
           $$1175$ph$ph$lcssa208$i = 1;
           $$1185$ph$lcssa$i = $$1183$ph193229$i;
           break;
          } else {
           $$1183$ph241$i = $$1183$ph193229$i + 1 | 0;
           $$1185$ph240$i = $$1183$ph193229$i;
          }
         }
        } else {
         $$0174$ph$ph$lcssa217329$i = 1;
         $$0184$ph$lcssa328$i = -1;
         $$1175$ph$ph$lcssa208$i = 1;
         $$1185$ph$lcssa$i = -1;
        } while (0);
        $173 = ($$1185$ph$lcssa$i + 1 | 0) >>> 0 > ($$0184$ph$lcssa328$i + 1 | 0) >>> 0;
        $$1175$$0174$i = $173 ? $$1175$ph$ph$lcssa208$i : $$0174$ph$ph$lcssa217329$i;
        $$1185$$0184$i = $173 ? $$1185$ph$lcssa$i : $$0184$ph$lcssa328$i;
        $175 = $$1185$$0184$i + 1 | 0;
        if (!(_memcmp($1, $1 + $$1175$$0174$i | 0, $175) | 0)) {
         $$0167$i = $122 - $$1175$$0174$i | 0;
         $$3177$i = $$1175$$0174$i;
        } else {
         $179 = $122 - $$1185$$0184$i + -1 | 0;
         $$0167$i = 0;
         $$3177$i = ($$1185$$0184$i >>> 0 > $179 >>> 0 ? $$1185$$0184$i : $179) + 1 | 0;
        }
        $183 = $122 | 63;
        $184 = ($$0167$i | 0) != 0;
        $185 = $122 - $$3177$i | 0;
        $$0165$i = $7;
        $$0168$i = 0;
        $$0169$i = $7;
        L69 : while (1) {
         $187 = $$0165$i;
         do if (($$0169$i - $187 | 0) >>> 0 < $122 >>> 0) {
          $190 = _memchr($$0169$i, 0, $183) | 0;
          if (!$190) {
           $$3172$i = $$0169$i + $183 | 0;
           break;
          } else if (($190 - $187 | 0) >>> 0 < $122 >>> 0) {
           $$3$i = 0;
           break L32;
          } else {
           $$3172$i = $190;
           break;
          }
         } else $$3172$i = $$0169$i; while (0);
         $197 = HEAP8[$$0165$i + $$0186265$i >> 0] | 0;
         if (!(1 << ($197 & 31) & HEAP32[$2 + ((($197 & 255) >>> 5 & 255) << 2) >> 2])) {
          $$0165$i = $$0165$i + $122 | 0;
          $$0168$i = 0;
          $$0169$i = $$3172$i;
          continue;
         }
         $209 = $122 - (HEAP32[$3 + (($197 & 255) << 2) >> 2] | 0) | 0;
         if ($209 | 0) {
          $$0165$i = $$0165$i + ($184 & ($$0168$i | 0) != 0 & $209 >>> 0 < $$3177$i >>> 0 ? $185 : $209) | 0;
          $$0168$i = 0;
          $$0169$i = $$3172$i;
          continue;
         }
         $216 = $175 >>> 0 > $$0168$i >>> 0 ? $175 : $$0168$i;
         $218 = HEAP8[$1 + $216 >> 0] | 0;
         L83 : do if (!($218 << 24 >> 24)) $$4$i = $175; else {
          $$3181223$i = $216;
          $$pr$i = $218;
          while (1) {
           if ($$pr$i << 24 >> 24 != (HEAP8[$$0165$i + $$3181223$i >> 0] | 0)) break;
           $223 = $$3181223$i + 1 | 0;
           $$pr$i = HEAP8[$1 + $223 >> 0] | 0;
           if (!($$pr$i << 24 >> 24)) {
            $$4$i = $175;
            break L83;
           } else $$3181223$i = $223;
          }
          $$0165$i = $$0165$i + ($$3181223$i - $$1185$$0184$i) | 0;
          $$0168$i = 0;
          $$0169$i = $$3172$i;
          continue L69;
         } while (0);
         do {
          if ($$4$i >>> 0 <= $$0168$i >>> 0) {
           $$3$i = $$0165$i;
           break L32;
          }
          $$4$i = $$4$i + -1 | 0;
         } while ((HEAP8[$1 + $$4$i >> 0] | 0) == (HEAP8[$$0165$i + $$4$i >> 0] | 0));
         $$0165$i = $$0165$i + $$3177$i | 0;
         $$0168$i = $$0167$i;
         $$0169$i = $$3172$i;
        }
       } while (0);
       $$0 = $$3$i;
      }
     }
    }
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL12read_numeralP8LexStateP7SemInfo($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$ = 0, $$72 = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$idx$val = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx14$val$i = 0, $$idx$val$idx22$val = 0, $$idx12$val$i = 0, $$idx12$val$idx$val$i = 0, $$idx12$val$idx13$val$i = 0, $$in$i = 0, $$in$i$i = 0, $$in$i15$i = 0, $$lcssa = 0, $$lcssa62 = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa66 = 0, $$pre$phi$i30Z2D = 0, $$pre$phi$i38Z2D = 0, $$pre$phi$i50Z2D = 0, $$pre$phi$i58Z2D = 0, $$pre$phi$iZ2D = 0, $10 = 0, $101 = 0, $105 = 0, $108 = 0, $110 = 0, $111 = 0, $112 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $122 = 0, $123 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $138 = 0, $139 = 0, $141 = 0, $143 = 0, $147 = 0, $148 = 0, $149 = 0, $151 = 0, $153 = 0, $155 = 0, $156 = 0, $157 = 0, $160 = 0, $161 = 0, $162 = 0, $167 = 0, $170 = 0, $171 = 0, $172 = 0, $174 = 0, $175 = 0, $176 = 0, $18 = 0, $180 = 0, $181 = 0, $183 = 0, $185 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $194 = 0, $195 = 0, $198 = 0, $2 = 0, $202 = 0, $205 = 0, $206 = 0, $21 = 0, $210 = 0, $213 = 0, $217 = 0, $220 = 0, $223 = 0, $227 = 0, $228 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $84 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $90 = 0, $91 = 0, $96 = 0, $97 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer13 = 0, $vararg_buffer18 = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $vararg_buffer18 = sp + 64 | 0;
 $vararg_buffer13 = sp + 48 | 0;
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 80 | 0;
 $3 = $0 + 40 | 0;
 $4 = $0 + 44 | 0;
 $5 = $0 + 32 | 0;
 $6 = $0 + 4 | 0;
 $7 = $0 + 36 | 0;
 $29 = HEAP32[$0 >> 2] | 0;
 while (1) {
  $8 = HEAP32[$3 >> 2] | 0;
  $9 = $8 + 4 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $12 = $8 + 8 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if (($10 + 1 | 0) >>> 0 > $13 >>> 0) {
   if ($13 >>> 0 > 2147483645) {
    label = 5;
    break;
   }
   $21 = $13 << 1;
   $23 = HEAP32[$5 >> 2] | 0;
   if (($21 | 0) == -2) {
    $$pre$phi$iZ2D = $8;
    $27 = __Z11luaM_toobigP9lua_State($23) | 0;
   } else {
    $$pre$phi$iZ2D = $8;
    $27 = __Z13luaM_realloc_P9lua_StatePvjj($23, HEAP32[$8 >> 2] | 0, $13, $21) | 0;
   }
   HEAP32[$$pre$phi$iZ2D >> 2] = $27;
   HEAP32[$12 >> 2] = $21;
   $31 = HEAP32[$9 >> 2] | 0;
   $33 = $27;
  } else {
   $31 = $10;
   $33 = HEAP32[$8 >> 2] | 0;
  }
  HEAP32[$9 >> 2] = $31 + 1;
  HEAP8[$33 + $31 >> 0] = $29;
  $34 = HEAP32[$7 >> 2] | 0;
  $35 = HEAP32[$34 >> 2] | 0;
  HEAP32[$34 >> 2] = $35 + -1;
  $38 = HEAP32[$7 >> 2] | 0;
  if (!$35) $45 = __Z9luaZ_fillP3Zio($38) | 0; else {
   $39 = $38 + 4 | 0;
   $40 = HEAP32[$39 >> 2] | 0;
   HEAP32[$39 >> 2] = $40 + 1;
   $45 = HEAPU8[$40 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $45;
  if (($45 | 0) == 46 | ($45 + -48 | 0) >>> 0 < 10) $29 = $45; else break;
 }
 if ((label | 0) == 5) {
  __Z12luaO_chunkidPcPKcj($2, (HEAP32[$4 >> 2] | 0) + 16 | 0, 80);
  $18 = HEAP32[$5 >> 2] | 0;
  $19 = HEAP32[$6 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $2;
  HEAP32[$vararg_buffer + 4 >> 2] = $19;
  HEAP32[$vararg_buffer + 8 >> 2] = 89965;
  __Z16luaO_pushfstringP9lua_StatePKcz($18, 89955, $vararg_buffer) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$5 >> 2] | 0, 3);
 }
 if (!(_memchr(90077, $45, 3) | 0)) $123 = $45; else {
  $48 = HEAP32[$3 >> 2] | 0;
  $49 = $48 + 4 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  $52 = $48 + 8 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  if (($50 + 1 | 0) >>> 0 > $53 >>> 0) {
   if ($53 >>> 0 > 2147483645) {
    __Z12luaO_chunkidPcPKcj($2, (HEAP32[$4 >> 2] | 0) + 16 | 0, 80);
    $58 = HEAP32[$5 >> 2] | 0;
    $59 = HEAP32[$6 >> 2] | 0;
    HEAP32[$vararg_buffer3 >> 2] = $2;
    HEAP32[$vararg_buffer3 + 4 >> 2] = $59;
    HEAP32[$vararg_buffer3 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($58, 89955, $vararg_buffer3) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$5 >> 2] | 0, 3);
   }
   $61 = $53 << 1;
   $63 = HEAP32[$5 >> 2] | 0;
   if (($61 | 0) == -2) {
    $$pre$phi$i50Z2D = $48;
    $67 = __Z11luaM_toobigP9lua_State($63) | 0;
   } else {
    $$pre$phi$i50Z2D = $48;
    $67 = __Z13luaM_realloc_P9lua_StatePvjj($63, HEAP32[$48 >> 2] | 0, $53, $61) | 0;
   }
   HEAP32[$$pre$phi$i50Z2D >> 2] = $67;
   HEAP32[$52 >> 2] = $61;
   $70 = HEAP32[$49 >> 2] | 0;
   $72 = $67;
  } else {
   $70 = $50;
   $72 = HEAP32[$48 >> 2] | 0;
  }
  HEAP32[$49 >> 2] = $70 + 1;
  HEAP8[$72 + $70 >> 0] = $45;
  $73 = HEAP32[$7 >> 2] | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  HEAP32[$73 >> 2] = $74 + -1;
  $77 = HEAP32[$7 >> 2] | 0;
  if (!$74) $84 = __Z9luaZ_fillP3Zio($77) | 0; else {
   $78 = $77 + 4 | 0;
   $79 = HEAP32[$78 >> 2] | 0;
   HEAP32[$78 >> 2] = $79 + 1;
   $84 = HEAPU8[$79 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $84;
  if (!(_memchr(90080, $84, 3) | 0)) $123 = $84; else {
   $86 = HEAP32[$3 >> 2] | 0;
   $87 = $86 + 4 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $90 = $86 + 8 | 0;
   $91 = HEAP32[$90 >> 2] | 0;
   if (($88 + 1 | 0) >>> 0 > $91 >>> 0) {
    if ($91 >>> 0 > 2147483645) {
     __Z12luaO_chunkidPcPKcj($2, (HEAP32[$4 >> 2] | 0) + 16 | 0, 80);
     $96 = HEAP32[$5 >> 2] | 0;
     $97 = HEAP32[$6 >> 2] | 0;
     HEAP32[$vararg_buffer8 >> 2] = $2;
     HEAP32[$vararg_buffer8 + 4 >> 2] = $97;
     HEAP32[$vararg_buffer8 + 8 >> 2] = 89965;
     __Z16luaO_pushfstringP9lua_StatePKcz($96, 89955, $vararg_buffer8) | 0;
     __Z10luaD_throwP9lua_Statei(HEAP32[$5 >> 2] | 0, 3);
    }
    $99 = $91 << 1;
    $101 = HEAP32[$5 >> 2] | 0;
    if (($99 | 0) == -2) {
     $$pre$phi$i58Z2D = $86;
     $105 = __Z11luaM_toobigP9lua_State($101) | 0;
    } else {
     $$pre$phi$i58Z2D = $86;
     $105 = __Z13luaM_realloc_P9lua_StatePvjj($101, HEAP32[$86 >> 2] | 0, $91, $99) | 0;
    }
    HEAP32[$$pre$phi$i58Z2D >> 2] = $105;
    HEAP32[$90 >> 2] = $99;
    $108 = HEAP32[$87 >> 2] | 0;
    $110 = $105;
   } else {
    $108 = $88;
    $110 = HEAP32[$86 >> 2] | 0;
   }
   HEAP32[$87 >> 2] = $108 + 1;
   HEAP8[$110 + $108 >> 0] = $84;
   $111 = HEAP32[$7 >> 2] | 0;
   $112 = HEAP32[$111 >> 2] | 0;
   HEAP32[$111 >> 2] = $112 + -1;
   $115 = HEAP32[$7 >> 2] | 0;
   if (!$112) $122 = __Z9luaZ_fillP3Zio($115) | 0; else {
    $116 = $115 + 4 | 0;
    $117 = HEAP32[$116 >> 2] | 0;
    HEAP32[$116 >> 2] = $117 + 1;
    $122 = HEAPU8[$117 >> 0] | 0;
   }
   HEAP32[$0 >> 2] = $122;
   $123 = $122;
  }
 }
 $$72 = ($123 | 0) == 95 | (_isalnum($123) | 0) != 0;
 $126 = HEAP32[$3 >> 2] | 0;
 $127 = $126 + 4 | 0;
 $128 = HEAP32[$127 >> 2] | 0;
 $130 = $126 + 8 | 0;
 $131 = HEAP32[$130 >> 2] | 0;
 $132 = ($128 + 1 | 0) >>> 0 > $131 >>> 0;
 L53 : do if ($$72) {
  $133 = $126;
  $134 = $131;
  $148 = $130;
  $149 = $127;
  $151 = $123;
  $227 = $132;
  $228 = $128;
  while (1) {
   if ($227) {
    if ($134 >>> 0 > 2147483645) break;
    $141 = $134 << 1;
    $143 = HEAP32[$5 >> 2] | 0;
    if (($141 | 0) == -2) {
     $$pre$phi$i30Z2D = $133;
     $147 = __Z11luaM_toobigP9lua_State($143) | 0;
    } else {
     $$pre$phi$i30Z2D = $133;
     $147 = __Z13luaM_realloc_P9lua_StatePvjj($143, HEAP32[$133 >> 2] | 0, $134, $141) | 0;
    }
    HEAP32[$$pre$phi$i30Z2D >> 2] = $147;
    HEAP32[$148 >> 2] = $141;
    $153 = HEAP32[$149 >> 2] | 0;
    $155 = $147;
   } else {
    $153 = $228;
    $155 = HEAP32[$133 >> 2] | 0;
   }
   HEAP32[$149 >> 2] = $153 + 1;
   HEAP8[$155 + $153 >> 0] = $151;
   $156 = HEAP32[$7 >> 2] | 0;
   $157 = HEAP32[$156 >> 2] | 0;
   HEAP32[$156 >> 2] = $157 + -1;
   $160 = HEAP32[$7 >> 2] | 0;
   if (!$157) $167 = __Z9luaZ_fillP3Zio($160) | 0; else {
    $161 = $160 + 4 | 0;
    $162 = HEAP32[$161 >> 2] | 0;
    HEAP32[$161 >> 2] = $162 + 1;
    $167 = HEAPU8[$162 >> 0] | 0;
   }
   HEAP32[$0 >> 2] = $167;
   $$ = ($167 | 0) == 95 | (_isalnum($167) | 0) != 0;
   $170 = HEAP32[$3 >> 2] | 0;
   $171 = $170 + 4 | 0;
   $172 = HEAP32[$171 >> 2] | 0;
   $174 = $170 + 8 | 0;
   $175 = HEAP32[$174 >> 2] | 0;
   $176 = ($172 + 1 | 0) >>> 0 > $175 >>> 0;
   if ($$) {
    $133 = $170;
    $134 = $175;
    $148 = $174;
    $149 = $171;
    $151 = $167;
    $227 = $176;
    $228 = $172;
   } else {
    $$lcssa = $176;
    $$lcssa62 = $175;
    $$lcssa63 = $174;
    $$lcssa64 = $172;
    $$lcssa65 = $171;
    $$lcssa66 = $170;
    break L53;
   }
  }
  __Z12luaO_chunkidPcPKcj($2, (HEAP32[$4 >> 2] | 0) + 16 | 0, 80);
  $138 = HEAP32[$5 >> 2] | 0;
  $139 = HEAP32[$6 >> 2] | 0;
  HEAP32[$vararg_buffer13 >> 2] = $2;
  HEAP32[$vararg_buffer13 + 4 >> 2] = $139;
  HEAP32[$vararg_buffer13 + 8 >> 2] = 89965;
  __Z16luaO_pushfstringP9lua_StatePKcz($138, 89955, $vararg_buffer13) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$5 >> 2] | 0, 3);
 } else {
  $$lcssa = $132;
  $$lcssa62 = $131;
  $$lcssa63 = $130;
  $$lcssa64 = $128;
  $$lcssa65 = $127;
  $$lcssa66 = $126;
 } while (0);
 if ($$lcssa) {
  if ($$lcssa62 >>> 0 > 2147483645) {
   __Z12luaO_chunkidPcPKcj($2, (HEAP32[$4 >> 2] | 0) + 16 | 0, 80);
   $180 = HEAP32[$5 >> 2] | 0;
   $181 = HEAP32[$6 >> 2] | 0;
   HEAP32[$vararg_buffer18 >> 2] = $2;
   HEAP32[$vararg_buffer18 + 4 >> 2] = $181;
   HEAP32[$vararg_buffer18 + 8 >> 2] = 89965;
   __Z16luaO_pushfstringP9lua_StatePKcz($180, 89955, $vararg_buffer18) | 0;
   __Z10luaD_throwP9lua_Statei(HEAP32[$5 >> 2] | 0, 3);
  }
  $183 = $$lcssa62 << 1;
  $185 = HEAP32[$5 >> 2] | 0;
  if (($183 | 0) == -2) {
   $$pre$phi$i38Z2D = $$lcssa66;
   $189 = __Z11luaM_toobigP9lua_State($185) | 0;
  } else {
   $$pre$phi$i38Z2D = $$lcssa66;
   $189 = __Z13luaM_realloc_P9lua_StatePvjj($185, HEAP32[$$lcssa66 >> 2] | 0, $$lcssa62, $183) | 0;
  }
  HEAP32[$$pre$phi$i38Z2D >> 2] = $189;
  HEAP32[$$lcssa63 >> 2] = $183;
  $191 = HEAP32[$$lcssa65 >> 2] | 0;
  $193 = $189;
 } else {
  $191 = $$lcssa64;
  $193 = HEAP32[$$lcssa66 >> 2] | 0;
 }
 HEAP32[$$lcssa65 >> 2] = $191 + 1;
 HEAP8[$193 + $191 >> 0] = 0;
 $194 = $0 + 48 | 0;
 $195 = HEAP8[$194 >> 0] | 0;
 $$idx$val = HEAP32[$3 >> 2] | 0;
 $$idx$val$idx$val = HEAP32[$$idx$val >> 2] | 0;
 $$idx$val$idx22$val = HEAP32[$$idx$val + 4 >> 2] | 0;
 if (!$$idx$val$idx22$val) $202 = $$idx$val$idx$val; else {
  $$in$i = $$idx$val$idx22$val;
  do {
   $$in$i = $$in$i + -1 | 0;
   $198 = $$idx$val$idx$val + $$in$i | 0;
   if ((HEAP8[$198 >> 0] | 0) == 46) HEAP8[$198 >> 0] = $195;
  } while (($$in$i | 0) != 0);
  $202 = HEAP32[HEAP32[$3 >> 2] >> 2] | 0;
 }
 if (__Z10luaO_str2dPKcPf($202, $1) | 0) {
  STACKTOP = sp;
  return;
 }
 $205 = _localeconv() | 0;
 $206 = HEAP8[$194 >> 0] | 0;
 if (!$205) $210 = 46; else $210 = HEAP8[HEAP32[$205 >> 2] >> 0] | 0;
 HEAP8[$194 >> 0] = $210;
 $$idx12$val$i = HEAP32[$3 >> 2] | 0;
 $$idx12$val$idx$val$i = HEAP32[$$idx12$val$i >> 2] | 0;
 $$idx12$val$idx13$val$i = HEAP32[$$idx12$val$i + 4 >> 2] | 0;
 if (!$$idx12$val$idx13$val$i) $217 = $$idx12$val$idx$val$i; else {
  $$in$i$i = $$idx12$val$idx13$val$i;
  do {
   $$in$i$i = $$in$i$i + -1 | 0;
   $213 = $$idx12$val$idx$val$i + $$in$i$i | 0;
   if ((HEAP8[$213 >> 0] | 0) == $206 << 24 >> 24) HEAP8[$213 >> 0] = $210;
  } while (($$in$i$i | 0) != 0);
  $217 = HEAP32[HEAP32[$3 >> 2] >> 2] | 0;
 }
 if (__Z10luaO_str2dPKcPf($217, $1) | 0) {
  STACKTOP = sp;
  return;
 }
 $220 = HEAP8[$194 >> 0] | 0;
 $$idx$val$i = HEAP32[$3 >> 2] | 0;
 $$idx$val$idx$val$i = HEAP32[$$idx$val$i >> 2] | 0;
 $$idx$val$idx14$val$i = HEAP32[$$idx$val$i + 4 >> 2] | 0;
 if ($$idx$val$idx14$val$i | 0) {
  $$in$i15$i = $$idx$val$idx14$val$i;
  do {
   $$in$i15$i = $$in$i15$i + -1 | 0;
   $223 = $$idx$val$idx$val$i + $$in$i15$i | 0;
   if ((HEAP8[$223 >> 0] | 0) == $220 << 24 >> 24) HEAP8[$223 >> 0] = 46;
  } while (($$in$i15$i | 0) != 0);
 }
 __Z13luaX_lexerrorP8LexStatePKci($0, 90083, 284);
 STACKTOP = sp;
 return;
}

function _free($0) {
 $0 = $0 | 0;
 var $$0211$i = 0, $$0211$in$i = 0, $$0381 = 0, $$0382 = 0, $$0394 = 0, $$0401 = 0, $$1 = 0, $$1380 = 0, $$1385 = 0, $$1388 = 0, $$1396 = 0, $$1400 = 0, $$2 = 0, $$3 = 0, $$3398 = 0, $$pre$phi439Z2D = 0, $$pre$phi441Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $105 = 0, $106 = 0, $114 = 0, $115 = 0, $123 = 0, $13 = 0, $131 = 0, $136 = 0, $137 = 0, $140 = 0, $142 = 0, $144 = 0, $159 = 0, $16 = 0, $164 = 0, $166 = 0, $169 = 0, $17 = 0, $172 = 0, $175 = 0, $178 = 0, $179 = 0, $180 = 0, $182 = 0, $184 = 0, $185 = 0, $187 = 0, $188 = 0, $194 = 0, $195 = 0, $2 = 0, $204 = 0, $209 = 0, $21 = 0, $212 = 0, $213 = 0, $219 = 0, $234 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $243 = 0, $244 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $26 = 0, $261 = 0, $264 = 0, $269 = 0, $275 = 0, $279 = 0, $28 = 0, $280 = 0, $298 = 0, $3 = 0, $300 = 0, $307 = 0, $308 = 0, $309 = 0, $317 = 0, $41 = 0, $46 = 0, $48 = 0, $51 = 0, $53 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $69 = 0, $7 = 0, $74 = 0, $75 = 0, $84 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $99 = 0, label = 0;
 if (!$0) return;
 $2 = $0 + -8 | 0;
 $3 = HEAP32[27160] | 0;
 if ($2 >>> 0 < $3 >>> 0) _abort();
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 $7 = $6 & 3;
 if (($7 | 0) == 1) _abort();
 $9 = $6 & -8;
 $10 = $2 + $9 | 0;
 do if (!($6 & 1)) {
  $13 = HEAP32[$2 >> 2] | 0;
  if (!$7) return;
  $16 = $2 + (0 - $13) | 0;
  $17 = $13 + $9 | 0;
  if ($16 >>> 0 < $3 >>> 0) _abort();
  if (($16 | 0) == (HEAP32[27161] | 0)) {
   $105 = $10 + 4 | 0;
   $106 = HEAP32[$105 >> 2] | 0;
   if (($106 & 3 | 0) != 3) {
    $$1 = $16;
    $$1380 = $17;
    break;
   }
   HEAP32[27158] = $17;
   HEAP32[$105 >> 2] = $106 & -2;
   HEAP32[$16 + 4 >> 2] = $17 | 1;
   HEAP32[$16 + $17 >> 2] = $17;
   return;
  }
  $21 = $13 >>> 3;
  if ($13 >>> 0 < 256) {
   $24 = HEAP32[$16 + 8 >> 2] | 0;
   $26 = HEAP32[$16 + 12 >> 2] | 0;
   $28 = 108664 + ($21 << 1 << 2) | 0;
   if (($24 | 0) != ($28 | 0)) {
    if ($24 >>> 0 < $3 >>> 0) _abort();
    if ((HEAP32[$24 + 12 >> 2] | 0) != ($16 | 0)) _abort();
   }
   if (($26 | 0) == ($24 | 0)) {
    HEAP32[27156] = HEAP32[27156] & ~(1 << $21);
    $$1 = $16;
    $$1380 = $17;
    break;
   }
   if (($26 | 0) == ($28 | 0)) $$pre$phi441Z2D = $26 + 8 | 0; else {
    if ($26 >>> 0 < $3 >>> 0) _abort();
    $41 = $26 + 8 | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($16 | 0)) $$pre$phi441Z2D = $41; else _abort();
   }
   HEAP32[$24 + 12 >> 2] = $26;
   HEAP32[$$pre$phi441Z2D >> 2] = $24;
   $$1 = $16;
   $$1380 = $17;
   break;
  }
  $46 = HEAP32[$16 + 24 >> 2] | 0;
  $48 = HEAP32[$16 + 12 >> 2] | 0;
  do if (($48 | 0) == ($16 | 0)) {
   $59 = $16 + 16 | 0;
   $60 = $59 + 4 | 0;
   $61 = HEAP32[$60 >> 2] | 0;
   if (!$61) {
    $63 = HEAP32[$59 >> 2] | 0;
    if (!$63) {
     $$3 = 0;
     break;
    } else {
     $$1385 = $63;
     $$1388 = $59;
    }
   } else {
    $$1385 = $61;
    $$1388 = $60;
   }
   while (1) {
    $65 = $$1385 + 20 | 0;
    $66 = HEAP32[$65 >> 2] | 0;
    if ($66 | 0) {
     $$1385 = $66;
     $$1388 = $65;
     continue;
    }
    $68 = $$1385 + 16 | 0;
    $69 = HEAP32[$68 >> 2] | 0;
    if (!$69) break; else {
     $$1385 = $69;
     $$1388 = $68;
    }
   }
   if ($$1388 >>> 0 < $3 >>> 0) _abort(); else {
    HEAP32[$$1388 >> 2] = 0;
    $$3 = $$1385;
    break;
   }
  } else {
   $51 = HEAP32[$16 + 8 >> 2] | 0;
   if ($51 >>> 0 < $3 >>> 0) _abort();
   $53 = $51 + 12 | 0;
   if ((HEAP32[$53 >> 2] | 0) != ($16 | 0)) _abort();
   $56 = $48 + 8 | 0;
   if ((HEAP32[$56 >> 2] | 0) == ($16 | 0)) {
    HEAP32[$53 >> 2] = $48;
    HEAP32[$56 >> 2] = $51;
    $$3 = $48;
    break;
   } else _abort();
  } while (0);
  if (!$46) {
   $$1 = $16;
   $$1380 = $17;
  } else {
   $74 = HEAP32[$16 + 28 >> 2] | 0;
   $75 = 108928 + ($74 << 2) | 0;
   if (($16 | 0) == (HEAP32[$75 >> 2] | 0)) {
    HEAP32[$75 >> 2] = $$3;
    if (!$$3) {
     HEAP32[27157] = HEAP32[27157] & ~(1 << $74);
     $$1 = $16;
     $$1380 = $17;
     break;
    }
   } else {
    if ($46 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
    $84 = $46 + 16 | 0;
    if ((HEAP32[$84 >> 2] | 0) == ($16 | 0)) HEAP32[$84 >> 2] = $$3; else HEAP32[$46 + 20 >> 2] = $$3;
    if (!$$3) {
     $$1 = $16;
     $$1380 = $17;
     break;
    }
   }
   $89 = HEAP32[27160] | 0;
   if ($$3 >>> 0 < $89 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $46;
   $92 = $16 + 16 | 0;
   $93 = HEAP32[$92 >> 2] | 0;
   do if ($93 | 0) if ($93 >>> 0 < $89 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $93;
    HEAP32[$93 + 24 >> 2] = $$3;
    break;
   } while (0);
   $99 = HEAP32[$92 + 4 >> 2] | 0;
   if (!$99) {
    $$1 = $16;
    $$1380 = $17;
   } else if ($99 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $99;
    HEAP32[$99 + 24 >> 2] = $$3;
    $$1 = $16;
    $$1380 = $17;
    break;
   }
  }
 } else {
  $$1 = $2;
  $$1380 = $9;
 } while (0);
 if ($$1 >>> 0 >= $10 >>> 0) _abort();
 $114 = $10 + 4 | 0;
 $115 = HEAP32[$114 >> 2] | 0;
 if (!($115 & 1)) _abort();
 if (!($115 & 2)) {
  if (($10 | 0) == (HEAP32[27162] | 0)) {
   $123 = (HEAP32[27159] | 0) + $$1380 | 0;
   HEAP32[27159] = $123;
   HEAP32[27162] = $$1;
   HEAP32[$$1 + 4 >> 2] = $123 | 1;
   if (($$1 | 0) != (HEAP32[27161] | 0)) return;
   HEAP32[27161] = 0;
   HEAP32[27158] = 0;
   return;
  }
  if (($10 | 0) == (HEAP32[27161] | 0)) {
   $131 = (HEAP32[27158] | 0) + $$1380 | 0;
   HEAP32[27158] = $131;
   HEAP32[27161] = $$1;
   HEAP32[$$1 + 4 >> 2] = $131 | 1;
   HEAP32[$$1 + $131 >> 2] = $131;
   return;
  }
  $136 = ($115 & -8) + $$1380 | 0;
  $137 = $115 >>> 3;
  do if ($115 >>> 0 < 256) {
   $140 = HEAP32[$10 + 8 >> 2] | 0;
   $142 = HEAP32[$10 + 12 >> 2] | 0;
   $144 = 108664 + ($137 << 1 << 2) | 0;
   if (($140 | 0) != ($144 | 0)) {
    if ($140 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
    if ((HEAP32[$140 + 12 >> 2] | 0) != ($10 | 0)) _abort();
   }
   if (($142 | 0) == ($140 | 0)) {
    HEAP32[27156] = HEAP32[27156] & ~(1 << $137);
    break;
   }
   if (($142 | 0) == ($144 | 0)) $$pre$phi439Z2D = $142 + 8 | 0; else {
    if ($142 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
    $159 = $142 + 8 | 0;
    if ((HEAP32[$159 >> 2] | 0) == ($10 | 0)) $$pre$phi439Z2D = $159; else _abort();
   }
   HEAP32[$140 + 12 >> 2] = $142;
   HEAP32[$$pre$phi439Z2D >> 2] = $140;
  } else {
   $164 = HEAP32[$10 + 24 >> 2] | 0;
   $166 = HEAP32[$10 + 12 >> 2] | 0;
   do if (($166 | 0) == ($10 | 0)) {
    $178 = $10 + 16 | 0;
    $179 = $178 + 4 | 0;
    $180 = HEAP32[$179 >> 2] | 0;
    if (!$180) {
     $182 = HEAP32[$178 >> 2] | 0;
     if (!$182) {
      $$3398 = 0;
      break;
     } else {
      $$1396 = $182;
      $$1400 = $178;
     }
    } else {
     $$1396 = $180;
     $$1400 = $179;
    }
    while (1) {
     $184 = $$1396 + 20 | 0;
     $185 = HEAP32[$184 >> 2] | 0;
     if ($185 | 0) {
      $$1396 = $185;
      $$1400 = $184;
      continue;
     }
     $187 = $$1396 + 16 | 0;
     $188 = HEAP32[$187 >> 2] | 0;
     if (!$188) break; else {
      $$1396 = $188;
      $$1400 = $187;
     }
    }
    if ($$1400 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
     HEAP32[$$1400 >> 2] = 0;
     $$3398 = $$1396;
     break;
    }
   } else {
    $169 = HEAP32[$10 + 8 >> 2] | 0;
    if ($169 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
    $172 = $169 + 12 | 0;
    if ((HEAP32[$172 >> 2] | 0) != ($10 | 0)) _abort();
    $175 = $166 + 8 | 0;
    if ((HEAP32[$175 >> 2] | 0) == ($10 | 0)) {
     HEAP32[$172 >> 2] = $166;
     HEAP32[$175 >> 2] = $169;
     $$3398 = $166;
     break;
    } else _abort();
   } while (0);
   if ($164 | 0) {
    $194 = HEAP32[$10 + 28 >> 2] | 0;
    $195 = 108928 + ($194 << 2) | 0;
    if (($10 | 0) == (HEAP32[$195 >> 2] | 0)) {
     HEAP32[$195 >> 2] = $$3398;
     if (!$$3398) {
      HEAP32[27157] = HEAP32[27157] & ~(1 << $194);
      break;
     }
    } else {
     if ($164 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
     $204 = $164 + 16 | 0;
     if ((HEAP32[$204 >> 2] | 0) == ($10 | 0)) HEAP32[$204 >> 2] = $$3398; else HEAP32[$164 + 20 >> 2] = $$3398;
     if (!$$3398) break;
    }
    $209 = HEAP32[27160] | 0;
    if ($$3398 >>> 0 < $209 >>> 0) _abort();
    HEAP32[$$3398 + 24 >> 2] = $164;
    $212 = $10 + 16 | 0;
    $213 = HEAP32[$212 >> 2] | 0;
    do if ($213 | 0) if ($213 >>> 0 < $209 >>> 0) _abort(); else {
     HEAP32[$$3398 + 16 >> 2] = $213;
     HEAP32[$213 + 24 >> 2] = $$3398;
     break;
    } while (0);
    $219 = HEAP32[$212 + 4 >> 2] | 0;
    if ($219 | 0) if ($219 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
     HEAP32[$$3398 + 20 >> 2] = $219;
     HEAP32[$219 + 24 >> 2] = $$3398;
     break;
    }
   }
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $136 | 1;
  HEAP32[$$1 + $136 >> 2] = $136;
  if (($$1 | 0) == (HEAP32[27161] | 0)) {
   HEAP32[27158] = $136;
   return;
  } else $$2 = $136;
 } else {
  HEAP32[$114 >> 2] = $115 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1380 | 1;
  HEAP32[$$1 + $$1380 >> 2] = $$1380;
  $$2 = $$1380;
 }
 $234 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $237 = 108664 + ($234 << 1 << 2) | 0;
  $238 = HEAP32[27156] | 0;
  $239 = 1 << $234;
  if (!($238 & $239)) {
   HEAP32[27156] = $238 | $239;
   $$0401 = $237;
   $$pre$phiZ2D = $237 + 8 | 0;
  } else {
   $243 = $237 + 8 | 0;
   $244 = HEAP32[$243 >> 2] | 0;
   if ($244 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
    $$0401 = $244;
    $$pre$phiZ2D = $243;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0401 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0401;
  HEAP32[$$1 + 12 >> 2] = $237;
  return;
 }
 $250 = $$2 >>> 8;
 if (!$250) $$0394 = 0; else if ($$2 >>> 0 > 16777215) $$0394 = 31; else {
  $255 = ($250 + 1048320 | 0) >>> 16 & 8;
  $256 = $250 << $255;
  $259 = ($256 + 520192 | 0) >>> 16 & 4;
  $261 = $256 << $259;
  $264 = ($261 + 245760 | 0) >>> 16 & 2;
  $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
  $$0394 = $$2 >>> ($269 + 7 | 0) & 1 | $269 << 1;
 }
 $275 = 108928 + ($$0394 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0394;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $279 = HEAP32[27157] | 0;
 $280 = 1 << $$0394;
 do if (!($279 & $280)) {
  HEAP32[27157] = $279 | $280;
  HEAP32[$275 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $275;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
 } else {
  $$0381 = $$2 << (($$0394 | 0) == 31 ? 0 : 25 - ($$0394 >>> 1) | 0);
  $$0382 = HEAP32[$275 >> 2] | 0;
  while (1) {
   if ((HEAP32[$$0382 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
    label = 130;
    break;
   }
   $298 = $$0382 + 16 + ($$0381 >>> 31 << 2) | 0;
   $300 = HEAP32[$298 >> 2] | 0;
   if (!$300) {
    label = 127;
    break;
   } else {
    $$0381 = $$0381 << 1;
    $$0382 = $300;
   }
  }
  if ((label | 0) == 127) if ($298 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
   HEAP32[$298 >> 2] = $$1;
   HEAP32[$$1 + 24 >> 2] = $$0382;
   HEAP32[$$1 + 12 >> 2] = $$1;
   HEAP32[$$1 + 8 >> 2] = $$1;
   break;
  } else if ((label | 0) == 130) {
   $307 = $$0382 + 8 | 0;
   $308 = HEAP32[$307 >> 2] | 0;
   $309 = HEAP32[27160] | 0;
   if ($308 >>> 0 >= $309 >>> 0 & $$0382 >>> 0 >= $309 >>> 0) {
    HEAP32[$308 + 12 >> 2] = $$1;
    HEAP32[$307 >> 2] = $$1;
    HEAP32[$$1 + 8 >> 2] = $308;
    HEAP32[$$1 + 12 >> 2] = $$0382;
    HEAP32[$$1 + 24 >> 2] = 0;
    break;
   } else _abort();
  }
 } while (0);
 $317 = (HEAP32[27164] | 0) + -1 | 0;
 HEAP32[27164] = $317;
 if (!$317) $$0211$in$i = 109080; else return;
 while (1) {
  $$0211$i = HEAP32[$$0211$in$i >> 2] | 0;
  if (!$$0211$i) break; else $$0211$in$i = $$0211$i + 8 | 0;
 }
 HEAP32[27164] = -1;
 return;
}

function __ZNSt3__27__sort5IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_S6_S6_T_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i31 = 0, $$0$i34 = 0, $$0$i37 = 0, $106 = 0, $107 = 0, $112 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $137 = 0, $14 = 0, $142 = 0, $143 = 0, $15 = 0, $152 = 0, $158 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $183 = 0, $188 = 0, $189 = 0, $20 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $50 = 0, $51 = 0, $6 = 0, $60 = 0, $61 = 0, $66 = 0, $7 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $91 = 0, $96 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $6 = sp;
 $7 = __ZNSt3__27__sort4IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_S6_T_($0, $1, $2, $3, $5) | 0;
 $8 = $4 + 60 | 0;
 $14 = $3 + 60 | 0;
 $15 = $14 + 11 | 0;
 $20 = _strcmp((HEAP8[$8 + 11 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8, (HEAP8[$15 >> 0] | 0) < 0 ? HEAP32[$14 >> 2] | 0 : $14) | 0;
 if (!$20) $$0$i = _strcmp((HEAP8[$4 + 11 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4, (HEAP8[$3 + 11 >> 0] | 0) < 0 ? HEAP32[$3 >> 2] | 0 : $3) | 0; else $$0$i = $20;
 if (($$0$i | 0) >= 0) {
  $$0 = $7;
  STACKTOP = sp;
  return $$0 | 0;
 };
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $34 = $6 + 12 | 0;
 $35 = $3 + 12 | 0;
 HEAP32[$34 >> 2] = HEAP32[$35 >> 2];
 HEAP32[$34 + 4 >> 2] = HEAP32[$35 + 4 >> 2];
 HEAP32[$34 + 8 >> 2] = HEAP32[$35 + 8 >> 2];
 HEAP32[$35 >> 2] = 0;
 HEAP32[$35 + 4 >> 2] = 0;
 HEAP32[$35 + 8 >> 2] = 0;
 $36 = $6 + 24 | 0;
 $37 = $3 + 24 | 0;
 HEAP32[$36 >> 2] = HEAP32[$37 >> 2];
 HEAP32[$36 + 4 >> 2] = HEAP32[$37 + 4 >> 2];
 HEAP32[$36 + 8 >> 2] = HEAP32[$37 + 8 >> 2];
 HEAP32[$37 >> 2] = 0;
 HEAP32[$37 + 4 >> 2] = 0;
 HEAP32[$37 + 8 >> 2] = 0;
 $38 = $6 + 36 | 0;
 $39 = $3 + 36 | 0;
 HEAP32[$38 >> 2] = HEAP32[$39 >> 2];
 HEAP32[$38 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
 HEAP32[$38 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
 HEAP32[$39 >> 2] = 0;
 HEAP32[$39 + 4 >> 2] = 0;
 HEAP32[$39 + 8 >> 2] = 0;
 $40 = $6 + 48 | 0;
 $41 = $3 + 48 | 0;
 HEAP32[$40 >> 2] = HEAP32[$41 >> 2];
 HEAP32[$40 + 4 >> 2] = HEAP32[$41 + 4 >> 2];
 HEAP32[$40 + 8 >> 2] = HEAP32[$41 + 8 >> 2];
 HEAP32[$41 >> 2] = 0;
 HEAP32[$41 + 4 >> 2] = 0;
 HEAP32[$41 + 8 >> 2] = 0;
 $42 = $6 + 60 | 0;
 HEAP32[$42 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$42 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
 HEAP32[$42 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $45 = $3 + 72 | 0;
 $50 = HEAP32[$45 + 4 >> 2] | 0;
 $51 = $6 + 72 | 0;
 HEAP32[$51 >> 2] = HEAP32[$45 >> 2];
 HEAP32[$51 + 4 >> 2] = $50;
 __ZN6google19CommandLineFlagInfoaSEOS0_($3, $4) | 0;
 __ZN6google19CommandLineFlagInfoaSEOS0_($4, $6) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($38);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 $60 = $2 + 60 | 0;
 $61 = $60 + 11 | 0;
 $66 = _strcmp((HEAP8[$15 >> 0] | 0) < 0 ? HEAP32[$14 >> 2] | 0 : $14, (HEAP8[$61 >> 0] | 0) < 0 ? HEAP32[$60 >> 2] | 0 : $60) | 0;
 if (!$66) $$0$i31 = _strcmp((HEAP8[$3 + 11 >> 0] | 0) < 0 ? HEAP32[$3 >> 2] | 0 : $3, (HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) | 0; else $$0$i31 = $66;
 if (($$0$i31 | 0) >= 0) {
  $$0 = $7 + 1 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 };
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $80 = $6 + 12 | 0;
 $81 = $2 + 12 | 0;
 HEAP32[$80 >> 2] = HEAP32[$81 >> 2];
 HEAP32[$80 + 4 >> 2] = HEAP32[$81 + 4 >> 2];
 HEAP32[$80 + 8 >> 2] = HEAP32[$81 + 8 >> 2];
 HEAP32[$81 >> 2] = 0;
 HEAP32[$81 + 4 >> 2] = 0;
 HEAP32[$81 + 8 >> 2] = 0;
 $82 = $6 + 24 | 0;
 $83 = $2 + 24 | 0;
 HEAP32[$82 >> 2] = HEAP32[$83 >> 2];
 HEAP32[$82 + 4 >> 2] = HEAP32[$83 + 4 >> 2];
 HEAP32[$82 + 8 >> 2] = HEAP32[$83 + 8 >> 2];
 HEAP32[$83 >> 2] = 0;
 HEAP32[$83 + 4 >> 2] = 0;
 HEAP32[$83 + 8 >> 2] = 0;
 $84 = $6 + 36 | 0;
 $85 = $2 + 36 | 0;
 HEAP32[$84 >> 2] = HEAP32[$85 >> 2];
 HEAP32[$84 + 4 >> 2] = HEAP32[$85 + 4 >> 2];
 HEAP32[$84 + 8 >> 2] = HEAP32[$85 + 8 >> 2];
 HEAP32[$85 >> 2] = 0;
 HEAP32[$85 + 4 >> 2] = 0;
 HEAP32[$85 + 8 >> 2] = 0;
 $86 = $6 + 48 | 0;
 $87 = $2 + 48 | 0;
 HEAP32[$86 >> 2] = HEAP32[$87 >> 2];
 HEAP32[$86 + 4 >> 2] = HEAP32[$87 + 4 >> 2];
 HEAP32[$86 + 8 >> 2] = HEAP32[$87 + 8 >> 2];
 HEAP32[$87 >> 2] = 0;
 HEAP32[$87 + 4 >> 2] = 0;
 HEAP32[$87 + 8 >> 2] = 0;
 $88 = $6 + 60 | 0;
 HEAP32[$88 >> 2] = HEAP32[$60 >> 2];
 HEAP32[$88 + 4 >> 2] = HEAP32[$60 + 4 >> 2];
 HEAP32[$88 + 8 >> 2] = HEAP32[$60 + 8 >> 2];
 HEAP32[$60 >> 2] = 0;
 HEAP32[$60 + 4 >> 2] = 0;
 HEAP32[$60 + 8 >> 2] = 0;
 $91 = $2 + 72 | 0;
 $96 = HEAP32[$91 + 4 >> 2] | 0;
 $97 = $6 + 72 | 0;
 HEAP32[$97 >> 2] = HEAP32[$91 >> 2];
 HEAP32[$97 + 4 >> 2] = $96;
 __ZN6google19CommandLineFlagInfoaSEOS0_($2, $3) | 0;
 __ZN6google19CommandLineFlagInfoaSEOS0_($3, $6) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($88);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($86);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($84);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 $106 = $1 + 60 | 0;
 $107 = $106 + 11 | 0;
 $112 = _strcmp((HEAP8[$61 >> 0] | 0) < 0 ? HEAP32[$60 >> 2] | 0 : $60, (HEAP8[$107 >> 0] | 0) < 0 ? HEAP32[$106 >> 2] | 0 : $106) | 0;
 if (!$112) $$0$i34 = _strcmp((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2, (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1) | 0; else $$0$i34 = $112;
 if (($$0$i34 | 0) >= 0) {
  $$0 = $7 + 2 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 };
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $126 = $6 + 12 | 0;
 $127 = $1 + 12 | 0;
 HEAP32[$126 >> 2] = HEAP32[$127 >> 2];
 HEAP32[$126 + 4 >> 2] = HEAP32[$127 + 4 >> 2];
 HEAP32[$126 + 8 >> 2] = HEAP32[$127 + 8 >> 2];
 HEAP32[$127 >> 2] = 0;
 HEAP32[$127 + 4 >> 2] = 0;
 HEAP32[$127 + 8 >> 2] = 0;
 $128 = $6 + 24 | 0;
 $129 = $1 + 24 | 0;
 HEAP32[$128 >> 2] = HEAP32[$129 >> 2];
 HEAP32[$128 + 4 >> 2] = HEAP32[$129 + 4 >> 2];
 HEAP32[$128 + 8 >> 2] = HEAP32[$129 + 8 >> 2];
 HEAP32[$129 >> 2] = 0;
 HEAP32[$129 + 4 >> 2] = 0;
 HEAP32[$129 + 8 >> 2] = 0;
 $130 = $6 + 36 | 0;
 $131 = $1 + 36 | 0;
 HEAP32[$130 >> 2] = HEAP32[$131 >> 2];
 HEAP32[$130 + 4 >> 2] = HEAP32[$131 + 4 >> 2];
 HEAP32[$130 + 8 >> 2] = HEAP32[$131 + 8 >> 2];
 HEAP32[$131 >> 2] = 0;
 HEAP32[$131 + 4 >> 2] = 0;
 HEAP32[$131 + 8 >> 2] = 0;
 $132 = $6 + 48 | 0;
 $133 = $1 + 48 | 0;
 HEAP32[$132 >> 2] = HEAP32[$133 >> 2];
 HEAP32[$132 + 4 >> 2] = HEAP32[$133 + 4 >> 2];
 HEAP32[$132 + 8 >> 2] = HEAP32[$133 + 8 >> 2];
 HEAP32[$133 >> 2] = 0;
 HEAP32[$133 + 4 >> 2] = 0;
 HEAP32[$133 + 8 >> 2] = 0;
 $134 = $6 + 60 | 0;
 HEAP32[$134 >> 2] = HEAP32[$106 >> 2];
 HEAP32[$134 + 4 >> 2] = HEAP32[$106 + 4 >> 2];
 HEAP32[$134 + 8 >> 2] = HEAP32[$106 + 8 >> 2];
 HEAP32[$106 >> 2] = 0;
 HEAP32[$106 + 4 >> 2] = 0;
 HEAP32[$106 + 8 >> 2] = 0;
 $137 = $1 + 72 | 0;
 $142 = HEAP32[$137 + 4 >> 2] | 0;
 $143 = $6 + 72 | 0;
 HEAP32[$143 >> 2] = HEAP32[$137 >> 2];
 HEAP32[$143 + 4 >> 2] = $142;
 __ZN6google19CommandLineFlagInfoaSEOS0_($1, $2) | 0;
 __ZN6google19CommandLineFlagInfoaSEOS0_($2, $6) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($134);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($132);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($130);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($128);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($126);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 $152 = $0 + 60 | 0;
 $158 = _strcmp((HEAP8[$107 >> 0] | 0) < 0 ? HEAP32[$106 >> 2] | 0 : $106, (HEAP8[$152 + 11 >> 0] | 0) < 0 ? HEAP32[$152 >> 2] | 0 : $152) | 0;
 if (!$158) $$0$i37 = _strcmp((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, (HEAP8[$0 + 11 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0) | 0; else $$0$i37 = $158;
 if (($$0$i37 | 0) >= 0) {
  $$0 = $7 + 3 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 };
 HEAP32[$6 >> 2] = HEAP32[$0 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $172 = $6 + 12 | 0;
 $173 = $0 + 12 | 0;
 HEAP32[$172 >> 2] = HEAP32[$173 >> 2];
 HEAP32[$172 + 4 >> 2] = HEAP32[$173 + 4 >> 2];
 HEAP32[$172 + 8 >> 2] = HEAP32[$173 + 8 >> 2];
 HEAP32[$173 >> 2] = 0;
 HEAP32[$173 + 4 >> 2] = 0;
 HEAP32[$173 + 8 >> 2] = 0;
 $174 = $6 + 24 | 0;
 $175 = $0 + 24 | 0;
 HEAP32[$174 >> 2] = HEAP32[$175 >> 2];
 HEAP32[$174 + 4 >> 2] = HEAP32[$175 + 4 >> 2];
 HEAP32[$174 + 8 >> 2] = HEAP32[$175 + 8 >> 2];
 HEAP32[$175 >> 2] = 0;
 HEAP32[$175 + 4 >> 2] = 0;
 HEAP32[$175 + 8 >> 2] = 0;
 $176 = $6 + 36 | 0;
 $177 = $0 + 36 | 0;
 HEAP32[$176 >> 2] = HEAP32[$177 >> 2];
 HEAP32[$176 + 4 >> 2] = HEAP32[$177 + 4 >> 2];
 HEAP32[$176 + 8 >> 2] = HEAP32[$177 + 8 >> 2];
 HEAP32[$177 >> 2] = 0;
 HEAP32[$177 + 4 >> 2] = 0;
 HEAP32[$177 + 8 >> 2] = 0;
 $178 = $6 + 48 | 0;
 $179 = $0 + 48 | 0;
 HEAP32[$178 >> 2] = HEAP32[$179 >> 2];
 HEAP32[$178 + 4 >> 2] = HEAP32[$179 + 4 >> 2];
 HEAP32[$178 + 8 >> 2] = HEAP32[$179 + 8 >> 2];
 HEAP32[$179 >> 2] = 0;
 HEAP32[$179 + 4 >> 2] = 0;
 HEAP32[$179 + 8 >> 2] = 0;
 $180 = $6 + 60 | 0;
 HEAP32[$180 >> 2] = HEAP32[$152 >> 2];
 HEAP32[$180 + 4 >> 2] = HEAP32[$152 + 4 >> 2];
 HEAP32[$180 + 8 >> 2] = HEAP32[$152 + 8 >> 2];
 HEAP32[$152 >> 2] = 0;
 HEAP32[$152 + 4 >> 2] = 0;
 HEAP32[$152 + 8 >> 2] = 0;
 $183 = $0 + 72 | 0;
 $188 = HEAP32[$183 + 4 >> 2] | 0;
 $189 = $6 + 72 | 0;
 HEAP32[$189 >> 2] = HEAP32[$183 >> 2];
 HEAP32[$189 + 4 >> 2] = $188;
 __ZN6google19CommandLineFlagInfoaSEOS0_($0, $1) | 0;
 __ZN6google19CommandLineFlagInfoaSEOS0_($1, $6) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($180);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($178);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($174);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($172);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 $$0 = $7 + 4 | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function ___intscan($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0154222 = 0, $$0157 = 0, $$0159 = 0, $$1155188 = 0, $$1158 = 0, $$1160 = 0, $$1160169 = 0, $$1165 = 0, $$1165167 = 0, $$1165168 = 0, $$166 = 0, $$2156206 = 0, $$2161$be = 0, $$2161$lcssa = 0, $$3162$be = 0, $$3162$lcssa = 0, $$3162211 = 0, $$4163$be = 0, $$4163$lcssa = 0, $$5$be = 0, $$6$be = 0, $$6$lcssa = 0, $$7$be = 0, $$7194 = 0, $$8 = 0, $$9$be = 0, $$lcssa = 0, $102 = 0, $103 = 0, $104 = 0, $111 = 0, $123 = 0, $124 = 0, $131 = 0, $133 = 0, $134 = 0, $138 = 0, $139 = 0, $147 = 0, $152 = 0, $153 = 0, $155 = 0, $157 = 0, $159 = 0, $16 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $169 = 0, $170 = 0, $171 = 0, $189 = 0, $190 = 0, $198 = 0, $20 = 0, $204 = 0, $206 = 0, $207 = 0, $208 = 0, $21 = 0, $210 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $225 = 0, $226 = 0, $227 = 0, $242 = 0, $262 = 0, $264 = 0, $275 = 0, $28 = 0, $284 = 0, $287 = 0, $289 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $32 = 0, $40 = 0, $42 = 0, $50 = 0, $54 = 0, $6 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $94 = 0, $96 = 0, label = 0;
 L1 : do if ($1 >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $289 = 0;
  $290 = 0;
 } else {
  $6 = $0 + 4 | 0;
  $7 = $0 + 100 | 0;
  do {
   $9 = HEAP32[$6 >> 2] | 0;
   if ($9 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
    HEAP32[$6 >> 2] = $9 + 1;
    $16 = HEAPU8[$9 >> 0] | 0;
   } else $16 = ___shgetc($0) | 0;
  } while ((_isspace($16) | 0) != 0);
  L11 : do switch ($16 | 0) {
  case 43:
  case 45:
   {
    $20 = (($16 | 0) == 45) << 31 >> 31;
    $21 = HEAP32[$6 >> 2] | 0;
    if ($21 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
     HEAP32[$6 >> 2] = $21 + 1;
     $$0157 = $20;
     $$0159 = HEAPU8[$21 >> 0] | 0;
     break L11;
    } else {
     $$0157 = $20;
     $$0159 = ___shgetc($0) | 0;
     break L11;
    }
    break;
   }
  default:
   {
    $$0157 = 0;
    $$0159 = $16;
   }
  } while (0);
  $28 = ($1 | 0) == 0;
  do if (($1 | 16 | 0) == 16 & ($$0159 | 0) == 48) {
   $32 = HEAP32[$6 >> 2] | 0;
   if ($32 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
    HEAP32[$6 >> 2] = $32 + 1;
    $40 = HEAPU8[$32 >> 0] | 0;
   } else $40 = ___shgetc($0) | 0;
   if (($40 | 32 | 0) != 120) if ($28) {
    $$1160169 = $40;
    $$1165168 = 8;
    label = 46;
    break;
   } else {
    $$1160 = $40;
    $$1165 = $1;
    label = 32;
    break;
   }
   $42 = HEAP32[$6 >> 2] | 0;
   if ($42 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
    HEAP32[$6 >> 2] = $42 + 1;
    $50 = HEAPU8[$42 >> 0] | 0;
   } else $50 = ___shgetc($0) | 0;
   if ((HEAPU8[95690 + $50 >> 0] | 0) > 15) {
    $54 = (HEAP32[$7 >> 2] | 0) == 0;
    if (!$54) HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -1;
    if (!$2) {
     ___shlim($0, 0);
     $289 = 0;
     $290 = 0;
     break L1;
    }
    if ($54) {
     $289 = 0;
     $290 = 0;
     break L1;
    }
    HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -1;
    $289 = 0;
    $290 = 0;
    break L1;
   } else {
    $$1160169 = $50;
    $$1165168 = 16;
    label = 46;
   }
  } else {
   $$166 = $28 ? 10 : $1;
   if ((HEAPU8[95690 + $$0159 >> 0] | 0) >>> 0 < $$166 >>> 0) {
    $$1160 = $$0159;
    $$1165 = $$166;
    label = 32;
   } else {
    if (HEAP32[$7 >> 2] | 0) HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -1;
    ___shlim($0, 0);
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    $289 = 0;
    $290 = 0;
    break L1;
   }
  } while (0);
  if ((label | 0) == 32) if (($$1165 | 0) == 10) {
   $70 = $$1160 + -48 | 0;
   if ($70 >>> 0 < 10) {
    $$0154222 = 0;
    $74 = $70;
    do {
     $$0154222 = ($$0154222 * 10 | 0) + $74 | 0;
     $75 = HEAP32[$6 >> 2] | 0;
     if ($75 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $75 + 1;
      $$2161$be = HEAPU8[$75 >> 0] | 0;
     } else $$2161$be = ___shgetc($0) | 0;
     $74 = $$2161$be + -48 | 0;
    } while ($74 >>> 0 < 10 & $$0154222 >>> 0 < 429496729);
    $$2161$lcssa = $$2161$be;
    $291 = $$0154222;
    $292 = 0;
   } else {
    $$2161$lcssa = $$1160;
    $291 = 0;
    $292 = 0;
   }
   $86 = $$2161$lcssa + -48 | 0;
   if ($86 >>> 0 < 10) {
    $$3162211 = $$2161$lcssa;
    $88 = $291;
    $89 = $292;
    $92 = $86;
    while (1) {
     $90 = ___muldi3($88 | 0, $89 | 0, 10, 0) | 0;
     $91 = tempRet0;
     $94 = (($92 | 0) < 0) << 31 >> 31;
     $96 = ~$94;
     if ($91 >>> 0 > $96 >>> 0 | ($91 | 0) == ($96 | 0) & $90 >>> 0 > ~$92 >>> 0) {
      $$3162$lcssa = $$3162211;
      $$lcssa = $92;
      $293 = $88;
      $294 = $89;
      break;
     }
     $102 = _i64Add($90 | 0, $91 | 0, $92 | 0, $94 | 0) | 0;
     $103 = tempRet0;
     $104 = HEAP32[$6 >> 2] | 0;
     if ($104 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $104 + 1;
      $$3162$be = HEAPU8[$104 >> 0] | 0;
     } else $$3162$be = ___shgetc($0) | 0;
     $111 = $$3162$be + -48 | 0;
     if ($111 >>> 0 < 10 & ($103 >>> 0 < 429496729 | ($103 | 0) == 429496729 & $102 >>> 0 < 2576980378)) {
      $$3162211 = $$3162$be;
      $88 = $102;
      $89 = $103;
      $92 = $111;
     } else {
      $$3162$lcssa = $$3162$be;
      $$lcssa = $111;
      $293 = $102;
      $294 = $103;
      break;
     }
    }
    if ($$lcssa >>> 0 > 9) {
     $$1158 = $$0157;
     $262 = $294;
     $264 = $293;
    } else {
     $$1165167 = 10;
     $$8 = $$3162$lcssa;
     $295 = $293;
     $296 = $294;
     label = 72;
    }
   } else {
    $$1158 = $$0157;
    $262 = $292;
    $264 = $291;
   }
  } else {
   $$1160169 = $$1160;
   $$1165168 = $$1165;
   label = 46;
  }
  L63 : do if ((label | 0) == 46) {
   if (!($$1165168 + -1 & $$1165168)) {
    $131 = HEAP8[95946 + (($$1165168 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    $133 = HEAP8[95690 + $$1160169 >> 0] | 0;
    $134 = $133 & 255;
    if ($134 >>> 0 < $$1165168 >>> 0) {
     $$1155188 = 0;
     $138 = $134;
     do {
      $$1155188 = $138 | $$1155188 << $131;
      $139 = HEAP32[$6 >> 2] | 0;
      if ($139 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
       HEAP32[$6 >> 2] = $139 + 1;
       $$4163$be = HEAPU8[$139 >> 0] | 0;
      } else $$4163$be = ___shgetc($0) | 0;
      $147 = HEAP8[95690 + $$4163$be >> 0] | 0;
      $138 = $147 & 255;
     } while ($$1155188 >>> 0 < 134217728 & $138 >>> 0 < $$1165168 >>> 0);
     $$4163$lcssa = $$4163$be;
     $155 = $147;
     $157 = 0;
     $159 = $$1155188;
    } else {
     $$4163$lcssa = $$1160169;
     $155 = $133;
     $157 = 0;
     $159 = 0;
    }
    $152 = _bitshift64Lshr(-1, -1, $131 | 0) | 0;
    $153 = tempRet0;
    if (($155 & 255) >>> 0 >= $$1165168 >>> 0 | ($157 >>> 0 > $153 >>> 0 | ($157 | 0) == ($153 | 0) & $159 >>> 0 > $152 >>> 0)) {
     $$1165167 = $$1165168;
     $$8 = $$4163$lcssa;
     $295 = $159;
     $296 = $157;
     label = 72;
     break;
    } else {
     $164 = $159;
     $165 = $157;
     $169 = $155;
    }
    while (1) {
     $166 = _bitshift64Shl($164 | 0, $165 | 0, $131 | 0) | 0;
     $167 = tempRet0;
     $170 = $169 & 255 | $166;
     $171 = HEAP32[$6 >> 2] | 0;
     if ($171 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $171 + 1;
      $$5$be = HEAPU8[$171 >> 0] | 0;
     } else $$5$be = ___shgetc($0) | 0;
     $169 = HEAP8[95690 + $$5$be >> 0] | 0;
     if (($169 & 255) >>> 0 >= $$1165168 >>> 0 | ($167 >>> 0 > $153 >>> 0 | ($167 | 0) == ($153 | 0) & $170 >>> 0 > $152 >>> 0)) {
      $$1165167 = $$1165168;
      $$8 = $$5$be;
      $295 = $170;
      $296 = $167;
      label = 72;
      break L63;
     } else {
      $164 = $170;
      $165 = $167;
     }
    }
   }
   $123 = HEAP8[95690 + $$1160169 >> 0] | 0;
   $124 = $123 & 255;
   if ($124 >>> 0 < $$1165168 >>> 0) {
    $$2156206 = 0;
    $189 = $124;
    do {
     $$2156206 = $189 + (Math_imul($$2156206, $$1165168) | 0) | 0;
     $190 = HEAP32[$6 >> 2] | 0;
     if ($190 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $190 + 1;
      $$6$be = HEAPU8[$190 >> 0] | 0;
     } else $$6$be = ___shgetc($0) | 0;
     $198 = HEAP8[95690 + $$6$be >> 0] | 0;
     $189 = $198 & 255;
    } while ($$2156206 >>> 0 < 119304647 & $189 >>> 0 < $$1165168 >>> 0);
    $$6$lcssa = $$6$be;
    $204 = $198;
    $297 = $$2156206;
    $298 = 0;
   } else {
    $$6$lcssa = $$1160169;
    $204 = $123;
    $297 = 0;
    $298 = 0;
   }
   if (($204 & 255) >>> 0 < $$1165168 >>> 0) {
    $206 = ___udivdi3(-1, -1, $$1165168 | 0, 0) | 0;
    $207 = tempRet0;
    $$7194 = $$6$lcssa;
    $208 = $298;
    $210 = $297;
    $218 = $204;
    while (1) {
     if ($208 >>> 0 > $207 >>> 0 | ($208 | 0) == ($207 | 0) & $210 >>> 0 > $206 >>> 0) {
      $$1165167 = $$1165168;
      $$8 = $$7194;
      $295 = $210;
      $296 = $208;
      label = 72;
      break L63;
     }
     $215 = ___muldi3($210 | 0, $208 | 0, $$1165168 | 0, 0) | 0;
     $216 = tempRet0;
     $217 = $218 & 255;
     if ($216 >>> 0 > 4294967295 | ($216 | 0) == -1 & $215 >>> 0 > ~$217 >>> 0) {
      $$1165167 = $$1165168;
      $$8 = $$7194;
      $295 = $210;
      $296 = $208;
      label = 72;
      break L63;
     }
     $225 = _i64Add($217 | 0, 0, $215 | 0, $216 | 0) | 0;
     $226 = tempRet0;
     $227 = HEAP32[$6 >> 2] | 0;
     if ($227 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
      HEAP32[$6 >> 2] = $227 + 1;
      $$7$be = HEAPU8[$227 >> 0] | 0;
     } else $$7$be = ___shgetc($0) | 0;
     $218 = HEAP8[95690 + $$7$be >> 0] | 0;
     if (($218 & 255) >>> 0 >= $$1165168 >>> 0) {
      $$1165167 = $$1165168;
      $$8 = $$7$be;
      $295 = $225;
      $296 = $226;
      label = 72;
      break;
     } else {
      $$7194 = $$7$be;
      $208 = $226;
      $210 = $225;
     }
    }
   } else {
    $$1165167 = $$1165168;
    $$8 = $$6$lcssa;
    $295 = $297;
    $296 = $298;
    label = 72;
   }
  } while (0);
  if ((label | 0) == 72) if ((HEAPU8[95690 + $$8 >> 0] | 0) >>> 0 < $$1165167 >>> 0) {
   do {
    $242 = HEAP32[$6 >> 2] | 0;
    if ($242 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
     HEAP32[$6 >> 2] = $242 + 1;
     $$9$be = HEAPU8[$242 >> 0] | 0;
    } else $$9$be = ___shgetc($0) | 0;
   } while ((HEAPU8[95690 + $$9$be >> 0] | 0) >>> 0 < $$1165167 >>> 0);
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $$1158 = ($3 & 1 | 0) == 0 & 0 == 0 ? $$0157 : 0;
   $262 = $4;
   $264 = $3;
  } else {
   $$1158 = $$0157;
   $262 = $296;
   $264 = $295;
  }
  if (HEAP32[$7 >> 2] | 0) HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -1;
  if (!($262 >>> 0 < $4 >>> 0 | ($262 | 0) == ($4 | 0) & $264 >>> 0 < $3 >>> 0)) {
   if (!(($3 & 1 | 0) != 0 | 0 != 0 | ($$1158 | 0) != 0)) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $275 = _i64Add($3 | 0, $4 | 0, -1, -1) | 0;
    $289 = tempRet0;
    $290 = $275;
    break;
   }
   if ($262 >>> 0 > $4 >>> 0 | ($262 | 0) == ($4 | 0) & $264 >>> 0 > $3 >>> 0) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $289 = $4;
    $290 = $3;
    break;
   }
  }
  $284 = (($$1158 | 0) < 0) << 31 >> 31;
  $287 = _i64Subtract($264 ^ $$1158 | 0, $262 ^ $284 | 0, $$1158 | 0, $284 | 0) | 0;
  $289 = tempRet0;
  $290 = $287;
 } while (0);
 tempRet0 = $289;
 return $290 | 0;
}

function _dispose_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0417 = 0, $$0418 = 0, $$0429 = 0, $$0436 = 0, $$1 = 0, $$1416 = 0, $$1424 = 0, $$1427 = 0, $$1431 = 0, $$1435 = 0, $$2 = 0, $$3 = 0, $$3433 = 0, $$pre$phi22Z2D = 0, $$pre$phi24Z2D = 0, $$pre$phiZ2D = 0, $101 = 0, $102 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $118 = 0, $12 = 0, $126 = 0, $13 = 0, $131 = 0, $132 = 0, $135 = 0, $137 = 0, $139 = 0, $152 = 0, $157 = 0, $159 = 0, $162 = 0, $164 = 0, $167 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $174 = 0, $176 = 0, $177 = 0, $179 = 0, $180 = 0, $185 = 0, $186 = 0, $195 = 0, $2 = 0, $20 = 0, $200 = 0, $203 = 0, $204 = 0, $210 = 0, $22 = 0, $225 = 0, $228 = 0, $229 = 0, $230 = 0, $234 = 0, $235 = 0, $24 = 0, $241 = 0, $246 = 0, $247 = 0, $250 = 0, $252 = 0, $255 = 0, $260 = 0, $266 = 0, $270 = 0, $271 = 0, $289 = 0, $291 = 0, $298 = 0, $299 = 0, $300 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $47 = 0, $49 = 0, $52 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $80 = 0, $85 = 0, $88 = 0, $89 = 0, $95 = 0, label = 0;
 $2 = $0 + $1 | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 do if (!($4 & 1)) {
  $7 = HEAP32[$0 >> 2] | 0;
  if (!($4 & 3)) return;
  $11 = $0 + (0 - $7) | 0;
  $12 = $7 + $1 | 0;
  $13 = HEAP32[27160] | 0;
  if ($11 >>> 0 < $13 >>> 0) _abort();
  if (($11 | 0) == (HEAP32[27161] | 0)) {
   $101 = $2 + 4 | 0;
   $102 = HEAP32[$101 >> 2] | 0;
   if (($102 & 3 | 0) != 3) {
    $$1 = $11;
    $$1416 = $12;
    break;
   }
   HEAP32[27158] = $12;
   HEAP32[$101 >> 2] = $102 & -2;
   HEAP32[$11 + 4 >> 2] = $12 | 1;
   HEAP32[$11 + $12 >> 2] = $12;
   return;
  }
  $17 = $7 >>> 3;
  if ($7 >>> 0 < 256) {
   $20 = HEAP32[$11 + 8 >> 2] | 0;
   $22 = HEAP32[$11 + 12 >> 2] | 0;
   $24 = 108664 + ($17 << 1 << 2) | 0;
   if (($20 | 0) != ($24 | 0)) {
    if ($20 >>> 0 < $13 >>> 0) _abort();
    if ((HEAP32[$20 + 12 >> 2] | 0) != ($11 | 0)) _abort();
   }
   if (($22 | 0) == ($20 | 0)) {
    HEAP32[27156] = HEAP32[27156] & ~(1 << $17);
    $$1 = $11;
    $$1416 = $12;
    break;
   }
   if (($22 | 0) == ($24 | 0)) $$pre$phi24Z2D = $22 + 8 | 0; else {
    if ($22 >>> 0 < $13 >>> 0) _abort();
    $37 = $22 + 8 | 0;
    if ((HEAP32[$37 >> 2] | 0) == ($11 | 0)) $$pre$phi24Z2D = $37; else _abort();
   }
   HEAP32[$20 + 12 >> 2] = $22;
   HEAP32[$$pre$phi24Z2D >> 2] = $20;
   $$1 = $11;
   $$1416 = $12;
   break;
  }
  $42 = HEAP32[$11 + 24 >> 2] | 0;
  $44 = HEAP32[$11 + 12 >> 2] | 0;
  do if (($44 | 0) == ($11 | 0)) {
   $55 = $11 + 16 | 0;
   $56 = $55 + 4 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   if (!$57) {
    $59 = HEAP32[$55 >> 2] | 0;
    if (!$59) {
     $$3 = 0;
     break;
    } else {
     $$1424 = $59;
     $$1427 = $55;
    }
   } else {
    $$1424 = $57;
    $$1427 = $56;
   }
   while (1) {
    $61 = $$1424 + 20 | 0;
    $62 = HEAP32[$61 >> 2] | 0;
    if ($62 | 0) {
     $$1424 = $62;
     $$1427 = $61;
     continue;
    }
    $64 = $$1424 + 16 | 0;
    $65 = HEAP32[$64 >> 2] | 0;
    if (!$65) break; else {
     $$1424 = $65;
     $$1427 = $64;
    }
   }
   if ($$1427 >>> 0 < $13 >>> 0) _abort(); else {
    HEAP32[$$1427 >> 2] = 0;
    $$3 = $$1424;
    break;
   }
  } else {
   $47 = HEAP32[$11 + 8 >> 2] | 0;
   if ($47 >>> 0 < $13 >>> 0) _abort();
   $49 = $47 + 12 | 0;
   if ((HEAP32[$49 >> 2] | 0) != ($11 | 0)) _abort();
   $52 = $44 + 8 | 0;
   if ((HEAP32[$52 >> 2] | 0) == ($11 | 0)) {
    HEAP32[$49 >> 2] = $44;
    HEAP32[$52 >> 2] = $47;
    $$3 = $44;
    break;
   } else _abort();
  } while (0);
  if (!$42) {
   $$1 = $11;
   $$1416 = $12;
  } else {
   $70 = HEAP32[$11 + 28 >> 2] | 0;
   $71 = 108928 + ($70 << 2) | 0;
   if (($11 | 0) == (HEAP32[$71 >> 2] | 0)) {
    HEAP32[$71 >> 2] = $$3;
    if (!$$3) {
     HEAP32[27157] = HEAP32[27157] & ~(1 << $70);
     $$1 = $11;
     $$1416 = $12;
     break;
    }
   } else {
    if ($42 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
    $80 = $42 + 16 | 0;
    if ((HEAP32[$80 >> 2] | 0) == ($11 | 0)) HEAP32[$80 >> 2] = $$3; else HEAP32[$42 + 20 >> 2] = $$3;
    if (!$$3) {
     $$1 = $11;
     $$1416 = $12;
     break;
    }
   }
   $85 = HEAP32[27160] | 0;
   if ($$3 >>> 0 < $85 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $42;
   $88 = $11 + 16 | 0;
   $89 = HEAP32[$88 >> 2] | 0;
   do if ($89 | 0) if ($89 >>> 0 < $85 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $89;
    HEAP32[$89 + 24 >> 2] = $$3;
    break;
   } while (0);
   $95 = HEAP32[$88 + 4 >> 2] | 0;
   if (!$95) {
    $$1 = $11;
    $$1416 = $12;
   } else if ($95 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $95;
    HEAP32[$95 + 24 >> 2] = $$3;
    $$1 = $11;
    $$1416 = $12;
    break;
   }
  }
 } else {
  $$1 = $0;
  $$1416 = $1;
 } while (0);
 $109 = HEAP32[27160] | 0;
 if ($2 >>> 0 < $109 >>> 0) _abort();
 $111 = $2 + 4 | 0;
 $112 = HEAP32[$111 >> 2] | 0;
 if (!($112 & 2)) {
  if (($2 | 0) == (HEAP32[27162] | 0)) {
   $118 = (HEAP32[27159] | 0) + $$1416 | 0;
   HEAP32[27159] = $118;
   HEAP32[27162] = $$1;
   HEAP32[$$1 + 4 >> 2] = $118 | 1;
   if (($$1 | 0) != (HEAP32[27161] | 0)) return;
   HEAP32[27161] = 0;
   HEAP32[27158] = 0;
   return;
  }
  if (($2 | 0) == (HEAP32[27161] | 0)) {
   $126 = (HEAP32[27158] | 0) + $$1416 | 0;
   HEAP32[27158] = $126;
   HEAP32[27161] = $$1;
   HEAP32[$$1 + 4 >> 2] = $126 | 1;
   HEAP32[$$1 + $126 >> 2] = $126;
   return;
  }
  $131 = ($112 & -8) + $$1416 | 0;
  $132 = $112 >>> 3;
  do if ($112 >>> 0 < 256) {
   $135 = HEAP32[$2 + 8 >> 2] | 0;
   $137 = HEAP32[$2 + 12 >> 2] | 0;
   $139 = 108664 + ($132 << 1 << 2) | 0;
   if (($135 | 0) != ($139 | 0)) {
    if ($135 >>> 0 < $109 >>> 0) _abort();
    if ((HEAP32[$135 + 12 >> 2] | 0) != ($2 | 0)) _abort();
   }
   if (($137 | 0) == ($135 | 0)) {
    HEAP32[27156] = HEAP32[27156] & ~(1 << $132);
    break;
   }
   if (($137 | 0) == ($139 | 0)) $$pre$phi22Z2D = $137 + 8 | 0; else {
    if ($137 >>> 0 < $109 >>> 0) _abort();
    $152 = $137 + 8 | 0;
    if ((HEAP32[$152 >> 2] | 0) == ($2 | 0)) $$pre$phi22Z2D = $152; else _abort();
   }
   HEAP32[$135 + 12 >> 2] = $137;
   HEAP32[$$pre$phi22Z2D >> 2] = $135;
  } else {
   $157 = HEAP32[$2 + 24 >> 2] | 0;
   $159 = HEAP32[$2 + 12 >> 2] | 0;
   do if (($159 | 0) == ($2 | 0)) {
    $170 = $2 + 16 | 0;
    $171 = $170 + 4 | 0;
    $172 = HEAP32[$171 >> 2] | 0;
    if (!$172) {
     $174 = HEAP32[$170 >> 2] | 0;
     if (!$174) {
      $$3433 = 0;
      break;
     } else {
      $$1431 = $174;
      $$1435 = $170;
     }
    } else {
     $$1431 = $172;
     $$1435 = $171;
    }
    while (1) {
     $176 = $$1431 + 20 | 0;
     $177 = HEAP32[$176 >> 2] | 0;
     if ($177 | 0) {
      $$1431 = $177;
      $$1435 = $176;
      continue;
     }
     $179 = $$1431 + 16 | 0;
     $180 = HEAP32[$179 >> 2] | 0;
     if (!$180) break; else {
      $$1431 = $180;
      $$1435 = $179;
     }
    }
    if ($$1435 >>> 0 < $109 >>> 0) _abort(); else {
     HEAP32[$$1435 >> 2] = 0;
     $$3433 = $$1431;
     break;
    }
   } else {
    $162 = HEAP32[$2 + 8 >> 2] | 0;
    if ($162 >>> 0 < $109 >>> 0) _abort();
    $164 = $162 + 12 | 0;
    if ((HEAP32[$164 >> 2] | 0) != ($2 | 0)) _abort();
    $167 = $159 + 8 | 0;
    if ((HEAP32[$167 >> 2] | 0) == ($2 | 0)) {
     HEAP32[$164 >> 2] = $159;
     HEAP32[$167 >> 2] = $162;
     $$3433 = $159;
     break;
    } else _abort();
   } while (0);
   if ($157 | 0) {
    $185 = HEAP32[$2 + 28 >> 2] | 0;
    $186 = 108928 + ($185 << 2) | 0;
    if (($2 | 0) == (HEAP32[$186 >> 2] | 0)) {
     HEAP32[$186 >> 2] = $$3433;
     if (!$$3433) {
      HEAP32[27157] = HEAP32[27157] & ~(1 << $185);
      break;
     }
    } else {
     if ($157 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
     $195 = $157 + 16 | 0;
     if ((HEAP32[$195 >> 2] | 0) == ($2 | 0)) HEAP32[$195 >> 2] = $$3433; else HEAP32[$157 + 20 >> 2] = $$3433;
     if (!$$3433) break;
    }
    $200 = HEAP32[27160] | 0;
    if ($$3433 >>> 0 < $200 >>> 0) _abort();
    HEAP32[$$3433 + 24 >> 2] = $157;
    $203 = $2 + 16 | 0;
    $204 = HEAP32[$203 >> 2] | 0;
    do if ($204 | 0) if ($204 >>> 0 < $200 >>> 0) _abort(); else {
     HEAP32[$$3433 + 16 >> 2] = $204;
     HEAP32[$204 + 24 >> 2] = $$3433;
     break;
    } while (0);
    $210 = HEAP32[$203 + 4 >> 2] | 0;
    if ($210 | 0) if ($210 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
     HEAP32[$$3433 + 20 >> 2] = $210;
     HEAP32[$210 + 24 >> 2] = $$3433;
     break;
    }
   }
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $131 | 1;
  HEAP32[$$1 + $131 >> 2] = $131;
  if (($$1 | 0) == (HEAP32[27161] | 0)) {
   HEAP32[27158] = $131;
   return;
  } else $$2 = $131;
 } else {
  HEAP32[$111 >> 2] = $112 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1416 | 1;
  HEAP32[$$1 + $$1416 >> 2] = $$1416;
  $$2 = $$1416;
 }
 $225 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $228 = 108664 + ($225 << 1 << 2) | 0;
  $229 = HEAP32[27156] | 0;
  $230 = 1 << $225;
  if (!($229 & $230)) {
   HEAP32[27156] = $229 | $230;
   $$0436 = $228;
   $$pre$phiZ2D = $228 + 8 | 0;
  } else {
   $234 = $228 + 8 | 0;
   $235 = HEAP32[$234 >> 2] | 0;
   if ($235 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
    $$0436 = $235;
    $$pre$phiZ2D = $234;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0436 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0436;
  HEAP32[$$1 + 12 >> 2] = $228;
  return;
 }
 $241 = $$2 >>> 8;
 if (!$241) $$0429 = 0; else if ($$2 >>> 0 > 16777215) $$0429 = 31; else {
  $246 = ($241 + 1048320 | 0) >>> 16 & 8;
  $247 = $241 << $246;
  $250 = ($247 + 520192 | 0) >>> 16 & 4;
  $252 = $247 << $250;
  $255 = ($252 + 245760 | 0) >>> 16 & 2;
  $260 = 14 - ($250 | $246 | $255) + ($252 << $255 >>> 15) | 0;
  $$0429 = $$2 >>> ($260 + 7 | 0) & 1 | $260 << 1;
 }
 $266 = 108928 + ($$0429 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0429;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $270 = HEAP32[27157] | 0;
 $271 = 1 << $$0429;
 if (!($270 & $271)) {
  HEAP32[27157] = $270 | $271;
  HEAP32[$266 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $266;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 }
 $$0417 = $$2 << (($$0429 | 0) == 31 ? 0 : 25 - ($$0429 >>> 1) | 0);
 $$0418 = HEAP32[$266 >> 2] | 0;
 while (1) {
  if ((HEAP32[$$0418 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
   label = 127;
   break;
  }
  $289 = $$0418 + 16 + ($$0417 >>> 31 << 2) | 0;
  $291 = HEAP32[$289 >> 2] | 0;
  if (!$291) {
   label = 124;
   break;
  } else {
   $$0417 = $$0417 << 1;
   $$0418 = $291;
  }
 }
 if ((label | 0) == 124) {
  if ($289 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
  HEAP32[$289 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $$0418;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 } else if ((label | 0) == 127) {
  $298 = $$0418 + 8 | 0;
  $299 = HEAP32[$298 >> 2] | 0;
  $300 = HEAP32[27160] | 0;
  if (!($299 >>> 0 >= $300 >>> 0 & $$0418 >>> 0 >= $300 >>> 0)) _abort();
  HEAP32[$299 + 12 >> 2] = $$1;
  HEAP32[$298 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $299;
  HEAP32[$$1 + 12 >> 2] = $$0418;
  HEAP32[$$1 + 24 >> 2] = 0;
  return;
 }
}

function __Z11luaK_posfixP9FuncState6BinOprP7expdescS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i76 = 0, $$0$i75 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i73 = 0, $$pre = 0, $$pre106 = 0, $10 = 0, $100 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $116 = 0, $118 = 0, $119 = 0, $120 = 0, $124 = 0, $13 = 0, $131 = 0, $136 = 0, $137 = 0, $144 = 0, $148 = 0, $149 = 0, $153 = 0, $160 = 0, $165 = 0, $166 = 0, $173 = 0, $177 = 0, $178 = 0, $18 = 0, $182 = 0, $189 = 0, $194 = 0, $195 = 0, $202 = 0, $206 = 0, $207 = 0, $211 = 0, $218 = 0, $223 = 0, $224 = 0, $231 = 0, $235 = 0, $236 = 0, $24 = 0, $240 = 0, $247 = 0, $252 = 0, $253 = 0, $260 = 0, $264 = 0, $265 = 0, $269 = 0, $276 = 0, $28 = 0, $281 = 0, $282 = 0, $289 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $37 = 0, $4 = 0, $42 = 0, $48 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $65 = 0, $70 = 0, $71 = 0, $78 = 0, $8 = 0, $82 = 0, $83 = 0, $85 = 0, $93 = 0;
 do switch ($1 | 0) {
 case 13:
  {
   __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $3);
   $4 = $3 + 16 | 0;
   $6 = HEAP32[$2 + 16 >> 2] | 0;
   do if (($6 | 0) != -1) {
    $8 = HEAP32[$4 >> 2] | 0;
    if (($8 | 0) == -1) {
     HEAP32[$4 >> 2] = $6;
     break;
    }
    $$idx$val$idx$val$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
    $$0$i = $8;
    while (1) {
     $10 = $$idx$val$idx$val$i + ($$0$i << 2) | 0;
     $11 = HEAP32[$10 >> 2] | 0;
     $13 = ($11 >>> 14) + -131071 | 0;
     $$0$i$i = ($13 | 0) == -1 ? -1 : $$0$i + 1 + $13 | 0;
     if (($$0$i$i | 0) == -1) break; else $$0$i = $$0$i$i;
    }
    $18 = $6 + ~$$0$i | 0;
    if (((($18 | 0) > -1 ? $18 : 0 - $18 | 0) | 0) > 131071) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
     $24 = HEAP32[$10 >> 2] | 0;
    } else $24 = $11;
    HEAP32[$10 >> 2] = $24 & 16383 | ($18 << 14) + 2147467264;
   } while (0);
   HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$2 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
   HEAP32[$2 + 16 >> 2] = HEAP32[$3 + 16 >> 2];
   return;
  }
 case 14:
  {
   __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $3);
   $28 = $3 + 12 | 0;
   $30 = HEAP32[$2 + 12 >> 2] | 0;
   do if (($30 | 0) != -1) {
    $32 = HEAP32[$28 >> 2] | 0;
    if (($32 | 0) == -1) {
     HEAP32[$28 >> 2] = $30;
     break;
    }
    $$idx$val$idx$val$i73 = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
    $$0$i75 = $32;
    while (1) {
     $34 = $$idx$val$idx$val$i73 + ($$0$i75 << 2) | 0;
     $35 = HEAP32[$34 >> 2] | 0;
     $37 = ($35 >>> 14) + -131071 | 0;
     $$0$i$i76 = ($37 | 0) == -1 ? -1 : $$0$i75 + 1 + $37 | 0;
     if (($$0$i$i76 | 0) == -1) break; else $$0$i75 = $$0$i$i76;
    }
    $42 = $30 + ~$$0$i75 | 0;
    if (((($42 | 0) > -1 ? $42 : 0 - $42 | 0) | 0) > 131071) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
     $48 = HEAP32[$34 >> 2] | 0;
    } else $48 = $35;
    HEAP32[$34 >> 2] = $48 & 16383 | ($42 << 14) + 2147467264;
   } while (0);
   HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$2 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
   HEAP32[$2 + 16 >> 2] = HEAP32[$3 + 16 >> 2];
   return;
  }
 case 6:
  {
   if ((HEAP32[$3 + 12 >> 2] | 0) == (HEAP32[$3 + 16 >> 2] | 0)) __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $3); else __Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $3) | 0;
   if ((HEAP32[$3 >> 2] | 0) == 11) {
    $59 = $3 + 4 | 0;
    $60 = HEAP32[$59 >> 2] | 0;
    $62 = (HEAP32[$0 >> 2] | 0) + 12 | 0;
    $63 = HEAP32[$62 >> 2] | 0;
    $65 = HEAP32[$63 + ($60 << 2) >> 2] | 0;
    if (($65 & 63 | 0) == 21) {
     $70 = $2 + 4 | 0;
     if ((HEAP32[$2 >> 2] | 0) == 12) {
      $71 = HEAP32[$70 >> 2] | 0;
      if (!($71 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) > ($71 | 0)) {
       $82 = $63;
       $83 = $60;
       $85 = $65;
      } else {
       $78 = $0 + 36 | 0;
       HEAP32[$78 >> 2] = (HEAP32[$78 >> 2] | 0) + -1;
       $$pre = HEAP32[$59 >> 2] | 0;
       $$pre106 = HEAP32[$62 >> 2] | 0;
       $82 = $$pre106;
       $83 = $$pre;
       $85 = HEAP32[$$pre106 + ($$pre << 2) >> 2] | 0;
      } else {
       $82 = $63;
       $83 = $60;
       $85 = $65;
      }
     } else {
      $82 = $63;
      $83 = $60;
      $85 = $65;
     }
     HEAP32[$82 + ($83 << 2) >> 2] = HEAP32[$70 >> 2] << 23 | $85 & 8388607;
     HEAP32[$2 >> 2] = 11;
     HEAP32[$70 >> 2] = HEAP32[$59 >> 2];
     return;
    }
   }
   __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $3);
   if ((HEAP32[$3 >> 2] | 0) == 12) {
    $93 = HEAP32[$3 + 4 >> 2] | 0;
    if (!($93 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($93 | 0)) {
     $100 = $0 + 36 | 0;
     HEAP32[$100 >> 2] = (HEAP32[$100 >> 2] | 0) + -1;
    }
   }
   $103 = $0 + 36 | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   $105 = $104 + 1 | 0;
   $106 = HEAP32[$0 >> 2] | 0;
   if (($104 | 0) < (HEAPU8[$106 + 75 >> 0] | 0 | 0)) $118 = $104; else {
    if (($104 | 0) > 248) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
     $116 = HEAP32[$0 >> 2] | 0;
    } else $116 = $106;
    HEAP8[$116 + 75 >> 0] = $105;
    $118 = HEAP32[$103 >> 2] | 0;
   }
   HEAP32[$103 >> 2] = $118 + 1;
   __ZL7exp2regP9FuncStateP7expdesci($0, $3, $118);
   __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, 21, $2, $3);
   return;
  }
 case 0:
  {
   __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, 12, $2, $3);
   return;
  }
 case 1:
  {
   __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, 13, $2, $3);
   return;
  }
 case 2:
  {
   __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, 14, $2, $3);
   return;
  }
 case 3:
  {
   __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, 15, $2, $3);
   return;
  }
 case 4:
  {
   __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, 16, $2, $3);
   return;
  }
 case 5:
  {
   __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, 17, $2, $3);
   return;
  }
 case 8:
  {
   $119 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
   $120 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $3) | 0;
   if ((HEAP32[$3 >> 2] | 0) == 12) {
    $124 = HEAP32[$3 + 4 >> 2] | 0;
    if (!($124 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($124 | 0)) {
     $131 = $0 + 36 | 0;
     HEAP32[$131 >> 2] = (HEAP32[$131 >> 2] | 0) + -1;
    }
   }
   $136 = $2 + 4 | 0;
   if ((HEAP32[$2 >> 2] | 0) == 12) {
    $137 = HEAP32[$136 >> 2] | 0;
    if (!($137 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($137 | 0)) {
     $144 = $0 + 36 | 0;
     HEAP32[$144 >> 2] = (HEAP32[$144 >> 2] | 0) + -1;
    }
   }
   HEAP32[$136 >> 2] = __ZL8condjumpP9FuncState6OpCodeiii($0, 23, 1, $119, $120) | 0;
   HEAP32[$2 >> 2] = 10;
   return;
  }
 case 7:
  {
   $148 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
   $149 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $3) | 0;
   if ((HEAP32[$3 >> 2] | 0) == 12) {
    $153 = HEAP32[$3 + 4 >> 2] | 0;
    if (!($153 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($153 | 0)) {
     $160 = $0 + 36 | 0;
     HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + -1;
    }
   }
   $165 = $2 + 4 | 0;
   if ((HEAP32[$2 >> 2] | 0) == 12) {
    $166 = HEAP32[$165 >> 2] | 0;
    if (!($166 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($166 | 0)) {
     $173 = $0 + 36 | 0;
     HEAP32[$173 >> 2] = (HEAP32[$173 >> 2] | 0) + -1;
    }
   }
   HEAP32[$165 >> 2] = __ZL8condjumpP9FuncState6OpCodeiii($0, 23, 0, $148, $149) | 0;
   HEAP32[$2 >> 2] = 10;
   return;
  }
 case 9:
  {
   $177 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
   $178 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $3) | 0;
   if ((HEAP32[$3 >> 2] | 0) == 12) {
    $182 = HEAP32[$3 + 4 >> 2] | 0;
    if (!($182 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($182 | 0)) {
     $189 = $0 + 36 | 0;
     HEAP32[$189 >> 2] = (HEAP32[$189 >> 2] | 0) + -1;
    }
   }
   $194 = $2 + 4 | 0;
   if ((HEAP32[$2 >> 2] | 0) == 12) {
    $195 = HEAP32[$194 >> 2] | 0;
    if (!($195 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($195 | 0)) {
     $202 = $0 + 36 | 0;
     HEAP32[$202 >> 2] = (HEAP32[$202 >> 2] | 0) + -1;
    }
   }
   HEAP32[$194 >> 2] = __ZL8condjumpP9FuncState6OpCodeiii($0, 24, 1, $177, $178) | 0;
   HEAP32[$2 >> 2] = 10;
   return;
  }
 case 10:
  {
   $206 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
   $207 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $3) | 0;
   if ((HEAP32[$3 >> 2] | 0) == 12) {
    $211 = HEAP32[$3 + 4 >> 2] | 0;
    if (!($211 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($211 | 0)) {
     $218 = $0 + 36 | 0;
     HEAP32[$218 >> 2] = (HEAP32[$218 >> 2] | 0) + -1;
    }
   }
   $223 = $2 + 4 | 0;
   if ((HEAP32[$2 >> 2] | 0) == 12) {
    $224 = HEAP32[$223 >> 2] | 0;
    if (!($224 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($224 | 0)) {
     $231 = $0 + 36 | 0;
     HEAP32[$231 >> 2] = (HEAP32[$231 >> 2] | 0) + -1;
    }
   }
   HEAP32[$223 >> 2] = __ZL8condjumpP9FuncState6OpCodeiii($0, 25, 1, $206, $207) | 0;
   HEAP32[$2 >> 2] = 10;
   return;
  }
 case 11:
  {
   $235 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
   $236 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $3) | 0;
   if ((HEAP32[$3 >> 2] | 0) == 12) {
    $240 = HEAP32[$3 + 4 >> 2] | 0;
    if (!($240 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($240 | 0)) {
     $247 = $0 + 36 | 0;
     HEAP32[$247 >> 2] = (HEAP32[$247 >> 2] | 0) + -1;
    }
   }
   $252 = $2 + 4 | 0;
   if ((HEAP32[$2 >> 2] | 0) == 12) {
    $253 = HEAP32[$252 >> 2] | 0;
    if (!($253 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($253 | 0)) {
     $260 = $0 + 36 | 0;
     HEAP32[$260 >> 2] = (HEAP32[$260 >> 2] | 0) + -1;
    }
   }
   HEAP32[$252 >> 2] = __ZL8condjumpP9FuncState6OpCodeiii($0, 24, 1, $236, $235) | 0;
   HEAP32[$2 >> 2] = 10;
   return;
  }
 case 12:
  {
   $264 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
   $265 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $3) | 0;
   if ((HEAP32[$3 >> 2] | 0) == 12) {
    $269 = HEAP32[$3 + 4 >> 2] | 0;
    if (!($269 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($269 | 0)) {
     $276 = $0 + 36 | 0;
     HEAP32[$276 >> 2] = (HEAP32[$276 >> 2] | 0) + -1;
    }
   }
   $281 = $2 + 4 | 0;
   if ((HEAP32[$2 >> 2] | 0) == 12) {
    $282 = HEAP32[$281 >> 2] | 0;
    if (!($282 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($282 | 0)) {
     $289 = $0 + 36 | 0;
     HEAP32[$289 >> 2] = (HEAP32[$289 >> 2] | 0) + -1;
    }
   }
   HEAP32[$281 >> 2] = __ZL8condjumpP9FuncState6OpCodeiii($0, 25, 1, $265, $264) | 0;
   HEAP32[$2 >> 2] = 10;
   return;
  }
 default:
  return;
 } while (0);
}

function __ZL8symbexecPK5Protoii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0188254 = 0, $$0189258 = 0, $$0195257 = 0, $$0205$lcssa = 0, $$0205251 = 0, $$0206 = 0, $$0207 = 0, $$10 = 0, $$1196 = 0, $$3198240 = 0, $$5194241 = 0, $124 = 0, $129 = 0, $136 = 0, $14 = 0, $142 = 0, $146 = 0, $160 = 0, $168 = 0, $169 = 0, $170 = 0, $184 = 0, $23 = 0, $24 = 0, $26 = 0, $28 = 0, $32 = 0, $34 = 0, $36 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $50 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $74 = 0, $80 = 0, $84 = 0, $88 = 0, $94 = 0, $notlhs = 0, $trunc = 0, label = 0;
 $4 = HEAP32[$0 + 44 >> 2] | 0;
 $6 = HEAP8[$0 + 75 >> 0] | 0;
 if (($6 & 255) >= 251) {
  $$10 = 0;
  return $$10 | 0;
 }
 $14 = HEAPU8[$0 + 74 >> 0] | 0;
 if (($14 & 5 | 0) == 4 ? 1 : (($14 & 1) + (HEAPU8[$0 + 73 >> 0] | 0) | 0) >>> 0 > ($6 & 255) >>> 0) {
  $$10 = 0;
  return $$10 | 0;
 }
 $23 = HEAP32[$0 + 72 >> 2] | 0;
 $24 = $23 & 255;
 $26 = $23 >>> 24;
 if ((HEAP32[$0 + 36 >> 2] | 0) > ($24 | 0)) {
  $$10 = 0;
  return $$10 | 0;
 }
 $28 = HEAP32[$0 + 48 >> 2] | 0;
 if (!(($4 | 0) > 0 & (($28 | 0) == 0 | ($28 | 0) == ($4 | 0)))) {
  $$10 = 0;
  return $$10 | 0;
 }
 $32 = $4 + -1 | 0;
 $34 = HEAP32[$0 + 12 >> 2] | 0;
 $36 = HEAP32[$34 + ($32 << 2) >> 2] | 0;
 if (($36 & 63 | 0) != 30) {
  $$10 = 0;
  return $$10 | 0;
 }
 if (($1 | 0) <= 0) {
  $$10 = $36;
  return $$10 | 0;
 }
 $40 = $0 + 8 | 0;
 $notlhs = ($2 | 0) == 255;
 $41 = $0 + 52 | 0;
 $42 = $0 + 16 | 0;
 $43 = $0 + 40 | 0;
 $45 = ($23 & 393216 | 0) == 131072;
 $$0189258 = 0;
 $$0195257 = $32;
 L19 : while (1) {
  $47 = HEAP32[$34 + ($$0189258 << 2) >> 2] | 0;
  $48 = $47 & 63;
  $50 = $47 >>> 6 & 255;
  if (!($48 >>> 0 < 38 & $50 >>> 0 < $26 >>> 0)) {
   $$10 = 0;
   label = 73;
   break;
  }
  $trunc = HEAP8[87697 + $48 >> 0] | 0;
  $54 = $trunc & 255;
  L22 : do switch ($trunc & 3) {
  case 0:
   {
    $55 = $47 >>> 23;
    $56 = $47 >>> 14;
    $57 = $56 & 511;
    L24 : do switch (($trunc & 255) >>> 4 & 3) {
    case 0:
     {
      if ($55 | 0) {
       $$10 = 0;
       label = 73;
       break L19;
      }
      break;
     }
    case 3:
     {
      if (!($55 & 256)) if ($26 >>> 0 > $55 >>> 0) break L24; else {
       $$10 = 0;
       label = 73;
       break L19;
      } else if (($55 & 255 | 0) < (HEAP32[$43 >> 2] | 0)) break L24; else {
       $$10 = 0;
       label = 73;
       break L19;
      }
      break;
     }
    case 2:
     {
      if ($26 >>> 0 <= $55 >>> 0) {
       $$10 = 0;
       label = 73;
       break L19;
      }
      break;
     }
    default:
     {}
    } while (0);
    switch (($trunc & 255) >>> 2 & 3) {
    case 0:
     {
      if (!$57) {
       $$0206 = $55;
       $$0207 = 0;
       break L22;
      } else {
       $$10 = 0;
       label = 73;
       break L19;
      }
      break;
     }
    case 3:
     {
      if (!($56 & 256)) if ($26 >>> 0 > $57 >>> 0) {
       $$0206 = $55;
       $$0207 = $57;
       break L22;
      } else {
       $$10 = 0;
       label = 73;
       break L19;
      } else if (($56 & 255 | 0) < (HEAP32[$43 >> 2] | 0)) {
       $$0206 = $55;
       $$0207 = $57;
       break L22;
      } else {
       $$10 = 0;
       label = 73;
       break L19;
      }
      break;
     }
    case 2:
     {
      if ($26 >>> 0 > $57 >>> 0) {
       $$0206 = $55;
       $$0207 = $57;
       break L22;
      } else {
       $$10 = 0;
       label = 73;
       break L19;
      }
      break;
     }
    default:
     {
      $$0206 = $55;
      $$0207 = $57;
      break L22;
     }
    }
    break;
   }
  case 1:
   {
    $74 = $47 >>> 14;
    if (($54 & 48 | 0) == 48) if (($74 | 0) < (HEAP32[$43 >> 2] | 0)) {
     $$0206 = $74;
     $$0207 = 0;
    } else {
     $$10 = 0;
     label = 73;
     break L19;
    } else {
     $$0206 = $74;
     $$0207 = 0;
    }
    break;
   }
  case 2:
   {
    $80 = ($47 >>> 14) + -131071 | 0;
    if (($54 & 48 | 0) == 32) {
     $84 = $$0189258 + 1 + $80 | 0;
     if (!(($84 | 0) > -1 & ($84 | 0) < ($4 | 0))) {
      $$10 = 0;
      label = 73;
      break L19;
     }
     if (($84 | 0) > 0) {
      $88 = $80 + $$0189258 | 0;
      $$0205251 = 0;
      while (1) {
       if ((HEAP32[$34 + ($88 - $$0205251 << 2) >> 2] & 8372287 | 0) != 34) {
        $$0205$lcssa = $$0205251;
        break;
       }
       $94 = $$0205251 + 1 | 0;
       if (($94 | 0) < ($84 | 0)) $$0205251 = $94; else {
        $$0205$lcssa = $94;
        break;
       }
      }
      if (!($$0205$lcssa & 1)) {
       $$0206 = $80;
       $$0207 = 0;
      } else {
       $$10 = 0;
       label = 73;
       break L19;
      }
     } else {
      $$0206 = $80;
      $$0207 = 0;
     }
    } else {
     $$0206 = $80;
     $$0207 = 0;
    }
    break;
   }
  default:
   {
    $$0206 = 0;
    $$0207 = 0;
   }
  } while (0);
  $$1196 = ($50 | 0) == ($2 | 0) & ($trunc & 64) != 0 ? $$0189258 : $$0195257;
  if ($trunc << 24 >> 24 < 0) {
   if (($$0189258 + 2 | 0) >= ($4 | 0)) {
    $$10 = 0;
    label = 73;
    break;
   }
   if ((HEAP32[$34 + ($$0189258 + 1 << 2) >> 2] & 63 | 0) != 22) {
    $$10 = 0;
    label = 73;
    break;
   }
  }
  do switch ($47 & 63) {
  case 2:
   {
    if (($$0207 | 0) == 1) {
     if (($$0189258 + 2 | 0) >= ($4 | 0)) {
      $$10 = 0;
      label = 73;
      break L19;
     }
     if ((HEAP32[$34 + ($$0189258 + 1 << 2) >> 2] & 8372287 | 0) == 34) {
      $$10 = 0;
      label = 73;
      break L19;
     } else {
      $$3198240 = $$1196;
      $$5194241 = $$0189258;
     }
    } else {
     $$3198240 = $$1196;
     $$5194241 = $$0189258;
    }
    break;
   }
  case 3:
   {
    $$3198240 = ($50 | 0) > ($2 | 0) | ($$0206 | 0) < ($2 | 0) ? $$1196 : $$0189258;
    $$5194241 = $$0189258;
    break;
   }
  case 8:
  case 4:
   {
    if (($$0206 | 0) < ($24 | 0)) {
     $$3198240 = $$1196;
     $$5194241 = $$0189258;
    } else {
     $$10 = 0;
     label = 73;
     break L19;
    }
    break;
   }
  case 7:
  case 5:
   {
    if ((HEAP32[(HEAP32[$40 >> 2] | 0) + ($$0206 << 3) + 4 >> 2] | 0) == 4) {
     $$3198240 = $$1196;
     $$5194241 = $$0189258;
    } else {
     $$10 = 0;
     label = 73;
     break L19;
    }
    break;
   }
  case 11:
   {
    $124 = $50 + 1 | 0;
    if ($124 >>> 0 >= $26 >>> 0) {
     $$10 = 0;
     label = 73;
     break L19;
    }
    $$3198240 = ($124 | 0) == ($2 | 0) ? $$0189258 : $$1196;
    $$5194241 = $$0189258;
    break;
   }
  case 21:
   {
    if (($$0206 | 0) < ($$0207 | 0)) {
     $$3198240 = $$1196;
     $$5194241 = $$0189258;
    } else {
     $$10 = 0;
     label = 73;
     break L19;
    }
    break;
   }
  case 33:
   {
    if (!$$0207) {
     $$10 = 0;
     label = 73;
     break L19;
    }
    $129 = $50 + 2 | 0;
    if (($$0207 + $129 | 0) >>> 0 >= $26 >>> 0) {
     $$10 = 0;
     label = 73;
     break L19;
    }
    $$3198240 = ($129 | 0) > ($2 | 0) ? $$1196 : $$0189258;
    $$5194241 = $$0189258;
    break;
   }
  case 32:
  case 31:
   {
    if (($50 + 3 | 0) >>> 0 < $26 >>> 0) label = 48; else {
     $$10 = 0;
     label = 73;
     break L19;
    }
    break;
   }
  case 22:
   {
    label = 48;
    break;
   }
  case 29:
  case 28:
   {
    if (($$0206 | 0) != 0 & ($$0206 + $50 | 0) > ($26 | 0)) {
     $$10 = 0;
     label = 73;
     break L19;
    }
    $142 = $$0207 + -1 | 0;
    if (!$$0207) {
     $146 = HEAP32[$34 + ($$0189258 + 1 << 2) >> 2] | 0;
     switch ($146 & 63) {
     case 34:
     case 30:
     case 29:
     case 28:
      break;
     default:
      {
       $$10 = 0;
       label = 73;
       break L19;
      }
     }
     if ($146 >>> 0 >= 8388608) {
      $$10 = 0;
      label = 73;
      break L19;
     }
    } else if (($142 | 0) != 0 & ($142 + $50 | 0) > ($26 | 0)) {
     $$10 = 0;
     label = 73;
     break L19;
    }
    $$3198240 = ($50 | 0) > ($2 | 0) ? $$1196 : $$0189258;
    $$5194241 = $$0189258;
    break;
   }
  case 30:
   {
    if (($$0206 | 0) > 1) if (($50 + -1 + $$0206 | 0) > ($26 | 0)) {
     $$10 = 0;
     label = 73;
     break L19;
    } else {
     $$3198240 = $$1196;
     $$5194241 = $$0189258;
    } else {
     $$3198240 = $$1196;
     $$5194241 = $$0189258;
    }
    break;
   }
  case 34:
   {
    if (!(($$0206 | 0) < 1 | ($$0206 + $50 | 0) < ($26 | 0))) {
     $$10 = 0;
     label = 73;
     break L19;
    }
    if (!$$0207) {
     $160 = $$0189258 + 1 | 0;
     if (($160 | 0) < ($32 | 0)) {
      $$3198240 = $$1196;
      $$5194241 = $160;
     } else {
      $$10 = 0;
      label = 73;
      break L19;
     }
    } else {
     $$3198240 = $$1196;
     $$5194241 = $$0189258;
    }
    break;
   }
  case 36:
   {
    if (($$0206 | 0) >= (HEAP32[$41 >> 2] | 0)) {
     $$10 = 0;
     label = 73;
     break L19;
    }
    $168 = HEAP8[(HEAP32[(HEAP32[$42 >> 2] | 0) + ($$0206 << 2) >> 2] | 0) + 72 >> 0] | 0;
    $169 = $168 & 255;
    $170 = $169 + $$0189258 | 0;
    if (($170 | 0) >= ($4 | 0)) {
     $$10 = 0;
     label = 73;
     break L19;
    }
    if ($168 << 24 >> 24) {
     $$0188254 = 1;
     while (1) {
      if ((HEAP32[$34 + ($$0188254 + $$0189258 << 2) >> 2] & 59 | 4 | 0) != 4) {
       $$10 = 0;
       label = 73;
       break L19;
      }
      if (($$0188254 | 0) < ($169 | 0)) $$0188254 = $$0188254 + 1 | 0; else break;
     }
    }
    $$3198240 = $$1196;
    $$5194241 = $notlhs ? $$0189258 : $170;
    break;
   }
  case 37:
   {
    if (!$45) {
     $$10 = 0;
     label = 73;
     break L19;
    }
    if (!$$0206) {
     $184 = HEAP32[$34 + ($$0189258 + 1 << 2) >> 2] | 0;
     switch ($184 & 63) {
     case 34:
     case 30:
     case 29:
     case 28:
      break;
     default:
      {
       $$10 = 0;
       label = 73;
       break L19;
      }
     }
     if ($184 >>> 0 >= 8388608) {
      $$10 = 0;
      label = 73;
      break L19;
     }
    }
    if (($50 + -1 + $$0206 | 0) > ($26 | 0)) {
     $$10 = 0;
     label = 73;
     break L19;
    } else {
     $$3198240 = $$1196;
     $$5194241 = $$0189258;
    }
    break;
   }
  default:
   {
    $$3198240 = $$1196;
    $$5194241 = $$0189258;
   }
  } while (0);
  if ((label | 0) == 48) {
   label = 0;
   $136 = $$0189258 + 1 + $$0206 | 0;
   $$3198240 = $$1196;
   $$5194241 = (($136 | 0) > ($1 | 0) | ($notlhs | ($$0189258 | 0) >= ($136 | 0)) ? 0 : $$0206) + $$0189258 | 0;
  }
  $$0189258 = $$5194241 + 1 | 0;
  if (($$0189258 | 0) >= ($1 | 0)) {
   label = 72;
   break;
  } else $$0195257 = $$3198240;
 }
 if ((label | 0) == 72) {
  $$10 = HEAP32[$34 + ($$3198240 << 2) >> 2] | 0;
  return $$10 | 0;
 } else if ((label | 0) == 73) return $$10 | 0;
 return 0;
}

function __GLOBAL__sub_I_ClientSetup_cpp() {
 var $0 = 0, $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp + 24 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 HEAPF32[26941] = 0.0;
 HEAPF32[26942] = 1.0;
 HEAPF32[26943] = 0.0;
 HEAPF32[26938] = 0.0;
 HEAPF32[26939] = 0.0;
 HEAPF32[26940] = 1.0;
 HEAPF32[26935] = 1.0;
 HEAPF32[26936] = 0.0;
 HEAPF32[26937] = 0.0;
 HEAPF32[26932] = 0.0;
 HEAPF32[26933] = 0.0;
 HEAPF32[26934] = 0.0;
 HEAPF32[26929] = 1.0;
 HEAPF32[26930] = 1.0;
 HEAPF32[26931] = 1.0;
 HEAPF32[26926] = 1.0;
 HEAPF32[26927] = 1.0;
 HEAPF32[26928] = 0.0;
 HEAPF32[26923] = 1.0;
 HEAPF32[26924] = 0.0;
 HEAPF32[26925] = 1.0;
 HEAPF32[26920] = 0.0;
 HEAPF32[26921] = 1.0;
 HEAPF32[26922] = 1.0;
 HEAP32[26917] = 0;
 HEAP32[26918] = 0;
 HEAP32[26919] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107668, 79064, 25);
 ___cxa_atexit(164, 107668, ___dso_handle | 0) | 0;
 HEAP32[26914] = 0;
 HEAP32[26915] = 0;
 HEAP32[26916] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107656, 79090, 19);
 ___cxa_atexit(164, 107656, ___dso_handle | 0) | 0;
 HEAP32[26911] = 0;
 HEAP32[26912] = 0;
 HEAP32[26913] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107644, 79110, 33);
 ___cxa_atexit(164, 107644, ___dso_handle | 0) | 0;
 HEAP32[26908] = 0;
 HEAP32[26909] = 0;
 HEAP32[26910] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107632, 79144, 47);
 ___cxa_atexit(164, 107632, ___dso_handle | 0) | 0;
 HEAP32[26905] = 0;
 HEAP32[26906] = 0;
 HEAP32[26907] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107620, 79192, 23);
 ___cxa_atexit(164, 107620, ___dso_handle | 0) | 0;
 HEAP32[26902] = 0;
 HEAP32[26903] = 0;
 HEAP32[26904] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107608, 79216, 19);
 ___cxa_atexit(164, 107608, ___dso_handle | 0) | 0;
 HEAP32[26899] = 0;
 HEAP32[26900] = 0;
 HEAP32[26901] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107596, 79236, 14);
 ___cxa_atexit(164, 107596, ___dso_handle | 0) | 0;
 HEAP32[26896] = 0;
 HEAP32[26897] = 0;
 HEAP32[26898] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107584, 79251, 42);
 ___cxa_atexit(164, 107584, ___dso_handle | 0) | 0;
 HEAP32[26893] = 0;
 HEAP32[26894] = 0;
 HEAP32[26895] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107572, 79294, 56);
 ___cxa_atexit(164, 107572, ___dso_handle | 0) | 0;
 HEAP32[26890] = 0;
 HEAP32[26891] = 0;
 HEAP32[26892] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107560, 79351, 53);
 ___cxa_atexit(164, 107560, ___dso_handle | 0) | 0;
 HEAP32[26887] = 0;
 HEAP32[26888] = 0;
 HEAP32[26889] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107548, 79405, 32);
 ___cxa_atexit(164, 107548, ___dso_handle | 0) | 0;
 HEAP32[26884] = 0;
 HEAP32[26885] = 0;
 HEAP32[26886] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107536, 79438, 39);
 ___cxa_atexit(164, 107536, ___dso_handle | 0) | 0;
 HEAP32[26881] = 0;
 HEAP32[26882] = 0;
 HEAP32[26883] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107524, 79478, 45);
 ___cxa_atexit(164, 107524, ___dso_handle | 0) | 0;
 HEAP32[26878] = 0;
 HEAP32[26879] = 0;
 HEAP32[26880] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107512, 79524, 40);
 ___cxa_atexit(164, 107512, ___dso_handle | 0) | 0;
 HEAP32[26875] = 0;
 HEAP32[26876] = 0;
 HEAP32[26877] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107500, 79565, 23);
 ___cxa_atexit(164, 107500, ___dso_handle | 0) | 0;
 HEAP32[26872] = 0;
 HEAP32[26873] = 0;
 HEAP32[26874] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107488, 79589, 36);
 ___cxa_atexit(164, 107488, ___dso_handle | 0) | 0;
 HEAP32[26869] = 0;
 HEAP32[26870] = 0;
 HEAP32[26871] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107476, 79626, 46);
 ___cxa_atexit(164, 107476, ___dso_handle | 0) | 0;
 HEAP32[26866] = 0;
 HEAP32[26867] = 0;
 HEAP32[26868] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107464, 79673, 38);
 ___cxa_atexit(164, 107464, ___dso_handle | 0) | 0;
 HEAP32[26863] = 0;
 HEAP32[26864] = 0;
 HEAP32[26865] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107452, 79712, 47);
 ___cxa_atexit(164, 107452, ___dso_handle | 0) | 0;
 HEAP32[26860] = 0;
 HEAP32[26861] = 0;
 HEAP32[26862] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107440, 79760, 53);
 ___cxa_atexit(164, 107440, ___dso_handle | 0) | 0;
 HEAP32[26857] = 0;
 HEAP32[26858] = 0;
 HEAP32[26859] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107428, 79814, 89);
 ___cxa_atexit(164, 107428, ___dso_handle | 0) | 0;
 HEAP32[26854] = 0;
 HEAP32[26855] = 0;
 HEAP32[26856] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107416, 79904, 49);
 ___cxa_atexit(164, 107416, ___dso_handle | 0) | 0;
 HEAP32[26851] = 0;
 HEAP32[26852] = 0;
 HEAP32[26853] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107404, 79954, 40);
 ___cxa_atexit(164, 107404, ___dso_handle | 0) | 0;
 HEAP32[26848] = 0;
 HEAP32[26849] = 0;
 HEAP32[26850] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107392, 79995, 46);
 ___cxa_atexit(164, 107392, ___dso_handle | 0) | 0;
 HEAP32[26845] = 0;
 HEAP32[26846] = 0;
 HEAP32[26847] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107380, 80042, 12);
 ___cxa_atexit(164, 107380, ___dso_handle | 0) | 0;
 HEAP32[26842] = 0;
 HEAP32[26843] = 0;
 HEAP32[26844] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107368, 80055, 13);
 ___cxa_atexit(164, 107368, ___dso_handle | 0) | 0;
 HEAP8[107188] = 0;
 HEAP32[26796] = 67692;
 HEAP32[26798] = 0;
 HEAP32[26799] = 0;
 HEAP32[26800] = 0;
 HEAP8[107208] = 0;
 HEAP32[26801] = 67712;
 HEAP8[107220] = 0;
 HEAP32[26804] = 67692;
 HEAP32[26806] = 0;
 HEAP32[26807] = 0;
 HEAP32[26808] = 0;
 HEAP8[107240] = 0;
 HEAP32[26809] = 67712;
 HEAP32[26793] = 67732;
 HEAP8[107252] = 0;
 HEAP32[26812] = 67692;
 HEAP32[26814] = 0;
 HEAP32[26815] = 0;
 HEAP32[26816] = 0;
 HEAP8[107272] = 0;
 HEAP32[26817] = 67692;
 HEAP32[26819] = 0;
 HEAP32[26820] = 0;
 HEAP32[26821] = 0;
 HEAP8[107292] = 0;
 HEAP32[26822] = 67692;
 HEAP32[26824] = 0;
 HEAP32[26825] = 0;
 HEAP32[26826] = 0;
 HEAP8[107312] = 0;
 HEAP32[26827] = 67692;
 HEAP32[26829] = 0;
 HEAP32[26830] = 0;
 HEAP32[26831] = 0;
 HEAP8[107332] = 0;
 HEAP32[26832] = 67692;
 HEAP32[26834] = 0;
 HEAP32[26835] = 0;
 HEAP32[26836] = 0;
 HEAP8[107352] = 0;
 HEAP32[26837] = 67692;
 HEAP32[26839] = 0;
 HEAP32[26840] = 0;
 HEAP32[26841] = 0;
 HEAP32[26794] = 80069;
 HEAP32[26795] = 80083;
 ___cxa_atexit(15, 107172, ___dso_handle | 0) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 80095, 52);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(107192, $0) | 0;
 HEAP8[107188] = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 HEAP32[26803] = 16;
 HEAP8[107208] = 1;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 80148, 9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(107256, $0) | 0;
 HEAP8[107252] = 1;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 114224, 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(107356, $1) | 0;
 HEAP8[107352] = 1;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 80158, 60);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(107224, $2) | 0;
 HEAP8[107220] = 1;
 __ZN14ConfigVariable11AddMetaDataEPK22ConfigVariableMetaData(107172);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 HEAP8[107040] = 0;
 HEAP32[26759] = 67692;
 HEAP32[26761] = 0;
 HEAP32[26762] = 0;
 HEAP32[26763] = 0;
 HEAP8[107060] = 0;
 HEAP32[26764] = 67712;
 HEAP8[107072] = 0;
 HEAP32[26767] = 67692;
 HEAP32[26769] = 0;
 HEAP32[26770] = 0;
 HEAP32[26771] = 0;
 HEAP8[107092] = 0;
 HEAP32[26772] = 67712;
 HEAP32[26756] = 67776;
 HEAP8[107104] = 0;
 HEAP32[26775] = 67712;
 HEAP8[107116] = 0;
 HEAP32[26778] = 67712;
 HEAP8[107128] = 0;
 HEAP32[26781] = 67712;
 HEAP8[107140] = 0;
 HEAP32[26784] = 67712;
 HEAP8[107152] = 0;
 HEAP32[26787] = 67712;
 HEAP8[107164] = 0;
 HEAP32[26790] = 67712;
 HEAP32[26757] = 80219;
 HEAP32[26758] = 80235;
 ___cxa_atexit(17, 107024, ___dso_handle | 0) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 80095, 52);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(107044, $0) | 0;
 HEAP8[107040] = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 HEAP32[26766] = 17;
 HEAP8[107060] = 1;
 HEAP32[26777] = 8452;
 HEAP8[107104] = 1;
 HEAP32[26780] = 0;
 HEAP8[107116] = 1;
 HEAP32[26783] = 65535;
 HEAP8[107128] = 1;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 80239, 62);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(107076, $0) | 0;
 HEAP8[107072] = 1;
 __ZN14ConfigVariable11AddMetaDataEPK22ConfigVariableMetaData(107024);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 STACKTOP = sp;
 return;
}

function __ZL16read_long_stringP8LexStateP7SemInfoi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ph = 0, $$pre$phi$i42Z2D = 0, $$pre$phi$i50Z2D = 0, $$pre$phi$i58Z2D = 0, $$pre$phi$iZ2D = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $124 = 0, $125 = 0, $127 = 0, $129 = 0, $133 = 0, $135 = 0, $137 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $144 = 0, $145 = 0, $150 = 0, $151 = 0, $153 = 0, $155 = 0, $159 = 0, $16 = 0, $162 = 0, $164 = 0, $165 = 0, $166 = 0, $169 = 0, $170 = 0, $171 = 0, $176 = 0, $177 = 0, $179 = 0, $185 = 0, $186 = 0, $191 = 0, $192 = 0, $196 = 0, $20 = 0, $21 = 0, $23 = 0, $28 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $63 = 0, $64 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $87 = 0, $88 = 0, $90 = 0, $92 = 0, $96 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer17 = 0, $vararg_buffer22 = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $vararg_buffer22 = sp + 72 | 0;
 $vararg_buffer17 = sp + 56 | 0;
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 88 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = $0 + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $6 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $10 = $6 + 8 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (($8 + 1 | 0) >>> 0 > $11 >>> 0) {
  if ($11 >>> 0 > 2147483645) {
   __Z12luaO_chunkidPcPKcj($3, (HEAP32[$0 + 44 >> 2] | 0) + 16 | 0, 80);
   $20 = $0 + 32 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   $23 = HEAP32[$0 + 4 >> 2] | 0;
   HEAP32[$vararg_buffer >> 2] = $3;
   HEAP32[$vararg_buffer + 4 >> 2] = $23;
   HEAP32[$vararg_buffer + 8 >> 2] = 89965;
   __Z16luaO_pushfstringP9lua_StatePKcz($21, 89955, $vararg_buffer) | 0;
   __Z10luaD_throwP9lua_Statei(HEAP32[$20 >> 2] | 0, 3);
  }
  $14 = $11 << 1;
  $16 = HEAP32[$0 + 32 >> 2] | 0;
  if (($14 | 0) == -2) {
   $$pre$phi$iZ2D = $6;
   $28 = __Z11luaM_toobigP9lua_State($16) | 0;
  } else {
   $$pre$phi$iZ2D = $6;
   $28 = __Z13luaM_realloc_P9lua_StatePvjj($16, HEAP32[$6 >> 2] | 0, $11, $14) | 0;
  }
  HEAP32[$$pre$phi$iZ2D >> 2] = $28;
  HEAP32[$10 >> 2] = $14;
  $31 = HEAP32[$7 >> 2] | 0;
  $33 = $28;
 } else {
  $31 = $8;
  $33 = HEAP32[$6 >> 2] | 0;
 }
 HEAP32[$7 >> 2] = $31 + 1;
 HEAP8[$33 + $31 >> 0] = $4;
 $34 = $0 + 36 | 0;
 $35 = HEAP32[$34 >> 2] | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 HEAP32[$35 >> 2] = $36 + -1;
 $39 = HEAP32[$34 >> 2] | 0;
 if (!$36) $46 = __Z9luaZ_fillP3Zio($39) | 0; else {
  $40 = $39 + 4 | 0;
  $41 = HEAP32[$40 >> 2] | 0;
  HEAP32[$40 >> 2] = $41 + 1;
  $46 = HEAPU8[$41 >> 0] | 0;
 }
 HEAP32[$0 >> 2] = $46;
 switch ($46 | 0) {
 case 13:
 case 10:
  {
   __ZL13inclinenumberP8LexState($0);
   label = 14;
   break;
  }
 default:
  $$ph = $46;
 }
 L18 : while (1) {
  if ((label | 0) == 14) {
   label = 0;
   $$ph = HEAP32[$0 >> 2] | 0;
  }
  $47 = ($1 | 0) == 0;
  $48 = $0 + 44 | 0;
  $49 = $0 + 32 | 0;
  $50 = $0 + 4 | 0;
  L22 : do if ($47) {
   $51 = $$ph;
   while (1) {
    switch ($51 | 0) {
    case -1:
     {
      label = 22;
      break L18;
      break;
     }
    case 93:
     {
      label = 23;
      break L22;
      break;
     }
    case 13:
    case 10:
     {
      break L22;
      break;
     }
    default:
     {}
    }
    $52 = HEAP32[$34 >> 2] | 0;
    $53 = HEAP32[$52 >> 2] | 0;
    HEAP32[$52 >> 2] = $53 + -1;
    $56 = HEAP32[$34 >> 2] | 0;
    if (!$53) $63 = __Z9luaZ_fillP3Zio($56) | 0; else {
     $57 = $56 + 4 | 0;
     $58 = HEAP32[$57 >> 2] | 0;
     HEAP32[$57 >> 2] = $58 + 1;
     $63 = HEAPU8[$58 >> 0] | 0;
    }
    HEAP32[$0 >> 2] = $63;
    $51 = $63;
   }
  } else {
   $64 = $$ph;
   while (1) {
    switch ($64 | 0) {
    case -1:
     {
      label = 22;
      break L18;
      break;
     }
    case 93:
     {
      label = 23;
      break L22;
      break;
     }
    case 13:
    case 10:
     {
      break L22;
      break;
     }
    default:
     {}
    }
    $140 = HEAP32[$5 >> 2] | 0;
    $141 = $140 + 4 | 0;
    $142 = HEAP32[$141 >> 2] | 0;
    $144 = $140 + 8 | 0;
    $145 = HEAP32[$144 >> 2] | 0;
    if (($142 + 1 | 0) >>> 0 > $145 >>> 0) {
     if ($145 >>> 0 > 2147483645) {
      label = 49;
      break L18;
     }
     $153 = $145 << 1;
     $155 = HEAP32[$49 >> 2] | 0;
     if (($153 | 0) == -2) {
      $$pre$phi$i58Z2D = $140;
      $159 = __Z11luaM_toobigP9lua_State($155) | 0;
     } else {
      $$pre$phi$i58Z2D = $140;
      $159 = __Z13luaM_realloc_P9lua_StatePvjj($155, HEAP32[$140 >> 2] | 0, $145, $153) | 0;
     }
     HEAP32[$$pre$phi$i58Z2D >> 2] = $159;
     HEAP32[$144 >> 2] = $153;
     $162 = HEAP32[$141 >> 2] | 0;
     $164 = $159;
    } else {
     $162 = $142;
     $164 = HEAP32[$140 >> 2] | 0;
    }
    HEAP32[$141 >> 2] = $162 + 1;
    HEAP8[$164 + $162 >> 0] = $64;
    $165 = HEAP32[$34 >> 2] | 0;
    $166 = HEAP32[$165 >> 2] | 0;
    HEAP32[$165 >> 2] = $166 + -1;
    $169 = HEAP32[$34 >> 2] | 0;
    if (!$166) $176 = __Z9luaZ_fillP3Zio($169) | 0; else {
     $170 = $169 + 4 | 0;
     $171 = HEAP32[$170 >> 2] | 0;
     HEAP32[$170 >> 2] = $171 + 1;
     $176 = HEAPU8[$171 >> 0] | 0;
    }
    HEAP32[$0 >> 2] = $176;
    $64 = $176;
   }
  } while (0);
  if ((label | 0) == 23) {
   label = 0;
   if ((__ZL8skip_sepP8LexState($0) | 0) == ($2 | 0)) {
    label = 24;
    break;
   } else {
    label = 14;
    continue;
   }
  }
  $114 = HEAP32[$5 >> 2] | 0;
  $115 = $114 + 4 | 0;
  $116 = HEAP32[$115 >> 2] | 0;
  $118 = $114 + 8 | 0;
  $119 = HEAP32[$118 >> 2] | 0;
  if (($116 + 1 | 0) >>> 0 > $119 >>> 0) {
   if ($119 >>> 0 > 2147483645) {
    label = 39;
    break;
   }
   $127 = $119 << 1;
   $129 = HEAP32[$49 >> 2] | 0;
   if (($127 | 0) == -2) {
    $$pre$phi$i50Z2D = $114;
    $133 = __Z11luaM_toobigP9lua_State($129) | 0;
   } else {
    $$pre$phi$i50Z2D = $114;
    $133 = __Z13luaM_realloc_P9lua_StatePvjj($129, HEAP32[$114 >> 2] | 0, $119, $127) | 0;
   }
   HEAP32[$$pre$phi$i50Z2D >> 2] = $133;
   HEAP32[$118 >> 2] = $127;
   $135 = HEAP32[$115 >> 2] | 0;
   $137 = $133;
  } else {
   $135 = $116;
   $137 = HEAP32[$114 >> 2] | 0;
  }
  HEAP32[$115 >> 2] = $135 + 1;
  HEAP8[$137 + $135 >> 0] = 10;
  __ZL13inclinenumberP8LexState($0);
  if (!$47) {
   label = 14;
   continue;
  }
  HEAP32[(HEAP32[$5 >> 2] | 0) + 4 >> 2] = 0;
  label = 14;
 }
 if ((label | 0) == 22) {
  __Z12luaO_chunkidPcPKcj($3, (HEAP32[$48 >> 2] | 0) + 16 | 0, 80);
  $69 = HEAP32[$49 >> 2] | 0;
  $70 = HEAP32[$50 >> 2] | 0;
  HEAP32[$vararg_buffer3 >> 2] = $3;
  HEAP32[$vararg_buffer3 + 4 >> 2] = $70;
  HEAP32[$vararg_buffer3 + 8 >> 2] = $1 | 0 ? 90100 : 90123;
  $71 = __Z16luaO_pushfstringP9lua_StatePKcz($69, 89955, $vararg_buffer3) | 0;
  $72 = HEAP32[$49 >> 2] | 0;
  HEAP32[$vararg_buffer8 >> 2] = $71;
  HEAP32[$vararg_buffer8 + 4 >> 2] = 89937;
  __Z16luaO_pushfstringP9lua_StatePKcz($72, 89990, $vararg_buffer8) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$49 >> 2] | 0, 3);
 } else if ((label | 0) == 24) {
  $76 = HEAP32[$0 >> 2] | 0;
  $77 = HEAP32[$5 >> 2] | 0;
  $78 = $77 + 4 | 0;
  $79 = HEAP32[$78 >> 2] | 0;
  $81 = $77 + 8 | 0;
  $82 = HEAP32[$81 >> 2] | 0;
  if (($79 + 1 | 0) >>> 0 > $82 >>> 0) {
   if ($82 >>> 0 > 2147483645) {
    __Z12luaO_chunkidPcPKcj($3, (HEAP32[$48 >> 2] | 0) + 16 | 0, 80);
    $87 = HEAP32[$49 >> 2] | 0;
    $88 = HEAP32[$50 >> 2] | 0;
    HEAP32[$vararg_buffer12 >> 2] = $3;
    HEAP32[$vararg_buffer12 + 4 >> 2] = $88;
    HEAP32[$vararg_buffer12 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($87, 89955, $vararg_buffer12) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$49 >> 2] | 0, 3);
   }
   $90 = $82 << 1;
   $92 = HEAP32[$49 >> 2] | 0;
   if (($90 | 0) == -2) {
    $$pre$phi$i42Z2D = $77;
    $96 = __Z11luaM_toobigP9lua_State($92) | 0;
   } else {
    $$pre$phi$i42Z2D = $77;
    $96 = __Z13luaM_realloc_P9lua_StatePvjj($92, HEAP32[$77 >> 2] | 0, $82, $90) | 0;
   }
   HEAP32[$$pre$phi$i42Z2D >> 2] = $96;
   HEAP32[$81 >> 2] = $90;
   $101 = $96;
   $99 = HEAP32[$78 >> 2] | 0;
  } else {
   $101 = HEAP32[$77 >> 2] | 0;
   $99 = $79;
  }
  HEAP32[$78 >> 2] = $99 + 1;
  HEAP8[$101 + $99 >> 0] = $76;
  $102 = HEAP32[$34 >> 2] | 0;
  $103 = HEAP32[$102 >> 2] | 0;
  HEAP32[$102 >> 2] = $103 + -1;
  $106 = HEAP32[$34 >> 2] | 0;
  if (!$103) $113 = __Z9luaZ_fillP3Zio($106) | 0; else {
   $107 = $106 + 4 | 0;
   $108 = HEAP32[$107 >> 2] | 0;
   HEAP32[$107 >> 2] = $108 + 1;
   $113 = HEAPU8[$108 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $113;
  if ($47) {
   STACKTOP = sp;
   return;
  }
  $177 = HEAP32[$5 >> 2] | 0;
  $179 = $2 + 2 | 0;
  $185 = HEAP32[$49 >> 2] | 0;
  $186 = __Z12luaS_newlstrP9lua_StatePKcj($185, (HEAP32[$177 >> 2] | 0) + $179 | 0, (HEAP32[$177 + 4 >> 2] | 0) - ($179 << 1) | 0) | 0;
  $191 = __Z11luaH_setstrP9lua_StateP5TableP7TString($185, HEAP32[(HEAP32[$0 + 28 >> 2] | 0) + 4 >> 2] | 0, $186) | 0;
  $192 = $191 + 4 | 0;
  if (!(HEAP32[$192 >> 2] | 0)) {
   HEAP32[$191 >> 2] = 1;
   HEAP32[$192 >> 2] = 1;
   $196 = HEAP32[$185 + 16 >> 2] | 0;
   if ((HEAP32[$196 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$196 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($185);
  }
  HEAP32[$1 >> 2] = $186;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 39) {
  __Z12luaO_chunkidPcPKcj($3, (HEAP32[$48 >> 2] | 0) + 16 | 0, 80);
  $124 = HEAP32[$49 >> 2] | 0;
  $125 = HEAP32[$50 >> 2] | 0;
  HEAP32[$vararg_buffer17 >> 2] = $3;
  HEAP32[$vararg_buffer17 + 4 >> 2] = $125;
  HEAP32[$vararg_buffer17 + 8 >> 2] = 89965;
  __Z16luaO_pushfstringP9lua_StatePKcz($124, 89955, $vararg_buffer17) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$49 >> 2] | 0, 3);
 } else if ((label | 0) == 49) {
  __Z12luaO_chunkidPcPKcj($3, (HEAP32[$48 >> 2] | 0) + 16 | 0, 80);
  $150 = HEAP32[$49 >> 2] | 0;
  $151 = HEAP32[$50 >> 2] | 0;
  HEAP32[$vararg_buffer22 >> 2] = $3;
  HEAP32[$vararg_buffer22 + 4 >> 2] = $151;
  HEAP32[$vararg_buffer22 + 8 >> 2] = 89965;
  __Z16luaO_pushfstringP9lua_StatePKcz($150, 89955, $vararg_buffer22) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$49 >> 2] | 0, 3);
 }
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$095$0 = 0, $10 = 0, $100 = 0, $104 = 0, $108 = 0, $11 = 0, $113 = 0, $114 = 0, $116 = 0, $12 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $46 = 0, $50 = 0, $55 = 0, $56 = 0, $58 = 0, $63 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy30 = sp + 128 | 0;
 $$byval_copy26 = sp + 112 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 108 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 100 | 0;
 $14 = sp + 96 | 0;
 $15 = sp + 92 | 0;
 $16 = sp + 88 | 0;
 $17 = sp + 84 | 0;
 $18 = sp + 80 | 0;
 $19 = sp + 76 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 64 | 0;
 $23 = sp + 60 | 0;
 $24 = sp + 56 | 0;
 $25 = sp + 52 | 0;
 $26 = sp + 48 | 0;
 $27 = sp + 44 | 0;
 $28 = sp + 40 | 0;
 $29 = sp + 36 | 0;
 $30 = sp + 32 | 0;
 $31 = sp + 28 | 0;
 $32 = sp + 24 | 0;
 $33 = sp + 20 | 0;
 $34 = sp + 16 | 0;
 $35 = sp + 12 | 0;
 $36 = sp + 8 | 0;
 $37 = sp + 4 | 0;
 $38 = sp;
 HEAP32[$4 >> 2] = 0;
 $39 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy30 >> 2] = $39;
 $40 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy30, 110200) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($39) | 0;
 do switch ($6 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$9 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 99:
  {
   $46 = $0 + 8 | 0;
   $50 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 12 >> 2] & 255]($46) | 0;
   HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$2 >> 2];
   $55 = HEAP8[$50 + 8 + 3 >> 0] | 0;
   $56 = $55 << 24 >> 24 < 0;
   $58 = $56 ? HEAP32[$50 >> 2] | 0 : $50;
   $63 = $58 + (($56 ? HEAP32[$50 + 4 >> 2] | 0 : $55 & 255) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $58, $63) | 0;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 12 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$13 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$14 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 75576, 75608) | 0;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$15 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$16 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 75608, 75640) | 0;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$17 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$18 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$19 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 28 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$20 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$20 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$21 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 4 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$22 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$23 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$23 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$24 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 75640, 75684) | 0;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$26 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$27 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 75684, 75704) | 0;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$28 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$28 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$30 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 75704, 75736) | 0;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 120:
  {
   $100 = HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$33 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$33 >> 2];
   $$sroa$095$0 = FUNCTION_TABLE_iiiiiii[$100 & 63]($0, $$byval_copy26, $$byval_copy30, $3, $4, $5) | 0;
   break;
  }
 case 88:
  {
   $104 = $0 + 8 | 0;
   $108 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$104 >> 2] | 0) + 24 >> 2] & 255]($104) | 0;
   HEAP32[$34 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$35 >> 2] = HEAP32[$2 >> 2];
   $113 = HEAP8[$108 + 8 + 3 >> 0] | 0;
   $114 = $113 << 24 >> 24 < 0;
   $116 = $114 ? HEAP32[$108 >> 2] | 0 : $108;
   $121 = $116 + (($114 ? HEAP32[$108 + 4 >> 2] | 0 : $113 & 255) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$34 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$35 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $116, $121) | 0;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$36 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$36 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$37 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$37 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$38 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$38 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$095$0 = HEAP32[$1 >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$095$0 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$095$0 = 0, $10 = 0, $103 = 0, $107 = 0, $11 = 0, $111 = 0, $112 = 0, $114 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $46 = 0, $50 = 0, $54 = 0, $55 = 0, $57 = 0, $62 = 0, $8 = 0, $9 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy30 = sp + 128 | 0;
 $$byval_copy26 = sp + 112 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 108 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 100 | 0;
 $14 = sp + 96 | 0;
 $15 = sp + 92 | 0;
 $16 = sp + 88 | 0;
 $17 = sp + 84 | 0;
 $18 = sp + 80 | 0;
 $19 = sp + 76 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 64 | 0;
 $23 = sp + 60 | 0;
 $24 = sp + 56 | 0;
 $25 = sp + 52 | 0;
 $26 = sp + 48 | 0;
 $27 = sp + 44 | 0;
 $28 = sp + 40 | 0;
 $29 = sp + 36 | 0;
 $30 = sp + 32 | 0;
 $31 = sp + 28 | 0;
 $32 = sp + 24 | 0;
 $33 = sp + 20 | 0;
 $34 = sp + 16 | 0;
 $35 = sp + 12 | 0;
 $36 = sp + 8 | 0;
 $37 = sp + 4 | 0;
 $38 = sp;
 HEAP32[$4 >> 2] = 0;
 $39 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy30 >> 2] = $39;
 $40 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy30, 110168) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($39) | 0;
 do switch ($6 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$9 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 99:
  {
   $46 = $0 + 8 | 0;
   $50 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 12 >> 2] & 255]($46) | 0;
   HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$2 >> 2];
   $54 = HEAP8[$50 + 11 >> 0] | 0;
   $55 = $54 << 24 >> 24 < 0;
   $57 = $55 ? HEAP32[$50 >> 2] | 0 : $50;
   $62 = $57 + ($55 ? HEAP32[$50 + 4 >> 2] | 0 : $54 & 255) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $57, $62) | 0;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 12 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$13 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$14 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 103570, 103578) | 0;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$15 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$16 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 103578, 103586) | 0;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$17 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$18 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$19 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 28 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$20 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$20 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$21 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 4 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$22 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$23 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$23 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$24 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 103586, 103597) | 0;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$26 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$27 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 103597, 103602) | 0;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$28 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$28 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$30 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 103602, 103610) | 0;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 120:
  {
   $99 = HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$33 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$33 >> 2];
   $$sroa$095$0 = FUNCTION_TABLE_iiiiiii[$99 & 63]($0, $$byval_copy26, $$byval_copy30, $3, $4, $5) | 0;
   break;
  }
 case 88:
  {
   $103 = $0 + 8 | 0;
   $107 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$103 >> 2] | 0) + 24 >> 2] & 255]($103) | 0;
   HEAP32[$34 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$35 >> 2] = HEAP32[$2 >> 2];
   $111 = HEAP8[$107 + 11 >> 0] | 0;
   $112 = $111 << 24 >> 24 < 0;
   $114 = $112 ? HEAP32[$107 >> 2] | 0 : $107;
   $119 = $114 + ($112 ? HEAP32[$107 + 4 >> 2] | 0 : $111 & 255) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$34 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$35 >> 2];
   HEAP32[$1 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $114, $119) | 0;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$36 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$36 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$37 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$37 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$38 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$38 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $$byval_copy30, $4, $40);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$095$0 = HEAP32[$1 >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$095$0 | 0;
}

function __ZN6google15DescribeOneFlagERKNS_19CommandLineFlagInfoE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$in = 0, $$0128 = 0, $$071 = 0, $$075 = 0, $$1 = 0, $$2 = 0, $$277 = 0, $$3130$ph = 0, $$pn = 0, $101 = 0, $102 = 0, $103 = 0, $105 = 0, $108 = 0, $110 = 0, $113 = 0, $114 = 0, $123 = 0, $128 = 0, $134 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $143 = 0, $151 = 0, $152 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $41 = 0, $42 = 0, $48 = 0, $49 = 0, $55 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $67 = 0, $68 = 0, $69 = 0, $71 = 0, $74 = 0, $75 = 0, $78 = 0, $79 = 0, $85 = 0, $9 = 0, $90 = 0, $96 = 0, $storemerge$i106 = 0, $storemerge$i95 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer16 = 0, $vararg_buffer2 = 0, $vararg_buffer20 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, label = 0, sp = 0, $$0$in$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $vararg_buffer20 = sp + 56 | 0;
 $vararg_buffer16 = sp + 48 | 0;
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer4 = sp + 24 | 0;
 $vararg_buffer2 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 72 | 0;
 $3 = sp + 60 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $9 = $1 + 24 | 0;
 $14 = (HEAP8[$9 + 11 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$vararg_buffer >> 2] = (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
 HEAP32[$vararg_buffer + 4 >> 2] = $14;
 __ZN6google13SStringPrintfEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($2, 92127, $vararg_buffer);
 $16 = HEAP8[$2 + 11 >> 0] | 0;
 $17 = $16 << 24 >> 24 < 0;
 $18 = HEAP32[$2 >> 2] | 0;
 $20 = HEAP32[$2 + 4 >> 2] | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 114224, 0);
 $24 = $vararg_buffer + 11 | 0;
 $25 = $vararg_buffer + 4 | 0;
 $$0128 = 0;
 $$071 = $17 ? $20 : $16 & 255;
 $$075 = $17 ? $18 : $2;
 L1 : while (1) {
  $26 = _strchr($$075, 10) | 0;
  if (!$26) {
   $27 = $$071 + $$0128 | 0;
   if (($27 | 0) < 80) {
    label = 4;
    break;
   }
   $$0$in = 80 - $$0128 | 0;
   label = 8;
  } else {
   $30 = $26 - $$075 | 0;
   $31 = 80 - $$0128 | 0;
   if (($30 | 0) < ($31 | 0)) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $$075, $30) | 0;
    $33 = $30 + 1 | 0;
    $34 = $$075 + $33 | 0;
    $$2 = $$0128;
    $$277 = $34;
    $$pn = $33;
    $55 = HEAP8[$34 >> 0] | 0;
   } else {
    $$0$in = $31;
    label = 8;
   }
  }
  if ((label | 0) == 8) {
   while (1) {
    label = 0;
    $$0$in$looptemp = $$0$in;
    $$0$in = $$0$in + -1 | 0;
    if (($$0$in$looptemp | 0) <= 1) {
     label = 10;
     break L1;
    }
    if (_isspace(HEAP8[$$075 + $$0$in >> 0] | 0) | 0) break; else label = 8;
   }
   HEAP32[$vararg_buffer >> 2] = 0;
   HEAP32[$vararg_buffer + 4 >> 2] = 0;
   HEAP32[$vararg_buffer + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, $$075, $$0$in);
   $41 = HEAP8[$24 >> 0] | 0;
   $42 = $41 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $42 ? HEAP32[$vararg_buffer >> 2] | 0 : $vararg_buffer, $42 ? HEAP32[$25 >> 2] | 0 : $41 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
   $$1 = $$0$in;
   while (1) {
    $48 = $$075 + $$1 | 0;
    $49 = HEAP8[$48 >> 0] | 0;
    if (!(_isspace($49 << 24 >> 24) | 0)) break; else $$1 = $$1 + 1 | 0;
   }
   $$2 = $$0$in + $$0128 | 0;
   $$277 = $48;
   $$pn = $$1;
   $55 = $49;
  }
  if (!($55 << 24 >> 24)) {
   $$3130$ph = $$2;
   break;
  }
  __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($0, 92140, $vararg_buffer2);
  $$0128 = 6;
  $$071 = $$071 - $$pn | 0;
  $$075 = $$277;
 }
 if ((label | 0) == 4) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, $$075) | 0;
  $$3130$ph = $27;
 } else if ((label | 0) == 10) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, $$075) | 0;
  $$3130$ph = 80;
 };
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 92148, 6);
 $57 = $1 + 12 | 0;
 $58 = $57 + 11 | 0;
 $59 = HEAP8[$58 >> 0] | 0;
 $60 = $59 << 24 >> 24 < 0;
 $67 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($3, $60 ? HEAP32[$57 >> 2] | 0 : $57, $60 ? HEAP32[$1 + 16 >> 2] | 0 : $59 & 255) | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$67 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = HEAP32[$67 + 4 >> 2];
 HEAP32[$vararg_buffer + 8 >> 2] = HEAP32[$67 + 8 >> 2];
 HEAP32[$67 >> 2] = 0;
 HEAP32[$67 + 4 >> 2] = 0;
 HEAP32[$67 + 8 >> 2] = 0;
 $68 = $vararg_buffer + 11 | 0;
 $69 = HEAP8[$68 >> 0] | 0;
 $71 = $vararg_buffer + 4 | 0;
 $74 = $69 << 24 >> 24 < 0 ? HEAP32[$71 >> 2] | 0 : $69 & 255;
 $75 = $$3130$ph + 1 | 0;
 if (($74 + $75 | 0) > 79) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, 92140) | 0;
  $storemerge$i95 = 6;
 } else {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, 92155) | 0;
  $storemerge$i95 = $75;
 }
 $78 = HEAP8[$68 >> 0] | 0;
 $79 = $78 << 24 >> 24 < 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $79 ? HEAP32[$vararg_buffer >> 2] | 0 : $vararg_buffer, $79 ? HEAP32[$71 >> 2] | 0 : $78 & 255) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 92157, 7);
 $85 = $1 + 48 | 0;
 $90 = (HEAP8[$85 + 11 >> 0] | 0) < 0 ? HEAP32[$85 >> 2] | 0 : $85;
 $96 = (_strcmp((HEAP8[$58 >> 0] | 0) < 0 ? HEAP32[$57 >> 2] | 0 : $57, 93204) | 0) == 0;
 $101 = (HEAP8[$3 + 11 >> 0] | 0) < 0 ? HEAP32[$3 >> 2] | 0 : $3;
 if ($96) {
  HEAP32[$vararg_buffer4 >> 2] = $101;
  HEAP32[$vararg_buffer4 + 4 >> 2] = $90;
  __ZN6google12StringPrintfEPKcz($vararg_buffer, 92165, $vararg_buffer4);
 } else {
  HEAP32[$vararg_buffer8 >> 2] = $101;
  HEAP32[$vararg_buffer8 + 4 >> 2] = $90;
  __ZN6google12StringPrintfEPKcz($vararg_buffer, 92174, $vararg_buffer8);
 }
 $102 = $vararg_buffer + 11 | 0;
 $103 = HEAP8[$102 >> 0] | 0;
 $105 = $vararg_buffer + 4 | 0;
 $108 = $103 << 24 >> 24 < 0 ? HEAP32[$105 >> 2] | 0 : $103 & 255;
 $110 = $74 + 1 + $storemerge$i95 | 0;
 if (($108 + $110 | 0) > 79) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, 92140) | 0;
  $storemerge$i106 = 6;
 } else {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, 92155) | 0;
  $storemerge$i106 = $110;
 }
 $113 = HEAP8[$102 >> 0] | 0;
 $114 = $113 << 24 >> 24 < 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $114 ? HEAP32[$vararg_buffer >> 2] | 0 : $vararg_buffer, $114 ? HEAP32[$105 >> 2] | 0 : $113 & 255) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 if (HEAP8[$1 + 73 >> 0] | 0) {
  __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($0, 93202, $vararg_buffer20);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  STACKTOP = sp;
  return;
 };
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 92181, 9);
 $123 = $1 + 36 | 0;
 $128 = (HEAP8[$123 + 11 >> 0] | 0) < 0 ? HEAP32[$123 >> 2] | 0 : $123;
 $134 = (_strcmp((HEAP8[$58 >> 0] | 0) < 0 ? HEAP32[$57 >> 2] | 0 : $57, 93204) | 0) == 0;
 $139 = (HEAP8[$3 + 11 >> 0] | 0) < 0 ? HEAP32[$3 >> 2] | 0 : $3;
 if ($134) {
  HEAP32[$vararg_buffer12 >> 2] = $139;
  HEAP32[$vararg_buffer12 + 4 >> 2] = $128;
  __ZN6google12StringPrintfEPKcz($vararg_buffer, 92165, $vararg_buffer12);
 } else {
  HEAP32[$vararg_buffer16 >> 2] = $139;
  HEAP32[$vararg_buffer16 + 4 >> 2] = $128;
  __ZN6google12StringPrintfEPKcz($vararg_buffer, 92174, $vararg_buffer16);
 }
 $140 = $vararg_buffer + 11 | 0;
 $141 = HEAP8[$140 >> 0] | 0;
 $143 = $vararg_buffer + 4 | 0;
 if (($108 + 1 + $storemerge$i106 + ($141 << 24 >> 24 < 0 ? HEAP32[$143 >> 2] | 0 : $141 & 255) | 0) > 79) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, 92140) | 0; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, 92155) | 0;
 $151 = HEAP8[$140 >> 0] | 0;
 $152 = $151 << 24 >> 24 < 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $152 ? HEAP32[$vararg_buffer >> 2] | 0 : $vararg_buffer, $152 ? HEAP32[$143 >> 2] | 0 : $151 & 255) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($0, 93202, $vararg_buffer20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i53 = 0, $$0$i$i$i59 = 0, $$0$i$i$i65 = 0, $$0$i$i$i71 = 0, $$0$i$i$i77 = 0, $$0$i$i$i83 = 0, $$pre$phi$i$i45Z2D = 0, $$pre$phi$i$i51Z2D = 0, $$pre$phi$i$i57Z2D = 0, $$pre$phi$i$i63Z2D = 0, $$pre$phi$i$i69Z2D = 0, $$pre$phi$i$i75Z2D = 0, $$pre$phi$i$i81Z2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi86Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $112 = 0, $122 = 0, $15 = 0, $19 = 0, $29 = 0, $33 = 0, $51 = 0, $61 = 0, $72 = 0, $76 = 0, $80 = 0, $90 = 0, $94 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $10 = sp;
 if ($0) {
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 111888) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 44 >> 2] & 63]($10, $11);
   $15 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $15;
   HEAP8[$3 + 1 >> 0] = $15 >> 8;
   HEAP8[$3 + 2 >> 0] = $15 >> 16;
   HEAP8[$3 + 3 >> 0] = $15 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] & 63]($10, $11);
   $19 = $8 + 11 | 0;
   if ((HEAP8[$19 >> 0] | 0) < 0) {
    HEAP8[HEAP32[$8 >> 2] >> 0] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$iZ2D = $8;
   } else {
    HEAP8[$8 >> 0] = 0;
    HEAP8[$19 >> 0] = 0;
    $$pre$phi$i$iZ2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
   HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $$pre$phiZ2D = $11;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 40 >> 2] & 63]($10, $11);
   $29 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $29;
   HEAP8[$3 + 1 >> 0] = $29 >> 8;
   HEAP8[$3 + 2 >> 0] = $29 >> 16;
   HEAP8[$3 + 3 >> 0] = $29 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($10, $11);
   $33 = $8 + 11 | 0;
   if ((HEAP8[$33 >> 0] | 0) < 0) {
    HEAP8[HEAP32[$8 >> 2] >> 0] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$i45Z2D = $8;
   } else {
    HEAP8[$8 >> 0] = 0;
    HEAP8[$33 >> 0] = 0;
    $$pre$phi$i$i45Z2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
   HEAP32[$$pre$phi$i$i45Z2D >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$pre$phi$i$i45Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$$pre$phi$i$i45Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i47 = 0;
   while (1) {
    if (($$0$i$i$i47 | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i47 << 2) >> 2] = 0;
    $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $$pre$phiZ2D = $11;
  }
  HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 255]($11) | 0;
  HEAP8[$5 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 20 >> 2] & 63]($10, $11);
  $51 = $6 + 11 | 0;
  if ((HEAP8[$51 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$6 >> 2] >> 0] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i51Z2D = $6;
  } else {
   HEAP8[$6 >> 0] = 0;
   HEAP8[$51 >> 0] = 0;
   $$pre$phi$i$i51Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i51Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i51Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i51Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i53 = 0;
  while (1) {
   if (($$0$i$i$i53 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i53 << 2) >> 2] = 0;
   $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 24 >> 2] & 63]($10, $11);
  $61 = $7 + 11 | 0;
  if ((HEAP8[$61 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$7 >> 2] >> 0] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i57Z2D = $7;
  } else {
   HEAP8[$7 >> 0] = 0;
   HEAP8[$61 >> 0] = 0;
   $$pre$phi$i$i57Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
  HEAP32[$$pre$phi$i$i57Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i59 = 0;
  while (1) {
   if (($$0$i$i$i59 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i59 << 2) >> 2] = 0;
   $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 255]($11) | 0;
 } else {
  $72 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 111880) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 44 >> 2] & 63]($10, $72);
   $76 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $76;
   HEAP8[$3 + 1 >> 0] = $76 >> 8;
   HEAP8[$3 + 2 >> 0] = $76 >> 16;
   HEAP8[$3 + 3 >> 0] = $76 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 32 >> 2] & 63]($10, $72);
   $80 = $8 + 11 | 0;
   if ((HEAP8[$80 >> 0] | 0) < 0) {
    HEAP8[HEAP32[$8 >> 2] >> 0] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$i63Z2D = $8;
   } else {
    HEAP8[$8 >> 0] = 0;
    HEAP8[$80 >> 0] = 0;
    $$pre$phi$i$i63Z2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
   HEAP32[$$pre$phi$i$i63Z2D >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$pre$phi$i$i63Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$$pre$phi$i$i63Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i65 = 0;
   while (1) {
    if (($$0$i$i$i65 | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i65 << 2) >> 2] = 0;
    $$0$i$i$i65 = $$0$i$i$i65 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $$pre$phi86Z2D = $72;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 40 >> 2] & 63]($10, $72);
   $90 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $90;
   HEAP8[$3 + 1 >> 0] = $90 >> 8;
   HEAP8[$3 + 2 >> 0] = $90 >> 16;
   HEAP8[$3 + 3 >> 0] = $90 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 28 >> 2] & 63]($10, $72);
   $94 = $8 + 11 | 0;
   if ((HEAP8[$94 >> 0] | 0) < 0) {
    HEAP8[HEAP32[$8 >> 2] >> 0] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$i69Z2D = $8;
   } else {
    HEAP8[$8 >> 0] = 0;
    HEAP8[$94 >> 0] = 0;
    $$pre$phi$i$i69Z2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
   HEAP32[$$pre$phi$i$i69Z2D >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$pre$phi$i$i69Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$$pre$phi$i$i69Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i71 = 0;
   while (1) {
    if (($$0$i$i$i71 | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i71 << 2) >> 2] = 0;
    $$0$i$i$i71 = $$0$i$i$i71 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $$pre$phi86Z2D = $72;
  }
  HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 12 >> 2] & 255]($72) | 0;
  HEAP8[$5 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 16 >> 2] & 255]($72) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi86Z2D >> 2] | 0) + 20 >> 2] & 63]($10, $72);
  $112 = $6 + 11 | 0;
  if ((HEAP8[$112 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$6 >> 2] >> 0] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i75Z2D = $6;
  } else {
   HEAP8[$6 >> 0] = 0;
   HEAP8[$112 >> 0] = 0;
   $$pre$phi$i$i75Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i75Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i75Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i75Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i77 = 0;
  while (1) {
   if (($$0$i$i$i77 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i77 << 2) >> 2] = 0;
   $$0$i$i$i77 = $$0$i$i$i77 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi86Z2D >> 2] | 0) + 24 >> 2] & 63]($10, $72);
  $122 = $7 + 11 | 0;
  if ((HEAP8[$122 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$7 >> 2] >> 0] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i81Z2D = $7;
  } else {
   HEAP8[$7 >> 0] = 0;
   HEAP8[$122 >> 0] = 0;
   $$pre$phi$i$i81Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
  HEAP32[$$pre$phi$i$i81Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i81Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i81Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i83 = 0;
  while (1) {
   if (($$0$i$i$i83 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i83 << 2) >> 2] = 0;
   $$0$i$i$i83 = $$0$i$i$i83 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 36 >> 2] & 255]($72) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZL6newkeyP9lua_StateP5TablePK10lua_TValue($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i52 = 0, $$0$ph$i$i = 0, $$018$i$i = 0, $$018$ph$i$i = 0, $$019$ph$i$i = 0, $$02636$i$i = 0, $$02935$i$i = 0, $$03134$i$i = 0, $$032$ph$i$i = 0, $$03233$i$i = 0, $$033$$i$i = 0, $$033$lcssa$i$i = 0, $$03344$i$i = 0, $$03449$i$i = 0, $$036$lcssa$i$i = 0, $$03648$i$i = 0, $$037$i$i = 0, $$03947$i$i = 0, $$04046$i$i = 0, $$048 = 0, $$1 = 0, $$1$i$i = 0, $$127$i$i = 0, $$130$i$i = 0, $$135$lcssa$i$i = 0, $$13543$i$i = 0, $$2 = 0, $$2$i$i = 0, $$228$i$i = 0, $$off$i$i = 0, $$off$i$i$i = 0, $102 = 0, $110 = 0.0, $111 = 0, $116 = 0, $121 = 0, $124 = 0.0, $125 = 0, $130 = 0, $133 = 0, $136 = 0, $138 = 0, $139 = 0, $140 = 0, $140$phi = 0, $148 = 0, $152 = 0.0, $155 = 0, $158 = 0.0, $206 = 0, $210 = 0, $29 = 0, $3 = 0, $39 = 0, $4 = 0, $50 = 0, $6 = 0.0, $61 = 0, $63 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $72 = 0, $77 = 0, $78 = 0, $82 = 0, $87 = 0, $89 = 0, $9 = 0, $92 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, dest = 0, label = 0, sp = 0, stop = 0, $$018$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = sp + 12 | 0;
 $4 = $2 + 4 | 0;
 switch (HEAP32[$4 >> 2] | 0) {
 case 3:
  {
   $6 = +HEAPF32[$2 >> 2];
   $9 = HEAP32[$1 + 16 >> 2] | 0;
   if ($6 == 0.0) {
    $$0$i = $9;
    $72 = $9;
   } else {
    $$0$i = $9 + ((((HEAPF32[tempDoublePtr >> 2] = $6, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
    $72 = $9;
   }
   break;
  }
 case 4:
  {
   $29 = HEAP32[$1 + 16 >> 2] | 0;
   $$0$i = $29 + (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 & HEAP32[(HEAP32[$2 >> 2] | 0) + 8 >> 2]) * 20 | 0) | 0;
   $72 = $29;
   break;
  }
 case 1:
  {
   $39 = HEAP32[$1 + 16 >> 2] | 0;
   $$0$i = $39 + (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 & HEAP32[$2 >> 2]) * 20 | 0) | 0;
   $72 = $39;
   break;
  }
 case 2:
  {
   $50 = HEAP32[$1 + 16 >> 2] | 0;
   $$0$i = $50 + ((((HEAP32[$2 >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
   $72 = $50;
   break;
  }
 default:
  {
   $61 = HEAP32[$1 + 16 >> 2] | 0;
   $$0$i = $61 + ((((HEAP32[$2 >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
   $72 = $61;
  }
 }
 $63 = $$0$i + 4 | 0;
 do if (($$0$i | 0) == 108172 | (HEAP32[$63 >> 2] | 0) != 0) {
  $67 = $1 + 20 | 0;
  $68 = $1 + 16 | 0;
  $70 = HEAP32[$67 >> 2] | 0;
  while (1) {
   $69 = $70 + -20 | 0;
   HEAP32[$67 >> 2] = $69;
   if ($70 >>> 0 <= $72 >>> 0) break;
   if (!(HEAP32[$70 + -8 >> 2] | 0)) {
    label = 43;
    break;
   } else $70 = $69;
  }
  if ((label | 0) == 43) {
   $155 = $$0$i + 8 | 0;
   switch (HEAP32[$$0$i + 12 >> 2] | 0) {
   case 3:
    {
     $158 = +HEAPF32[$155 >> 2];
     if ($158 == 0.0) $$0$i52 = $72; else $$0$i52 = $72 + ((((HEAPF32[tempDoublePtr >> 2] = $158, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
     break;
    }
   case 4:
    {
     $$0$i52 = $72 + (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 & HEAP32[(HEAP32[$155 >> 2] | 0) + 8 >> 2]) * 20 | 0) | 0;
     break;
    }
   case 1:
    {
     $$0$i52 = $72 + (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 & HEAP32[$155 >> 2]) * 20 | 0) | 0;
     break;
    }
   case 2:
    {
     $$0$i52 = $72 + ((((HEAP32[$155 >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
     break;
    }
   default:
    $$0$i52 = $72 + ((((HEAP32[$155 >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
   }
   if (($$0$i52 | 0) == ($$0$i | 0)) {
    $210 = $$0$i + 16 | 0;
    HEAP32[$70 + -4 >> 2] = HEAP32[$210 >> 2];
    HEAP32[$210 >> 2] = $69;
    $$2 = $69;
    break;
   } else $$048 = $$0$i52;
   do {
    $206 = $$048 + 16 | 0;
    $$048 = HEAP32[$206 >> 2] | 0;
   } while (($$048 | 0) != ($$0$i | 0));
   HEAP32[$206 >> 2] = $69;
   HEAP32[$69 >> 2] = HEAP32[$$0$i >> 2];
   HEAP32[$69 + 4 >> 2] = HEAP32[$$0$i + 4 >> 2];
   HEAP32[$69 + 8 >> 2] = HEAP32[$$0$i + 8 >> 2];
   HEAP32[$69 + 12 >> 2] = HEAP32[$$0$i + 12 >> 2];
   HEAP32[$69 + 16 >> 2] = HEAP32[$$0$i + 16 >> 2];
   HEAP32[$$0$i + 16 >> 2] = 0;
   HEAP32[$63 >> 2] = 0;
   $$2 = $$0$i;
   break;
  }
  dest = $3;
  stop = dest + 108 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  $77 = $1 + 12 | 0;
  $78 = HEAP32[$1 + 28 >> 2] | 0;
  $$03449$i$i = 1;
  $$03648$i$i = 0;
  $$03947$i$i = 1;
  $$04046$i$i = 0;
  while (1) {
   if (($$03947$i$i | 0) > ($78 | 0)) if (($$03449$i$i | 0) > ($78 | 0)) {
    $$036$lcssa$i$i = $$03648$i$i;
    break;
   } else $$032$ph$i$i = $78; else $$032$ph$i$i = $$03947$i$i;
   if (($$03449$i$i | 0) > ($$032$ph$i$i | 0)) {
    $$033$lcssa$i$i = 0;
    $$135$lcssa$i$i = $$03449$i$i;
   } else {
    $82 = HEAP32[$77 >> 2] | 0;
    $$03344$i$i = 0;
    $$13543$i$i = $$03449$i$i;
    while (1) {
     $$033$$i$i = ((HEAP32[$82 + ($$13543$i$i + -1 << 3) + 4 >> 2] | 0) != 0 & 1) + $$03344$i$i | 0;
     $87 = $$13543$i$i + 1 | 0;
     if (($$13543$i$i | 0) < ($$032$ph$i$i | 0)) {
      $$03344$i$i = $$033$$i$i;
      $$13543$i$i = $87;
     } else {
      $$033$lcssa$i$i = $$033$$i$i;
      $$135$lcssa$i$i = $87;
      break;
     }
    }
   }
   $89 = $3 + ($$04046$i$i << 2) | 0;
   HEAP32[$89 >> 2] = (HEAP32[$89 >> 2] | 0) + $$033$lcssa$i$i;
   $92 = $$033$lcssa$i$i + $$03648$i$i | 0;
   $$04046$i$i = $$04046$i$i + 1 | 0;
   if (($$04046$i$i | 0) >= 27) {
    $$036$lcssa$i$i = $92;
    break;
   } else {
    $$03449$i$i = $$135$lcssa$i$i;
    $$03648$i$i = $92;
    $$03947$i$i = $$03947$i$i << 1;
   }
  }
  $$0$ph$i$i = 0;
  $$018$ph$i$i = 1 << (HEAPU8[$1 + 7 >> 0] | 0);
  $$019$ph$i$i = 0;
  L41 : while (1) {
   $$018$i$i = $$018$ph$i$i;
   do {
    $$018$i$i$looptemp = $$018$i$i;
    $$018$i$i = $$018$i$i + -1 | 0;
    if (!$$018$i$i$looptemp) break L41;
    $102 = HEAP32[$68 >> 2] | 0;
   } while (!(HEAP32[$102 + ($$018$i$i * 20 | 0) + 4 >> 2] | 0));
   if ((HEAP32[$102 + ($$018$i$i * 20 | 0) + 12 >> 2] | 0) == 3) {
    $110 = +HEAPF32[$102 + ($$018$i$i * 20 | 0) + 8 >> 2];
    $111 = ~~$110;
    if (+($111 | 0) != $110) $$0$i$i$i = 0; else {
     $$off$i$i$i = $111 + -1 | 0;
     if ($$off$i$i$i >>> 0 < 67108864) {
      $116 = $3 + ((__Z9luaO_log2j($$off$i$i$i) | 0) + 1 << 2) | 0;
      HEAP32[$116 >> 2] = (HEAP32[$116 >> 2] | 0) + 1;
      $$0$i$i$i = 1;
     } else $$0$i$i$i = 0;
    }
   } else $$0$i$i$i = 0;
   $$0$ph$i$i = $$0$ph$i$i + 1 | 0;
   $$018$ph$i$i = $$018$i$i;
   $$019$ph$i$i = $$0$i$i$i + $$019$ph$i$i | 0;
  }
  $121 = $$019$ph$i$i + $$036$lcssa$i$i | 0;
  if ((HEAP32[$4 >> 2] | 0) == 3) {
   $124 = +HEAPF32[$2 >> 2];
   $125 = ~~$124;
   if (+($125 | 0) != $124) $$0$i$i = 0; else {
    $$off$i$i = $125 + -1 | 0;
    if ($$off$i$i >>> 0 < 67108864) {
     $130 = $3 + ((__Z9luaO_log2j($$off$i$i) | 0) + 1 << 2) | 0;
     HEAP32[$130 >> 2] = (HEAP32[$130 >> 2] | 0) + 1;
     $$0$i$i = 1;
    } else $$0$i$i = 0;
   }
  } else $$0$i$i = 0;
  $133 = $121 + $$0$i$i | 0;
  L58 : do if (($133 | 0) > 0) {
   $$02636$i$i = 0;
   $$02935$i$i = 0;
   $$03134$i$i = 1;
   $$03233$i$i = 0;
   $$037$i$i = 0;
   $140 = 0;
   while (1) {
    $136 = HEAP32[$3 + ($$03233$i$i << 2) >> 2] | 0;
    if (($136 | 0) > 0) {
     $138 = $136 + $$02935$i$i | 0;
     $139 = ($138 | 0) > ($140 | 0);
     $$1$i$i = $139 ? $$03134$i$i : $$037$i$i;
     $$127$i$i = $139 ? $138 : $$02636$i$i;
     $$130$i$i = $138;
    } else {
     $$1$i$i = $$037$i$i;
     $$127$i$i = $$02636$i$i;
     $$130$i$i = $$02935$i$i;
    }
    if (($$130$i$i | 0) == ($133 | 0)) {
     $$2$i$i = $$1$i$i;
     $$228$i$i = $$127$i$i;
     break L58;
    }
    if (($$03134$i$i | 0) < ($133 | 0)) {
     $140$phi = $$03134$i$i;
     $$02636$i$i = $$127$i$i;
     $$02935$i$i = $$130$i$i;
     $$03134$i$i = $$03134$i$i << 1;
     $$03233$i$i = $$03233$i$i + 1 | 0;
     $$037$i$i = $$1$i$i;
     $140 = $140$phi;
    } else {
     $$2$i$i = $$1$i$i;
     $$228$i$i = $$127$i$i;
     break;
    }
   }
  } else {
   $$2$i$i = 0;
   $$228$i$i = 0;
  } while (0);
  __ZL6resizeP9lua_StateP5Tableii($0, $1, $$2$i$i, $$036$lcssa$i$i + 1 + $$0$ph$i$i - $$228$i$i | 0);
  $148 = __Z8luaH_getP5TablePK10lua_TValue($1, $2) | 0;
  HEAP8[$1 + 6 >> 0] = 0;
  if (($148 | 0) != 108164) {
   $$1 = $148;
   STACKTOP = sp;
   return $$1 | 0;
  }
  switch (HEAP32[$4 >> 2] | 0) {
  case 0:
   {
    __Z13luaG_runerrorP9lua_StatePKcz($0, 88968, $vararg_buffer);
    break;
   }
  case 3:
   {
    $152 = +HEAPF32[$2 >> 2];
    if (!($152 == $152 & 0.0 == 0.0)) __Z13luaG_runerrorP9lua_StatePKcz($0, 88987, $vararg_buffer1);
    break;
   }
  default:
   {}
  }
  $$1 = __ZL6newkeyP9lua_StateP5TablePK10lua_TValue($0, $1, $2) | 0;
  STACKTOP = sp;
  return $$1 | 0;
 } else $$2 = $$0$i; while (0);
 HEAP32[$$2 + 8 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$2 + 12 >> 2] = HEAP32[$4 >> 2];
 if ((HEAP32[$4 >> 2] | 0) > 3) if (HEAP8[(HEAP32[$2 >> 2] | 0) + 5 >> 0] & 3) if (HEAP8[$1 + 5 >> 0] & 4) __Z16luaC_barrierbackP9lua_StateP5Table($0, $1);
 $$1 = $$2;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNK8LuaTable9PushValueERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$054 = 0, $$055 = 0, $$1$i$i82 = 0, $$3 = 0, $$6 = 0, $$sroa$0$0$i$i = 0, $$sroa$0$0$i$i66 = 0, $$sroa$0$0$i$i79 = 0, $$sroa$033$142$i$i$i = 0, $$sroa$033$142$i$i$i61 = 0, $$sroa$033$142$i$i$i74 = 0, $$sroa$06$0$i$i = 0, $106 = 0, $107 = 0, $111 = 0, $112 = 0, $124 = 0, $125 = 0, $130 = 0, $139 = 0, $140 = 0, $141 = 0, $147 = 0, $148 = 0, $15 = 0, $153 = 0, $16 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $58 = 0, $6 = 0, $60 = 0, $67 = 0, $68 = 0, $7 = 0, $70 = 0, $71 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $86 = 0, $88 = 0, $9 = 0, $96 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $2 = sp + 52 | 0;
 $3 = sp + 48 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 36 | 0;
 $6 = sp;
 $7 = sp + 12 | 0;
 $9 = HEAP32[$0 + 16 >> 2] | 0;
 if (!$9) label = 4; else if (!(HEAP8[$9 + 134 >> 0] | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($4, $1); else label = 4;
 if ((label | 0) == 4) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5, $1);
  $15 = HEAP8[$5 + 11 >> 0] | 0;
  $16 = $15 << 24 >> 24 < 0;
  $18 = $16 ? HEAP32[$5 >> 2] | 0 : $5;
  $22 = $16 ? HEAP32[$5 + 4 >> 2] | 0 : $15 & 255;
  $23 = $18 + $22 | 0;
  if ($22 | 0) {
   $$sroa$06$0$i$i = $18;
   do {
    HEAP8[$$sroa$06$0$i$i >> 0] = _tolower(HEAP8[$$sroa$06$0$i$i >> 0] | 0) | 0;
    $$sroa$06$0$i$i = $$sroa$06$0$i$i + 1 | 0;
   } while (($$sroa$06$0$i$i | 0) != ($23 | 0));
  };
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 }
 if (!(__ZNK8LuaTable9PushTableEv($0) | 0)) {
  $$6 = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  STACKTOP = sp;
  return $$6 | 0;
 }
 $32 = $0 + 20 | 0;
 $33 = $4 + 11 | 0;
 $34 = HEAP8[$33 >> 0] | 0;
 $35 = $34 << 24 >> 24 < 0;
 $37 = $4 + 4 | 0;
 $40 = $35 ? HEAP32[$4 >> 2] | 0 : $4;
 $41 = $35 ? HEAP32[$37 >> 2] | 0 : $34 & 255;
 if ($41 | 0) {
  $43 = $40 + $41 | 0;
  $44 = $40;
  $45 = $43;
  $46 = ($41 | 0) < 1;
  L16 : do if ($46) $$sroa$0$0$i$i = $45; else {
   $$sroa$033$142$i$i$i = $44;
   $48 = $40;
   while (1) {
    if ((HEAP8[$48 >> 0] | 0) == 46) {
     $$sroa$0$0$i$i = $$sroa$033$142$i$i$i;
     break L16;
    }
    $50 = $48 + 1 | 0;
    if (($50 | 0) == ($43 | 0)) {
     $$sroa$0$0$i$i = $45;
     break;
    } else {
     $$sroa$033$142$i$i$i = $50;
     $48 = $50;
    }
   }
  } while (0);
  if (!(($$sroa$0$0$i$i | 0) == ($43 | 0) | ($$sroa$0$0$i$i - $44 | 0) == -1)) {
   L22 : do if ($46) $$sroa$0$0$i$i66 = $45; else {
    $$sroa$033$142$i$i$i61 = $44;
    $58 = $40;
    while (1) {
     if ((HEAP8[$58 >> 0] | 0) == 46) {
      $$sroa$0$0$i$i66 = $$sroa$033$142$i$i$i61;
      break L22;
     }
     $60 = $58 + 1 | 0;
     if (($60 | 0) == ($43 | 0)) {
      $$sroa$0$0$i$i66 = $45;
      break;
     } else {
      $$sroa$033$142$i$i$i61 = $60;
      $58 = $60;
     }
    }
   } while (0);
   __Z13lua_pushvalueP9lua_Statei(HEAP32[$32 >> 2] | 0, -1);
   $67 = $2 + 11 | 0;
   $68 = $2 + 4 | 0;
   $$054 = 0;
   $$055 = ($$sroa$0$0$i$i66 | 0) == ($43 | 0) ? -1 : $$sroa$0$0$i$i66 - $44 | 0;
   while (1) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($2, $4, $$054, $$055, $4);
    $$054 = $$055 + 1 | 0;
    $70 = HEAP8[$33 >> 0] | 0;
    $71 = $70 << 24 >> 24 < 0;
    $75 = $71 ? HEAP32[$4 >> 2] | 0 : $4;
    $76 = $71 ? HEAP32[$37 >> 2] | 0 : $70 & 255;
    if ($76 >>> 0 > $$054 >>> 0) {
     $78 = $75 + $$054 | 0;
     $79 = $75 + $76 | 0;
     $80 = $78;
     $81 = $79;
     L31 : do if (($76 | 0) == ($$054 | 0) | ($81 - $80 | 0) < 1) $$sroa$0$0$i$i79 = $81; else {
      $$sroa$033$142$i$i$i74 = $80;
      $86 = $78;
      while (1) {
       if ((HEAP8[$86 >> 0] | 0) == 46) {
        $$sroa$0$0$i$i79 = $$sroa$033$142$i$i$i74;
        break L31;
       }
       $88 = $86 + 1 | 0;
       if (($88 | 0) == ($79 | 0)) {
        $$sroa$0$0$i$i79 = $81;
        break;
       } else {
        $$sroa$033$142$i$i$i74 = $88;
        $86 = $88;
       }
      }
     } while (0);
     $$1$i$i82 = ($$sroa$0$0$i$i79 | 0) == ($79 | 0) ? -1 : $$sroa$0$0$i$i79 - $75 | 0;
    } else $$1$i$i82 = -1;
    $96 = HEAP8[$67 >> 0] | 0;
    $97 = $96 << 24 >> 24 < 0;
    __Z15lua_pushlstringP9lua_StatePKcj(HEAP32[$32 >> 2] | 0, $97 ? HEAP32[$2 >> 2] | 0 : $2, $97 ? HEAP32[$68 >> 2] | 0 : $96 & 255);
    __Z12lua_gettableP9lua_Statei(HEAP32[$32 >> 2] | 0, -2);
    $106 = (__Z8lua_typeP9lua_Statei(HEAP32[$32 >> 2] | 0, -1) | 0) == 5;
    $107 = HEAP32[$32 >> 2] | 0;
    if (!$106) {
     label = 23;
     break;
    }
    __Z10lua_removeP9lua_Statei($107, -2);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    if (($$1$i$i82 | 0) == -1) break; else $$055 = $$1$i$i82;
   }
   if ((label | 0) == 23) {
    __Z10lua_settopP9lua_Statei($107, -3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    $$6 = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    STACKTOP = sp;
    return $$6 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($6, $4, $$054, -1, $4);
   $111 = HEAP8[$6 + 11 >> 0] | 0;
   $112 = $111 << 24 >> 24 < 0;
   __Z15lua_pushlstringP9lua_StatePKcj(HEAP32[$32 >> 2] | 0, $112 ? HEAP32[$6 >> 2] | 0 : $6, $112 ? HEAP32[$6 + 4 >> 2] | 0 : $111 & 255);
   __Z12lua_gettableP9lua_Statei(HEAP32[$32 >> 2] | 0, -2);
   do if ((__Z8lua_typeP9lua_Statei(HEAP32[$32 >> 2] | 0, -1) | 0) < 1) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($7, $6);
    HEAP32[$2 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 83859, 4);
    __Z17StringTrimInPlaceRNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS5_($7 | 0, $2 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    $124 = $2 + 60 | 0;
    $125 = $2 + 8 | 0;
    HEAP32[$2 >> 2] = 68004;
    HEAP32[$124 >> 2] = 68024;
    HEAP32[$2 + 4 >> 2] = 0;
    __ZNSt3__28ios_base4initEPv($2 + 60 | 0, $125);
    HEAP32[$2 + 132 >> 2] = 0;
    HEAP32[$2 + 136 >> 2] = -1;
    HEAP32[$2 >> 2] = 68044;
    HEAP32[$124 >> 2] = 68064;
    __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($125);
    HEAP32[$125 >> 2] = 67920;
    $130 = $2 + 40 | 0;
    HEAP32[$130 >> 2] = 0;
    HEAP32[$130 + 4 >> 2] = 0;
    HEAP32[$130 + 8 >> 2] = 0;
    HEAP32[$130 + 12 >> 2] = 0;
    HEAP32[$2 + 56 >> 2] = 8;
    __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($125, $7);
    HEAP32[$3 >> 2] = 0;
    __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERi($2, $3) | 0;
    $139 = (HEAP32[$2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] & 5 | 0) == 0;
    $140 = HEAP32[$3 >> 2] | 0;
    HEAP32[$2 >> 2] = 68044;
    HEAP32[$124 >> 2] = 68064;
    HEAP32[$125 >> 2] = 67920;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($130);
    __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($125);
    __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($2, 67980);
    __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($124);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    $141 = HEAP32[$32 >> 2] | 0;
    if (!$139) {
     __Z10lua_settopP9lua_Statei($141, -3);
     $$3 = 0;
     break;
    }
    __Z10lua_settopP9lua_Statei($141, -2);
    __Z14lua_pushnumberP9lua_Statef(HEAP32[$32 >> 2] | 0, +($140 | 0));
    __Z12lua_gettableP9lua_Statei(HEAP32[$32 >> 2] | 0, -2);
    $147 = (__Z8lua_typeP9lua_Statei(HEAP32[$32 >> 2] | 0, -1) | 0) < 1;
    $148 = HEAP32[$32 >> 2] | 0;
    if ($147) {
     __Z10lua_settopP9lua_Statei($148, -3);
     $$3 = 0;
     break;
    } else {
     __Z10lua_removeP9lua_Statei($148, -2);
     $$3 = 1;
     break;
    }
   } else {
    __Z10lua_removeP9lua_Statei(HEAP32[$32 >> 2] | 0, -2);
    $$3 = 1;
   } while (0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $$6 = $$3;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
   STACKTOP = sp;
   return $$6 | 0;
  }
 }
 __Z15lua_pushlstringP9lua_StatePKcj(HEAP32[$32 >> 2] | 0, $40, $41);
 __Z12lua_gettableP9lua_Statei(HEAP32[$32 >> 2] | 0, -2);
 $153 = (__Z8lua_typeP9lua_Statei(HEAP32[$32 >> 2] | 0, -1) | 0) < 1;
 if ($153) {
  __Z10lua_settopP9lua_Statei(HEAP32[$32 >> 2] | 0, -2);
  $$6 = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  STACKTOP = sp;
  return $$6 | 0;
 } else {
  $$6 = 1;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  STACKTOP = sp;
  return $$6 | 0;
 }
 return 0;
}

function __ZN10CGameSetup11LoadPlayersERK9TdfParserRN6emilib7HashSetINSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEN6spring11synced_hashISB_EENS3_14HashSetEqualToISB_EEEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa$i = 0, $$021120 = 0, $$04$i = 0, $$122 = 0, $$sroa$664$0119 = 0, $10 = 0, $11 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $44 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $79 = 0, $8 = 0, $81 = 0, $89 = 0, $9 = 0, $91 = 0, $98 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4240 | 0;
 $vararg_buffer8 = sp + 4112 | 0;
 $vararg_buffer4 = sp + 4104 | 0;
 $vararg_buffer1 = sp + 4096 | 0;
 $vararg_buffer = sp;
 $3 = sp + 4176 | 0;
 $4 = sp + 4172 | 0;
 $5 = sp + 4160 | 0;
 $6 = sp + 4136 | 0;
 $7 = sp + 4120 | 0;
 HEAP32[$4 >> 2] = 0;
 $8 = $7 + 11 | 0;
 $9 = $3 + 8 | 0;
 $10 = $9 + 11 | 0;
 $11 = $3 + 12 | 0;
 $12 = $2 + 12 | 0;
 $13 = $3 + 29 | 0;
 $14 = $0 + 24 | 0;
 $15 = $2 + 16 | 0;
 $16 = $2 + 4 | 0;
 $17 = $0 + 216 | 0;
 $18 = $0 + 220 | 0;
 $19 = $0 + 212 | 0;
 $20 = $0 + 128 | 0;
 $21 = $3 + 44 | 0;
 $22 = $3 + 48 | 0;
 $23 = $3 + 32 | 0;
 $24 = $2 + 8 | 0;
 $25 = $6 + 12 | 0;
 $$021120 = 0;
 $31 = 0;
 while (1) {
  HEAP32[$7 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($7, 81707, 2);
  $30 = (HEAP8[$8 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7;
  HEAP32[$vararg_buffer >> 2] = $31;
  _snprintf($3, 64, $30, $vararg_buffer) | 0;
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, $3, _strlen($3) | 0);
  $33 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($6, 0, 82440) | 0;
  HEAP32[$5 >> 2] = HEAP32[$33 >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$33 + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$33 + 8 >> 2];
  HEAP32[$33 >> 2] = 0;
  HEAP32[$33 + 4 >> 2] = 0;
  HEAP32[$33 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  if (__ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1 | 0, $5 | 0) | 0) {
   __ZN10PlayerBaseC2Ev($3);
   $35 = __ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1 | 0, $5 | 0) | 0;
   $36 = $35 + 12 | 0;
   $37 = HEAP32[$36 >> 2] | 0;
   L5 : do if (!$37) $$0$lcssa$i = 0; else {
    $40 = HEAP32[$35 + 4 >> 2] | 0;
    $$04$i = 0;
    while (1) {
     if ((HEAP8[$40 + $$04$i >> 0] | 0) == 2) {
      $$0$lcssa$i = $$04$i;
      break L5;
     }
     $44 = $$04$i + 1 | 0;
     if ($44 >>> 0 < $37 >>> 0) $$04$i = $44; else {
      $$0$lcssa$i = $44;
      break;
     }
    }
   } while (0);
   if (($$0$lcssa$i | 0) != ($37 | 0)) {
    $47 = $35 + 8 | 0;
    $48 = $35 + 4 | 0;
    $$sroa$664$0119 = $$0$lcssa$i;
    while (1) {
     $57 = HEAP32[$47 >> 2] | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($6, $57 + ($$sroa$664$0119 * 24 | 0) | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($25, $57 + ($$sroa$664$0119 * 24 | 0) + 12 | 0);
     __ZN10PlayerBase8SetValueERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($3, $6, $25);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $60 = HEAP32[$36 >> 2] | 0;
     $61 = HEAP32[$48 >> 2] | 0;
     $62 = $$sroa$664$0119;
     do {
      $62 = $62 + 1 | 0;
      if ($62 >>> 0 >= $60 >>> 0) break;
     } while ((HEAP8[$61 + $62 >> 0] | 0) != 2);
     if (($62 | 0) == ($37 | 0)) break; else $$sroa$664$0119 = $62;
    }
   }
   $51 = HEAP8[$10 >> 0] | 0;
   if (!(($51 << 24 >> 24 < 0 ? HEAP32[$11 >> 2] | 0 : $51 & 255) | 0)) {
    label = 15;
    break;
   }
   $71 = __ZNK6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE18find_filled_bucketERKS7_($2, $9) | 0;
   $73 = HEAP32[$12 >> 2] | 0;
   if (((($71 | 0) == -1 ? $73 : $71) | 0) != ($73 | 0)) {
    label = 20;
    break;
   }
   HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + (HEAPU8[$13 >> 0] | 0);
   __ZN6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE7reserveEj($2, (HEAP32[$15 >> 2] | 0) + 1 | 0);
   $89 = __ZN6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE16find_or_allocateERKS7_($2, $9) | 0;
   $91 = (HEAP32[$16 >> 2] | 0) + $89 | 0;
   if ((HEAP8[$91 >> 0] | 0) != 2) {
    HEAP8[$91 >> 0] = 2;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_((HEAP32[$24 >> 2] | 0) + ($89 * 12 | 0) | 0, $9);
    HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 1;
   }
   $98 = HEAP32[$17 >> 2] | 0;
   if (($98 | 0) == (HEAP32[$18 >> 2] | 0)) __ZNSt3__26vectorI10PlayerBaseNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($19, $3); else {
    __ZN10PlayerBaseC2ERKS_($98, $3);
    HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 56;
   }
   HEAP32[(__ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($20, $4) | 0) >> 2] = $$021120;
   HEAP32[$3 >> 2] = 68164;
   __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($21, HEAP32[$22 >> 2] | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
   HEAP32[$3 >> 2] = 68116;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $$122 = $$021120 + 1 | 0;
  } else $$122 = $$021120;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $31 = (HEAP32[$4 >> 2] | 0) + 1 | 0;
  HEAP32[$4 >> 2] = $31;
  if (($31 | 0) >= 251) {
   label = 2;
   break;
  } else $$021120 = $$122;
 }
 if ((label | 0) == 2) {
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 82424, 15);
  $26 = __ZNK9TdfParser8GetValueIjEEbRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($1, $vararg_buffer, $3) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  if (!$26) {
   STACKTOP = sp;
   return;
  }
  $112 = ((HEAP32[$17 >> 2] | 0) - (HEAP32[$19 >> 2] | 0) | 0) / 56 | 0;
  $113 = HEAP32[$vararg_buffer >> 2] | 0;
  if (($112 | 0) == ($113 | 0)) {
   STACKTOP = sp;
   return;
  }
  HEAP32[$vararg_buffer8 >> 2] = $112;
  HEAP32[$vararg_buffer8 + 4 >> 2] = $113;
  _log_frontend_record(40, 114224, 82547, $vararg_buffer8);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 15) {
  $67 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$vararg_buffer1 >> 2] = HEAP32[$4 >> 2];
  $69 = _snprintf($vararg_buffer, 4096, 82452, $vararg_buffer1) | 0;
  if (($69 + -1 | 0) >>> 0 < 4095) {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, $vararg_buffer, $69);
   __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($67, $6);
   HEAP32[$67 >> 2] = 68080;
   ___cxa_throw($67 | 0, 192, 31);
  } else {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($67, $6);
   HEAP32[$67 >> 2] = 68080;
   ___cxa_throw($67 | 0, 192, 31);
  }
 } else if ((label | 0) == 20) {
  $75 = ___cxa_allocate_exception(8) | 0;
  $79 = (HEAP8[$10 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
  HEAP32[$vararg_buffer4 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$vararg_buffer4 + 4 >> 2] = $79;
  $81 = _snprintf($vararg_buffer, 4096, 82491, $vararg_buffer4) | 0;
  if (($81 + -1 | 0) >>> 0 < 4095) {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, $vararg_buffer, $81);
   __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($75, $6);
   HEAP32[$75 >> 2] = 68080;
   ___cxa_throw($75 | 0, 192, 31);
  } else {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($75, $6);
   HEAP32[$75 >> 2] = 68080;
   ___cxa_throw($75 | 0, 192, 31);
  }
 }
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i52 = 0, $$0$i$i$i$i67 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i58 = 0, $$0$i$i2$i$i73 = 0, $$0$i$i64 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$049 = 0, $$050 = 0, $$3 = 0, $$3$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$ph = 0, $$pre = 0, $$pre$i$i$i54 = 0, $$pre$i$i$i69 = 0, $$pre$i4$i$i60 = 0, $$pre$i4$i$i6093 = 0, $$pre$i4$i$i6094 = 0, $$sroa$047$0$copyload = 0, $10 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $123 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $144 = 0, $15 = 0, $151 = 0, $161 = 0, $17 = 0, $171 = 0, $174 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $29 = 0, $31 = 0, $33 = 0, $49 = 0, $55 = 0, $56 = 0, $65 = 0, $66 = 0, $67 = 0, $70 = 0, $8 = 0, $84 = 0, $9 = 0, $94 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 $10 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy1 >> 2] = $10;
 $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 110200) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($10) | 0;
 HEAP32[$4 >> 2] = 0;
 $$0$ph = $6;
 $$pre = 0;
 L1 : while (1) {
  $12 = ($$0$ph | 0) != ($7 | 0);
  $13 = $$pre;
  while (1) {
   $15 = HEAP32[$1 >> 2] | 0;
   if (!($12 & ($13 | 0) == 0)) {
    $$pre$i$i$i69 = $15;
    break L1;
   }
   $17 = $15;
   if (!$15) {
    $131 = 0;
    $186 = 1;
    $66 = $17;
   } else {
    $19 = HEAP32[$15 + 12 >> 2] | 0;
    if (($19 | 0) == (HEAP32[$15 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 255]($15) | 0; else $$0$i$i$i$i = HEAP32[$19 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$1 >> 2] = 0;
     $131 = 0;
     $186 = 1;
     $66 = 0;
    } else {
     $131 = $15;
     $186 = 0;
     $66 = $17;
    }
   }
   $29 = HEAP32[$2 >> 2] | 0;
   $31 = $29;
   do if (!$29) {
    $$ph = $31;
    label = 16;
   } else {
    $33 = HEAP32[$29 + 12 >> 2] | 0;
    if (($33 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($29) | 0; else $$0$i$i2$i$i = HEAP32[$33 >> 2] | 0;
    if (($$0$i$i2$i$i | 0) == -1) {
     HEAP32[$2 >> 2] = 0;
     $$ph = 0;
     label = 16;
     break;
    } else if ($186) {
     $187 = $29;
     $67 = $31;
     break;
    } else {
     label = 18;
     break L1;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($186) {
     label = 18;
     break L1;
    } else {
     $187 = 0;
     $67 = $$ph;
    }
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 52 >> 2] & 63]($11, HEAP32[$$0$ph >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    label = 20;
    break;
   }
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 63]($11, 8192, HEAP32[$$0$ph >> 2] | 0) | 0) {
    $$0$pn = $$0$ph;
    label = 28;
    break;
   }
   $130 = $131 + 12 | 0;
   $132 = HEAP32[$130 >> 2] | 0;
   $133 = $131 + 16 | 0;
   if (($132 | 0) == (HEAP32[$133 >> 2] | 0)) $$0$i$i64 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$131 >> 2] | 0) + 36 >> 2] & 255]($131) | 0; else $$0$i$i64 = HEAP32[$132 >> 2] | 0;
   $144 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 31]($11, $$0$i$i64) | 0;
   if (($144 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 31]($11, HEAP32[$$0$ph >> 2] | 0) | 0)) {
    label = 56;
    break;
   }
   HEAP32[$4 >> 2] = 4;
   $13 = 4;
  }
  L33 : do if ((label | 0) == 20) {
   label = 0;
   $49 = $$0$ph + 4 | 0;
   if (($49 | 0) == ($7 | 0)) {
    label = 21;
    break L1;
   }
   $55 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 52 >> 2] & 63]($11, HEAP32[$49 >> 2] | 0, 0) | 0;
   switch ($55 << 24 >> 24) {
   case 48:
   case 69:
    {
     $56 = $$0$ph + 8 | 0;
     if (($56 | 0) == ($7 | 0)) {
      label = 26;
      break L1;
     }
     $$049 = $55;
     $$050 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 52 >> 2] & 63]($11, HEAP32[$56 >> 2] | 0, 0) | 0;
     $70 = $49;
     break;
    }
   default:
    {
     $$049 = 0;
     $$050 = $55;
     $70 = $$0$ph;
    }
   }
   $65 = HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$8 >> 2] = $66;
   HEAP32[$9 >> 2] = $67;
   HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$1 >> 2] = FUNCTION_TABLE_iiiiiiiii[$65 & 15]($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $$050, $$049) | 0;
   $$0$ph$be = $70 + 8 | 0;
  } else if ((label | 0) == 28) {
   while (1) {
    label = 0;
    $$3 = $$0$pn + 4 | 0;
    if (($$3 | 0) == ($7 | 0)) {
     $$3$lcssa = $7;
     break;
    }
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 63]($11, 8192, HEAP32[$$3 >> 2] | 0) | 0) {
     $$0$pn = $$3;
     label = 28;
    } else {
     $$3$lcssa = $$3;
     break;
    }
   }
   $$pre$i$i$i54 = $131;
   $$pre$i4$i$i60 = $187;
   $94 = $187;
   while (1) {
    if (!$$pre$i$i$i54) {
     $107 = 1;
     $109 = 0;
    } else {
     $84 = HEAP32[$$pre$i$i$i54 + 12 >> 2] | 0;
     if (($84 | 0) == (HEAP32[$$pre$i$i$i54 + 16 >> 2] | 0)) $$0$i$i$i$i52 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i54 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i54) | 0; else $$0$i$i$i$i52 = HEAP32[$84 >> 2] | 0;
     if (($$0$i$i$i$i52 | 0) == -1) {
      HEAP32[$1 >> 2] = 0;
      $107 = 1;
      $109 = 0;
     } else {
      $107 = 0;
      $109 = $$pre$i$i$i54;
     }
    }
    do if (!$94) {
     $$pre$i4$i$i6094 = $$pre$i4$i$i60;
     label = 43;
    } else {
     $97 = HEAP32[$94 + 12 >> 2] | 0;
     if (($97 | 0) == (HEAP32[$94 + 16 >> 2] | 0)) $$0$i$i2$i$i58 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$94 >> 2] | 0) + 36 >> 2] & 255]($94) | 0; else $$0$i$i2$i$i58 = HEAP32[$97 >> 2] | 0;
     if (($$0$i$i2$i$i58 | 0) == -1) {
      HEAP32[$2 >> 2] = 0;
      $$pre$i4$i$i6094 = 0;
      label = 43;
      break;
     } else if ($107 ^ ($$pre$i4$i$i60 | 0) == 0) {
      $$pre$i4$i$i6093 = $$pre$i4$i$i60;
      $188 = $$pre$i4$i$i60;
      break;
     } else {
      $$0$ph$be = $$3$lcssa;
      break L33;
     }
    } while (0);
    if ((label | 0) == 43) {
     label = 0;
     if ($107) {
      $$0$ph$be = $$3$lcssa;
      break L33;
     } else {
      $$pre$i4$i$i6093 = $$pre$i4$i$i6094;
      $188 = 0;
     }
    }
    $108 = $109 + 12 | 0;
    $110 = HEAP32[$108 >> 2] | 0;
    $111 = $109 + 16 | 0;
    if (($110 | 0) == (HEAP32[$111 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$109 >> 2] | 0) + 36 >> 2] & 255]($109) | 0; else $$0$i$i = HEAP32[$110 >> 2] | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 63]($11, 8192, $$0$i$i) | 0)) {
     $$0$ph$be = $$3$lcssa;
     break L33;
    }
    $123 = HEAP32[$108 >> 2] | 0;
    if (($123 | 0) == (HEAP32[$111 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$109 >> 2] | 0) + 40 >> 2] & 255]($109) | 0;
     $$pre$i$i$i54 = $109;
     $$pre$i4$i$i60 = $$pre$i4$i$i6093;
     $94 = $188;
     continue;
    } else {
     HEAP32[$108 >> 2] = $123 + 4;
     $$pre$i$i$i54 = $109;
     $$pre$i4$i$i60 = $$pre$i4$i$i6093;
     $94 = $188;
     continue;
    }
   }
  } else if ((label | 0) == 56) {
   label = 0;
   $151 = HEAP32[$130 >> 2] | 0;
   if (($151 | 0) == (HEAP32[$133 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$131 >> 2] | 0) + 40 >> 2] & 255]($131) | 0; else HEAP32[$130 >> 2] = $151 + 4;
   $$0$ph$be = $$0$ph + 4 | 0;
  } while (0);
  $$0$ph = $$0$ph$be;
  $$pre = HEAP32[$4 >> 2] | 0;
 }
 if ((label | 0) == 18) {
  HEAP32[$4 >> 2] = 4;
  $$pre$i$i$i69 = $131;
 } else if ((label | 0) == 21) {
  HEAP32[$4 >> 2] = 4;
  $$pre$i$i$i69 = $131;
 } else if ((label | 0) == 26) {
  HEAP32[$4 >> 2] = 4;
  $$pre$i$i$i69 = $131;
 }
 if (!$$pre$i$i$i69) {
  $$sroa$047$0$copyload = 0;
  $189 = 1;
 } else {
  $161 = HEAP32[$$pre$i$i$i69 + 12 >> 2] | 0;
  if (($161 | 0) == (HEAP32[$$pre$i$i$i69 + 16 >> 2] | 0)) $$0$i$i$i$i67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i69 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i69) | 0; else $$0$i$i$i$i67 = HEAP32[$161 >> 2] | 0;
  if (($$0$i$i$i$i67 | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$sroa$047$0$copyload = 0;
   $189 = 1;
  } else {
   $$sroa$047$0$copyload = $$pre$i$i$i69;
   $189 = 0;
  }
 }
 $171 = HEAP32[$2 >> 2] | 0;
 do if (!$171) label = 74; else {
  $174 = HEAP32[$171 + 12 >> 2] | 0;
  if (($174 | 0) == (HEAP32[$171 + 16 >> 2] | 0)) $$0$i$i2$i$i73 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$171 >> 2] | 0) + 36 >> 2] & 255]($171) | 0; else $$0$i$i2$i$i73 = HEAP32[$174 >> 2] | 0;
  if (($$0$i$i2$i$i73 | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 74;
   break;
  } else if ($189) break; else {
   label = 76;
   break;
  }
 } while (0);
 if ((label | 0) == 74) if ($189) label = 76;
 if ((label | 0) == 76) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 STACKTOP = sp;
 return $$sroa$047$0$copyload | 0;
}

function __ZN6googleL26ShowUsageWithFlagsMatchingEPKcRKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$off083 = 0, $$02431$i$i3771 = 0, $$02431$i$i68 = 0, $$02530$i$i3872 = 0, $$02530$i$i69 = 0, $$02629$i$i3973 = 0, $$02629$i$i70 = 0, $$07$off078 = 0, $$1$i$i43 = 0, $$1$off0 = 0, $$18$off0 = 0, $$2$off0 = 0, $$3$off0 = 0, $$not = 0, $$pn$i = 0, $$pre88 = 0, $$sink76 = 0, $$sroa$02$010$i = 0, $101 = 0, $104 = 0, $105 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $12 = 0, $134 = 0, $14 = 0, $145 = 0, $147 = 0, $149 = 0, $150 = 0, $158 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $35 = 0, $37 = 0, $4 = 0, $43 = 0, $47 = 0, $5 = 0, $50 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $98 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer2 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 56 | 0;
 $3 = sp + 44 | 0;
 $4 = sp + 20 | 0;
 $5 = sp + 32 | 0;
 $6 = HEAP32[17382] | 0;
 $7 = _strrchr($0, 47) | 0;
 $11 = __ZN6google12ProgramUsageEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $7 | 0 ? $7 + 1 | 0 : $0;
 HEAP32[$vararg_buffer + 4 >> 2] = $11;
 _fprintf($6, 92191, $vararg_buffer) | 0;
 HEAP32[$vararg_buffer >> 2] = 0;
 $12 = $vararg_buffer + 4 | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZN6google11GetAllFlagsEPNSt3__26vectorINS_19CommandLineFlagInfoENS0_9allocatorIS2_EEEE($vararg_buffer);
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $14 = HEAP32[$vararg_buffer >> 2] | 0;
 $$pre88 = $1 + 4 | 0;
 if (($14 | 0) == (HEAP32[$12 >> 2] | 0)) label = 49; else {
  $17 = $2 + 11 | 0;
  $18 = $2 + 4 | 0;
  $19 = $5 + 11 | 0;
  $20 = $3 + 11 | 0;
  $21 = $3 + 4 | 0;
  $22 = $4 + 11 | 0;
  $23 = $4 + 4 | 0;
  $$0$off083 = 0;
  $$07$off078 = 1;
  $$sink76 = $14;
  while (1) {
   $24 = HEAP32[$1 >> 2] | 0;
   $25 = HEAP32[$$pre88 >> 2] | 0;
   L5 : do if (($24 | 0) == ($25 | 0)) label = 23; else {
    $27 = $$sink76 + 60 | 0;
    $32 = (HEAP8[$27 + 11 >> 0] | 0) < 0 ? HEAP32[$27 >> 2] | 0 : $27;
    $$sroa$02$010$i = $24;
    while (1) {
     $34 = HEAP8[$$sroa$02$010$i + 11 >> 0] | 0;
     $35 = $34 << 24 >> 24 < 0;
     if ($35) $37 = HEAP32[$$sroa$02$010$i >> 2] | 0; else $37 = $$sroa$02$010$i;
     if (_strstr($32, $37) | 0) {
      label = 23;
      break L5;
     }
     if ($35) $43 = HEAP32[$$sroa$02$010$i + 4 >> 2] | 0; else $43 = $34 & 255;
     if ($43 | 0) {
      if ($35) $47 = HEAP32[$$sroa$02$010$i >> 2] | 0; else $47 = $$sroa$02$010$i;
      if ((HEAP8[$47 >> 0] | 0) == 47) {
       if ($35) $$pn$i = HEAP32[$$sroa$02$010$i >> 2] | 0; else $$pn$i = $$sroa$02$010$i;
       $50 = $$pn$i + 1 | 0;
       if (!(_strncmp($32, $50, _strlen($50) | 0) | 0)) {
        label = 23;
        break L5;
       }
      }
     }
     $$sroa$02$010$i = $$sroa$02$010$i + 12 | 0;
     if (($$sroa$02$010$i | 0) == ($25 | 0)) {
      $$1$off0 = $$0$off083;
      $$3$off0 = $$07$off078;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 23) {
    label = 0;
    $56 = $$sink76 + 24 | 0;
    $57 = _strlen(90172) | 0;
    $59 = HEAP8[$56 + 11 >> 0] | 0;
    if (($57 | 0) == (($59 << 24 >> 24 < 0 ? HEAP32[$$sink76 + 28 >> 2] | 0 : $59 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($56, 0, -1, 90172, $57) | 0)) {
     $$1$off0 = $$0$off083;
     $$3$off0 = $$07$off078;
     break;
    }
    $68 = $$sink76 + 60 | 0;
    $69 = $68 + 11 | 0;
    $70 = HEAP8[$69 >> 0] | 0;
    $71 = $70 << 24 >> 24 < 0;
    $74 = $70 & 255;
    $75 = $71 ? HEAP32[$$sink76 + 64 >> 2] | 0 : $74;
    $76 = HEAP8[$17 >> 0] | 0;
    $77 = $76 << 24 >> 24 < 0;
    L35 : do if (($75 | 0) == (($77 ? HEAP32[$18 >> 2] | 0 : $76 & 255) | 0)) {
     $82 = HEAP32[$68 >> 2] | 0;
     $83 = $71 ? $82 : $68;
     $85 = $77 ? HEAP32[$2 >> 2] | 0 : $2;
     $86 = ($75 | 0) == 0;
     if ($71) {
      if ($86) {
       $$2$off0 = $$07$off078;
       break;
      }
      if (!(_memcmp($83, $85, $75) | 0)) {
       $$2$off0 = $$07$off078;
       break;
      } else {
       label = 33;
       break;
      }
     }
     if ($86) $$2$off0 = $$07$off078; else if (($82 & 255) << 24 >> 24 == (HEAP8[$85 >> 0] | 0)) {
      $$02431$i$i68 = $74;
      $$02530$i$i69 = $85;
      $$02629$i$i70 = $68;
      while (1) {
       $$02431$i$i68 = $$02431$i$i68 + -1 | 0;
       $$02629$i$i70 = $$02629$i$i70 + 1 | 0;
       if (!$$02431$i$i68) {
        $$2$off0 = $$07$off078;
        break L35;
       }
       $$02530$i$i69 = $$02530$i$i69 + 1 | 0;
       if ((HEAP8[$$02629$i$i70 >> 0] | 0) != (HEAP8[$$02530$i$i69 >> 0] | 0)) {
        label = 33;
        break;
       }
      }
     } else label = 33;
    } else label = 33; while (0);
    if ((label | 0) == 33) {
     label = 0;
     $98 = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($68, 47, -1) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($3, $68, 0, ($98 | 0) == -1 ? 0 : $98, $68);
     $101 = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($2, 47, -1) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($4, $2, 0, ($101 | 0) == -1 ? 0 : $101, $2);
     $104 = HEAP8[$20 >> 0] | 0;
     $105 = $104 << 24 >> 24 < 0;
     $107 = $104 & 255;
     $108 = $105 ? HEAP32[$21 >> 2] | 0 : $107;
     $109 = HEAP8[$22 >> 0] | 0;
     $110 = $109 << 24 >> 24 < 0;
     L47 : do if (($108 | 0) == (($110 ? HEAP32[$23 >> 2] | 0 : $109 & 255) | 0)) {
      $115 = HEAP32[$3 >> 2] | 0;
      $116 = $105 ? $115 : $3;
      $118 = $110 ? HEAP32[$4 >> 2] | 0 : $4;
      $119 = ($108 | 0) == 0;
      if ($105) {
       if ($119) {
        $$1$i$i43 = 0;
        break;
       }
       $$1$i$i43 = (_memcmp($116, $118, $108) | 0) != 0;
       break;
      }
      if ($119) $$1$i$i43 = 0; else if (($115 & 255) << 24 >> 24 == (HEAP8[$118 >> 0] | 0)) {
       $$02431$i$i3771 = $107;
       $$02530$i$i3872 = $118;
       $$02629$i$i3973 = $3;
       while (1) {
        $$02431$i$i3771 = $$02431$i$i3771 + -1 | 0;
        $$02629$i$i3973 = $$02629$i$i3973 + 1 | 0;
        if (!$$02431$i$i3771) {
         $$1$i$i43 = 0;
         break L47;
        }
        $$02530$i$i3872 = $$02530$i$i3872 + 1 | 0;
        if ((HEAP8[$$02629$i$i3973 >> 0] | 0) != (HEAP8[$$02530$i$i3872 >> 0] | 0)) {
         $$1$i$i43 = 1;
         break;
        }
       }
      } else $$1$i$i43 = 1;
     } else $$1$i$i43 = 1; while (0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$not = $$1$i$i43 ^ 1;
     if ($$07$off078 | $$not) $$18$off0 = $$07$off078 & $$not; else {
      _fwrite(92199, 2, 1, $6) | 0;
      $$18$off0 = 0;
     }
     if ((HEAP8[$69 >> 0] | 0) < 0) $134 = HEAP32[$68 >> 2] | 0; else $134 = $68;
     HEAP32[$vararg_buffer2 >> 2] = $134;
     _fprintf($6, 92202, $vararg_buffer2) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($2, $68) | 0;
     $$2$off0 = $$18$off0;
    }
    __ZN6google15DescribeOneFlagERKNS_19CommandLineFlagInfoE($5, $$sink76);
    _fputs((HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5, $6) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $$1$off0 = 1;
    $$3$off0 = $$2$off0;
   } while (0);
   $$sink76 = $$sink76 + 80 | 0;
   if (($$sink76 | 0) == (HEAP32[$12 >> 2] | 0)) break; else {
    $$0$off083 = $$1$off0;
    $$07$off078 = $$3$off0;
   }
  }
  if (!$$1$off0) label = 49;
 }
 if ((label | 0) == 49) if ((HEAP32[$1 >> 2] | 0) != (HEAP32[$$pre88 >> 2] | 0)) _fwrite(92221, 33, 1, $6) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $145 = HEAP32[$vararg_buffer >> 2] | 0;
 if (!$145) {
  STACKTOP = sp;
  return;
 }
 $147 = HEAP32[$12 >> 2] | 0;
 if (($147 | 0) == ($145 | 0)) $158 = $145; else {
  $150 = $147;
  do {
   $149 = $150 + -80 | 0;
   HEAP32[$12 >> 2] = $149;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150 + -20 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150 + -32 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150 + -44 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150 + -56 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150 + -68 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($149);
   $150 = HEAP32[$12 >> 2] | 0;
  } while (($150 | 0) != ($145 | 0));
  $158 = HEAP32[$vararg_buffer >> 2] | 0;
 }
 __ZdlPv($158);
 STACKTOP = sp;
 return;
}

function __ZNSt3__213__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0110 = 0, $$1 = 0, $$1111 = 0, $$1111$be$in = 0, $$2 = 0, $$2$be = 0, $$2112 = 0, $$3113 = 0, $$4 = 0, $$4114 = 0, $$5115 = 0, $$6 = 0, $$cast123 = 0, $$lcssa137 = 0, $$ph = 0, $$pre = 0, $$pre$phi143Z2D = 0, $10 = 0, $103 = 0, $108 = 0, $109 = 0, $110 = 0, $113 = 0, $116 = 0, $12 = 0, $120 = 0, $122 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $137 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $148 = 0, $151 = 0, $156 = 0, $159 = 0, $16 = 0, $160 = 0, $165 = 0, $17 = 0, $172 = 0, $173 = 0, $178 = 0, $185 = 0, $189 = 0, $190 = 0, $193 = 0, $196 = 0, $2 = 0, $20 = 0, $200 = 0, $202 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $213 = 0, $216 = 0, $220 = 0, $221 = 0, $29 = 0, $31 = 0, $33 = 0, $34 = 0, $39 = 0, $40 = 0, $43 = 0, $5 = 0, $52 = 0, $53 = 0, $56 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $66 = 0, $69 = 0, $7 = 0, $73 = 0, $77 = 0, $83 = 0, $90 = 0, $97 = 0, label = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 do if (!$2) {
  $$ph = $1;
  label = 5;
 } else {
  $5 = HEAP32[$1 + 4 >> 2] | 0;
  if (!$5) {
   $13 = $1;
   $16 = $2;
   $220 = $1;
   label = 7;
   break;
  } else {
   $$0$i$i = $5;
   while (1) {
    $7 = HEAP32[$$0$i$i >> 2] | 0;
    if (!$7) {
     $$ph = $$0$i$i;
     label = 5;
     break;
    } else $$0$i$i = $7;
   }
  }
 } while (0);
 if ((label | 0) == 5) {
  $10 = HEAP32[$$ph + 4 >> 2] | 0;
  if (!$10) {
   $$pre$phi143Z2D = $$ph + 8 | 0;
   $20 = $$ph;
   $21 = 0;
   $221 = 0;
   $40 = $$ph;
  } else {
   $13 = $$ph;
   $16 = $10;
   $220 = $$ph;
   label = 7;
  }
 }
 if ((label | 0) == 7) {
  $12 = $13 + 8 | 0;
  HEAP32[$16 + 8 >> 2] = HEAP32[$12 >> 2];
  $$pre$phi143Z2D = $12;
  $20 = $13;
  $21 = $16;
  $221 = 1;
  $40 = $220;
 }
 $17 = HEAP32[$$pre$phi143Z2D >> 2] | 0;
 if ((HEAP32[$17 >> 2] | 0) == ($20 | 0)) {
  HEAP32[$17 >> 2] = $21;
  if (($20 | 0) == ($0 | 0)) {
   $$0 = $21;
   $$0110 = 0;
  } else {
   $$0 = $0;
   $$0110 = HEAP32[(HEAP32[$$pre$phi143Z2D >> 2] | 0) + 4 >> 2] | 0;
  }
 } else {
  HEAP32[$17 + 4 >> 2] = $21;
  $$0 = $0;
  $$0110 = HEAP32[HEAP32[$$pre$phi143Z2D >> 2] >> 2] | 0;
 }
 $29 = $20 + 12 | 0;
 $31 = (HEAP8[$29 >> 0] | 0) != 0;
 if (($20 | 0) == ($1 | 0)) $$1 = $$0; else {
  $33 = $1 + 8 | 0;
  $34 = HEAP32[$33 >> 2] | 0;
  HEAP32[$$pre$phi143Z2D >> 2] = $34;
  $$cast123 = $34;
  if ((HEAP32[HEAP32[$33 >> 2] >> 2] | 0) == ($1 | 0)) HEAP32[$$cast123 >> 2] = $20; else HEAP32[$$cast123 + 4 >> 2] = $20;
  $39 = HEAP32[$1 >> 2] | 0;
  HEAP32[$40 >> 2] = $39;
  HEAP32[$39 + 8 >> 2] = $20;
  $43 = HEAP32[$1 + 4 >> 2] | 0;
  HEAP32[$20 + 4 >> 2] = $43;
  if ($43 | 0) HEAP32[$43 + 8 >> 2] = $20;
  HEAP8[$29 >> 0] = HEAP8[$1 + 12 >> 0] | 0;
  $$1 = ($$0 | 0) == ($1 | 0) ? $20 : $$0;
 }
 if (!($31 & ($$1 | 0) != 0)) return;
 if ($221) {
  HEAP8[$21 + 12 >> 0] = 1;
  return;
 } else {
  $$1111 = $$0110;
  $$2 = $$1;
 }
 while (1) {
  $52 = $$1111 + 8 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  $56 = $$1111 + 12 | 0;
  $58 = (HEAP8[$56 >> 0] | 0) != 0;
  if ((HEAP32[$53 >> 2] | 0) == ($$1111 | 0)) {
   if ($58) {
    $$4114 = $$1111;
    $$6 = $$2;
   } else {
    HEAP8[$56 >> 0] = 1;
    HEAP8[$53 + 12 >> 0] = 0;
    $142 = HEAP32[$52 >> 2] | 0;
    $143 = HEAP32[$142 >> 2] | 0;
    $144 = $143 + 4 | 0;
    $145 = HEAP32[$144 >> 2] | 0;
    HEAP32[$142 >> 2] = $145;
    if ($145 | 0) HEAP32[$145 + 8 >> 2] = $142;
    $148 = $142 + 8 | 0;
    HEAP32[$143 + 8 >> 2] = HEAP32[$148 >> 2];
    $151 = HEAP32[$148 >> 2] | 0;
    if ((HEAP32[$151 >> 2] | 0) == ($142 | 0)) HEAP32[$151 >> 2] = $143; else HEAP32[$151 + 4 >> 2] = $143;
    HEAP32[$144 >> 2] = $142;
    HEAP32[$148 >> 2] = $143;
    $156 = HEAP32[$$1111 + 4 >> 2] | 0;
    $$4114 = HEAP32[$156 >> 2] | 0;
    $$6 = ($$2 | 0) == ($156 | 0) ? $$1111 : $$2;
   }
   $159 = HEAP32[$$4114 >> 2] | 0;
   $160 = ($159 | 0) == 0;
   if (!$160) if (!(HEAP8[$159 + 12 >> 0] | 0)) {
    label = 68;
    break;
   }
   $165 = HEAP32[$$4114 + 4 >> 2] | 0;
   if ($165 | 0) if (!(HEAP8[$165 + 12 >> 0] | 0)) {
    label = 67;
    break;
   }
   HEAP8[$$4114 + 12 >> 0] = 0;
   $172 = HEAP32[$$4114 + 8 >> 2] | 0;
   $173 = $172 + 12 | 0;
   if (($172 | 0) == ($$6 | 0) | (HEAP8[$173 >> 0] | 0) == 0) {
    label = 64;
    break;
   }
   $178 = HEAP32[$172 + 8 >> 2] | 0;
   $$1111$be$in = (HEAP32[$178 >> 2] | 0) == ($172 | 0) ? $178 + 4 | 0 : $178;
   $$2$be = $$6;
  } else {
   if ($58) {
    $$2112 = $$1111;
    $$4 = $$2;
   } else {
    HEAP8[$56 >> 0] = 1;
    HEAP8[$53 + 12 >> 0] = 0;
    $60 = HEAP32[$52 >> 2] | 0;
    $61 = $60 + 4 | 0;
    $62 = HEAP32[$61 >> 2] | 0;
    $63 = HEAP32[$62 >> 2] | 0;
    HEAP32[$61 >> 2] = $63;
    if ($63 | 0) HEAP32[$63 + 8 >> 2] = $60;
    $66 = $60 + 8 | 0;
    HEAP32[$62 + 8 >> 2] = HEAP32[$66 >> 2];
    $69 = HEAP32[$66 >> 2] | 0;
    if ((HEAP32[$69 >> 2] | 0) == ($60 | 0)) HEAP32[$69 >> 2] = $62; else HEAP32[$69 + 4 >> 2] = $62;
    HEAP32[$62 >> 2] = $60;
    HEAP32[$66 >> 2] = $62;
    $73 = HEAP32[$$1111 >> 2] | 0;
    $$2112 = HEAP32[$73 + 4 >> 2] | 0;
    $$4 = ($$2 | 0) == ($73 | 0) ? $$1111 : $$2;
   }
   $77 = HEAP32[$$2112 >> 2] | 0;
   if ($77 | 0) if (!(HEAP8[$77 + 12 >> 0] | 0)) {
    label = 38;
    break;
   }
   $83 = HEAP32[$$2112 + 4 >> 2] | 0;
   if ($83 | 0) if (!(HEAP8[$83 + 12 >> 0] | 0)) {
    $103 = $83;
    label = 39;
    break;
   }
   HEAP8[$$2112 + 12 >> 0] = 0;
   $90 = HEAP32[$$2112 + 8 >> 2] | 0;
   if (($90 | 0) == ($$4 | 0)) {
    $$lcssa137 = $$4;
    label = 36;
    break;
   }
   if (!(HEAP8[$90 + 12 >> 0] | 0)) {
    $$lcssa137 = $90;
    label = 36;
    break;
   }
   $97 = HEAP32[$90 + 8 >> 2] | 0;
   $$1111$be$in = (HEAP32[$97 >> 2] | 0) == ($90 | 0) ? $97 + 4 | 0 : $97;
   $$2$be = $$4;
  }
  $$1111 = HEAP32[$$1111$be$in >> 2] | 0;
  $$2 = $$2$be;
 }
 if ((label | 0) == 36) {
  HEAP8[$$lcssa137 + 12 >> 0] = 1;
  return;
 } else if ((label | 0) == 38) {
  $$pre = HEAP32[$$2112 + 4 >> 2] | 0;
  if (!$$pre) label = 40; else {
   $103 = $$pre;
   label = 39;
  }
 } else if ((label | 0) == 64) {
  HEAP8[$173 >> 0] = 1;
  return;
 } else if ((label | 0) == 67) if ($160) label = 69; else label = 68;
 if ((label | 0) == 39) if (!(HEAP8[$103 + 12 >> 0] | 0)) {
  $$3113 = $$2112;
  label = 46;
 } else label = 40; else if ((label | 0) == 68) if (!(HEAP8[$159 + 12 >> 0] | 0)) {
  $$5115 = $$4114;
  label = 75;
 } else label = 69;
 if ((label | 0) == 40) {
  HEAP8[$77 + 12 >> 0] = 1;
  HEAP8[$$2112 + 12 >> 0] = 0;
  $108 = HEAP32[$$2112 >> 2] | 0;
  $109 = $108 + 4 | 0;
  $110 = HEAP32[$109 >> 2] | 0;
  HEAP32[$$2112 >> 2] = $110;
  if ($110 | 0) HEAP32[$110 + 8 >> 2] = $$2112;
  $113 = $$2112 + 8 | 0;
  HEAP32[$108 + 8 >> 2] = HEAP32[$113 >> 2];
  $116 = HEAP32[$113 >> 2] | 0;
  if ((HEAP32[$116 >> 2] | 0) == ($$2112 | 0)) HEAP32[$116 >> 2] = $108; else HEAP32[$116 + 4 >> 2] = $108;
  HEAP32[$109 >> 2] = $$2112;
  HEAP32[$113 >> 2] = $108;
  $$3113 = $108;
  label = 46;
 } else if ((label | 0) == 69) {
  $185 = $$4114 + 4 | 0;
  HEAP8[(HEAP32[$185 >> 2] | 0) + 12 >> 0] = 1;
  HEAP8[$$4114 + 12 >> 0] = 0;
  $189 = HEAP32[$185 >> 2] | 0;
  $190 = HEAP32[$189 >> 2] | 0;
  HEAP32[$185 >> 2] = $190;
  if ($190 | 0) HEAP32[$190 + 8 >> 2] = $$4114;
  $193 = $$4114 + 8 | 0;
  HEAP32[$189 + 8 >> 2] = HEAP32[$193 >> 2];
  $196 = HEAP32[$193 >> 2] | 0;
  if ((HEAP32[$196 >> 2] | 0) == ($$4114 | 0)) HEAP32[$196 >> 2] = $189; else HEAP32[$196 + 4 >> 2] = $189;
  HEAP32[$189 >> 2] = $$4114;
  HEAP32[$193 >> 2] = $189;
  $$5115 = $189;
  label = 75;
 }
 if ((label | 0) == 46) {
  $120 = $$3113 + 8 | 0;
  $122 = (HEAP32[$120 >> 2] | 0) + 12 | 0;
  HEAP8[$$3113 + 12 >> 0] = HEAP8[$122 >> 0] | 0;
  HEAP8[$122 >> 0] = 1;
  HEAP8[(HEAP32[$$3113 + 4 >> 2] | 0) + 12 >> 0] = 1;
  $128 = HEAP32[$120 >> 2] | 0;
  $129 = $128 + 4 | 0;
  $130 = HEAP32[$129 >> 2] | 0;
  $131 = HEAP32[$130 >> 2] | 0;
  HEAP32[$129 >> 2] = $131;
  if ($131 | 0) HEAP32[$131 + 8 >> 2] = $128;
  $134 = $128 + 8 | 0;
  HEAP32[$130 + 8 >> 2] = HEAP32[$134 >> 2];
  $137 = HEAP32[$134 >> 2] | 0;
  if ((HEAP32[$137 >> 2] | 0) == ($128 | 0)) HEAP32[$137 >> 2] = $130; else HEAP32[$137 + 4 >> 2] = $130;
  HEAP32[$130 >> 2] = $128;
  HEAP32[$134 >> 2] = $130;
  return;
 } else if ((label | 0) == 75) {
  $200 = $$5115 + 8 | 0;
  $202 = (HEAP32[$200 >> 2] | 0) + 12 | 0;
  HEAP8[$$5115 + 12 >> 0] = HEAP8[$202 >> 0] | 0;
  HEAP8[$202 >> 0] = 1;
  HEAP8[(HEAP32[$$5115 >> 2] | 0) + 12 >> 0] = 1;
  $207 = HEAP32[$200 >> 2] | 0;
  $208 = HEAP32[$207 >> 2] | 0;
  $209 = $208 + 4 | 0;
  $210 = HEAP32[$209 >> 2] | 0;
  HEAP32[$207 >> 2] = $210;
  if ($210 | 0) HEAP32[$210 + 8 >> 2] = $207;
  $213 = $207 + 8 | 0;
  HEAP32[$208 + 8 >> 2] = HEAP32[$213 >> 2];
  $216 = HEAP32[$213 >> 2] | 0;
  if ((HEAP32[$216 >> 2] | 0) == ($207 | 0)) HEAP32[$216 >> 2] = $208; else HEAP32[$216 + 4 >> 2] = $208;
  HEAP32[$209 >> 2] = $207;
  HEAP32[$213 >> 2] = $208;
  return;
 }
}

function __ZNSt3__227__insertion_sort_incompleteIRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEbT0_S6_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i79 = 0, $$0$i82 = 0, $$068 = 0, $$068$lcssa = 0, $$07186 = 0, $$07485 = 0, $$07684 = 0, $$07684$phi = 0, $$170 = 0, $$175 = 0, $$177 = 0, $$177$phi = 0, $$3 = 0, $$5 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $108 = 0, $113 = 0, $114 = 0, $119 = 0, $124 = 0, $130 = 0, $143 = 0, $147 = 0, $15 = 0, $21 = 0, $3 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $51 = 0, $52 = 0, $65 = 0, $67 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $83 = 0, $89 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $3 = sp;
 switch (($1 - $0 | 0) / 80 | 0 | 0) {
 case 2:
  {
   $8 = $1 + -80 | 0;
   $9 = $1 + -20 | 0;
   $15 = $0 + 60 | 0;
   $21 = _strcmp((HEAP8[$9 + 11 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9, (HEAP8[$15 + 11 >> 0] | 0) < 0 ? HEAP32[$15 >> 2] | 0 : $15) | 0;
   if (!$21) $$0$i = _strcmp((HEAP8[$8 + 11 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8, (HEAP8[$0 + 11 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0) | 0; else $$0$i = $21;
   if (($$0$i | 0) >= 0) {
    $$5 = 1;
    STACKTOP = sp;
    return $$5 | 0;
   };
   HEAP32[$3 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   $35 = $3 + 12 | 0;
   $36 = $0 + 12 | 0;
   HEAP32[$35 >> 2] = HEAP32[$36 >> 2];
   HEAP32[$35 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
   HEAP32[$35 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
   HEAP32[$36 >> 2] = 0;
   HEAP32[$36 + 4 >> 2] = 0;
   HEAP32[$36 + 8 >> 2] = 0;
   $37 = $3 + 24 | 0;
   $38 = $0 + 24 | 0;
   HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
   HEAP32[$37 + 4 >> 2] = HEAP32[$38 + 4 >> 2];
   HEAP32[$37 + 8 >> 2] = HEAP32[$38 + 8 >> 2];
   HEAP32[$38 >> 2] = 0;
   HEAP32[$38 + 4 >> 2] = 0;
   HEAP32[$38 + 8 >> 2] = 0;
   $39 = $3 + 36 | 0;
   $40 = $0 + 36 | 0;
   HEAP32[$39 >> 2] = HEAP32[$40 >> 2];
   HEAP32[$39 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
   HEAP32[$39 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
   HEAP32[$40 >> 2] = 0;
   HEAP32[$40 + 4 >> 2] = 0;
   HEAP32[$40 + 8 >> 2] = 0;
   $41 = $3 + 48 | 0;
   $42 = $0 + 48 | 0;
   HEAP32[$41 >> 2] = HEAP32[$42 >> 2];
   HEAP32[$41 + 4 >> 2] = HEAP32[$42 + 4 >> 2];
   HEAP32[$41 + 8 >> 2] = HEAP32[$42 + 8 >> 2];
   HEAP32[$42 >> 2] = 0;
   HEAP32[$42 + 4 >> 2] = 0;
   HEAP32[$42 + 8 >> 2] = 0;
   $43 = $3 + 60 | 0;
   HEAP32[$43 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$43 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
   HEAP32[$43 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
   HEAP32[$15 >> 2] = 0;
   HEAP32[$15 + 4 >> 2] = 0;
   HEAP32[$15 + 8 >> 2] = 0;
   $46 = $0 + 72 | 0;
   $51 = HEAP32[$46 + 4 >> 2] | 0;
   $52 = $3 + 72 | 0;
   HEAP32[$52 >> 2] = HEAP32[$46 >> 2];
   HEAP32[$52 + 4 >> 2] = $51;
   __ZN6google19CommandLineFlagInfoaSEOS0_($0, $8) | 0;
   __ZN6google19CommandLineFlagInfoaSEOS0_($8, $3) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$5 = 1;
   STACKTOP = sp;
   return $$5 | 0;
  }
 case 3:
  {
   __ZNSt3__27__sort3IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_T_($0, $0 + 80 | 0, $1 + -80 | 0, $2) | 0;
   $$5 = 1;
   STACKTOP = sp;
   return $$5 | 0;
  }
 case 4:
  {
   __ZNSt3__27__sort4IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_S6_T_($0, $0 + 80 | 0, $0 + 160 | 0, $1 + -80 | 0, $2) | 0;
   $$5 = 1;
   STACKTOP = sp;
   return $$5 | 0;
  }
 case 5:
  {
   __ZNSt3__27__sort5IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_S6_S6_T_($0, $0 + 80 | 0, $0 + 160 | 0, $0 + 240 | 0, $1 + -80 | 0, $2) | 0;
   $$5 = 1;
   STACKTOP = sp;
   return $$5 | 0;
  }
 case 1:
 case 0:
  {
   $$5 = 1;
   STACKTOP = sp;
   return $$5 | 0;
  }
 default:
  {
   $65 = $0 + 160 | 0;
   __ZNSt3__27__sort3IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_T_($0, $0 + 80 | 0, $65, $2) | 0;
   $67 = $0 + 240 | 0;
   L3 : do if (($67 | 0) == ($1 | 0)) {
    $$170 = 1;
    $$3 = 0;
   } else {
    $69 = $3 + 12 | 0;
    $70 = $3 + 24 | 0;
    $71 = $3 + 36 | 0;
    $72 = $3 + 48 | 0;
    $73 = $3 + 60 | 0;
    $74 = $3 + 72 | 0;
    $75 = $73 + 11 | 0;
    $76 = $3 + 11 | 0;
    $$07186 = $67;
    $$07485 = 0;
    $$07684 = $65;
    while (1) {
     $77 = $$07186 + 60 | 0;
     $83 = $$07684 + 60 | 0;
     $89 = _strcmp((HEAP8[$77 + 11 >> 0] | 0) < 0 ? HEAP32[$77 >> 2] | 0 : $77, (HEAP8[$83 + 11 >> 0] | 0) < 0 ? HEAP32[$83 >> 2] | 0 : $83) | 0;
     if (!$89) $$0$i79 = _strcmp((HEAP8[$$07186 + 11 >> 0] | 0) < 0 ? HEAP32[$$07186 >> 2] | 0 : $$07186, (HEAP8[$$07684 + 11 >> 0] | 0) < 0 ? HEAP32[$$07684 >> 2] | 0 : $$07684) | 0; else $$0$i79 = $89;
     if (($$0$i79 | 0) < 0) {
      HEAP32[$3 >> 2] = HEAP32[$$07186 >> 2];
      HEAP32[$3 + 4 >> 2] = HEAP32[$$07186 + 4 >> 2];
      HEAP32[$3 + 8 >> 2] = HEAP32[$$07186 + 8 >> 2];
      HEAP32[$$07186 >> 2] = 0;
      HEAP32[$$07186 + 4 >> 2] = 0;
      HEAP32[$$07186 + 8 >> 2] = 0;
      $103 = $$07186 + 12 | 0;
      HEAP32[$69 >> 2] = HEAP32[$103 >> 2];
      HEAP32[$69 + 4 >> 2] = HEAP32[$103 + 4 >> 2];
      HEAP32[$69 + 8 >> 2] = HEAP32[$103 + 8 >> 2];
      HEAP32[$103 >> 2] = 0;
      HEAP32[$103 + 4 >> 2] = 0;
      HEAP32[$103 + 8 >> 2] = 0;
      $104 = $$07186 + 24 | 0;
      HEAP32[$70 >> 2] = HEAP32[$104 >> 2];
      HEAP32[$70 + 4 >> 2] = HEAP32[$104 + 4 >> 2];
      HEAP32[$70 + 8 >> 2] = HEAP32[$104 + 8 >> 2];
      HEAP32[$104 >> 2] = 0;
      HEAP32[$104 + 4 >> 2] = 0;
      HEAP32[$104 + 8 >> 2] = 0;
      $105 = $$07186 + 36 | 0;
      HEAP32[$71 >> 2] = HEAP32[$105 >> 2];
      HEAP32[$71 + 4 >> 2] = HEAP32[$105 + 4 >> 2];
      HEAP32[$71 + 8 >> 2] = HEAP32[$105 + 8 >> 2];
      HEAP32[$105 >> 2] = 0;
      HEAP32[$105 + 4 >> 2] = 0;
      HEAP32[$105 + 8 >> 2] = 0;
      $106 = $$07186 + 48 | 0;
      HEAP32[$72 >> 2] = HEAP32[$106 >> 2];
      HEAP32[$72 + 4 >> 2] = HEAP32[$106 + 4 >> 2];
      HEAP32[$72 + 8 >> 2] = HEAP32[$106 + 8 >> 2];
      HEAP32[$106 >> 2] = 0;
      HEAP32[$106 + 4 >> 2] = 0;
      HEAP32[$106 + 8 >> 2] = 0;
      HEAP32[$73 >> 2] = HEAP32[$77 >> 2];
      HEAP32[$73 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
      HEAP32[$73 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
      HEAP32[$77 >> 2] = 0;
      HEAP32[$77 + 4 >> 2] = 0;
      HEAP32[$77 + 8 >> 2] = 0;
      $108 = $$07186 + 72 | 0;
      $113 = HEAP32[$108 + 4 >> 2] | 0;
      $114 = $74;
      HEAP32[$114 >> 2] = HEAP32[$108 >> 2];
      HEAP32[$114 + 4 >> 2] = $113;
      $$068 = $$07684;
      $$177 = $$07186;
      while (1) {
       __ZN6google19CommandLineFlagInfoaSEOS0_($$177, $$068) | 0;
       if (($$068 | 0) == ($0 | 0)) {
        $$068$lcssa = $0;
        break;
       }
       $119 = $$068 + -80 | 0;
       $124 = $$068 + -20 | 0;
       $130 = _strcmp((HEAP8[$75 >> 0] | 0) < 0 ? HEAP32[$73 >> 2] | 0 : $73, (HEAP8[$124 + 11 >> 0] | 0) < 0 ? HEAP32[$124 >> 2] | 0 : $124) | 0;
       if (!$130) $$0$i82 = _strcmp((HEAP8[$76 >> 0] | 0) < 0 ? HEAP32[$3 >> 2] | 0 : $3, (HEAP8[$119 + 11 >> 0] | 0) < 0 ? HEAP32[$119 >> 2] | 0 : $119) | 0; else $$0$i82 = $130;
       if (($$0$i82 | 0) < 0) {
        $$177$phi = $$068;
        $$068 = $119;
        $$177 = $$177$phi;
       } else {
        $$068$lcssa = $$068;
        break;
       }
      }
      __ZN6google19CommandLineFlagInfoaSEOS0_($$068$lcssa, $3) | 0;
      $143 = $$07485 + 1 | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($72);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      if (($143 | 0) == 8) {
       $$170 = 0;
       $$3 = ($$07186 + 80 | 0) == ($1 | 0);
       break L3;
      } else $$175 = $143;
     } else $$175 = $$07485;
     $147 = $$07186 + 80 | 0;
     if (($147 | 0) == ($1 | 0)) {
      $$170 = 1;
      $$3 = 0;
      break;
     } else {
      $$07684$phi = $$07186;
      $$07186 = $147;
      $$07485 = $$175;
      $$07684 = $$07684$phi;
     }
    }
   } while (0);
   $$5 = $$170 | $$3;
   STACKTOP = sp;
   return $$5 | 0;
  }
 }
 return 0;
}

function __ZL10str_formatP9lua_State($0) {
 $0 = $0 | 0;
 var $$$$i = 0, $$$0$i = 0, $$$i = 0, $$0$lcssa$i = 0, $$028$i = 0, $$037$i = 0, $$049$ph60 = 0, $$050$be = 0, $$050$ph59 = 0, $$05058 = 0, $$2 = 0, $$2$i = 0, $$4$i = 0, $1 = 0, $100 = 0, $102 = 0, $105 = 0, $106 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $114 = 0, $115 = 0, $117 = 0, $12 = 0, $120 = 0, $123 = 0, $124 = 0, $126 = 0, $13 = 0, $132 = 0, $15 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $28 = 0, $29 = 0, $3 = 0, $33 = 0, $36 = 0, $38 = 0, $4 = 0, $42 = 0, $46 = 0, $5 = 0, $51 = 0, $53 = 0, $6 = 0, $61 = 0, $64 = 0, $68 = 0, $7 = 0, $71 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $81 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $92 = 0, $93 = 0, $96 = 0, $97 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer8 = 0, label = 0, sp = 0, $$049$ph60$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1632 | 0;
 $vararg_buffer14 = sp + 48 | 0;
 $vararg_buffer11 = sp + 40 | 0;
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $1 = sp + 1092 | 0;
 $2 = sp + 1088 | 0;
 $3 = sp + 52 | 0;
 $4 = sp + 1608 | 0;
 $5 = sp + 1096 | 0;
 $6 = __Z10lua_gettopP9lua_State($0) | 0;
 $7 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $2) | 0;
 $8 = HEAP32[$2 >> 2] | 0;
 $9 = $7 + $8 | 0;
 __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $3);
 L1 : do if (($8 | 0) > 0) {
  $11 = $3 + 1036 | 0;
  $12 = $4 + 1 | 0;
  $$049$ph60 = 1;
  $$050$ph59 = $7;
  L3 : while (1) {
   $$05058 = $$050$ph59;
   while (1) {
    $13 = HEAP8[$$05058 >> 0] | 0;
    if ($13 << 24 >> 24 == 37) {
     $21 = $$05058 + 1 | 0;
     $22 = HEAP8[$21 >> 0] | 0;
     if ($22 << 24 >> 24 != 37) break;
     $24 = HEAP32[$3 >> 2] | 0;
     if ($24 >>> 0 < $11 >>> 0) {
      $28 = $24;
      $29 = 37;
     } else {
      __Z15luaL_prepbufferP11luaL_Buffer($3) | 0;
      $28 = HEAP32[$3 >> 2] | 0;
      $29 = HEAP8[$21 >> 0] | 0;
     }
     HEAP32[$3 >> 2] = $28 + 1;
     HEAP8[$28 >> 0] = $29;
     $$050$be = $$05058 + 2 | 0;
    } else {
     $15 = HEAP32[$3 >> 2] | 0;
     if ($15 >>> 0 < $11 >>> 0) {
      $19 = $15;
      $20 = $13;
     } else {
      __Z15luaL_prepbufferP11luaL_Buffer($3) | 0;
      $19 = HEAP32[$3 >> 2] | 0;
      $20 = HEAP8[$$05058 >> 0] | 0;
     }
     HEAP32[$3 >> 2] = $19 + 1;
     HEAP8[$19 >> 0] = $20;
     $$050$be = $$05058 + 1 | 0;
    }
    if ($$050$be >>> 0 < $9 >>> 0) $$05058 = $$050$be; else break L1;
   }
   $$049$ph60$looptemp = $$049$ph60;
   $$049$ph60 = $$049$ph60 + 1 | 0;
   if (($$049$ph60$looptemp | 0) < ($6 | 0)) $33 = $22; else {
    __Z13luaL_argerrorP9lua_StateiPKc($0, $$049$ph60, 88746) | 0;
    $33 = HEAP8[$21 >> 0] | 0;
   }
   L22 : do if (!($33 << 24 >> 24)) {
    $$0$lcssa$i = $21;
    $132 = 0;
   } else {
    $$037$i = $21;
    $36 = $33;
    while (1) {
     if (!(_memchr(88755, $36 << 24 >> 24, 6) | 0)) {
      $$0$lcssa$i = $$037$i;
      $132 = $36;
      break L22;
     }
     $38 = $$037$i + 1 | 0;
     $36 = HEAP8[$38 >> 0] | 0;
     if (!($36 << 24 >> 24)) {
      $$0$lcssa$i = $38;
      $132 = 0;
      break;
     } else $$037$i = $38;
    }
   } while (0);
   $42 = $21;
   if (($$0$lcssa$i - $42 | 0) >>> 0 > 5) {
    __Z10luaL_errorP9lua_StatePKcz($0, 88761, $vararg_buffer) | 0;
    $46 = HEAP8[$$0$lcssa$i >> 0] | 0;
   } else $46 = $132;
   $$$0$i = (($46 & 255) + -48 | 0) >>> 0 < 10 ? $$0$lcssa$i + 1 | 0 : $$0$lcssa$i;
   $$2$i = ((HEAPU8[$$$0$i >> 0] | 0) + -48 | 0) >>> 0 < 10 ? $$$0$i + 1 | 0 : $$$0$i;
   $51 = HEAP8[$$2$i >> 0] | 0;
   if ($51 << 24 >> 24 == 46) {
    $53 = $$2$i + 1 | 0;
    $$$i = ((HEAPU8[$53 >> 0] | 0) + -48 | 0) >>> 0 < 10 ? $$2$i + 2 | 0 : $53;
    $$$$i = ((HEAPU8[$$$i >> 0] | 0) + -48 | 0) >>> 0 < 10 ? $$$i + 1 | 0 : $$$i;
    $$4$i = $$$$i;
    $61 = HEAP8[$$$$i >> 0] | 0;
   } else {
    $$4$i = $$2$i;
    $61 = $51;
   }
   if ((($61 & 255) + -48 | 0) >>> 0 < 10) __Z10luaL_errorP9lua_StatePKcz($0, 88793, $vararg_buffer1) | 0;
   HEAP8[$4 >> 0] = 37;
   $64 = $$4$i - $42 + 1 | 0;
   _strncpy($12, $21, $64) | 0;
   HEAP8[$12 + $64 >> 0] = 0;
   $$050$ph59 = $$4$i + 1 | 0;
   $68 = HEAP8[$$4$i >> 0] | 0;
   L36 : do switch ($68 | 0) {
   case 99:
    {
     HEAP32[$vararg_buffer3 >> 2] = ~~+__Z16luaL_checknumberP9lua_Statei($0, $$049$ph60);
     _sprintf($5, $4, $vararg_buffer3) | 0;
     label = 50;
     break;
    }
   case 105:
   case 100:
    {
     $71 = _strlen($4) | 0;
     $74 = HEAP8[$4 + ($71 + -1) >> 0] | 0;
     $75 = $4 + $71 | 0;
     $76 = $75 + -1 | 0;
     HEAP8[$76 >> 0] = 108;
     HEAP8[$76 + 1 >> 0] = 0;
     HEAP8[$75 >> 0] = $74;
     HEAP8[$4 + ($71 + 1) >> 0] = 0;
     HEAP32[$vararg_buffer5 >> 2] = ~~+__Z16luaL_checknumberP9lua_Statei($0, $$049$ph60);
     _sprintf($5, $4, $vararg_buffer5) | 0;
     label = 50;
     break;
    }
   case 88:
   case 120:
   case 117:
   case 111:
    {
     $81 = _strlen($4) | 0;
     $84 = HEAP8[$4 + ($81 + -1) >> 0] | 0;
     $85 = $4 + $81 | 0;
     $86 = $85 + -1 | 0;
     HEAP8[$86 >> 0] = 108;
     HEAP8[$86 + 1 >> 0] = 0;
     HEAP8[$85 >> 0] = $84;
     HEAP8[$4 + ($81 + 1) >> 0] = 0;
     HEAP32[$vararg_buffer8 >> 2] = ~~+__Z16luaL_checknumberP9lua_Statei($0, $$049$ph60) >>> 0;
     _sprintf($5, $4, $vararg_buffer8) | 0;
     label = 50;
     break;
    }
   case 71:
   case 103:
   case 102:
   case 69:
   case 101:
    {
     __Z17spring_lua_formatfPKcPc(+(+__Z16luaL_checknumberP9lua_Statei($0, $$049$ph60)), $4 | 0, $5 | 0);
     label = 50;
     break;
    }
   case 113:
    {
     $92 = __Z17luaL_checklstringP9lua_StateiPj($0, $$049$ph60, $1) | 0;
     $93 = HEAP32[$3 >> 2] | 0;
     if ($93 >>> 0 < $11 >>> 0) $96 = $93; else {
      __Z15luaL_prepbufferP11luaL_Buffer($3) | 0;
      $96 = HEAP32[$3 >> 2] | 0;
     }
     HEAP32[$3 >> 2] = $96 + 1;
     HEAP8[$96 >> 0] = 34;
     $97 = HEAP32[$1 >> 2] | 0;
     HEAP32[$1 >> 2] = $97 + -1;
     L45 : do if ($97 | 0) {
      $$028$i = $92;
      while (1) {
       $100 = HEAP8[$$028$i >> 0] | 0;
       switch ($100 << 24 >> 24 | 0) {
       case 10:
       case 92:
       case 34:
        {
         $102 = HEAP32[$3 >> 2] | 0;
         if ($102 >>> 0 < $11 >>> 0) $105 = $102; else {
          __Z15luaL_prepbufferP11luaL_Buffer($3) | 0;
          $105 = HEAP32[$3 >> 2] | 0;
         }
         HEAP32[$3 >> 2] = $105 + 1;
         HEAP8[$105 >> 0] = 92;
         $106 = HEAP32[$3 >> 2] | 0;
         if ($106 >>> 0 < $11 >>> 0) $110 = $106; else {
          __Z15luaL_prepbufferP11luaL_Buffer($3) | 0;
          $110 = HEAP32[$3 >> 2] | 0;
         }
         $108 = HEAP8[$$028$i >> 0] | 0;
         HEAP32[$3 >> 2] = $110 + 1;
         HEAP8[$110 >> 0] = $108;
         break;
        }
       case 13:
        {
         __Z15luaL_addlstringP11luaL_BufferPKcj($3, 88838, 2);
         break;
        }
       case 0:
        {
         __Z15luaL_addlstringP11luaL_BufferPKcj($3, 88841, 4);
         break;
        }
       default:
        {
         $111 = HEAP32[$3 >> 2] | 0;
         if ($111 >>> 0 < $11 >>> 0) {
          $114 = $111;
          $115 = $100;
         } else {
          __Z15luaL_prepbufferP11luaL_Buffer($3) | 0;
          $114 = HEAP32[$3 >> 2] | 0;
          $115 = HEAP8[$$028$i >> 0] | 0;
         }
         HEAP32[$3 >> 2] = $114 + 1;
         HEAP8[$114 >> 0] = $115;
        }
       }
       $117 = HEAP32[$1 >> 2] | 0;
       HEAP32[$1 >> 2] = $117 + -1;
       if (!$117) break L45; else $$028$i = $$028$i + 1 | 0;
      }
     } while (0);
     $120 = HEAP32[$3 >> 2] | 0;
     if ($120 >>> 0 < $11 >>> 0) $123 = $120; else {
      __Z15luaL_prepbufferP11luaL_Buffer($3) | 0;
      $123 = HEAP32[$3 >> 2] | 0;
     }
     HEAP32[$3 >> 2] = $123 + 1;
     HEAP8[$123 >> 0] = 34;
     break;
    }
   case 115:
    {
     $124 = __Z17luaL_checklstringP9lua_StateiPj($0, $$049$ph60, $1) | 0;
     $126 = (_strchr($4, 46) | 0) == 0;
     if ($126 & (HEAP32[$1 >> 2] | 0) >>> 0 > 99) {
      __Z13lua_pushvalueP9lua_Statei($0, $$049$ph60);
      __Z13luaL_addvalueP11luaL_Buffer($3);
      break L36;
     } else {
      HEAP32[$vararg_buffer11 >> 2] = $124;
      _sprintf($5, $4, $vararg_buffer11) | 0;
      label = 50;
      break L36;
     }
     break;
    }
   default:
    break L3;
   } while (0);
   if ((label | 0) == 50) {
    label = 0;
    __Z15luaL_addlstringP11luaL_BufferPKcj($3, $5, _strlen($5) | 0);
   }
   if ($$050$ph59 >>> 0 >= $9 >>> 0) break L1;
  }
  HEAP32[$vararg_buffer14 >> 2] = $68;
  $$2 = __Z10luaL_errorP9lua_StatePKcz($0, 88846, $vararg_buffer14) | 0;
  STACKTOP = sp;
  return $$2 | 0;
 } while (0);
 __Z15luaL_pushresultP11luaL_Buffer($3);
 $$2 = 1;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0$i$i = 0, $$0$i$i73 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$049 = 0, $$050 = 0, $$3 = 0, $$3$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$pre = 0, $$pre$i$i$i55 = 0, $$pre$i$i$i64 = 0, $$pre$i3$i$i68 = 0, $$pre$i3$i$i6888 = 0, $$pre$i3$i$i6889 = 0, $$sroa$047$0$copyload = 0, $10 = 0, $11 = 0, $112 = 0, $113 = 0, $114 = 0, $12 = 0, $13 = 0, $130 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $152 = 0, $159 = 0, $16 = 0, $178 = 0, $179 = 0, $18 = 0, $193 = 0, $194 = 0, $195 = 0, $29 = 0, $30 = 0, $31 = 0, $33 = 0, $50 = 0, $56 = 0, $57 = 0, $66 = 0, $67 = 0, $68 = 0, $71 = 0, $72 = 0, $74 = 0, $8 = 0, $80 = 0, $9 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 $10 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy1 >> 2] = $10;
 $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 110168) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($10) | 0;
 HEAP32[$4 >> 2] = 0;
 $12 = $11 + 8 | 0;
 $$0$ph = $6;
 $$pre = 0;
 L1 : while (1) {
  $13 = ($$0$ph | 0) != ($7 | 0);
  $14 = $$pre;
  while (1) {
   $16 = HEAP32[$1 >> 2] | 0;
   if (!($13 & ($14 | 0) == 0)) {
    $$pre$i$i$i55 = $16;
    break L1;
   }
   $18 = $16;
   if (!$16) {
    $29 = 0;
    $67 = $18;
   } else if ((HEAP32[$16 + 12 >> 2] | 0) == (HEAP32[$16 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $29 = 0;
    $67 = 0;
   } else {
    $29 = $16;
    $67 = $18;
   } else {
    $29 = $16;
    $67 = $18;
   }
   $30 = ($29 | 0) == 0;
   $31 = HEAP32[$2 >> 2] | 0;
   $33 = $31;
   do if (!$31) {
    $193 = $33;
    label = 13;
   } else {
    if ((HEAP32[$31 + 12 >> 2] | 0) == (HEAP32[$31 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 255]($31) | 0) == -1) {
     HEAP32[$2 >> 2] = 0;
     $193 = 0;
     label = 13;
     break;
    }
    if ($30) {
     $194 = $31;
     $68 = $33;
    } else {
     label = 14;
     break L1;
    }
   } while (0);
   if ((label | 0) == 13) {
    label = 0;
    if ($30) {
     label = 14;
     break L1;
    } else {
     $194 = 0;
     $68 = $193;
    }
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 63]($11, HEAP8[$$0$ph >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    label = 16;
    break;
   }
   $72 = HEAP8[$$0$ph >> 0] | 0;
   if ($72 << 24 >> 24 > -1) {
    $74 = HEAP32[$12 >> 2] | 0;
    if (HEAP16[$74 + ($72 << 24 >> 24 << 1) >> 1] & 8192) {
     $$0$pn = $$0$ph;
     label = 25;
     break;
    }
   }
   $137 = $29 + 12 | 0;
   $138 = HEAP32[$137 >> 2] | 0;
   $139 = $29 + 16 | 0;
   if (($138 | 0) == (HEAP32[$139 >> 2] | 0)) $$0$i$i73 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($29) | 0; else $$0$i$i73 = HEAPU8[$138 >> 0] | 0;
   $152 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 31]($11, $$0$i$i73 & 255) | 0;
   if ($152 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 31]($11, HEAP8[$$0$ph >> 0] | 0) | 0) << 24 >> 24) {
    label = 52;
    break;
   }
   HEAP32[$4 >> 2] = 4;
   $14 = 4;
  }
  L29 : do if ((label | 0) == 16) {
   label = 0;
   $50 = $$0$ph + 1 | 0;
   if (($50 | 0) == ($7 | 0)) {
    label = 17;
    break L1;
   }
   $56 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 63]($11, HEAP8[$50 >> 0] | 0, 0) | 0;
   switch ($56 << 24 >> 24) {
   case 48:
   case 69:
    {
     $57 = $$0$ph + 2 | 0;
     if (($57 | 0) == ($7 | 0)) {
      label = 22;
      break L1;
     }
     $$049 = $56;
     $$050 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 63]($11, HEAP8[$57 >> 0] | 0, 0) | 0;
     $71 = $50;
     break;
    }
   default:
    {
     $$049 = 0;
     $$050 = $56;
     $71 = $$0$ph;
    }
   }
   $66 = HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$8 >> 2] = $67;
   HEAP32[$9 >> 2] = $68;
   HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$1 >> 2] = FUNCTION_TABLE_iiiiiiiii[$66 & 15]($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $$050, $$049) | 0;
   $$0$ph$be = $71 + 2 | 0;
  } else if ((label | 0) == 25) {
   while (1) {
    label = 0;
    $$3 = $$0$pn + 1 | 0;
    if (($$3 | 0) == ($7 | 0)) {
     $$3$lcssa = $7;
     break;
    }
    $80 = HEAP8[$$3 >> 0] | 0;
    if ($80 << 24 >> 24 <= -1) {
     $$3$lcssa = $$3;
     break;
    }
    if (!(HEAP16[$74 + ($80 << 24 >> 24 << 1) >> 1] & 8192)) {
     $$3$lcssa = $$3;
     break;
    } else {
     $$0$pn = $$3;
     label = 25;
    }
   }
   $$pre$i$i$i64 = $29;
   $$pre$i3$i$i68 = $194;
   $99 = $194;
   while (1) {
    if (!$$pre$i$i$i64) $97 = 0; else if ((HEAP32[$$pre$i$i$i64 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i64 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i64 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i64) | 0) == -1) {
     HEAP32[$1 >> 2] = 0;
     $97 = 0;
    } else $97 = $$pre$i$i$i64; else $97 = $$pre$i$i$i64;
    $98 = ($97 | 0) == 0;
    do if (!$99) {
     $$pre$i3$i$i6889 = $$pre$i3$i$i68;
     label = 38;
    } else {
     if ((HEAP32[$99 + 12 >> 2] | 0) != (HEAP32[$99 + 16 >> 2] | 0)) if ($98) {
      $$pre$i3$i$i6888 = $$pre$i3$i$i68;
      $195 = $99;
      break;
     } else {
      $$0$ph$be = $$3$lcssa;
      break L29;
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$99 >> 2] | 0) + 36 >> 2] & 255]($99) | 0) == -1) {
      HEAP32[$2 >> 2] = 0;
      $$pre$i3$i$i6889 = 0;
      label = 38;
      break;
     } else if ($98 ^ ($$pre$i3$i$i68 | 0) == 0) {
      $$pre$i3$i$i6888 = $$pre$i3$i$i68;
      $195 = $$pre$i3$i$i68;
      break;
     } else {
      $$0$ph$be = $$3$lcssa;
      break L29;
     }
    } while (0);
    if ((label | 0) == 38) {
     label = 0;
     if ($98) {
      $$0$ph$be = $$3$lcssa;
      break L29;
     } else {
      $$pre$i3$i$i6888 = $$pre$i3$i$i6889;
      $195 = 0;
     }
    }
    $112 = $97 + 12 | 0;
    $113 = HEAP32[$112 >> 2] | 0;
    $114 = $97 + 16 | 0;
    if (($113 | 0) == (HEAP32[$114 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$97 >> 2] | 0) + 36 >> 2] & 255]($97) | 0; else $$0$i$i = HEAPU8[$113 >> 0] | 0;
    if (($$0$i$i & 255) << 24 >> 24 <= -1) {
     $$0$ph$be = $$3$lcssa;
     break L29;
    }
    if (!(HEAP16[(HEAP32[$12 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
     $$0$ph$be = $$3$lcssa;
     break L29;
    }
    $130 = HEAP32[$112 >> 2] | 0;
    if (($130 | 0) == (HEAP32[$114 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$97 >> 2] | 0) + 40 >> 2] & 255]($97) | 0;
     $$pre$i$i$i64 = $97;
     $$pre$i3$i$i68 = $$pre$i3$i$i6888;
     $99 = $195;
     continue;
    } else {
     HEAP32[$112 >> 2] = $130 + 1;
     $$pre$i$i$i64 = $97;
     $$pre$i3$i$i68 = $$pre$i3$i$i6888;
     $99 = $195;
     continue;
    }
   }
  } else if ((label | 0) == 52) {
   label = 0;
   $159 = HEAP32[$137 >> 2] | 0;
   if (($159 | 0) == (HEAP32[$139 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 40 >> 2] & 255]($29) | 0; else HEAP32[$137 >> 2] = $159 + 1;
   $$0$ph$be = $$0$ph + 1 | 0;
  } while (0);
  $$0$ph = $$0$ph$be;
  $$pre = HEAP32[$4 >> 2] | 0;
 }
 if ((label | 0) == 14) {
  HEAP32[$4 >> 2] = 4;
  $$pre$i$i$i55 = $29;
 } else if ((label | 0) == 17) {
  HEAP32[$4 >> 2] = 4;
  $$pre$i$i$i55 = $29;
 } else if ((label | 0) == 22) {
  HEAP32[$4 >> 2] = 4;
  $$pre$i$i$i55 = $29;
 }
 if (!$$pre$i$i$i55) $$sroa$047$0$copyload = 0; else if ((HEAP32[$$pre$i$i$i55 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i55 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i55 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i55) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $$sroa$047$0$copyload = 0;
 } else $$sroa$047$0$copyload = $$pre$i$i$i55; else $$sroa$047$0$copyload = $$pre$i$i$i55;
 $178 = ($$sroa$047$0$copyload | 0) == 0;
 $179 = HEAP32[$2 >> 2] | 0;
 do if (!$179) label = 67; else {
  if ((HEAP32[$179 + 12 >> 2] | 0) == (HEAP32[$179 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$179 >> 2] | 0) + 36 >> 2] & 255]($179) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 67;
   break;
  }
  if (!$178) label = 68;
 } while (0);
 if ((label | 0) == 67) if ($178) label = 68;
 if ((label | 0) == 68) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 STACKTOP = sp;
 return $$sroa$047$0$copyload | 0;
}

function __ZN10CGameSetup9LoadTeamsERK9TdfParser($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa$i = 0, $$0$lcssa$i$i$i$i$i$i$i$i = 0, $$04$i = 0, $$04$i$i$i$i$i$i$i$i = 0, $$05$i$i = 0, $$075 = 0, $$1 = 0, $$byval_copy = 0, $$byval_copy5 = 0, $$lcssa$i$i = 0, $$pre8$i$i = 0, $$sroa$6$074 = 0, $10 = 0, $103 = 0, $11 = 0, $111 = 0, $112 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $5 = 0, $51 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $69 = 0, $7 = 0, $71 = 0, $75 = 0, $79 = 0, $8 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $90 = 0, $91 = 0, $93 = 0, $95 = 0, $98 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $$byval_copy5 = sp + 144 | 0;
 $$byval_copy = sp + 132 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 120 | 0;
 $3 = sp + 112 | 0;
 $4 = sp + 104 | 0;
 $5 = sp + 92 | 0;
 $6 = sp + 16 | 0;
 HEAP32[$4 >> 2] = 0;
 $7 = $2 + 11 | 0;
 $8 = $6 + 8 | 0;
 $9 = $6 + 9 | 0;
 $10 = $6 + 10 | 0;
 $11 = $6 + 11 | 0;
 $12 = $0 + 228 | 0;
 $13 = $0 + 232 | 0;
 $14 = $0 + 224 | 0;
 $15 = $0 + 156 | 0;
 $16 = $6 + 60 | 0;
 $17 = $6 + 52 | 0;
 $$pre8$i$i = $6 + 56 | 0;
 $18 = $6 + 24 | 0;
 $19 = $6 + 4 | 0;
 $20 = $6 + 36 | 0;
 $21 = $6 + 48 | 0;
 $22 = $6 + 64 | 0;
 $23 = $2 + 4 | 0;
 $24 = $3 + 4 | 0;
 $$075 = 0;
 $30 = 0;
 while (1) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 81707, 2);
  $29 = (HEAP8[$7 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2;
  HEAP32[$vararg_buffer >> 2] = $30;
  _snprintf($$byval_copy5, 64, $29, $vararg_buffer) | 0;
  HEAP32[$$byval_copy >> 2] = 0;
  HEAP32[$$byval_copy + 4 >> 2] = 0;
  HEAP32[$$byval_copy + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($$byval_copy, $$byval_copy5, _strlen($$byval_copy5) | 0);
  $32 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($$byval_copy, 0, 82142) | 0;
  HEAP32[$5 >> 2] = HEAP32[$32 >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
  HEAP32[$32 >> 2] = 0;
  HEAP32[$32 + 4 >> 2] = 0;
  HEAP32[$32 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$byval_copy);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  if (__ZNK9TdfParser12SectionExistERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1 | 0, $5 | 0) | 0) {
   __ZN8TeamBaseC2Ev($6);
   $35 = (HEAP32[$4 >> 2] | 0) % 10 | 0;
   HEAP8[$8 >> 0] = HEAP8[82840 + ($35 << 2) >> 0] | 0;
   HEAP8[$9 >> 0] = HEAP8[82840 + ($35 << 2) + 1 >> 0] | 0;
   HEAP8[$10 >> 0] = HEAP8[82840 + ($35 << 2) + 2 >> 0] | 0;
   HEAP8[$11 >> 0] = -1;
   $42 = __ZNK9TdfParser12GetAllValuesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1 | 0, $5 | 0) | 0;
   $43 = $42 + 12 | 0;
   $44 = HEAP32[$43 >> 2] | 0;
   L5 : do if (!$44) $$0$lcssa$i = 0; else {
    $47 = HEAP32[$42 + 4 >> 2] | 0;
    $$04$i = 0;
    while (1) {
     if ((HEAP8[$47 + $$04$i >> 0] | 0) == 2) {
      $$0$lcssa$i = $$04$i;
      break L5;
     }
     $51 = $$04$i + 1 | 0;
     if ($51 >>> 0 < $44 >>> 0) $$04$i = $51; else {
      $$0$lcssa$i = $51;
      break;
     }
    }
   } while (0);
   if (($$0$lcssa$i | 0) != ($44 | 0)) {
    $54 = $42 + 8 | 0;
    $55 = $42 + 4 | 0;
    $$sroa$6$074 = $$0$lcssa$i;
    while (1) {
     $79 = HEAP32[$54 >> 2] | 0;
     __ZN8TeamBase8SetValueERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($6, $79 + ($$sroa$6$074 * 24 | 0) | 0, $79 + ($$sroa$6$074 * 24 | 0) + 12 | 0);
     $82 = HEAP32[$43 >> 2] | 0;
     $83 = HEAP32[$55 >> 2] | 0;
     $84 = $$sroa$6$074;
     do {
      $84 = $84 + 1 | 0;
      if ($84 >>> 0 >= $82 >>> 0) break;
     } while ((HEAP8[$83 + $84 >> 0] | 0) != 2);
     if (($84 | 0) == ($44 | 0)) break; else $$sroa$6$074 = $84;
    }
   }
   $58 = HEAP32[$12 >> 2] | 0;
   if (($58 | 0) == (HEAP32[$13 >> 2] | 0)) __ZNSt3__26vectorI8TeamBaseNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($14, $6); else {
    HEAP32[$58 >> 2] = 68100;
    $61 = $58 + 4 | 0;
    HEAP32[$61 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$61 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
    HEAP32[$61 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
    HEAP32[$61 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
    HEAP32[$61 + 16 >> 2] = HEAP32[$19 + 16 >> 2];
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($58 + 24 | 0, $18);
    $63 = $58 + 36 | 0;
    HEAP32[$63 >> 2] = HEAP32[$20 >> 2];
    HEAP32[$63 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
    HEAP32[$63 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
    $64 = $58 + 48 | 0;
    $65 = $58 + 52 | 0;
    HEAP32[$65 >> 2] = 0;
    HEAP32[$65 + 4 >> 2] = 0;
    HEAP32[$65 + 8 >> 2] = 0;
    HEAP32[$65 + 12 >> 2] = 0;
    HEAP32[$58 + 68 >> 2] = -1;
    HEAP32[$58 + 72 >> 2] = 0;
    __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($64, HEAP32[$22 >> 2] | 0);
    $69 = HEAP32[$16 >> 2] | 0;
    L23 : do if (!$69) $$0$lcssa$i$i$i$i$i$i$i$i = 0; else {
     $71 = HEAP32[$17 >> 2] | 0;
     $$04$i$i$i$i$i$i$i$i = 0;
     while (1) {
      if ((HEAP8[$71 + $$04$i$i$i$i$i$i$i$i >> 0] | 0) == 2) {
       $$0$lcssa$i$i$i$i$i$i$i$i = $$04$i$i$i$i$i$i$i$i;
       break L23;
      }
      $75 = $$04$i$i$i$i$i$i$i$i + 1 | 0;
      if ($75 >>> 0 < $69 >>> 0) $$04$i$i$i$i$i$i$i$i = $75; else {
       $$0$lcssa$i$i$i$i$i$i$i$i = $75;
       break;
      }
     }
    } while (0);
    HEAP32[$2 >> 2] = $21;
    HEAP32[$23 >> 2] = $$0$lcssa$i$i$i$i$i$i$i$i;
    HEAP32[$3 >> 2] = $21;
    HEAP32[$24 >> 2] = $69;
    HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
    HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
    HEAP32[$$byval_copy5 >> 2] = HEAP32[$3 >> 2];
    HEAP32[$$byval_copy5 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE6insertENSD_14const_iteratorESE_($64, $$byval_copy, $$byval_copy5);
    HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 76;
   }
   $90 = $$075 + 1 | 0;
   HEAP32[(__ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($15, $4) | 0) >> 2] = $$075;
   HEAP32[$6 >> 2] = 68100;
   $91 = HEAP32[$16 >> 2] | 0;
   $93 = HEAP32[$17 >> 2] | 0;
   if (!$91) $$lcssa$i$i = $93; else {
    $$05$i$i = 0;
    $114 = $91;
    $95 = $93;
    while (1) {
     if ((HEAP8[$95 + $$05$i$i >> 0] | 0) == 2) {
      $98 = HEAP32[$$pre8$i$i >> 2] | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($98 + ($$05$i$i * 24 | 0) + 12 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($98 + ($$05$i$i * 24 | 0) | 0);
      $103 = HEAP32[$16 >> 2] | 0;
      $115 = HEAP32[$17 >> 2] | 0;
     } else {
      $103 = $114;
      $115 = $95;
     }
     $$05$i$i = $$05$i$i + 1 | 0;
     if ($$05$i$i >>> 0 >= $103 >>> 0) {
      $$lcssa$i$i = $115;
      break;
     } else {
      $114 = $103;
      $95 = $115;
     }
    }
   }
   _free($$lcssa$i$i);
   _free(HEAP32[$$pre8$i$i >> 2] | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
   $$1 = $90;
  } else $$1 = $$075;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $30 = (HEAP32[$4 >> 2] | 0) + 1 | 0;
  HEAP32[$4 >> 2] = $30;
  if (($30 | 0) >= 255) break; else $$075 = $$1;
 }
 HEAP32[$$byval_copy5 >> 2] = 0;
 HEAP32[$$byval_copy >> 2] = 0;
 HEAP32[$$byval_copy + 4 >> 2] = 0;
 HEAP32[$$byval_copy + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($$byval_copy, 82128, 13);
 $25 = __ZNK9TdfParser8GetValueIjEEbRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($1, $$byval_copy5, $$byval_copy) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$byval_copy);
 if (!$25) {
  STACKTOP = sp;
  return;
 }
 $111 = ((HEAP32[$12 >> 2] | 0) - (HEAP32[$14 >> 2] | 0) | 0) / 76 | 0;
 $112 = HEAP32[$$byval_copy5 >> 2] | 0;
 if (($111 | 0) == ($112 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$vararg_buffer1 >> 2] = $111;
 HEAP32[$vararg_buffer1 + 4 >> 2] = $112;
 _log_frontend_record(40, 114224, 82152, $vararg_buffer1);
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i41 = 0, $$0$i$i$i47 = 0, $$0$i$i$i53 = 0, $$0$i$i$i59 = 0, $$0$i$i$i65 = 0, $$0$i$i$i71 = 0, $$0$i$i$i77 = 0, $$pre$phi$i$i39Z2D = 0, $$pre$phi$i$i45Z2D = 0, $$pre$phi$i$i51Z2D = 0, $$pre$phi$i$i57Z2D = 0, $$pre$phi$i$i63Z2D = 0, $$pre$phi$i$i69Z2D = 0, $$pre$phi$i$i75Z2D = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $104 = 0, $11 = 0, $114 = 0, $15 = 0, $19 = 0, $29 = 0, $47 = 0, $57 = 0, $68 = 0, $72 = 0, $76 = 0, $86 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $10 = sp;
 if ($0) {
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 111888) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 44 >> 2] & 63]($10, $11);
  $15 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $15;
  HEAP8[$2 + 1 >> 0] = $15 >> 8;
  HEAP8[$2 + 2 >> 0] = $15 >> 16;
  HEAP8[$2 + 3 >> 0] = $15 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] & 63]($10, $11);
  $19 = $8 + 11 | 0;
  if ((HEAP8[$19 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$8 >> 2] >> 0] = 0;
   HEAP32[$8 + 4 >> 2] = 0;
   $$pre$phi$i$iZ2D = $8;
  } else {
   HEAP8[$8 >> 0] = 0;
   HEAP8[$19 >> 0] = 0;
   $$pre$phi$i$iZ2D = $8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
  HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i = 0;
  while (1) {
   if (($$0$i$i$i | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i << 2) >> 2] = 0;
   $$0$i$i$i = $$0$i$i$i + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($10, $11);
  $29 = $7 + 11 | 0;
  if ((HEAP8[$29 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$7 >> 2] >> 0] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i39Z2D = $7;
  } else {
   HEAP8[$7 >> 0] = 0;
   HEAP8[$29 >> 0] = 0;
   $$pre$phi$i$i39Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
  HEAP32[$$pre$phi$i$i39Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i39Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i39Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i41 = 0;
  while (1) {
   if (($$0$i$i$i41 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i41 << 2) >> 2] = 0;
   $$0$i$i$i41 = $$0$i$i$i41 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  HEAP8[$3 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 255]($11) | 0;
  HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 20 >> 2] & 63]($10, $11);
  $47 = $5 + 11 | 0;
  if ((HEAP8[$47 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$5 >> 2] >> 0] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$i45Z2D = $5;
  } else {
   HEAP8[$5 >> 0] = 0;
   HEAP8[$47 >> 0] = 0;
   $$pre$phi$i$i45Z2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($5, 0);
  HEAP32[$$pre$phi$i$i45Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i45Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i45Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i47 = 0;
  while (1) {
   if (($$0$i$i$i47 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i47 << 2) >> 2] = 0;
   $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] & 63]($10, $11);
  $57 = $6 + 11 | 0;
  if ((HEAP8[$57 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$6 >> 2] >> 0] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i51Z2D = $6;
  } else {
   HEAP8[$6 >> 0] = 0;
   HEAP8[$57 >> 0] = 0;
   $$pre$phi$i$i51Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i51Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i51Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i51Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i53 = 0;
  while (1) {
   if (($$0$i$i$i53 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i53 << 2) >> 2] = 0;
   $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 255]($11) | 0;
 } else {
  $68 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 111880) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$68 >> 2] | 0) + 44 >> 2] & 63]($10, $68);
  $72 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $72;
  HEAP8[$2 + 1 >> 0] = $72 >> 8;
  HEAP8[$2 + 2 >> 0] = $72 >> 16;
  HEAP8[$2 + 3 >> 0] = $72 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$68 >> 2] | 0) + 32 >> 2] & 63]($10, $68);
  $76 = $8 + 11 | 0;
  if ((HEAP8[$76 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$8 >> 2] >> 0] = 0;
   HEAP32[$8 + 4 >> 2] = 0;
   $$pre$phi$i$i57Z2D = $8;
  } else {
   HEAP8[$8 >> 0] = 0;
   HEAP8[$76 >> 0] = 0;
   $$pre$phi$i$i57Z2D = $8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($8, 0);
  HEAP32[$$pre$phi$i$i57Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i59 = 0;
  while (1) {
   if (($$0$i$i$i59 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i59 << 2) >> 2] = 0;
   $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$68 >> 2] | 0) + 28 >> 2] & 63]($10, $68);
  $86 = $7 + 11 | 0;
  if ((HEAP8[$86 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$7 >> 2] >> 0] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i63Z2D = $7;
  } else {
   HEAP8[$7 >> 0] = 0;
   HEAP8[$86 >> 0] = 0;
   $$pre$phi$i$i63Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
  HEAP32[$$pre$phi$i$i63Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i63Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i63Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i65 = 0;
  while (1) {
   if (($$0$i$i$i65 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i65 << 2) >> 2] = 0;
   $$0$i$i$i65 = $$0$i$i$i65 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  HEAP8[$3 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$68 >> 2] | 0) + 12 >> 2] & 255]($68) | 0;
  HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$68 >> 2] | 0) + 16 >> 2] & 255]($68) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$68 >> 2] | 0) + 20 >> 2] & 63]($10, $68);
  $104 = $5 + 11 | 0;
  if ((HEAP8[$104 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$5 >> 2] >> 0] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$i69Z2D = $5;
  } else {
   HEAP8[$5 >> 0] = 0;
   HEAP8[$104 >> 0] = 0;
   $$pre$phi$i$i69Z2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($5, 0);
  HEAP32[$$pre$phi$i$i69Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i69Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i69Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i71 = 0;
  while (1) {
   if (($$0$i$i$i71 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i71 << 2) >> 2] = 0;
   $$0$i$i$i71 = $$0$i$i$i71 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$68 >> 2] | 0) + 24 >> 2] & 63]($10, $68);
  $114 = $6 + 11 | 0;
  if ((HEAP8[$114 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$6 >> 2] >> 0] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i75Z2D = $6;
  } else {
   HEAP8[$6 >> 0] = 0;
   HEAP8[$114 >> 0] = 0;
   $$pre$phi$i$i75Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i75Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i75Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i75Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i77 = 0;
  while (1) {
   if (($$0$i$i$i77 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i77 << 2) >> 2] = 0;
   $$0$i$i$i77 = $$0$i$i$i77 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$68 >> 2] | 0) + 36 >> 2] & 255]($68) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}
function __ZNSt3__27__sort4IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_S6_T_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i24 = 0, $$0$i27 = 0, $105 = 0, $111 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $136 = 0, $14 = 0, $141 = 0, $142 = 0, $19 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $49 = 0, $5 = 0, $50 = 0, $59 = 0, $6 = 0, $60 = 0, $65 = 0, $7 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $90 = 0, $95 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $5 = sp;
 $6 = __ZNSt3__27__sort3IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_T_($0, $1, $2, $4) | 0;
 $7 = $3 + 60 | 0;
 $13 = $2 + 60 | 0;
 $14 = $13 + 11 | 0;
 $19 = _strcmp((HEAP8[$7 + 11 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7, (HEAP8[$14 >> 0] | 0) < 0 ? HEAP32[$13 >> 2] | 0 : $13) | 0;
 if (!$19) $$0$i = _strcmp((HEAP8[$3 + 11 >> 0] | 0) < 0 ? HEAP32[$3 >> 2] | 0 : $3, (HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) | 0; else $$0$i = $19;
 if (($$0$i | 0) >= 0) {
  $$0 = $6;
  STACKTOP = sp;
  return $$0 | 0;
 };
 HEAP32[$5 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $33 = $5 + 12 | 0;
 $34 = $2 + 12 | 0;
 HEAP32[$33 >> 2] = HEAP32[$34 >> 2];
 HEAP32[$33 + 4 >> 2] = HEAP32[$34 + 4 >> 2];
 HEAP32[$33 + 8 >> 2] = HEAP32[$34 + 8 >> 2];
 HEAP32[$34 >> 2] = 0;
 HEAP32[$34 + 4 >> 2] = 0;
 HEAP32[$34 + 8 >> 2] = 0;
 $35 = $5 + 24 | 0;
 $36 = $2 + 24 | 0;
 HEAP32[$35 >> 2] = HEAP32[$36 >> 2];
 HEAP32[$35 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
 HEAP32[$35 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
 HEAP32[$36 >> 2] = 0;
 HEAP32[$36 + 4 >> 2] = 0;
 HEAP32[$36 + 8 >> 2] = 0;
 $37 = $5 + 36 | 0;
 $38 = $2 + 36 | 0;
 HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
 HEAP32[$37 + 4 >> 2] = HEAP32[$38 + 4 >> 2];
 HEAP32[$37 + 8 >> 2] = HEAP32[$38 + 8 >> 2];
 HEAP32[$38 >> 2] = 0;
 HEAP32[$38 + 4 >> 2] = 0;
 HEAP32[$38 + 8 >> 2] = 0;
 $39 = $5 + 48 | 0;
 $40 = $2 + 48 | 0;
 HEAP32[$39 >> 2] = HEAP32[$40 >> 2];
 HEAP32[$39 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
 HEAP32[$39 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
 HEAP32[$40 >> 2] = 0;
 HEAP32[$40 + 4 >> 2] = 0;
 HEAP32[$40 + 8 >> 2] = 0;
 $41 = $5 + 60 | 0;
 HEAP32[$41 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$41 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
 HEAP32[$41 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $44 = $2 + 72 | 0;
 $49 = HEAP32[$44 + 4 >> 2] | 0;
 $50 = $5 + 72 | 0;
 HEAP32[$50 >> 2] = HEAP32[$44 >> 2];
 HEAP32[$50 + 4 >> 2] = $49;
 __ZN6google19CommandLineFlagInfoaSEOS0_($2, $3) | 0;
 __ZN6google19CommandLineFlagInfoaSEOS0_($3, $5) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 $59 = $1 + 60 | 0;
 $60 = $59 + 11 | 0;
 $65 = _strcmp((HEAP8[$14 >> 0] | 0) < 0 ? HEAP32[$13 >> 2] | 0 : $13, (HEAP8[$60 >> 0] | 0) < 0 ? HEAP32[$59 >> 2] | 0 : $59) | 0;
 if (!$65) $$0$i24 = _strcmp((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2, (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1) | 0; else $$0$i24 = $65;
 if (($$0$i24 | 0) >= 0) {
  $$0 = $6 + 1 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 };
 HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $79 = $5 + 12 | 0;
 $80 = $1 + 12 | 0;
 HEAP32[$79 >> 2] = HEAP32[$80 >> 2];
 HEAP32[$79 + 4 >> 2] = HEAP32[$80 + 4 >> 2];
 HEAP32[$79 + 8 >> 2] = HEAP32[$80 + 8 >> 2];
 HEAP32[$80 >> 2] = 0;
 HEAP32[$80 + 4 >> 2] = 0;
 HEAP32[$80 + 8 >> 2] = 0;
 $81 = $5 + 24 | 0;
 $82 = $1 + 24 | 0;
 HEAP32[$81 >> 2] = HEAP32[$82 >> 2];
 HEAP32[$81 + 4 >> 2] = HEAP32[$82 + 4 >> 2];
 HEAP32[$81 + 8 >> 2] = HEAP32[$82 + 8 >> 2];
 HEAP32[$82 >> 2] = 0;
 HEAP32[$82 + 4 >> 2] = 0;
 HEAP32[$82 + 8 >> 2] = 0;
 $83 = $5 + 36 | 0;
 $84 = $1 + 36 | 0;
 HEAP32[$83 >> 2] = HEAP32[$84 >> 2];
 HEAP32[$83 + 4 >> 2] = HEAP32[$84 + 4 >> 2];
 HEAP32[$83 + 8 >> 2] = HEAP32[$84 + 8 >> 2];
 HEAP32[$84 >> 2] = 0;
 HEAP32[$84 + 4 >> 2] = 0;
 HEAP32[$84 + 8 >> 2] = 0;
 $85 = $5 + 48 | 0;
 $86 = $1 + 48 | 0;
 HEAP32[$85 >> 2] = HEAP32[$86 >> 2];
 HEAP32[$85 + 4 >> 2] = HEAP32[$86 + 4 >> 2];
 HEAP32[$85 + 8 >> 2] = HEAP32[$86 + 8 >> 2];
 HEAP32[$86 >> 2] = 0;
 HEAP32[$86 + 4 >> 2] = 0;
 HEAP32[$86 + 8 >> 2] = 0;
 $87 = $5 + 60 | 0;
 HEAP32[$87 >> 2] = HEAP32[$59 >> 2];
 HEAP32[$87 + 4 >> 2] = HEAP32[$59 + 4 >> 2];
 HEAP32[$87 + 8 >> 2] = HEAP32[$59 + 8 >> 2];
 HEAP32[$59 >> 2] = 0;
 HEAP32[$59 + 4 >> 2] = 0;
 HEAP32[$59 + 8 >> 2] = 0;
 $90 = $1 + 72 | 0;
 $95 = HEAP32[$90 + 4 >> 2] | 0;
 $96 = $5 + 72 | 0;
 HEAP32[$96 >> 2] = HEAP32[$90 >> 2];
 HEAP32[$96 + 4 >> 2] = $95;
 __ZN6google19CommandLineFlagInfoaSEOS0_($1, $2) | 0;
 __ZN6google19CommandLineFlagInfoaSEOS0_($2, $5) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($85);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($83);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($79);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 $105 = $0 + 60 | 0;
 $111 = _strcmp((HEAP8[$60 >> 0] | 0) < 0 ? HEAP32[$59 >> 2] | 0 : $59, (HEAP8[$105 + 11 >> 0] | 0) < 0 ? HEAP32[$105 >> 2] | 0 : $105) | 0;
 if (!$111) $$0$i27 = _strcmp((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, (HEAP8[$0 + 11 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0) | 0; else $$0$i27 = $111;
 if (($$0$i27 | 0) >= 0) {
  $$0 = $6 + 2 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 };
 HEAP32[$5 >> 2] = HEAP32[$0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $125 = $5 + 12 | 0;
 $126 = $0 + 12 | 0;
 HEAP32[$125 >> 2] = HEAP32[$126 >> 2];
 HEAP32[$125 + 4 >> 2] = HEAP32[$126 + 4 >> 2];
 HEAP32[$125 + 8 >> 2] = HEAP32[$126 + 8 >> 2];
 HEAP32[$126 >> 2] = 0;
 HEAP32[$126 + 4 >> 2] = 0;
 HEAP32[$126 + 8 >> 2] = 0;
 $127 = $5 + 24 | 0;
 $128 = $0 + 24 | 0;
 HEAP32[$127 >> 2] = HEAP32[$128 >> 2];
 HEAP32[$127 + 4 >> 2] = HEAP32[$128 + 4 >> 2];
 HEAP32[$127 + 8 >> 2] = HEAP32[$128 + 8 >> 2];
 HEAP32[$128 >> 2] = 0;
 HEAP32[$128 + 4 >> 2] = 0;
 HEAP32[$128 + 8 >> 2] = 0;
 $129 = $5 + 36 | 0;
 $130 = $0 + 36 | 0;
 HEAP32[$129 >> 2] = HEAP32[$130 >> 2];
 HEAP32[$129 + 4 >> 2] = HEAP32[$130 + 4 >> 2];
 HEAP32[$129 + 8 >> 2] = HEAP32[$130 + 8 >> 2];
 HEAP32[$130 >> 2] = 0;
 HEAP32[$130 + 4 >> 2] = 0;
 HEAP32[$130 + 8 >> 2] = 0;
 $131 = $5 + 48 | 0;
 $132 = $0 + 48 | 0;
 HEAP32[$131 >> 2] = HEAP32[$132 >> 2];
 HEAP32[$131 + 4 >> 2] = HEAP32[$132 + 4 >> 2];
 HEAP32[$131 + 8 >> 2] = HEAP32[$132 + 8 >> 2];
 HEAP32[$132 >> 2] = 0;
 HEAP32[$132 + 4 >> 2] = 0;
 HEAP32[$132 + 8 >> 2] = 0;
 $133 = $5 + 60 | 0;
 HEAP32[$133 >> 2] = HEAP32[$105 >> 2];
 HEAP32[$133 + 4 >> 2] = HEAP32[$105 + 4 >> 2];
 HEAP32[$133 + 8 >> 2] = HEAP32[$105 + 8 >> 2];
 HEAP32[$105 >> 2] = 0;
 HEAP32[$105 + 4 >> 2] = 0;
 HEAP32[$105 + 8 >> 2] = 0;
 $136 = $0 + 72 | 0;
 $141 = HEAP32[$136 + 4 >> 2] | 0;
 $142 = $5 + 72 | 0;
 HEAP32[$142 >> 2] = HEAP32[$136 >> 2];
 HEAP32[$142 + 4 >> 2] = $141;
 __ZN6google19CommandLineFlagInfoaSEOS0_($0, $1) | 0;
 __ZN6google19CommandLineFlagInfoaSEOS0_($1, $5) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($133);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($131);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($129);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($127);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($125);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 $$0 = $6 + 3 | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i45 = 0, $$0$i$i$i48 = 0, $$0$i$i$i51 = 0, $$0$i$i$i55 = 0, $$0$i$i$i59 = 0, $$0$i$i$i65 = 0, $$0$i$i$i69 = 0, $$pre$phi$i$i63Z2D = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $11 = 0, $117 = 0, $128 = 0, $15 = 0, $20 = 0, $30 = 0, $35 = 0, $53 = 0, $64 = 0, $75 = 0, $79 = 0, $84 = 0, $94 = 0, $99 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $10 = sp;
 if ($0) {
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 111904) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 44 >> 2] & 63]($10, $11);
   $15 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $15;
   HEAP8[$3 + 1 >> 0] = $15 >> 8;
   HEAP8[$3 + 2 >> 0] = $15 >> 16;
   HEAP8[$3 + 3 >> 0] = $15 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] & 63]($10, $11);
   $20 = $8 + 8 + 3 | 0;
   if ((HEAP8[$20 >> 0] | 0) < 0) {
    HEAP32[HEAP32[$8 >> 2] >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$8 >> 2] = 0;
    HEAP8[$20 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 40 >> 2] & 63]($10, $11);
   $30 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $30;
   HEAP8[$3 + 1 >> 0] = $30 >> 8;
   HEAP8[$3 + 2 >> 0] = $30 >> 16;
   HEAP8[$3 + 3 >> 0] = $30 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($10, $11);
   $35 = $8 + 8 + 3 | 0;
   if ((HEAP8[$35 >> 0] | 0) < 0) {
    HEAP32[HEAP32[$8 >> 2] >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$8 >> 2] = 0;
    HEAP8[$35 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i45 = 0;
   while (1) {
    if (($$0$i$i$i45 | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i45 << 2) >> 2] = 0;
    $$0$i$i$i45 = $$0$i$i$i45 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  }
  HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 255]($11) | 0;
  HEAP32[$5 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 20 >> 2] & 63]($10, $11);
  $53 = $6 + 11 | 0;
  if ((HEAP8[$53 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$6 >> 2] >> 0] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$iZ2D = $6;
  } else {
   HEAP8[$6 >> 0] = 0;
   HEAP8[$53 >> 0] = 0;
   $$pre$phi$i$iZ2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i48 = 0;
  while (1) {
   if (($$0$i$i$i48 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i48 << 2) >> 2] = 0;
   $$0$i$i$i48 = $$0$i$i$i48 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] & 63]($10, $11);
  $64 = $7 + 8 + 3 | 0;
  if ((HEAP8[$64 >> 0] | 0) < 0) {
   HEAP32[HEAP32[$7 >> 2] >> 2] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$7 >> 2] = 0;
   HEAP8[$64 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i51 = 0;
  while (1) {
   if (($$0$i$i$i51 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i51 << 2) >> 2] = 0;
   $$0$i$i$i51 = $$0$i$i$i51 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 255]($11) | 0;
 } else {
  $75 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 111896) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 44 >> 2] & 63]($10, $75);
   $79 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $79;
   HEAP8[$3 + 1 >> 0] = $79 >> 8;
   HEAP8[$3 + 2 >> 0] = $79 >> 16;
   HEAP8[$3 + 3 >> 0] = $79 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 32 >> 2] & 63]($10, $75);
   $84 = $8 + 8 + 3 | 0;
   if ((HEAP8[$84 >> 0] | 0) < 0) {
    HEAP32[HEAP32[$8 >> 2] >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$8 >> 2] = 0;
    HEAP8[$84 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i55 = 0;
   while (1) {
    if (($$0$i$i$i55 | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i55 << 2) >> 2] = 0;
    $$0$i$i$i55 = $$0$i$i$i55 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 40 >> 2] & 63]($10, $75);
   $94 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $94;
   HEAP8[$3 + 1 >> 0] = $94 >> 8;
   HEAP8[$3 + 2 >> 0] = $94 >> 16;
   HEAP8[$3 + 3 >> 0] = $94 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 28 >> 2] & 63]($10, $75);
   $99 = $8 + 8 + 3 | 0;
   if ((HEAP8[$99 >> 0] | 0) < 0) {
    HEAP32[HEAP32[$8 >> 2] >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$8 >> 2] = 0;
    HEAP8[$99 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i59 = 0;
   while (1) {
    if (($$0$i$i$i59 | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i59 << 2) >> 2] = 0;
    $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  }
  HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$75 >> 2] | 0) + 12 >> 2] & 255]($75) | 0;
  HEAP32[$5 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$75 >> 2] | 0) + 16 >> 2] & 255]($75) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 20 >> 2] & 63]($10, $75);
  $117 = $6 + 11 | 0;
  if ((HEAP8[$117 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$6 >> 2] >> 0] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i63Z2D = $6;
  } else {
   HEAP8[$6 >> 0] = 0;
   HEAP8[$117 >> 0] = 0;
   $$pre$phi$i$i63Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($6, 0);
  HEAP32[$$pre$phi$i$i63Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i63Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i63Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i65 = 0;
  while (1) {
   if (($$0$i$i$i65 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i65 << 2) >> 2] = 0;
   $$0$i$i$i65 = $$0$i$i$i65 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 24 >> 2] & 63]($10, $75);
  $128 = $7 + 8 + 3 | 0;
  if ((HEAP8[$128 >> 0] | 0) < 0) {
   HEAP32[HEAP32[$7 >> 2] >> 2] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$7 >> 2] = 0;
   HEAP8[$128 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i69 = 0;
  while (1) {
   if (($$0$i$i$i69 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i69 << 2) >> 2] = 0;
   $$0$i$i$i69 = $$0$i$i$i69 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$75 >> 2] | 0) + 36 >> 2] & 255]($75) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __Z12luaD_precallP9lua_StateP10lua_TValuei($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa$i = 0, $$0102 = 0, $$0104118 = 0, $$0105 = 0, $$03$i = 0, $$042$i = 0, $$1 = 0, $$1103 = 0, $$idx$val = 0, $$lcssa = 0, $$lcssa$i = 0, $$pre$i107 = 0, $$pre$phi126Z2D = 0, $$pre$phiZ2D = 0, $$pre124 = 0, $$sink = 0, $$sink116 = 0, $10 = 0, $100 = 0, $103 = 0, $104 = 0, $107 = 0, $11 = 0, $113 = 0, $114 = 0, $117 = 0, $118 = 0, $120 = 0, $121 = 0, $122 = 0, $129 = 0, $134 = 0, $138 = 0, $14 = 0, $144 = 0, $149 = 0, $15 = 0, $150 = 0, $154 = 0, $166 = 0, $171 = 0, $175 = 0, $176 = 0, $179 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $191 = 0, $196 = 0, $200 = 0, $202 = 0, $204 = 0, $220 = 0, $27 = 0, $30 = 0, $37 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $54 = 0, $57 = 0, $6 = 0, $60 = 0, $62 = 0, $66 = 0, $7 = 0, $71 = 0, $75 = 0, $80 = 0, $82 = 0, $85 = 0, $86 = 0, $87 = 0, $89 = 0, $91 = 0, $94 = 0, $95 = 0, $96 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0, $$042$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if ((HEAP32[$1 + 4 >> 2] | 0) == 6) {
  $$pre124 = $0 + 32 | 0;
  $$0102 = $1;
  $$pre$phi126Z2D = $$pre124;
  $$pre$phiZ2D = $$pre124;
 } else {
  $6 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $1, 16) | 0;
  $7 = $0 + 32 | 0;
  $10 = $1 - (HEAP32[$7 >> 2] | 0) | 0;
  $11 = $6 + 4 | 0;
  if ((HEAP32[$11 >> 2] | 0) != 6) __Z14luaG_typeerrorP9lua_StatePK10lua_TValuePKc($0, $1, 87059);
  $14 = $0 + 8 | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  if ($15 >>> 0 > $1 >>> 0) {
   $$042$i = $15;
   do {
    $$042$i$looptemp = $$042$i;
    $$042$i = $$042$i + -8 | 0;
    HEAP32[$$042$i$looptemp >> 2] = HEAP32[$$042$i >> 2];
    HEAP32[$$042$i$looptemp + 4 >> 2] = HEAP32[$$042$i$looptemp + -4 >> 2];
   } while ($$042$i >>> 0 > $1 >>> 0);
   $27 = HEAP32[$14 >> 2] | 0;
  } else $27 = $15;
  do if (((HEAP32[$0 + 28 >> 2] | 0) - $27 | 0) < 9) {
   $30 = HEAP32[$0 + 44 >> 2] | 0;
   if (($30 | 0) < 1) {
    __Z17luaD_reallocstackP9lua_Statei($0, $30 + 1 | 0);
    break;
   } else {
    __Z17luaD_reallocstackP9lua_Statei($0, $30 << 1);
    break;
   }
  } while (0);
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 8;
  $37 = (HEAP32[$7 >> 2] | 0) + $10 | 0;
  HEAP32[$37 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$37 + 4 >> 2] = HEAP32[$11 >> 2];
  $$0102 = $37;
  $$pre$phi126Z2D = $7;
  $$pre$phiZ2D = $7;
 }
 $43 = $$0102 - (HEAP32[$$pre$phi126Z2D >> 2] | 0) | 0;
 $44 = HEAP32[$$0102 >> 2] | 0;
 $45 = $0 + 24 | 0;
 $47 = $0 + 20 | 0;
 HEAP32[(HEAP32[$47 >> 2] | 0) + 12 >> 2] = HEAP32[$45 >> 2];
 if (HEAP8[$44 + 6 >> 0] | 0) {
  $166 = $0 + 8 | 0;
  do if (((HEAP32[$0 + 28 >> 2] | 0) - (HEAP32[$166 >> 2] | 0) | 0) < 161) {
   $171 = HEAP32[$0 + 44 >> 2] | 0;
   if (($171 | 0) < 20) {
    __Z17luaD_reallocstackP9lua_Statei($0, $171 + 20 | 0);
    break;
   } else {
    __Z17luaD_reallocstackP9lua_Statei($0, $171 << 1);
    break;
   }
  } while (0);
  $175 = HEAP32[$47 >> 2] | 0;
  $176 = $0 + 36 | 0;
  if (($175 | 0) == (HEAP32[$176 >> 2] | 0)) {
   $179 = $0 + 48 | 0;
   $180 = HEAP32[$179 >> 2] | 0;
   if (($180 | 0) > 2e4) __Z10luaD_throwP9lua_Statei($0, 5);
   $182 = $180 << 1;
   $183 = $0 + 40 | 0;
   $184 = HEAP32[$183 >> 2] | 0;
   if (($182 | 1) >>> 0 < 178956971) $191 = __Z13luaM_realloc_P9lua_StatePvjj($0, $184, $180 * 24 | 0, $180 * 48 | 0) | 0; else $191 = __Z11luaM_toobigP9lua_State($0) | 0;
   HEAP32[$183 >> 2] = $191;
   HEAP32[$179 >> 2] = $182;
   $196 = $191 + ((((HEAP32[$47 >> 2] | 0) - $184 | 0) / 24 | 0) * 24 | 0) | 0;
   HEAP32[$47 >> 2] = $196;
   HEAP32[$176 >> 2] = $191 + ($182 * 24 | 0) + -24;
   if (($182 | 0) > 2e4) {
    __Z13luaG_runerrorP9lua_StatePKcz($0, 87064, $vararg_buffer1);
    $$sink116 = HEAP32[$47 >> 2] | 0;
   } else $$sink116 = $196;
  } else $$sink116 = $175;
  $200 = $$sink116 + 24 | 0;
  HEAP32[$47 >> 2] = $200;
  $202 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + $43 | 0;
  HEAP32[$$sink116 + 28 >> 2] = $202;
  $204 = $202 + 8 | 0;
  HEAP32[$200 >> 2] = $204;
  HEAP32[$0 + 12 >> 2] = $204;
  HEAP32[$$sink116 + 32 >> 2] = (HEAP32[$166 >> 2] | 0) + 160;
  HEAP32[$$sink116 + 40 >> 2] = $2;
  if (HEAP8[$0 + 56 >> 0] & 1) __Z13luaD_callhookP9lua_Stateii($0, 0, -1);
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  $220 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[HEAP32[(HEAP32[$47 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 16 >> 2] & 255]($0) | 0;
  __Z12LuaMutexLockP9lua_State($0 | 0);
  if (($220 | 0) < 0) {
   $$1 = 2;
   STACKTOP = sp;
   return $$1 | 0;
  }
  __Z12luaD_poscallP9lua_StateP10lua_TValue($0, (HEAP32[$166 >> 2] | 0) + (0 - $220 << 3) | 0) | 0;
  $$1 = 1;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $54 = HEAP32[$44 + 16 >> 2] | 0;
 $57 = $0 + 8 | 0;
 $60 = $54 + 75 | 0;
 $62 = HEAPU8[$60 >> 0] | 0;
 do if (((HEAP32[$0 + 28 >> 2] | 0) - (HEAP32[$57 >> 2] | 0) | 0) <= ($62 << 3 | 0)) {
  $66 = HEAP32[$0 + 44 >> 2] | 0;
  if (($66 | 0) < ($62 | 0)) {
   __Z17luaD_reallocstackP9lua_Statei($0, $66 + $62 | 0);
   break;
  } else {
   __Z17luaD_reallocstackP9lua_Statei($0, $66 << 1);
   break;
  }
 } while (0);
 $71 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + $43 | 0;
 if (!(HEAP8[$54 + 74 >> 0] | 0)) {
  $75 = $71 + 8 | 0;
  $80 = $75 + (HEAPU8[$54 + 73 >> 0] << 3) | 0;
  if ((HEAP32[$57 >> 2] | 0) >>> 0 > $80 >>> 0) {
   HEAP32[$57 >> 2] = $80;
   $$0105 = $75;
   $$1103 = $71;
  } else {
   $$0105 = $75;
   $$1103 = $71;
  }
 } else {
  $82 = HEAP32[$57 >> 2] | 0;
  $85 = $82 - $71 >> 3;
  $86 = $85 + -1 | 0;
  $$idx$val = HEAP8[$54 + 73 >> 0] | 0;
  $87 = $$idx$val & 255;
  $89 = $82;
  if (($87 | 0) < ($85 | 0)) {
   $$0$lcssa$i = $86;
   $$lcssa$i = $89;
  } else {
   $$03$i = $86;
   $91 = $89;
   while (1) {
    HEAP32[$57 >> 2] = $91 + 8;
    HEAP32[$91 + 4 >> 2] = 0;
    $$03$i = $$03$i + 1 | 0;
    $94 = HEAP32[$57 >> 2] | 0;
    if (($$03$i | 0) == ($87 | 0)) {
     $$0$lcssa$i = $87;
     $$lcssa$i = $94;
     break;
    } else $91 = $94;
   }
  }
  $95 = 0 - $$0$lcssa$i | 0;
  $96 = $$lcssa$i + ($95 << 3) | 0;
  if ($$idx$val << 24 >> 24) {
   HEAP32[$57 >> 2] = $$lcssa$i + 8;
   HEAP32[$$lcssa$i >> 2] = HEAP32[$96 >> 2];
   $100 = $$lcssa$i + ($95 << 3) + 4 | 0;
   HEAP32[$$lcssa$i + 4 >> 2] = HEAP32[$100 >> 2];
   HEAP32[$100 >> 2] = 0;
   if ($$idx$val << 24 >> 24 != 1) {
    $104 = 1;
    do {
     $$pre$i107 = HEAP32[$57 >> 2] | 0;
     $103 = $96 + ($104 << 3) | 0;
     HEAP32[$57 >> 2] = $$pre$i107 + 8;
     HEAP32[$$pre$i107 >> 2] = HEAP32[$103 >> 2];
     $107 = $103 + 4 | 0;
     HEAP32[$$pre$i107 + 4 >> 2] = HEAP32[$107 >> 2];
     HEAP32[$107 >> 2] = 0;
     $104 = $104 + 1 | 0;
    } while (($104 | 0) != ($87 | 0));
   }
  }
  $$0105 = $$lcssa$i;
  $$1103 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + $43 | 0;
 }
 $113 = HEAP32[$47 >> 2] | 0;
 $114 = $0 + 36 | 0;
 if (($113 | 0) == (HEAP32[$114 >> 2] | 0)) {
  $117 = $0 + 48 | 0;
  $118 = HEAP32[$117 >> 2] | 0;
  if (($118 | 0) > 2e4) __Z10luaD_throwP9lua_Statei($0, 5);
  $120 = $118 << 1;
  $121 = $0 + 40 | 0;
  $122 = HEAP32[$121 >> 2] | 0;
  if (($120 | 1) >>> 0 < 178956971) $129 = __Z13luaM_realloc_P9lua_StatePvjj($0, $122, $118 * 24 | 0, $118 * 48 | 0) | 0; else $129 = __Z11luaM_toobigP9lua_State($0) | 0;
  HEAP32[$121 >> 2] = $129;
  HEAP32[$117 >> 2] = $120;
  $134 = $129 + ((((HEAP32[$47 >> 2] | 0) - $122 | 0) / 24 | 0) * 24 | 0) | 0;
  HEAP32[$47 >> 2] = $134;
  HEAP32[$114 >> 2] = $129 + ($120 * 24 | 0) + -24;
  if (($120 | 0) > 2e4) {
   __Z13luaG_runerrorP9lua_StatePKcz($0, 87064, $vararg_buffer);
   $$sink = HEAP32[$47 >> 2] | 0;
  } else $$sink = $134;
 } else $$sink = $113;
 $138 = $$sink + 24 | 0;
 HEAP32[$47 >> 2] = $138;
 HEAP32[$$sink + 28 >> 2] = $$1103;
 HEAP32[$138 >> 2] = $$0105;
 HEAP32[$0 + 12 >> 2] = $$0105;
 $144 = $$sink + 32 | 0;
 HEAP32[$144 >> 2] = $$0105 + (HEAPU8[$60 >> 0] << 3);
 HEAP32[$45 >> 2] = HEAP32[$54 + 12 >> 2];
 HEAP32[$$sink + 44 >> 2] = 0;
 HEAP32[$$sink + 40 >> 2] = $2;
 $149 = HEAP32[$57 >> 2] | 0;
 $150 = HEAP32[$144 >> 2] | 0;
 if ($149 >>> 0 < $150 >>> 0) {
  $$0104118 = $149;
  do {
   HEAP32[$$0104118 + 4 >> 2] = 0;
   $$0104118 = $$0104118 + 8 | 0;
   $154 = HEAP32[$144 >> 2] | 0;
  } while ($$0104118 >>> 0 < $154 >>> 0);
  $$lcssa = $154;
 } else $$lcssa = $150;
 HEAP32[$57 >> 2] = $$lcssa;
 if (!(HEAP8[$0 + 56 >> 0] & 1)) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 4;
 __Z13luaD_callhookP9lua_Stateii($0, 0, -1);
 HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + -4;
 $$1 = 0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN10CGameSetup10ResetStateEv($0) {
 $0 = $0 | 0;
 var $$05$i$i = 0, $$05$i$i$i$i$i$i$i$i = 0, $$05$i$i16 = 0, $$05$i$i6 = 0, $$lcssa$i$i$i$i$i$i$i$i = 0, $$pre8$i$i$i$i$i$i$i$i = 0, $101 = 0, $102 = 0, $103 = 0, $105 = 0, $106 = 0, $108 = 0, $111 = 0, $116 = 0, $119 = 0, $124 = 0, $125 = 0, $126 = 0, $128 = 0, $129 = 0, $13 = 0, $135 = 0, $136 = 0, $137 = 0, $139 = 0, $14 = 0, $140 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $153 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $170 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $188 = 0, $19 = 0, $195 = 0, $196 = 0, $197 = 0, $20 = 0, $25 = 0, $26 = 0, $31 = 0, $32 = 0, $37 = 0, $38 = 0, $43 = 0, $44 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $74 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $8 = 0, $85 = 0, $86 = 0, $87 = 0, $89 = 0, $90 = 0, $96 = 0, $97 = 0, $98 = 0;
 HEAP8[$0 >> 0] = 1;
 HEAP8[$0 + 1 >> 0] = 1;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 1;
 HEAP8[$0 + 4 >> 0] = 0;
 HEAP8[$0 + 5 >> 0] = 0;
 HEAP8[$0 + 6 >> 0] = 0;
 HEAP8[$0 + 7 >> 0] = 1;
 $8 = $0 + 8 | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 HEAP32[$8 + 12 >> 2] = 0;
 HEAP32[$8 + 16 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = 1500;
 HEAPF32[$0 + 32 >> 2] = 0.0;
 HEAPF32[$0 + 36 >> 2] = 0.0;
 HEAP32[$0 + 40 >> 2] = 0;
 $13 = $0 + 44 | 0;
 $14 = $13 + 11 | 0;
 if ((HEAP8[$14 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$13 >> 2] >> 0] = 0;
  HEAP32[$0 + 48 >> 2] = 0;
 } else {
  HEAP8[$13 >> 0] = 0;
  HEAP8[$14 >> 0] = 0;
 }
 $19 = $0 + 56 | 0;
 $20 = $19 + 11 | 0;
 if ((HEAP8[$20 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$19 >> 2] >> 0] = 0;
  HEAP32[$0 + 60 >> 2] = 0;
 } else {
  HEAP8[$19 >> 0] = 0;
  HEAP8[$20 >> 0] = 0;
 }
 $25 = $0 + 68 | 0;
 $26 = $25 + 11 | 0;
 if ((HEAP8[$26 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$25 >> 2] >> 0] = 0;
  HEAP32[$0 + 72 >> 2] = 0;
 } else {
  HEAP8[$25 >> 0] = 0;
  HEAP8[$26 >> 0] = 0;
 }
 $31 = $0 + 80 | 0;
 $32 = $31 + 11 | 0;
 if ((HEAP8[$32 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$31 >> 2] >> 0] = 0;
  HEAP32[$0 + 84 >> 2] = 0;
 } else {
  HEAP8[$31 >> 0] = 0;
  HEAP8[$32 >> 0] = 0;
 }
 $37 = $0 + 92 | 0;
 $38 = $37 + 11 | 0;
 if ((HEAP8[$38 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$37 >> 2] >> 0] = 0;
  HEAP32[$0 + 96 >> 2] = 0;
 } else {
  HEAP8[$37 >> 0] = 0;
  HEAP8[$38 >> 0] = 0;
 }
 $43 = $0 + 104 | 0;
 $44 = $43 + 11 | 0;
 if ((HEAP8[$44 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$43 >> 2] >> 0] = 0;
  HEAP32[$0 + 108 >> 2] = 0;
 } else {
  HEAP8[$43 >> 0] = 0;
  HEAP8[$44 >> 0] = 0;
 }
 $49 = $0 + 132 | 0;
 $50 = HEAP32[$49 >> 2] | 0;
 HEAP32[$49 >> 2] = 0;
 $51 = $0 + 136 | 0;
 $52 = HEAP32[$51 >> 2] | 0;
 HEAP32[$51 >> 2] = 0;
 HEAP32[$0 + 140 >> 2] = 0;
 HEAP32[$0 + 144 >> 2] = 0;
 HEAP32[$0 + 148 >> 2] = -1;
 HEAP32[$0 + 152 >> 2] = 0;
 _free($50);
 _free($52);
 $57 = $0 + 160 | 0;
 $58 = HEAP32[$57 >> 2] | 0;
 HEAP32[$57 >> 2] = 0;
 $59 = $0 + 164 | 0;
 $60 = HEAP32[$59 >> 2] | 0;
 HEAP32[$59 >> 2] = 0;
 HEAP32[$0 + 168 >> 2] = 0;
 HEAP32[$0 + 172 >> 2] = 0;
 HEAP32[$0 + 176 >> 2] = -1;
 HEAP32[$0 + 180 >> 2] = 0;
 _free($58);
 _free($60);
 $65 = $0 + 188 | 0;
 $66 = HEAP32[$65 >> 2] | 0;
 HEAP32[$65 >> 2] = 0;
 $67 = $0 + 192 | 0;
 $68 = HEAP32[$67 >> 2] | 0;
 HEAP32[$67 >> 2] = 0;
 HEAP32[$0 + 196 >> 2] = 0;
 HEAP32[$0 + 200 >> 2] = 0;
 HEAP32[$0 + 204 >> 2] = -1;
 HEAP32[$0 + 208 >> 2] = 0;
 _free($66);
 _free($68);
 $74 = HEAP32[$0 + 212 >> 2] | 0;
 $75 = $0 + 216 | 0;
 $76 = HEAP32[$75 >> 2] | 0;
 if (($76 | 0) != ($74 | 0)) {
  $79 = $76;
  do {
   $78 = $79 + -56 | 0;
   HEAP32[$75 >> 2] = $78;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$78 >> 2] >> 2] & 255]($78);
   $79 = HEAP32[$75 >> 2] | 0;
  } while (($79 | 0) != ($74 | 0));
 }
 $85 = HEAP32[$0 + 224 >> 2] | 0;
 $86 = $0 + 228 | 0;
 $87 = HEAP32[$86 >> 2] | 0;
 if (($87 | 0) != ($85 | 0)) {
  $90 = $87;
  do {
   $89 = $90 + -76 | 0;
   HEAP32[$86 >> 2] = $89;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$89 >> 2] >> 2] & 255]($89);
   $90 = HEAP32[$86 >> 2] | 0;
  } while (($90 | 0) != ($85 | 0));
 }
 $96 = HEAP32[$0 + 236 >> 2] | 0;
 $97 = $0 + 240 | 0;
 $98 = HEAP32[$97 >> 2] | 0;
 if (($98 | 0) != ($96 | 0)) {
  $101 = $98;
  do {
   HEAP32[$97 >> 2] = $101 + -56;
   $102 = $101 + -16 | 0;
   $103 = HEAP32[$102 >> 2] | 0;
   $105 = $101 + -24 | 0;
   $106 = HEAP32[$105 >> 2] | 0;
   $$pre8$i$i$i$i$i$i$i$i = $101 + -20 | 0;
   if (!$103) $$lcssa$i$i$i$i$i$i$i$i = $106; else {
    $$05$i$i$i$i$i$i$i$i = 0;
    $108 = $106;
    $196 = $103;
    while (1) {
     if ((HEAP8[$108 + $$05$i$i$i$i$i$i$i$i >> 0] | 0) == 2) {
      $111 = HEAP32[$$pre8$i$i$i$i$i$i$i$i >> 2] | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($111 + ($$05$i$i$i$i$i$i$i$i * 24 | 0) + 12 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($111 + ($$05$i$i$i$i$i$i$i$i * 24 | 0) | 0);
      $116 = HEAP32[$102 >> 2] | 0;
      $197 = HEAP32[$105 >> 2] | 0;
     } else {
      $116 = $196;
      $197 = $108;
     }
     $$05$i$i$i$i$i$i$i$i = $$05$i$i$i$i$i$i$i$i + 1 | 0;
     if ($$05$i$i$i$i$i$i$i$i >>> 0 >= $116 >>> 0) {
      $$lcssa$i$i$i$i$i$i$i$i = $197;
      break;
     } else {
      $108 = $197;
      $196 = $116;
     }
    }
   }
   _free($$lcssa$i$i$i$i$i$i$i$i);
   _free(HEAP32[$$pre8$i$i$i$i$i$i$i$i >> 2] | 0);
   $119 = HEAP32[$101 + -40 >> 2] | 0;
   if ($119 | 0) __ZdlPv($119);
   $101 = HEAP32[$97 >> 2] | 0;
  } while (($101 | 0) != ($96 | 0));
 }
 $124 = HEAP32[$0 + 248 >> 2] | 0;
 $125 = $0 + 252 | 0;
 $126 = HEAP32[$125 >> 2] | 0;
 if (($126 | 0) != ($124 | 0)) {
  $129 = $126;
  do {
   $128 = $129 + -108 | 0;
   HEAP32[$125 >> 2] = $128;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$128 >> 2] >> 2] & 255]($128);
   $129 = HEAP32[$125 >> 2] | 0;
  } while (($129 | 0) != ($124 | 0));
 }
 $135 = HEAP32[$0 + 260 >> 2] | 0;
 $136 = $0 + 264 | 0;
 $137 = HEAP32[$136 >> 2] | 0;
 if (($137 | 0) != ($135 | 0)) {
  $140 = $137;
  do {
   $139 = $140 + -12 | 0;
   HEAP32[$136 >> 2] = $139;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($139);
   $140 = HEAP32[$136 >> 2] | 0;
  } while (($140 | 0) != ($135 | 0));
 }
 $143 = $0 + 276 | 0;
 $144 = HEAP32[$143 >> 2] | 0;
 HEAP32[$143 >> 2] = 0;
 $145 = $0 + 280 | 0;
 $146 = HEAP32[$145 >> 2] | 0;
 HEAP32[$145 >> 2] = 0;
 $147 = $0 + 284 | 0;
 $148 = HEAP32[$147 >> 2] | 0;
 HEAP32[$147 >> 2] = 0;
 HEAP32[$0 + 288 >> 2] = 0;
 HEAP32[$0 + 292 >> 2] = -1;
 HEAP32[$0 + 296 >> 2] = 0;
 if ($148 | 0) {
  $153 = $146;
  $$05$i$i16 = 0;
  do {
   if ((HEAP8[$144 + $$05$i$i16 >> 0] | 0) == 2) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($153 + ($$05$i$i16 << 4) | 0);
   $$05$i$i16 = $$05$i$i16 + 1 | 0;
  } while (($$05$i$i16 | 0) != ($148 | 0));
 }
 _free($144);
 _free($146);
 $160 = $0 + 304 | 0;
 $161 = HEAP32[$160 >> 2] | 0;
 HEAP32[$160 >> 2] = 0;
 $162 = $0 + 308 | 0;
 $163 = HEAP32[$162 >> 2] | 0;
 HEAP32[$162 >> 2] = 0;
 $164 = $0 + 312 | 0;
 $165 = HEAP32[$164 >> 2] | 0;
 HEAP32[$164 >> 2] = 0;
 HEAP32[$0 + 316 >> 2] = 0;
 HEAP32[$0 + 320 >> 2] = -1;
 HEAP32[$0 + 324 >> 2] = 0;
 if ($165 | 0) {
  $170 = $163;
  $$05$i$i6 = 0;
  do {
   if ((HEAP8[$161 + $$05$i$i6 >> 0] | 0) == 2) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($170 + ($$05$i$i6 * 24 | 0) + 12 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($170 + ($$05$i$i6 * 24 | 0) | 0);
   }
   $$05$i$i6 = $$05$i$i6 + 1 | 0;
  } while (($$05$i$i6 | 0) != ($165 | 0));
 }
 _free($161);
 _free($163);
 $178 = $0 + 332 | 0;
 $179 = HEAP32[$178 >> 2] | 0;
 HEAP32[$178 >> 2] = 0;
 $180 = $0 + 336 | 0;
 $181 = HEAP32[$180 >> 2] | 0;
 HEAP32[$180 >> 2] = 0;
 $182 = $0 + 340 | 0;
 $183 = HEAP32[$182 >> 2] | 0;
 HEAP32[$182 >> 2] = 0;
 HEAP32[$0 + 344 >> 2] = 0;
 HEAP32[$0 + 348 >> 2] = -1;
 HEAP32[$0 + 352 >> 2] = 0;
 if (!$183) {
  _free($179);
  $195 = $181;
  _free($195);
  return;
 }
 $188 = $181;
 $$05$i$i = 0;
 do {
  if ((HEAP8[$179 + $$05$i$i >> 0] | 0) == 2) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($188 + ($$05$i$i * 24 | 0) + 12 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($188 + ($$05$i$i * 24 | 0) | 0);
  }
  $$05$i$i = $$05$i$i + 1 | 0;
 } while (($$05$i$i | 0) != ($183 | 0));
 _free($179);
 $195 = $181;
 _free($195);
 return;
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc | 0) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem | 0) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem | 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}

function __ZN6google12_GLOBAL__N_121CommandLineFlagParser12ReportErrorsEv($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i$i27 = 0, $$0$off0$lcssa96 = 0, $$0$off086 = 0, $$01190 = 0, $$05$i$i$i = 0, $$05$i$i$i30 = 0, $$1$off0 = 0, $$in = 0, $$in95 = 0, $$sroa$044$085 = 0, $$sroa$055$087 = 0, $1 = 0, $100 = 0, $104 = 0, $110 = 0, $111 = 0, $112 = 0, $114 = 0, $116 = 0, $119 = 0, $13 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $48 = 0, $5 = 0, $54 = 0, $6 = 0, $62 = 0, $63 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $86 = 0, $92 = 0, $93 = 0, $94 = 0, $96 = 0, $97 = 0, $99 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer = sp;
 $1 = sp + 40 | 0;
 $2 = sp + 52 | 0;
 $3 = sp + 32 | 0;
 $4 = sp + 16 | 0;
 $5 = sp + 4 | 0;
 $6 = HEAP32[27051] | 0;
 $7 = $6 + 11 | 0;
 $8 = HEAP8[$7 >> 0] | 0;
 if ($8 << 24 >> 24 < 0) $13 = HEAP32[$6 + 4 >> 2] | 0; else $13 = $8 & 255;
 if ($13 | 0) {
  HEAP32[$4 >> 2] = 0;
  $15 = $4 + 4 | 0;
  HEAP32[$15 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  if ((HEAP8[$7 >> 0] | 0) < 0) $20 = HEAP32[$6 >> 2] | 0; else $20 = $6;
  __ZN6google12_GLOBAL__N_1L13ParseFlagListEPKcPNSt3__26vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEE($20, $4);
  $21 = HEAP32[$15 >> 2] | 0;
  $22 = HEAP32[$4 >> 2] | 0;
  if (($21 | 0) == ($22 | 0)) {
   $$in = $21;
   $$in95 = $22;
  } else {
   $24 = $0 + 16 | 0;
   $25 = $0 + 20 | 0;
   $26 = $0 + 4 | 0;
   $$01190 = 0;
   do {
    HEAP32[$1 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 91433, 2);
    $37 = HEAP32[$4 >> 2] | 0;
    $38 = $37 + ($$01190 * 12 | 0) | 0;
    $40 = HEAP8[$38 + 11 >> 0] | 0;
    $41 = $40 << 24 >> 24 < 0;
    $48 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($1, $41 ? HEAP32[$38 >> 2] | 0 : $38, $41 ? HEAP32[$37 + ($$01190 * 12 | 0) + 4 >> 2] | 0 : $40 & 255) | 0;
    HEAP32[$5 >> 2] = HEAP32[$48 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$48 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$48 + 8 >> 2];
    HEAP32[$48 >> 2] = 0;
    HEAP32[$48 + 4 >> 2] = 0;
    HEAP32[$48 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    if ((__ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_($24, (HEAP32[$4 >> 2] | 0) + ($$01190 * 12 | 0) | 0) | 0) == ($25 | 0)) {
     if ((__ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_($24, $5) | 0) != ($25 | 0)) {
      HEAP32[$1 >> 2] = $5;
      __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($3, $26, $5, 112127, $1, $2);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((HEAP32[$3 >> 2] | 0) + 28 | 0, 114224) | 0;
     }
    } else {
     $54 = (HEAP32[$4 >> 2] | 0) + ($$01190 * 12 | 0) | 0;
     HEAP32[$1 >> 2] = $54;
     __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($3, $26, $54, 112127, $1, $2);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((HEAP32[$3 >> 2] | 0) + 28 | 0, 114224) | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $$01190 = $$01190 + 1 | 0;
    $62 = HEAP32[$15 >> 2] | 0;
    $63 = HEAP32[$4 >> 2] | 0;
   } while ($$01190 >>> 0 < (($62 - $63 | 0) / 12 | 0) >>> 0);
   $$in = $62;
   $$in95 = $63;
  }
  $27 = $$in95;
  $28 = $$in;
  if ($$in95 | 0) {
   if (($28 | 0) == ($27 | 0)) $36 = $$in95; else {
    $33 = $28;
    do {
     $32 = $33 + -12 | 0;
     HEAP32[$15 >> 2] = $32;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
     $33 = HEAP32[$15 >> 2] | 0;
    } while (($33 | 0) != ($27 | 0));
    $36 = HEAP32[$4 >> 2] | 0;
   }
   __ZdlPv($36);
  }
 }
 if (HEAP8[112126] | 0) {
  $70 = HEAP32[$0 + 16 >> 2] | 0;
  $71 = $0 + 20 | 0;
  $72 = $70;
  if (($72 | 0) != ($71 | 0)) {
   $74 = $0 + 4 | 0;
   $$sroa$055$087 = $70;
   $76 = $72;
   while (1) {
    $75 = $76 + 16 | 0;
    HEAP32[$1 >> 2] = $75;
    __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($3, $74, $75, 112127, $1, $2);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((HEAP32[$3 >> 2] | 0) + 28 | 0, 114224) | 0;
    $79 = $$sroa$055$087;
    $81 = HEAP32[$79 + 4 >> 2] | 0;
    if (!$81) {
     $$0$i$i$i27 = $79;
     while (1) {
      $86 = HEAP32[$$0$i$i$i27 + 8 >> 2] | 0;
      if ((HEAP32[$86 >> 2] | 0) == ($$0$i$i$i27 | 0)) {
       $$05$i$i$i30 = $86;
       break;
      } else $$0$i$i$i27 = $86;
     }
    } else {
     $$0$i$i$i$i25 = $81;
     while (1) {
      $83 = HEAP32[$$0$i$i$i$i25 >> 2] | 0;
      if (!$83) {
       $$05$i$i$i30 = $$0$i$i$i$i25;
       break;
      } else $$0$i$i$i$i25 = $83;
     }
    }
    if (($$05$i$i$i30 | 0) == ($71 | 0)) break; else {
     $$sroa$055$087 = $$05$i$i$i30;
     $76 = $$05$i$i$i30;
    }
   }
  }
 };
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $92 = HEAP32[$0 + 4 >> 2] | 0;
 $93 = $0 + 8 | 0;
 $94 = $92;
 if (($94 | 0) == ($93 | 0)) {
  $$0$off0$lcssa96 = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return $$0$off0$lcssa96 | 0;
 }
 $$0$off086 = 0;
 $$sroa$044$085 = $92;
 $97 = $94;
 while (1) {
  $96 = $97 + 28 | 0;
  $99 = HEAP8[$96 + 11 >> 0] | 0;
  $100 = $99 << 24 >> 24 < 0;
  if ($100) $104 = HEAP32[$97 + 32 >> 2] | 0; else $104 = $99 & 255;
  if (!$104) $$1$off0 = $$0$off086; else {
   if ($100) {
    $110 = HEAP32[$96 >> 2] | 0;
    $111 = HEAP32[$97 + 32 >> 2] | 0;
   } else {
    $110 = $96;
    $111 = $99 & 255;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($1, $110, $111) | 0;
   $$1$off0 = 1;
  }
  $112 = $$sroa$044$085;
  $114 = HEAP32[$112 + 4 >> 2] | 0;
  if (!$114) {
   $$0$i$i$i = $112;
   while (1) {
    $119 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$119 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$05$i$i$i = $119;
     break;
    } else $$0$i$i$i = $119;
   }
  } else {
   $$0$i$i$i$i = $114;
   while (1) {
    $116 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$116) {
     $$05$i$i$i = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $116;
   }
  }
  if (($$05$i$i$i | 0) == ($93 | 0)) break; else {
   $$0$off086 = $$1$off0;
   $$sroa$044$085 = $$05$i$i$i;
   $97 = $$05$i$i$i;
  }
 }
 if (!$$1$off0) {
  $$0$off0$lcssa96 = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return $$0$off0$lcssa96 | 0;
 }
 HEAP32[$vararg_buffer >> 2] = (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
 __ZN6google12_GLOBAL__N_1L11ReportErrorENS0_16DieWhenReportingEPKcz(1, 91439, $vararg_buffer);
 $$0$off0$lcssa96 = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return $$0$off0$lcssa96 | 0;
}

function _fnmatch_internal($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$lcssa = 0, $$0124 = 0, $$0125$lcssa = 0, $$0125188 = 0, $$0128$lcssa$idx = 0, $$0128$lcssa$ptr = 0, $$0128195$idx = 0, $$0130194$idx = 0, $$0130194$ptr = 0, $$0133 = 0, $$0136 = 0, $$0137 = 0, $$0141 = 0, $$0196 = 0, $$1 = 0, $$1126292 = 0, $$1126292$phi = 0, $$1129$idx = 0, $$1134$ph184 = 0, $$1138$ph183 = 0, $$1138182$be = 0, $$1138182289 = 0, $$2127 = 0, $$2139$pn = 0, $$2189 = 0, $$3140 = 0, $$3185 = 0, $$4$lcssa = 0, $$4178 = 0, $$lcssa = 0, $$lcssa161 = 0, $$lcssa164 = 0, $$ptr$ptr = 0, $$ptr202 = 0, $100 = 0, $102 = 0, $104 = 0, $106 = 0, $111 = 0, $116 = 0, $126 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $15 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $23 = 0, $27 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $66 = 0, $73 = 0, $75 = 0, $77 = 0, $78 = 0, $84 = 0, $85 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp + 4 | 0;
 $6 = sp;
 if (!($4 & 4)) {
  $$0133 = $0;
  $$0136 = $3;
  $$0137 = $2;
  $$0141 = $1;
  label = 4;
 } else if ((HEAP8[$2 >> 0] | 0) == 46) if ((HEAP8[$0 >> 0] | 0) == 46) {
  $$0133 = $0;
  $$0136 = $3;
  $$0137 = $2;
  $$0141 = $1;
  label = 4;
 } else $$0124 = 1; else {
  $$0133 = $0;
  $$0136 = $3;
  $$0137 = $2;
  $$0141 = $1;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  L5 : while (1) {
   label = 0;
   $13 = _pat_next($$0133, $$0141, $5, $4) | 0;
   switch ($13 | 0) {
   case -2:
    {
     $$0124 = 1;
     break L4;
     break;
    }
   case -5:
    {
     break L5;
     break;
    }
   default:
    {}
   }
   $18 = _str_next($$0137, $$0136, $6) | 0;
   if (($18 | 0) < 1) {
    label = 8;
    break;
   }
   $21 = HEAP32[$6 >> 2] | 0;
   $22 = $$0137 + $21 | 0;
   $23 = $$0136 - $21 | 0;
   switch ($13 | 0) {
   case -3:
    {
     if (!(_match_bracket($$0133, $18) | 0)) {
      $$0124 = 1;
      break L4;
     }
     break;
    }
   case -4:
    break;
   default:
    if (($18 | 0) != ($13 | 0)) {
     $$0124 = 1;
     break L4;
    }
   }
   $27 = HEAP32[$5 >> 2] | 0;
   $$0133 = $$0133 + $27 | 0;
   $$0136 = $23;
   $$0137 = $22;
   $$0141 = $$0141 - $27 | 0;
   label = 4;
  }
  if ((label | 0) == 8) {
   $$0124 = ($13 | 0) != 0 & 1;
   break;
  }
  $$ptr$ptr = $$0133 + 1 | 0;
  $15 = _strnlen($$ptr$ptr, $$0141 + -1 | 0) | 0;
  $$ptr202 = $$0133 + ($15 + 1) | 0;
  L16 : do if (($15 | 0) > 0) {
   $17 = $$ptr202;
   $$0128195$idx = 1;
   $$0130194$idx = 1;
   $$0196 = 0;
   while (1) {
    $$0130194$ptr = $$0133 + $$0130194$idx | 0;
    switch (_pat_next($$0130194$ptr, $17 - $$0130194$ptr | 0, $5, $4) | 0) {
    case -2:
     {
      $$0124 = 1;
      break L4;
      break;
     }
    case -5:
     {
      $$1 = 0;
      $$1129$idx = $$0130194$idx + 1 | 0;
      break;
     }
    default:
     {
      $$1 = $$0196 + 1 | 0;
      $$1129$idx = $$0128195$idx;
     }
    }
    $$0130194$idx = $$0130194$idx + (HEAP32[$5 >> 2] | 0) | 0;
    if (($$0130194$idx | 0) > ($15 | 0)) {
     $$0$lcssa = $$1;
     $$0128$lcssa$idx = $$1129$idx;
     break L16;
    } else {
     $$0128195$idx = $$1129$idx;
     $$0196 = $$1;
    }
   }
  } else {
   $$0$lcssa = 0;
   $$0128$lcssa$idx = 1;
  } while (0);
  $$0128$lcssa$ptr = $$0133 + $$0128$lcssa$idx | 0;
  $36 = _strnlen($$0137, $$0136) | 0;
  $37 = $$0137 + $36 | 0;
  if ($36 >>> 0 < $$0$lcssa >>> 0) $$0124 = 1; else {
   $40 = ($$0$lcssa | 0) != 0;
   if (($36 | 0) > 0 & $40) {
    $$0125188 = $37;
    $$2189 = $$0$lcssa;
    while (1) {
     $42 = $$0125188 + -1 | 0;
     $43 = HEAP8[$42 >> 0] | 0;
     if ($43 << 24 >> 24 > -1) $$2127 = $42; else {
      $45 = $$0125188 + -1 | 0;
      if ($45 >>> 0 > $$0137 >>> 0 & ($43 & -64) << 24 >> 24 == -128) {
       $$1126292 = $$0125188;
       $50 = $45;
       while (1) {
        $49 = $50 + -1 | 0;
        if ($49 >>> 0 > $$0137 >>> 0 ? (HEAP8[$$1126292 + -2 >> 0] & -64) << 24 >> 24 == -128 : 0) {
         $$1126292$phi = $50;
         $50 = $49;
         $$1126292 = $$1126292$phi;
        } else {
         $$2127 = $49;
         break;
        }
       }
      } else $$2127 = $45;
     }
     $$2189 = $$2189 + -1 | 0;
     $56 = ($$2189 | 0) != 0;
     if (!($$2127 >>> 0 > $$0137 >>> 0 & $56)) {
      $$0125$lcssa = $$2127;
      $$lcssa164 = $56;
      break;
     } else $$0125188 = $$2127;
    }
   } else {
    $$0125$lcssa = $37;
    $$lcssa164 = $40;
   }
   if ($$lcssa164) $$0124 = 1; else {
    $58 = $$ptr202;
    $59 = $$0128$lcssa$ptr;
    $61 = _pat_next($$0128$lcssa$ptr, $58 - $59 | 0, $5, $4) | 0;
    $62 = HEAP32[$5 >> 2] | 0;
    $63 = $37;
    $64 = $$0125$lcssa;
    $66 = _str_next($$0125$lcssa, $63 - $64 | 0, $6) | 0;
    L36 : do if (($66 | 0) < 1) $$lcssa161 = $61; else {
     $$3185 = $$0125$lcssa;
     $73 = $61;
     $75 = $62;
     $77 = $$0128$lcssa$ptr + $62 | 0;
     $78 = $66;
     while (1) {
      $$3185 = $$3185 + (HEAP32[$6 >> 2] | 0) | 0;
      switch ($73 | 0) {
      case -3:
       {
        if (!(_match_bracket($77 + (0 - $75) | 0, $78) | 0)) {
         $$0124 = 1;
         break L4;
        }
        break;
       }
      case -4:
       break;
      default:
       if (($78 | 0) != ($73 | 0)) {
        $$0124 = 1;
        break L4;
       }
      }
      $84 = _pat_next($77, $58 - $77 | 0, $5, $4) | 0;
      $85 = HEAP32[$5 >> 2] | 0;
      $78 = _str_next($$3185, $63 - $$3185 | 0, $6) | 0;
      if (($78 | 0) < 1) {
       $$lcssa161 = $84;
       break L36;
      } else {
       $73 = $84;
       $75 = $85;
       $77 = $77 + $85 | 0;
      }
     }
    } while (0);
    if (!$$lcssa161) if (($$0128$lcssa$idx | 0) > 1) {
     $$1134$ph184 = $$ptr$ptr;
     $$1138$ph183 = $$0137;
     while (1) {
      $93 = $59 - $$1134$ph184 | 0;
      $94 = _pat_next($$1134$ph184, $93, $5, $4) | 0;
      $95 = HEAP32[$5 >> 2] | 0;
      $96 = $$1134$ph184 + $95 | 0;
      L48 : do if (($94 | 0) == -5) {
       $$4$lcssa = $$1138$ph183;
       $$lcssa = $96;
      } else {
       $$1138182289 = $$1138$ph183;
       $132 = $96;
       $133 = $95;
       $134 = $94;
       while (1) {
        $$4178 = $$1138182289;
        $102 = $134;
        $104 = $133;
        $106 = $132;
        L51 : while (1) {
         $100 = _str_next($$4178, $64 - $$4178 | 0, $6) | 0;
         if (!$100) {
          $$0124 = 1;
          break L4;
         }
         switch ($102 | 0) {
         case -3:
          {
           if (!(_match_bracket($106 + (0 - $104) | 0, $100) | 0)) break L51;
           break;
          }
         case -4:
          break;
         default:
          if (($100 | 0) != ($102 | 0)) break L51;
         }
         $111 = $$4178 + (HEAP32[$6 >> 2] | 0) | 0;
         $102 = _pat_next($106, $59 - $106 | 0, $5, $4) | 0;
         $104 = HEAP32[$5 >> 2] | 0;
         $116 = $106 + $104 | 0;
         if (($102 | 0) == -5) {
          $$4$lcssa = $111;
          $$lcssa = $116;
          break L48;
         } else {
          $$4178 = $111;
          $106 = $116;
         }
        }
        if ((_str_next($$1138182289, $64 - $$1138182289 | 0, $6) | 0) > 0) $$1138182$be = $$1138182289 + (HEAP32[$6 >> 2] | 0) | 0; else {
         $$2139$pn = $$1138182289;
         while (1) {
          $$3140 = $$2139$pn + 1 | 0;
          if ((_str_next($$3140, $64 - $$3140 | 0, $6) | 0) < 0) $$2139$pn = $$3140; else {
           $$1138182$be = $$3140;
           break;
          }
         }
        }
        $134 = _pat_next($$1134$ph184, $93, $5, $4) | 0;
        $133 = HEAP32[$5 >> 2] | 0;
        $126 = $$1134$ph184 + $133 | 0;
        if (($134 | 0) == -5) {
         $$4$lcssa = $$1138182$be;
         $$lcssa = $126;
         break;
        } else {
         $$1138182289 = $$1138182$be;
         $132 = $126;
        }
       }
      } while (0);
      if ($$lcssa >>> 0 < $$0128$lcssa$ptr >>> 0) {
       $$1134$ph184 = $$lcssa;
       $$1138$ph183 = $$4$lcssa;
      } else {
       $$0124 = 0;
       break;
      }
     }
    } else $$0124 = 0; else $$0124 = 1;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0124 | 0;
}

function __ZN8TeamBase8SetValueERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$06$0$i$i = 0, $10 = 0, $103 = 0, $104 = 0, $112 = 0, $113 = 0, $118 = 0, $121 = 0, $133 = 0, $136 = 0, $141 = 0, $142 = 0, $147 = 0, $162 = 0, $165 = 0, $171 = 0, $172 = 0, $183 = 0, $186 = 0, $192 = 0, $193 = 0, $23 = 0.0, $26 = 0.0, $3 = 0, $31 = 0, $34 = 0, $4 = 0, $45 = 0.0, $48 = 0.0, $5 = 0, $53 = 0, $56 = 0, $6 = 0, $67 = 0.0, $7 = 0, $72 = 0, $75 = 0, $87 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 $6 = $1 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $9 = $1 + 4 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 do if ((($7 << 24 >> 24 < 0 ? $10 : $7 & 255) | 0) == 8) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82880, 8) | 0) {
   $31 = HEAP8[$6 >> 0] | 0;
   $34 = HEAP32[$9 >> 2] | 0;
   break;
  }
  $23 = +_atof((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) / 100.0;
  $26 = ($23 > 0.0 ? $23 : 0.0) + 1.0;
  HEAPF32[$3 >> 2] = $26;
  HEAPF32[$4 >> 2] = 0.0;
  HEAP32[$0 + 20 >> 2] = HEAP32[($26 > 0.0 ? $3 : $4) >> 2];
  STACKTOP = sp;
  return;
 } else {
  $31 = $7;
  $34 = $10;
 } while (0);
 do if ((($31 << 24 >> 24 < 0 ? $34 : $31 & 255) | 0) == 9) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82889, 9) | 0) {
   $53 = HEAP8[$6 >> 0] | 0;
   $56 = HEAP32[$9 >> 2] | 0;
   break;
  }
  $45 = +_atof((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2);
  $48 = ($45 > 0.0 ? $45 : 0.0) + 1.0;
  HEAPF32[$3 >> 2] = $48;
  HEAPF32[$4 >> 2] = 0.0;
  HEAP32[$0 + 20 >> 2] = HEAP32[($48 > 0.0 ? $3 : $4) >> 2];
  STACKTOP = sp;
  return;
 } else {
  $53 = $31;
  $56 = $34;
 } while (0);
 do if ((($53 << 24 >> 24 < 0 ? $56 : $53 & 255) | 0) == 16) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82899, 16) | 0) {
   $72 = HEAP8[$6 >> 0] | 0;
   $75 = HEAP32[$9 >> 2] | 0;
   break;
  }
  $67 = +_atof((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2);
  HEAPF32[$3 >> 2] = $67;
  HEAPF32[$4 >> 2] = 0.0;
  HEAP32[$0 + 20 >> 2] = HEAP32[($67 > 0.0 ? $3 : $4) >> 2];
  STACKTOP = sp;
  return;
 } else {
  $72 = $53;
  $75 = $56;
 } while (0);
 do if ((($72 << 24 >> 24 < 0 ? $75 : $72 & 255) | 0) == 10) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82916, 10) | 0) {
   $87 = HEAP8[$6 >> 0] | 0;
   $90 = HEAP32[$9 >> 2] | 0;
   break;
  }
  HEAP32[$0 + 4 >> 2] = _atoi((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) | 0;
  STACKTOP = sp;
  return;
 } else {
  $87 = $72;
  $90 = $75;
 } while (0);
 do if ((($87 << 24 >> 24 < 0 ? $90 : $87 & 255) | 0) == 4) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82927, 4) | 0) {
   $118 = HEAP8[$6 >> 0] | 0;
   $121 = HEAP32[$9 >> 2] | 0;
   break;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5, $2);
  $96 = HEAP8[$5 + 11 >> 0] | 0;
  $97 = $96 << 24 >> 24 < 0;
  $99 = $97 ? HEAP32[$5 >> 2] | 0 : $5;
  $103 = $97 ? HEAP32[$5 + 4 >> 2] | 0 : $96 & 255;
  $104 = $99 + $103 | 0;
  if ($103 | 0) {
   $$sroa$06$0$i$i = $99;
   do {
    HEAP8[$$sroa$06$0$i$i >> 0] = _tolower(HEAP8[$$sroa$06$0$i$i >> 0] | 0) | 0;
    $$sroa$06$0$i$i = $$sroa$06$0$i$i + 1 | 0;
   } while (($$sroa$06$0$i$i | 0) != ($104 | 0));
  };
  HEAP32[$3 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$3 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$3 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  $112 = $0 + 24 | 0;
  $113 = $112 + 11 | 0;
  if ((HEAP8[$113 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$112 >> 2] >> 0] = 0;
   HEAP32[$0 + 28 >> 2] = 0;
  } else {
   HEAP8[$112 >> 0] = 0;
   HEAP8[$113 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($112, 0);
  HEAP32[$112 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$112 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$112 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  STACKTOP = sp;
  return;
 } else {
  $118 = $87;
  $121 = $90;
 } while (0);
 do if ((($118 << 24 >> 24 < 0 ? $121 : $118 & 255) | 0) == 8) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82932, 8) | 0) {
   $133 = HEAP8[$6 >> 0] | 0;
   $136 = HEAP32[$9 >> 2] | 0;
   break;
  }
  HEAP32[$0 + 16 >> 2] = _atoi((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) | 0;
  STACKTOP = sp;
  return;
 } else {
  $133 = $118;
  $136 = $121;
 } while (0);
 do if ((($133 << 24 >> 24 < 0 ? $136 : $133 & 255) | 0) == 8) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82941, 8) | 0) {
   $162 = HEAP8[$6 >> 0] | 0;
   $165 = HEAP32[$9 >> 2] | 0;
   break;
  }
  $141 = $3 + 60 | 0;
  $142 = $3 + 8 | 0;
  HEAP32[$3 >> 2] = 68004;
  HEAP32[$141 >> 2] = 68024;
  HEAP32[$3 + 4 >> 2] = 0;
  __ZNSt3__28ios_base4initEPv($3 + 60 | 0, $142);
  HEAP32[$3 + 132 >> 2] = 0;
  HEAP32[$3 + 136 >> 2] = -1;
  HEAP32[$3 >> 2] = 68044;
  HEAP32[$141 >> 2] = 68064;
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($142);
  HEAP32[$142 >> 2] = 67920;
  $147 = $3 + 40 | 0;
  HEAP32[$147 >> 2] = 0;
  HEAP32[$147 + 4 >> 2] = 0;
  HEAP32[$147 + 8 >> 2] = 0;
  HEAP32[$147 + 12 >> 2] = 0;
  HEAP32[$3 + 56 >> 2] = 8;
  __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($142, $2);
  __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERf($3, $4) | 0;
  HEAP8[$0 + 8 >> 0] = ~~(+HEAPF32[$4 >> 2] * 255.0);
  __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERf($3, $4) | 0;
  HEAP8[$0 + 9 >> 0] = ~~(+HEAPF32[$4 >> 2] * 255.0);
  __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERf($3, $4) | 0;
  HEAP8[$0 + 10 >> 0] = ~~(+HEAPF32[$4 >> 2] * 255.0);
  HEAP8[$0 + 11 >> 0] = -1;
  HEAP32[$3 >> 2] = 68044;
  HEAP32[$141 >> 2] = 68064;
  HEAP32[$142 >> 2] = 67920;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($142);
  __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($3, 67980);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($141);
  STACKTOP = sp;
  return;
 } else {
  $162 = $133;
  $165 = $136;
 } while (0);
 do if ((($162 << 24 >> 24 < 0 ? $165 : $162 & 255) | 0) == 9) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82950, 9) | 0) {
   $183 = HEAP8[$6 >> 0] | 0;
   $186 = HEAP32[$9 >> 2] | 0;
   break;
  }
  $171 = HEAP8[$2 + 11 >> 0] | 0;
  $172 = $171 << 24 >> 24 < 0;
  if (!(($172 ? HEAP32[$2 + 4 >> 2] | 0 : $171 & 255) | 0)) {
   STACKTOP = sp;
   return;
  }
  HEAPF32[$0 + 36 >> 2] = +(_atoi($172 ? HEAP32[$2 >> 2] | 0 : $2) | 0);
  STACKTOP = sp;
  return;
 } else {
  $183 = $162;
  $186 = $165;
 } while (0);
 if ((($183 << 24 >> 24 < 0 ? $186 : $183 & 255) | 0) == 9) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82960, 9) | 0)) {
  $192 = HEAP8[$2 + 11 >> 0] | 0;
  $193 = $192 << 24 >> 24 < 0;
  if (!(($193 ? HEAP32[$2 + 4 >> 2] | 0 : $192 & 255) | 0)) {
   STACKTOP = sp;
   return;
  }
  HEAPF32[$0 + 44 >> 2] = +(_atoi($193 ? HEAP32[$2 >> 2] | 0 : $2) | 0);
  STACKTOP = sp;
  return;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(__ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEEixERKS7_($0 + 48 | 0, $1) | 0, $2) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i39 = 0, $$0$i$i$i42 = 0, $$0$i$i$i45 = 0, $$0$i$i$i49 = 0, $$0$i$i$i53 = 0, $$0$i$i$i59 = 0, $$0$i$i$i63 = 0, $$pre$phi$i$i57Z2D = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $109 = 0, $11 = 0, $120 = 0, $15 = 0, $20 = 0, $31 = 0, $49 = 0, $60 = 0, $71 = 0, $75 = 0, $80 = 0, $91 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $10 = sp;
 if ($0) {
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 111904) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 44 >> 2] & 63]($10, $11);
  $15 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $15;
  HEAP8[$2 + 1 >> 0] = $15 >> 8;
  HEAP8[$2 + 2 >> 0] = $15 >> 16;
  HEAP8[$2 + 3 >> 0] = $15 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] & 63]($10, $11);
  $20 = $8 + 8 + 3 | 0;
  if ((HEAP8[$20 >> 0] | 0) < 0) {
   HEAP32[HEAP32[$8 >> 2] >> 2] = 0;
   HEAP32[$8 + 4 >> 2] = 0;
  } else {
   HEAP32[$8 >> 2] = 0;
   HEAP8[$20 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
  HEAP32[$8 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i = 0;
  while (1) {
   if (($$0$i$i$i | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i << 2) >> 2] = 0;
   $$0$i$i$i = $$0$i$i$i + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] & 63]($10, $11);
  $31 = $7 + 8 + 3 | 0;
  if ((HEAP8[$31 >> 0] | 0) < 0) {
   HEAP32[HEAP32[$7 >> 2] >> 2] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$7 >> 2] = 0;
   HEAP8[$31 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i39 = 0;
  while (1) {
   if (($$0$i$i$i39 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i39 << 2) >> 2] = 0;
   $$0$i$i$i39 = $$0$i$i$i39 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  HEAP32[$3 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 255]($11) | 0;
  HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 20 >> 2] & 63]($10, $11);
  $49 = $5 + 11 | 0;
  if ((HEAP8[$49 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$5 >> 2] >> 0] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$iZ2D = $5;
  } else {
   HEAP8[$5 >> 0] = 0;
   HEAP8[$49 >> 0] = 0;
   $$pre$phi$i$iZ2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($5, 0);
  HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i42 = 0;
  while (1) {
   if (($$0$i$i$i42 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i42 << 2) >> 2] = 0;
   $$0$i$i$i42 = $$0$i$i$i42 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] & 63]($10, $11);
  $60 = $6 + 8 + 3 | 0;
  if ((HEAP8[$60 >> 0] | 0) < 0) {
   HEAP32[HEAP32[$6 >> 2] >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$6 >> 2] = 0;
   HEAP8[$60 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($6, 0);
  HEAP32[$6 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i45 = 0;
  while (1) {
   if (($$0$i$i$i45 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i45 << 2) >> 2] = 0;
   $$0$i$i$i45 = $$0$i$i$i45 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 255]($11) | 0;
 } else {
  $71 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 111896) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$71 >> 2] | 0) + 44 >> 2] & 63]($10, $71);
  $75 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $75;
  HEAP8[$2 + 1 >> 0] = $75 >> 8;
  HEAP8[$2 + 2 >> 0] = $75 >> 16;
  HEAP8[$2 + 3 >> 0] = $75 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$71 >> 2] | 0) + 32 >> 2] & 63]($10, $71);
  $80 = $8 + 8 + 3 | 0;
  if ((HEAP8[$80 >> 0] | 0) < 0) {
   HEAP32[HEAP32[$8 >> 2] >> 2] = 0;
   HEAP32[$8 + 4 >> 2] = 0;
  } else {
   HEAP32[$8 >> 2] = 0;
   HEAP8[$80 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($8, 0);
  HEAP32[$8 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i49 = 0;
  while (1) {
   if (($$0$i$i$i49 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i49 << 2) >> 2] = 0;
   $$0$i$i$i49 = $$0$i$i$i49 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$71 >> 2] | 0) + 28 >> 2] & 63]($10, $71);
  $91 = $7 + 8 + 3 | 0;
  if ((HEAP8[$91 >> 0] | 0) < 0) {
   HEAP32[HEAP32[$7 >> 2] >> 2] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$7 >> 2] = 0;
   HEAP8[$91 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i53 = 0;
  while (1) {
   if (($$0$i$i$i53 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i53 << 2) >> 2] = 0;
   $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  HEAP32[$3 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 12 >> 2] & 255]($71) | 0;
  HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 16 >> 2] & 255]($71) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$71 >> 2] | 0) + 20 >> 2] & 63]($10, $71);
  $109 = $5 + 11 | 0;
  if ((HEAP8[$109 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$5 >> 2] >> 0] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$i57Z2D = $5;
  } else {
   HEAP8[$5 >> 0] = 0;
   HEAP8[$109 >> 0] = 0;
   $$pre$phi$i$i57Z2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($5, 0);
  HEAP32[$$pre$phi$i$i57Z2D >> 2] = HEAP32[$10 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i59 = 0;
  while (1) {
   if (($$0$i$i$i59 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i59 << 2) >> 2] = 0;
   $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$71 >> 2] | 0) + 24 >> 2] & 63]($10, $71);
  $120 = $6 + 8 + 3 | 0;
  if ((HEAP8[$120 >> 0] | 0) < 0) {
   HEAP32[HEAP32[$6 >> 2] >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$6 >> 2] = 0;
   HEAP8[$120 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($6, 0);
  HEAP32[$6 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $$0$i$i$i63 = 0;
  while (1) {
   if (($$0$i$i$i63 | 0) == 3) break;
   HEAP32[$10 + ($$0$i$i$i63 << 2) >> 2] = 0;
   $$0$i$i$i63 = $$0$i$i$i63 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($10);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] & 255]($71) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __Z11lua_getinfoP9lua_StatePKcP9lua_Debug($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$024$i = 0, $$02533$i = 0, $$030$i = 0, $$034$i = 0, $$039 = 0, $$03942 = 0, $$040 = 0, $$044 = 0, $$045 = 0, $$1$i = 0, $$pre$phi$iZ2D = 0, $$sink = 0, $$sink$i$i = 0, $$sink15$i$i = 0, $108 = 0, $11 = 0, $112 = 0, $118 = 0, $120 = 0, $123 = 0, $125 = 0, $130 = 0, $133 = 0, $14 = 0, $140 = 0, $141 = 0, $145 = 0, $150 = 0, $156 = 0, $159 = 0, $160 = 0, $161 = 0, $163 = 0, $169 = 0, $176 = 0, $177 = 0, $181 = 0, $186 = 0, $187 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $53 = 0, $59 = 0, $62 = 0, $68 = 0, $69 = 0, $7 = 0, $73 = 0, $79 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $89 = 0, $9 = 0, $95 = 0, $98 = 0, label = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 if ((HEAP8[$1 >> 0] | 0) == 62) {
  $5 = $0 + 8 | 0;
  $7 = (HEAP32[$5 >> 2] | 0) + -8 | 0;
  $9 = HEAP32[$7 >> 2] | 0;
  HEAP32[$5 >> 2] = $7;
  $$0 = $1 + 1 | 0;
  $$039 = $9;
  $$040 = 0;
  label = 5;
 } else {
  $11 = HEAP32[$2 + 96 >> 2] | 0;
  if (!$11) {
   $$045 = $1;
   label = 8;
  } else {
   $14 = HEAP32[$0 + 40 >> 2] | 0;
   $$0 = $1;
   $$039 = HEAP32[HEAP32[$14 + ($11 * 24 | 0) + 4 >> 2] >> 2] | 0;
   $$040 = $14 + ($11 * 24 | 0) | 0;
   label = 5;
  }
 }
 L5 : do if ((label | 0) == 5) if (!$$039) {
  $$045 = $$0;
  label = 8;
 } else {
  $20 = HEAP8[$$0 >> 0] | 0;
  if (!($20 << 24 >> 24)) {
   $$024$i = 1;
   $$03942 = $$039;
   $$044 = $$0;
   $187 = 0;
  } else {
   $22 = $$039 + 6 | 0;
   $23 = $$039 + 16 | 0;
   $24 = $2 + 16 | 0;
   $25 = $2 + 28 | 0;
   $26 = $2 + 32 | 0;
   $27 = $2 + 12 | 0;
   $28 = $2 + 36 | 0;
   $29 = ($$040 | 0) == 0;
   $30 = $2 + 20 | 0;
   $31 = $$040 + 4 | 0;
   $32 = $0 + 20 | 0;
   $33 = $0 + 24 | 0;
   $34 = $$040 + 12 | 0;
   $35 = $$039 + 7 | 0;
   $36 = $2 + 24 | 0;
   $37 = $2 + 8 | 0;
   $38 = $2 + 4 | 0;
   $39 = $$040 + 20 | 0;
   $40 = $$040 + -24 | 0;
   $41 = $$040 + -20 | 0;
   $42 = $$040 + -12 | 0;
   $$02533$i = $$0;
   $$034$i = 1;
   $53 = $20;
   while (1) {
    L11 : do switch ($53 << 24 >> 24 | 0) {
    case 83:
     {
      if (!(HEAP8[$22 >> 0] | 0)) {
       $59 = (HEAP32[(HEAP32[$23 >> 2] | 0) + 32 >> 2] | 0) + 16 | 0;
       HEAP32[$24 >> 2] = $59;
       $62 = HEAP32[(HEAP32[$23 >> 2] | 0) + 60 >> 2] | 0;
       HEAP32[$25 >> 2] = $62;
       $$sink$i$i = ($62 | 0) == 0 ? 86810 : 86815;
       $$sink15$i$i = HEAP32[(HEAP32[$23 >> 2] | 0) + 64 >> 2] | 0;
       $68 = $59;
      } else {
       HEAP32[$24 >> 2] = 86805;
       HEAP32[$25 >> 2] = -1;
       $$sink$i$i = 102867;
       $$sink15$i$i = -1;
       $68 = 86805;
      }
      HEAP32[$26 >> 2] = $$sink15$i$i;
      HEAP32[$27 >> 2] = $$sink$i$i;
      __Z12luaO_chunkidPcPKcj($28, $68, 60);
      $$1$i = $$034$i;
      break;
     }
    case 108:
     {
      if ($29) $95 = -1; else {
       $69 = HEAP32[$31 >> 2] | 0;
       if ((HEAP32[$69 + 4 >> 2] | 0) == 6) {
        $73 = HEAP32[$69 >> 2] | 0;
        if (!(HEAP8[$73 + 6 >> 0] | 0)) {
         if ((HEAP32[$32 >> 2] | 0) == ($$040 | 0)) {
          $79 = HEAP32[$33 >> 2] | 0;
          HEAP32[$34 >> 2] = $79;
          $81 = HEAP32[$69 >> 2] | 0;
          $86 = $79;
         } else {
          $81 = $73;
          $86 = HEAP32[$34 >> 2] | 0;
         }
         $82 = HEAP32[$81 + 16 >> 2] | 0;
         $85 = $86 - (HEAP32[$82 + 12 >> 2] | 0) | 0;
         if (($85 | 0) < 4) $95 = -1; else {
          $89 = HEAP32[$82 + 20 >> 2] | 0;
          if (!$89) $95 = 0; else $95 = HEAP32[$89 + (($85 >> 2) + -1 << 2) >> 2] | 0;
         }
        } else $95 = -1;
       } else $95 = -1;
      }
      HEAP32[$30 >> 2] = $95;
      $$1$i = $$034$i;
      break;
     }
    case 117:
     {
      HEAP32[$36 >> 2] = HEAPU8[$35 >> 0];
      $$1$i = $$034$i;
      break;
     }
    case 110:
     {
      L32 : do if ($29) label = 35; else {
       $98 = HEAP32[$31 >> 2] | 0;
       if ((HEAP32[$98 + 4 >> 2] | 0) == 6) if (!(HEAP8[(HEAP32[$98 >> 2] | 0) + 6 >> 0] | 0)) if ((HEAP32[$39 >> 2] | 0) > 0) {
        label = 35;
        break;
       }
       $108 = HEAP32[$41 >> 2] | 0;
       if ((HEAP32[$108 + 4 >> 2] | 0) == 6) {
        $112 = HEAP32[$108 >> 2] | 0;
        if (!(HEAP8[$112 + 6 >> 0] | 0)) {
         if ((HEAP32[$32 >> 2] | 0) == ($40 | 0)) {
          $118 = HEAP32[$33 >> 2] | 0;
          HEAP32[$42 >> 2] = $118;
          $120 = HEAP32[$108 >> 2] | 0;
          $125 = $118;
         } else {
          $120 = $112;
          $125 = HEAP32[$42 >> 2] | 0;
         }
         $123 = HEAP32[(HEAP32[$120 + 16 >> 2] | 0) + 12 >> 2] | 0;
         $130 = HEAP32[$123 + (($125 - $123 >> 2) + -1 << 2) >> 2] | 0;
         switch ($130 & 63) {
         case 33:
         case 29:
         case 28:
          break;
         default:
          {
           label = 35;
           break L32;
          }
         }
         $133 = __ZL10getobjnameP9lua_StateP8CallInfoiPPKc($0, $40, $130 >>> 6 & 255, $38) | 0;
         HEAP32[$37 >> 2] = $133;
         if ($133 | 0) {
          $$1$i = $$034$i;
          break L11;
         }
        } else label = 35;
       } else label = 35;
      } while (0);
      if ((label | 0) == 35) {
       label = 0;
       HEAP32[$37 >> 2] = 0;
      }
      HEAP32[$37 >> 2] = 114224;
      HEAP32[$38 >> 2] = 0;
      $$1$i = $$034$i;
      break;
     }
    case 102:
    case 76:
     {
      $$1$i = $$034$i;
      break;
     }
    default:
     $$1$i = 0;
    } while (0);
    $$02533$i = $$02533$i + 1 | 0;
    $53 = HEAP8[$$02533$i >> 0] | 0;
    if (!($53 << 24 >> 24)) {
     $$024$i = $$1$i;
     $$03942 = $$039;
     $$044 = $$0;
     $187 = 0;
     break L5;
    } else $$034$i = $$1$i;
   }
  }
 } while (0);
 if ((label | 0) == 8) {
  HEAP32[$2 + 8 >> 2] = 114224;
  HEAP32[$2 + 4 >> 2] = 114224;
  HEAP32[$2 + 12 >> 2] = 86787;
  HEAP32[$2 + 20 >> 2] = -1;
  HEAP32[$2 + 28 >> 2] = -1;
  HEAP32[$2 + 32 >> 2] = -1;
  HEAP32[$2 + 16 >> 2] = 86792;
  __Z12luaO_chunkidPcPKcj($2 + 36 | 0, 86792, 60);
  HEAP32[$2 + 24 >> 2] = 0;
  $$024$i = 1;
  $$03942 = 0;
  $$044 = $$045;
  $187 = 1;
 }
 if (_strchr($$044, 102) | 0) {
  $140 = $0 + 8 | 0;
  $141 = HEAP32[$140 >> 2] | 0;
  if ($187) $$sink = 0; else {
   HEAP32[$141 >> 2] = $$03942;
   $$sink = 6;
  }
  HEAP32[$141 + 4 >> 2] = $$sink;
  $145 = HEAP32[$140 >> 2] | 0;
  if (((HEAP32[$0 + 28 >> 2] | 0) - $145 | 0) < 9) {
   __Z14luaD_growstackP9lua_Statei($0, 1);
   $150 = HEAP32[$140 >> 2] | 0;
  } else $150 = $145;
  HEAP32[$140 >> 2] = $150 + 8;
 }
 if (!(_strchr($$044, 76) | 0)) {
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return $$024$i | 0;
 }
 if ($187) label = 49; else if (!(HEAP8[$$03942 + 6 >> 0] | 0)) {
  $159 = __Z8luaH_newP9lua_Stateii($0, 0, 0) | 0;
  $160 = $$03942 + 16 | 0;
  $161 = HEAP32[$160 >> 2] | 0;
  $163 = HEAP32[$161 + 20 >> 2] | 0;
  if ((HEAP32[$161 + 48 >> 2] | 0) > 0) {
   $$030$i = 0;
   do {
    $169 = __Z11luaH_setnumP9lua_StateP5Tablei($0, $159, HEAP32[$163 + ($$030$i << 2) >> 2] | 0) | 0;
    HEAP32[$169 >> 2] = 1;
    HEAP32[$169 + 4 >> 2] = 1;
    $$030$i = $$030$i + 1 | 0;
   } while (($$030$i | 0) < (HEAP32[(HEAP32[$160 >> 2] | 0) + 48 >> 2] | 0));
  }
  $176 = $0 + 8 | 0;
  $177 = HEAP32[$176 >> 2] | 0;
  HEAP32[$177 >> 2] = $159;
  HEAP32[$177 + 4 >> 2] = 5;
  $$pre$phi$iZ2D = $176;
 } else label = 49;
 if ((label | 0) == 49) {
  $156 = $0 + 8 | 0;
  HEAP32[(HEAP32[$156 >> 2] | 0) + 4 >> 2] = 0;
  $$pre$phi$iZ2D = $156;
 }
 $181 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
 if (((HEAP32[$0 + 28 >> 2] | 0) - $181 | 0) < 9) {
  __Z14luaD_growstackP9lua_Statei($0, 1);
  $186 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
 } else $186 = $181;
 HEAP32[$$pre$phi$iZ2D >> 2] = $186 + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $$024$i | 0;
}

function __ZN10CGameSetup18LoadStartPositionsEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$lcssa$i$i$i = 0, $$02$i = 0, $$043 = 0, $$052$lcssa$i = 0, $$05255$i = 0, $$053$lcssa$i = 0, $$05354$i = 0, $$056$i = 0, $$08$i = 0, $$1$i = 0, $$in = 0, $$pre48 = 0, $101 = 0, $103 = 0, $105 = 0, $107 = 0, $109 = 0, $11 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $122 = 0, $123 = 0, $127 = 0, $13 = 0, $131 = 0, $132 = 0, $133 = 0, $135 = 0, $137 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $154 = 0, $158 = 0, $160 = 0, $166 = 0, $168 = 0, $169 = 0, $170 = 0, $174 = 0, $178 = 0, $18 = 0, $180 = 0, $186 = 0, $188 = 0, $193 = 0, $194 = 0, $195 = 0, $197 = 0, $2 = 0, $200 = 0, $206 = 0, $21 = 0, $213 = 0, $22 = 0, $226 = 0, $229 = 0, $235 = 0, $27 = 0, $3 = 0, $31 = 0, $34 = 0, $35 = 0, $39 = 0, $43 = 0, $44 = 0, $46 = 0, $52 = 0, $53 = 0, $57 = 0, $6 = 0, $64 = 0, $66 = 0, $67 = 0, $7 = 0, $72 = 0, $79 = 0, $8 = 0, $84 = 0, $86 = 0, $91 = 0, $93 = 0, $97 = 0, $99 = 0, sp = 0, $168$looptemp = 0, $169$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $2 = sp + 32 | 0;
 $3 = sp;
 if ($1) if ((HEAP32[$0 + 40 >> 2] | 0) >>> 0 < 2) {
  $6 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 82691, 49);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($6, $2);
  HEAP32[$6 >> 2] = 68080;
  ___cxa_throw($6 | 0, 192, 31);
 }
 $7 = $0 + 224 | 0;
 $8 = $0 + 228 | 0;
 $11 = (HEAP32[$8 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) | 0;
 $12 = ($11 | 0) / 76 | 0;
 HEAP32[$2 >> 2] = 0;
 $13 = $2 + 4 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 if ($11 | 0) {
  if ($12 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($2);
  $18 = __Znwj($12 << 2) | 0;
  HEAP32[$13 >> 2] = $18;
  HEAP32[$2 >> 2] = $18;
  HEAP32[$2 + 8 >> 2] = $18 + ($12 << 2);
  $$0$i$i = $12;
  $21 = $18;
  do {
   HEAP32[$21 >> 2] = 0;
   $22 = HEAP32[$13 >> 2] | 0;
   $21 = $22 + 4 | 0;
   HEAP32[$13 >> 2] = $21;
   $$0$i$i = $$0$i$i + -1 | 0;
  } while (($$0$i$i | 0) != 0);
  if (($18 | 0) != ($21 | 0)) {
   $$02$i = 0;
   $27 = $18;
   while (1) {
    HEAP32[$27 >> 2] = $$02$i;
    if (($27 | 0) == ($22 | 0)) break; else {
     $$02$i = $$02$i + 1 | 0;
     $27 = $27 + 4 | 0;
    }
   }
  }
 }
 $31 = $0 + 40 | 0;
 if ((HEAP32[$31 >> 2] | 0) == 1) {
  $34 = $3 + 8 | 0;
  $35 = $34;
  HEAP32[$35 >> 2] = 695383991;
  HEAP32[$35 + 4 >> 2] = -1266912361;
  $39 = $3;
  HEAP32[$39 >> 2] = 271183393;
  HEAP32[$39 + 4 >> 2] = -367295438;
  $43 = $3 + 16 | 0;
  HEAP32[$43 >> 2] = 0;
  HEAP32[$43 + 4 >> 2] = 0;
  HEAP32[$43 + 8 >> 2] = 0;
  HEAP32[$43 + 12 >> 2] = 0;
  $44 = $0 + 80 | 0;
  $46 = HEAP8[$44 + 11 >> 0] | 0;
  if ($46 << 24 >> 24 < 0) {
   $235 = HEAP32[$44 >> 2] | 0;
   $53 = HEAP32[$0 + 84 >> 2] | 0;
  } else {
   $235 = $44;
   $53 = $46 & 255;
  }
  $52 = $53 >> 2;
  if (($52 | 0) > 0) {
   $$05255$i = 1234567;
   $$05354$i = $235;
   $$056$i = $52;
   while (1) {
    $57 = (HEAPU16[$$05354$i >> 1] | 0) + $$05255$i | 0;
    $64 = (HEAPU16[$$05354$i + 2 >> 1] | 0) << 11 ^ $57 ^ $57 << 16;
    $66 = ($64 >>> 11) + $64 | 0;
    $67 = $$05354$i + 4 | 0;
    if (($$056$i | 0) > 1) {
     $$05255$i = $66;
     $$05354$i = $67;
     $$056$i = $$056$i + -1 | 0;
    } else {
     $$052$lcssa$i = $66;
     $$053$lcssa$i = $67;
     break;
    }
   }
  } else {
   $$052$lcssa$i = 1234567;
   $$053$lcssa$i = $235;
  }
  switch ($53 & 3) {
  case 3:
   {
    $72 = (HEAPU16[$$053$lcssa$i >> 1] | 0) + $$052$lcssa$i | 0;
    $79 = $72 << 16 ^ $72 ^ (HEAPU8[$$053$lcssa$i + 2 >> 0] | 0) << 18;
    $$1$i = ($79 >>> 11) + $79 | 0;
    break;
   }
  case 2:
   {
    $84 = (HEAPU16[$$053$lcssa$i >> 1] | 0) + $$052$lcssa$i | 0;
    $86 = $84 << 11 ^ $84;
    $$1$i = ($86 >>> 17) + $86 | 0;
    break;
   }
  case 1:
   {
    $91 = (HEAPU8[$$053$lcssa$i >> 0] | 0) + $$052$lcssa$i | 0;
    $93 = $91 << 10 ^ $91;
    $$1$i = ($93 >>> 1) + $93 | 0;
    break;
   }
  default:
   $$1$i = $$052$lcssa$i;
  }
  $97 = $$1$i << 3 ^ $$1$i;
  $99 = ($97 >>> 5) + $97 | 0;
  $101 = $99 << 4 ^ $99;
  $103 = ($101 >>> 17) + $101 | 0;
  $105 = $103 << 25 ^ $103;
  $107 = ($105 >>> 6) + $105 | 0;
  $109 = $3 + 24 | 0;
  HEAP32[$109 >> 2] = $107;
  HEAP32[$109 + 4 >> 2] = 0;
  $114 = _bitshift64Shl($3 | 0, 0, 1) | 0;
  $115 = tempRet0;
  $116 = $114 | 1;
  $117 = _i64Add($107 | 0, 0, $116 | 0, $115 | 0) | 0;
  $119 = ___muldi3($117 | 0, tempRet0 | 0, 1284865837, 1481765933) | 0;
  $121 = _i64Add($119 | 0, tempRet0 | 0, $116 | 0, $115 | 0) | 0;
  $122 = tempRet0;
  $123 = $34;
  HEAP32[$123 >> 2] = $116;
  HEAP32[$123 + 4 >> 2] = $115;
  $127 = $3;
  HEAP32[$127 >> 2] = $121;
  HEAP32[$127 + 4 >> 2] = $122;
  $131 = HEAP32[$2 >> 2] | 0;
  $132 = HEAP32[$13 >> 2] | 0;
  $133 = $132 - $131 | 0;
  $135 = $131;
  L31 : do if (($133 | 0) > 4) {
   $137 = $132 + -4 | 0;
   if ($135 >>> 0 < $137 >>> 0) {
    $$08$i = $133 >> 2;
    $142 = $121;
    $143 = $122;
    $146 = $116;
    $147 = $115;
    $194 = $135;
    while (1) {
     $141 = ((0 - $$08$i | 0) >>> 0) % ($$08$i >>> 0) | 0;
     $144 = ___muldi3($142 | 0, $143 | 0, 1284865837, 1481765933) | 0;
     $148 = _i64Add($144 | 0, tempRet0 | 0, $146 | 0, $147 | 0) | 0;
     $149 = tempRet0;
     $150 = $3;
     HEAP32[$150 >> 2] = $148;
     HEAP32[$150 + 4 >> 2] = $149;
     $154 = _bitshift64Lshr($142 | 0, $143 | 0, 18) | 0;
     $158 = _bitshift64Lshr($154 ^ $142 | 0, tempRet0 ^ $143 | 0, 27) | 0;
     $160 = _bitshift64Lshr($142 | 0, $143 | 0, 59) | 0;
     $166 = $158 >>> $160 | $158 << (0 - $160 & 31);
     if ($166 >>> 0 < $141 >>> 0) {
      $168 = $148;
      $169 = $149;
      do {
       $170 = ___muldi3($168 | 0, $169 | 0, 1284865837, 1481765933) | 0;
       $168$looptemp = $168;
       $168 = _i64Add($170 | 0, tempRet0 | 0, $146 | 0, $147 | 0) | 0;
       $169$looptemp = $169;
       $169 = tempRet0;
       $174 = _bitshift64Lshr($168$looptemp | 0, $169$looptemp | 0, 18) | 0;
       $178 = _bitshift64Lshr($174 ^ $168$looptemp | 0, tempRet0 ^ $169$looptemp | 0, 27) | 0;
       $180 = _bitshift64Lshr($168$looptemp | 0, $169$looptemp | 0, 59) | 0;
       $186 = $178 >>> $180 | $178 << (0 - $180 & 31);
      } while ($186 >>> 0 < $141 >>> 0);
      $188 = $3;
      HEAP32[$188 >> 2] = $168;
      HEAP32[$188 + 4 >> 2] = $169;
      $$0$lcssa$i$i$i = $186;
     } else $$0$lcssa$i$i$i = $166;
     $193 = $194 + ((($$0$lcssa$i$i$i >>> 0) % ($$08$i >>> 0) | 0) << 2) | 0;
     $195 = HEAP32[$194 >> 2] | 0;
     HEAP32[$194 >> 2] = HEAP32[$193 >> 2];
     HEAP32[$193 >> 2] = $195;
     $197 = $194 + 4 | 0;
     if ($197 >>> 0 >= $137 >>> 0) break L31;
     $200 = $3;
     $206 = $34;
     $$08$i = $$08$i + -1 | 0;
     $142 = HEAP32[$200 >> 2] | 0;
     $143 = HEAP32[$200 + 4 >> 2] | 0;
     $146 = HEAP32[$206 >> 2] | 0;
     $147 = HEAP32[$206 + 4 >> 2] | 0;
     $194 = $197;
    }
   }
  } while (0);
 }
 $213 = HEAP32[$7 >> 2] | 0;
 if ((HEAP32[$8 >> 2] | 0) != ($213 | 0)) {
  $$pre48 = HEAP32[$2 >> 2] | 0;
  $$043 = 0;
  $$in = $213;
  do {
   HEAP32[$$in + ($$043 * 76 | 0) + 12 >> 2] = HEAP32[$$pre48 + ($$043 << 2) >> 2];
   $$043 = $$043 + 1 | 0;
   $$in = HEAP32[$7 >> 2] | 0;
  } while ($$043 >>> 0 < (((HEAP32[$8 >> 2] | 0) - $$in | 0) / 76 | 0) >>> 0);
 }
 if ((HEAP32[$31 >> 2] | 0) >>> 0 < 2) __ZN10CGameSetup25LoadStartPositionsFromMapEv($0);
 $226 = HEAP32[$2 >> 2] | 0;
 if (!$226) {
  STACKTOP = sp;
  return;
 }
 $229 = HEAP32[$13 >> 2] | 0;
 if (($229 | 0) != ($226 | 0)) HEAP32[$13 >> 2] = $229 + (~(($229 + -4 - $226 | 0) >>> 2) << 2);
 __ZdlPv($226);
 STACKTOP = sp;
 return;
}

function __ZL10singlestepP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i40$i = 0, $$0$lcssa$i43$i = 0, $$013$i$i = 0, $$014$i$i = 0, $$04$i41$i = 0, $$040$i$i = 0, $$in$i$i = 0, $$in42$i$i = 0, $$pre$phi$iZ2D = 0, $1 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $110 = 0, $111 = 0, $115 = 0, $116 = 0, $125 = 0, $129 = 0, $130 = 0, $136 = 0, $146 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $17 = 0, $170 = 0, $174 = 0, $175 = 0, $176 = 0, $178 = 0, $181 = 0, $185 = 0, $190 = 0, $191 = 0, $192 = 0, $194 = 0, $2 = 0, $200 = 0, $202 = 0, $209 = 0, $21 = 0, $210 = 0, $3 = 0, $31 = 0, $41 = 0, $42 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $66 = 0, $69 = 0, $72 = 0, $78 = 0, $80 = 0, $81 = 0, $82 = 0, $86 = 0, $87 = 0, $9 = 0, $93 = 0, label = 0;
 $1 = $0 + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $2 + 21 | 0;
 switch (HEAP8[$3 >> 0] | 0) {
 case 0:
  {
   __ZL8markrootP9lua_State($0);
   $$0 = 0;
   return $$0 | 0;
  }
 case 1:
  {
   $5 = $2 + 36 | 0;
   if (HEAP32[$5 >> 2] | 0) {
    $$0 = __ZL13propagatemarkP12global_State($2) | 0;
    return $$0 | 0;
   }
   $9 = $2 + 104 | 0;
   $$013$i$i = HEAP32[$2 + 120 >> 2] | 0;
   if (($$013$i$i | 0) != ($9 | 0)) {
    $$014$i$i = $$013$i$i;
    do {
     if (!(HEAP8[$$014$i$i + 5 >> 0] & 7)) {
      $17 = HEAP32[$$014$i$i + 8 >> 2] | 0;
      if ((HEAP32[$17 + 4 >> 2] | 0) > 3) {
       $21 = HEAP32[$17 >> 2] | 0;
       if (HEAP8[$21 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($2, $21);
      }
     }
     $$014$i$i = HEAP32[$$014$i$i + 16 >> 2] | 0;
    } while (($$014$i$i | 0) != ($9 | 0));
    if (HEAP32[$5 >> 2] | 0) do __ZL13propagatemarkP12global_State($2) | 0; while ((HEAP32[$5 >> 2] | 0) != 0);
   }
   $31 = $2 + 44 | 0;
   HEAP32[$5 >> 2] = HEAP32[$31 >> 2];
   HEAP32[$31 >> 2] = 0;
   if (HEAP8[$0 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($2, $0);
   __ZL6markmtP12global_State($2);
   if (HEAP32[$5 >> 2] | 0) do __ZL13propagatemarkP12global_State($2) | 0; while ((HEAP32[$5 >> 2] | 0) != 0);
   $41 = $2 + 40 | 0;
   $42 = HEAP32[$41 >> 2] | 0;
   HEAP32[$5 >> 2] = $42;
   HEAP32[$41 >> 2] = 0;
   if ($42 | 0) do __ZL13propagatemarkP12global_State($2) | 0; while ((HEAP32[$5 >> 2] | 0) != 0);
   $46 = __Z18luaC_separateudataP9lua_Statei($0, 0) | 0;
   $47 = $2 + 48 | 0;
   $48 = HEAP32[$47 >> 2] | 0;
   if ($48 | 0) {
    $50 = $2 + 20 | 0;
    $$0$i40$i = $48;
    do {
     $$0$i40$i = HEAP32[$$0$i40$i >> 2] | 0;
     $52 = $$0$i40$i + 5 | 0;
     HEAP8[$52 >> 0] = HEAPU8[$50 >> 0] & 3 | HEAPU8[$52 >> 0] & 248;
     __ZL16reallymarkobjectP12global_StateP8GCObject($2, $$0$i40$i);
    } while (($$0$i40$i | 0) != (HEAP32[$47 >> 2] | 0));
   }
   if (!(HEAP32[$5 >> 2] | 0)) $$0$lcssa$i43$i = 0; else {
    $$04$i41$i = 0;
    while (1) {
     $66 = (__ZL13propagatemarkP12global_State($2) | 0) + $$04$i41$i | 0;
     if (!(HEAP32[$5 >> 2] | 0)) {
      $$0$lcssa$i43$i = $66;
      break;
     } else $$04$i41$i = $66;
    }
   }
   $69 = HEAP32[$31 >> 2] | 0;
   if ($69 | 0) {
    $$040$i$i = $69;
    do {
     $72 = HEAP32[$$040$i$i + 28 >> 2] | 0;
     if (!(($72 | 0) == 0 | (HEAP8[$$040$i$i + 5 >> 0] & 16) == 0)) {
      $78 = $$040$i$i + 12 | 0;
      $$in$i$i = $72;
      do {
       $$in$i$i = $$in$i$i + -1 | 0;
       $80 = HEAP32[$78 >> 2] | 0;
       $81 = $80 + ($$in$i$i << 3) + 4 | 0;
       $82 = HEAP32[$81 >> 2] | 0;
       do if (($82 | 0) > 3) {
        $86 = HEAP32[$80 + ($$in$i$i << 3) >> 2] | 0;
        if (($82 | 0) == 4) {
         $87 = $86 + 5 | 0;
         HEAP8[$87 >> 0] = HEAPU8[$87 >> 0] & 252;
         break;
        }
        $93 = HEAP8[$86 + 5 >> 0] | 0;
        if (!($93 & 3)) if (($82 | 0) != 7 | ($93 & 8) == 0) break;
        HEAP32[$81 >> 2] = 0;
       } while (0);
      } while (($$in$i$i | 0) != 0);
     }
     $103 = $$040$i$i + 16 | 0;
     $$in42$i$i = 1 << HEAPU8[$$040$i$i + 7 >> 0];
     do {
      $$in42$i$i = $$in42$i$i + -1 | 0;
      $105 = HEAP32[$103 >> 2] | 0;
      $106 = $105 + ($$in42$i$i * 20 | 0) + 4 | 0;
      $107 = HEAP32[$106 >> 2] | 0;
      do if ($107 | 0) {
       $110 = $105 + ($$in42$i$i * 20 | 0) + 12 | 0;
       $111 = HEAP32[$110 >> 2] | 0;
       do if (($111 | 0) > 3) {
        $115 = HEAP32[$105 + ($$in42$i$i * 20 | 0) + 8 >> 2] | 0;
        if (($111 | 0) == 4) {
         $116 = $115 + 5 | 0;
         HEAP8[$116 >> 0] = HEAPU8[$116 >> 0] & 252;
         $125 = HEAP32[$106 >> 2] | 0;
         label = 41;
         break;
        } else if (!(HEAP8[$115 + 5 >> 0] & 3)) {
         $125 = $107;
         label = 41;
         break;
        } else break;
       } else {
        $125 = $107;
        label = 41;
       } while (0);
       if ((label | 0) == 41) {
        label = 0;
        if (($125 | 0) <= 3) break;
        $129 = HEAP32[$105 + ($$in42$i$i * 20 | 0) >> 2] | 0;
        if (($125 | 0) == 4) {
         $130 = $129 + 5 | 0;
         HEAP8[$130 >> 0] = HEAPU8[$130 >> 0] & 252;
         break;
        }
        $136 = HEAP8[$129 + 5 >> 0] | 0;
        if (!($136 & 3)) if (($125 | 0) != 7 | ($136 & 8) == 0) break;
       }
       HEAP32[$106 >> 2] = 0;
       if ((HEAP32[$110 >> 2] | 0) > 3) HEAP32[$110 >> 2] = 11;
      } while (0);
     } while (($$in42$i$i | 0) != 0);
     $$040$i$i = HEAP32[$$040$i$i + 24 >> 2] | 0;
    } while (($$040$i$i | 0) != 0);
   }
   $146 = $2 + 20 | 0;
   HEAP8[$146 >> 0] = HEAPU8[$146 >> 0] ^ 3;
   HEAP32[$2 + 24 >> 2] = 0;
   HEAP32[$2 + 32 >> 2] = $2 + 28;
   HEAP8[$3 >> 0] = 2;
   HEAP32[$2 + 72 >> 2] = (HEAP32[$2 + 68 >> 2] | 0) - ($$0$lcssa$i43$i + $46);
   $$0 = 0;
   return $$0 | 0;
  }
 case 2:
  {
   $158 = $2 + 68 | 0;
   $159 = HEAP32[$158 >> 2] | 0;
   $160 = $2 + 24 | 0;
   $161 = HEAP32[$160 >> 2] | 0;
   HEAP32[$160 >> 2] = $161 + 1;
   __ZL9sweeplistP9lua_StatePP8GCObjectj($0, (HEAP32[$2 >> 2] | 0) + ($161 << 2) | 0, -3) | 0;
   if ((HEAP32[$160 >> 2] | 0) >= (HEAP32[$2 + 8 >> 2] | 0)) HEAP8[$3 >> 0] = 3;
   $170 = $2 + 72 | 0;
   HEAP32[$170 >> 2] = (HEAP32[$158 >> 2] | 0) - $159 + (HEAP32[$170 >> 2] | 0);
   $$0 = 10;
   return $$0 | 0;
  }
 case 3:
  {
   $174 = $2 + 68 | 0;
   $175 = HEAP32[$174 >> 2] | 0;
   $176 = $2 + 32 | 0;
   $178 = __ZL9sweeplistP9lua_StatePP8GCObjectj($0, HEAP32[$176 >> 2] | 0, 40) | 0;
   HEAP32[$176 >> 2] = $178;
   if (!(HEAP32[$178 >> 2] | 0)) {
    $181 = HEAP32[$1 >> 2] | 0;
    $185 = HEAP32[$181 + 8 >> 2] | 0;
    if (($185 | 0) > 64 ? (HEAP32[$181 + 4 >> 2] | 0) >>> 0 < (($185 | 0) / 4 | 0) >>> 0 : 0) __Z11luaS_resizeP9lua_Statei($0, ($185 | 0) / 2 | 0);
    $190 = $181 + 52 | 0;
    $191 = $181 + 60 | 0;
    $192 = HEAP32[$191 >> 2] | 0;
    if ($192 >>> 0 > 64) {
     $194 = $192 >>> 1;
     if (($194 + 1 | 0) >>> 0 < 4294967294) {
      $$pre$phi$iZ2D = $190;
      $200 = __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$190 >> 2] | 0, $192, $194) | 0;
     } else {
      $$pre$phi$iZ2D = $190;
      $200 = __Z11luaM_toobigP9lua_State($0) | 0;
     }
     HEAP32[$$pre$phi$iZ2D >> 2] = $200;
     HEAP32[$191 >> 2] = $194;
    }
    HEAP8[$3 >> 0] = 4;
   }
   $202 = $2 + 72 | 0;
   HEAP32[$202 >> 2] = (HEAP32[$174 >> 2] | 0) - $175 + (HEAP32[$202 >> 2] | 0);
   $$0 = 400;
   return $$0 | 0;
  }
 case 4:
  {
   if (!(HEAP32[$2 + 48 >> 2] | 0)) {
    HEAP8[$3 >> 0] = 0;
    HEAP32[$2 + 76 >> 2] = 0;
    $$0 = 0;
    return $$0 | 0;
   }
   __ZL4GCTMP9lua_State($0);
   $209 = $2 + 72 | 0;
   $210 = HEAP32[$209 >> 2] | 0;
   if ($210 >>> 0 <= 100) {
    $$0 = 100;
    return $$0 | 0;
   }
   HEAP32[$209 >> 2] = $210 + -100;
   $$0 = 100;
   return $$0 | 0;
  }
 default:
  {
   $$0 = 0;
   return $$0 | 0;
  }
 }
 return 0;
}

function _mbsrtowcs($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$086 = 0, $$087 = 0, $$087$ph = 0, $$094$ph = 0, $$094119 = 0, $$099 = 0, $$099$ph = 0, $$10 = 0, $$10109 = 0, $$10135 = 0, $$1100115 = 0, $$188116 = 0, $$195 = 0, $$2 = 0, $$2101 = 0, $$289 = 0, $$296 = 0, $$3102 = 0, $$390 = 0, $$397 = 0, $$4 = 0, $$4103$ph = 0, $$4103118 = 0, $$491 = 0, $$498 = 0, $$498108 = 0, $$498134 = 0, $$5 = 0, $$5104 = 0, $$592$lcssa = 0, $$592$ph = 0, $$592120 = 0, $$6 = 0, $$6105 = 0, $$693 = 0, $$7 = 0, $$7106 = 0, $$8 = 0, $$8107 = 0, $$8107133 = 0, $$9 = 0, $102 = 0, $106 = 0, $11 = 0, $112 = 0, $113 = 0, $121 = 0, $123 = 0, $127 = 0, $131 = 0, $132 = 0, $136 = 0, $18 = 0, $23 = 0, $26 = 0, $32 = 0, $33 = 0, $38 = 0, $4 = 0, $45 = 0, $52 = 0, $59 = 0, $6 = 0, $68 = 0, $76 = 0, $92 = 0, $95 = 0, $96 = 0, $98 = 0, $99 = 0, label = 0;
 $4 = HEAP32[$1 >> 2] | 0;
 if (!$3) label = 5; else {
  $6 = HEAP32[$3 >> 2] | 0;
  if (!$6) label = 5; else if (!$0) {
   $$2 = $6;
   $$3102 = $2;
   $$390 = $4;
   label = 17;
  } else {
   HEAP32[$3 >> 2] = 0;
   $$397 = $0;
   $$4 = $6;
   $$7106 = $2;
   $$8 = $4;
   label = 38;
  }
 }
 if ((label | 0) == 5) if (!$0) {
  $$087$ph = $4;
  $$099$ph = $2;
  label = 7;
 } else {
  $$094$ph = $0;
  $$4103$ph = $2;
  $$592$ph = $4;
  label = 6;
 }
 L7 : while (1) if ((label | 0) == 6) {
  label = 0;
  if (!$$4103$ph) {
   $$592$lcssa = $$592$ph;
   label = 27;
   break;
  } else {
   $$094119 = $$094$ph;
   $$4103118 = $$4103$ph;
   $$592120 = $$592$ph;
  }
  while (1) {
   $68 = HEAP8[$$592120 >> 0] | 0;
   do if ((($68 & 255) + -1 | 0) >>> 0 < 127) if ($$4103118 >>> 0 > 4 & ($$592120 & 3 | 0) == 0) {
    $$195 = $$094119;
    $$5104 = $$4103118;
    $$693 = $$592120;
    while (1) {
     $76 = HEAP32[$$693 >> 2] | 0;
     if (($76 + -16843009 | $76) & -2139062144 | 0) {
      label = 33;
      break;
     }
     HEAP32[$$195 >> 2] = $76 & 255;
     HEAP32[$$195 + 4 >> 2] = HEAPU8[$$693 + 1 >> 0];
     HEAP32[$$195 + 8 >> 2] = HEAPU8[$$693 + 2 >> 0];
     $92 = $$693 + 4 | 0;
     $95 = $$195 + 16 | 0;
     HEAP32[$$195 + 12 >> 2] = HEAPU8[$$693 + 3 >> 0];
     $96 = $$5104 + -4 | 0;
     if ($96 >>> 0 > 4) {
      $$195 = $95;
      $$5104 = $96;
      $$693 = $92;
     } else {
      label = 32;
      break;
     }
    }
    if ((label | 0) == 32) {
     label = 0;
     $$296 = $95;
     $$6105 = $96;
     $$7 = $92;
     $99 = HEAP8[$92 >> 0] | 0;
     break;
    } else if ((label | 0) == 33) {
     label = 0;
     $$296 = $$195;
     $$6105 = $$5104;
     $$7 = $$693;
     $99 = $76 & 255;
     break;
    }
   } else {
    $$296 = $$094119;
    $$6105 = $$4103118;
    $$7 = $$592120;
    $99 = $68;
   } else {
    $$296 = $$094119;
    $$6105 = $$4103118;
    $$7 = $$592120;
    $99 = $68;
   } while (0);
   $98 = $99 & 255;
   if (($98 + -1 | 0) >>> 0 >= 127) break;
   $102 = $$7 + 1 | 0;
   HEAP32[$$296 >> 2] = $98;
   $$4103118 = $$6105 + -1 | 0;
   if (!$$4103118) {
    $$592$lcssa = $102;
    label = 27;
    break L7;
   } else {
    $$094119 = $$296 + 4 | 0;
    $$592120 = $102;
   }
  }
  $106 = $98 + -194 | 0;
  if ($106 >>> 0 > 50) {
   $$10135 = $$7;
   $$498134 = $$296;
   $$8107133 = $$6105;
   label = 49;
   break;
  }
  $$397 = $$296;
  $$4 = HEAP32[69880 + ($106 << 2) >> 2] | 0;
  $$7106 = $$6105;
  $$8 = $$7 + 1 | 0;
  label = 38;
  continue;
 } else if ((label | 0) == 7) {
  label = 0;
  $$087 = $$087$ph;
  $$099 = $$099$ph;
  while (1) {
   $11 = HEAP8[$$087 >> 0] | 0;
   if ((($11 & 255) + -1 | 0) >>> 0 < 127) if (!($$087 & 3)) {
    $18 = HEAP32[$$087 >> 2] | 0;
    $23 = $18 & 255;
    if (!(($18 + -16843009 | $18) & -2139062144)) {
     $$1100115 = $$099;
     $$188116 = $$087;
     do {
      $$188116 = $$188116 + 4 | 0;
      $$1100115 = $$1100115 + -4 | 0;
      $26 = HEAP32[$$188116 >> 2] | 0;
     } while (!(($26 + -16843009 | $26) & -2139062144 | 0));
     $$2101 = $$1100115;
     $$289 = $$188116;
     $33 = $26 & 255;
    } else {
     $$2101 = $$099;
     $$289 = $$087;
     $33 = $23;
    }
   } else {
    $$2101 = $$099;
    $$289 = $$087;
    $33 = $11;
   } else {
    $$2101 = $$099;
    $$289 = $$087;
    $33 = $11;
   }
   $32 = $33 & 255;
   if (($32 + -1 | 0) >>> 0 >= 127) break;
   $$087 = $$289 + 1 | 0;
   $$099 = $$2101 + -1 | 0;
  }
  $38 = $32 + -194 | 0;
  if ($38 >>> 0 > 50) {
   $$10135 = $$289;
   $$498134 = $0;
   $$8107133 = $$2101;
   label = 49;
   break;
  }
  $$2 = HEAP32[69880 + ($38 << 2) >> 2] | 0;
  $$3102 = $$2101;
  $$390 = $$289 + 1 | 0;
  label = 17;
  continue;
 } else if ((label | 0) == 17) {
  label = 0;
  $45 = (HEAPU8[$$390 >> 0] | 0) >>> 3;
  if (($45 + -16 | $45 + ($$2 >> 26)) >>> 0 > 7) {
   label = 18;
   break;
  }
  $52 = $$390 + 1 | 0;
  if (!($$2 & 33554432)) $$491 = $52; else {
   if ((HEAP8[$52 >> 0] & -64) << 24 >> 24 != -128) {
    label = 21;
    break;
   }
   $59 = $$390 + 2 | 0;
   if (!($$2 & 524288)) $$491 = $59; else {
    if ((HEAP8[$59 >> 0] & -64) << 24 >> 24 != -128) {
     label = 24;
     break;
    }
    $$491 = $$390 + 3 | 0;
   }
  }
  $$087$ph = $$491;
  $$099$ph = $$3102 + -1 | 0;
  label = 7;
  continue;
 } else if ((label | 0) == 38) {
  label = 0;
  $112 = HEAPU8[$$8 >> 0] | 0;
  $113 = $112 >>> 3;
  if (($113 + -16 | $113 + ($$4 >> 26)) >>> 0 > 7) {
   label = 39;
   break;
  }
  $121 = $$8 + 1 | 0;
  $123 = $112 + -128 | $$4 << 6;
  if (($123 | 0) < 0) {
   $127 = (HEAPU8[$121 >> 0] | 0) + -128 | 0;
   if ($127 >>> 0 > 63) {
    label = 42;
    break;
   }
   $131 = $$8 + 2 | 0;
   $132 = $127 | $123 << 6;
   if (($132 | 0) < 0) {
    $136 = (HEAPU8[$131 >> 0] | 0) + -128 | 0;
    if ($136 >>> 0 > 63) {
     label = 45;
     break;
    }
    $$5 = $136 | $132 << 6;
    $$9 = $$8 + 3 | 0;
   } else {
    $$5 = $132;
    $$9 = $131;
   }
  } else {
   $$5 = $123;
   $$9 = $121;
  }
  HEAP32[$$397 >> 2] = $$5;
  $$094$ph = $$397 + 4 | 0;
  $$4103$ph = $$7106 + -1 | 0;
  $$592$ph = $$9;
  label = 6;
  continue;
 }
 if ((label | 0) == 18) {
  $$10 = $$390 + -1 | 0;
  $$498 = $0;
  $$6 = $$2;
  $$8107 = $$3102;
  label = 48;
 } else if ((label | 0) == 21) {
  $$10 = $$390 + -1 | 0;
  $$498 = $0;
  $$6 = $$2;
  $$8107 = $$3102;
  label = 48;
 } else if ((label | 0) == 24) {
  $$10 = $$390 + -1 | 0;
  $$498 = $0;
  $$6 = $$2;
  $$8107 = $$3102;
  label = 48;
 } else if ((label | 0) == 27) {
  HEAP32[$1 >> 2] = $$592$lcssa;
  $$086 = $2;
 } else if ((label | 0) == 39) {
  $$10 = $$8 + -1 | 0;
  $$498 = $$397;
  $$6 = $$4;
  $$8107 = $$7106;
  label = 48;
 } else if ((label | 0) == 42) {
  $$10109 = $$8 + -1 | 0;
  $$498108 = $$397;
  label = 53;
 } else if ((label | 0) == 45) {
  $$10109 = $$8 + -1 | 0;
  $$498108 = $$397;
  label = 53;
 }
 if ((label | 0) == 48) if (!$$6) {
  $$10135 = $$10;
  $$498134 = $$498;
  $$8107133 = $$8107;
  label = 49;
 } else {
  $$10109 = $$10;
  $$498108 = $$498;
  label = 53;
 }
 if ((label | 0) == 49) if (!(HEAP8[$$10135 >> 0] | 0)) {
  if ($$498134 | 0) {
   HEAP32[$$498134 >> 2] = 0;
   HEAP32[$1 >> 2] = 0;
  }
  $$086 = $2 - $$8107133 | 0;
 } else {
  $$10109 = $$10135;
  $$498108 = $$498134;
  label = 53;
 }
 if ((label | 0) == 53) {
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  if (!$$498108) $$086 = -1; else {
   HEAP32[$1 >> 2] = $$10109;
   $$086 = -1;
  }
 }
 return $$086 | 0;
}

function __Z17luaO_pushvfstringP9lua_StatePKcPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0$lcssa = 0, $$069$lcssa = 0, $$06984 = 0, $$085 = 0, $$cast = 0, $$lcssa = 0, $10 = 0, $102 = 0, $106 = 0, $107 = 0, $113 = 0, $114 = 0, $115 = 0, $120 = 0, $124 = 0, $125 = 0, $129 = 0, $133 = 0, $134 = 0, $139 = 0, $14 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $153 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $3 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $46 = 0, $5 = 0, $51 = 0, $55 = 0, $56 = 0, $62 = 0, $63 = 0, $65 = 0, $70 = 0, $74 = 0, $75 = 0, $8 = 0, $81 = 0, $82 = 0, $86 = 0, $90 = 0, $91 = 0, $97 = 0, $98 = 0.0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $3 = sp + 8 | 0;
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$5 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 114224, 0) | 0;
 HEAP32[$5 + 4 >> 2] = 4;
 $8 = $0 + 28 | 0;
 $10 = HEAP32[$4 >> 2] | 0;
 if (((HEAP32[$8 >> 2] | 0) - $10 | 0) < 9) {
  __Z14luaD_growstackP9lua_Statei($0, 1);
  $15 = HEAP32[$4 >> 2] | 0;
 } else $15 = $10;
 $14 = $15 + 8 | 0;
 HEAP32[$4 >> 2] = $14;
 $16 = _strchr($1, 37) | 0;
 L4 : do if (!$16) {
  $$0$lcssa = $1;
  $$069$lcssa = 1;
  $$lcssa = $14;
 } else {
  $18 = $3 + 1 | 0;
  $19 = $3 + 2 | 0;
  $20 = $3 + 1 | 0;
  $$06984 = 1;
  $$085 = $1;
  $21 = $16;
  $26 = $14;
  while (1) {
   HEAP32[$26 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $$085, $21 - $$085 | 0) | 0;
   HEAP32[$26 + 4 >> 2] = 4;
   $29 = HEAP32[$4 >> 2] | 0;
   if (((HEAP32[$8 >> 2] | 0) - $29 | 0) < 9) {
    __Z14luaD_growstackP9lua_Statei($0, 1);
    $34 = HEAP32[$4 >> 2] | 0;
   } else $34 = $29;
   $33 = $34 + 8 | 0;
   HEAP32[$4 >> 2] = $33;
   $36 = HEAP8[$21 + 1 >> 0] | 0;
   switch ($36 << 24 >> 24 | 0) {
   case 115:
    {
     $43 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $44 = HEAP32[$43 >> 2] | 0;
     HEAP32[$2 >> 2] = $43 + 4;
     $$ = ($44 | 0) == 0 ? 93759 : $44;
     $46 = HEAP32[$4 >> 2] | 0;
     HEAP32[$46 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $$, _strlen($$) | 0) | 0;
     HEAP32[$46 + 4 >> 2] = 4;
     $51 = HEAP32[$4 >> 2] | 0;
     if (((HEAP32[$8 >> 2] | 0) - $51 | 0) < 9) {
      __Z14luaD_growstackP9lua_Statei($0, 1);
      $56 = HEAP32[$4 >> 2] | 0;
     } else $56 = $51;
     $55 = $56 + 8 | 0;
     HEAP32[$4 >> 2] = $55;
     $171 = $55;
     break;
    }
   case 99:
    {
     $62 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $63 = HEAP32[$62 >> 2] | 0;
     HEAP32[$2 >> 2] = $62 + 4;
     HEAP8[$3 >> 0] = $63;
     HEAP8[$20 >> 0] = 0;
     $65 = HEAP32[$4 >> 2] | 0;
     HEAP32[$65 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $3, _strlen($3) | 0) | 0;
     HEAP32[$65 + 4 >> 2] = 4;
     $70 = HEAP32[$4 >> 2] | 0;
     if (((HEAP32[$8 >> 2] | 0) - $70 | 0) < 9) {
      __Z14luaD_growstackP9lua_Statei($0, 1);
      $75 = HEAP32[$4 >> 2] | 0;
     } else $75 = $70;
     $74 = $75 + 8 | 0;
     HEAP32[$4 >> 2] = $74;
     $171 = $74;
     break;
    }
   case 100:
    {
     $81 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $82 = HEAP32[$81 >> 2] | 0;
     HEAP32[$2 >> 2] = $81 + 4;
     HEAPF32[$33 >> 2] = +($82 | 0);
     HEAP32[$34 + 12 >> 2] = 3;
     $86 = HEAP32[$4 >> 2] | 0;
     if (((HEAP32[$8 >> 2] | 0) - $86 | 0) < 9) {
      __Z14luaD_growstackP9lua_Statei($0, 1);
      $91 = HEAP32[$4 >> 2] | 0;
     } else $91 = $86;
     $90 = $91 + 8 | 0;
     HEAP32[$4 >> 2] = $90;
     $171 = $90;
     break;
    }
   case 102:
    {
     $97 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $98 = +HEAPF64[$97 >> 3];
     HEAP32[$2 >> 2] = $97 + 8;
     HEAPF32[$33 >> 2] = $98;
     HEAP32[$34 + 12 >> 2] = 3;
     $102 = HEAP32[$4 >> 2] | 0;
     if (((HEAP32[$8 >> 2] | 0) - $102 | 0) < 9) {
      __Z14luaD_growstackP9lua_Statei($0, 1);
      $107 = HEAP32[$4 >> 2] | 0;
     } else $107 = $102;
     $106 = $107 + 8 | 0;
     HEAP32[$4 >> 2] = $106;
     $171 = $106;
     break;
    }
   case 112:
    {
     $113 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $114 = HEAP32[$113 >> 2] | 0;
     HEAP32[$2 >> 2] = $113 + 4;
     HEAP32[$vararg_buffer >> 2] = $114;
     _sprintf($3, 102864, $vararg_buffer) | 0;
     $115 = HEAP32[$4 >> 2] | 0;
     HEAP32[$115 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $3, _strlen($3) | 0) | 0;
     HEAP32[$115 + 4 >> 2] = 4;
     $120 = HEAP32[$4 >> 2] | 0;
     if (((HEAP32[$8 >> 2] | 0) - $120 | 0) < 9) {
      __Z14luaD_growstackP9lua_Statei($0, 1);
      $125 = HEAP32[$4 >> 2] | 0;
     } else $125 = $120;
     $124 = $125 + 8 | 0;
     HEAP32[$4 >> 2] = $124;
     $171 = $124;
     break;
    }
   case 37:
    {
     HEAP32[$33 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 87679, 1) | 0;
     HEAP32[$34 + 12 >> 2] = 4;
     $129 = HEAP32[$4 >> 2] | 0;
     if (((HEAP32[$8 >> 2] | 0) - $129 | 0) < 9) {
      __Z14luaD_growstackP9lua_Statei($0, 1);
      $134 = HEAP32[$4 >> 2] | 0;
     } else $134 = $129;
     $133 = $134 + 8 | 0;
     HEAP32[$4 >> 2] = $133;
     $171 = $133;
     break;
    }
   default:
    {
     HEAP8[$3 >> 0] = 37;
     HEAP8[$18 >> 0] = $36;
     HEAP8[$19 >> 0] = 0;
     HEAP32[$33 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $3, _strlen($3) | 0) | 0;
     HEAP32[$34 + 12 >> 2] = 4;
     $139 = HEAP32[$4 >> 2] | 0;
     if (((HEAP32[$8 >> 2] | 0) - $139 | 0) < 9) {
      __Z14luaD_growstackP9lua_Statei($0, 1);
      $144 = HEAP32[$4 >> 2] | 0;
     } else $144 = $139;
     $143 = $144 + 8 | 0;
     HEAP32[$4 >> 2] = $143;
     $171 = $143;
    }
   }
   $145 = $$06984 + 2 | 0;
   $146 = $21 + 2 | 0;
   $21 = _strchr($146, 37) | 0;
   if (!$21) {
    $$0$lcssa = $146;
    $$069$lcssa = $145;
    $$lcssa = $171;
    break L4;
   } else {
    $$06984 = $145;
    $$085 = $146;
    $26 = $171;
   }
  }
 } while (0);
 HEAP32[$$lcssa >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $$0$lcssa, _strlen($$0$lcssa) | 0) | 0;
 HEAP32[$$lcssa + 4 >> 2] = 4;
 $153 = HEAP32[$4 >> 2] | 0;
 if (((HEAP32[$8 >> 2] | 0) - $153 | 0) >= 9) {
  $158 = $153;
  $157 = $158 + 8 | 0;
  HEAP32[$4 >> 2] = $157;
  $159 = $$069$lcssa + 1 | 0;
  $$cast = $157;
  $160 = $0 + 12 | 0;
  $161 = HEAP32[$160 >> 2] | 0;
  $162 = $$cast - $161 | 0;
  $163 = $162 >> 3;
  $164 = $163 + -1 | 0;
  __Z11luaV_concatP9lua_Stateii($0, $159, $164);
  $165 = HEAP32[$4 >> 2] | 0;
  $166 = 0 - $$069$lcssa | 0;
  $167 = $165 + ($166 << 3) | 0;
  HEAP32[$4 >> 2] = $167;
  $168 = $167 + -8 | 0;
  $169 = HEAP32[$168 >> 2] | 0;
  $170 = $169 + 16 | 0;
  STACKTOP = sp;
  return $170 | 0;
 }
 __Z14luaD_growstackP9lua_Statei($0, 1);
 $158 = HEAP32[$4 >> 2] | 0;
 $157 = $158 + 8 | 0;
 HEAP32[$4 >> 2] = $157;
 $159 = $$069$lcssa + 1 | 0;
 $$cast = $157;
 $160 = $0 + 12 | 0;
 $161 = HEAP32[$160 >> 2] | 0;
 $162 = $$cast - $161 | 0;
 $163 = $162 >> 3;
 $164 = $163 + -1 | 0;
 __Z11luaV_concatP9lua_Stateii($0, $159, $164);
 $165 = HEAP32[$4 >> 2] | 0;
 $166 = 0 - $$069$lcssa | 0;
 $167 = $165 + ($166 << 3) | 0;
 HEAP32[$4 >> 2] = $167;
 $168 = $167 + -8 | 0;
 $169 = HEAP32[$168 >> 2] | 0;
 $170 = $169 + 16 | 0;
 STACKTOP = sp;
 return $170 | 0;
}

function __ZNK9MapParser11GetStartPosEiR6float3($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$021 = 0, $$122 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $18 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $5 = 0, $53 = 0, $55 = 0, $56 = 0, $6 = 0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0.0, $65 = 0.0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = sp + 176 | 0;
 $4 = sp + 144 | 0;
 $5 = sp + 116 | 0;
 $6 = sp + 104 | 0;
 $7 = sp + 64 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 76 | 0;
 $10 = sp + 36 | 0;
 $11 = sp + 12 | 0;
 $12 = $0 + 4 | 0;
 $13 = $12 + 11 | 0;
 if ((HEAP8[$13 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$12 >> 2] >> 0] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
 } else {
  HEAP8[$12 >> 0] = 0;
  HEAP8[$13 >> 0] = 0;
 }
 $18 = HEAP32[$0 >> 2] | 0;
 if (!(HEAP32[$18 + 48 >> 2] | 0)) {
  HEAP32[$8 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($8, 81707, 2);
  $26 = (HEAP8[$8 + 11 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
  HEAP32[$vararg_buffer >> 2] = $1;
  _snprintf($3, 64, $26, $vararg_buffer) | 0;
  HEAP32[$7 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($7, $3, _strlen($3) | 0);
  $28 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($7, 0, 78623) | 0;
  HEAP32[$6 >> 2] = HEAP32[$28 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
  HEAP32[$28 >> 2] = 0;
  HEAP32[$28 + 4 >> 2] = 0;
  HEAP32[$28 + 8 >> 2] = 0;
  $29 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($6, 78674) | 0;
  HEAP32[$5 >> 2] = HEAP32[$29 >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$29 + 8 >> 2];
  HEAP32[$29 >> 2] = 0;
  HEAP32[$29 + 4 >> 2] = 0;
  HEAP32[$29 + 8 >> 2] = 0;
  $30 = HEAP32[$0 >> 2] | 0;
  $31 = $30 + 136 | 0;
  $33 = HEAP8[$31 + 11 >> 0] | 0;
  $34 = $33 << 24 >> 24 < 0;
  $41 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($5, $34 ? HEAP32[$31 >> 2] | 0 : $31, $34 ? HEAP32[$30 + 140 >> 2] | 0 : $33 & 255) | 0;
  HEAP32[$4 >> 2] = HEAP32[$41 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$41 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$41 + 8 >> 2];
  HEAP32[$41 >> 2] = 0;
  HEAP32[$41 + 4 >> 2] = 0;
  HEAP32[$41 + 8 >> 2] = 0;
  if ((HEAP8[$13 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$12 >> 2] >> 0] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
  } else {
   HEAP8[$12 >> 0] = 0;
   HEAP8[$13 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($12, 0);
  HEAP32[$12 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$12 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$12 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $$122 = 0;
  STACKTOP = sp;
  return $$122 | 0;
 }
 __ZN9LuaParser7GetRootEv($9, $18);
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 78685, 5);
 __ZNK8LuaTable8SubTableERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($4, $9, $3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZN8LuaTableD2Ev($9);
 __ZNK8LuaTable8SubTableEi($10, $4, $1);
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 78691, 8);
 __ZNK8LuaTable8SubTableERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($5, $10, $3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZN8LuaTableD2Ev($10);
 if (!(HEAP32[$5 + 16 >> 2] | 0)) {
  HEAP32[$11 >> 2] = 0;
  HEAP32[$11 + 4 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($11, 81707, 2);
  $53 = (HEAP8[$11 + 11 >> 0] | 0) < 0 ? HEAP32[$11 >> 2] | 0 : $11;
  HEAP32[$vararg_buffer1 >> 2] = $1;
  _snprintf($3, 64, $53, $vararg_buffer1) | 0;
  HEAP32[$8 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($8, $3, _strlen($3) | 0);
  $55 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($8, 0, 78623) | 0;
  HEAP32[$7 >> 2] = HEAP32[$55 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$55 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$55 + 8 >> 2];
  HEAP32[$55 >> 2] = 0;
  HEAP32[$55 + 4 >> 2] = 0;
  HEAP32[$55 + 8 >> 2] = 0;
  $56 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($7, 78700) | 0;
  HEAP32[$6 >> 2] = HEAP32[$56 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
  HEAP32[$56 >> 2] = 0;
  HEAP32[$56 + 4 >> 2] = 0;
  HEAP32[$56 + 8 >> 2] = 0;
  if ((HEAP8[$13 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$12 >> 2] >> 0] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
  } else {
   HEAP8[$12 >> 0] = 0;
   HEAP8[$13 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($12, 0);
  HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$12 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$12 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $$021 = 0;
 } else {
  $61 = +HEAPF32[$2 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 78743, 1);
  $62 = +__ZNK8LuaTable3GetERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEf($5, $3, $61);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  HEAPF32[$2 >> 2] = $62;
  $63 = $2 + 8 | 0;
  $64 = +HEAPF32[$63 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 78745, 1);
  $65 = +__ZNK8LuaTable3GetERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEf($5, $3, $64);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  HEAPF32[$63 >> 2] = $65;
  $$021 = 1;
 }
 __ZN8LuaTableD2Ev($5);
 __ZN8LuaTableD2Ev($4);
 $$122 = $$021;
 STACKTOP = sp;
 return $$122 | 0;
}

function __ZN6google12_GLOBAL__N_121CommandLineFlagParser25ProcessSingleOptionLockedEPNS0_15CommandLineFlagEPKcNS_15FlagSettingModeE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx20$val = 0, $20 = 0, $29 = 0, $30 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $59 = 0, $6 = 0, $60 = 0, $68 = 0, $69 = 0, $7 = 0, $80 = 0, $81 = 0, $9 = 0, $92 = 0, $93 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer = sp;
 $5 = sp + 32 | 0;
 $6 = sp + 20 | 0;
 $7 = sp + 8 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 do if ($3 | 0) {
  $9 = $2 + 12 | 0;
  if (!(HEAP8[$9 >> 0] | 0)) if (__ZNK6google12_GLOBAL__N_19FlagValue5EqualERKS1_(HEAP32[$2 + 20 >> 2] | 0, HEAP32[$2 + 16 >> 2] | 0) | 0) $20 = 0; else {
   HEAP8[$9 >> 0] = 1;
   $20 = 1;
  } else $20 = 1;
  L7 : do switch ($4 | 0) {
  case 0:
   {
    if (__ZN6google12_GLOBAL__N_114TryParseLockedEPKNS0_15CommandLineFlagEPNS0_9FlagValueEPKcPNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE($2, HEAP32[$2 + 20 >> 2] | 0, $3, $7) | 0) {
     HEAP8[$9 >> 0] = 1;
     label = 18;
    }
    break;
   }
  case 1:
   {
    if (!($20 << 24 >> 24)) {
     if (!(__ZN6google12_GLOBAL__N_114TryParseLockedEPKNS0_15CommandLineFlagEPNS0_9FlagValueEPKcPNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE($2, HEAP32[$2 + 20 >> 2] | 0, $3, $7) | 0)) break L7;
     HEAP8[$9 >> 0] = 1;
     label = 18;
     break L7;
    }
    $$idx$val$i = HEAP32[$2 >> 2] | 0;
    __ZNK6google12_GLOBAL__N_19FlagValue8ToStringEv($6, HEAP32[$2 + 20 >> 2] | 0);
    $29 = (HEAP8[$6 + 11 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6;
    HEAP32[$vararg_buffer >> 2] = $$idx$val$i;
    HEAP32[$vararg_buffer + 4 >> 2] = $29;
    __ZN6google12StringPrintfEPKcz($5, 90984, $vararg_buffer);
    $30 = $7 + 11 | 0;
    if ((HEAP8[$30 >> 0] | 0) < 0) {
     HEAP8[HEAP32[$7 >> 2] >> 0] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
    } else {
     HEAP8[$7 >> 0] = 0;
     HEAP8[$30 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
    HEAP32[$7 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    label = 18;
    break;
   }
  case 2:
   {
    if (__ZN6google12_GLOBAL__N_114TryParseLockedEPKNS0_15CommandLineFlagEPNS0_9FlagValueEPKcPNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE($2, HEAP32[$2 + 16 >> 2] | 0, $3, $7) | 0) if (!(HEAP8[$9 >> 0] | 0)) {
     __ZN6google12_GLOBAL__N_114TryParseLockedEPKNS0_15CommandLineFlagEPNS0_9FlagValueEPKcPNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE($2, HEAP32[$2 + 20 >> 2] | 0, $3, 0) | 0;
     label = 18;
    } else label = 18;
    break;
   }
  default:
   {}
  } while (0);
  if ((label | 0) == 18) break;
  $$idx$val = HEAP32[$2 >> 2] | 0;
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, $$idx$val, _strlen($$idx$val) | 0);
  $43 = $1 + 4 | 0;
  $44 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($43, $5, $6) | 0;
  $45 = HEAP32[$44 >> 2] | 0;
  if (!$45) {
   $47 = __Znwj(40) | 0;
   $48 = $47 + 16 | 0;
   HEAP32[$48 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$48 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$48 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   $49 = $47 + 28 | 0;
   HEAP32[$49 >> 2] = 0;
   HEAP32[$49 + 4 >> 2] = 0;
   HEAP32[$49 + 8 >> 2] = 0;
   $50 = HEAP32[$5 >> 2] | 0;
   HEAP32[$47 >> 2] = 0;
   HEAP32[$47 + 4 >> 2] = 0;
   HEAP32[$47 + 8 >> 2] = $50;
   HEAP32[$44 >> 2] = $47;
   $54 = HEAP32[HEAP32[$43 >> 2] >> 2] | 0;
   if (!$54) $59 = $47; else {
    HEAP32[$43 >> 2] = $54;
    $59 = HEAP32[$44 >> 2] | 0;
   }
   __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 + 8 >> 2] | 0, $59);
   $60 = $1 + 12 | 0;
   HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 1;
   $$0$i$i = $47;
  } else $$0$i$i = $45;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($$0$i$i + 28 | 0, $7) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 114224, 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  STACKTOP = sp;
  return;
 } while (0);
 $$idx20$val = HEAP32[$2 >> 2] | 0;
 do if (!(_strcmp($$idx20$val, 90249) | 0)) {
  __ZN6google12_GLOBAL__N_121CommandLineFlagParser21ProcessFlagfileLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeE($5, $1, HEAP32[27048] | 0, $4);
  $68 = HEAP8[$5 + 11 >> 0] | 0;
  $69 = $68 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($7, $69 ? HEAP32[$5 >> 2] | 0 : $5, $69 ? HEAP32[$5 + 4 >> 2] | 0 : $68 & 255) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 } else {
  if (!(_strcmp($$idx20$val, 90336) | 0)) {
   __ZN6google12_GLOBAL__N_121CommandLineFlagParser20ProcessFromenvLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeEb($5, $1, HEAP32[27049] | 0, $4, 1);
   $80 = HEAP8[$5 + 11 >> 0] | 0;
   $81 = $80 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($7, $81 ? HEAP32[$5 >> 2] | 0 : $5, $81 ? HEAP32[$5 + 4 >> 2] | 0 : $80 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   break;
  }
  if (!(_strcmp($$idx20$val, 90408) | 0)) {
   __ZN6google12_GLOBAL__N_121CommandLineFlagParser20ProcessFromenvLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeEb($5, $1, HEAP32[27050] | 0, $4, 0);
   $92 = HEAP8[$5 + 11 >> 0] | 0;
   $93 = $92 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($7, $93 ? HEAP32[$5 >> 2] | 0 : $5, $93 ? HEAP32[$5 + 4 >> 2] | 0 : $92 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  }
 } while (0);
 HEAP32[$0 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZN6google12_GLOBAL__N_121CommandLineFlagParser30ProcessOptionsFromStringLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$0$ph = 0, $$0139 = 0, $$061144 = 0, $$071$ph = 0, $$073$off0143 = 0, $$077$off0$ = 0, $$077$off0142 = 0, $$1 = 0, $$162$lcssa = 0, $$162134 = 0, $$172107 = 0, $$172108 = 0, $$376$off0 = 0, $$380$off0 = 0, $$582$off0 = 0, $105 = 0, $109 = 0, $111 = 0, $118 = 0, $119 = 0, $124 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $23 = 0, $26 = 0, $29 = 0, $31 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $47 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $57 = 0, $6 = 0, $65 = 0, $67 = 0, $7 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $87 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $96 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 28 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$071$ph = (HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2;
 if (!$$071$ph) {
  STACKTOP = sp;
  return;
 }
 $14 = $4 + 11 | 0;
 $15 = $4 + 4 | 0;
 $16 = $8 + 11 | 0;
 $17 = $8 + 4 | 0;
 $18 = $5 + 11 | 0;
 $19 = $5 + 4 | 0;
 $$061144 = $$071$ph;
 $$073$off0143 = 0;
 $$077$off0142 = 1;
 while (1) {
  $20 = HEAP8[$$061144 >> 0] | 0;
  L6 : do if (!($20 << 24 >> 24)) $$162$lcssa = $$061144; else {
   $$162134 = $$061144;
   $23 = $20;
   while (1) {
    if (!(_isspace($23 << 24 >> 24) | 0)) {
     $$162$lcssa = $$162134;
     break L6;
    }
    $26 = $$162134 + 1 | 0;
    $23 = HEAP8[$26 >> 0] | 0;
    if (!($23 << 24 >> 24)) {
     $$162$lcssa = $26;
     break;
    } else $$162134 = $26;
   }
  } while (0);
  $29 = _strchr($$162$lcssa, 13) | 0;
  if (!$29) {
   $31 = _strchr($$162$lcssa, 10) | 0;
   if (!$31) {
    $$172108 = 0;
    $37 = _strlen($$162$lcssa) | 0;
   } else {
    $$172107 = $31;
    label = 8;
   }
  } else {
   $$172107 = $29;
   label = 8;
  }
  if ((label | 0) == 8) {
   label = 0;
   $$172108 = $$172107;
   $37 = $$172107 - $$162$lcssa | 0;
  };
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, $$162$lcssa, $37);
  $38 = HEAP8[$14 >> 0] | 0;
  $39 = $38 << 24 >> 24 < 0;
  L17 : do if (!(($39 ? HEAP32[$15 >> 2] | 0 : $38 & 255) | 0)) {
   $$376$off0 = $$073$off0143;
   $$582$off0 = $$077$off0142;
  } else {
   $44 = HEAP32[$4 >> 2] | 0;
   $45 = $39 ? $44 : $4;
   switch (HEAP8[$45 >> 0] | 0) {
   case 35:
    {
     $$376$off0 = $$073$off0143;
     $$582$off0 = $$077$off0142;
     break L17;
     break;
    }
   case 45:
    {
     if (!$$077$off0142) {
      $$376$off0 = 0;
      $$582$off0 = 0;
      break L17;
     }
     $47 = $45 + 1 | 0;
     $$ = (HEAP8[$47 >> 0] | 0) == 45 ? $45 + 2 | 0 : $47;
     HEAP32[$5 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     HEAP32[$7 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     $52 = __ZN6google12_GLOBAL__N_112FlagRegistry19SplitArgumentLockedEPKcPNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPS3_SB_(HEAP32[$1 >> 2] | 0, $$, $5, $6, $7) | 0;
     $54 = HEAP32[$6 >> 2] | 0;
     if (!(($52 | 0) == 0 | ($54 | 0) == 0)) {
      __ZN6google12_GLOBAL__N_121CommandLineFlagParser25ProcessSingleOptionLockedEPNS0_15CommandLineFlagEPKcNS_15FlagSettingModeE($8, $1, $52, $54, $3);
      $56 = HEAP8[$16 >> 0] | 0;
      $57 = $56 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $57 ? HEAP32[$8 >> 2] | 0 : $8, $57 ? HEAP32[$17 >> 2] | 0 : $56 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$376$off0 = 0;
     $$582$off0 = 1;
     break L17;
     break;
    }
   default:
    {}
   }
   $$077$off0$ = $$077$off0142 & $$073$off0143;
   if ($39) {
    $$0$ph = $44;
    $65 = HEAP8[$44 >> 0] | 0;
   } else {
    $$0$ph = $4;
    $65 = $44 & 255;
   }
   if ($$077$off0$ | $65 << 24 >> 24 == 0) {
    $$376$off0 = 1;
    $$582$off0 = $$077$off0$;
   } else {
    $$0139 = $$0$ph;
    while (1) {
     $67 = _strchr($$0139, 32) | 0;
     if (!$67) $$1 = $$0139 + (_strlen($$0139) | 0) | 0; else $$1 = $67;
     HEAP32[$5 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, $$0139, $$1 - $$0139 | 0);
     $77 = (HEAP8[108371] | 0) < 0 ? HEAP32[27090] | 0 : 108360;
     $78 = _strlen($77) | 0;
     $79 = HEAP8[$18 >> 0] | 0;
     if (($78 | 0) == (($79 << 24 >> 24 < 0 ? HEAP32[$19 >> 2] | 0 : $79 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($5, 0, -1, $77, $78) | 0)) label = 28; else label = 23; else label = 23;
     do if ((label | 0) == 23) {
      label = 0;
      $87 = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj(108360, 47, -1) | 0;
      $89 = HEAP8[108371] | 0;
      $91 = HEAP32[27090] | 0;
      $92 = $89 << 24 >> 24 < 0 ? $91 : 108360;
      $95 = ($87 | 0) == -1 ? $92 : $92 + $87 + 1 | 0;
      $96 = _strlen($95) | 0;
      $97 = HEAP8[$18 >> 0] | 0;
      if (($96 | 0) == (($97 << 24 >> 24 < 0 ? HEAP32[$19 >> 2] | 0 : $97 & 255) | 0)) {
       if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($5, 0, -1, $95, $96) | 0)) {
        label = 28;
        break;
       }
       $105 = HEAP8[$18 >> 0] | 0;
       $109 = HEAP8[108371] | 0;
       $111 = HEAP32[27090] | 0;
      } else {
       $105 = $97;
       $109 = $89;
       $111 = $91;
      }
      if (!(_fnmatch($105 << 24 >> 24 < 0 ? HEAP32[$5 >> 2] | 0 : $5, $109 << 24 >> 24 < 0 ? $111 : 108360, 1) | 0)) label = 28; else {
       $118 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5;
       $119 = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj(108360, 47, -1) | 0;
       $124 = (HEAP8[108371] | 0) < 0 ? HEAP32[27090] | 0 : 108360;
       if (!(_fnmatch($118, ($119 | 0) == -1 ? $124 : $124 + $119 + 1 | 0, 1) | 0)) label = 28; else $$380$off0 = 0;
      }
     } while (0);
     if ((label | 0) == 28) {
      label = 0;
      $$380$off0 = 1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     if ($$380$off0 | (HEAP8[$$1 >> 0] | 0) == 0) {
      $$376$off0 = 1;
      $$582$off0 = $$380$off0;
      break;
     } else $$0139 = $$1 + 1 | 0;
    }
   }
  } while (0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  if (!$$172108) break; else {
   $$061144 = $$172108 + 1 | 0;
   $$073$off0143 = $$376$off0;
   $$077$off0142 = $$582$off0;
  }
 }
 STACKTOP = sp;
 return;
}
function __ZN9LuaParser7ExecuteEv($0) {
 $0 = $0 | 0;
 var $$4 = 0, $$5 = 0, $1 = 0, $100 = 0, $101 = 0, $106 = 0, $11 = 0, $112 = 0, $113 = 0, $121 = 0, $13 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $26 = 0, $3 = 0, $30 = 0, $35 = 0, $4 = 0, $41 = 0, $42 = 0, $5 = 0, $52 = 0, $53 = 0, $60 = 0, $65 = 0, $67 = 0, $73 = 0, $78 = 0, $81 = 0, $83 = 0, $9 = 0, $94 = 0, $95 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $1 = sp + 284 | 0;
 $2 = sp + 272 | 0;
 $3 = sp + 48 | 0;
 $4 = sp + 36 | 0;
 $5 = $0 + 48 | 0;
 if (!(HEAP32[$5 >> 2] | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($0 + 136 | 0, 83644) | 0;
  $$5 = 0;
  STACKTOP = sp;
  return $$5 | 0;
 }
 $9 = $0 + 124 | 0;
 HEAP32[$9 >> 2] = -2;
 HEAP32[$0 + 120 >> 2] = -1;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $11 = $0 + 24 | 0;
 $13 = HEAP8[$11 + 11 >> 0] | 0;
 if ($13 << 24 >> 24 < 0) $18 = HEAP32[$0 + 28 >> 2] | 0; else $18 = $13 & 255;
 do if (!$18) {
  $20 = $0 + 11 | 0;
  $21 = HEAP8[$20 >> 0] | 0;
  if ($21 << 24 >> 24 < 0) $26 = HEAP32[$0 + 4 >> 2] | 0; else $26 = $21 & 255;
  if (!$26) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($0 + 136 | 0, 83710) | 0;
   __Z9lua_closeP9lua_State(HEAP32[$5 >> 2] | 0);
   HEAP32[$5 >> 2] = 0;
   $$4 = 0;
   break;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($2, $0) | 0;
  __ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($3 | 0, $0 | 0, $0 + 12 | 0);
  if (__ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $1 | 0) | 0) {
   __ZN12CFileHandlerD2Ev($3);
   label = 19;
   break;
  };
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  $30 = HEAP8[$20 >> 0] | 0;
  $35 = $30 << 24 >> 24 < 0 ? HEAP32[$0 + 4 >> 2] | 0 : $30 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($4, 83688, 21, $35 + 21 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($4, (HEAP8[$20 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0, $35) | 0;
  $41 = $0 + 136 | 0;
  $42 = $41 + 11 | 0;
  if ((HEAP8[$42 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$41 >> 2] >> 0] = 0;
   HEAP32[$0 + 140 >> 2] = 0;
  } else {
   HEAP8[$41 >> 0] = 0;
   HEAP8[$42 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($41, 0);
  HEAP32[$41 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$41 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$41 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  __Z9lua_closeP9lua_State(HEAP32[$5 >> 2] | 0);
  HEAP32[$5 >> 2] = 0;
  __ZN12CFileHandlerD2Ev($3);
  $$4 = 0;
 } else {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($1, $11) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($2, 83677) | 0;
  label = 19;
 } while (0);
 do if ((label | 0) == 19) {
  $52 = HEAP8[$1 + 11 >> 0] | 0;
  $53 = $52 << 24 >> 24 < 0;
  $60 = $2 + 11 | 0;
  $65 = __Z15luaL_loadbufferP9lua_StatePKcjS2_(HEAP32[$5 >> 2] | 0, $53 ? HEAP32[$1 >> 2] | 0 : $1, $53 ? HEAP32[$1 + 4 >> 2] | 0 : $52 & 255, (HEAP8[$60 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) | 0;
  if ($65 | 0) {
   $67 = $0 + 136 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($67, __Z13lua_tolstringP9lua_StateiPj(HEAP32[$5 >> 2] | 0, -1, 0) | 0) | 0;
   $73 = (HEAP8[$60 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2;
   if ((HEAP8[$67 + 11 >> 0] | 0) < 0) $78 = HEAP32[$67 >> 2] | 0; else $78 = $67;
   HEAP32[$vararg_buffer >> 2] = $65;
   HEAP32[$vararg_buffer + 4 >> 2] = $73;
   HEAP32[$vararg_buffer + 8 >> 2] = $78;
   _log_frontend_record(50, 114224, 83739, $vararg_buffer);
   __Z9lua_closeP9lua_State(HEAP32[$5 >> 2] | 0);
   HEAP32[$5 >> 2] = 0;
   $$4 = 0;
   break;
  }
  $81 = __Z9lua_pcallP9lua_Stateiii(HEAP32[$5 >> 2] | 0, 0, 1, 0) | 0;
  if ($81 | 0) {
   $83 = $0 + 136 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($83, __Z13lua_tolstringP9lua_StateiPj(HEAP32[$5 >> 2] | 0, -1, 0) | 0) | 0;
   if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $94 = HEAP32[$0 >> 2] | 0; else $94 = $0;
   if ((HEAP8[$83 + 11 >> 0] | 0) < 0) $95 = HEAP32[$83 >> 2] | 0; else $95 = $83;
   HEAP32[$vararg_buffer3 >> 2] = $81;
   HEAP32[$vararg_buffer3 + 4 >> 2] = $94;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $95;
   _log_frontend_record(50, 114224, 83739, $vararg_buffer3);
   __Z9lua_closeP9lua_State(HEAP32[$5 >> 2] | 0);
   HEAP32[$5 >> 2] = 0;
   $$4 = 0;
   break;
  }
  if ((__Z8lua_typeP9lua_Statei(HEAP32[$5 >> 2] | 0, 1) | 0) == 5) {
   if (HEAP8[$0 + 133 >> 0] | 0) __ZN8LuaUtils9LowerKeysEP9lua_Statei(HEAP32[$5 >> 2] | 0, 1) | 0;
   __ZN8LuaUtils17CheckTableForNaNsEP9lua_StateiRKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(HEAP32[$5 >> 2] | 0, 1, $0) | 0;
   HEAP32[$9 >> 2] = __Z8luaL_refP9lua_Statei(HEAP32[$5 >> 2] | 0, -1e4) | 0;
   __Z10lua_settopP9lua_Statei(HEAP32[$5 >> 2] | 0, 0);
   HEAP8[$0 + 132 >> 0] = 1;
   $$4 = 1;
   break;
  };
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  $100 = $0 + 11 | 0;
  $101 = HEAP8[$100 >> 0] | 0;
  $106 = $101 << 24 >> 24 < 0 ? HEAP32[$0 + 4 >> 2] | 0 : $101 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($3, 83750, 26, $106 + 26 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($3, (HEAP8[$100 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0, $106) | 0;
  $112 = $0 + 136 | 0;
  $113 = $112 + 11 | 0;
  if ((HEAP8[$113 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$112 >> 2] >> 0] = 0;
   HEAP32[$0 + 140 >> 2] = 0;
  } else {
   HEAP8[$112 >> 0] = 0;
   HEAP8[$113 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($112, 0);
  HEAP32[$112 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$112 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$112 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  if ((HEAP8[$100 >> 0] | 0) < 0) $121 = HEAP32[$0 >> 2] | 0; else $121 = $0;
  HEAP32[$vararg_buffer8 >> 2] = $121;
  _log_frontend_record(50, 114224, 83777, $vararg_buffer8);
  __Z9lua_closeP9lua_State(HEAP32[$5 >> 2] | 0);
  HEAP32[$5 >> 2] = 0;
  $$4 = 0;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 $$5 = $$4;
 STACKTOP = sp;
 return $$5 | 0;
}

function __ZNSt3__25dequeIiNS_9allocatorIiEEE19__add_back_capacityEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$in$i = 0, $$in$i27 = 0, $$sroa$10$0$i = 0, $$sroa$10$0$i26 = 0, $$sroa$10$1$i = 0, $$sroa$10$1$i31 = 0, $$sroa$speculated = 0, $$sroa$speculated$i = 0, $$sroa$speculated$i24 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $108 = 0, $11 = 0, $111 = 0, $117 = 0, $12 = 0, $120 = 0, $123 = 0, $129 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $137 = 0, $14 = 0, $140 = 0, $143 = 0, $146 = 0, $148 = 0, $150 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $48 = 0, $54 = 0, $57 = 0, $60 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $66 = 0, $68 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $83 = 0, $84 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 $3 = $0 + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 >>> 0 > 1023) {
  HEAP32[$3 >> 2] = $4 + -1024;
  $7 = $0 + 4 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  $10 = $8 + 4 | 0;
  HEAP32[$7 >> 2] = $10;
  $11 = $0 + 8 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  $13 = $0 + 12 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  $16 = $14;
  $17 = $12;
  do if (($12 | 0) == ($14 | 0)) {
   $18 = HEAP32[$0 >> 2] | 0;
   $20 = $18;
   if ($10 >>> 0 > $18 >>> 0) {
    $21 = $10;
    $25 = (($21 - $20 >> 2) + 1 | 0) / -2 | 0;
    $26 = $10 + ($25 << 2) | 0;
    $27 = $17 - $21 | 0;
    $28 = $27 >> 2;
    if (!$28) $32 = $10; else {
     _memmove($26 | 0, $10 | 0, $27 | 0) | 0;
     $32 = HEAP32[$7 >> 2] | 0;
    }
    $30 = $26 + ($28 << 2) | 0;
    HEAP32[$11 >> 2] = $30;
    HEAP32[$7 >> 2] = $32 + ($25 << 2);
    $57 = $30;
    break;
   }
   $34 = $16 - $20 >> 1;
   $$sroa$speculated$i = ($34 | 0) == 0 ? 1 : $34;
   if ($$sroa$speculated$i >>> 0 > 1073741823) {
    $37 = ___cxa_allocate_exception(4) | 0;
    __ZNSt9bad_allocC2Ev($37);
    ___cxa_throw($37 | 0, 1824, 151);
   }
   $40 = __Znwj($$sroa$speculated$i << 2) | 0;
   $41 = $40;
   $42 = $40 + ($$sroa$speculated$i >>> 2 << 2) | 0;
   $43 = $42;
   $45 = $40 + ($$sroa$speculated$i << 2) | 0;
   if (($10 | 0) == ($12 | 0)) {
    $$sroa$10$1$i = $43;
    $54 = $18;
   } else {
    $$in$i = $42;
    $$sroa$10$0$i = $43;
    $48 = $10;
    do {
     HEAP32[$$in$i >> 2] = HEAP32[$48 >> 2];
     $$in$i = $$sroa$10$0$i + 4 | 0;
     $$sroa$10$0$i = $$in$i;
     $48 = $48 + 4 | 0;
    } while (($48 | 0) != ($12 | 0));
    $$sroa$10$1$i = $$sroa$10$0$i;
    $54 = HEAP32[$0 >> 2] | 0;
   }
   HEAP32[$0 >> 2] = $41;
   HEAP32[$7 >> 2] = $43;
   HEAP32[$11 >> 2] = $$sroa$10$1$i;
   HEAP32[$13 >> 2] = $45;
   if (!$54) $57 = $$sroa$10$1$i; else {
    __ZdlPv($54);
    $57 = HEAP32[$11 >> 2] | 0;
   }
  } else $57 = $12; while (0);
  HEAP32[$57 >> 2] = $9;
  HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 4;
  STACKTOP = sp;
  return;
 }
 $60 = $0 + 8 | 0;
 $61 = HEAP32[$60 >> 2] | 0;
 $62 = $0 + 4 | 0;
 $64 = $61 - (HEAP32[$62 >> 2] | 0) | 0;
 $65 = $0 + 12 | 0;
 $66 = HEAP32[$65 >> 2] | 0;
 $68 = $66 - (HEAP32[$0 >> 2] | 0) | 0;
 if ($64 >>> 0 >= $68 >>> 0) {
  $123 = $68 >> 1;
  $$sroa$speculated = ($123 | 0) == 0 ? 1 : $123;
  HEAP32[$1 + 12 >> 2] = 0;
  HEAP32[$1 + 16 >> 2] = $0 + 12;
  if ($$sroa$speculated >>> 0 > 1073741823) {
   $129 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($129);
   ___cxa_throw($129 | 0, 1824, 151);
  }
  $132 = __Znwj($$sroa$speculated << 2) | 0;
  HEAP32[$1 >> 2] = $132;
  $133 = $132 + ($64 >> 2 << 2) | 0;
  $134 = $1 + 8 | 0;
  HEAP32[$134 >> 2] = $133;
  $135 = $1 + 4 | 0;
  HEAP32[$135 >> 2] = $133;
  $137 = $1 + 12 | 0;
  HEAP32[$137 >> 2] = $132 + ($$sroa$speculated << 2);
  HEAP32[$2 >> 2] = __Znwj(4096) | 0;
  __ZNSt3__214__split_bufferIPiRNS_9allocatorIS1_EEE9push_backEOS1_($1, $2);
  $$0 = HEAP32[$60 >> 2] | 0;
  while (1) {
   $140 = HEAP32[$62 >> 2] | 0;
   if (($$0 | 0) == ($140 | 0)) break;
   $159 = $$0 + -4 | 0;
   __ZNSt3__214__split_bufferIPiRNS_9allocatorIS1_EEE10push_frontERKS1_($1, $159);
   $$0 = $159;
  }
  $143 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$1 >> 2] = $143;
  HEAP32[$62 >> 2] = HEAP32[$135 >> 2];
  HEAP32[$135 >> 2] = $140;
  $146 = HEAP32[$60 >> 2] | 0;
  HEAP32[$60 >> 2] = HEAP32[$134 >> 2];
  HEAP32[$134 >> 2] = $146;
  $148 = HEAP32[$65 >> 2] | 0;
  HEAP32[$65 >> 2] = HEAP32[$137 >> 2];
  HEAP32[$137 >> 2] = $148;
  $150 = $146;
  if (($150 | 0) != ($140 | 0)) HEAP32[$134 >> 2] = $150 + (~(($150 + -4 - $140 | 0) >>> 2) << 2);
  if ($143 | 0) __ZdlPv($143);
  STACKTOP = sp;
  return;
 }
 if (($66 | 0) != ($61 | 0)) {
  HEAP32[$1 >> 2] = __Znwj(4096) | 0;
  __ZNSt3__214__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_($0, $1);
  STACKTOP = sp;
  return;
 }
 HEAP32[$1 >> 2] = __Znwj(4096) | 0;
 __ZNSt3__214__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_($0, $1);
 $73 = HEAP32[$62 >> 2] | 0;
 $74 = HEAP32[$73 >> 2] | 0;
 $75 = $73 + 4 | 0;
 HEAP32[$62 >> 2] = $75;
 $76 = HEAP32[$60 >> 2] | 0;
 $77 = HEAP32[$65 >> 2] | 0;
 $79 = $77;
 $80 = $76;
 do if (($76 | 0) == ($77 | 0)) {
  $81 = HEAP32[$0 >> 2] | 0;
  $83 = $81;
  if ($75 >>> 0 > $81 >>> 0) {
   $84 = $75;
   $88 = (($84 - $83 >> 2) + 1 | 0) / -2 | 0;
   $89 = $75 + ($88 << 2) | 0;
   $90 = $80 - $84 | 0;
   $91 = $90 >> 2;
   if (!$91) $95 = $75; else {
    _memmove($89 | 0, $75 | 0, $90 | 0) | 0;
    $95 = HEAP32[$62 >> 2] | 0;
   }
   $93 = $89 + ($91 << 2) | 0;
   HEAP32[$60 >> 2] = $93;
   HEAP32[$62 >> 2] = $95 + ($88 << 2);
   $120 = $93;
   break;
  }
  $97 = $79 - $83 >> 1;
  $$sroa$speculated$i24 = ($97 | 0) == 0 ? 1 : $97;
  if ($$sroa$speculated$i24 >>> 0 > 1073741823) {
   $100 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($100);
   ___cxa_throw($100 | 0, 1824, 151);
  }
  $103 = __Znwj($$sroa$speculated$i24 << 2) | 0;
  $104 = $103;
  $105 = $103 + ($$sroa$speculated$i24 >>> 2 << 2) | 0;
  $106 = $105;
  $108 = $103 + ($$sroa$speculated$i24 << 2) | 0;
  if (($75 | 0) == ($76 | 0)) {
   $$sroa$10$1$i31 = $106;
   $117 = $81;
  } else {
   $$in$i27 = $105;
   $$sroa$10$0$i26 = $106;
   $111 = $75;
   do {
    HEAP32[$$in$i27 >> 2] = HEAP32[$111 >> 2];
    $$in$i27 = $$sroa$10$0$i26 + 4 | 0;
    $$sroa$10$0$i26 = $$in$i27;
    $111 = $111 + 4 | 0;
   } while (($111 | 0) != ($76 | 0));
   $$sroa$10$1$i31 = $$sroa$10$0$i26;
   $117 = HEAP32[$0 >> 2] | 0;
  }
  HEAP32[$0 >> 2] = $104;
  HEAP32[$62 >> 2] = $106;
  HEAP32[$60 >> 2] = $$sroa$10$1$i31;
  HEAP32[$65 >> 2] = $108;
  if (!$117) $120 = $$sroa$10$1$i31; else {
   __ZdlPv($117);
   $120 = HEAP32[$60 >> 2] | 0;
  }
 } else $120 = $76; while (0);
 HEAP32[$120 >> 2] = $74;
 HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 4;
 STACKTOP = sp;
 return;
}
function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i117 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i123 = 0, $$0101 = 0, $$0105 = 0, $$0111 = 0, $$0112 = 0, $$0112144 = 0, $$092 = 0, $$093 = 0, $$094$off0 = 0, $$095 = 0, $$096 = 0, $$097 = 0, $$098 = 0, $$1102 = 0, $$1106 = 0, $$199 = 0, $$2$off0 = 0, $$2100 = 0, $$2103 = 0, $$2107 = 0, $$3 = 0, $$3104 = 0, $$3108 = 0, $$5 = 0, $$5110 = 0, $$6 = 0, $$7 = 0, $$pre$i4$i$i125 = 0, $$sroa$0130$0 = 0, $103 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $120 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $144 = 0, $149 = 0, $163 = 0, $18 = 0, $23 = 0, $29 = 0, $32 = 0, $42 = 0, $45 = 0, $55 = 0, $56 = 0, $59 = 0, $62 = 0, $7 = 0, $74 = 0, $85 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $7 = sp;
 $11 = ($3 - $2 | 0) / 12 | 0;
 if ($11 >>> 0 > 100) {
  $13 = _malloc($11) | 0;
  if (!$13) {
   $$0111 = 0;
   $$sroa$0130$0 = 0;
  } else {
   $$0111 = $13;
   $$sroa$0130$0 = $13;
  }
 } else {
  $$0111 = $7;
  $$sroa$0130$0 = 0;
 }
 $$0101 = 0;
 $$0105 = $11;
 $$097 = $2;
 $$098 = $$0111;
 while (1) {
  if (($$097 | 0) == ($3 | 0)) break;
  $18 = HEAP8[$$097 + 8 + 3 >> 0] | 0;
  if ($18 << 24 >> 24 < 0) $23 = HEAP32[$$097 + 4 >> 2] | 0; else $23 = $18 & 255;
  if (!$23) {
   HEAP8[$$098 >> 0] = 2;
   $$1102 = $$0101 + 1 | 0;
   $$1106 = $$0105 + -1 | 0;
  } else {
   HEAP8[$$098 >> 0] = 1;
   $$1102 = $$0101;
   $$1106 = $$0105;
  }
  $$0101 = $$1102;
  $$0105 = $$1106;
  $$097 = $$097 + 12 | 0;
  $$098 = $$098 + 1 | 0;
 }
 $$096 = 0;
 $$2103 = $$0101;
 $$2107 = $$0105;
 L17 : while (1) {
  $29 = HEAP32[$0 >> 2] | 0;
  do if (!$29) $56 = 1; else {
   $32 = HEAP32[$29 + 12 >> 2] | 0;
   if (($32 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($29) | 0; else $$0$i$i$i$i = HEAP32[$32 >> 2] | 0;
   if (($$0$i$i$i$i | 0) == -1) {
    HEAP32[$0 >> 2] = 0;
    $56 = 1;
    break;
   } else {
    $56 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $42 = HEAP32[$1 >> 2] | 0;
  if (!$42) {
   $$pre$i4$i$i125 = 0;
   $55 = 1;
  } else {
   $45 = HEAP32[$42 + 12 >> 2] | 0;
   if (($45 | 0) == (HEAP32[$42 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$42 >> 2] | 0) + 36 >> 2] & 255]($42) | 0; else $$0$i$i2$i$i = HEAP32[$45 >> 2] | 0;
   if (($$0$i$i2$i$i | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i4$i$i125 = 0;
    $55 = 1;
   } else {
    $$pre$i4$i$i125 = $42;
    $55 = 0;
   }
  }
  $59 = HEAP32[$0 >> 2] | 0;
  if (!(($$2107 | 0) != 0 & ($56 ^ $55))) break;
  $85 = HEAP32[$59 + 12 >> 2] | 0;
  if (($85 | 0) == (HEAP32[$59 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$59 >> 2] | 0) + 36 >> 2] & 255]($59) | 0; else $$0$i$i = HEAP32[$85 >> 2] | 0;
  if ($6) $$095 = $$0$i$i; else $$095 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 31]($4, $$0$i$i) | 0;
  $98 = $$096 + 1 | 0;
  $$093 = $2;
  $$094$off0 = 0;
  $$199 = $$0111;
  $$3104 = $$2103;
  $$3108 = $$2107;
  while (1) {
   if (($$093 | 0) == ($3 | 0)) break;
   do if ((HEAP8[$$199 >> 0] | 0) == 1) {
    $103 = $$093 + 8 + 3 | 0;
    if ((HEAP8[$103 >> 0] | 0) < 0) $108 = HEAP32[$$093 >> 2] | 0; else $108 = $$093;
    $109 = HEAP32[$108 + ($$096 << 2) >> 2] | 0;
    if ($6) $$092 = $109; else $$092 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 31]($4, $109) | 0;
    if (($$095 | 0) != ($$092 | 0)) {
     HEAP8[$$199 >> 0] = 0;
     $$2$off0 = $$094$off0;
     $$5 = $$3104;
     $$5110 = $$3108 + -1 | 0;
     break;
    }
    $115 = HEAP8[$103 >> 0] | 0;
    if ($115 << 24 >> 24 < 0) $120 = HEAP32[$$093 + 4 >> 2] | 0; else $120 = $115 & 255;
    if (($120 | 0) == ($98 | 0)) {
     HEAP8[$$199 >> 0] = 2;
     $$2$off0 = 1;
     $$5 = $$3104 + 1 | 0;
     $$5110 = $$3108 + -1 | 0;
    } else {
     $$2$off0 = 1;
     $$5 = $$3104;
     $$5110 = $$3108;
    }
   } else {
    $$2$off0 = $$094$off0;
    $$5 = $$3104;
    $$5110 = $$3108;
   } while (0);
   $$093 = $$093 + 12 | 0;
   $$094$off0 = $$2$off0;
   $$199 = $$199 + 1 | 0;
   $$3104 = $$5;
   $$3108 = $$5110;
  }
  if (!$$094$off0) {
   $$096 = $98;
   $$2103 = $$3104;
   $$2107 = $$3108;
   continue;
  }
  $127 = HEAP32[$0 >> 2] | 0;
  $128 = $127 + 12 | 0;
  $129 = HEAP32[$128 >> 2] | 0;
  if (($129 | 0) == (HEAP32[$127 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 40 >> 2] & 255]($127) | 0; else HEAP32[$128 >> 2] = $129 + 4;
  if (($$3104 + $$3108 | 0) >>> 0 > 1) {
   $$0 = $2;
   $$2100 = $$0111;
   $$6 = $$3104;
  } else {
   $$096 = $98;
   $$2103 = $$3104;
   $$2107 = $$3108;
   continue;
  }
  while (1) {
   if (($$0 | 0) == ($3 | 0)) {
    $$096 = $98;
    $$2103 = $$6;
    $$2107 = $$3108;
    continue L17;
   }
   if ((HEAP8[$$2100 >> 0] | 0) == 2) {
    $144 = HEAP8[$$0 + 8 + 3 >> 0] | 0;
    if ($144 << 24 >> 24 < 0) $149 = HEAP32[$$0 + 4 >> 2] | 0; else $149 = $144 & 255;
    if (($149 | 0) == ($98 | 0)) $$7 = $$6; else {
     HEAP8[$$2100 >> 0] = 0;
     $$7 = $$6 + -1 | 0;
    }
   } else $$7 = $$6;
   $$0 = $$0 + 12 | 0;
   $$2100 = $$2100 + 1 | 0;
   $$6 = $$7;
  }
 }
 do if (!$59) $163 = 1; else {
  $62 = HEAP32[$59 + 12 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$59 + 16 >> 2] | 0)) $$0$i$i$i$i117 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$59 >> 2] | 0) + 36 >> 2] & 255]($59) | 0; else $$0$i$i$i$i117 = HEAP32[$62 >> 2] | 0;
  if (($$0$i$i$i$i117 | 0) == -1) {
   HEAP32[$0 >> 2] = 0;
   $163 = 1;
   break;
  } else {
   $163 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i4$i$i125) label = 41; else {
  $74 = HEAP32[$$pre$i4$i$i125 + 12 >> 2] | 0;
  if (($74 | 0) == (HEAP32[$$pre$i4$i$i125 + 16 >> 2] | 0)) $$0$i$i2$i$i123 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i125 >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i125) | 0; else $$0$i$i2$i$i123 = HEAP32[$74 >> 2] | 0;
  if (($$0$i$i2$i$i123 | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   label = 41;
   break;
  } else if ($163) {
   $$0112 = $2;
   $$3 = $$0111;
   break;
  } else {
   label = 77;
   break;
  }
 } while (0);
 if ((label | 0) == 41) if ($163) label = 77; else {
  $$0112 = $2;
  $$3 = $$0111;
 }
 if ((label | 0) == 77) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
  $$0112 = $2;
  $$3 = $$0111;
 }
 while (1) {
  if (($$0112 | 0) == ($3 | 0)) {
   label = 81;
   break;
  }
  if ((HEAP8[$$3 >> 0] | 0) == 2) {
   $$0112144 = $$0112;
   break;
  }
  $$0112 = $$0112 + 12 | 0;
  $$3 = $$3 + 1 | 0;
 }
 if ((label | 0) == 81) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$0112144 = $3;
 }
 _free($$sroa$0130$0);
 STACKTOP = sp;
 return $$0112144 | 0;
}

function __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 var $$$097 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i106 = 0, $$0$i$i113 = 0, $$0101 = 0, $$0104 = 0, $$07$i$i = 0, $$093 = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1100 = 0, $$1102 = 0, $$194 = 0, $$196 = 0, $$2 = 0, $$2103 = 0, $$3 = 0, $$pn = 0, $$sroa$08$0$i = 0, $$sroa$08$0$i112 = 0, $100 = 0, $102 = 0, $103 = 0, $114 = 0, $116 = 0, $117 = 0, $118 = 0, $126 = 0, $129 = 0, $130 = 0, $131 = 0, $134 = 0, $136 = 0, $138 = 0, $143 = 0, $144 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $57 = 0, $60 = 0, $61 = 0, $67 = 0, $70 = 0, $79 = 0, $81 = 0, $82 = 0, $83 = 0, $91 = 0, $93 = 0, $99 = 0;
 HEAP32[$2 >> 2] = $0;
 $15 = $13 + 11 | 0;
 $16 = $13 + 4 | 0;
 $17 = $12 + 11 | 0;
 $18 = $12 + 4 | 0;
 $20 = ($3 & 512 | 0) == 0;
 $21 = $6 + 8 | 0;
 $22 = ($14 | 0) > 0;
 $23 = $11 + 11 | 0;
 $24 = $11 + 4 | 0;
 $$0104 = 0;
 $$097 = $4;
 while (1) {
  if (($$0104 | 0) == 4) break;
  L4 : do switch (HEAP8[$8 + $$0104 >> 0] | 0) {
  case 0:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $$2 = $$097;
    break;
   }
  case 1:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 31]($6, 32) | 0;
    $40 = HEAP32[$2 >> 2] | 0;
    HEAP32[$2 >> 2] = $40 + 1;
    HEAP8[$40 >> 0] = $39;
    $$2 = $$097;
    break;
   }
  case 3:
   {
    $42 = HEAP8[$15 >> 0] | 0;
    $43 = $42 << 24 >> 24 < 0;
    if (!(($43 ? HEAP32[$16 >> 2] | 0 : $42 & 255) | 0)) $$2 = $$097; else {
     $50 = HEAP8[($43 ? HEAP32[$13 >> 2] | 0 : $13) >> 0] | 0;
     $51 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $51 + 1;
     HEAP8[$51 >> 0] = $50;
     $$2 = $$097;
    }
    break;
   }
  case 2:
   {
    $53 = HEAP8[$17 >> 0] | 0;
    $54 = $53 << 24 >> 24 < 0;
    $57 = $54 ? HEAP32[$18 >> 2] | 0 : $53 & 255;
    if ($20 | ($57 | 0) == 0) $$2 = $$097; else {
     $60 = $54 ? HEAP32[$12 >> 2] | 0 : $12;
     $61 = $60 + $57 | 0;
     $$0$i$i113 = HEAP32[$2 >> 2] | 0;
     $$sroa$08$0$i112 = $60;
     while (1) {
      if (($$sroa$08$0$i112 | 0) == ($61 | 0)) break;
      HEAP8[$$0$i$i113 >> 0] = HEAP8[$$sroa$08$0$i112 >> 0] | 0;
      $$0$i$i113 = $$0$i$i113 + 1 | 0;
      $$sroa$08$0$i112 = $$sroa$08$0$i112 + 1 | 0;
     }
     HEAP32[$2 >> 2] = $$0$i$i113;
     $$2 = $$097;
    }
    break;
   }
  case 4:
   {
    $67 = HEAP32[$2 >> 2] | 0;
    $$$097 = $7 ? $$097 + 1 | 0 : $$097;
    $$0101 = $$$097;
    while (1) {
     if ($$0101 >>> 0 >= $5 >>> 0) break;
     $70 = HEAP8[$$0101 >> 0] | 0;
     if ($70 << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[$21 >> 2] | 0) + ($70 << 24 >> 24 << 1) >> 1] & 2048)) break;
     $$0101 = $$0101 + 1 | 0;
    }
    if ($22) {
     $$099 = $14;
     $$1102 = $$0101;
     while (1) {
      $79 = ($$099 | 0) > 0;
      if (!($$1102 >>> 0 > $$$097 >>> 0 & $79)) break;
      $81 = $$1102 + -1 | 0;
      $82 = HEAP8[$81 >> 0] | 0;
      $83 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $83 + 1;
      HEAP8[$83 >> 0] = $82;
      $$099 = $$099 + -1 | 0;
      $$1102 = $81;
     }
     if ($79) $93 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 31]($6, 48) | 0; else $93 = 0;
     $$1100 = $$099;
     while (1) {
      $91 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $91 + 1;
      if (($$1100 | 0) <= 0) break;
      HEAP8[$91 >> 0] = $93;
      $$1100 = $$1100 + -1 | 0;
     }
     HEAP8[$91 >> 0] = $9;
     $$2103 = $$1102;
    } else $$2103 = $$0101;
    L35 : do if (($$2103 | 0) == ($$$097 | 0)) {
     $99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 31]($6, 48) | 0;
     $100 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $100 + 1;
     HEAP8[$100 >> 0] = $99;
    } else {
     $102 = HEAP8[$23 >> 0] | 0;
     $103 = $102 << 24 >> 24 < 0;
     if (!(($103 ? HEAP32[$24 >> 2] | 0 : $102 & 255) | 0)) {
      $$0 = -1;
      $$093 = 0;
      $$095 = 0;
      $$3 = $$2103;
     } else {
      $$0 = HEAP8[($103 ? HEAP32[$11 >> 2] | 0 : $11) >> 0] | 0;
      $$093 = 0;
      $$095 = 0;
      $$3 = $$2103;
     }
     while (1) {
      if (($$3 | 0) == ($$$097 | 0)) break L35;
      if (($$095 | 0) == ($$0 | 0)) {
       $114 = HEAP32[$2 >> 2] | 0;
       HEAP32[$2 >> 2] = $114 + 1;
       HEAP8[$114 >> 0] = $10;
       $116 = $$093 + 1 | 0;
       $117 = HEAP8[$23 >> 0] | 0;
       $118 = $117 << 24 >> 24 < 0;
       if ($116 >>> 0 < ($118 ? HEAP32[$24 >> 2] | 0 : $117 & 255) >>> 0) {
        $126 = HEAP8[($118 ? HEAP32[$11 >> 2] | 0 : $11) + $116 >> 0] | 0;
        $$1 = $126 << 24 >> 24 == 127 ? -1 : $126 << 24 >> 24;
        $$194 = $116;
        $$196 = 0;
       } else {
        $$1 = $$095;
        $$194 = $116;
        $$196 = 0;
       }
      } else {
       $$1 = $$0;
       $$194 = $$093;
       $$196 = $$095;
      }
      $129 = $$3 + -1 | 0;
      $130 = HEAP8[$129 >> 0] | 0;
      $131 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $131 + 1;
      HEAP8[$131 >> 0] = $130;
      $$0 = $$1;
      $$093 = $$194;
      $$095 = $$196 + 1 | 0;
      $$3 = $129;
     }
    } while (0);
    $134 = HEAP32[$2 >> 2] | 0;
    if (($67 | 0) == ($134 | 0)) $$2 = $$$097; else {
     $$0$i$i106 = $134;
     $$07$i$i = $67;
     while (1) {
      $136 = $$0$i$i106 + -1 | 0;
      if ($$07$i$i >>> 0 >= $136 >>> 0) {
       $$2 = $$$097;
       break L4;
      }
      $138 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$136 >> 0] | 0;
      HEAP8[$136 >> 0] = $138;
      $$0$i$i106 = $136;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    }
    break;
   }
  default:
   $$2 = $$097;
  } while (0);
  $$0104 = $$0104 + 1 | 0;
  $$097 = $$2;
 }
 $25 = HEAP8[$15 >> 0] | 0;
 $26 = $25 << 24 >> 24 < 0;
 $29 = $26 ? HEAP32[$16 >> 2] | 0 : $25 & 255;
 if ($29 >>> 0 > 1) {
  $143 = $26 ? HEAP32[$13 >> 2] | 0 : $13;
  $144 = $143 + $29 | 0;
  $$0$i$i = HEAP32[$2 >> 2] | 0;
  $$pn = $143;
  while (1) {
   $$sroa$08$0$i = $$pn + 1 | 0;
   if (($$sroa$08$0$i | 0) == ($144 | 0)) break;
   HEAP8[$$0$i$i >> 0] = HEAP8[$$sroa$08$0$i >> 0] | 0;
   $$0$i$i = $$0$i$i + 1 | 0;
   $$pn = $$sroa$08$0$i;
  }
  HEAP32[$2 >> 2] = $$0$i$i;
 }
 switch (($3 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$1 >> 2] = $0;
 }
 return;
}

function __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 var $$$099 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0$i$i112 = 0, $$0101 = 0, $$0103 = 0, $$0106 = 0, $$07$i$i = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1102 = 0, $$1104 = 0, $$196 = 0, $$198 = 0, $$2 = 0, $$2105 = 0, $$3 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $106 = 0, $114 = 0, $115 = 0, $116 = 0, $121 = 0, $124 = 0, $125 = 0, $127 = 0, $130 = 0, $131 = 0, $133 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $144 = 0, $145 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $58 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $69 = 0, $79 = 0, $81 = 0, $82 = 0, $83 = 0, $91 = 0, $92 = 0, $93 = 0, $99 = 0;
 HEAP32[$2 >> 2] = $0;
 $16 = $13 + 8 + 3 | 0;
 $17 = $13 + 4 | 0;
 $19 = $12 + 8 + 3 | 0;
 $20 = $12 + 4 | 0;
 $22 = ($3 & 512 | 0) == 0;
 $23 = ($14 | 0) > 0;
 $24 = $11 + 11 | 0;
 $25 = $11 + 4 | 0;
 $$0106 = 0;
 $$099 = $4;
 while (1) {
  if (($$0106 | 0) == 4) break;
  L4 : do switch (HEAP8[$8 + $$0106 >> 0] | 0) {
  case 0:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $$2 = $$099;
    break;
   }
  case 1:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 31]($6, 32) | 0;
    $41 = HEAP32[$2 >> 2] | 0;
    HEAP32[$2 >> 2] = $41 + 4;
    HEAP32[$41 >> 2] = $40;
    $$2 = $$099;
    break;
   }
  case 3:
   {
    $43 = HEAP8[$16 >> 0] | 0;
    $44 = $43 << 24 >> 24 < 0;
    if (!(($44 ? HEAP32[$17 >> 2] | 0 : $43 & 255) | 0)) $$2 = $$099; else {
     $51 = HEAP32[($44 ? HEAP32[$13 >> 2] | 0 : $13) >> 2] | 0;
     $52 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $52 + 4;
     HEAP32[$52 >> 2] = $51;
     $$2 = $$099;
    }
    break;
   }
  case 2:
   {
    $54 = HEAP8[$19 >> 0] | 0;
    $55 = $54 << 24 >> 24 < 0;
    $58 = $55 ? HEAP32[$20 >> 2] | 0 : $54 & 255;
    if ($22 | ($58 | 0) == 0) $$2 = $$099; else {
     $61 = $55 ? HEAP32[$12 >> 2] | 0 : $12;
     $62 = $61 + ($58 << 2) | 0;
     $63 = HEAP32[$2 >> 2] | 0;
     $$0$i$i112 = $63;
     $64 = $61;
     while (1) {
      if (($64 | 0) == ($62 | 0)) break;
      HEAP32[$$0$i$i112 >> 2] = HEAP32[$64 >> 2];
      $$0$i$i112 = $$0$i$i112 + 4 | 0;
      $64 = $64 + 4 | 0;
     }
     HEAP32[$2 >> 2] = $63 + ($58 << 2);
     $$2 = $$099;
    }
    break;
   }
  case 4:
   {
    $69 = HEAP32[$2 >> 2] | 0;
    $$$099 = $7 ? $$099 + 4 | 0 : $$099;
    $$0103 = $$$099;
    while (1) {
     if ($$0103 >>> 0 >= $5 >>> 0) break;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 12 >> 2] & 63]($6, 2048, HEAP32[$$0103 >> 2] | 0) | 0)) break;
     $$0103 = $$0103 + 4 | 0;
    }
    if ($23) {
     $$0101 = $14;
     $$1104 = $$0103;
     while (1) {
      $79 = ($$0101 | 0) > 0;
      if (!($$1104 >>> 0 > $$$099 >>> 0 & $79)) break;
      $81 = $$1104 + -4 | 0;
      $82 = HEAP32[$81 >> 2] | 0;
      $83 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $83 + 4;
      HEAP32[$83 >> 2] = $82;
      $$0101 = $$0101 + -1 | 0;
      $$1104 = $81;
     }
     if ($79) $93 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 31]($6, 48) | 0; else $93 = 0;
     $$1102 = $$0101;
     $92 = HEAP32[$2 >> 2] | 0;
     while (1) {
      $91 = $92 + 4 | 0;
      if (($$1102 | 0) <= 0) break;
      HEAP32[$92 >> 2] = $93;
      $$1102 = $$1102 + -1 | 0;
      $92 = $91;
     }
     HEAP32[$2 >> 2] = $91;
     HEAP32[$92 >> 2] = $9;
     $$2105 = $$1104;
    } else $$2105 = $$0103;
    if (($$2105 | 0) == ($$$099 | 0)) {
     $99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 31]($6, 48) | 0;
     $100 = HEAP32[$2 >> 2] | 0;
     $101 = $100 + 4 | 0;
     HEAP32[$2 >> 2] = $101;
     HEAP32[$100 >> 2] = $99;
     $130 = $101;
    } else {
     $102 = HEAP8[$24 >> 0] | 0;
     $103 = $102 << 24 >> 24 < 0;
     $106 = $103 ? HEAP32[$25 >> 2] | 0 : $102 & 255;
     if (!$106) {
      $$0 = -1;
      $$095 = 0;
      $$097 = 0;
      $$3 = $$2105;
     } else {
      $$0 = HEAP8[($103 ? HEAP32[$11 >> 2] | 0 : $11) >> 0] | 0;
      $$095 = 0;
      $$097 = 0;
      $$3 = $$2105;
     }
     while (1) {
      if (($$3 | 0) == ($$$099 | 0)) break;
      $114 = HEAP32[$2 >> 2] | 0;
      if (($$097 | 0) == ($$0 | 0)) {
       $115 = $114 + 4 | 0;
       HEAP32[$2 >> 2] = $115;
       HEAP32[$114 >> 2] = $10;
       $116 = $$095 + 1 | 0;
       if ($116 >>> 0 < $106 >>> 0) {
        $121 = HEAP8[($103 ? HEAP32[$11 >> 2] | 0 : $11) + $116 >> 0] | 0;
        $$1 = $121 << 24 >> 24 == 127 ? -1 : $121 << 24 >> 24;
        $$196 = $116;
        $$198 = 0;
        $127 = $115;
       } else {
        $$1 = $$097;
        $$196 = $116;
        $$198 = 0;
        $127 = $115;
       }
      } else {
       $$1 = $$0;
       $$196 = $$095;
       $$198 = $$097;
       $127 = $114;
      }
      $124 = $$3 + -4 | 0;
      $125 = HEAP32[$124 >> 2] | 0;
      HEAP32[$2 >> 2] = $127 + 4;
      HEAP32[$127 >> 2] = $125;
      $$0 = $$1;
      $$095 = $$196;
      $$097 = $$198 + 1 | 0;
      $$3 = $124;
     }
     $130 = HEAP32[$2 >> 2] | 0;
    }
    if (($69 | 0) == ($130 | 0)) $$2 = $$$099; else {
     $$0$i$i108 = $130;
     $$07$i$i = $69;
     while (1) {
      $131 = $$0$i$i108 + -4 | 0;
      if ($$07$i$i >>> 0 >= $131 >>> 0) {
       $$2 = $$$099;
       break L4;
      }
      $133 = HEAP32[$$07$i$i >> 2] | 0;
      HEAP32[$$07$i$i >> 2] = HEAP32[$131 >> 2];
      HEAP32[$131 >> 2] = $133;
      $$0$i$i108 = $131;
      $$07$i$i = $$07$i$i + 4 | 0;
     }
    }
    break;
   }
  default:
   $$2 = $$099;
  } while (0);
  $$0106 = $$0106 + 1 | 0;
  $$099 = $$2;
 }
 $26 = HEAP8[$16 >> 0] | 0;
 $27 = $26 << 24 >> 24 < 0;
 $30 = $27 ? HEAP32[$17 >> 2] | 0 : $26 & 255;
 if ($30 >>> 0 > 1) {
  $138 = $27 ? HEAP32[$13 >> 2] | 0 : $13;
  $139 = $138 + 4 | 0;
  $140 = $138 + ($30 << 2) | 0;
  $141 = HEAP32[$2 >> 2] | 0;
  $144 = $140 - $139 | 0;
  $$0$i$i = $141;
  $145 = $139;
  while (1) {
   if (($145 | 0) == ($140 | 0)) break;
   HEAP32[$$0$i$i >> 2] = HEAP32[$145 >> 2];
   $$0$i$i = $$0$i$i + 4 | 0;
   $145 = $145 + 4 | 0;
  }
  HEAP32[$2 >> 2] = $141 + ($144 >>> 2 << 2);
 }
 switch (($3 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$1 >> 2] = $0;
 }
 return;
}

function __ZL8str_gsubP9lua_State($0) {
 $0 = $0 | 0;
 var $$ = 0, $$$i$i = 0, $$016$i$i = 0, $$034$i$i = 0, $$052 = 0, $$053 = 0, $$1 = 0, $$1$i$i = 0, $$15461 = 0, $$15462 = 0, $$255 = 0, $$3 = 0, $1 = 0, $10 = 0, $101 = 0, $12 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $3 = 0, $30 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $59 = 0, $6 = 0, $7 = 0, $71 = 0, $77 = 0, $78 = 0, $83 = 0, $84 = 0, $96 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1328 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $1 = sp + 1324 | 0;
 $2 = sp + 1320 | 0;
 $3 = sp + 1048 | 0;
 $4 = sp + 12 | 0;
 $5 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $2) | 0;
 $6 = __Z17luaL_checklstringP9lua_StateiPj($0, 2, 0) | 0;
 $7 = __Z8lua_typeP9lua_Statei($0, 3) | 0;
 $10 = __Z15luaL_optintegerP9lua_Stateii($0, 4, (HEAP32[$2 >> 2] | 0) + 1 | 0) | 0;
 $12 = (HEAP8[$6 >> 0] | 0) == 94;
 $$ = $12 ? $6 + 1 | 0 : $6;
 if (($7 + -3 | 0) >>> 0 >= 4) __Z13luaL_argerrorP9lua_StateiPKc($0, 3, 88636) | 0;
 __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $4);
 $15 = $3 + 8 | 0;
 HEAP32[$15 >> 2] = $0;
 HEAP32[$3 >> 2] = $5;
 $18 = $3 + 4 | 0;
 HEAP32[$18 >> 2] = $5 + (HEAP32[$2 >> 2] | 0);
 $19 = $3 + 12 | 0;
 $20 = $4 + 1036 | 0;
 $21 = $3 + 20 | 0;
 $22 = $3 + 16 | 0;
 $$052 = $5;
 $$053 = 0;
 while (1) {
  if (($$053 | 0) >= ($10 | 0)) {
   $$255 = $$053;
   $$3 = $$052;
   label = 44;
   break;
  }
  HEAP32[$19 >> 2] = 0;
  $24 = __ZL5matchP10MatchStatePKcS2_($3, $$052, $$) | 0;
  if (!$24) {
   $$15461 = $$053;
   label = 39;
  } else {
   $26 = $$053 + 1 | 0;
   $27 = HEAP32[$15 >> 2] | 0;
   switch (__Z8lua_typeP9lua_Statei($27, 3) | 0) {
   case 4:
   case 3:
    {
     $30 = __Z13lua_tolstringP9lua_StateiPj(HEAP32[$15 >> 2] | 0, 3, $1) | 0;
     if (HEAP32[$1 >> 2] | 0) {
      $35 = $24 - $$052 | 0;
      $$034$i$i = 0;
      do {
       $36 = $30 + $$034$i$i | 0;
       $37 = HEAP8[$36 >> 0] | 0;
       do if ($37 << 24 >> 24 == 37) {
        $44 = $$034$i$i + 1 | 0;
        $45 = $30 + $44 | 0;
        $46 = HEAP8[$45 >> 0] | 0;
        if ((($46 & 255) + -48 | 0) >>> 0 < 10) if ($46 << 24 >> 24 == 48) {
         __Z15luaL_addlstringP11luaL_BufferPKcj($4, $$052, $35);
         $$1$i$i = $44;
         break;
        } else {
         __ZL15push_onecaptureP10MatchStateiPKcS2_($3, ($46 << 24 >> 24) + -49 | 0, $$052, $24);
         __Z13luaL_addvalueP11luaL_Buffer($4);
         $$1$i$i = $44;
         break;
        } else {
         $48 = HEAP32[$4 >> 2] | 0;
         if ($48 >>> 0 < $20 >>> 0) {
          $51 = $48;
          $52 = $46;
         } else {
          __Z15luaL_prepbufferP11luaL_Buffer($4) | 0;
          $51 = HEAP32[$4 >> 2] | 0;
          $52 = HEAP8[$45 >> 0] | 0;
         }
         HEAP32[$4 >> 2] = $51 + 1;
         HEAP8[$51 >> 0] = $52;
         $$1$i$i = $44;
         break;
        }
       } else {
        $39 = HEAP32[$4 >> 2] | 0;
        if ($39 >>> 0 < $20 >>> 0) {
         $42 = $39;
         $43 = $37;
        } else {
         __Z15luaL_prepbufferP11luaL_Buffer($4) | 0;
         $42 = HEAP32[$4 >> 2] | 0;
         $43 = HEAP8[$36 >> 0] | 0;
        }
        HEAP32[$4 >> 2] = $42 + 1;
        HEAP8[$42 >> 0] = $43;
        $$1$i$i = $$034$i$i;
       } while (0);
       $$034$i$i = $$1$i$i + 1 | 0;
      } while ($$034$i$i >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0);
     }
     break;
    }
   case 6:
    {
     __Z13lua_pushvalueP9lua_Statei($27, 3);
     $59 = HEAP32[$19 >> 2] | 0;
     $$$i$i = ($$052 | 0) != 0 & ($59 | 0) == 0 ? 1 : $59;
     __Z15luaL_checkstackP9lua_StateiPKc(HEAP32[$15 >> 2] | 0, $$$i$i, 88432);
     if (($$$i$i | 0) > 0) {
      $$016$i$i = 0;
      do {
       __ZL15push_onecaptureP10MatchStateiPKcS2_($3, $$016$i$i, $$052, $24);
       $$016$i$i = $$016$i$i + 1 | 0;
      } while (($$016$i$i | 0) != ($$$i$i | 0));
     }
     __Z8lua_callP9lua_Stateii($27, $$$i$i, 1);
     label = 33;
     break;
    }
   case 5:
    {
     do if ((HEAP32[$19 >> 2] | 0) > 0) {
      $71 = HEAP32[$21 >> 2] | 0;
      if (($71 | 0) == -1) {
       __Z10luaL_errorP9lua_StatePKcz(HEAP32[$15 >> 2] | 0, 88472, $vararg_buffer) | 0;
       $83 = HEAP32[$15 >> 2] | 0;
       $84 = HEAP32[$22 >> 2] | 0;
      } else {
       $77 = HEAP32[$15 >> 2] | 0;
       $78 = HEAP32[$22 >> 2] | 0;
       if (($71 | 0) == -2) {
        __Z15lua_pushintegerP9lua_Statei($77, $78 + 1 - (HEAP32[$3 >> 2] | 0) | 0);
        break;
       } else {
        $83 = $77;
        $84 = $78;
       }
      }
      __Z15lua_pushlstringP9lua_StatePKcj($83, $84, $71);
     } else __Z15lua_pushlstringP9lua_StatePKcj(HEAP32[$15 >> 2] | 0, $$052, $24 - $$052 | 0); while (0);
     __Z12lua_gettableP9lua_Statei($27, 3);
     label = 33;
     break;
    }
   default:
    label = 33;
   }
   if ((label | 0) == 33) {
    label = 0;
    if (__Z13lua_tobooleanP9lua_Statei($27, -1) | 0) {
     if (!(__Z12lua_isstringP9lua_Statei($27, -1) | 0)) {
      HEAP32[$vararg_buffer1 >> 2] = __Z12lua_typenameP9lua_Statei($27, __Z8lua_typeP9lua_Statei($27, -1) | 0) | 0;
      __Z10luaL_errorP9lua_StatePKcz($27, 88667, $vararg_buffer1) | 0;
     }
    } else {
     __Z10lua_settopP9lua_Statei($27, -2);
     __Z15lua_pushlstringP9lua_StatePKcj($27, $$052, $24 - $$052 | 0);
    }
    __Z13luaL_addvalueP11luaL_Buffer($4);
   }
   if ($24 >>> 0 > $$052 >>> 0) {
    $$1 = $24;
    $$15462 = $26;
   } else {
    $$15461 = $26;
    label = 39;
   }
  }
  if ((label | 0) == 39) {
   label = 0;
   if ($$052 >>> 0 >= (HEAP32[$18 >> 2] | 0) >>> 0) {
    $$255 = $$15461;
    $$3 = $$052;
    label = 44;
    break;
   }
   $96 = HEAP32[$4 >> 2] | 0;
   if ($96 >>> 0 < $20 >>> 0) $101 = $96; else {
    __Z15luaL_prepbufferP11luaL_Buffer($4) | 0;
    $101 = HEAP32[$4 >> 2] | 0;
   }
   $99 = HEAP8[$$052 >> 0] | 0;
   HEAP32[$4 >> 2] = $101 + 1;
   HEAP8[$101 >> 0] = $99;
   $$1 = $$052 + 1 | 0;
   $$15462 = $$15461;
  }
  if ($12) {
   $$255 = $$15462;
   $$3 = $$1;
   label = 44;
   break;
  } else {
   $$052 = $$1;
   $$053 = $$15462;
  }
 }
 if ((label | 0) == 44) {
  __Z15luaL_addlstringP11luaL_BufferPKcj($4, $$3, (HEAP32[$18 >> 2] | 0) - $$3 | 0);
  __Z15luaL_pushresultP11luaL_Buffer($4);
  __Z15lua_pushintegerP9lua_Statei($0, $$255);
  STACKTOP = sp;
  return 2;
 }
 return 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0101 = 0, $$0107 = 0, $$0108 = 0, $$0108136 = 0, $$088 = 0, $$089 = 0, $$090$off0 = 0, $$091 = 0, $$092 = 0, $$093 = 0, $$094 = 0, $$097 = 0, $$1102 = 0, $$195 = 0, $$198 = 0, $$2$off0 = 0, $$2103 = 0, $$296 = 0, $$299 = 0, $$3 = 0, $$3100 = 0, $$3104 = 0, $$5 = 0, $$5106 = 0, $$6 = 0, $$7 = 0, $$pre$i3$i$i118 = 0, $$sroa$0122$0 = 0, $101 = 0, $106 = 0, $107 = 0, $11 = 0, $113 = 0, $118 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $141 = 0, $146 = 0, $17 = 0, $22 = 0, $28 = 0, $40 = 0, $41 = 0, $42 = 0, $54 = 0, $57 = 0, $69 = 0, $7 = 0, $70 = 0, $82 = 0, $92 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $7 = sp;
 $11 = ($3 - $2 | 0) / 12 | 0;
 if ($11 >>> 0 > 100) {
  $13 = _malloc($11) | 0;
  if (!$13) {
   $$0107 = 0;
   $$sroa$0122$0 = 0;
  } else {
   $$0107 = $13;
   $$sroa$0122$0 = $13;
  }
 } else {
  $$0107 = $7;
  $$sroa$0122$0 = 0;
 }
 $$0101 = $11;
 $$093 = $2;
 $$094 = $$0107;
 $$097 = 0;
 while (1) {
  if (($$093 | 0) == ($3 | 0)) break;
  $17 = HEAP8[$$093 + 11 >> 0] | 0;
  if ($17 << 24 >> 24 < 0) $22 = HEAP32[$$093 + 4 >> 2] | 0; else $22 = $17 & 255;
  if (!$22) {
   HEAP8[$$094 >> 0] = 2;
   $$1102 = $$0101 + -1 | 0;
   $$198 = $$097 + 1 | 0;
  } else {
   HEAP8[$$094 >> 0] = 1;
   $$1102 = $$0101;
   $$198 = $$097;
  }
  $$0101 = $$1102;
  $$093 = $$093 + 12 | 0;
  $$094 = $$094 + 1 | 0;
  $$097 = $$198;
 }
 $$092 = 0;
 $$2103 = $$0101;
 $$299 = $$097;
 L17 : while (1) {
  $28 = HEAP32[$0 >> 2] | 0;
  do if (!$28) $40 = 0; else if ((HEAP32[$28 + 12 >> 2] | 0) == (HEAP32[$28 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0) == -1) {
   HEAP32[$0 >> 2] = 0;
   $40 = 0;
   break;
  } else {
   $40 = HEAP32[$0 >> 2] | 0;
   break;
  } else $40 = $28; while (0);
  $41 = ($40 | 0) == 0;
  $42 = HEAP32[$1 >> 2] | 0;
  if (!$42) $$pre$i3$i$i118 = 0; else if ((HEAP32[$42 + 12 >> 2] | 0) == (HEAP32[$42 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$42 >> 2] | 0) + 36 >> 2] & 255]($42) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i3$i$i118 = 0;
  } else $$pre$i3$i$i118 = $42; else $$pre$i3$i$i118 = $42;
  $54 = ($$pre$i3$i$i118 | 0) == 0;
  $57 = HEAP32[$0 >> 2] | 0;
  if (!(($$2103 | 0) != 0 & ($41 ^ $54))) break;
  $82 = HEAP32[$57 + 12 >> 2] | 0;
  if (($82 | 0) == (HEAP32[$57 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 36 >> 2] & 255]($57) | 0; else $$0$i$i = HEAPU8[$82 >> 0] | 0;
  $92 = $$0$i$i & 255;
  if ($6) $$091 = $92; else $$091 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 31]($4, $92) | 0;
  $97 = $$092 + 1 | 0;
  $$089 = $2;
  $$090$off0 = 0;
  $$195 = $$0107;
  $$3100 = $$299;
  $$3104 = $$2103;
  while (1) {
   if (($$089 | 0) == ($3 | 0)) break;
   do if ((HEAP8[$$195 >> 0] | 0) == 1) {
    $101 = $$089 + 11 | 0;
    if ((HEAP8[$101 >> 0] | 0) < 0) $106 = HEAP32[$$089 >> 2] | 0; else $106 = $$089;
    $107 = HEAP8[$106 + $$092 >> 0] | 0;
    if ($6) $$088 = $107; else $$088 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 31]($4, $107) | 0;
    if ($$091 << 24 >> 24 != $$088 << 24 >> 24) {
     HEAP8[$$195 >> 0] = 0;
     $$2$off0 = $$090$off0;
     $$5 = $$3100;
     $$5106 = $$3104 + -1 | 0;
     break;
    }
    $113 = HEAP8[$101 >> 0] | 0;
    if ($113 << 24 >> 24 < 0) $118 = HEAP32[$$089 + 4 >> 2] | 0; else $118 = $113 & 255;
    if (($118 | 0) == ($97 | 0)) {
     HEAP8[$$195 >> 0] = 2;
     $$2$off0 = 1;
     $$5 = $$3100 + 1 | 0;
     $$5106 = $$3104 + -1 | 0;
    } else {
     $$2$off0 = 1;
     $$5 = $$3100;
     $$5106 = $$3104;
    }
   } else {
    $$2$off0 = $$090$off0;
    $$5 = $$3100;
    $$5106 = $$3104;
   } while (0);
   $$089 = $$089 + 12 | 0;
   $$090$off0 = $$2$off0;
   $$195 = $$195 + 1 | 0;
   $$3100 = $$5;
   $$3104 = $$5106;
  }
  if (!$$090$off0) {
   $$092 = $97;
   $$2103 = $$3104;
   $$299 = $$3100;
   continue;
  }
  $125 = HEAP32[$0 >> 2] | 0;
  $126 = $125 + 12 | 0;
  $127 = HEAP32[$126 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$125 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$125 >> 2] | 0) + 40 >> 2] & 255]($125) | 0; else HEAP32[$126 >> 2] = $127 + 1;
  if (($$3100 + $$3104 | 0) >>> 0 > 1) {
   $$0 = $2;
   $$296 = $$0107;
   $$6 = $$3100;
  } else {
   $$092 = $97;
   $$2103 = $$3104;
   $$299 = $$3100;
   continue;
  }
  while (1) {
   if (($$0 | 0) == ($3 | 0)) {
    $$092 = $97;
    $$2103 = $$3104;
    $$299 = $$6;
    continue L17;
   }
   if ((HEAP8[$$296 >> 0] | 0) == 2) {
    $141 = HEAP8[$$0 + 11 >> 0] | 0;
    if ($141 << 24 >> 24 < 0) $146 = HEAP32[$$0 + 4 >> 2] | 0; else $146 = $141 & 255;
    if (($146 | 0) == ($97 | 0)) $$7 = $$6; else {
     HEAP8[$$296 >> 0] = 0;
     $$7 = $$6 + -1 | 0;
    }
   } else $$7 = $$6;
   $$0 = $$0 + 12 | 0;
   $$296 = $$296 + 1 | 0;
   $$6 = $$7;
  }
 }
 do if (!$57) $69 = 0; else if ((HEAP32[$57 + 12 >> 2] | 0) == (HEAP32[$57 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 36 >> 2] & 255]($57) | 0) == -1) {
  HEAP32[$0 >> 2] = 0;
  $69 = 0;
  break;
 } else {
  $69 = HEAP32[$0 >> 2] | 0;
  break;
 } else $69 = $57; while (0);
 $70 = ($69 | 0) == 0;
 do if ($54) label = 34; else {
  if ((HEAP32[$$pre$i3$i$i118 + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i118 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i118 >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i118) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   label = 34;
   break;
  }
  if ($70) {
   $$0108 = $2;
   $$3 = $$0107;
  } else label = 69;
 } while (0);
 if ((label | 0) == 34) if ($70) label = 69; else {
  $$0108 = $2;
  $$3 = $$0107;
 }
 if ((label | 0) == 69) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
  $$0108 = $2;
  $$3 = $$0107;
 }
 while (1) {
  if (($$0108 | 0) == ($3 | 0)) {
   label = 73;
   break;
  }
  if ((HEAP8[$$3 >> 0] | 0) == 2) {
   $$0108136 = $$0108;
   break;
  }
  $$0108 = $$0108 + 12 | 0;
  $$3 = $$3 + 1 | 0;
 }
 if ((label | 0) == 73) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$0108136 = $3;
 }
 _free($$sroa$0122$0);
 STACKTOP = sp;
 return $$0108136 | 0;
}

function __ZL4bodyP8LexStateP7expdescii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $$04142$i = 0, $$043$i = 0, $$1$ph$i = 0, $$2$i = 0, $$idx = 0, $$idx$val = 0, $$idx$val$i = 0, $$pre$phi26Z2D = 0, $$pre$phiZ2D = 0, $$pre23 = 0, $102 = 0, $105 = 0, $11 = 0, $112 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $127 = 0, $131 = 0, $137 = 0, $138 = 0, $142 = 0, $154 = 0, $16 = 0, $19 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $48 = 0, $51 = 0, $54 = 0, $65 = 0, $7 = 0, $70 = 0, $80 = 0, $93 = 0, $97 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $4 = sp + 12 | 0;
 __ZL9open_funcP8LexStateP9FuncState($0, $4);
 HEAP32[(HEAP32[$4 >> 2] | 0) + 60 >> 2] = $3;
 $7 = $0 + 12 | 0;
 if ((HEAP32[$7 >> 2] | 0) != 40) {
  $11 = HEAP32[$0 + 32 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = __Z14luaX_token2strP8LexStatei($0, 40) | 0;
  __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($11, 87798, $vararg_buffer) | 0);
 }
 __Z9luaX_nextP8LexState($0);
 if (!$2) $$pre$phiZ2D = $0 + 28 | 0; else {
  __ZL12new_localvarP8LexStateP7TStringi($0, __Z14luaX_newstringP8LexStatePKcj($0, 88156, 4) | 0, 0);
  $$idx = $0 + 28 | 0;
  $$idx$val = HEAP32[$$idx >> 2] | 0;
  $16 = $$idx$val + 50 | 0;
  $19 = (HEAPU8[$16 >> 0] | 0) + 1 | 0;
  HEAP8[$16 >> 0] = $19;
  HEAP32[(HEAP32[(HEAP32[$$idx$val >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val + 172 + (($19 & 255) + -1 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$$idx$val + 24 >> 2];
  $$pre$phiZ2D = $$idx;
 }
 $32 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 $34 = $33 + 74 | 0;
 HEAP8[$34 >> 0] = 0;
 $35 = HEAP32[$7 >> 2] | 0;
 L8 : do if (($35 | 0) == 41) $$2$i = 0; else {
  $37 = $0 + 16 | 0;
  $$0$i = 0;
  $38 = $35;
  L10 : while (1) {
   switch ($38 | 0) {
   case 279:
    {
     break L10;
     break;
    }
   case 285:
    {
     $39 = HEAP32[$37 >> 2] | 0;
     __Z9luaX_nextP8LexState($0);
     __ZL12new_localvarP8LexStateP7TStringi($0, $39, $$0$i);
     $$1$ph$i = $$0$i + 1 | 0;
     break;
    }
   default:
    {
     __Z16luaX_syntaxerrorP8LexStatePKc($0, 88161);
     $$1$ph$i = $$0$i;
    }
   }
   if (HEAP8[$34 >> 0] | 0) {
    $$2$i = $$1$ph$i;
    break L8;
   }
   if ((HEAP32[$7 >> 2] | 0) != 44) {
    $$2$i = $$1$ph$i;
    break L8;
   }
   __Z9luaX_nextP8LexState($0);
   $$0$i = $$1$ph$i;
   $38 = HEAP32[$7 >> 2] | 0;
  }
  __Z9luaX_nextP8LexState($0);
  HEAP8[$34 >> 0] = HEAPU8[$34 >> 0] | 2;
  $$2$i = $$0$i;
 } while (0);
 $$idx$val$i = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $48 = $$idx$val$i + 50 | 0;
 $51 = (HEAPU8[$48 >> 0] | 0) + $$2$i | 0;
 HEAP8[$48 >> 0] = $51;
 if ($$2$i | 0) {
  $54 = $$idx$val$i + 24 | 0;
  HEAP32[(HEAP32[(HEAP32[$$idx$val$i >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i + 172 + (($51 & 255) - $$2$i << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$54 >> 2];
  $65 = $$2$i + -1 | 0;
  if ($65 | 0) {
   $70 = $65;
   do {
    HEAP32[(HEAP32[(HEAP32[$$idx$val$i >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i + 172 + ((HEAPU8[$48 >> 0] | 0) - $70 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$54 >> 2];
    $70 = $70 + -1 | 0;
   } while (($70 | 0) != 0);
  }
 }
 $80 = $32 + 50 | 0;
 HEAP8[$33 + 73 >> 0] = (HEAPU8[$80 >> 0] | 0) - (HEAPU8[$34 >> 0] & 1);
 __Z16luaK_reserveregsP9FuncStatei($32, HEAPU8[$80 >> 0] | 0);
 $$pre23 = $0 + 32 | 0;
 if ((HEAP32[$7 >> 2] | 0) != 41) {
  $93 = HEAP32[$$pre23 >> 2] | 0;
  HEAP32[$vararg_buffer1 >> 2] = __Z14luaX_token2strP8LexStatei($0, 41) | 0;
  __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($93, 87798, $vararg_buffer1) | 0);
 }
 __Z9luaX_nextP8LexState($0);
 $97 = (HEAP32[$$pre23 >> 2] | 0) + 52 | 0;
 $99 = (HEAP16[$97 >> 1] | 0) + 1 << 16 >> 16;
 HEAP16[$97 >> 1] = $99;
 if (($99 & 65535) > 200) __Z13luaX_lexerrorP8LexStatePKci($0, 87765, 0);
 L30 : do {
  switch (HEAP32[$7 >> 2] | 0) {
  case 287:
  case 276:
  case 262:
  case 261:
  case 260:
   {
    break L30;
    break;
   }
  default:
   {}
  }
  $102 = __ZL9statementP8LexState($0) | 0;
  if ((HEAP32[$7 >> 2] | 0) == 59) __Z9luaX_nextP8LexState($0);
  $105 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  HEAP32[$105 + 36 >> 2] = HEAPU8[$105 + 50 >> 0];
 } while (!($102 | 0));
 $112 = (HEAP32[$$pre23 >> 2] | 0) + 52 | 0;
 HEAP16[$112 >> 1] = (HEAP16[$112 >> 1] | 0) + -1 << 16 >> 16;
 HEAP32[(HEAP32[$4 >> 2] | 0) + 64 >> 2] = HEAP32[$0 + 4 >> 2];
 __ZL11check_matchP8LexStateiii($0, 262, 265, $3);
 __ZL10close_funcP8LexState($0);
 $119 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $120 = HEAP32[$119 >> 2] | 0;
 $121 = $120 + 52 | 0;
 $122 = HEAP32[$121 >> 2] | 0;
 $123 = $119 + 44 | 0;
 if ((HEAP32[$123 >> 2] | 0) < ($122 | 0)) {
  $$pre$phi26Z2D = $120 + 16 | 0;
  $131 = $122;
 } else {
  $127 = $120 + 16 | 0;
  HEAP32[$127 >> 2] = __Z13luaM_growaux_P9lua_StatePvPijiPKc(HEAP32[$$pre23 >> 2] | 0, HEAP32[$127 >> 2] | 0, $121, 4, 262143, 89777) | 0;
  $$pre$phi26Z2D = $127;
  $131 = HEAP32[$121 >> 2] | 0;
 }
 if (($122 | 0) < ($131 | 0)) {
  $$043$i = $122;
  do {
   HEAP32[(HEAP32[$$pre$phi26Z2D >> 2] | 0) + ($$043$i << 2) >> 2] = 0;
   $$043$i = $$043$i + 1 | 0;
  } while (($$043$i | 0) < (HEAP32[$121 >> 2] | 0));
 }
 $137 = HEAP32[$4 >> 2] | 0;
 $138 = HEAP32[$123 >> 2] | 0;
 HEAP32[$123 >> 2] = $138 + 1;
 HEAP32[(HEAP32[$$pre$phi26Z2D >> 2] | 0) + ($138 << 2) >> 2] = $137;
 $142 = HEAP32[$4 >> 2] | 0;
 if (HEAP8[$142 + 5 >> 0] & 3) if (HEAP8[$120 + 5 >> 0] & 4) __Z13luaC_barrierfP9lua_StateP8GCObjectS2_(HEAP32[$$pre23 >> 2] | 0, $120, $142);
 $154 = __Z12luaK_codeABxP9FuncState6OpCodeij($119, 36, 0, (HEAP32[$123 >> 2] | 0) + -1 | 0) | 0;
 HEAP32[$1 + 12 >> 2] = -1;
 HEAP32[$1 + 16 >> 2] = -1;
 HEAP32[$1 >> 2] = 11;
 HEAP32[$1 + 4 >> 2] = $154;
 if (!(HEAP8[(HEAP32[$4 >> 2] | 0) + 72 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 } else $$04142$i = 0;
 do {
  __Z12luaK_codeABCP9FuncState6OpCodeiii($119, (HEAP8[$4 + 51 + ($$04142$i << 1) >> 0] | 0) == 6 ? 0 : 4, 0, HEAPU8[$4 + 51 + ($$04142$i << 1) + 1 >> 0] | 0, 0) | 0;
  $$04142$i = $$04142$i + 1 | 0;
 } while (($$04142$i | 0) < (HEAPU8[(HEAP32[$4 >> 2] | 0) + 72 >> 0] | 0));
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i22 = 0, $$0$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i28 = 0, $$0$i$i39 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i24 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $104 = 0, $109 = 0, $11 = 0, $12 = 0, $121 = 0, $133 = 0, $134 = 0, $135 = 0, $15 = 0, $16 = 0, $22 = 0, $25 = 0, $28 = 0, $32 = 0, $33 = 0, $36 = 0, $46 = 0, $49 = 0, $6 = 0, $60 = 0, $64 = 0, $7 = 0, $72 = 0, $76 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $90 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $vararg_buffer = sp;
 $6 = sp + 208 | 0;
 $7 = sp + 192 | 0;
 $8 = sp + 180 | 0;
 $9 = sp + 176 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$7 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $15 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$8 >> 2] = $15;
 $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 110200) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 48 >> 2] & 15]($16, 102831, 102857, $6) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($15) | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $$0$i$i19 = 0;
 while (1) {
  if (($$0$i$i19 | 0) == 3) break;
  HEAP32[$8 + ($$0$i$i19 << 2) >> 2] = 0;
  $$0$i$i19 = $$0$i$i19 + 1 | 0;
 }
 $22 = $8 + 11 | 0;
 $25 = $8 + 8 | 0;
 if ((HEAP8[$22 >> 0] | 0) < 0) $28 = (HEAP32[$25 >> 2] & 2147483647) + -1 | 0; else $28 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $28, 0);
 $32 = (HEAP8[$22 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 HEAP32[$9 >> 2] = $32;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$12 >> 2] = 0;
 $33 = $8 + 4 | 0;
 $$0 = $32;
 $$pre$i$i$i24 = HEAP32[$1 >> 2] | 0;
 L12 : while (1) {
  if (!$$pre$i$i$i24) {
   $$pre$i$i$i = 0;
   $133 = 1;
  } else {
   $36 = HEAP32[$$pre$i$i$i24 + 12 >> 2] | 0;
   if (($36 | 0) == (HEAP32[$$pre$i$i$i24 + 16 >> 2] | 0)) $$0$i$i$i$i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i24 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i24) | 0; else $$0$i$i$i$i22 = HEAP32[$36 >> 2] | 0;
   if (($$0$i$i$i$i22 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $133 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i24;
    $133 = 0;
   }
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if (!$46) label = 22; else {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i28 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 255]($46) | 0; else $$0$i$i2$i$i28 = HEAP32[$49 >> 2] | 0;
   if (($$0$i$i2$i$i28 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 22;
    break;
   } else if ($133) {
    $134 = $46;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $46;
    break L12;
   }
  } while (0);
  if ((label | 0) == 22) {
   label = 0;
   if ($133) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $134 = 0;
  }
  $60 = HEAP8[$22 >> 0] | 0;
  $64 = $60 << 24 >> 24 < 0 ? HEAP32[$33 >> 2] | 0 : $60 & 255;
  if ((HEAP32[$9 >> 2] | 0) == ($$0 + $64 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $64 << 1, 0);
   if ((HEAP8[$22 >> 0] | 0) < 0) $72 = (HEAP32[$25 >> 2] & 2147483647) + -1 | 0; else $72 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $72, 0);
   $76 = (HEAP8[$22 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
   HEAP32[$9 >> 2] = $76 + $64;
   $$1 = $76;
  } else $$1 = $$0;
  $78 = $$pre$i$i$i + 12 | 0;
  $79 = HEAP32[$78 >> 2] | 0;
  $80 = $$pre$i$i$i + 16 | 0;
  if (($79 | 0) == (HEAP32[$80 >> 2] | 0)) $$0$i$i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i39 = HEAP32[$79 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i39, 16, $$1, $9, $12, 0, $7, $10, $11, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $134;
   break;
  }
  $90 = HEAP32[$78 >> 2] | 0;
  if (($90 | 0) == (HEAP32[$80 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i24 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$78 >> 2] = $90 + 4;
   $$0 = $$1;
   $$pre$i$i$i24 = $$pre$i$i$i;
   continue;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, (HEAP32[$9 >> 2] | 0) - $$2 | 0, 0);
 $103 = (HEAP8[$22 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 $104 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($103, $104, 102864, $vararg_buffer) | 0) != 1) HEAP32[$4 >> 2] = 4;
 if (!$$pre$i$i$i) $135 = 1; else {
  $109 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($109 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$109 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $135 = 1;
  } else $135 = 0;
 }
 do if (!$$pre$i4$i$i) label = 49; else {
  $121 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($121 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$121 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 49;
   break;
  } else if ($135) break; else {
   label = 51;
   break;
  }
 } while (0);
 if ((label | 0) == 49) if ($135) label = 51;
 if ((label | 0) == 51) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZN6google12_GLOBAL__N_112FlagRegistry19SplitArgumentLockedEPKcPNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPS3_SB_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i50 = 0, $$0$ph6$i$i$i$i = 0, $$0$ph6$i$i$i$i43 = 0, $$038 = 0, $$07$ph5$i$i$i$i = 0, $$07$ph5$i$i$i$i44 = 0, $$073$i$i$i$i = 0, $$073$i$i$i$i46 = 0, $$idx39$val$idx$val = 0, $$pr = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $25 = 0, $31 = 0, $39 = 0, $40 = 0, $45 = 0, $5 = 0, $51 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $72 = 0, $73 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer6 = sp + 16 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $5 = sp + 28 | 0;
 $6 = _strchr($1, 61) | 0;
 if (!$6) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($2, $1) | 0;
  $$pr = 0;
 } else {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($2, $1, $6 - $1 | 0) | 0;
  $$pr = $6 + 1 | 0;
 }
 HEAP32[$3 >> 2] = $$pr;
 $14 = (HEAP8[$2 + 11 >> 0] | 0) < 0;
 if ($14) $19 = HEAP32[$2 >> 2] | 0; else $19 = $2;
 $16 = $0 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = ($17 | 0) == 0;
 if (!$18) {
  $$0$ph6$i$i$i$i = $16;
  $$07$ph5$i$i$i$i = $17;
  L10 : while (1) {
   $$073$i$i$i$i = $$07$ph5$i$i$i$i;
   while (1) {
    if ((_strcmp(HEAP32[$$073$i$i$i$i + 16 >> 2] | 0, $19) | 0) >= 0) break;
    $25 = HEAP32[$$073$i$i$i$i + 4 >> 2] | 0;
    if (!$25) {
     $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i;
     break L10;
    } else $$073$i$i$i$i = $25;
   }
   $$07$ph5$i$i$i$i = HEAP32[$$073$i$i$i$i >> 2] | 0;
   if (!$$07$ph5$i$i$i$i) {
    $$0$ph$lcssa$i$i$i$i = $$073$i$i$i$i;
    break;
   } else $$0$ph6$i$i$i$i = $$073$i$i$i$i;
  }
  if (($$0$ph$lcssa$i$i$i$i | 0) != ($16 | 0)) if ((_strcmp($19, HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) | 0) >= 0) {
   $31 = HEAP32[$$0$ph$lcssa$i$i$i$i + 20 >> 2] | 0;
   if ($31 | 0) {
    if ($$pr | 0) {
     $$038 = $31;
     STACKTOP = sp;
     return $$038 | 0;
    }
    if (HEAP8[(HEAP32[$31 + 16 >> 2] | 0) + 4 >> 0] | 0) {
     $$038 = $31;
     STACKTOP = sp;
     return $$038 | 0;
    }
    HEAP32[$3 >> 2] = 91301;
    $$038 = $31;
    STACKTOP = sp;
    return $$038 | 0;
   }
  }
 }
 if ((HEAP8[$19 >> 0] | 0) == 110) if ((HEAP8[$19 + 1 >> 0] | 0) == 111) {
  $45 = $19 + 2 | 0;
  if (!$18) {
   $$0$ph6$i$i$i$i43 = $16;
   $$07$ph5$i$i$i$i44 = $17;
   L32 : while (1) {
    $$073$i$i$i$i46 = $$07$ph5$i$i$i$i44;
    while (1) {
     if ((_strcmp(HEAP32[$$073$i$i$i$i46 + 16 >> 2] | 0, $45) | 0) >= 0) break;
     $51 = HEAP32[$$073$i$i$i$i46 + 4 >> 2] | 0;
     if (!$51) {
      $$0$ph$lcssa$i$i$i$i50 = $$0$ph6$i$i$i$i43;
      break L32;
     } else $$073$i$i$i$i46 = $51;
    }
    $$07$ph5$i$i$i$i44 = HEAP32[$$073$i$i$i$i46 >> 2] | 0;
    if (!$$07$ph5$i$i$i$i44) {
     $$0$ph$lcssa$i$i$i$i50 = $$073$i$i$i$i46;
     break;
    } else $$0$ph6$i$i$i$i43 = $$073$i$i$i$i46;
   }
   if (($$0$ph$lcssa$i$i$i$i50 | 0) != ($16 | 0)) if ((_strcmp($45, HEAP32[$$0$ph$lcssa$i$i$i$i50 + 16 >> 2] | 0) | 0) >= 0) {
    $57 = HEAP32[$$0$ph$lcssa$i$i$i$i50 + 20 >> 2] | 0;
    if ($57 | 0) {
     $$idx39$val$idx$val = HEAP8[(HEAP32[$57 + 16 >> 2] | 0) + 4 >> 0] | 0;
     if (!($$idx39$val$idx$val << 24 >> 24)) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($2, $45) | 0;
      HEAP32[$3 >> 2] = 91299;
      $$038 = $57;
      STACKTOP = sp;
      return $$038 | 0;
     }
     if ($14) $72 = HEAP32[$2 >> 2] | 0; else $72 = $2;
     HEAP32[$vararg_buffer6 >> 2] = 90192;
     HEAP32[$vararg_buffer6 + 4 >> 2] = $72;
     HEAP32[$vararg_buffer6 + 8 >> 2] = $$idx39$val$idx$val << 24 >> 24 > 6 ? 114224 : 90200 + (($$idx39$val$idx$val << 24 >> 24) * 7 | 0) | 0;
     __ZN6google12StringPrintfEPKcz($5, 91242, $vararg_buffer6);
     $73 = $4 + 11 | 0;
     if ((HEAP8[$73 >> 0] | 0) < 0) {
      HEAP8[HEAP32[$4 >> 2] >> 0] = 0;
      HEAP32[$4 + 4 >> 2] = 0;
     } else {
      HEAP8[$4 >> 0] = 0;
      HEAP8[$73 >> 0] = 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($4, 0);
     HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     HEAP32[$5 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$038 = 0;
     STACKTOP = sp;
     return $$038 | 0;
    }
   }
  }
  if ($14) $60 = HEAP32[$2 >> 2] | 0; else $60 = $2;
  HEAP32[$vararg_buffer2 >> 2] = 90192;
  HEAP32[$vararg_buffer2 + 4 >> 2] = $60;
  __ZN6google12StringPrintfEPKcz($5, 91208, $vararg_buffer2);
  $61 = $4 + 11 | 0;
  if ((HEAP8[$61 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$4 >> 2] >> 0] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
  } else {
   HEAP8[$4 >> 0] = 0;
   HEAP8[$61 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($4, 0);
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $$038 = 0;
  STACKTOP = sp;
  return $$038 | 0;
 }
 if ($14) $39 = HEAP32[$2 >> 2] | 0; else $39 = $2;
 HEAP32[$vararg_buffer >> 2] = 90192;
 HEAP32[$vararg_buffer + 4 >> 2] = $39;
 __ZN6google12StringPrintfEPKcz($5, 91208, $vararg_buffer);
 $40 = $4 + 11 | 0;
 if ((HEAP8[$40 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$4 >> 2] >> 0] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
 } else {
  HEAP8[$4 >> 0] = 0;
  HEAP8[$40 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($4, 0);
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 $$038 = 0;
 STACKTOP = sp;
 return $$038 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $106 = 0, $11 = 0, $111 = 0, $118 = 0, $12 = 0, $13 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $144 = 0, $15 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $43 = 0, $46 = 0, $57 = 0, $6 = 0, $61 = 0, $69 = 0, $7 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $89 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $6 = sp + 208 | 0;
 $7 = sp + 200 | 0;
 $8 = sp + 196 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 337 | 0;
 $16 = sp + 336 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$0 = $29;
 $$pre$i$i$i17 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i17) {
   $$pre$i$i$i = 0;
   $142 = 1;
  } else {
   $33 = HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i17) | 0; else $$0$i$i$i$i15 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i$i$i15 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $142 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i17;
    $142 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 255]($43) | 0; else $$0$i$i2$i$i21 = HEAP32[$46 >> 2] | 0;
   if (($$0$i$i2$i$i21 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($142) {
    $143 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($142) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $143 = 0;
  }
  $57 = HEAP8[$19 >> 0] | 0;
  $61 = $57 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $57 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $61 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $61 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $69 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $69 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $69, 0);
   $73 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $73 + $61;
   $$1 = $73;
  } else $$1 = $$0;
  $75 = $$pre$i$i$i + 12 | 0;
  $76 = HEAP32[$75 >> 2] | 0;
  $77 = $$pre$i$i$i + 16 | 0;
  if (($76 | 0) == (HEAP32[$77 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAP32[$76 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i33, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $143;
   break;
  }
  $89 = HEAP32[$75 >> 2] | 0;
  if (($89 | 0) == (HEAP32[$77 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$75 >> 2] = $89 + 4;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   continue;
  }
 }
 $97 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($97 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $97 & 255) | 0) == 0)) {
  $106 = HEAP32[$13 >> 2] | 0;
  if (($106 - $12 | 0) < 160) {
   $111 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $106 + 4;
   HEAP32[$106 >> 2] = $111;
  }
 }
 HEAPF32[$5 >> 2] = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $144 = 1; else {
  $118 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($118 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$118 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $144 = 1;
  } else $144 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $130 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($130 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$130 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($144) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($144) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $106 = 0, $11 = 0, $111 = 0, $118 = 0, $12 = 0, $13 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $144 = 0, $15 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $43 = 0, $46 = 0, $57 = 0, $6 = 0, $61 = 0, $69 = 0, $7 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $89 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $6 = sp + 208 | 0;
 $7 = sp + 200 | 0;
 $8 = sp + 196 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 337 | 0;
 $16 = sp + 336 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$0 = $29;
 $$pre$i$i$i17 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i17) {
   $$pre$i$i$i = 0;
   $142 = 1;
  } else {
   $33 = HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i17) | 0; else $$0$i$i$i$i15 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i$i$i15 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $142 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i17;
    $142 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 255]($43) | 0; else $$0$i$i2$i$i21 = HEAP32[$46 >> 2] | 0;
   if (($$0$i$i2$i$i21 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($142) {
    $143 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($142) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $143 = 0;
  }
  $57 = HEAP8[$19 >> 0] | 0;
  $61 = $57 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $57 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $61 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $61 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $69 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $69 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $69, 0);
   $73 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $73 + $61;
   $$1 = $73;
  } else $$1 = $$0;
  $75 = $$pre$i$i$i + 12 | 0;
  $76 = HEAP32[$75 >> 2] | 0;
  $77 = $$pre$i$i$i + 16 | 0;
  if (($76 | 0) == (HEAP32[$77 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAP32[$76 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i33, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $143;
   break;
  }
  $89 = HEAP32[$75 >> 2] | 0;
  if (($89 | 0) == (HEAP32[$77 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$75 >> 2] = $89 + 4;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   continue;
  }
 }
 $97 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($97 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $97 & 255) | 0) == 0)) {
  $106 = HEAP32[$13 >> 2] | 0;
  if (($106 - $12 | 0) < 160) {
   $111 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $106 + 4;
   HEAP32[$106 >> 2] = $111;
  }
 }
 HEAPF64[$5 >> 3] = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $144 = 1; else {
  $118 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($118 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$118 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $144 = 1;
  } else $144 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $130 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($130 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$130 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($144) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($144) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $106 = 0, $11 = 0, $111 = 0, $118 = 0, $12 = 0, $13 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $144 = 0, $15 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $43 = 0, $46 = 0, $57 = 0, $6 = 0, $61 = 0, $69 = 0, $7 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $89 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $6 = sp + 208 | 0;
 $7 = sp + 200 | 0;
 $8 = sp + 196 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 337 | 0;
 $16 = sp + 336 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$0 = $29;
 $$pre$i$i$i17 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i17) {
   $$pre$i$i$i = 0;
   $142 = 1;
  } else {
   $33 = HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i17) | 0; else $$0$i$i$i$i15 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i$i$i15 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $142 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i17;
    $142 = 0;
   }
  }
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 19; else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 255]($43) | 0; else $$0$i$i2$i$i21 = HEAP32[$46 >> 2] | 0;
   if (($$0$i$i2$i$i21 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($142) {
    $143 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($142) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $143 = 0;
  }
  $57 = HEAP8[$19 >> 0] | 0;
  $61 = $57 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $57 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $61 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $61 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $69 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $69 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $69, 0);
   $73 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $73 + $61;
   $$1 = $73;
  } else $$1 = $$0;
  $75 = $$pre$i$i$i + 12 | 0;
  $76 = HEAP32[$75 >> 2] | 0;
  $77 = $$pre$i$i$i + 16 | 0;
  if (($76 | 0) == (HEAP32[$77 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAP32[$76 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i33, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $143;
   break;
  }
  $89 = HEAP32[$75 >> 2] | 0;
  if (($89 | 0) == (HEAP32[$77 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$75 >> 2] = $89 + 4;
   $$0 = $$1;
   $$pre$i$i$i17 = $$pre$i$i$i;
   continue;
  }
 }
 $97 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($97 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $97 & 255) | 0) == 0)) {
  $106 = HEAP32[$13 >> 2] | 0;
  if (($106 - $12 | 0) < 160) {
   $111 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $106 + 4;
   HEAP32[$106 >> 2] = $111;
  }
 }
 HEAPF64[$5 >> 3] = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $144 = 1; else {
  $118 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($118 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$118 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $144 = 1;
  } else $144 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $130 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($130 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$130 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($144) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($144) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i37 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $106 = 0, $109 = 0, $11 = 0, $111 = 0, $118 = 0, $12 = 0, $13 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $144 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $41 = 0, $44 = 0, $55 = 0, $59 = 0, $6 = 0, $67 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $86 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i21 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $142 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = HEAP32[$31 >> 2] | 0;
   if (($$0$i$i$i$i19 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $142 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $142 = 0;
   }
  }
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 19; else {
   $44 = HEAP32[$41 + 12 >> 2] | 0;
   if (($44 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0; else $$0$i$i2$i$i25 = HEAP32[$44 >> 2] | 0;
   if (($$0$i$i2$i$i25 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($142) {
    $143 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($142) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $143 = 0;
  }
  $55 = HEAP8[$17 >> 0] | 0;
  $59 = $55 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $55 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $59 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $59 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $67 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $67 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $67, 0);
   $71 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $71 + $59;
   $$1 = $71;
  } else $$1 = $$0;
  $73 = $$pre$i$i$i + 12 | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  $75 = $$pre$i$i$i + 16 | 0;
  if (($74 | 0) == (HEAP32[$75 >> 2] | 0)) $$0$i$i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i37 = HEAP32[$74 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i37, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $143;
   break;
  }
  $86 = HEAP32[$73 >> 2] | 0;
  if (($86 | 0) == (HEAP32[$75 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$73 >> 2] = $86 + 4;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  }
 }
 $94 = HEAP8[$8 + 11 >> 0] | 0;
 if (($94 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $94 & 255) | 0) {
  $101 = HEAP32[$12 >> 2] | 0;
  if (($101 - $11 | 0) < 160) {
   $106 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $101 + 4;
   HEAP32[$101 >> 2] = $106;
  }
 }
 $109 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $111 = $5;
 HEAP32[$111 >> 2] = $109;
 HEAP32[$111 + 4 >> 2] = tempRet0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $144 = 1; else {
  $118 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($118 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$118 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $144 = 1;
  } else $144 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $130 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($130 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$130 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($144) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($144) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i110 = 0, $$0101 = 0, $$0102 = 0, $$0104 = 0, $$0106 = 0, $$07$i$i = 0, $$07$i$i109 = 0, $$1 = 0, $$1103 = 0, $$1105 = 0, $$1107 = 0, $$2 = 0, $$2108 = 0, $$3 = 0, $$pre$phiZ2D = 0, $101 = 0, $105 = 0, $117 = 0, $118 = 0, $123 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $135 = 0, $136 = 0, $137 = 0, $142 = 0, $146 = 0, $152 = 0, $153 = 0, $18 = 0, $19 = 0, $21 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $40 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $58 = 0, $60 = 0, $7 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $96 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110200) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110208) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 63]($7, $9);
 HEAP32[$5 >> 2] = $3;
 $13 = HEAP8[$0 >> 0] | 0;
 switch ($13 << 24 >> 24) {
 case 43:
 case 45:
  {
   $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 31]($8, $13) | 0;
   $19 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $19 + 4;
   HEAP32[$19 >> 2] = $18;
   $$0104 = $0 + 1 | 0;
   break;
  }
 default:
  $$0104 = $0;
 }
 $21 = $2;
 L4 : do if (($21 - $$0104 | 0) > 1) if ((HEAP8[$$0104 >> 0] | 0) == 48) {
  $27 = $$0104 + 1 | 0;
  switch (HEAP8[$27 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    $$1107 = $$0104;
    label = 10;
    break L4;
   }
  }
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 31]($8, 48) | 0;
  $33 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $33 + 4;
  HEAP32[$33 >> 2] = $32;
  $35 = $$0104 + 2 | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 31]($8, HEAP8[$27 >> 0] | 0) | 0;
  $41 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $41 + 4;
  HEAP32[$41 >> 2] = $40;
  $$0106 = $35;
  while (1) {
   if ($$0106 >>> 0 >= $2 >>> 0) {
    $$1105 = $35;
    $$2108 = $$0106;
    break L4;
   }
   $45 = HEAP8[$$0106 >> 0] | 0;
   if (!(_isxdigit_l($45, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1105 = $35;
    $$2108 = $$0106;
    break L4;
   }
   $$0106 = $$0106 + 1 | 0;
  }
 } else {
  $$1107 = $$0104;
  label = 10;
 } else {
  $$1107 = $$0104;
  label = 10;
 } while (0);
 L12 : do if ((label | 0) == 10) while (1) {
  label = 0;
  if ($$1107 >>> 0 >= $2 >>> 0) {
   $$1105 = $$0104;
   $$2108 = $$1107;
   break L12;
  }
  $52 = HEAP8[$$1107 >> 0] | 0;
  if (!(_isdigit_l($52, __ZNSt3__26__clocEv() | 0) | 0)) {
   $$1105 = $$0104;
   $$2108 = $$1107;
   break L12;
  }
  $$1107 = $$1107 + 1 | 0;
  label = 10;
 } while (0);
 $57 = $7 + 11 | 0;
 $58 = HEAP8[$57 >> 0] | 0;
 $60 = $7 + 4 | 0;
 L18 : do if (!(($58 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $58 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 15]($8, $$1105, $$2108, HEAP32[$5 >> 2] | 0) | 0;
  $73 = (HEAP32[$5 >> 2] | 0) + ($$2108 - $$1105 << 2) | 0;
  HEAP32[$5 >> 2] = $73;
  $$pre$phiZ2D = $8;
  $152 = $73;
 } else {
  L21 : do if (($$1105 | 0) != ($$2108 | 0)) {
   $$0$i$i = $$2108;
   $$07$i$i = $$1105;
   while (1) {
    $75 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $75 >>> 0) break L21;
    $77 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$75 >> 0] | 0;
    HEAP8[$75 >> 0] = $77;
    $$0$i$i = $75;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $83 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 255]($9) | 0;
  $$0 = $$1105;
  $$0101 = 0;
  $$0102 = 0;
  while (1) {
   if ($$0 >>> 0 >= $$2108 >>> 0) break;
   $96 = HEAP8[$57 >> 0] | 0;
   $97 = $96 << 24 >> 24 < 0;
   $101 = HEAP8[($97 ? HEAP32[$7 >> 2] | 0 : $7) + $$0101 >> 0] | 0;
   if ($101 << 24 >> 24 > 0 & ($$0102 | 0) == ($101 << 24 >> 24 | 0)) {
    $105 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $105 + 4;
    HEAP32[$105 >> 2] = $83;
    $$1 = ($$0101 >>> 0 < (($97 ? HEAP32[$60 >> 2] | 0 : $96 & 255) + -1 | 0) >>> 0 & 1) + $$0101 | 0;
    $$1103 = 0;
   } else {
    $$1 = $$0101;
    $$1103 = $$0102;
   }
   $117 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 31]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $118 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $118 + 4;
   HEAP32[$118 >> 2] = $117;
   $$0 = $$0 + 1 | 0;
   $$0101 = $$1;
   $$0102 = $$1103 + 1 | 0;
  }
  $88 = $3 + ($$1105 - $0 << 2) | 0;
  $89 = HEAP32[$5 >> 2] | 0;
  if (($88 | 0) == ($89 | 0)) {
   $$pre$phiZ2D = $8;
   $152 = $88;
  } else {
   $$0$i$i110 = $89;
   $$07$i$i109 = $88;
   while (1) {
    $91 = $$0$i$i110 + -4 | 0;
    if ($$07$i$i109 >>> 0 >= $91 >>> 0) {
     $$pre$phiZ2D = $8;
     $152 = $89;
     break L18;
    }
    $93 = HEAP32[$$07$i$i109 >> 2] | 0;
    HEAP32[$$07$i$i109 >> 2] = HEAP32[$91 >> 2];
    HEAP32[$91 >> 2] = $93;
    $$0$i$i110 = $91;
    $$07$i$i109 = $$07$i$i109 + 4 | 0;
   }
  }
 } while (0);
 $$2 = $$2108;
 $153 = $152;
 while (1) {
  if ($$2 >>> 0 >= $2 >>> 0) {
   $$3 = $$2;
   $142 = $153;
   break;
  }
  $123 = HEAP8[$$2 >> 0] | 0;
  if ($123 << 24 >> 24 == 46) {
   label = 29;
   break;
  }
  $135 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 44 >> 2] & 31]($8, $123) | 0;
  $136 = HEAP32[$5 >> 2] | 0;
  $137 = $136 + 4 | 0;
  HEAP32[$5 >> 2] = $137;
  HEAP32[$136 >> 2] = $135;
  $$2 = $$2 + 1 | 0;
  $153 = $137;
 }
 if ((label | 0) == 29) {
  $128 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] & 255]($9) | 0;
  $129 = HEAP32[$5 >> 2] | 0;
  $130 = $129 + 4 | 0;
  HEAP32[$5 >> 2] = $130;
  HEAP32[$129 >> 2] = $128;
  $$3 = $$2 + 1 | 0;
  $142 = $130;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 15]($8, $$3, $2, $142) | 0;
 $146 = (HEAP32[$5 >> 2] | 0) + ($21 - $$3 << 2) | 0;
 HEAP32[$5 >> 2] = $146;
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $146 : $3 + ($1 - $0 << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i37 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $106 = 0, $109 = 0, $11 = 0, $111 = 0, $118 = 0, $12 = 0, $13 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $144 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $41 = 0, $44 = 0, $55 = 0, $59 = 0, $6 = 0, $67 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $86 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i21 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $142 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = HEAP32[$31 >> 2] | 0;
   if (($$0$i$i$i$i19 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $142 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $142 = 0;
   }
  }
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 19; else {
   $44 = HEAP32[$41 + 12 >> 2] | 0;
   if (($44 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0; else $$0$i$i2$i$i25 = HEAP32[$44 >> 2] | 0;
   if (($$0$i$i2$i$i25 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($142) {
    $143 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($142) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $143 = 0;
  }
  $55 = HEAP8[$17 >> 0] | 0;
  $59 = $55 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $55 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $59 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $59 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $67 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $67 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $67, 0);
   $71 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $71 + $59;
   $$1 = $71;
  } else $$1 = $$0;
  $73 = $$pre$i$i$i + 12 | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  $75 = $$pre$i$i$i + 16 | 0;
  if (($74 | 0) == (HEAP32[$75 >> 2] | 0)) $$0$i$i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i37 = HEAP32[$74 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i37, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $143;
   break;
  }
  $86 = HEAP32[$73 >> 2] | 0;
  if (($86 | 0) == (HEAP32[$75 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$73 >> 2] = $86 + 4;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  }
 }
 $94 = HEAP8[$8 + 11 >> 0] | 0;
 if (($94 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $94 & 255) | 0) {
  $101 = HEAP32[$12 >> 2] | 0;
  if (($101 - $11 | 0) < 160) {
   $106 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $101 + 4;
   HEAP32[$101 >> 2] = $106;
  }
 }
 $109 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $111 = $5;
 HEAP32[$111 >> 2] = $109;
 HEAP32[$111 + 4 >> 2] = tempRet0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $144 = 1; else {
  $118 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($118 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$118 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $144 = 1;
  } else $144 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $130 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($130 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$130 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($144) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($144) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZN10CGameSetup12RemapPlayersEv($0) {
 $0 = $0 | 0;
 var $$02123$i$i = 0, $$02123$i$i33 = 0, $$02157 = 0, $$03058 = 0, $$in = 0, $$in67 = 0, $$sroa$2$0 = 0, $$sroa$247$0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $35 = 0, $39 = 0, $4 = 0, $50 = 0, $51 = 0, $55 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $68 = 0, $74 = 0, $78 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $86 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $1 = sp + 136 | 0;
 $2 = sp;
 $3 = $0 + 224 | 0;
 $4 = $0 + 228 | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 L1 : do if ((HEAP32[$4 >> 2] | 0) != ($6 | 0)) {
  $8 = $0 + 128 | 0;
  $9 = $0 + 144 | 0;
  $10 = $0 + 140 | 0;
  $11 = $0 + 136 | 0;
  $12 = $0 + 148 | 0;
  $13 = $0 + 152 | 0;
  $14 = $0 + 132 | 0;
  $$03058 = 0;
  $$in = $6;
  while (1) {
   $27 = $$in;
   $29 = HEAP32[$27 + ($$03058 * 76 | 0) + 4 >> 2] | 0;
   L5 : do if (!(HEAP32[$9 >> 2] | 0)) label = 12; else {
    $32 = HEAP32[$12 >> 2] | 0;
    if (($32 | 0) < 0) label = 12; else {
     $34 = HEAP32[$13 >> 2] | 0;
     $35 = HEAP32[$14 >> 2] | 0;
     $$02123$i$i = 0;
     L8 : while (1) {
      $39 = $$02123$i$i + $29 & $34;
      switch (HEAP8[$35 + $39 >> 0] | 0) {
      case 0:
       {
        label = 12;
        break L5;
        break;
       }
      case 2:
       {
        if ((HEAP32[(HEAP32[$11 >> 2] | 0) + ($39 << 3) >> 2] | 0) == ($29 | 0)) break L8;
        break;
       }
      default:
       {}
      }
      if (($$02123$i$i | 0) < ($32 | 0)) $$02123$i$i = $$02123$i$i + 1 | 0; else {
       label = 12;
       break L5;
      }
     }
     if (($39 | 0) == -1) label = 12; else $$sroa$247$0 = $39;
    }
   } while (0);
   if ((label | 0) == 12) {
    label = 0;
    $$sroa$247$0 = HEAP32[$10 >> 2] | 0;
   }
   if (($$sroa$247$0 | 0) == (HEAP32[$10 >> 2] | 0)) break;
   $64 = $27 + ($$03058 * 76 | 0) + 4 | 0;
   HEAP32[$1 >> 2] = HEAP32[$64 >> 2];
   HEAP32[$64 >> 2] = HEAP32[(__ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($8, $1) | 0) >> 2];
   $68 = $$03058 + 1 | 0;
   $$in = HEAP32[$3 >> 2] | 0;
   if ($68 >>> 0 >= (((HEAP32[$4 >> 2] | 0) - $$in | 0) / 76 | 0) >>> 0) break L1; else $$03058 = $68;
  }
  $50 = $2 + 56 | 0;
  $51 = $2 + 4 | 0;
  HEAP32[$2 >> 2] = 68384;
  HEAP32[$50 >> 2] = 68404;
  __ZNSt3__28ios_base4initEPv($2 + 56 | 0, $51);
  HEAP32[$2 + 128 >> 2] = 0;
  HEAP32[$2 + 132 >> 2] = -1;
  HEAP32[$2 >> 2] = 67884;
  HEAP32[$50 >> 2] = 67904;
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($51);
  HEAP32[$51 >> 2] = 67920;
  $55 = $2 + 36 | 0;
  HEAP32[$55 >> 2] = 0;
  HEAP32[$55 + 4 >> 2] = 0;
  HEAP32[$55 + 8 >> 2] = 0;
  HEAP32[$55 + 12 >> 2] = 0;
  HEAP32[$2 + 52 >> 2] = 16;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($51, $1);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $59 = __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($2, 81952, 16) | 0, $$03058) | 0, 81969, 21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($59, HEAP32[(HEAP32[$3 >> 2] | 0) + ($$03058 * 76 | 0) + 4 >> 2] | 0) | 0;
  $63 = ___cxa_allocate_exception(8) | 0;
  __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($1, $51);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($63, $1);
  HEAP32[$63 >> 2] = 68080;
  ___cxa_throw($63 | 0, 192, 31);
 } while (0);
 $15 = $0 + 248 | 0;
 $16 = $0 + 252 | 0;
 $18 = HEAP32[$15 >> 2] | 0;
 if ((HEAP32[$16 >> 2] | 0) == ($18 | 0)) {
  STACKTOP = sp;
  return;
 }
 $20 = $0 + 128 | 0;
 $21 = $0 + 144 | 0;
 $22 = $0 + 140 | 0;
 $23 = $0 + 136 | 0;
 $24 = $0 + 148 | 0;
 $25 = $0 + 152 | 0;
 $26 = $0 + 132 | 0;
 $$02157 = 0;
 $$in67 = $18;
 while (1) {
  $74 = $$in67;
  L25 : do if (!(HEAP32[$21 >> 2] | 0)) label = 24; else {
   $78 = HEAP32[$74 + ($$02157 * 108 | 0) + 20 >> 2] | 0;
   $79 = HEAP32[$24 >> 2] | 0;
   if (($79 | 0) < 0) label = 24; else {
    $81 = HEAP32[$25 >> 2] | 0;
    $82 = HEAP32[$26 >> 2] | 0;
    $$02123$i$i33 = 0;
    L28 : while (1) {
     $86 = $$02123$i$i33 + $78 & $81;
     switch (HEAP8[$82 + $86 >> 0] | 0) {
     case 0:
      {
       label = 24;
       break L25;
       break;
      }
     case 2:
      {
       if ((HEAP32[(HEAP32[$23 >> 2] | 0) + ($86 << 3) >> 2] | 0) == ($78 | 0)) break L28;
       break;
      }
     default:
      {}
     }
     if (($$02123$i$i33 | 0) < ($79 | 0)) $$02123$i$i33 = $$02123$i$i33 + 1 | 0; else {
      label = 24;
      break L25;
     }
    }
    if (($86 | 0) == -1) label = 24; else $$sroa$2$0 = $86;
   }
  } while (0);
  if ((label | 0) == 24) {
   label = 0;
   $$sroa$2$0 = HEAP32[$22 >> 2] | 0;
  }
  if (($$sroa$2$0 | 0) == (HEAP32[$22 >> 2] | 0)) {
   label = 26;
   break;
  }
  $100 = HEAP32[(__ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($20, $74 + ($$02157 * 108 | 0) + 20 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[$15 >> 2] | 0) + ($$02157 * 108 | 0) + 20 >> 2] = $100;
  $$02157 = $$02157 + 1 | 0;
  $$in67 = HEAP32[$15 >> 2] | 0;
  if ($$02157 >>> 0 >= (((HEAP32[$16 >> 2] | 0) - $$in67 | 0) / 108 | 0) >>> 0) {
   label = 16;
   break;
  }
 }
 if ((label | 0) == 16) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 26) {
  $97 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 81991, 35);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($97, $1);
  HEAP32[$97 >> 2] = 68080;
  ___cxa_throw($97 | 0, 192, 31);
 }
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i37 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $106 = 0, $11 = 0, $113 = 0, $12 = 0, $125 = 0, $13 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $41 = 0, $44 = 0, $55 = 0, $59 = 0, $6 = 0, $67 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $86 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i21 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $137 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = HEAP32[$31 >> 2] | 0;
   if (($$0$i$i$i$i19 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $137 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $137 = 0;
   }
  }
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 19; else {
   $44 = HEAP32[$41 + 12 >> 2] | 0;
   if (($44 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0; else $$0$i$i2$i$i25 = HEAP32[$44 >> 2] | 0;
   if (($$0$i$i2$i$i25 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($137) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($137) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $138 = 0;
  }
  $55 = HEAP8[$17 >> 0] | 0;
  $59 = $55 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $55 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $59 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $59 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $67 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $67 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $67, 0);
   $71 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $71 + $59;
   $$1 = $71;
  } else $$1 = $$0;
  $73 = $$pre$i$i$i + 12 | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  $75 = $$pre$i$i$i + 16 | 0;
  if (($74 | 0) == (HEAP32[$75 >> 2] | 0)) $$0$i$i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i37 = HEAP32[$74 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i37, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $138;
   break;
  }
  $86 = HEAP32[$73 >> 2] | 0;
  if (($86 | 0) == (HEAP32[$75 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$73 >> 2] = $86 + 4;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  }
 }
 $94 = HEAP8[$8 + 11 >> 0] | 0;
 if (($94 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $94 & 255) | 0) {
  $101 = HEAP32[$12 >> 2] | 0;
  if (($101 - $11 | 0) < 160) {
   $106 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $101 + 4;
   HEAP32[$101 >> 2] = $106;
  }
 }
 HEAP16[$5 >> 1] = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $139 = 1; else {
  $113 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($113 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$113 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $139 = 1;
  } else $139 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $125 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$125 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($139) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($139) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i37 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $106 = 0, $11 = 0, $113 = 0, $12 = 0, $125 = 0, $13 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $41 = 0, $44 = 0, $55 = 0, $59 = 0, $6 = 0, $67 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $86 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i21 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $137 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = HEAP32[$31 >> 2] | 0;
   if (($$0$i$i$i$i19 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $137 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $137 = 0;
   }
  }
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 19; else {
   $44 = HEAP32[$41 + 12 >> 2] | 0;
   if (($44 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0; else $$0$i$i2$i$i25 = HEAP32[$44 >> 2] | 0;
   if (($$0$i$i2$i$i25 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($137) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($137) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $138 = 0;
  }
  $55 = HEAP8[$17 >> 0] | 0;
  $59 = $55 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $55 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $59 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $59 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $67 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $67 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $67, 0);
   $71 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $71 + $59;
   $$1 = $71;
  } else $$1 = $$0;
  $73 = $$pre$i$i$i + 12 | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  $75 = $$pre$i$i$i + 16 | 0;
  if (($74 | 0) == (HEAP32[$75 >> 2] | 0)) $$0$i$i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i37 = HEAP32[$74 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i37, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $138;
   break;
  }
  $86 = HEAP32[$73 >> 2] | 0;
  if (($86 | 0) == (HEAP32[$75 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$73 >> 2] = $86 + 4;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  }
 }
 $94 = HEAP8[$8 + 11 >> 0] | 0;
 if (($94 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $94 & 255) | 0) {
  $101 = HEAP32[$12 >> 2] | 0;
  if (($101 - $11 | 0) < 160) {
   $106 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $101 + 4;
   HEAP32[$101 >> 2] = $106;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $139 = 1; else {
  $113 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($113 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$113 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $139 = 1;
  } else $139 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $125 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$125 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($139) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($139) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i37 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $106 = 0, $11 = 0, $113 = 0, $12 = 0, $125 = 0, $13 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $41 = 0, $44 = 0, $55 = 0, $59 = 0, $6 = 0, $67 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $86 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i21 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $137 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = HEAP32[$31 >> 2] | 0;
   if (($$0$i$i$i$i19 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $137 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $137 = 0;
   }
  }
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 19; else {
   $44 = HEAP32[$41 + 12 >> 2] | 0;
   if (($44 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0; else $$0$i$i2$i$i25 = HEAP32[$44 >> 2] | 0;
   if (($$0$i$i2$i$i25 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($137) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($137) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $138 = 0;
  }
  $55 = HEAP8[$17 >> 0] | 0;
  $59 = $55 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $55 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $59 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $59 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $67 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $67 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $67, 0);
   $71 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $71 + $59;
   $$1 = $71;
  } else $$1 = $$0;
  $73 = $$pre$i$i$i + 12 | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  $75 = $$pre$i$i$i + 16 | 0;
  if (($74 | 0) == (HEAP32[$75 >> 2] | 0)) $$0$i$i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i37 = HEAP32[$74 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i37, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $138;
   break;
  }
  $86 = HEAP32[$73 >> 2] | 0;
  if (($86 | 0) == (HEAP32[$75 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$73 >> 2] = $86 + 4;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  }
 }
 $94 = HEAP8[$8 + 11 >> 0] | 0;
 if (($94 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $94 & 255) | 0) {
  $101 = HEAP32[$12 >> 2] | 0;
  if (($101 - $11 | 0) < 160) {
   $106 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $101 + 4;
   HEAP32[$101 >> 2] = $106;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $139 = 1; else {
  $113 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($113 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$113 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $139 = 1;
  } else $139 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $125 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$125 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($139) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($139) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i25 = 0, $$0$i$i37 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i4$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $101 = 0, $106 = 0, $11 = 0, $113 = 0, $12 = 0, $125 = 0, $13 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $41 = 0, $44 = 0, $55 = 0, $59 = 0, $6 = 0, $67 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $86 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i21 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i21) {
   $$pre$i$i$i = 0;
   $137 = 1;
  } else {
   $31 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = HEAP32[$31 >> 2] | 0;
   if (($$0$i$i$i$i19 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $$pre$i$i$i = 0;
    $137 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i21;
    $137 = 0;
   }
  }
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 19; else {
   $44 = HEAP32[$41 + 12 >> 2] | 0;
   if (($44 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) $$0$i$i2$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0; else $$0$i$i2$i$i25 = HEAP32[$44 >> 2] | 0;
   if (($$0$i$i2$i$i25 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($137) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i4$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($137) {
    $$2 = $$0;
    $$pre$i4$i$i = 0;
    break;
   } else $138 = 0;
  }
  $55 = HEAP8[$17 >> 0] | 0;
  $59 = $55 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $55 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $59 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $59 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $67 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $67 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $67, 0);
   $71 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $71 + $59;
   $$1 = $71;
  } else $$1 = $$0;
  $73 = $$pre$i$i$i + 12 | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  $75 = $$pre$i$i$i + 16 | 0;
  if (($74 | 0) == (HEAP32[$75 >> 2] | 0)) $$0$i$i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i37 = HEAP32[$74 >> 2] | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i37, $14, $$1, $10, $13, HEAP32[$7 >> 2] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i4$i$i = $138;
   break;
  }
  $86 = HEAP32[$73 >> 2] | 0;
  if (($86 | 0) == (HEAP32[$75 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$73 >> 2] = $86 + 4;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  }
 }
 $94 = HEAP8[$8 + 11 >> 0] | 0;
 if (($94 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $94 & 255) | 0) {
  $101 = HEAP32[$12 >> 2] | 0;
  if (($101 - $11 | 0) < 160) {
   $106 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $101 + 4;
   HEAP32[$101 >> 2] = $106;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $139 = 1; else {
  $113 = HEAP32[$$pre$i$i$i + 12 >> 2] | 0;
  if (($113 | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i$i$i = HEAP32[$113 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $139 = 1;
  } else $139 = 0;
 }
 do if (!$$pre$i4$i$i) label = 47; else {
  $125 = HEAP32[$$pre$i4$i$i + 12 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$$pre$i4$i$i + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i) | 0; else $$0$i$i2$i$i = HEAP32[$125 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 47;
   break;
  } else if ($139) break; else {
   label = 49;
   break;
  }
 } while (0);
 if ((label | 0) == 47) if ($139) label = 49;
 if ((label | 0) == 49) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i27 = 0, $$0$i$i$i$i42 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i33 = 0, $$0$i$i2$i$i48 = 0, $$0$i$i39 = 0, $$0$in = 0, $$025 = 0, $$025$in = 0, $$2 = 0, $$pre$i4$i$i35 = 0, $$pre$i4$i$i50 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $129 = 0, $141 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $18 = 0, $21 = 0, $33 = 0, $35 = 0, $5 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $65 = 0, $68 = 0, $78 = 0, $8 = 0, $81 = 0, $91 = 0, $92 = 0, $95 = 0, $97 = 0, label = 0;
 $5 = HEAP32[$0 >> 2] | 0;
 do if (!$5) $153 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 255]($5) | 0; else $$0$i$i$i$i = HEAP32[$8 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$0 >> 2] = 0;
   $153 = 1;
   break;
  } else {
   $153 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $18 = HEAP32[$1 >> 2] | 0;
 do if (!$18) label = 14; else {
  $21 = HEAP32[$18 + 12 >> 2] | 0;
  if (($21 | 0) == (HEAP32[$18 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 255]($18) | 0; else $$0$i$i2$i$i = HEAP32[$21 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   label = 14;
   break;
  } else if ($153) {
   $154 = $18;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($153) label = 16; else {
  $154 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 6;
  $$2 = 0;
 } else if ((label | 0) == 17) {
  $33 = HEAP32[$0 >> 2] | 0;
  $35 = HEAP32[$33 + 12 >> 2] | 0;
  if (($35 | 0) == (HEAP32[$33 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] & 255]($33) | 0; else $$0$i$i = HEAP32[$35 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, 2048, $$0$i$i) | 0)) {
   HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 4;
   $$2 = 0;
   break;
  }
  $54 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 52 >> 2] & 63]($3, $$0$i$i, 0) | 0) << 24 >> 24;
  $55 = HEAP32[$0 >> 2] | 0;
  $56 = $55 + 12 | 0;
  $57 = HEAP32[$56 >> 2] | 0;
  if (($57 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 40 >> 2] & 255]($55) | 0;
   $$0$in = $54;
   $$025$in = $4;
   $$pre$i4$i$i35 = $154;
   $78 = $154;
  } else {
   HEAP32[$56 >> 2] = $57 + 4;
   $$0$in = $54;
   $$025$in = $4;
   $$pre$i4$i$i35 = $154;
   $78 = $154;
  }
  while (1) {
   $$0 = $$0$in + -48 | 0;
   $$025 = $$025$in + -1 | 0;
   $65 = HEAP32[$0 >> 2] | 0;
   do if (!$65) $92 = 1; else {
    $68 = HEAP32[$65 + 12 >> 2] | 0;
    if (($68 | 0) == (HEAP32[$65 + 16 >> 2] | 0)) $$0$i$i$i$i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 255]($65) | 0; else $$0$i$i$i$i27 = HEAP32[$68 >> 2] | 0;
    if (($$0$i$i$i$i27 | 0) == -1) {
     HEAP32[$0 >> 2] = 0;
     $92 = 1;
     break;
    } else {
     $92 = (HEAP32[$0 >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$78) {
    $$pre$i4$i$i50 = $$pre$i4$i$i35;
    $155 = 0;
    $91 = 1;
   } else {
    $81 = HEAP32[$78 + 12 >> 2] | 0;
    if (($81 | 0) == (HEAP32[$78 + 16 >> 2] | 0)) $$0$i$i2$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$78 >> 2] | 0) + 36 >> 2] & 255]($78) | 0; else $$0$i$i2$i$i33 = HEAP32[$81 >> 2] | 0;
    if (($$0$i$i2$i$i33 | 0) == -1) {
     HEAP32[$1 >> 2] = 0;
     $$pre$i4$i$i50 = 0;
     $155 = 0;
     $91 = 1;
     break;
    } else {
     $$pre$i4$i$i50 = $$pre$i4$i$i35;
     $155 = $$pre$i4$i$i35;
     $91 = ($$pre$i4$i$i35 | 0) == 0;
     break;
    }
   } while (0);
   $95 = HEAP32[$0 >> 2] | 0;
   if (!(($$025$in | 0) > 1 & ($92 ^ $91))) break;
   $97 = HEAP32[$95 + 12 >> 2] | 0;
   if (($97 | 0) == (HEAP32[$95 + 16 >> 2] | 0)) $$0$i$i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] & 255]($95) | 0; else $$0$i$i39 = HEAP32[$97 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, 2048, $$0$i$i39) | 0)) {
    $$2 = $$0;
    break L22;
   }
   $116 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 52 >> 2] & 63]($3, $$0$i$i39, 0) | 0) << 24 >> 24) + ($$0 * 10 | 0) | 0;
   $117 = HEAP32[$0 >> 2] | 0;
   $118 = $117 + 12 | 0;
   $119 = HEAP32[$118 >> 2] | 0;
   if (($119 | 0) == (HEAP32[$117 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[$117 >> 2] | 0) + 40 >> 2] & 255]($117) | 0;
    $$0$in = $116;
    $$025$in = $$025;
    $$pre$i4$i$i35 = $$pre$i4$i$i50;
    $78 = $155;
    continue;
   } else {
    HEAP32[$118 >> 2] = $119 + 4;
    $$0$in = $116;
    $$025$in = $$025;
    $$pre$i4$i$i35 = $$pre$i4$i$i50;
    $78 = $155;
    continue;
   }
  }
  do if (!$95) $156 = 1; else {
   $129 = HEAP32[$95 + 12 >> 2] | 0;
   if (($129 | 0) == (HEAP32[$95 + 16 >> 2] | 0)) $$0$i$i$i$i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] & 255]($95) | 0; else $$0$i$i$i$i42 = HEAP32[$129 >> 2] | 0;
   if (($$0$i$i$i$i42 | 0) == -1) {
    HEAP32[$0 >> 2] = 0;
    $156 = 1;
    break;
   } else {
    $156 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i4$i$i50) label = 60; else {
   $141 = HEAP32[$$pre$i4$i$i50 + 12 >> 2] | 0;
   if (($141 | 0) == (HEAP32[$$pre$i4$i$i50 + 16 >> 2] | 0)) $$0$i$i2$i$i48 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i50 >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i50) | 0; else $$0$i$i2$i$i48 = HEAP32[$141 >> 2] | 0;
   if (($$0$i$i2$i$i48 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    label = 60;
    break;
   } else if ($156) {
    $$2 = $$0;
    break L22;
   } else break;
  } while (0);
  if ((label | 0) == 60) if (!$156) {
   $$2 = $$0;
   break;
  }
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 2;
  $$2 = $$0;
 } while (0);
 return $$2 | 0;
}

function __ZN6google12_GLOBAL__N_123RegisterCommandLineFlagEPKcS2_S2_PNS0_9FlagValueES4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$11$i$i$i = 0, $$0$11$i$i$i$i$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$020$i$i$i$i = 0, $$020$i$i$i$i$i$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i$i$i$i = 0, $$idx7$val$i = 0, $$sink$i$i$i$i = 0, $$sink$i$i$i$i$i$i$i = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $31 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $5 = 0, $50 = 0, $55 = 0, $56 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $75 = 0, $76 = 0, $81 = 0, $83 = 0, $89 = 0, $94 = 0, $95 = 0, $98 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $5 = sp + 28 | 0;
 $7 = __Znwj(28) | 0;
 HEAP32[$7 >> 2] = $0;
 HEAP32[$7 + 4 >> 2] = ($1 | 0) == 0 ? 114224 : $1;
 HEAP32[$7 + 8 >> 2] = $2;
 HEAP8[$7 + 12 >> 0] = 0;
 HEAP32[$7 + 16 >> 2] = $4;
 $12 = $7 + 20 | 0;
 HEAP32[$12 >> 2] = $3;
 HEAP32[$7 + 24 >> 2] = 0;
 $14 = HEAP32[27053] | 0;
 if (!$14) {
  $16 = __Znwj(32) | 0;
  $17 = $16 + 4 | 0;
  HEAP32[$17 >> 2] = 0;
  HEAP32[$16 + 8 >> 2] = 0;
  HEAP32[$16 >> 2] = $17;
  $20 = $16 + 16 | 0;
  HEAP32[$20 >> 2] = 0;
  HEAP32[$16 + 20 >> 2] = 0;
  HEAP32[$16 + 12 >> 2] = $20;
  HEAP32[$16 + 24 >> 2] = 0;
  HEAP32[27053] = $16;
  $25 = $16;
 } else $25 = $14;
 $23 = $7;
 $24 = $25 + 4 | 0;
 $26 = HEAP32[$24 >> 2] | 0;
 $28 = $0;
 do if (!$26) {
  HEAP32[$5 >> 2] = $24;
  $$0$11$i$i$i$i$i$i = $24;
  $$020$i$i$i$i$i$i$i = $24;
 } else {
  $$0$i$i$i$i$i$i$i = $26;
  while (1) {
   $$idx$val$i$i$i$i$i$i$i = HEAP32[$$0$i$i$i$i$i$i$i + 16 >> 2] | 0;
   if ((_strcmp($0, $$idx$val$i$i$i$i$i$i$i) | 0) < 0) {
    $31 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
    if (!$31) {
     label = 6;
     break;
    } else $$sink$i$i$i$i$i$i$i = $31;
   } else {
    if ((_strcmp($$idx$val$i$i$i$i$i$i$i, $0) | 0) >= 0) {
     label = 11;
     break;
    }
    $36 = $$0$i$i$i$i$i$i$i + 4 | 0;
    $37 = HEAP32[$36 >> 2] | 0;
    if (!$37) {
     label = 10;
     break;
    } else $$sink$i$i$i$i$i$i$i = $37;
   }
   $$0$i$i$i$i$i$i$i = $$sink$i$i$i$i$i$i$i;
  }
  if ((label | 0) == 6) {
   HEAP32[$5 >> 2] = $$0$i$i$i$i$i$i$i;
   $$0$11$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
   $$020$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
   break;
  } else if ((label | 0) == 10) {
   HEAP32[$5 >> 2] = $$0$i$i$i$i$i$i$i;
   $$0$11$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
   $$020$i$i$i$i$i$i$i = $36;
   break;
  } else if ((label | 0) == 11) {
   HEAP32[$5 >> 2] = $$0$i$i$i$i$i$i$i;
   $$0$11$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
   $$020$i$i$i$i$i$i$i = $5;
   break;
  }
 } while (0);
 $42 = HEAP32[$$020$i$i$i$i$i$i$i >> 2] | 0;
 do if (!$42) {
  $44 = __Znwj(24) | 0;
  HEAP32[$44 + 16 >> 2] = $28;
  HEAP32[$44 + 20 >> 2] = $23;
  HEAP32[$44 >> 2] = 0;
  HEAP32[$44 + 4 >> 2] = 0;
  HEAP32[$44 + 8 >> 2] = $$0$11$i$i$i$i$i$i;
  HEAP32[$$020$i$i$i$i$i$i$i >> 2] = $44;
  $50 = HEAP32[HEAP32[$25 >> 2] >> 2] | 0;
  if (!$50) $55 = $44; else {
   HEAP32[$25 >> 2] = $50;
   $55 = HEAP32[$$020$i$i$i$i$i$i$i >> 2] | 0;
  }
  __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$25 + 4 >> 2] | 0, $55);
  $56 = $25 + 8 | 0;
  HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 1;
 } else {
  $$idx7$val$i = HEAP32[(HEAP32[$42 + 20 >> 2] | 0) + 8 >> 2] | 0;
  if (!(_strcmp($$idx7$val$i, $2) | 0)) {
   HEAP32[$vararg_buffer3 >> 2] = $0;
   HEAP32[$vararg_buffer3 + 4 >> 2] = $2;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $2;
   __ZN6google12_GLOBAL__N_1L11ReportErrorENS0_16DieWhenReportingEPKcz(0, 90771, $vararg_buffer3);
   break;
  } else {
   HEAP32[$vararg_buffer >> 2] = $0;
   HEAP32[$vararg_buffer + 4 >> 2] = $$idx7$val$i;
   HEAP32[$vararg_buffer + 8 >> 2] = $2;
   __ZN6google12_GLOBAL__N_1L11ReportErrorENS0_16DieWhenReportingEPKcz(0, 90700, $vararg_buffer);
   break;
  }
 } while (0);
 $63 = $25 + 12 | 0;
 $65 = HEAP32[HEAP32[$12 >> 2] >> 2] | 0;
 $66 = $25 + 16 | 0;
 $67 = HEAP32[$66 >> 2] | 0;
 $69 = $65;
 do if (!$67) {
  HEAP32[$5 >> 2] = $66;
  $$0$11$i$i$i = $66;
  $$020$i$i$i$i = $66;
 } else {
  $$0$i$i$i$i = $67;
  while (1) {
   $$idx$val$i$i$i$i = HEAP32[$$0$i$i$i$i + 16 >> 2] | 0;
   if ($$idx$val$i$i$i$i >>> 0 > $65 >>> 0) {
    $71 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$71) {
     label = 23;
     break;
    } else $$sink$i$i$i$i = $71;
   } else {
    if ($$idx$val$i$i$i$i >>> 0 >= $65 >>> 0) {
     label = 28;
     break;
    }
    $75 = $$0$i$i$i$i + 4 | 0;
    $76 = HEAP32[$75 >> 2] | 0;
    if (!$76) {
     label = 27;
     break;
    } else $$sink$i$i$i$i = $76;
   }
   $$0$i$i$i$i = $$sink$i$i$i$i;
  }
  if ((label | 0) == 23) {
   HEAP32[$5 >> 2] = $$0$i$i$i$i;
   $$0$11$i$i$i = $$0$i$i$i$i;
   $$020$i$i$i$i = $$0$i$i$i$i;
   break;
  } else if ((label | 0) == 27) {
   HEAP32[$5 >> 2] = $$0$i$i$i$i;
   $$0$11$i$i$i = $$0$i$i$i$i;
   $$020$i$i$i$i = $75;
   break;
  } else if ((label | 0) == 28) {
   HEAP32[$5 >> 2] = $$0$i$i$i$i;
   $$0$11$i$i$i = $$0$i$i$i$i;
   $$020$i$i$i$i = $5;
   break;
  }
 } while (0);
 $81 = HEAP32[$$020$i$i$i$i >> 2] | 0;
 if ($81 | 0) {
  $$0$i$i$i = $81;
  $98 = $$0$i$i$i + 20 | 0;
  HEAP32[$98 >> 2] = $23;
  STACKTOP = sp;
  return;
 }
 $83 = __Znwj(24) | 0;
 HEAP32[$83 + 16 >> 2] = $69;
 HEAP32[$83 + 20 >> 2] = 0;
 HEAP32[$83 >> 2] = 0;
 HEAP32[$83 + 4 >> 2] = 0;
 HEAP32[$83 + 8 >> 2] = $$0$11$i$i$i;
 HEAP32[$$020$i$i$i$i >> 2] = $83;
 $89 = HEAP32[HEAP32[$63 >> 2] >> 2] | 0;
 if (!$89) $94 = $83; else {
  HEAP32[$63 >> 2] = $89;
  $94 = HEAP32[$$020$i$i$i$i >> 2] | 0;
 }
 __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$25 + 16 >> 2] | 0, $94);
 $95 = $25 + 20 | 0;
 HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + 1;
 $$0$i$i$i = $83;
 $98 = $$0$i$i$i + 20 | 0;
 HEAP32[$98 >> 2] = $23;
 STACKTOP = sp;
 return;
}

function __Z11luaK_prefixP9FuncState5UnOprP7expdesc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i33$i = 0, $$06$i$i = 0, $$06$i31$i = 0, $$idx$val$idx$val$i$i = 0, $$idx$val$idx$val$i38$i = 0, $$idx24$val$i = 0, $$idx4$val$idx$val$i$i = 0, $$idx4$val$idx$val$i30$i = 0, $$pre$phi$iZ2D = 0, $100 = 0, $106 = 0, $116 = 0, $16 = 0, $18 = 0, $19 = 0, $25 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $55 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $71 = 0, $73 = 0, $74 = 0, $80 = 0, $90 = 0, $95 = 0, $97 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp;
 HEAP32[$3 + 16 >> 2] = -1;
 HEAP32[$3 + 12 >> 2] = -1;
 HEAP32[$3 >> 2] = 5;
 HEAPF32[$3 + 4 >> 2] = 0.0;
 switch ($1 | 0) {
 case 0:
  {
   if ((HEAP32[$2 >> 2] | 0) == 5) if ((HEAP32[$2 + 12 >> 2] | 0) == -1) {
    if ((HEAP32[$2 + 16 >> 2] | 0) != -1) label = 5;
   } else label = 5; else label = 5;
   if ((label | 0) == 5) __Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $2) | 0;
   __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, 18, $2, $3);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $2);
   switch (HEAP32[$2 >> 2] | 0) {
   case 3:
   case 1:
    {
     HEAP32[$2 >> 2] = 2;
     break;
    }
   case 2:
   case 5:
   case 4:
    {
     HEAP32[$2 >> 2] = 3;
     break;
    }
   case 10:
    {
     $$idx24$val$i = HEAP32[$2 + 4 >> 2] | 0;
     $16 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$idx24$val$i << 2) | 0;
     if (($$idx24$val$i | 0) > 0) {
      $18 = $16 + -4 | 0;
      $19 = HEAP32[$18 >> 2] | 0;
      if ((HEAP8[87697 + ($19 & 63) >> 0] | 0) < 0) {
       $$0$i$i$i = $18;
       $25 = $19;
      } else label = 12;
     } else label = 12;
     if ((label | 0) == 12) {
      $$0$i$i$i = $16;
      $25 = HEAP32[$16 >> 2] | 0;
     }
     HEAP32[$$0$i$i$i >> 2] = (($25 & 16320 | 0) == 0 & 1) << 6 | $25 & -16321;
     break;
    }
   case 12:
    {
     label = 20;
     break;
    }
   case 11:
    {
     $31 = $0 + 36 | 0;
     $32 = HEAP32[$31 >> 2] | 0;
     $33 = $32 + 1 | 0;
     $34 = HEAP32[$0 >> 2] | 0;
     if (($32 | 0) < (HEAPU8[$34 + 75 >> 0] | 0)) $46 = $32; else {
      if (($32 | 0) > 248) {
       __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
       $44 = HEAP32[$0 >> 2] | 0;
      } else $44 = $34;
      HEAP8[$44 + 75 >> 0] = $33;
      $46 = HEAP32[$31 >> 2] | 0;
     }
     HEAP32[$31 >> 2] = $46 + 1;
     __ZL13discharge2regP9FuncStateP7expdesci($0, $2, $46);
     if ((HEAP32[$2 >> 2] | 0) == 12) label = 20; else {
      $$pre$phi$iZ2D = $2 + 4 | 0;
      label = 23;
     }
     break;
    }
   default:
    {}
   }
   if ((label | 0) == 20) {
    $47 = $2 + 4 | 0;
    $48 = HEAP32[$47 >> 2] | 0;
    if (!($48 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0) > ($48 | 0)) {
     $$pre$phi$iZ2D = $47;
     label = 23;
    } else {
     $55 = $0 + 36 | 0;
     HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + -1;
     $$pre$phi$iZ2D = $47;
     label = 23;
    } else {
     $$pre$phi$iZ2D = $47;
     label = 23;
    }
   }
   if ((label | 0) == 23) {
    HEAP32[$$pre$phi$iZ2D >> 2] = __ZL9luaK_codeP9FuncStateji($0, HEAP32[$$pre$phi$iZ2D >> 2] << 23 | 19, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
    HEAP32[$2 >> 2] = 11;
   }
   $66 = $2 + 16 | 0;
   $67 = HEAP32[$66 >> 2] | 0;
   $68 = $2 + 12 | 0;
   $69 = HEAP32[$68 >> 2] | 0;
   HEAP32[$66 >> 2] = $69;
   HEAP32[$68 >> 2] = $67;
   if (($69 | 0) == -1) $95 = $67; else {
    $$06$i31$i = $69;
    $$idx4$val$idx$val$i30$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
    while (1) {
     $71 = $$idx4$val$idx$val$i30$i + ($$06$i31$i << 2) | 0;
     if (($$06$i31$i | 0) > 0) {
      $73 = $71 + -4 | 0;
      $74 = HEAP32[$73 >> 2] | 0;
      if ((HEAP8[87697 + ($74 & 63) >> 0] | 0) < 0) {
       $$0$i$i$i33$i = $73;
       $80 = $74;
      } else label = 28;
     } else label = 28;
     if ((label | 0) == 28) {
      label = 0;
      $$0$i$i$i33$i = $71;
      $80 = HEAP32[$71 >> 2] | 0;
     }
     if (($80 & 63 | 0) == 27) {
      HEAP32[$$0$i$i$i33$i >> 2] = $80 & 8372224 | $80 >>> 23 << 6 | 26;
      $$idx$val$idx$val$i38$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
     } else $$idx$val$idx$val$i38$i = $$idx4$val$idx$val$i30$i;
     $90 = ((HEAP32[$$idx$val$idx$val$i38$i + ($$06$i31$i << 2) >> 2] | 0) >>> 14) + -131071 | 0;
     $$06$i31$i = ($90 | 0) == -1 ? -1 : $$06$i31$i + 1 + $90 | 0;
     if (($$06$i31$i | 0) == -1) break; else $$idx4$val$idx$val$i30$i = $$idx$val$idx$val$i38$i;
    }
    $95 = HEAP32[$68 >> 2] | 0;
   }
   if (($95 | 0) == -1) {
    STACKTOP = sp;
    return;
   }
   $$06$i$i = $95;
   $$idx4$val$idx$val$i$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
   while (1) {
    $97 = $$idx4$val$idx$val$i$i + ($$06$i$i << 2) | 0;
    if (($$06$i$i | 0) > 0) {
     $99 = $97 + -4 | 0;
     $100 = HEAP32[$99 >> 2] | 0;
     if ((HEAP8[87697 + ($100 & 63) >> 0] | 0) < 0) {
      $$0$i$i$i$i = $99;
      $106 = $100;
     } else label = 37;
    } else label = 37;
    if ((label | 0) == 37) {
     label = 0;
     $$0$i$i$i$i = $97;
     $106 = HEAP32[$97 >> 2] | 0;
    }
    if (($106 & 63 | 0) == 27) {
     HEAP32[$$0$i$i$i$i >> 2] = $106 & 8372224 | $106 >>> 23 << 6 | 26;
     $$idx$val$idx$val$i$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
    } else $$idx$val$idx$val$i$i = $$idx4$val$idx$val$i$i;
    $116 = ((HEAP32[$$idx$val$idx$val$i$i + ($$06$i$i << 2) >> 2] | 0) >>> 14) + -131071 | 0;
    $$06$i$i = ($116 | 0) == -1 ? -1 : $$06$i$i + 1 + $116 | 0;
    if (($$06$i$i | 0) == -1) break; else $$idx4$val$idx$val$i$i = $$idx$val$idx$val$i$i;
   }
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   __Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $2) | 0;
   __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, 20, $2, $3);
   STACKTOP = sp;
   return;
  }
 default:
  {
   STACKTOP = sp;
   return;
  }
 }
}

function __ZN12_GLOBAL__N_121log_file_writeToFilesEiPKcS1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i10 = 0, $$026$i$i$i$i = 0, $$05$i$i$i = 0, $$idx6$val = 0, $$sroa$0$0$i$i$i = 0, $$sroa$018$033 = 0, $$sroa$033$044$i$i$i$i = 0, $$sroa$033$142$i$i$i$i = 0, $10 = 0, $12 = 0, $13 = 0, $17 = 0, $18 = 0, $19 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $67 = 0, $73 = 0, $75 = 0, $77 = 0, $80 = 0, $84 = 0, $vararg_buffer = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $vararg_buffer = sp;
 $3 = sp + 32 | 0;
 $4 = sp + 20 | 0;
 $5 = sp + 8 | 0;
 if (!(HEAP8[106232] | 0)) if (___cxa_guard_acquire(106232) | 0) {
  HEAP32[26995] = 0;
  HEAP32[26996] = 0;
  HEAP32[26994] = 107980;
  ___cxa_atexit(171, 107976, ___dso_handle | 0) | 0;
 }
 $10 = HEAP32[26994] | 0;
 if (($10 | 0) == 107980) {
  STACKTOP = sp;
  return;
 }
 $12 = $3 + 11 | 0;
 $13 = $3 + 4 | 0;
 $$sroa$018$033 = $10;
 while (1) {
  L10 : do if ((HEAP32[$$sroa$018$033 + 44 >> 2] | 0) <= ($0 | 0)) {
   $17 = $$sroa$018$033 + 32 | 0;
   $18 = $17 + 11 | 0;
   $19 = HEAP8[$18 >> 0] | 0;
   if ($19 << 24 >> 24 < 0) $24 = HEAP32[$$sroa$018$033 + 36 >> 2] | 0; else $24 = $19 & 255;
   do if ($24 | 0) {
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, $1, _strlen($1) | 0);
    $27 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($5, 0, 84260) | 0;
    HEAP32[$4 >> 2] = HEAP32[$27 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
    HEAP32[$27 >> 2] = 0;
    HEAP32[$27 + 4 >> 2] = 0;
    HEAP32[$27 + 8 >> 2] = 0;
    $28 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($4, 84260) | 0;
    HEAP32[$3 >> 2] = HEAP32[$28 >> 2];
    HEAP32[$3 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
    HEAP32[$3 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
    HEAP32[$28 >> 2] = 0;
    HEAP32[$28 + 4 >> 2] = 0;
    HEAP32[$28 + 8 >> 2] = 0;
    $29 = HEAP8[$18 >> 0] | 0;
    if ($29 << 24 >> 24 < 0) {
     $42 = HEAP32[$$sroa$018$033 + 36 >> 2] | 0;
     $46 = HEAP32[$17 >> 2] | 0;
    } else {
     $42 = $29 & 255;
     $46 = $17;
    }
    $35 = HEAP8[$12 >> 0] | 0;
    $36 = $35 << 24 >> 24 < 0;
    $38 = $36 ? HEAP32[$3 >> 2] | 0 : $3;
    $41 = $36 ? HEAP32[$13 >> 2] | 0 : $35 & 255;
    if ($42 >>> 0 < $41 >>> 0) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     break L10;
    }
    if (!$41) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     break;
    }
    $45 = $46 + $42 | 0;
    $47 = $38 + $41 | 0;
    $48 = $46;
    $49 = $45;
    L28 : do if (($42 | 0) < ($41 | 0)) $$sroa$0$0$i$i$i = $49; else {
     $52 = $45 + (1 - $41) | 0;
     if (($52 | 0) == ($46 | 0)) $$sroa$0$0$i$i$i = $49; else {
      $54 = HEAP8[$38 >> 0] | 0;
      $$sroa$033$044$i$i$i$i = $48;
      $84 = $46;
      while (1) {
       $$sroa$033$142$i$i$i$i = $$sroa$033$044$i$i$i$i;
       $56 = $84;
       while (1) {
        if ((HEAP8[$56 >> 0] | 0) == $54 << 24 >> 24) {
         $$0$i$i$i$i10 = $38;
         $$026$i$i$i$i = $56;
         break;
        }
        $58 = $56 + 1 | 0;
        if (($58 | 0) == ($52 | 0)) {
         $$sroa$0$0$i$i$i = $49;
         break L28;
        } else {
         $$sroa$033$142$i$i$i$i = $58;
         $56 = $58;
        }
       }
       do {
        $$0$i$i$i$i10 = $$0$i$i$i$i10 + 1 | 0;
        if (($$0$i$i$i$i10 | 0) == ($47 | 0)) {
         $$sroa$0$0$i$i$i = $$sroa$033$142$i$i$i$i;
         break L28;
        }
        $$026$i$i$i$i = $$026$i$i$i$i + 1 | 0;
       } while ((HEAP8[$$026$i$i$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i$i10 >> 0] | 0));
       $67 = $56 + 1 | 0;
       if (($67 | 0) == ($52 | 0)) {
        $$sroa$0$0$i$i$i = $49;
        break;
       } else {
        $$sroa$033$044$i$i$i$i = $67;
        $84 = $67;
       }
      }
     }
    } while (0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    if (!(($$sroa$0$0$i$i$i - $48 | 0) != -1 & ($$sroa$0$0$i$i$i | 0) != ($45 | 0))) break L10;
   } while (0);
   $$idx6$val = HEAP32[$$sroa$018$033 + 28 >> 2] | 0;
   if ($$idx6$val | 0) {
    $73 = (HEAP32[$$sroa$018$033 + 48 >> 2] | 0) > ($0 | 0);
    dest = $3;
    stop = dest + 128 | 0;
    do {
     HEAP8[dest >> 0] = 0;
     dest = dest + 1 | 0;
    } while ((dest | 0) < (stop | 0));
    _log_framePrefixer_createPrefix($3, 128) | 0;
    HEAP32[$vararg_buffer >> 2] = $3;
    HEAP32[$vararg_buffer + 4 >> 2] = $2;
    _fprintf($$idx6$val, 84262, $vararg_buffer) | 0;
    if (!$73) _fflush($$idx6$val) | 0;
   }
  } while (0);
  $75 = HEAP32[$$sroa$018$033 + 4 >> 2] | 0;
  if (!$75) {
   $$0$i$i$i = $$sroa$018$033;
   while (1) {
    $80 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$80 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$05$i$i$i = $80;
     break;
    } else $$0$i$i$i = $80;
   }
  } else {
   $$0$i$i$i$i = $75;
   while (1) {
    $77 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$77) {
     $$05$i$i$i = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $77;
   }
  }
  if (($$05$i$i$i | 0) == 107980) break; else $$sroa$018$033 = $$05$i$i$i;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$6 = 0, $$7 = 0, $$cast = 0, $$phi$trans$insert = 0, $$phi$trans$insert64 = 0, $$phi$trans$insert67 = 0, $$pre = 0, $$pre$phi73Z2D = 0, $$pre$phi75Z2D = 0, $$pre$phi77Z2D = 0, $$pre$phi80Z2D = 0, $$pre$phiZ2D = 0, $$pre68 = 0, $$pre70 = 0, $$pre71$pre$phiZZ2D = 0, $$pre74$pre$phiZZ2D = 0, $101 = 0, $102 = 0, $105 = 0, $106 = 0, $115 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $17 = 0, $2 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $43 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $54 = 0, $60 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $69 = 0, $70 = 0, $71 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $85 = 0, $87 = 0, $95 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 $5 = $0 + 64 | 0;
 if (!(HEAP32[$5 >> 2] | 0)) {
  $$7 = -1;
  STACKTOP = sp;
  return $$7 | 0;
 }
 $8 = $0 + 92 | 0;
 if (!(HEAP32[$8 >> 2] & 16)) {
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
  $17 = HEAP32[$0 + 52 >> 2] | 0;
  do if ($17 >>> 0 > 8) if (!(HEAP8[$0 + 98 >> 0] | 0)) {
   $32 = HEAP32[$0 + 56 >> 2] | 0;
   $36 = $32 + ((HEAP32[$0 + 60 >> 2] | 0) + -1) | 0;
   HEAP32[$0 + 24 >> 2] = $32;
   $38 = $0 + 20 | 0;
   HEAP32[$38 >> 2] = $32;
   $39 = $0 + 28 | 0;
   HEAP32[$39 >> 2] = $36;
   $$pre71$pre$phiZZ2D = $38;
   $$pre74$pre$phiZZ2D = $39;
   $120 = $32;
   $121 = $36;
   $122 = $32;
   break;
  } else {
   $23 = HEAP32[$0 + 32 >> 2] | 0;
   $25 = $23 + ($17 + -1) | 0;
   HEAP32[$0 + 24 >> 2] = $23;
   $27 = $0 + 20 | 0;
   HEAP32[$27 >> 2] = $23;
   $28 = $0 + 28 | 0;
   HEAP32[$28 >> 2] = $25;
   $$pre71$pre$phiZZ2D = $27;
   $$pre74$pre$phiZZ2D = $28;
   $120 = $23;
   $121 = $25;
   $122 = $23;
   break;
  } else {
   HEAP32[$0 + 24 >> 2] = 0;
   $43 = $0 + 20 | 0;
   HEAP32[$43 >> 2] = 0;
   $44 = $0 + 28 | 0;
   HEAP32[$44 >> 2] = 0;
   $$pre71$pre$phiZZ2D = $43;
   $$pre74$pre$phiZZ2D = $44;
   $120 = 0;
   $121 = 0;
   $122 = 0;
  } while (0);
  HEAP32[$8 >> 2] = 16;
  $$pre$phi73Z2D = $$pre71$pre$phiZZ2D;
  $$pre$phi75Z2D = $$pre74$pre$phiZZ2D;
  $$pre$phi77Z2D = $$pre74$pre$phiZZ2D;
  $$pre$phiZ2D = $$pre71$pre$phiZZ2D;
  $117 = $122;
  $118 = $121;
  $119 = $120;
 } else {
  $$phi$trans$insert = $0 + 20 | 0;
  $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
  $$phi$trans$insert64 = $0 + 28 | 0;
  $$pre$phi73Z2D = $$phi$trans$insert;
  $$pre$phi75Z2D = $$phi$trans$insert64;
  $$pre$phi77Z2D = $$phi$trans$insert64;
  $$pre$phiZ2D = $$phi$trans$insert;
  $117 = $$pre;
  $118 = HEAP32[$$phi$trans$insert64 >> 2] | 0;
  $119 = $$pre;
 }
 $45 = ($1 | 0) == -1;
 $$phi$trans$insert67 = $0 + 24 | 0;
 $$pre68 = HEAP32[$$phi$trans$insert67 >> 2] | 0;
 if ($45) {
  $52 = $$pre68;
  $54 = $119;
 } else {
  if (!$$pre68) {
   HEAP32[$$phi$trans$insert67 >> 2] = $2;
   HEAP32[$$pre$phiZ2D >> 2] = $2;
   HEAP32[$$pre$phi75Z2D >> 2] = $2 + 1;
   $49 = $2;
  } else $49 = $$pre68;
  HEAP8[$49 >> 0] = $1;
  $51 = (HEAP32[$$phi$trans$insert67 >> 2] | 0) + 1 | 0;
  HEAP32[$$phi$trans$insert67 >> 2] = $51;
  $52 = $51;
  $54 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 }
 L21 : do if (($52 | 0) == ($54 | 0)) label = 33; else {
  L23 : do if (!(HEAP8[$0 + 98 >> 0] | 0)) {
   $64 = $0 + 32 | 0;
   $65 = HEAP32[$64 >> 2] | 0;
   HEAP32[$3 >> 2] = $65;
   $66 = $0 + 68 | 0;
   $67 = HEAP32[$66 >> 2] | 0;
   if (!$67) {
    $81 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($81);
    ___cxa_throw($81 | 0, 1856, 154);
   }
   $69 = $65;
   $70 = $0 + 72 | 0;
   $71 = $0 + 52 | 0;
   $77 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$67 >> 2] | 0) + 12 >> 2] & 15]($67, $70, $54, $52, $4, $69, $69 + (HEAP32[$71 >> 2] | 0) | 0, $3) | 0;
   $79 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   L28 : do if ((HEAP32[$4 >> 2] | 0) != ($79 | 0)) {
    $82 = $77;
    $85 = $79;
    while (1) {
     if (($82 | 0) == 3) {
      label = 22;
      break;
     }
     if (($82 | 1 | 0) != 1) break L28;
     $95 = HEAP32[$64 >> 2] | 0;
     $97 = (HEAP32[$3 >> 2] | 0) - $95 | 0;
     if ((_fwrite($95, 1, $97, HEAP32[$5 >> 2] | 0) | 0) != ($97 | 0)) break L28;
     if (($82 | 0) != 1) {
      label = 29;
      break;
     }
     $101 = HEAP32[$4 >> 2] | 0;
     $102 = HEAP32[$$phi$trans$insert67 >> 2] | 0;
     HEAP32[$$pre$phi73Z2D >> 2] = $101;
     HEAP32[$$pre$phi75Z2D >> 2] = $102;
     $$cast = $101;
     $105 = $$cast + ($102 - $101) | 0;
     HEAP32[$$phi$trans$insert67 >> 2] = $105;
     $106 = HEAP32[$66 >> 2] | 0;
     if (!$106) {
      label = 20;
      break;
     }
     $$pre70 = HEAP32[$64 >> 2] | 0;
     $82 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$106 >> 2] | 0) + 12 >> 2] & 15]($106, $70, $$cast, $105, $4, $$pre70, $$pre70 + (HEAP32[$71 >> 2] | 0) | 0, $3) | 0;
     $115 = HEAP32[$$pre$phiZ2D >> 2] | 0;
     if ((HEAP32[$4 >> 2] | 0) == ($115 | 0)) break L28; else $85 = $115;
    }
    if ((label | 0) == 20) {
     $81 = ___cxa_allocate_exception(4) | 0;
     __ZNSt8bad_castC2Ev($81);
     ___cxa_throw($81 | 0, 1856, 154);
    } else if ((label | 0) == 22) {
     $87 = (HEAP32[$$phi$trans$insert67 >> 2] | 0) - $85 | 0;
     if ((_fwrite($85, 1, $87, HEAP32[$5 >> 2] | 0) | 0) != ($87 | 0)) break;
    } else if ((label | 0) == 29) {}
    $$pre$phi80Z2D = $$phi$trans$insert67;
    break L23;
   } while (0);
   $$6 = -1;
   break L21;
  } else {
   $60 = $52 - $54 | 0;
   if ((_fwrite($54, 1, $60, HEAP32[$5 >> 2] | 0) | 0) != ($60 | 0)) {
    $$6 = -1;
    break L21;
   }
   $$pre$phi80Z2D = $$phi$trans$insert67;
  } while (0);
  HEAP32[$$pre$phi80Z2D >> 2] = $117;
  HEAP32[$$pre$phi73Z2D >> 2] = $117;
  HEAP32[$$pre$phi77Z2D >> 2] = $118;
  label = 33;
 } while (0);
 if ((label | 0) == 33) $$6 = $45 ? 0 : $1;
 $$7 = $$6;
 STACKTOP = sp;
 return $$7 | 0;
}

function _try_realloc_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1271 = 0, $$1274 = 0, $$2 = 0, $$3 = 0, $$pre$phiZ2D = 0, $10 = 0, $101 = 0, $103 = 0, $106 = 0, $108 = 0, $111 = 0, $114 = 0, $115 = 0, $116 = 0, $118 = 0, $120 = 0, $121 = 0, $123 = 0, $124 = 0, $129 = 0, $130 = 0, $139 = 0, $144 = 0, $147 = 0, $148 = 0, $154 = 0, $165 = 0, $168 = 0, $175 = 0, $2 = 0, $22 = 0, $24 = 0, $3 = 0, $31 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $60 = 0, $67 = 0, $7 = 0, $73 = 0, $75 = 0, $76 = 0, $79 = 0, $81 = 0, $83 = 0, $96 = 0, $storemerge = 0, $storemerge1 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 & -8;
 $5 = $0 + $4 | 0;
 $6 = HEAP32[27160] | 0;
 $7 = $3 & 3;
 if (!(($7 | 0) != 1 & $0 >>> 0 >= $6 >>> 0 & $0 >>> 0 < $5 >>> 0)) _abort();
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 if (!($10 & 1)) _abort();
 if (!$7) {
  if ($1 >>> 0 < 256) {
   $$2 = 0;
   return $$2 | 0;
  }
  if ($4 >>> 0 >= ($1 + 4 | 0) >>> 0) if (($4 - $1 | 0) >>> 0 <= HEAP32[27276] << 1 >>> 0) {
   $$2 = $0;
   return $$2 | 0;
  }
  $$2 = 0;
  return $$2 | 0;
 }
 if ($4 >>> 0 >= $1 >>> 0) {
  $22 = $4 - $1 | 0;
  if ($22 >>> 0 <= 15) {
   $$2 = $0;
   return $$2 | 0;
  }
  $24 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$24 + 4 >> 2] = $22 | 3;
  $31 = $24 + $22 + 4 | 0;
  HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1;
  _dispose_chunk($24, $22);
  $$2 = $0;
  return $$2 | 0;
 }
 if (($5 | 0) == (HEAP32[27162] | 0)) {
  $37 = (HEAP32[27159] | 0) + $4 | 0;
  if ($37 >>> 0 <= $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  $39 = $37 - $1 | 0;
  $40 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$40 + 4 >> 2] = $39 | 1;
  HEAP32[27162] = $40;
  HEAP32[27159] = $39;
  $$2 = $0;
  return $$2 | 0;
 }
 if (($5 | 0) == (HEAP32[27161] | 0)) {
  $49 = (HEAP32[27158] | 0) + $4 | 0;
  if ($49 >>> 0 < $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  $51 = $49 - $1 | 0;
  if ($51 >>> 0 > 15) {
   $53 = $0 + $1 | 0;
   $54 = $53 + $51 | 0;
   HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
   HEAP32[$53 + 4 >> 2] = $51 | 1;
   HEAP32[$54 >> 2] = $51;
   $60 = $54 + 4 | 0;
   HEAP32[$60 >> 2] = HEAP32[$60 >> 2] & -2;
   $storemerge = $53;
   $storemerge1 = $51;
  } else {
   HEAP32[$2 >> 2] = $3 & 1 | $49 | 2;
   $67 = $0 + $49 + 4 | 0;
   HEAP32[$67 >> 2] = HEAP32[$67 >> 2] | 1;
   $storemerge = 0;
   $storemerge1 = 0;
  }
  HEAP32[27158] = $storemerge1;
  HEAP32[27161] = $storemerge;
  $$2 = $0;
  return $$2 | 0;
 }
 if ($10 & 2 | 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $73 = ($10 & -8) + $4 | 0;
 if ($73 >>> 0 < $1 >>> 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $75 = $73 - $1 | 0;
 $76 = $10 >>> 3;
 do if ($10 >>> 0 < 256) {
  $79 = HEAP32[$5 + 8 >> 2] | 0;
  $81 = HEAP32[$5 + 12 >> 2] | 0;
  $83 = 108664 + ($76 << 1 << 2) | 0;
  if (($79 | 0) != ($83 | 0)) {
   if ($79 >>> 0 < $6 >>> 0) _abort();
   if ((HEAP32[$79 + 12 >> 2] | 0) != ($5 | 0)) _abort();
  }
  if (($81 | 0) == ($79 | 0)) {
   HEAP32[27156] = HEAP32[27156] & ~(1 << $76);
   break;
  }
  if (($81 | 0) == ($83 | 0)) $$pre$phiZ2D = $81 + 8 | 0; else {
   if ($81 >>> 0 < $6 >>> 0) _abort();
   $96 = $81 + 8 | 0;
   if ((HEAP32[$96 >> 2] | 0) == ($5 | 0)) $$pre$phiZ2D = $96; else _abort();
  }
  HEAP32[$79 + 12 >> 2] = $81;
  HEAP32[$$pre$phiZ2D >> 2] = $79;
 } else {
  $101 = HEAP32[$5 + 24 >> 2] | 0;
  $103 = HEAP32[$5 + 12 >> 2] | 0;
  do if (($103 | 0) == ($5 | 0)) {
   $114 = $5 + 16 | 0;
   $115 = $114 + 4 | 0;
   $116 = HEAP32[$115 >> 2] | 0;
   if (!$116) {
    $118 = HEAP32[$114 >> 2] | 0;
    if (!$118) {
     $$3 = 0;
     break;
    } else {
     $$1271 = $118;
     $$1274 = $114;
    }
   } else {
    $$1271 = $116;
    $$1274 = $115;
   }
   while (1) {
    $120 = $$1271 + 20 | 0;
    $121 = HEAP32[$120 >> 2] | 0;
    if ($121 | 0) {
     $$1271 = $121;
     $$1274 = $120;
     continue;
    }
    $123 = $$1271 + 16 | 0;
    $124 = HEAP32[$123 >> 2] | 0;
    if (!$124) break; else {
     $$1271 = $124;
     $$1274 = $123;
    }
   }
   if ($$1274 >>> 0 < $6 >>> 0) _abort(); else {
    HEAP32[$$1274 >> 2] = 0;
    $$3 = $$1271;
    break;
   }
  } else {
   $106 = HEAP32[$5 + 8 >> 2] | 0;
   if ($106 >>> 0 < $6 >>> 0) _abort();
   $108 = $106 + 12 | 0;
   if ((HEAP32[$108 >> 2] | 0) != ($5 | 0)) _abort();
   $111 = $103 + 8 | 0;
   if ((HEAP32[$111 >> 2] | 0) == ($5 | 0)) {
    HEAP32[$108 >> 2] = $103;
    HEAP32[$111 >> 2] = $106;
    $$3 = $103;
    break;
   } else _abort();
  } while (0);
  if ($101 | 0) {
   $129 = HEAP32[$5 + 28 >> 2] | 0;
   $130 = 108928 + ($129 << 2) | 0;
   if (($5 | 0) == (HEAP32[$130 >> 2] | 0)) {
    HEAP32[$130 >> 2] = $$3;
    if (!$$3) {
     HEAP32[27157] = HEAP32[27157] & ~(1 << $129);
     break;
    }
   } else {
    if ($101 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort();
    $139 = $101 + 16 | 0;
    if ((HEAP32[$139 >> 2] | 0) == ($5 | 0)) HEAP32[$139 >> 2] = $$3; else HEAP32[$101 + 20 >> 2] = $$3;
    if (!$$3) break;
   }
   $144 = HEAP32[27160] | 0;
   if ($$3 >>> 0 < $144 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $101;
   $147 = $5 + 16 | 0;
   $148 = HEAP32[$147 >> 2] | 0;
   do if ($148 | 0) if ($148 >>> 0 < $144 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $148;
    HEAP32[$148 + 24 >> 2] = $$3;
    break;
   } while (0);
   $154 = HEAP32[$147 + 4 >> 2] | 0;
   if ($154 | 0) if ($154 >>> 0 < (HEAP32[27160] | 0) >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $154;
    HEAP32[$154 + 24 >> 2] = $$3;
    break;
   }
  }
 } while (0);
 if ($75 >>> 0 < 16) {
  HEAP32[$2 >> 2] = $73 | $3 & 1 | 2;
  $165 = $0 + $73 + 4 | 0;
  HEAP32[$165 >> 2] = HEAP32[$165 >> 2] | 1;
  $$2 = $0;
  return $$2 | 0;
 } else {
  $168 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$168 + 4 >> 2] = $75 | 3;
  $175 = $168 + $75 + 4 | 0;
  HEAP32[$175 >> 2] = HEAP32[$175 >> 2] | 1;
  _dispose_chunk($168, $75);
  $$2 = $0;
  return $$2 | 0;
 }
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i17 = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i21 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $105 = 0, $11 = 0, $119 = 0, $12 = 0, $120 = 0, $134 = 0, $15 = 0, $16 = 0, $22 = 0, $25 = 0, $28 = 0, $32 = 0, $33 = 0, $45 = 0, $46 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $91 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vararg_buffer = sp;
 $6 = sp + 204 | 0;
 $7 = sp + 192 | 0;
 $8 = sp + 180 | 0;
 $9 = sp + 176 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$7 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $15 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$8 >> 2] = $15;
 $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 110168) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 32 >> 2] & 15]($16, 102831, 102857, $6) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($15) | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $$0$i$i17 = 0;
 while (1) {
  if (($$0$i$i17 | 0) == 3) break;
  HEAP32[$8 + ($$0$i$i17 << 2) >> 2] = 0;
  $$0$i$i17 = $$0$i$i17 + 1 | 0;
 }
 $22 = $8 + 11 | 0;
 $25 = $8 + 8 | 0;
 if ((HEAP8[$22 >> 0] | 0) < 0) $28 = (HEAP32[$25 >> 2] & 2147483647) + -1 | 0; else $28 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $28, 0);
 $32 = (HEAP8[$22 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 HEAP32[$9 >> 2] = $32;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$12 >> 2] = 0;
 $33 = $8 + 4 | 0;
 $$0 = $32;
 $$pre$i$i$i21 = HEAP32[$1 >> 2] | 0;
 L12 : while (1) {
  if (!$$pre$i$i$i21) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i21) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i21; else $$pre$i$i$i = $$pre$i$i$i21;
  $45 = ($$pre$i$i$i | 0) == 0;
  $46 = HEAP32[$2 >> 2] | 0;
  do if (!$46) label = 19; else {
   if ((HEAP32[$46 + 12 >> 2] | 0) != (HEAP32[$46 + 16 >> 2] | 0)) if ($45) {
    $134 = $46;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $46;
    break L12;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 255]($46) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($45) {
    $134 = $46;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $46;
    break L12;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($45) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $134 = 0;
  }
  $59 = HEAP8[$22 >> 0] | 0;
  $63 = $59 << 24 >> 24 < 0 ? HEAP32[$33 >> 2] | 0 : $59 & 255;
  if ((HEAP32[$9 >> 2] | 0) == ($$0 + $63 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $63 << 1, 0);
   if ((HEAP8[$22 >> 0] | 0) < 0) $71 = (HEAP32[$25 >> 2] & 2147483647) + -1 | 0; else $71 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, $71, 0);
   $75 = (HEAP8[$22 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
   HEAP32[$9 >> 2] = $75 + $63;
   $$1 = $75;
  } else $$1 = $$0;
  $77 = $$pre$i$i$i + 12 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = $$pre$i$i$i + 16 | 0;
  if (($78 | 0) == (HEAP32[$79 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAPU8[$78 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i33 & 255, 16, $$1, $9, $12, 0, $7, $10, $11, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $134;
   break;
  }
  $91 = HEAP32[$77 >> 2] | 0;
  if (($91 | 0) == (HEAP32[$79 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$77 >> 2] = $91 + 1;
   $$0 = $$1;
   $$pre$i$i$i21 = $$pre$i$i$i;
   continue;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($8, (HEAP32[$9 >> 2] | 0) - $$2 | 0, 0);
 $104 = (HEAP8[$22 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 $105 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($104, $105, 102864, $vararg_buffer) | 0) != 1) HEAP32[$4 >> 2] = 4;
 if (!$$pre$i$i$i) $119 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $119 = 0;
 } else $119 = $$pre$i$i$i; else $119 = $$pre$i$i$i;
 $120 = ($119 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 43; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 43;
   break;
  }
  if (!$120) label = 44;
 } while (0);
 if ((label | 0) == 43) if ($120) label = 44;
 if ((label | 0) == 44) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0100 = 0, $$0102 = 0, $$0104 = 0, $$07$i$i = 0, $$07$i$i107 = 0, $$099 = 0, $$1 = 0, $$1101 = 0, $$1103 = 0, $$1105 = 0, $$2 = 0, $$2106 = 0, $$3 = 0, $$pre$phiZ2D = 0, $101 = 0, $105 = 0, $107 = 0, $119 = 0, $120 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $137 = 0, $138 = 0, $148 = 0, $18 = 0, $19 = 0, $21 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $40 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $58 = 0, $60 = 0, $7 = 0, $75 = 0, $77 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110168) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110184) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 63]($7, $9);
 HEAP32[$5 >> 2] = $3;
 $13 = HEAP8[$0 >> 0] | 0;
 switch ($13 << 24 >> 24) {
 case 43:
 case 45:
  {
   $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, $13) | 0;
   $19 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $19 + 1;
   HEAP8[$19 >> 0] = $18;
   $$0102 = $0 + 1 | 0;
   break;
  }
 default:
  $$0102 = $0;
 }
 $21 = $2;
 L4 : do if (($21 - $$0102 | 0) > 1) if ((HEAP8[$$0102 >> 0] | 0) == 48) {
  $27 = $$0102 + 1 | 0;
  switch (HEAP8[$27 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    $$1105 = $$0102;
    label = 10;
    break L4;
   }
  }
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, 48) | 0;
  $33 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $33 + 1;
  HEAP8[$33 >> 0] = $32;
  $35 = $$0102 + 2 | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, HEAP8[$27 >> 0] | 0) | 0;
  $41 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $41 + 1;
  HEAP8[$41 >> 0] = $40;
  $$0104 = $35;
  while (1) {
   if ($$0104 >>> 0 >= $2 >>> 0) {
    $$1103 = $35;
    $$2106 = $$0104;
    break L4;
   }
   $45 = HEAP8[$$0104 >> 0] | 0;
   if (!(_isxdigit_l($45, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1103 = $35;
    $$2106 = $$0104;
    break L4;
   }
   $$0104 = $$0104 + 1 | 0;
  }
 } else {
  $$1105 = $$0102;
  label = 10;
 } else {
  $$1105 = $$0102;
  label = 10;
 } while (0);
 L12 : do if ((label | 0) == 10) while (1) {
  label = 0;
  if ($$1105 >>> 0 >= $2 >>> 0) {
   $$1103 = $$0102;
   $$2106 = $$1105;
   break L12;
  }
  $52 = HEAP8[$$1105 >> 0] | 0;
  if (!(_isdigit_l($52, __ZNSt3__26__clocEv() | 0) | 0)) {
   $$1103 = $$0102;
   $$2106 = $$1105;
   break L12;
  }
  $$1105 = $$1105 + 1 | 0;
  label = 10;
 } while (0);
 $57 = $7 + 11 | 0;
 $58 = HEAP8[$57 >> 0] | 0;
 $60 = $7 + 4 | 0;
 L18 : do if (!(($58 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $58 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 15]($8, $$1103, $$2106, HEAP32[$5 >> 2] | 0) | 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($$2106 - $$1103);
  $$pre$phiZ2D = $8;
 } else {
  L21 : do if (($$1103 | 0) != ($$2106 | 0)) {
   $$0$i$i = $$2106;
   $$07$i$i = $$1103;
   while (1) {
    $75 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $75 >>> 0) break L21;
    $77 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$75 >> 0] | 0;
    HEAP8[$75 >> 0] = $77;
    $$0$i$i = $75;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $83 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 255]($9) | 0;
  $$0 = $$1103;
  $$0100 = 0;
  $$099 = 0;
  while (1) {
   if ($$0 >>> 0 >= $$2106 >>> 0) break;
   $101 = HEAP8[((HEAP8[$57 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$099 >> 0] | 0;
   if ($101 << 24 >> 24 > 0 & ($$0100 | 0) == ($101 << 24 >> 24 | 0)) {
    $105 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $105 + 1;
    HEAP8[$105 >> 0] = $83;
    $107 = HEAP8[$57 >> 0] | 0;
    $$1 = ($$099 >>> 0 < (($107 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $107 & 255) + -1 | 0) >>> 0 & 1) + $$099 | 0;
    $$1101 = 0;
   } else {
    $$1 = $$099;
    $$1101 = $$0100;
   }
   $119 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $120 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $120 + 1;
   HEAP8[$120 >> 0] = $119;
   $$0 = $$0 + 1 | 0;
   $$0100 = $$1101 + 1 | 0;
   $$099 = $$1;
  }
  $88 = $3 + ($$1103 - $0) | 0;
  $89 = HEAP32[$5 >> 2] | 0;
  if (($88 | 0) == ($89 | 0)) $$pre$phiZ2D = $8; else {
   $$0$i$i108 = $89;
   $$07$i$i107 = $88;
   while (1) {
    $91 = $$0$i$i108 + -1 | 0;
    if ($$07$i$i107 >>> 0 >= $91 >>> 0) {
     $$pre$phiZ2D = $8;
     break L18;
    }
    $93 = HEAP8[$$07$i$i107 >> 0] | 0;
    HEAP8[$$07$i$i107 >> 0] = HEAP8[$91 >> 0] | 0;
    HEAP8[$91 >> 0] = $93;
    $$0$i$i108 = $91;
    $$07$i$i107 = $$07$i$i107 + 1 | 0;
   }
  }
 } while (0);
 $$2 = $$2106;
 while (1) {
  if ($$2 >>> 0 >= $2 >>> 0) {
   $$3 = $$2;
   break;
  }
  $125 = HEAP8[$$2 >> 0] | 0;
  if ($125 << 24 >> 24 == 46) {
   label = 29;
   break;
  }
  $137 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 28 >> 2] & 31]($8, $125) | 0;
  $138 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $138 + 1;
  HEAP8[$138 >> 0] = $137;
  $$2 = $$2 + 1 | 0;
 }
 if ((label | 0) == 29) {
  $130 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] & 255]($9) | 0;
  $131 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $131 + 1;
  HEAP8[$131 >> 0] = $130;
  $$3 = $$2 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 15]($8, $$3, $2, HEAP32[$5 >> 2] | 0) | 0;
 $148 = (HEAP32[$5 >> 2] | 0) + ($21 - $$3) | 0;
 HEAP32[$5 >> 2] = $148;
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $148 : $3 + ($1 - $0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i29 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $107 = 0, $11 = 0, $112 = 0, $12 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $143 = 0, $15 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $42 = 0, $43 = 0, $56 = 0, $6 = 0, $60 = 0, $68 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $90 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 199 | 0;
 $8 = sp + 198 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 197 | 0;
 $16 = sp + 196 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$0 = $29;
 $$pre$i$i$i16 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i16) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i16 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i16 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i16 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i16) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i16; else $$pre$i$i$i = $$pre$i$i$i16;
  $42 = ($$pre$i$i$i | 0) == 0;
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 16; else {
   if ((HEAP32[$43 + 12 >> 2] | 0) != (HEAP32[$43 + 16 >> 2] | 0)) if ($42) {
    $143 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $43;
    break L8;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 255]($43) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 16;
    break;
   } else if ($42) {
    $143 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($42) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $143 = 0;
  }
  $56 = HEAP8[$19 >> 0] | 0;
  $60 = $56 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $56 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $60 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $60 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $68 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $68 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $68, 0);
   $72 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $72 + $60;
   $$1 = $72;
  } else $$1 = $$0;
  $74 = $$pre$i$i$i + 12 | 0;
  $75 = HEAP32[$74 >> 2] | 0;
  $76 = $$pre$i$i$i + 16 | 0;
  if (($75 | 0) == (HEAP32[$76 >> 2] | 0)) $$0$i$i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i29 = HEAPU8[$75 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i29 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $143;
   break;
  }
  $90 = HEAP32[$74 >> 2] | 0;
  if (($90 | 0) == (HEAP32[$76 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i16 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$74 >> 2] = $90 + 1;
   $$0 = $$1;
   $$pre$i$i$i16 = $$pre$i$i$i;
   continue;
  }
 }
 $98 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($98 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $98 & 255) | 0) == 0)) {
  $107 = HEAP32[$13 >> 2] | 0;
  if (($107 - $12 | 0) < 160) {
   $112 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $107 + 4;
   HEAP32[$107 >> 2] = $112;
  }
 }
 HEAPF32[$5 >> 2] = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $128 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $128 = 0;
 } else $128 = $$pre$i$i$i; else $128 = $$pre$i$i$i;
 $129 = ($128 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 41; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 41;
   break;
  }
  if (!$129) label = 42;
 } while (0);
 if ((label | 0) == 41) if ($129) label = 42;
 if ((label | 0) == 42) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i29 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $107 = 0, $11 = 0, $112 = 0, $12 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $143 = 0, $15 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $42 = 0, $43 = 0, $56 = 0, $6 = 0, $60 = 0, $68 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $90 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 199 | 0;
 $8 = sp + 198 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 197 | 0;
 $16 = sp + 196 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$0 = $29;
 $$pre$i$i$i16 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i16) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i16 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i16 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i16 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i16) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i16; else $$pre$i$i$i = $$pre$i$i$i16;
  $42 = ($$pre$i$i$i | 0) == 0;
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 16; else {
   if ((HEAP32[$43 + 12 >> 2] | 0) != (HEAP32[$43 + 16 >> 2] | 0)) if ($42) {
    $143 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $43;
    break L8;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 255]($43) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 16;
    break;
   } else if ($42) {
    $143 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($42) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $143 = 0;
  }
  $56 = HEAP8[$19 >> 0] | 0;
  $60 = $56 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $56 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $60 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $60 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $68 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $68 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $68, 0);
   $72 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $72 + $60;
   $$1 = $72;
  } else $$1 = $$0;
  $74 = $$pre$i$i$i + 12 | 0;
  $75 = HEAP32[$74 >> 2] | 0;
  $76 = $$pre$i$i$i + 16 | 0;
  if (($75 | 0) == (HEAP32[$76 >> 2] | 0)) $$0$i$i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i29 = HEAPU8[$75 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i29 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $143;
   break;
  }
  $90 = HEAP32[$74 >> 2] | 0;
  if (($90 | 0) == (HEAP32[$76 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i16 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$74 >> 2] = $90 + 1;
   $$0 = $$1;
   $$pre$i$i$i16 = $$pre$i$i$i;
   continue;
  }
 }
 $98 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($98 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $98 & 255) | 0) == 0)) {
  $107 = HEAP32[$13 >> 2] | 0;
  if (($107 - $12 | 0) < 160) {
   $112 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $107 + 4;
   HEAP32[$107 >> 2] = $112;
  }
 }
 HEAPF64[$5 >> 3] = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $128 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $128 = 0;
 } else $128 = $$pre$i$i$i; else $128 = $$pre$i$i$i;
 $129 = ($128 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 41; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 41;
   break;
  }
  if (!$129) label = 42;
 } while (0);
 if ((label | 0) == 41) if ($129) label = 42;
 if ((label | 0) == 42) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i29 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $107 = 0, $11 = 0, $112 = 0, $12 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $143 = 0, $15 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $42 = 0, $43 = 0, $56 = 0, $6 = 0, $60 = 0, $68 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $90 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $6 = sp + 200 | 0;
 $7 = sp + 199 | 0;
 $8 = sp + 198 | 0;
 $9 = sp + 184 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 $15 = sp + 197 | 0;
 $16 = sp + 196 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$0 = $29;
 $$pre$i$i$i16 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i16) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i16 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i16 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i16 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i16) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i16; else $$pre$i$i$i = $$pre$i$i$i16;
  $42 = ($$pre$i$i$i | 0) == 0;
  $43 = HEAP32[$2 >> 2] | 0;
  do if (!$43) label = 16; else {
   if ((HEAP32[$43 + 12 >> 2] | 0) != (HEAP32[$43 + 16 >> 2] | 0)) if ($42) {
    $143 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $43;
    break L8;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 255]($43) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 16;
    break;
   } else if ($42) {
    $143 = $43;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $43;
    break L8;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($42) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $143 = 0;
  }
  $56 = HEAP8[$19 >> 0] | 0;
  $60 = $56 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $56 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $60 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $60 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $68 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $68 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($10, $68, 0);
   $72 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $72 + $60;
   $$1 = $72;
  } else $$1 = $$0;
  $74 = $$pre$i$i$i + 12 | 0;
  $75 = HEAP32[$74 >> 2] | 0;
  $76 = $$pre$i$i$i + 16 | 0;
  if (($75 | 0) == (HEAP32[$76 >> 2] | 0)) $$0$i$i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i29 = HEAPU8[$75 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i29 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $143;
   break;
  }
  $90 = HEAP32[$74 >> 2] | 0;
  if (($90 | 0) == (HEAP32[$76 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i16 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$74 >> 2] = $90 + 1;
   $$0 = $$1;
   $$pre$i$i$i16 = $$pre$i$i$i;
   continue;
  }
 }
 $98 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($98 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $98 & 255) | 0) == 0)) {
  $107 = HEAP32[$13 >> 2] | 0;
  if (($107 - $12 | 0) < 160) {
   $112 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $107 + 4;
   HEAP32[$107 >> 2] = $112;
  }
 }
 HEAPF64[$5 >> 3] = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $128 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $128 = 0;
 } else $128 = $$pre$i$i$i; else $128 = $$pre$i$i$i;
 $129 = ($128 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 41; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 41;
   break;
  }
  if (!$129) label = 42;
 } while (0);
 if ((label | 0) == 41) if ($129) label = 42;
 if ((label | 0) == 42) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZN10CGameSetup10RemapTeamsEv($0) {
 $0 = $0 | 0;
 var $$01154 = 0, $$02123$i$i = 0, $$02123$i$i21 = 0, $$in = 0, $$in65 = 0, $$sroa$2$0 = 0, $$sroa$234$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $43 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $62 = 0, $65 = 0, $71 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $8 = 0, $83 = 0, $9 = 0, $94 = 0, $97 = 0, $storemerge55 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128 | 0;
 $vararg_buffer = sp;
 $1 = sp + 24 | 0;
 $2 = sp + 8 | 0;
 $3 = $0 + 212 | 0;
 $4 = $0 + 216 | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 L1 : do if ((HEAP32[$4 >> 2] | 0) != ($6 | 0)) {
  $8 = $0 + 156 | 0;
  $9 = $0 + 172 | 0;
  $10 = $0 + 168 | 0;
  $11 = $0 + 164 | 0;
  $12 = $0 + 176 | 0;
  $13 = $0 + 180 | 0;
  $14 = $0 + 160 | 0;
  $$in = $6;
  $storemerge55 = 0;
  while (1) {
   $27 = $$in;
   if (!(HEAP8[$27 + ($storemerge55 * 56 | 0) + 28 >> 0] | 0)) {
    L7 : do if (!(HEAP32[$9 >> 2] | 0)) label = 14; else {
     $35 = HEAP32[$27 + ($storemerge55 * 56 | 0) + 4 >> 2] | 0;
     $36 = HEAP32[$12 >> 2] | 0;
     if (($36 | 0) < 0) label = 14; else {
      $38 = HEAP32[$13 >> 2] | 0;
      $39 = HEAP32[$14 >> 2] | 0;
      $$02123$i$i = 0;
      L10 : while (1) {
       $43 = $$02123$i$i + $35 & $38;
       switch (HEAP8[$39 + $43 >> 0] | 0) {
       case 0:
        {
         label = 14;
         break L7;
         break;
        }
       case 2:
        {
         if ((HEAP32[(HEAP32[$11 >> 2] | 0) + ($43 << 3) >> 2] | 0) == ($35 | 0)) break L10;
         break;
        }
       default:
        {}
       }
       if (($$02123$i$i | 0) < ($36 | 0)) $$02123$i$i = $$02123$i$i + 1 | 0; else {
        label = 14;
        break L7;
       }
      }
      if (($43 | 0) == -1) label = 14; else $$sroa$234$0 = $43;
     }
    } while (0);
    if ((label | 0) == 14) {
     label = 0;
     $$sroa$234$0 = HEAP32[$10 >> 2] | 0;
    }
    if (($$sroa$234$0 | 0) == (HEAP32[$10 >> 2] | 0)) break;
    $62 = HEAP32[(__ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($8, $27 + ($storemerge55 * 56 | 0) + 4 | 0) | 0) >> 2] | 0;
    HEAP32[(HEAP32[$3 >> 2] | 0) + ($storemerge55 * 56 | 0) + 4 >> 2] = $62;
   } else HEAP32[$27 + ($storemerge55 * 56 | 0) + 4 >> 2] = 0;
   $65 = $storemerge55 + 1 | 0;
   $$in = HEAP32[$3 >> 2] | 0;
   if ($65 >>> 0 >= (((HEAP32[$4 >> 2] | 0) - $$in | 0) / 56 | 0) >>> 0) break L1; else $storemerge55 = $65;
  }
  $54 = ___cxa_allocate_exception(8) | 0;
  $57 = HEAP32[(HEAP32[$3 >> 2] | 0) + ($storemerge55 * 56 | 0) + 4 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $storemerge55;
  HEAP32[$vararg_buffer + 4 >> 2] = $57;
  $58 = _snprintf($1, 4096, 81870, $vararg_buffer) | 0;
  if (($58 + -1 | 0) >>> 0 < 4095) {
   HEAP32[$2 >> 2] = 0;
   HEAP32[$2 + 4 >> 2] = 0;
   HEAP32[$2 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $1, $58);
   __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($54, $2);
   HEAP32[$54 >> 2] = 68080;
   ___cxa_throw($54 | 0, 192, 31);
  } else {
   HEAP32[$2 >> 2] = 0;
   HEAP32[$2 + 4 >> 2] = 0;
   HEAP32[$2 + 8 >> 2] = 0;
   __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($54, $2);
   HEAP32[$54 >> 2] = 68080;
   ___cxa_throw($54 | 0, 192, 31);
  }
 } while (0);
 $15 = $0 + 248 | 0;
 $16 = $0 + 252 | 0;
 $18 = HEAP32[$15 >> 2] | 0;
 if ((HEAP32[$16 >> 2] | 0) == ($18 | 0)) {
  STACKTOP = sp;
  return;
 }
 $20 = $0 + 156 | 0;
 $21 = $0 + 172 | 0;
 $22 = $0 + 168 | 0;
 $23 = $0 + 164 | 0;
 $24 = $0 + 176 | 0;
 $25 = $0 + 180 | 0;
 $26 = $0 + 160 | 0;
 $$01154 = 0;
 $$in65 = $18;
 while (1) {
  $71 = $$in65;
  L34 : do if (!(HEAP32[$21 >> 2] | 0)) label = 30; else {
   $75 = HEAP32[$71 + ($$01154 * 108 | 0) + 4 >> 2] | 0;
   $76 = HEAP32[$24 >> 2] | 0;
   if (($76 | 0) < 0) label = 30; else {
    $78 = HEAP32[$25 >> 2] | 0;
    $79 = HEAP32[$26 >> 2] | 0;
    $$02123$i$i21 = 0;
    L37 : while (1) {
     $83 = $$02123$i$i21 + $75 & $78;
     switch (HEAP8[$79 + $83 >> 0] | 0) {
     case 0:
      {
       label = 30;
       break L34;
       break;
      }
     case 2:
      {
       if ((HEAP32[(HEAP32[$23 >> 2] | 0) + ($83 << 3) >> 2] | 0) == ($75 | 0)) break L37;
       break;
      }
     default:
      {}
     }
     if (($$02123$i$i21 | 0) < ($76 | 0)) $$02123$i$i21 = $$02123$i$i21 + 1 | 0; else {
      label = 30;
      break L34;
     }
    }
    if (($83 | 0) == -1) label = 30; else $$sroa$2$0 = $83;
   }
  } while (0);
  if ((label | 0) == 30) {
   label = 0;
   $$sroa$2$0 = HEAP32[$22 >> 2] | 0;
  }
  if (($$sroa$2$0 | 0) == (HEAP32[$22 >> 2] | 0)) {
   label = 32;
   break;
  }
  $97 = HEAP32[(__ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($20, $71 + ($$01154 * 108 | 0) + 4 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[$15 >> 2] | 0) + ($$01154 * 108 | 0) + 4 >> 2] = $97;
  $$01154 = $$01154 + 1 | 0;
  $$in65 = HEAP32[$15 >> 2] | 0;
  if ($$01154 >>> 0 >= (((HEAP32[$16 >> 2] | 0) - $$in65 | 0) / 108 | 0) >>> 0) {
   label = 22;
   break;
  }
 }
 if ((label | 0) == 22) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 32) {
  $94 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 81916, 35);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($94, $1);
  HEAP32[$94 >> 2] = 68080;
  ___cxa_throw($94 | 0, 192, 31);
 }
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i20 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $102 = 0, $107 = 0, $11 = 0, $110 = 0, $112 = 0, $12 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $143 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $40 = 0, $41 = 0, $54 = 0, $58 = 0, $6 = 0, $66 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $87 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i20 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i20) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i20 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i20 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i20 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i20) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i20; else $$pre$i$i$i = $$pre$i$i$i20;
  $40 = ($$pre$i$i$i | 0) == 0;
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 16; else {
   if ((HEAP32[$41 + 12 >> 2] | 0) != (HEAP32[$41 + 16 >> 2] | 0)) if ($40) {
    $143 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 16;
    break;
   } else if ($40) {
    $143 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($40) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $143 = 0;
  }
  $54 = HEAP8[$17 >> 0] | 0;
  $58 = $54 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $54 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $58 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $58 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $66 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $66 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $66, 0);
   $70 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $70 + $58;
   $$1 = $70;
  } else $$1 = $$0;
  $72 = $$pre$i$i$i + 12 | 0;
  $73 = HEAP32[$72 >> 2] | 0;
  $74 = $$pre$i$i$i + 16 | 0;
  if (($73 | 0) == (HEAP32[$74 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAPU8[$73 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i33 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $143;
   break;
  }
  $87 = HEAP32[$72 >> 2] | 0;
  if (($87 | 0) == (HEAP32[$74 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$72 >> 2] = $87 + 1;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  }
 }
 $95 = HEAP8[$8 + 11 >> 0] | 0;
 if (($95 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $95 & 255) | 0) {
  $102 = HEAP32[$12 >> 2] | 0;
  if (($102 - $11 | 0) < 160) {
   $107 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $102 + 4;
   HEAP32[$102 >> 2] = $107;
  }
 }
 $110 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $112 = $5;
 HEAP32[$112 >> 2] = $110;
 HEAP32[$112 + 4 >> 2] = tempRet0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $128 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $128 = 0;
 } else $128 = $$pre$i$i$i; else $128 = $$pre$i$i$i;
 $129 = ($128 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 41; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 41;
   break;
  }
  if (!$129) label = 42;
 } while (0);
 if ((label | 0) == 41) if ($129) label = 42;
 if ((label | 0) == 42) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i20 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $102 = 0, $107 = 0, $11 = 0, $110 = 0, $112 = 0, $12 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $143 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $40 = 0, $41 = 0, $54 = 0, $58 = 0, $6 = 0, $66 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $87 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i20 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i20) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i20 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i20 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i20 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i20) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i20; else $$pre$i$i$i = $$pre$i$i$i20;
  $40 = ($$pre$i$i$i | 0) == 0;
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 16; else {
   if ((HEAP32[$41 + 12 >> 2] | 0) != (HEAP32[$41 + 16 >> 2] | 0)) if ($40) {
    $143 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 16;
    break;
   } else if ($40) {
    $143 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($40) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $143 = 0;
  }
  $54 = HEAP8[$17 >> 0] | 0;
  $58 = $54 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $54 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $58 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $58 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $66 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $66 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $66, 0);
   $70 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $70 + $58;
   $$1 = $70;
  } else $$1 = $$0;
  $72 = $$pre$i$i$i + 12 | 0;
  $73 = HEAP32[$72 >> 2] | 0;
  $74 = $$pre$i$i$i + 16 | 0;
  if (($73 | 0) == (HEAP32[$74 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAPU8[$73 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i33 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $143;
   break;
  }
  $87 = HEAP32[$72 >> 2] | 0;
  if (($87 | 0) == (HEAP32[$74 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$72 >> 2] = $87 + 1;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  }
 }
 $95 = HEAP8[$8 + 11 >> 0] | 0;
 if (($95 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $95 & 255) | 0) {
  $102 = HEAP32[$12 >> 2] | 0;
  if (($102 - $11 | 0) < 160) {
   $107 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $102 + 4;
   HEAP32[$102 >> 2] = $107;
  }
 }
 $110 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $112 = $5;
 HEAP32[$112 >> 2] = $110;
 HEAP32[$112 + 4 >> 2] = tempRet0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $128 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $128 = 0;
 } else $128 = $$pre$i$i$i; else $128 = $$pre$i$i$i;
 $129 = ($128 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 41; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 41;
   break;
  }
  if (!$129) label = 42;
 } while (0);
 if ((label | 0) == 41) if ($129) label = 42;
 if ((label | 0) == 42) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function _fmod($0, $1) {
 $0 = +$0;
 $1 = +$1;
 var $$070 = 0.0, $$071$lcssa = 0, $$07195 = 0, $$073$lcssa = 0, $$073101 = 0, $$172$ph = 0, $$174 = 0, $$275$lcssa = 0, $$27587 = 0, $$376$lcssa = 0, $$37684 = 0, $$lcssa = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $114 = 0, $115 = 0, $117 = 0, $12 = 0, $120 = 0, $122 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $148 = 0, $151 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $18 = 0, $2 = 0, $25 = 0.0, $27 = 0, $28 = 0, $3 = 0, $39 = 0, $4 = 0, $40 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $57 = 0, $6 = 0, $62 = 0, $63 = 0, $69 = 0, $70 = 0, $71 = 0, $8 = 0, $80 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $95 = 0, $96 = 0, $98 = 0, label = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $1;
 $4 = HEAP32[tempDoublePtr >> 2] | 0;
 $5 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $6 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 $8 = $6 & 2047;
 $9 = _bitshift64Lshr($4 | 0, $5 | 0, 52) | 0;
 $11 = $9 & 2047;
 $12 = $3 & -2147483648;
 $13 = _bitshift64Shl($4 | 0, $5 | 0, 1) | 0;
 $14 = tempRet0;
 L1 : do if (($13 | 0) == 0 & ($14 | 0) == 0) label = 3; else {
  $18 = $5 & 2147483647;
  if ($18 >>> 0 > 2146435072 | ($18 | 0) == 2146435072 & $4 >>> 0 > 0 | ($8 | 0) == 2047) label = 3; else {
   $27 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
   $28 = tempRet0;
   if (!($28 >>> 0 > $14 >>> 0 | ($28 | 0) == ($14 | 0) & $27 >>> 0 > $13 >>> 0)) return +(($27 | 0) == ($13 | 0) & ($28 | 0) == ($14 | 0) ? $0 * 0.0 : $0);
   if (!$8) {
    $39 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
    $40 = tempRet0;
    if (($40 | 0) > -1 | ($40 | 0) == -1 & $39 >>> 0 > 4294967295) {
     $$073101 = 0;
     $47 = $39;
     $48 = $40;
     while (1) {
      $46 = $$073101 + -1 | 0;
      $47 = _bitshift64Shl($47 | 0, $48 | 0, 1) | 0;
      $48 = tempRet0;
      if (!(($48 | 0) > -1 | ($48 | 0) == -1 & $47 >>> 0 > 4294967295)) {
       $$073$lcssa = $46;
       break;
      } else $$073101 = $46;
     }
    } else $$073$lcssa = 0;
    $57 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $$073$lcssa | 0) | 0;
    $$174 = $$073$lcssa;
    $85 = $57;
    $86 = tempRet0;
   } else {
    $$174 = $8;
    $85 = $2;
    $86 = $3 & 1048575 | 1048576;
   }
   if (!$11) {
    $62 = _bitshift64Shl($4 | 0, $5 | 0, 12) | 0;
    $63 = tempRet0;
    if (($63 | 0) > -1 | ($63 | 0) == -1 & $62 >>> 0 > 4294967295) {
     $$07195 = 0;
     $70 = $62;
     $71 = $63;
     while (1) {
      $69 = $$07195 + -1 | 0;
      $70 = _bitshift64Shl($70 | 0, $71 | 0, 1) | 0;
      $71 = tempRet0;
      if (!(($71 | 0) > -1 | ($71 | 0) == -1 & $70 >>> 0 > 4294967295)) {
       $$071$lcssa = $69;
       break;
      } else $$07195 = $69;
     }
    } else $$071$lcssa = 0;
    $80 = _bitshift64Shl($4 | 0, $5 | 0, 1 - $$071$lcssa | 0) | 0;
    $$172$ph = $$071$lcssa;
    $87 = $80;
    $88 = tempRet0;
   } else {
    $$172$ph = $11;
    $87 = $4;
    $88 = $5 & 1048575 | 1048576;
   }
   $89 = _i64Subtract($85 | 0, $86 | 0, $87 | 0, $88 | 0) | 0;
   $90 = tempRet0;
   $95 = ($90 | 0) > -1 | ($90 | 0) == -1 & $89 >>> 0 > 4294967295;
   L23 : do if (($$174 | 0) > ($$172$ph | 0)) {
    $$27587 = $$174;
    $154 = $95;
    $155 = $85;
    $156 = $86;
    $96 = $89;
    $98 = $90;
    while (1) {
     if ($154) if (($96 | 0) == 0 & ($98 | 0) == 0) break; else {
      $102 = $96;
      $103 = $98;
     } else {
      $102 = $155;
      $103 = $156;
     }
     $104 = _bitshift64Shl($102 | 0, $103 | 0, 1) | 0;
     $105 = tempRet0;
     $106 = $$27587 + -1 | 0;
     $108 = _i64Subtract($104 | 0, $105 | 0, $87 | 0, $88 | 0) | 0;
     $109 = tempRet0;
     $114 = ($109 | 0) > -1 | ($109 | 0) == -1 & $108 >>> 0 > 4294967295;
     if (($106 | 0) > ($$172$ph | 0)) {
      $$27587 = $106;
      $154 = $114;
      $155 = $104;
      $156 = $105;
      $96 = $108;
      $98 = $109;
     } else {
      $$275$lcssa = $106;
      $$lcssa = $114;
      $115 = $108;
      $117 = $109;
      $157 = $104;
      $158 = $105;
      break L23;
     }
    }
    $$070 = $0 * 0.0;
    break L1;
   } else {
    $$275$lcssa = $$174;
    $$lcssa = $95;
    $115 = $89;
    $117 = $90;
    $157 = $85;
    $158 = $86;
   } while (0);
   if ($$lcssa) if (($115 | 0) == 0 & ($117 | 0) == 0) {
    $$070 = $0 * 0.0;
    break;
   } else {
    $120 = $117;
    $122 = $115;
   } else {
    $120 = $158;
    $122 = $157;
   }
   if ($120 >>> 0 < 1048576 | ($120 | 0) == 1048576 & $122 >>> 0 < 0) {
    $$37684 = $$275$lcssa;
    $128 = $122;
    $129 = $120;
    while (1) {
     $130 = _bitshift64Shl($128 | 0, $129 | 0, 1) | 0;
     $131 = tempRet0;
     $132 = $$37684 + -1 | 0;
     if ($131 >>> 0 < 1048576 | ($131 | 0) == 1048576 & $130 >>> 0 < 0) {
      $$37684 = $132;
      $128 = $130;
      $129 = $131;
     } else {
      $$376$lcssa = $132;
      $139 = $130;
      $140 = $131;
      break;
     }
    }
   } else {
    $$376$lcssa = $$275$lcssa;
    $139 = $122;
    $140 = $120;
   }
   if (($$376$lcssa | 0) > 0) {
    $141 = _i64Add($139 | 0, $140 | 0, 0, -1048576) | 0;
    $142 = tempRet0;
    $143 = _bitshift64Shl($$376$lcssa | 0, 0, 52) | 0;
    $151 = $142 | tempRet0;
    $153 = $141 | $143;
   } else {
    $148 = _bitshift64Lshr($139 | 0, $140 | 0, 1 - $$376$lcssa | 0) | 0;
    $151 = tempRet0;
    $153 = $148;
   }
   HEAP32[tempDoublePtr >> 2] = $153;
   HEAP32[tempDoublePtr + 4 >> 2] = $151 | $12;
   $$070 = +HEAPF64[tempDoublePtr >> 3];
  }
 } while (0);
 if ((label | 0) == 3) {
  $25 = $0 * $1;
  $$070 = $25 / $25;
 }
 return +$$070;
}

function __ZL11constructorP8LexStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $102 = 0, $11 = 0, $112 = 0, $117 = 0, $19 = 0, $2 = 0, $23 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $40 = 0, $42 = 0, $45 = 0, $48 = 0, $53 = 0, $55 = 0, $58 = 0, $6 = 0, $60 = 0, $63 = 0, $66 = 0, $7 = 0, $71 = 0, $73 = 0, $79 = 0, $8 = 0, $9 = 0, $92 = 0, $98 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer14 = 0, $vararg_buffer5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $vararg_buffer14 = sp + 40 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer5 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 52 | 0;
 $3 = $0 + 28 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = __Z12luaK_codeABCP9FuncState6OpCodeiii($4, 10, 0, 0, 0) | 0;
 $8 = $2 + 32 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $2 + 24 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $2 + 28 | 0;
 HEAP32[$10 >> 2] = 0;
 $11 = $2 + 20 | 0;
 HEAP32[$11 >> 2] = $1;
 HEAP32[$1 + 12 >> 2] = -1;
 HEAP32[$1 + 16 >> 2] = -1;
 HEAP32[$1 >> 2] = 11;
 HEAP32[$1 + 4 >> 2] = $7;
 HEAP32[$2 + 12 >> 2] = -1;
 HEAP32[$2 + 16 >> 2] = -1;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 __Z16luaK_exp2nextregP9FuncStateP7expdesc(HEAP32[$3 >> 2] | 0, $1);
 $19 = $0 + 12 | 0;
 if ((HEAP32[$19 >> 2] | 0) != 123) {
  $23 = HEAP32[$0 + 32 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = __Z14luaX_token2strP8LexStatei($0, 123) | 0;
  __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($23, 87798, $vararg_buffer) | 0);
 }
 __Z9luaX_nextP8LexState($0);
 L4 : do if ((HEAP32[$19 >> 2] | 0) != 125) {
  $28 = $0 + 20 | 0;
  $29 = 0;
  while (1) {
   if ($29 | 0) {
    __Z16luaK_exp2nextregP9FuncStateP7expdesc($4, $2);
    HEAP32[$2 >> 2] = 0;
    if ((HEAP32[$8 >> 2] | 0) == 50) {
     __Z12luaK_setlistP9FuncStateiii($4, HEAP32[(HEAP32[$11 >> 2] | 0) + 4 >> 2] | 0, HEAP32[$10 >> 2] | 0, 50);
     HEAP32[$8 >> 2] = 0;
    }
   }
   L12 : do switch (HEAP32[$19 >> 2] | 0) {
   case 285:
    {
     __Z14luaX_lookaheadP8LexState($0);
     if ((HEAP32[$28 >> 2] | 0) == 61) {
      __ZL8recfieldP8LexStateP11ConsControl($0, $2);
      break L12;
     }
     __ZL7subexprP8LexStateP7expdescj($0, $2, 0) | 0;
     $40 = HEAP32[$10 >> 2] | 0;
     if (($40 | 0) > 2147483645) {
      $42 = HEAP32[$3 >> 2] | 0;
      $45 = HEAP32[(HEAP32[$42 >> 2] | 0) + 60 >> 2] | 0;
      $48 = HEAP32[$42 + 16 >> 2] | 0;
      if (!$45) {
       HEAP32[$vararg_buffer1 >> 2] = 2147483645;
       HEAP32[$vararg_buffer1 + 4 >> 2] = 88133;
       $53 = __Z16luaO_pushfstringP9lua_StatePKcz($48, 87964, $vararg_buffer1) | 0;
      } else {
       HEAP32[$vararg_buffer5 >> 2] = $45;
       HEAP32[$vararg_buffer5 + 4 >> 2] = 2147483645;
       HEAP32[$vararg_buffer5 + 8 >> 2] = 88133;
       $53 = __Z16luaO_pushfstringP9lua_StatePKcz($48, 87998, $vararg_buffer5) | 0;
      }
      __Z13luaX_lexerrorP8LexStatePKci(HEAP32[$42 + 12 >> 2] | 0, $53, 0);
      $55 = HEAP32[$10 >> 2] | 0;
     } else $55 = $40;
     HEAP32[$10 >> 2] = $55 + 1;
     HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1;
     break;
    }
   case 91:
    {
     __ZL8recfieldP8LexStateP11ConsControl($0, $2);
     break;
    }
   default:
    {
     __ZL7subexprP8LexStateP7expdescj($0, $2, 0) | 0;
     $58 = HEAP32[$10 >> 2] | 0;
     if (($58 | 0) > 2147483645) {
      $60 = HEAP32[$3 >> 2] | 0;
      $63 = HEAP32[(HEAP32[$60 >> 2] | 0) + 60 >> 2] | 0;
      $66 = HEAP32[$60 + 16 >> 2] | 0;
      if (!$63) {
       HEAP32[$vararg_buffer10 >> 2] = 2147483645;
       HEAP32[$vararg_buffer10 + 4 >> 2] = 88133;
       $71 = __Z16luaO_pushfstringP9lua_StatePKcz($66, 87964, $vararg_buffer10) | 0;
      } else {
       HEAP32[$vararg_buffer14 >> 2] = $63;
       HEAP32[$vararg_buffer14 + 4 >> 2] = 2147483645;
       HEAP32[$vararg_buffer14 + 8 >> 2] = 88133;
       $71 = __Z16luaO_pushfstringP9lua_StatePKcz($66, 87998, $vararg_buffer14) | 0;
      }
      __Z13luaX_lexerrorP8LexStatePKci(HEAP32[$60 + 12 >> 2] | 0, $71, 0);
      $73 = HEAP32[$10 >> 2] | 0;
     } else $73 = $58;
     HEAP32[$10 >> 2] = $73 + 1;
     HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1;
    }
   } while (0);
   switch (HEAP32[$19 >> 2] | 0) {
   case 44:
    {
     __Z9luaX_nextP8LexState($0);
     break;
    }
   case 59:
    {
     __Z9luaX_nextP8LexState($0);
     break;
    }
   default:
    break L4;
   }
   if ((HEAP32[$19 >> 2] | 0) == 125) break L4;
   $29 = HEAP32[$2 >> 2] | 0;
  }
 } while (0);
 __ZL11check_matchP8LexStateiii($0, 125, 123, $6);
 $79 = HEAP32[$8 >> 2] | 0;
 L40 : do if ($79 | 0) {
  switch (HEAP32[$2 >> 2] | 0) {
  case 14:
  case 13:
   {
    __Z15luaK_setreturnsP9FuncStateP7expdesci($4, $2, -1);
    __Z12luaK_setlistP9FuncStateiii($4, HEAP32[(HEAP32[$11 >> 2] | 0) + 4 >> 2] | 0, HEAP32[$10 >> 2] | 0, -1);
    HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + -1;
    break L40;
    break;
   }
  case 0:
   {
    $92 = $79;
    break;
   }
  default:
   {
    __Z16luaK_exp2nextregP9FuncStateP7expdesc($4, $2);
    $92 = HEAP32[$8 >> 2] | 0;
   }
  }
  __Z12luaK_setlistP9FuncStateiii($4, HEAP32[(HEAP32[$11 >> 2] | 0) + 4 >> 2] | 0, HEAP32[$10 >> 2] | 0, $92);
 } while (0);
 $98 = HEAP32[(HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] | 0) + ($7 << 2) >> 2] & 8388607;
 $102 = (__Z11luaO_int2fbj(HEAP32[$10 >> 2] | 0) | 0) << 23 | $98;
 HEAP32[(HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] | 0) + ($7 << 2) >> 2] = $102;
 $112 = HEAP32[(HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] | 0) + ($7 << 2) >> 2] & -8372225;
 $117 = (__Z11luaO_int2fbj(HEAP32[$9 >> 2] | 0) | 0) << 14 & 8372224 | $112;
 HEAP32[(HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] | 0) + ($7 << 2) >> 2] = $117;
 STACKTOP = sp;
 return;
}

function __ZN14LuaConstEngine11PushEntriesEP9lua_State($0) {
 $0 = $0 | 0;
 var $$idx$i = 0, $1 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0.0, $14 = 0, $15 = 0, $2 = 0, $29 = 0, $3 = 0, $30 = 0, $38 = 0, $39 = 0, $5 = 0, $53 = 0, $54 = 0, $6 = 0, $62 = 0, $63 = 0, $77 = 0, $78 = 0, $86 = 0, $87 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 92082, 7);
 $3 = __ZN13SpringVersion7GetSyncEv() | 0;
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $6 ? HEAP32[$1 >> 2] | 0 : $1, $6 ? HEAP32[$1 + 4 >> 2] | 0 : $5 & 255);
 $14 = HEAP8[$3 + 11 >> 0] | 0;
 $15 = $14 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $15 ? HEAP32[$3 >> 2] | 0 : $3, $15 ? HEAP32[$3 + 4 >> 2] | 0 : $14 & 255);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 83028, 11);
 $$idx$i = $0 + 16 | 0;
 if (!(HEAP8[(HEAP32[(HEAP32[$$idx$i >> 2] | 0) + 16 >> 2] | 0) + 16 >> 0] | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2, __ZN13SpringVersion7GetFullEv() | 0); else {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 114224, 0);
 }
 $29 = HEAP8[$1 + 11 >> 0] | 0;
 $30 = $29 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $30 ? HEAP32[$1 >> 2] | 0 : $1, $30 ? HEAP32[$1 + 4 >> 2] | 0 : $29 & 255);
 $38 = HEAP8[$2 + 11 >> 0] | 0;
 $39 = $38 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $39 ? HEAP32[$2 >> 2] | 0 : $2, $39 ? HEAP32[$2 + 4 >> 2] | 0 : $38 & 255);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 83040, 15);
 if (!(HEAP8[(HEAP32[(HEAP32[$$idx$i >> 2] | 0) + 16 >> 2] | 0) + 16 >> 0] | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2, __ZN13SpringVersion11GetPatchSetEv() | 0); else {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 114224, 0);
 }
 $53 = HEAP8[$1 + 11 >> 0] | 0;
 $54 = $53 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $54 ? HEAP32[$1 >> 2] | 0 : $1, $54 ? HEAP32[$1 + 4 >> 2] | 0 : $53 & 255);
 $62 = HEAP8[$2 + 11 >> 0] | 0;
 $63 = $62 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $63 ? HEAP32[$2 >> 2] | 0 : $2, $63 ? HEAP32[$2 + 4 >> 2] | 0 : $62 & 255);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 83056, 10);
 if (!(HEAP8[(HEAP32[(HEAP32[$$idx$i >> 2] | 0) + 16 >> 2] | 0) + 16 >> 0] | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2, __ZN13SpringVersion13GetAdditionalEv() | 0); else {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 114224, 0);
 }
 $77 = HEAP8[$1 + 11 >> 0] | 0;
 $78 = $77 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $78 ? HEAP32[$1 >> 2] | 0 : $1, $78 ? HEAP32[$1 + 4 >> 2] | 0 : $77 & 255);
 $86 = HEAP8[$2 + 11 >> 0] | 0;
 $87 = $86 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $87 ? HEAP32[$2 >> 2] | 0 : $2, $87 ? HEAP32[$2 + 4 >> 2] | 0 : $86 & 255);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 83067, 8);
 if (HEAP8[(HEAP32[(HEAP32[$$idx$i >> 2] | 0) + 16 >> 2] | 0) + 16 >> 0] | 0) {
  $110 = 0.0;
  $101 = $1 + 11 | 0;
  $102 = HEAP8[$101 >> 0] | 0;
  $103 = $102 << 24 >> 24 < 0;
  $104 = HEAP32[$1 >> 2] | 0;
  $105 = $103 ? $104 : $1;
  $106 = $1 + 4 | 0;
  $107 = HEAP32[$106 >> 2] | 0;
  $108 = $102 & 255;
  $109 = $103 ? $107 : $108;
  __Z15lua_pushlstringP9lua_StatePKcj($0, $105, $109);
  __Z14lua_pushnumberP9lua_Statef($0, $110);
  __Z10lua_rawsetP9lua_Statei($0, -3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return 1;
 }
 $110 = +((__ZN8Platform14NativeWordSizeEv() | 0) << 3 >>> 0);
 $101 = $1 + 11 | 0;
 $102 = HEAP8[$101 >> 0] | 0;
 $103 = $102 << 24 >> 24 < 0;
 $104 = HEAP32[$1 >> 2] | 0;
 $105 = $103 ? $104 : $1;
 $106 = $1 + 4 | 0;
 $107 = HEAP32[$106 >> 2] | 0;
 $108 = $102 & 255;
 $109 = $103 ? $107 : $108;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $105, $109);
 __Z14lua_pushnumberP9lua_Statef($0, $110);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return 1;
}

function __Z10luaK_infixP9FuncState6BinOprP7expdesc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i12$i = 0, $$idx$val$idx$val$i$i = 0, $$idx$val$idx$val$i$i$i = 0, $$pre$phiZ2D = 0, $101 = 0, $108 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $12 = 0, $124 = 0, $126 = 0, $15 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $3 = 0, $33 = 0, $35 = 0, $37 = 0, $44 = 0, $49 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $6 = 0, $61 = 0, $67 = 0, $71 = 0, $72 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $83 = 0, $88 = 0, $94 = 0, label = 0;
 switch ($1 | 0) {
 case 13:
  {
   __Z13luaK_goiftrueP9FuncStateP7expdesc($0, $2);
   return;
  }
 case 14:
  {
   __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $2);
   $3 = HEAP32[$2 >> 2] | 0;
   L7 : do switch ($3 | 0) {
   case 3:
   case 1:
    break;
   case 10:
    {
     $$0$i = HEAP32[$2 + 4 >> 2] | 0;
     label = 18;
     break;
    }
   default:
    {
     $6 = $2 + 4 | 0;
     switch ($3 | 0) {
     case 11:
      {
       $8 = HEAP32[$0 >> 2] | 0;
       $12 = HEAP32[(HEAP32[$8 + 12 >> 2] | 0) + (HEAP32[$6 >> 2] << 2) >> 2] | 0;
       if (($12 & 63 | 0) == 19) {
        $15 = $0 + 24 | 0;
        HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + -1;
        $$0$i = __ZL8condjumpP9FuncState6OpCodeiii($0, 26, $12 >>> 23, 0, 0) | 0;
        label = 18;
        break L7;
       } else {
        $$pre$phiZ2D = $0;
        $24 = $8;
        label = 9;
       }
       break;
      }
     case 12:
      {
       label = 14;
       break;
      }
     default:
      {
       $$pre$phiZ2D = $0;
       $24 = HEAP32[$0 >> 2] | 0;
       label = 9;
      }
     }
     if ((label | 0) == 9) {
      $20 = $0 + 36 | 0;
      $21 = HEAP32[$20 >> 2] | 0;
      $22 = $21 + 1 | 0;
      if (($21 | 0) < (HEAPU8[$24 + 75 >> 0] | 0 | 0)) $35 = $21; else {
       if (($21 | 0) > 248) {
        __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
        $33 = HEAP32[$$pre$phiZ2D >> 2] | 0;
       } else $33 = $24;
       HEAP8[$33 + 75 >> 0] = $22;
       $35 = HEAP32[$20 >> 2] | 0;
      }
      HEAP32[$20 >> 2] = $35 + 1;
      __ZL13discharge2regP9FuncStateP7expdesci($0, $2, $35);
      if ((HEAP32[$2 >> 2] | 0) == 12) label = 14;
     }
     if ((label | 0) == 14) {
      $37 = HEAP32[$6 >> 2] | 0;
      if (!($37 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($37 | 0)) {
       $44 = $0 + 36 | 0;
       HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + -1;
      }
     }
     $$0$i = __ZL8condjumpP9FuncState6OpCodeiii($0, 27, 255, HEAP32[$6 >> 2] | 0, 1) | 0;
     label = 18;
    }
   } while (0);
   do if ((label | 0) == 18) {
    $49 = $2 + 12 | 0;
    if (($$0$i | 0) != -1) {
     $51 = HEAP32[$49 >> 2] | 0;
     if (($51 | 0) == -1) {
      HEAP32[$49 >> 2] = $$0$i;
      break;
     }
     $$idx$val$idx$val$i$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
     $$0$i$i = $51;
     while (1) {
      $53 = $$idx$val$idx$val$i$i + ($$0$i$i << 2) | 0;
      $54 = HEAP32[$53 >> 2] | 0;
      $56 = ($54 >>> 14) + -131071 | 0;
      $$0$i$i$i = ($56 | 0) == -1 ? -1 : $$0$i$i + 1 + $56 | 0;
      if (($$0$i$i$i | 0) == -1) break; else $$0$i$i = $$0$i$i$i;
     }
     $61 = $$0$i + ~$$0$i$i | 0;
     if (((($61 | 0) > -1 ? $61 : 0 - $61 | 0) | 0) > 131071) {
      __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
      $67 = HEAP32[$53 >> 2] | 0;
     } else $67 = $54;
     HEAP32[$53 >> 2] = $67 & 16383 | ($61 << 14) + 2147467264;
    }
   } while (0);
   $71 = $2 + 16 | 0;
   $72 = HEAP32[$71 >> 2] | 0;
   HEAP32[$0 + 28 >> 2] = HEAP32[$0 + 24 >> 2];
   $76 = $0 + 32 | 0;
   do if (($72 | 0) != -1) {
    $78 = HEAP32[$76 >> 2] | 0;
    if (($78 | 0) == -1) {
     HEAP32[$76 >> 2] = $72;
     break;
    }
    $$idx$val$idx$val$i$i$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
    $$0$i$i12$i = $78;
    while (1) {
     $80 = $$idx$val$idx$val$i$i$i + ($$0$i$i12$i << 2) | 0;
     $81 = HEAP32[$80 >> 2] | 0;
     $83 = ($81 >>> 14) + -131071 | 0;
     $$0$i$i$i$i = ($83 | 0) == -1 ? -1 : $$0$i$i12$i + 1 + $83 | 0;
     if (($$0$i$i$i$i | 0) == -1) break; else $$0$i$i12$i = $$0$i$i$i$i;
    }
    $88 = $72 + ~$$0$i$i12$i | 0;
    if (((($88 | 0) > -1 ? $88 : 0 - $88 | 0) | 0) > 131071) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
     $94 = HEAP32[$80 >> 2] | 0;
    } else $94 = $81;
    HEAP32[$80 >> 2] = $94 & 16383 | ($88 << 14) + 2147467264;
   } while (0);
   HEAP32[$71 >> 2] = -1;
   return;
  }
 case 6:
  {
   __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $2);
   if ((HEAP32[$2 >> 2] | 0) == 12) {
    $101 = HEAP32[$2 + 4 >> 2] | 0;
    if (!($101 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($101 | 0)) {
     $108 = $0 + 36 | 0;
     HEAP32[$108 >> 2] = (HEAP32[$108 >> 2] | 0) + -1;
    }
   }
   $111 = $0 + 36 | 0;
   $112 = HEAP32[$111 >> 2] | 0;
   $113 = $112 + 1 | 0;
   $114 = HEAP32[$0 >> 2] | 0;
   if (($112 | 0) < (HEAPU8[$114 + 75 >> 0] | 0 | 0)) $126 = $112; else {
    if (($112 | 0) > 248) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
     $124 = HEAP32[$0 >> 2] | 0;
    } else $124 = $114;
    HEAP8[$124 + 75 >> 0] = $113;
    $126 = HEAP32[$111 >> 2] | 0;
   }
   HEAP32[$111 >> 2] = $126 + 1;
   __ZL7exp2regP9FuncStateP7expdesci($0, $2, $126);
   return;
  }
 case 5:
 case 4:
 case 3:
 case 2:
 case 1:
 case 0:
  {
   if ((HEAP32[$2 >> 2] | 0) == 5) if ((HEAP32[$2 + 12 >> 2] | 0) == -1) if ((HEAP32[$2 + 16 >> 2] | 0) == -1) return;
   __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
   return;
  }
 default:
  {
   __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
   return;
  }
 }
}

function __ZN10CGameSetupD2Ev($0) {
 $0 = $0 | 0;
 var $$05$i = 0, $$05$i10 = 0, $$05$i3 = 0, $$lcssa$i = 0, $$lcssa$i2 = 0, $$lcssa$i9 = 0, $$pre8$i = 0, $$pre8$i1 = 0, $$pre8$i8 = 0, $1 = 0, $10 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $58 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $76 = 0, $77 = 0, $79 = 0, $80 = 0, $85 = 0, $86 = 0, $87 = 0, $89 = 0, $90 = 0, $92 = 0, $93 = 0, $98 = 0;
 $1 = $0 + 340 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = $0 + 332 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $$pre8$i = $0 + 336 | 0;
 if (!$2) $$lcssa$i = $5; else {
  $$05$i = 0;
  $118 = $2;
  $7 = $5;
  while (1) {
   if ((HEAP8[$7 + $$05$i >> 0] | 0) == 2) {
    $10 = HEAP32[$$pre8$i >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10 + ($$05$i * 24 | 0) + 12 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10 + ($$05$i * 24 | 0) | 0);
    $119 = HEAP32[$4 >> 2] | 0;
    $15 = HEAP32[$1 >> 2] | 0;
   } else {
    $119 = $7;
    $15 = $118;
   }
   $$05$i = $$05$i + 1 | 0;
   if ($$05$i >>> 0 >= $15 >>> 0) {
    $$lcssa$i = $119;
    break;
   } else {
    $118 = $15;
    $7 = $119;
   }
  }
 }
 _free($$lcssa$i);
 _free(HEAP32[$$pre8$i >> 2] | 0);
 $17 = $0 + 312 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $20 = $0 + 304 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 $$pre8$i1 = $0 + 308 | 0;
 if (!$18) $$lcssa$i2 = $21; else {
  $$05$i3 = 0;
  $120 = $18;
  $23 = $21;
  while (1) {
   if ((HEAP8[$23 + $$05$i3 >> 0] | 0) == 2) {
    $26 = HEAP32[$$pre8$i1 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26 + ($$05$i3 * 24 | 0) + 12 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26 + ($$05$i3 * 24 | 0) | 0);
    $121 = HEAP32[$20 >> 2] | 0;
    $31 = HEAP32[$17 >> 2] | 0;
   } else {
    $121 = $23;
    $31 = $120;
   }
   $$05$i3 = $$05$i3 + 1 | 0;
   if ($$05$i3 >>> 0 >= $31 >>> 0) {
    $$lcssa$i2 = $121;
    break;
   } else {
    $120 = $31;
    $23 = $121;
   }
  }
 }
 _free($$lcssa$i2);
 _free(HEAP32[$$pre8$i1 >> 2] | 0);
 $33 = $0 + 284 | 0;
 $34 = HEAP32[$33 >> 2] | 0;
 $36 = $0 + 276 | 0;
 $37 = HEAP32[$36 >> 2] | 0;
 $$pre8$i8 = $0 + 280 | 0;
 if (!$34) $$lcssa$i9 = $37; else {
  $$05$i10 = 0;
  $122 = $34;
  $39 = $37;
  while (1) {
   if ((HEAP8[$39 + $$05$i10 >> 0] | 0) == 2) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((HEAP32[$$pre8$i8 >> 2] | 0) + ($$05$i10 << 4) | 0);
    $123 = HEAP32[$36 >> 2] | 0;
    $46 = HEAP32[$33 >> 2] | 0;
   } else {
    $123 = $39;
    $46 = $122;
   }
   $$05$i10 = $$05$i10 + 1 | 0;
   if ($$05$i10 >>> 0 >= $46 >>> 0) {
    $$lcssa$i9 = $123;
    break;
   } else {
    $122 = $46;
    $39 = $123;
   }
  }
 }
 _free($$lcssa$i9);
 _free(HEAP32[$$pre8$i8 >> 2] | 0);
 $48 = $0 + 260 | 0;
 $49 = HEAP32[$48 >> 2] | 0;
 if ($49 | 0) {
  $51 = $0 + 264 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  if (($52 | 0) == ($49 | 0)) $58 = $49; else {
   $55 = $52;
   do {
    $54 = $55 + -12 | 0;
    HEAP32[$51 >> 2] = $54;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
    $55 = HEAP32[$51 >> 2] | 0;
   } while (($55 | 0) != ($49 | 0));
   $58 = HEAP32[$48 >> 2] | 0;
  }
  __ZdlPv($58);
 }
 $59 = $0 + 248 | 0;
 $60 = HEAP32[$59 >> 2] | 0;
 if ($60 | 0) {
  $62 = $0 + 252 | 0;
  $63 = HEAP32[$62 >> 2] | 0;
  if (($63 | 0) == ($60 | 0)) $71 = $60; else {
   $66 = $63;
   do {
    $65 = $66 + -108 | 0;
    HEAP32[$62 >> 2] = $65;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$65 >> 2] >> 2] & 255]($65);
    $66 = HEAP32[$62 >> 2] | 0;
   } while (($66 | 0) != ($60 | 0));
   $71 = HEAP32[$59 >> 2] | 0;
  }
  __ZdlPv($71);
 }
 __ZNSt3__213__vector_baseI8AllyTeamNS_9allocatorIS1_EEED2Ev($0 + 236 | 0);
 $73 = $0 + 224 | 0;
 $74 = HEAP32[$73 >> 2] | 0;
 if ($74 | 0) {
  $76 = $0 + 228 | 0;
  $77 = HEAP32[$76 >> 2] | 0;
  if (($77 | 0) == ($74 | 0)) $85 = $74; else {
   $80 = $77;
   do {
    $79 = $80 + -76 | 0;
    HEAP32[$76 >> 2] = $79;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$79 >> 2] >> 2] & 255]($79);
    $80 = HEAP32[$76 >> 2] | 0;
   } while (($80 | 0) != ($74 | 0));
   $85 = HEAP32[$73 >> 2] | 0;
  }
  __ZdlPv($85);
 }
 $86 = $0 + 212 | 0;
 $87 = HEAP32[$86 >> 2] | 0;
 if ($87 | 0) {
  $89 = $0 + 216 | 0;
  $90 = HEAP32[$89 >> 2] | 0;
  if (($90 | 0) == ($87 | 0)) $98 = $87; else {
   $93 = $90;
   do {
    $92 = $93 + -56 | 0;
    HEAP32[$89 >> 2] = $92;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$92 >> 2] >> 2] & 255]($92);
    $93 = HEAP32[$89 >> 2] | 0;
   } while (($93 | 0) != ($87 | 0));
   $98 = HEAP32[$86 >> 2] | 0;
  }
  __ZdlPv($98);
 }
 _free(HEAP32[$0 + 188 >> 2] | 0);
 _free(HEAP32[$0 + 192 >> 2] | 0);
 _free(HEAP32[$0 + 160 >> 2] | 0);
 _free(HEAP32[$0 + 164 >> 2] | 0);
 _free(HEAP32[$0 + 132 >> 2] | 0);
 _free(HEAP32[$0 + 136 >> 2] | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 116 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 104 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 92 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 80 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 68 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 56 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 44 | 0);
 return;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i20 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $102 = 0, $107 = 0, $11 = 0, $12 = 0, $123 = 0, $124 = 0, $13 = 0, $138 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $40 = 0, $41 = 0, $54 = 0, $58 = 0, $6 = 0, $66 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $87 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i20 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i20) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i20 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i20 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i20 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i20) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i20; else $$pre$i$i$i = $$pre$i$i$i20;
  $40 = ($$pre$i$i$i | 0) == 0;
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 16; else {
   if ((HEAP32[$41 + 12 >> 2] | 0) != (HEAP32[$41 + 16 >> 2] | 0)) if ($40) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 16;
    break;
   } else if ($40) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($40) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $138 = 0;
  }
  $54 = HEAP8[$17 >> 0] | 0;
  $58 = $54 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $54 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $58 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $58 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $66 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $66 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $66, 0);
   $70 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $70 + $58;
   $$1 = $70;
  } else $$1 = $$0;
  $72 = $$pre$i$i$i + 12 | 0;
  $73 = HEAP32[$72 >> 2] | 0;
  $74 = $$pre$i$i$i + 16 | 0;
  if (($73 | 0) == (HEAP32[$74 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAPU8[$73 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i33 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $138;
   break;
  }
  $87 = HEAP32[$72 >> 2] | 0;
  if (($87 | 0) == (HEAP32[$74 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$72 >> 2] = $87 + 1;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  }
 }
 $95 = HEAP8[$8 + 11 >> 0] | 0;
 if (($95 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $95 & 255) | 0) {
  $102 = HEAP32[$12 >> 2] | 0;
  if (($102 - $11 | 0) < 160) {
   $107 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $102 + 4;
   HEAP32[$102 >> 2] = $107;
  }
 }
 HEAP16[$5 >> 1] = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $123 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $123 = 0;
 } else $123 = $$pre$i$i$i; else $123 = $$pre$i$i$i;
 $124 = ($123 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 41; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 41;
   break;
  }
  if (!$124) label = 42;
 } while (0);
 if ((label | 0) == 41) if ($124) label = 42;
 if ((label | 0) == 42) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i20 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $102 = 0, $107 = 0, $11 = 0, $12 = 0, $123 = 0, $124 = 0, $13 = 0, $138 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $40 = 0, $41 = 0, $54 = 0, $58 = 0, $6 = 0, $66 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $87 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i20 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i20) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i20 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i20 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i20 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i20) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i20; else $$pre$i$i$i = $$pre$i$i$i20;
  $40 = ($$pre$i$i$i | 0) == 0;
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 16; else {
   if ((HEAP32[$41 + 12 >> 2] | 0) != (HEAP32[$41 + 16 >> 2] | 0)) if ($40) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 16;
    break;
   } else if ($40) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($40) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $138 = 0;
  }
  $54 = HEAP8[$17 >> 0] | 0;
  $58 = $54 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $54 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $58 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $58 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $66 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $66 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $66, 0);
   $70 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $70 + $58;
   $$1 = $70;
  } else $$1 = $$0;
  $72 = $$pre$i$i$i + 12 | 0;
  $73 = HEAP32[$72 >> 2] | 0;
  $74 = $$pre$i$i$i + 16 | 0;
  if (($73 | 0) == (HEAP32[$74 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAPU8[$73 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i33 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $138;
   break;
  }
  $87 = HEAP32[$72 >> 2] | 0;
  if (($87 | 0) == (HEAP32[$74 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$72 >> 2] = $87 + 1;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  }
 }
 $95 = HEAP8[$8 + 11 >> 0] | 0;
 if (($95 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $95 & 255) | 0) {
  $102 = HEAP32[$12 >> 2] | 0;
  if (($102 - $11 | 0) < 160) {
   $107 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $102 + 4;
   HEAP32[$102 >> 2] = $107;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $123 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $123 = 0;
 } else $123 = $$pre$i$i$i; else $123 = $$pre$i$i$i;
 $124 = ($123 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 41; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 41;
   break;
  }
  if (!$124) label = 42;
 } while (0);
 if ((label | 0) == 41) if ($124) label = 42;
 if ((label | 0) == 42) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i20 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $102 = 0, $107 = 0, $11 = 0, $12 = 0, $123 = 0, $124 = 0, $13 = 0, $138 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $40 = 0, $41 = 0, $54 = 0, $58 = 0, $6 = 0, $66 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $87 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i20 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i20) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i20 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i20 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i20 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i20) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i20; else $$pre$i$i$i = $$pre$i$i$i20;
  $40 = ($$pre$i$i$i | 0) == 0;
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 16; else {
   if ((HEAP32[$41 + 12 >> 2] | 0) != (HEAP32[$41 + 16 >> 2] | 0)) if ($40) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 16;
    break;
   } else if ($40) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($40) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $138 = 0;
  }
  $54 = HEAP8[$17 >> 0] | 0;
  $58 = $54 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $54 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $58 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $58 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $66 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $66 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $66, 0);
   $70 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $70 + $58;
   $$1 = $70;
  } else $$1 = $$0;
  $72 = $$pre$i$i$i + 12 | 0;
  $73 = HEAP32[$72 >> 2] | 0;
  $74 = $$pre$i$i$i + 16 | 0;
  if (($73 | 0) == (HEAP32[$74 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAPU8[$73 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i33 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $138;
   break;
  }
  $87 = HEAP32[$72 >> 2] | 0;
  if (($87 | 0) == (HEAP32[$74 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$72 >> 2] = $87 + 1;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  }
 }
 $95 = HEAP8[$8 + 11 >> 0] | 0;
 if (($95 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $95 & 255) | 0) {
  $102 = HEAP32[$12 >> 2] | 0;
  if (($102 - $11 | 0) < 160) {
   $107 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $102 + 4;
   HEAP32[$102 >> 2] = $107;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $123 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $123 = 0;
 } else $123 = $$pre$i$i$i; else $123 = $$pre$i$i$i;
 $124 = ($123 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 41; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 41;
   break;
  }
  if (!$124) label = 42;
 } while (0);
 if ((label | 0) == 41) if ($124) label = 42;
 if ((label | 0) == 42) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i33 = 0, $$1 = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i20 = 0, $$pre$i3$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $102 = 0, $107 = 0, $11 = 0, $12 = 0, $123 = 0, $124 = 0, $13 = 0, $138 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $40 = 0, $41 = 0, $54 = 0, $58 = 0, $6 = 0, $66 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $87 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $6 = sp + 198 | 0;
 $7 = sp + 196 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 172 | 0;
 $10 = sp + 168 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($8, $3, $6, $7);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $17 = $9 + 11 | 0;
 $20 = $9 + 8 | 0;
 if ((HEAP8[$17 >> 0] | 0) < 0) $23 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $23 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $23, 0);
 $27 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $27;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $28 = $9 + 4 | 0;
 $$0 = $27;
 $$pre$i$i$i20 = HEAP32[$1 >> 2] | 0;
 L8 : while (1) {
  if (!$$pre$i$i$i20) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i20 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i20 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i20 >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i20) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i20; else $$pre$i$i$i = $$pre$i$i$i20;
  $40 = ($$pre$i$i$i | 0) == 0;
  $41 = HEAP32[$2 >> 2] | 0;
  do if (!$41) label = 16; else {
   if ((HEAP32[$41 + 12 >> 2] | 0) != (HEAP32[$41 + 16 >> 2] | 0)) if ($40) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 16;
    break;
   } else if ($40) {
    $138 = $41;
    break;
   } else {
    $$2 = $$0;
    $$pre$i3$i$i = $41;
    break L8;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($40) {
    $$2 = $$0;
    $$pre$i3$i$i = 0;
    break;
   } else $138 = 0;
  }
  $54 = HEAP8[$17 >> 0] | 0;
  $58 = $54 << 24 >> 24 < 0 ? HEAP32[$28 >> 2] | 0 : $54 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $58 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $58 << 1, 0);
   if ((HEAP8[$17 >> 0] | 0) < 0) $66 = (HEAP32[$20 >> 2] & 2147483647) + -1 | 0; else $66 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($9, $66, 0);
   $70 = (HEAP8[$17 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $70 + $58;
   $$1 = $70;
  } else $$1 = $$0;
  $72 = $$pre$i$i$i + 12 | 0;
  $73 = HEAP32[$72 >> 2] | 0;
  $74 = $$pre$i$i$i + 16 | 0;
  if (($73 | 0) == (HEAP32[$74 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0; else $$0$i$i33 = HEAPU8[$73 >> 0] | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i33 & 255, $14, $$1, $10, $13, HEAP8[$7 >> 0] | 0, $8, $11, $12, $6) | 0) {
   $$2 = $$1;
   $$pre$i3$i$i = $138;
   break;
  }
  $87 = HEAP32[$72 >> 2] | 0;
  if (($87 | 0) == (HEAP32[$74 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 255]($$pre$i$i$i) | 0;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  } else {
   HEAP32[$72 >> 2] = $87 + 1;
   $$0 = $$1;
   $$pre$i$i$i20 = $$pre$i$i$i;
   continue;
  }
 }
 $95 = HEAP8[$8 + 11 >> 0] | 0;
 if (($95 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $95 & 255) | 0) {
  $102 = HEAP32[$12 >> 2] | 0;
  if (($102 - $11 | 0) < 160) {
   $107 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $102 + 4;
   HEAP32[$102 >> 2] = $107;
  }
 }
 HEAP32[$5 >> 2] = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$$pre$i$i$i) $123 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i$i$i) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $123 = 0;
 } else $123 = $$pre$i$i$i; else $123 = $$pre$i$i$i;
 $124 = ($123 | 0) == 0;
 do if (!$$pre$i3$i$i) label = 41; else {
  if ((HEAP32[$$pre$i3$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 41;
   break;
  }
  if (!$124) label = 42;
 } while (0);
 if ((label | 0) == 41) if ($124) label = 42;
 if ((label | 0) == 42) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i33 = 0, $$0$in = 0, $$023 = 0, $$023$in = 0, $$2 = 0, $$pre$i3$i$i30 = 0, $$pre$i3$i$i43 = 0, $100 = 0, $102 = 0, $112 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $147 = 0, $148 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $33 = 0, $35 = 0, $45 = 0, $47 = 0, $5 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $70 = 0, $82 = 0, $83 = 0, $84 = 0, $96 = 0, label = 0;
 $5 = HEAP32[$0 >> 2] | 0;
 do if (!$5) $17 = 0; else if ((HEAP32[$5 + 12 >> 2] | 0) == (HEAP32[$5 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 255]($5) | 0) == -1) {
  HEAP32[$0 >> 2] = 0;
  $17 = 0;
  break;
 } else {
  $17 = HEAP32[$0 >> 2] | 0;
  break;
 } else $17 = $5; while (0);
 $18 = ($17 | 0) == 0;
 $19 = HEAP32[$1 >> 2] | 0;
 do if (!$19) label = 11; else {
  if ((HEAP32[$19 + 12 >> 2] | 0) == (HEAP32[$19 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   label = 11;
   break;
  }
  if ($18) {
   $162 = $19;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($18) label = 12; else {
  $162 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) {
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 6;
  $$2 = 0;
 } else if ((label | 0) == 13) {
  $33 = HEAP32[$0 >> 2] | 0;
  $35 = HEAP32[$33 + 12 >> 2] | 0;
  if (($35 | 0) == (HEAP32[$33 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] & 255]($33) | 0; else $$0$i$i = HEAPU8[$35 >> 0] | 0;
  $45 = $$0$i$i & 255;
  if ($45 << 24 >> 24 > -1) {
   $47 = $3 + 8 | 0;
   if (HEAP16[(HEAP32[$47 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 2048) {
    $59 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 63]($3, $45, 0) | 0) << 24 >> 24;
    $60 = HEAP32[$0 >> 2] | 0;
    $61 = $60 + 12 | 0;
    $62 = HEAP32[$61 >> 2] | 0;
    if (($62 | 0) == (HEAP32[$60 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 40 >> 2] & 255]($60) | 0;
     $$0$in = $59;
     $$023$in = $4;
     $$pre$i3$i$i30 = $162;
     $84 = $162;
    } else {
     HEAP32[$61 >> 2] = $62 + 1;
     $$0$in = $59;
     $$023$in = $4;
     $$pre$i3$i$i30 = $162;
     $84 = $162;
    }
    while (1) {
     $$0 = $$0$in + -48 | 0;
     $$023 = $$023$in + -1 | 0;
     $70 = HEAP32[$0 >> 2] | 0;
     do if (!$70) $82 = 0; else if ((HEAP32[$70 + 12 >> 2] | 0) == (HEAP32[$70 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$70 >> 2] | 0) + 36 >> 2] & 255]($70) | 0) == -1) {
      HEAP32[$0 >> 2] = 0;
      $82 = 0;
      break;
     } else {
      $82 = HEAP32[$0 >> 2] | 0;
      break;
     } else $82 = $70; while (0);
     $83 = ($82 | 0) == 0;
     if (!$84) {
      $$pre$i3$i$i43 = $$pre$i3$i$i30;
      $96 = 0;
     } else if ((HEAP32[$84 + 12 >> 2] | 0) == (HEAP32[$84 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$84 >> 2] | 0) + 36 >> 2] & 255]($84) | 0) == -1) {
      HEAP32[$1 >> 2] = 0;
      $$pre$i3$i$i43 = 0;
      $96 = 0;
     } else {
      $$pre$i3$i$i43 = $$pre$i3$i$i30;
      $96 = $$pre$i3$i$i30;
     } else {
      $$pre$i3$i$i43 = $$pre$i3$i$i30;
      $96 = $84;
     }
     $100 = HEAP32[$0 >> 2] | 0;
     if (!(($$023$in | 0) > 1 & ($83 ^ ($96 | 0) == 0))) break;
     $102 = HEAP32[$100 + 12 >> 2] | 0;
     if (($102 | 0) == (HEAP32[$100 + 16 >> 2] | 0)) $$0$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$100 >> 2] | 0) + 36 >> 2] & 255]($100) | 0; else $$0$i$i33 = HEAPU8[$102 >> 0] | 0;
     $112 = $$0$i$i33 & 255;
     if ($112 << 24 >> 24 <= -1) {
      $$2 = $$0;
      break L16;
     }
     if (!(HEAP16[(HEAP32[$47 >> 2] | 0) + ($$0$i$i33 << 24 >> 24 << 1) >> 1] & 2048)) {
      $$2 = $$0;
      break L16;
     }
     $125 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 63]($3, $112, 0) | 0) << 24 >> 24) + ($$0 * 10 | 0) | 0;
     $126 = HEAP32[$0 >> 2] | 0;
     $127 = $126 + 12 | 0;
     $128 = HEAP32[$127 >> 2] | 0;
     if (($128 | 0) == (HEAP32[$126 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$126 >> 2] | 0) + 40 >> 2] & 255]($126) | 0;
      $$0$in = $125;
      $$023$in = $$023;
      $$pre$i3$i$i30 = $$pre$i3$i$i43;
      $84 = $96;
      continue;
     } else {
      HEAP32[$127 >> 2] = $128 + 1;
      $$0$in = $125;
      $$023$in = $$023;
      $$pre$i3$i$i30 = $$pre$i3$i$i43;
      $84 = $96;
      continue;
     }
    }
    do if (!$100) $147 = 0; else if ((HEAP32[$100 + 12 >> 2] | 0) == (HEAP32[$100 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$100 >> 2] | 0) + 36 >> 2] & 255]($100) | 0) == -1) {
     HEAP32[$0 >> 2] = 0;
     $147 = 0;
     break;
    } else {
     $147 = HEAP32[$0 >> 2] | 0;
     break;
    } else $147 = $100; while (0);
    $148 = ($147 | 0) == 0;
    do if (!$$pre$i3$i$i43) label = 50; else {
     if ((HEAP32[$$pre$i3$i$i43 + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i43 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i43 >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i43) | 0) == -1) {
      HEAP32[$1 >> 2] = 0;
      label = 50;
      break;
     }
     if ($148) {
      $$2 = $$0;
      break L16;
     }
    } while (0);
    if ((label | 0) == 50) if (!$148) {
     $$2 = $$0;
     break;
    }
    HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 2;
    $$2 = $$0;
    break;
   }
  }
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 4;
  $$2 = 0;
 } while (0);
 return $$2 | 0;
}

function __ZN10CGameSetup20LoadUnitRestrictionsERK9TdfParser($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$098 = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $24 = 0, $26 = 0, $27 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 80 | 0;
 $3 = sp + 76 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 52 | 0;
 $6 = sp + 40 | 0;
 $7 = sp + 28 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 91299, 1);
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 81753, 20);
 __ZNK9TdfParser6GetDefIiEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($1, $3, $2, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 if ((HEAP32[$3 >> 2] | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $10 = $6 + 11 | 0;
 $11 = $6 + 11 | 0;
 $12 = $0 + 272 | 0;
 $13 = $0 + 288 | 0;
 $14 = $0 + 276 | 0;
 $$pre$i = $0 + 280 | 0;
 $$098 = 0;
 do {
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, 90922, 2);
  $18 = (HEAP8[$10 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6;
  HEAP32[$vararg_buffer >> 2] = $$098;
  _snprintf($2, 64, $18, $vararg_buffer) | 0;
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, $2, _strlen($2) | 0);
  $20 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($5, 0, 81774) | 0;
  HEAP32[$4 >> 2] = HEAP32[$20 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
  HEAP32[$20 >> 2] = 0;
  HEAP32[$20 + 4 >> 2] = 0;
  HEAP32[$20 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, 90922, 2);
  $24 = (HEAP8[$11 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6;
  HEAP32[$vararg_buffer1 >> 2] = $$098;
  _snprintf($2, 64, $24, $vararg_buffer1) | 0;
  HEAP32[$vararg_buffer >> 2] = 0;
  HEAP32[$vararg_buffer + 4 >> 2] = 0;
  HEAP32[$vararg_buffer + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer, $2, _strlen($2) | 0);
  $26 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($vararg_buffer, 0, 81793) | 0;
  HEAP32[$5 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$5 + 4 >> 2] = HEAP32[$26 + 4 >> 2];
  HEAP32[$5 + 8 >> 2] = HEAP32[$26 + 8 >> 2];
  HEAP32[$26 >> 2] = 0;
  HEAP32[$26 + 4 >> 2] = 0;
  HEAP32[$26 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  HEAP32[$vararg_buffer1 >> 2] = 0;
  HEAP32[$vararg_buffer1 + 4 >> 2] = 0;
  HEAP32[$vararg_buffer1 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($vararg_buffer1, 91299, 1);
  __ZNK9TdfParser6GetDefIiEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($1, $2, $vararg_buffer1, $5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer1);
  $27 = HEAP32[$2 >> 2] | 0;
  HEAP32[$7 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($7, 114224, 0);
  __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($6 | 0, $1 | 0, $7 | 0, $4 | 0);
  __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiN6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($12, (HEAP32[$13 >> 2] | 0) + 1 | 0);
  $30 = __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiN6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE16find_or_allocateERKS7_($12, $6) | 0;
  $32 = (HEAP32[$14 >> 2] | 0) + $30 | 0;
  if ((HEAP8[$32 >> 0] | 0) != 2) {
   HEAP8[$32 >> 0] = 2;
   $35 = HEAP32[$$pre$i >> 2] | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($35 + ($30 << 4) | 0, $6);
   HEAP32[$35 + ($30 << 4) + 12 >> 2] = 0;
   HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 1;
  }
  HEAP32[(HEAP32[$$pre$i >> 2] | 0) + ($30 << 4) + 12 >> 2] = $27;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $$098 = $$098 + 1 | 0;
 } while (($$098 | 0) < (HEAP32[$3 >> 2] | 0));
 STACKTOP = sp;
 return;
}

function __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$05$i$i = 0, $$05$i$i$i$i$i = 0, $$2 = 0, $$sroa$051$0 = 0, $$sroa$speculated$i$i$i$i = 0, $$sroa$speculated$i$i$i$i22 = 0, $$sroa$speculated$i$i$i$i27 = 0, $$sroa$speculated$i$i$i$i33 = 0, $10 = 0, $101 = 0, $108 = 0, $11 = 0, $15 = 0, $17 = 0, $18 = 0, $22 = 0, $23 = 0, $29 = 0, $35 = 0, $38 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $52 = 0, $54 = 0, $55 = 0, $59 = 0, $66 = 0, $7 = 0, $72 = 0, $8 = 0, $81 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $90 = 0, $94 = 0, $96 = 0, $97 = 0, label = 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $7 = $5;
 do if (($5 | 0) != ($4 | 0)) {
  $8 = $5 + 16 | 0;
  $10 = HEAP8[$3 + 11 >> 0] | 0;
  $11 = $10 << 24 >> 24 < 0;
  $15 = $11 ? HEAP32[$3 + 4 >> 2] | 0 : $10 & 255;
  $17 = HEAP8[$8 + 11 >> 0] | 0;
  $18 = $17 << 24 >> 24 < 0;
  $22 = $18 ? HEAP32[$5 + 20 >> 2] | 0 : $17 & 255;
  $23 = $22 >>> 0 < $15 >>> 0;
  $$sroa$speculated$i$i$i$i33 = $23 ? $22 : $15;
  if (!$$sroa$speculated$i$i$i$i33) label = 4; else {
   $29 = _memcmp($11 ? HEAP32[$3 >> 2] | 0 : $3, $18 ? HEAP32[$8 >> 2] | 0 : $8, $$sroa$speculated$i$i$i$i33) | 0;
   if (!$29) label = 4; else if (($29 | 0) < 0) break;
  }
  if ((label | 0) == 4) if ($15 >>> 0 < $22 >>> 0) break;
  $$sroa$speculated$i$i$i$i22 = $15 >>> 0 < $22 >>> 0 ? $15 : $22;
  if (!$$sroa$speculated$i$i$i$i22) label = 20; else {
   $81 = _memcmp($18 ? HEAP32[$8 >> 2] | 0 : $8, $11 ? HEAP32[$3 >> 2] | 0 : $3, $$sroa$speculated$i$i$i$i22) | 0;
   if (!$81) label = 20; else if (($81 | 0) >= 0) label = 34;
  }
  if ((label | 0) == 20) if (!$23) label = 34;
  if ((label | 0) == 34) {
   HEAP32[$2 >> 2] = $7;
   $$2 = $2;
   return $$2 | 0;
  }
  $84 = $5 + 4 | 0;
  $85 = HEAP32[$84 >> 2] | 0;
  $86 = ($85 | 0) == 0;
  if ($86) {
   $$0$i$i$i$i$i = $5;
   while (1) {
    $90 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$90 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$05$i$i$i$i$i = $90;
     break;
    } else $$0$i$i$i$i$i = $90;
   }
  } else {
   $$0$i$i$i$i$i$i = $85;
   while (1) {
    $87 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$87) {
     $$05$i$i$i$i$i = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $87;
   }
  }
  do if (($$05$i$i$i$i$i | 0) != ($4 | 0)) {
   $94 = $$05$i$i$i$i$i + 16 | 0;
   $96 = HEAP8[$94 + 11 >> 0] | 0;
   $97 = $96 << 24 >> 24 < 0;
   $101 = $97 ? HEAP32[$$05$i$i$i$i$i + 20 >> 2] | 0 : $96 & 255;
   $$sroa$speculated$i$i$i$i = $101 >>> 0 < $15 >>> 0 ? $101 : $15;
   if (!$$sroa$speculated$i$i$i$i) label = 28; else {
    $108 = _memcmp($11 ? HEAP32[$3 >> 2] | 0 : $3, $97 ? HEAP32[$94 >> 2] | 0 : $94, $$sroa$speculated$i$i$i$i) | 0;
    if (!$108) label = 28; else if (($108 | 0) < 0) break;
   }
   if ((label | 0) == 28) if ($15 >>> 0 < $101 >>> 0) break;
   $$2 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($0, $2, $3) | 0;
   return $$2 | 0;
  } while (0);
  if ($86) {
   HEAP32[$2 >> 2] = $5;
   $$2 = $84;
   return $$2 | 0;
  } else {
   HEAP32[$2 >> 2] = $$05$i$i$i$i$i;
   $$2 = $$05$i$i$i$i$i;
   return $$2 | 0;
  }
 } while (0);
 do if (($5 | 0) == (HEAP32[$0 >> 2] | 0)) $$sroa$051$0 = $7; else {
  $35 = HEAP32[$5 >> 2] | 0;
  if (!$35) {
   $$0$i$i = $5;
   while (1) {
    $41 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $41; else {
     $$05$i$i = $41;
     break;
    }
   }
  } else {
   $$0$i$i$i = $35;
   while (1) {
    $38 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$38) {
     $$05$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $38;
   }
  }
  $44 = $$05$i$i;
  $45 = $$05$i$i + 16 | 0;
  $47 = HEAP8[$45 + 11 >> 0] | 0;
  $48 = $47 << 24 >> 24 < 0;
  $52 = $48 ? HEAP32[$$05$i$i + 20 >> 2] | 0 : $47 & 255;
  $54 = HEAP8[$3 + 11 >> 0] | 0;
  $55 = $54 << 24 >> 24 < 0;
  $59 = $55 ? HEAP32[$3 + 4 >> 2] | 0 : $54 & 255;
  $$sroa$speculated$i$i$i$i27 = $59 >>> 0 < $52 >>> 0 ? $59 : $52;
  if (!$$sroa$speculated$i$i$i$i27) label = 12; else {
   $66 = _memcmp($48 ? HEAP32[$45 >> 2] | 0 : $45, $55 ? HEAP32[$3 >> 2] | 0 : $3, $$sroa$speculated$i$i$i$i27) | 0;
   if (!$66) label = 12; else if (($66 | 0) < 0) {
    $$sroa$051$0 = $44;
    break;
   }
  }
  if ((label | 0) == 12) if ($52 >>> 0 < $59 >>> 0) {
   $$sroa$051$0 = $44;
   break;
  }
  $$2 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($0, $2, $3) | 0;
  return $$2 | 0;
 } while (0);
 if (!(HEAP32[$5 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $5;
  $$2 = $5;
  return $$2 | 0;
 } else {
  $72 = $$sroa$051$0;
  HEAP32[$2 >> 2] = $72;
  $$2 = $72 + 4 | 0;
  return $$2 | 0;
 }
 return 0;
}

function __ZL10assignmentP8LexStateP10LHS_assigni($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$$i = 0, $$0$i33$lcssa = 0, $$0$i3334 = 0, $$0221$i = 0, $$03$i = 0, $$1$i = 0, $$2$i = 0, $$idx32$val = 0, $$pre$phi36Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $13 = 0, $14 = 0, $16 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $3 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $47 = 0, $5 = 0, $52 = 0, $55 = 0, $60 = 0, $62 = 0, $66 = 0, $67 = 0, $69 = 0, $75 = 0, $78 = 0, $8 = 0, $82 = 0, $85 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = sp + 56 | 0;
 $4 = sp + 32 | 0;
 $5 = $1 + 4 | 0;
 if (((HEAP32[$5 >> 2] | 0) + -6 | 0) >>> 0 >= 4) __Z16luaX_syntaxerrorP8LexStatePKc($0, 87927);
 $8 = $0 + 12 | 0;
 switch (HEAP32[$8 >> 2] | 0) {
 case 44:
  {
   __Z9luaX_nextP8LexState($0);
   HEAP32[$4 >> 2] = $1;
   $10 = $4 + 4 | 0;
   __ZL10primaryexpP8LexStateP7expdesc($0, $10);
   if ((HEAP32[$10 >> 2] | 0) == 6) {
    $$idx32$val = HEAP32[$0 + 28 >> 2] | 0;
    $13 = $$idx32$val + 36 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if ($1 | 0) {
     $16 = $4 + 8 | 0;
     $$0221$i = $1;
     $$03$i = 0;
     while (1) {
      if ((HEAP32[$$0221$i + 4 >> 2] | 0) == 9) {
       $20 = $$0221$i + 8 | 0;
       $22 = HEAP32[$16 >> 2] | 0;
       if ((HEAP32[$20 >> 2] | 0) == ($22 | 0)) {
        HEAP32[$20 >> 2] = $14;
        $$1$i = 1;
        $27 = HEAP32[$16 >> 2] | 0;
       } else {
        $$1$i = $$03$i;
        $27 = $22;
       }
       $24 = $$0221$i + 12 | 0;
       if ((HEAP32[$24 >> 2] | 0) == ($27 | 0)) {
        HEAP32[$24 >> 2] = $14;
        $$2$i = 1;
       } else $$2$i = $$1$i;
      } else $$2$i = $$03$i;
      $$0221$i = HEAP32[$$0221$i >> 2] | 0;
      if (!$$0221$i) break; else $$03$i = $$2$i;
     }
     if ($$2$i | 0) {
      __Z12luaK_codeABCP9FuncState6OpCodeiii($$idx32$val, 0, HEAP32[$13 >> 2] | 0, HEAP32[$16 >> 2] | 0, 0) | 0;
      __Z16luaK_reserveregsP9FuncStatei($$idx32$val, 1);
     }
    }
   }
   $38 = 200 - (HEAPU16[(HEAP32[$0 + 32 >> 2] | 0) + 52 >> 1] | 0) | 0;
   $40 = $0 + 28 | 0;
   if (($38 | 0) < ($2 | 0)) {
    $41 = HEAP32[$40 >> 2] | 0;
    $44 = HEAP32[(HEAP32[$41 >> 2] | 0) + 60 >> 2] | 0;
    $47 = HEAP32[$41 + 16 >> 2] | 0;
    if (!$44) {
     HEAP32[$vararg_buffer >> 2] = $38;
     HEAP32[$vararg_buffer + 4 >> 2] = 87940;
     $52 = __Z16luaO_pushfstringP9lua_StatePKcz($47, 87964, $vararg_buffer) | 0;
    } else {
     HEAP32[$vararg_buffer2 >> 2] = $44;
     HEAP32[$vararg_buffer2 + 4 >> 2] = $38;
     HEAP32[$vararg_buffer2 + 8 >> 2] = 87940;
     $52 = __Z16luaO_pushfstringP9lua_StatePKcz($47, 87998, $vararg_buffer2) | 0;
    }
    __Z13luaX_lexerrorP8LexStatePKci(HEAP32[$41 + 12 >> 2] | 0, $52, 0);
   }
   __ZL10assignmentP8LexStateP10LHS_assigni($0, $4, $2 + 1 | 0);
   $$pre$phi36Z2D = $3;
   $$pre$phiZ2D = $40;
   break;
  }
 case 61:
  {
   label = 22;
   break;
  }
 default:
  {
   $55 = HEAP32[$0 + 32 >> 2] | 0;
   HEAP32[$vararg_buffer7 >> 2] = __Z14luaX_token2strP8LexStatei($0, 61) | 0;
   __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($55, 87798, $vararg_buffer7) | 0);
   label = 22;
  }
 }
 if ((label | 0) == 22) {
  __Z9luaX_nextP8LexState($0);
  __ZL7subexprP8LexStateP7expdescj($0, $3, 0) | 0;
  $60 = $0 + 28 | 0;
  if ((HEAP32[$8 >> 2] | 0) == 44) {
   $$0$i3334 = 1;
   while (1) {
    __Z9luaX_nextP8LexState($0);
    __Z16luaK_exp2nextregP9FuncStateP7expdesc(HEAP32[$60 >> 2] | 0, $3);
    __ZL7subexprP8LexStateP7expdescj($0, $3, 0) | 0;
    $62 = $$0$i3334 + 1 | 0;
    if ((HEAP32[$8 >> 2] | 0) == 44) $$0$i3334 = $62; else {
     $$0$i33$lcssa = $62;
     break;
    }
   }
  } else $$0$i33$lcssa = 1;
  $66 = HEAP32[$60 >> 2] | 0;
  if (($$0$i33$lcssa | 0) == ($2 | 0)) {
   __Z14luaK_setoneretP9FuncStateP7expdesc($66, $3);
   __Z13luaK_storevarP9FuncStateP7expdescS2_(HEAP32[$60 >> 2] | 0, $5, $3);
   STACKTOP = sp;
   return;
  }
  $67 = $2 - $$0$i33$lcssa | 0;
  switch (HEAP32[$3 >> 2] | 0) {
  case 14:
  case 13:
   {
    $69 = $67 + 1 | 0;
    $$$i = ($69 | 0) < 0 ? 0 : $69;
    __Z15luaK_setreturnsP9FuncStateP7expdesci($66, $3, $$$i);
    if (($$$i | 0) > 1) __Z16luaK_reserveregsP9FuncStatei($66, $$$i + -1 | 0);
    break;
   }
  case 0:
   {
    label = 29;
    break;
   }
  default:
   {
    __Z16luaK_exp2nextregP9FuncStateP7expdesc($66, $3);
    label = 29;
   }
  }
  if ((label | 0) == 29) if (($67 | 0) > 0) {
   $75 = HEAP32[$66 + 36 >> 2] | 0;
   __Z16luaK_reserveregsP9FuncStatei($66, $67);
   __Z8luaK_nilP9FuncStateii($66, $75, $67);
  }
  if (($$0$i33$lcssa | 0) > ($2 | 0)) {
   $78 = (HEAP32[$60 >> 2] | 0) + 36 | 0;
   HEAP32[$78 >> 2] = (HEAP32[$78 >> 2] | 0) + $67;
   $$pre$phi36Z2D = $3;
   $$pre$phiZ2D = $60;
  } else {
   $$pre$phi36Z2D = $3;
   $$pre$phiZ2D = $60;
  }
 }
 $82 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $85 = (HEAP32[$82 + 36 >> 2] | 0) + -1 | 0;
 HEAP32[$3 + 12 >> 2] = -1;
 HEAP32[$3 + 16 >> 2] = -1;
 HEAP32[$$pre$phi36Z2D >> 2] = 12;
 HEAP32[$3 + 4 >> 2] = $85;
 __Z13luaK_storevarP9FuncStateP7expdescS2_($82, $5, $3);
 STACKTOP = sp;
 return;
}

function __ZN6google12_GLOBAL__N_114TryParseLockedEPKNS0_15CommandLineFlagEPNS0_9FlagValueEPKcPNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$028 = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx29$val = 0, $$idx30$val = 0, $$idx31$val$idx$val = 0, $$idx32 = 0, $$idx4$val$i = 0, $100 = 0, $25 = 0, $33 = 0, $4 = 0, $5 = 0, $54 = 0, $6 = 0, $67 = 0, $72 = 0, $74 = 0, $79 = 0, $84 = 0, $86 = 0, $vararg_buffer = 0, $vararg_buffer4 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer9 = sp + 32 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer = sp;
 $4 = sp + 52 | 0;
 $5 = sp + 40 | 0;
 $$idx32 = $1 + 4 | 0;
 $6 = __ZNK6google12_GLOBAL__N_19FlagValue3NewEv(HEAP8[$$idx32 >> 0] | 0) | 0;
 if (!(__ZN6google12_GLOBAL__N_19FlagValue9ParseFromEPKc($6, $2) | 0)) {
  if ($3 | 0) {
   $$idx31$val$idx$val = HEAP8[(HEAP32[$0 + 16 >> 2] | 0) + 4 >> 0] | 0;
   $$idx30$val = HEAP32[$0 >> 2] | 0;
   HEAP32[$vararg_buffer >> 2] = 90192;
   HEAP32[$vararg_buffer + 4 >> 2] = $2;
   HEAP32[$vararg_buffer + 8 >> 2] = $$idx31$val$idx$val << 24 >> 24 > 6 ? 114224 : 90200 + (($$idx31$val$idx$val << 24 >> 24) * 7 | 0) | 0;
   HEAP32[$vararg_buffer + 12 >> 2] = $$idx30$val;
   __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($3, 91305, $vararg_buffer);
  }
  if (!$6) {
   $$028 = 0;
   STACKTOP = sp;
   return $$028 | 0;
  }
  __ZN6google12_GLOBAL__N_19FlagValueD2Ev($6);
  __ZdlPv($6);
  $$028 = 0;
  STACKTOP = sp;
  return $$028 | 0;
 }
 $$idx4$val$i = HEAP32[$0 + 24 >> 2] | 0;
 L11 : do if ($$idx4$val$i | 0) {
  $$idx$val$i = HEAP32[$0 >> 2] | 0;
  switch (HEAP8[$6 + 4 >> 0] | 0) {
  case 0:
   {
    if (FUNCTION_TABLE_iii[$$idx4$val$i & 31]($$idx$val$i, (HEAP8[HEAP32[$6 >> 2] >> 0] | 0) != 0) | 0) break L11;
    break;
   }
  case 1:
   {
    if (FUNCTION_TABLE_iii[$$idx4$val$i & 31]($$idx$val$i, HEAP32[HEAP32[$6 >> 2] >> 2] | 0) | 0) break L11;
    break;
   }
  case 2:
   {
    if (FUNCTION_TABLE_iii[$$idx4$val$i & 31]($$idx$val$i, HEAP32[HEAP32[$6 >> 2] >> 2] | 0) | 0) break L11;
    break;
   }
  case 3:
   {
    $25 = HEAP32[$6 >> 2] | 0;
    if (FUNCTION_TABLE_iiii[$$idx4$val$i & 63]($$idx$val$i, HEAP32[$25 >> 2] | 0, HEAP32[$25 + 4 >> 2] | 0) | 0) break L11;
    break;
   }
  case 4:
   {
    $33 = HEAP32[$6 >> 2] | 0;
    if (FUNCTION_TABLE_iiii[$$idx4$val$i & 63]($$idx$val$i, HEAP32[$33 >> 2] | 0, HEAP32[$33 + 4 >> 2] | 0) | 0) break L11;
    break;
   }
  case 5:
   {
    if (FUNCTION_TABLE_iid[$$idx4$val$i & 0]($$idx$val$i, +HEAPF64[HEAP32[$6 >> 2] >> 3]) | 0) break L11;
    break;
   }
  case 6:
   {
    if (FUNCTION_TABLE_iii[$$idx4$val$i & 31]($$idx$val$i, HEAP32[$6 >> 2] | 0) | 0) break L11;
    break;
   }
  default:
   {}
  }
  if ($3 | 0) {
   __ZNK6google12_GLOBAL__N_19FlagValue8ToStringEv($4, $6);
   $54 = (HEAP8[$4 + 11 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4;
   $$idx$val = HEAP32[$0 >> 2] | 0;
   HEAP32[$vararg_buffer4 >> 2] = 90192;
   HEAP32[$vararg_buffer4 + 4 >> 2] = $54;
   HEAP32[$vararg_buffer4 + 8 >> 2] = $$idx$val;
   __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($3, 91354, $vararg_buffer4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  }
  __ZN6google12_GLOBAL__N_19FlagValueD2Ev($6);
  __ZdlPv($6);
  $$028 = 0;
  STACKTOP = sp;
  return $$028 | 0;
 } while (0);
 switch (HEAP8[$$idx32 >> 0] | 0) {
 case 0:
  {
   HEAP8[HEAP32[$1 >> 2] >> 0] = HEAP8[HEAP32[$6 >> 2] >> 0] | 0;
   break;
  }
 case 1:
  {
   HEAP32[HEAP32[$1 >> 2] >> 2] = HEAP32[HEAP32[$6 >> 2] >> 2];
   break;
  }
 case 2:
  {
   HEAP32[HEAP32[$1 >> 2] >> 2] = HEAP32[HEAP32[$6 >> 2] >> 2];
   break;
  }
 case 3:
  {
   $67 = HEAP32[$6 >> 2] | 0;
   $72 = HEAP32[$67 + 4 >> 2] | 0;
   $74 = HEAP32[$1 >> 2] | 0;
   HEAP32[$74 >> 2] = HEAP32[$67 >> 2];
   HEAP32[$74 + 4 >> 2] = $72;
   break;
  }
 case 4:
  {
   $79 = HEAP32[$6 >> 2] | 0;
   $84 = HEAP32[$79 + 4 >> 2] | 0;
   $86 = HEAP32[$1 >> 2] | 0;
   HEAP32[$86 >> 2] = HEAP32[$79 >> 2];
   HEAP32[$86 + 4 >> 2] = $84;
   break;
  }
 case 5:
  {
   HEAPF64[HEAP32[$1 >> 2] >> 3] = +HEAPF64[HEAP32[$6 >> 2] >> 3];
   break;
  }
 case 6:
  {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(HEAP32[$1 >> 2] | 0, HEAP32[$6 >> 2] | 0) | 0;
   break;
  }
 default:
  {}
 }
 if ($3 | 0) {
  $$idx29$val = HEAP32[$0 >> 2] | 0;
  __ZNK6google12_GLOBAL__N_19FlagValue8ToStringEv($5, $1);
  $100 = (HEAP8[$5 + 11 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5;
  HEAP32[$vararg_buffer9 >> 2] = $$idx29$val;
  HEAP32[$vararg_buffer9 + 4 >> 2] = $100;
  __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($3, 91407, $vararg_buffer9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 }
 if (!$6) {
  $$028 = 1;
  STACKTOP = sp;
  return $$028 | 0;
 }
 __ZN6google12_GLOBAL__N_19FlagValueD2Ev($6);
 __ZdlPv($6);
 $$028 = 1;
 STACKTOP = sp;
 return $$028 | 0;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i40 = 0, $$0$i$i42 = 0, $$037 = 0, $$038 = 0, $$byval_copy = 0, $$pn = 0, $$sroa$050$0 = 0, $$sroa$058$0 = 0, $$sroa$067$0 = 0, $10 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $114 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $49 = 0, $50 = 0, $56 = 0, $6 = 0, $64 = 0, $7 = 0, $75 = 0, $8 = 0, $83 = 0, $9 = 0, $91 = 0, $94 = 0, $95 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $6 = sp + 896 | 0;
 $7 = sp + 888 | 0;
 $8 = sp + 488 | 0;
 $9 = sp + 480 | 0;
 $10 = sp + 892 | 0;
 $11 = sp + 476 | 0;
 $12 = sp + 472 | 0;
 $13 = sp + 460 | 0;
 $14 = sp + 448 | 0;
 $15 = sp + 436 | 0;
 $16 = sp + 432 | 0;
 $17 = sp + 32 | 0;
 $18 = sp + 24 | 0;
 $19 = sp + 16 | 0;
 $20 = sp + 20 | 0;
 HEAP32[$7 >> 2] = $6;
 HEAPF64[$$byval_copy >> 3] = $5;
 $21 = _snprintf($6, 100, 104351, $$byval_copy) | 0;
 if ($21 >>> 0 > 99) {
  $23 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $5;
  $24 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $23, 104351, $vararg_buffer1) | 0;
  $25 = HEAP32[$7 >> 2] | 0;
  if (!$25) $114 = HEAP32[$7 >> 2] | 0; else $114 = $25;
  $29 = _malloc($24 << 2) | 0;
  $30 = $29;
  if (!$29) {
   $$0 = 0;
   $$038 = $24;
   $$sroa$058$0 = $30;
   $$sroa$067$0 = $114;
  } else {
   $$0 = $29;
   $$038 = $24;
   $$sroa$058$0 = $30;
   $$sroa$067$0 = $114;
  }
 } else {
  $$0 = $8;
  $$038 = $21;
  $$sroa$058$0 = 0;
  $$sroa$067$0 = 0;
 }
 HEAP32[$9 >> 2] = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 $33 = __ZNKSt3__26locale9use_facetERNS0_2idE($9, 110200) | 0;
 $34 = HEAP32[$7 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$33 >> 2] | 0) + 48 >> 2] & 15]($33, $34, $34 + $$038 | 0, $$0) | 0;
 if (!$$038) $49 = 0; else $49 = (HEAP8[HEAP32[$7 >> 2] >> 0] | 0) == 45;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$13 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $$0$i$i40 = 0;
 while (1) {
  if (($$0$i$i40 | 0) == 3) break;
  HEAP32[$14 + ($$0$i$i40 << 2) >> 2] = 0;
  $$0$i$i40 = $$0$i$i40 + 1 | 0;
 }
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $$0$i$i42 = 0;
 while (1) {
  if (($$0$i$i42 | 0) == 3) break;
  HEAP32[$15 + ($$0$i$i42 << 2) >> 2] = 0;
  $$0$i$i42 = $$0$i$i42 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2, $49, $9, $10, $11, $12, $13, $14, $15, $16);
 $50 = HEAP32[$16 >> 2] | 0;
 if (($$038 | 0) > ($50 | 0)) {
  $56 = HEAP8[$15 + 8 + 3 >> 0] | 0;
  $64 = HEAP8[$14 + 8 + 3 >> 0] | 0;
  $$pn = ($56 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $56 & 255) + ($$038 - $50 << 1 | 1) + ($64 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $64 & 255) | 0;
 } else {
  $75 = HEAP8[$15 + 8 + 3 >> 0] | 0;
  $83 = HEAP8[$14 + 8 + 3 >> 0] | 0;
  $$pn = ($75 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $75 & 255) + 2 + ($83 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $83 & 255) | 0;
 }
 $91 = $$pn + $50 | 0;
 if ($91 >>> 0 > 100) {
  $94 = _malloc($91 << 2) | 0;
  $95 = $94;
  if (!$94) {
   $$037 = 0;
   $$sroa$050$0 = $95;
   $102 = HEAP32[$16 >> 2] | 0;
  } else {
   $$037 = $94;
   $$sroa$050$0 = $95;
   $102 = $50;
  }
 } else {
  $$037 = $17;
  $$sroa$050$0 = 0;
  $102 = $50;
 }
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$037, $18, $19, HEAP32[$3 + 4 >> 2] | 0, $$0, $$0 + ($$038 << 2) | 0, $33, $49, $10, HEAP32[$11 >> 2] | 0, HEAP32[$12 >> 2] | 0, $13, $14, $15, $102);
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 $104 = HEAP32[$18 >> 2] | 0;
 $105 = HEAP32[$19 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$20 >> 2];
 $106 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $104, $105, $3, $4) | 0;
 if ($$sroa$050$0 | 0) _free($$sroa$050$0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($15);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$9 >> 2] | 0) | 0;
 if ($$sroa$058$0 | 0) _free($$sroa$058$0);
 if ($$sroa$067$0 | 0) _free($$sroa$067$0);
 STACKTOP = sp;
 return $106 | 0;
}

function __ZNSt3__216__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1$lcssa = 0, $$189 = 0, $$phi$trans$insert = 0, $$pre$phi95Z2D = 0, $$pre$phiZ2D = 0, $$sroa$speculated = 0, $$sroa$speculated61 = 0, $$sroa$speculated73 = 0, $100 = 0, $105 = 0, $106 = 0, $114 = 0, $119 = 0, $12 = 0, $123 = 0, $126 = 0, $128 = 0, $13 = 0, $136 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $17 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $35 = 0, $38 = 0, $42 = 0, $47 = 0, $5 = 0, $51 = 0, $54 = 0, $55 = 0, $56 = 0, $65 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $85 = 0, $89 = 0, $93 = 0, $scevgep = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $12 = HEAP32[$1 + 4 >> 2] | 0;
 $13 = ((HEAP32[$2 >> 2] | 0) - $5 << 3) + (HEAP32[$2 + 4 >> 2] | 0) - $12 | 0;
 $15 = $5;
 if (($13 | 0) <= 0) {
  $$pre$phi95Z2D = $3 + 4 | 0;
  $139 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $139;
  $140 = $0 + 4 | 0;
  $141 = HEAP32[$$pre$phi95Z2D >> 2] | 0;
  HEAP32[$140 >> 2] = $141;
  return;
 }
 if (!$12) {
  $$phi$trans$insert = $3 + 4 | 0;
  $$0 = $13;
  $$pre$phiZ2D = $$phi$trans$insert;
  $100 = $15;
  $70 = HEAP32[$$phi$trans$insert >> 2] | 0;
 } else {
  $17 = 32 - $12 | 0;
  $$sroa$speculated73 = ($13 | 0) < ($17 | 0) ? $13 : $17;
  $25 = -1 >>> ($17 - $$sroa$speculated73 | 0) & -1 << $12 & HEAP32[$15 >> 2];
  $26 = $3 + 4 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  $28 = 32 - $27 | 0;
  $$sroa$speculated61 = $28 >>> 0 < $$sroa$speculated73 >>> 0 ? $28 : $$sroa$speculated73;
  $35 = HEAP32[$3 >> 2] | 0;
  HEAP32[$35 >> 2] = HEAP32[$35 >> 2] & ~(-1 >>> ($28 - $$sroa$speculated61 | 0) & -1 << $27);
  $38 = HEAP32[$26 >> 2] | 0;
  if ($38 >>> 0 > $12 >>> 0) {
   $42 = HEAP32[$3 >> 2] | 0;
   HEAP32[$42 >> 2] = HEAP32[$42 >> 2] | $25 << $38 - $12;
  } else {
   $47 = HEAP32[$3 >> 2] | 0;
   HEAP32[$47 >> 2] = HEAP32[$47 >> 2] | $25 >>> ($12 - $38 | 0);
  }
  $51 = (HEAP32[$26 >> 2] | 0) + $$sroa$speculated61 | 0;
  $54 = (HEAP32[$3 >> 2] | 0) + ($51 >>> 5 << 2) | 0;
  HEAP32[$3 >> 2] = $54;
  $55 = $51 & 31;
  HEAP32[$26 >> 2] = $55;
  $56 = $$sroa$speculated73 - $$sroa$speculated61 | 0;
  if (($56 | 0) > 0) {
   HEAP32[$54 >> 2] = HEAP32[$54 >> 2] & ~(-1 >>> (32 - $56 | 0));
   $65 = HEAP32[$3 >> 2] | 0;
   HEAP32[$65 >> 2] = HEAP32[$65 >> 2] | $25 >>> ($12 + $$sroa$speculated61 | 0);
   HEAP32[$26 >> 2] = $56;
   $142 = $56;
  } else $142 = $55;
  $68 = $15 + 4 | 0;
  HEAP32[$1 >> 2] = $68;
  $$0 = $13 - $$sroa$speculated73 | 0;
  $$pre$phiZ2D = $26;
  $100 = $68;
  $70 = $142;
 }
 $69 = 32 - $70 | 0;
 $71 = -1 << $70;
 if ($$0 >>> 0 > 31) {
  $73 = ~$71;
  $74 = $$0 + -32 | 0;
  $75 = $74 >>> 5;
  $76 = $75 << 5;
  $77 = $75 + 1 | 0;
  $$189 = $$0;
  $79 = $100;
  while (1) {
   $78 = HEAP32[$79 >> 2] | 0;
   $80 = HEAP32[$3 >> 2] | 0;
   HEAP32[$80 >> 2] = HEAP32[$80 >> 2] & $73;
   $85 = HEAP32[$3 >> 2] | 0;
   HEAP32[$85 >> 2] = HEAP32[$85 >> 2] | $78 << HEAP32[$$pre$phiZ2D >> 2];
   $89 = (HEAP32[$3 >> 2] | 0) + 4 | 0;
   HEAP32[$3 >> 2] = $89;
   HEAP32[$89 >> 2] = HEAP32[$89 >> 2] & $71;
   $93 = HEAP32[$3 >> 2] | 0;
   HEAP32[$93 >> 2] = HEAP32[$93 >> 2] | $78 >>> $69;
   $$189 = $$189 + -32 | 0;
   if ($$189 >>> 0 <= 31) break; else $79 = $79 + 4 | 0;
  }
  $scevgep = $100 + ($77 << 2) | 0;
  HEAP32[$1 >> 2] = $scevgep;
  $$1$lcssa = $74 - $76 | 0;
  $105 = $scevgep;
 } else {
  $$1$lcssa = $$0;
  $105 = $100;
 }
 if (!$$1$lcssa) {
  $$pre$phi95Z2D = $$pre$phiZ2D;
  $139 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $139;
  $140 = $0 + 4 | 0;
  $141 = HEAP32[$$pre$phi95Z2D >> 2] | 0;
  HEAP32[$140 >> 2] = $141;
  return;
 }
 $106 = HEAP32[$105 >> 2] & -1 >>> (32 - $$1$lcssa | 0);
 $$sroa$speculated = ($69 | 0) < ($$1$lcssa | 0) ? $69 : $$1$lcssa;
 $114 = HEAP32[$3 >> 2] | 0;
 HEAP32[$114 >> 2] = HEAP32[$114 >> 2] & ~(-1 << HEAP32[$$pre$phiZ2D >> 2] & -1 >>> ($69 - $$sroa$speculated | 0));
 $119 = HEAP32[$3 >> 2] | 0;
 HEAP32[$119 >> 2] = HEAP32[$119 >> 2] | $106 << HEAP32[$$pre$phiZ2D >> 2];
 $123 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + $$sroa$speculated | 0;
 $126 = (HEAP32[$3 >> 2] | 0) + ($123 >>> 5 << 2) | 0;
 HEAP32[$3 >> 2] = $126;
 HEAP32[$$pre$phiZ2D >> 2] = $123 & 31;
 $128 = $$1$lcssa - $$sroa$speculated | 0;
 if (($128 | 0) <= 0) {
  $$pre$phi95Z2D = $$pre$phiZ2D;
  $139 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $139;
  $140 = $0 + 4 | 0;
  $141 = HEAP32[$$pre$phi95Z2D >> 2] | 0;
  HEAP32[$140 >> 2] = $141;
  return;
 }
 HEAP32[$126 >> 2] = HEAP32[$126 >> 2] & ~(-1 >>> (32 - $128 | 0));
 $136 = HEAP32[$3 >> 2] | 0;
 HEAP32[$136 >> 2] = HEAP32[$136 >> 2] | $106 >>> $$sroa$speculated;
 HEAP32[$$pre$phiZ2D >> 2] = $128;
 $$pre$phi95Z2D = $$pre$phiZ2D;
 $139 = HEAP32[$3 >> 2] | 0;
 HEAP32[$0 >> 2] = $139;
 $140 = $0 + 4 | 0;
 $141 = HEAP32[$$pre$phi95Z2D >> 2] | 0;
 HEAP32[$140 >> 2] = $141;
 return;
}

function __ZL13LowerKeysRealP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02431$i$i7 = 0, $$02530$i$i8 = 0, $$02629$i$i9 = 0, $$sroa$06$0$i$i = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $65 = 0, $66 = 0, $74 = 0, $75 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 __Z15luaL_checkstackP9lua_StateiPKc($0, 8, 83980);
 $5 = __Z10lua_gettopP9lua_State($0) | 0;
 __Z13lua_pushvalueP9lua_Statei($0, $5);
 __Z10lua_rawgetP9lua_Statei($0, $1);
 if (__Z8lua_typeP9lua_Statei($0, -1) | 0) {
  __Z10lua_settopP9lua_Statei($0, -2);
  STACKTOP = sp;
  return;
 }
 __Z13lua_pushvalueP9lua_Statei($0, $5);
 __Z15lua_pushbooleanP9lua_Statei($0, 1);
 __Z10lua_rawsetP9lua_Statei($0, $1);
 __Z10lua_settopP9lua_Statei($0, -2);
 $8 = $5 + 1 | 0;
 __Z15lua_createtableP9lua_Stateii($0, 0, 0);
 __Z11lua_pushnilP9lua_State($0);
 if (__Z8lua_nextP9lua_Statei($0, $5) | 0) {
  $11 = $4 + 11 | 0;
  $12 = $4 + 4 | 0;
  $13 = $2 + 11 | 0;
  $14 = $2 + 4 | 0;
  $15 = $3 + 11 | 0;
  $16 = $3 + 4 | 0;
  do {
   if ((__Z8lua_typeP9lua_Statei($0, -1) | 0) == 5) __ZL13LowerKeysRealP9lua_Statei($0, $1);
   if ((__Z8lua_typeP9lua_Statei($0, -2) | 0) == 4) {
    $21 = __Z13lua_tolstringP9lua_StateiPj($0, -2, 0) | 0;
    HEAP32[$2 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $21, _strlen($21) | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($4, $2);
    $23 = HEAP8[$11 >> 0] | 0;
    $24 = $23 << 24 >> 24 < 0;
    $26 = $24 ? HEAP32[$4 >> 2] | 0 : $4;
    $29 = $24 ? HEAP32[$12 >> 2] | 0 : $23 & 255;
    $30 = $26 + $29 | 0;
    if ($29 | 0) {
     $$sroa$06$0$i$i = $26;
     do {
      HEAP8[$$sroa$06$0$i$i >> 0] = _tolower(HEAP8[$$sroa$06$0$i$i >> 0] | 0) | 0;
      $$sroa$06$0$i$i = $$sroa$06$0$i$i + 1 | 0;
     } while (($$sroa$06$0$i$i | 0) != ($30 | 0));
    };
    HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$3 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    HEAP32[$4 >> 2] = 0;
    HEAP32[$4 + 4 >> 2] = 0;
    HEAP32[$4 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    $38 = HEAP8[$13 >> 0] | 0;
    $39 = $38 << 24 >> 24 < 0;
    $41 = $38 & 255;
    $42 = $39 ? HEAP32[$14 >> 2] | 0 : $41;
    $43 = HEAP8[$15 >> 0] | 0;
    $44 = $43 << 24 >> 24 < 0;
    L18 : do if (($42 | 0) == (($44 ? HEAP32[$16 >> 2] | 0 : $43 & 255) | 0)) {
     $49 = HEAP32[$2 >> 2] | 0;
     $50 = $39 ? $49 : $2;
     $52 = $44 ? HEAP32[$3 >> 2] | 0 : $3;
     $53 = ($42 | 0) == 0;
     if ($39) {
      if ($53) break;
      if (!(_memcmp($50, $52, $42) | 0)) break; else {
       label = 18;
       break;
      }
     }
     if (!$53) if (($49 & 255) << 24 >> 24 == (HEAP8[$52 >> 0] | 0)) {
      $$02431$i$i7 = $41;
      $$02530$i$i8 = $52;
      $$02629$i$i9 = $2;
      while (1) {
       $$02431$i$i7 = $$02431$i$i7 + -1 | 0;
       $$02629$i$i9 = $$02629$i$i9 + 1 | 0;
       if (!$$02431$i$i7) break L18;
       $$02530$i$i8 = $$02530$i$i8 + 1 | 0;
       if ((HEAP8[$$02629$i$i9 >> 0] | 0) != (HEAP8[$$02530$i$i8 >> 0] | 0)) {
        label = 18;
        break;
       }
      }
     } else label = 18;
    } else label = 18; while (0);
    if ((label | 0) == 18) {
     label = 0;
     __Z13lua_pushvalueP9lua_Statei($0, -2);
     __Z11lua_pushnilP9lua_State($0);
     __Z10lua_rawsetP9lua_Statei($0, $5);
     $65 = HEAP8[$15 >> 0] | 0;
     $66 = $65 << 24 >> 24 < 0;
     __Z15lua_pushlstringP9lua_StatePKcj($0, $66 ? HEAP32[$3 >> 2] | 0 : $3, $66 ? HEAP32[$16 >> 2] | 0 : $65 & 255);
     __Z10lua_rawgetP9lua_Statei($0, $5);
     if (!(__Z8lua_typeP9lua_Statei($0, -1) | 0)) {
      $74 = HEAP8[$15 >> 0] | 0;
      $75 = $74 << 24 >> 24 < 0;
      __Z15lua_pushlstringP9lua_StatePKcj($0, $75 ? HEAP32[$3 >> 2] | 0 : $3, $75 ? HEAP32[$16 >> 2] | 0 : $74 & 255);
      __Z13lua_pushvalueP9lua_Statei($0, -3);
      __Z10lua_rawsetP9lua_Statei($0, $8);
     }
     __Z10lua_settopP9lua_Statei($0, -2);
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   }
   __Z10lua_settopP9lua_Statei($0, -2);
  } while ((__Z8lua_nextP9lua_Statei($0, $5) | 0) != 0);
 }
 __Z11lua_pushnilP9lua_State($0);
 if (__Z8lua_nextP9lua_Statei($0, $8) | 0) do {
  __Z13lua_pushvalueP9lua_Statei($0, -2);
  __Z13lua_pushvalueP9lua_Statei($0, -2);
  __Z10lua_rawsetP9lua_Statei($0, $5);
  __Z10lua_settopP9lua_Statei($0, -2);
 } while ((__Z8lua_nextP9lua_Statei($0, $8) | 0) != 0);
 __Z10lua_settopP9lua_Statei($0, -2);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$037 = 0, $$038 = 0, $$byval_copy = 0, $$pn = 0, $$sroa$053$0 = 0, $$sroa$061$0 = 0, $$sroa$070$0 = 0, $10 = 0, $100 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $48 = 0, $49 = 0, $54 = 0, $6 = 0, $61 = 0, $7 = 0, $71 = 0, $78 = 0, $8 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $96 = 0, $98 = 0, $99 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $6 = sp + 284 | 0;
 $7 = sp + 72 | 0;
 $8 = sp + 184 | 0;
 $9 = sp + 68 | 0;
 $10 = sp + 180 | 0;
 $11 = sp + 177 | 0;
 $12 = sp + 176 | 0;
 $13 = sp + 56 | 0;
 $14 = sp + 44 | 0;
 $15 = sp + 32 | 0;
 $16 = sp + 28 | 0;
 $17 = sp + 76 | 0;
 $18 = sp + 24 | 0;
 $19 = sp + 16 | 0;
 $20 = sp + 20 | 0;
 HEAP32[$7 >> 2] = $6;
 HEAPF64[$$byval_copy >> 3] = $5;
 $21 = _snprintf($6, 100, 104351, $$byval_copy) | 0;
 if ($21 >>> 0 > 99) {
  $23 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $5;
  $24 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $23, 104351, $vararg_buffer1) | 0;
  $25 = HEAP32[$7 >> 2] | 0;
  if (!$25) $108 = HEAP32[$7 >> 2] | 0; else $108 = $25;
  $28 = _malloc($24) | 0;
  $29 = $28;
  if (!$28) {
   $$0 = 0;
   $$038 = $24;
   $$sroa$061$0 = $29;
   $$sroa$070$0 = $108;
  } else {
   $$0 = $28;
   $$038 = $24;
   $$sroa$061$0 = $29;
   $$sroa$070$0 = $108;
  }
 } else {
  $$0 = $8;
  $$038 = $21;
  $$sroa$061$0 = 0;
  $$sroa$070$0 = 0;
 }
 HEAP32[$9 >> 2] = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($9, 110168) | 0;
 $33 = HEAP32[$7 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 32 >> 2] & 15]($32, $33, $33 + $$038 | 0, $$0) | 0;
 if (!$$038) $48 = 0; else $48 = (HEAP8[HEAP32[$7 >> 2] >> 0] | 0) == 45;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$13 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $$0$i$i42 = 0;
 while (1) {
  if (($$0$i$i42 | 0) == 3) break;
  HEAP32[$14 + ($$0$i$i42 << 2) >> 2] = 0;
  $$0$i$i42 = $$0$i$i42 + 1 | 0;
 }
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $$0$i$i45 = 0;
 while (1) {
  if (($$0$i$i45 | 0) == 3) break;
  HEAP32[$15 + ($$0$i$i45 << 2) >> 2] = 0;
  $$0$i$i45 = $$0$i$i45 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2, $48, $9, $10, $11, $12, $13, $14, $15, $16);
 $49 = HEAP32[$16 >> 2] | 0;
 if (($$038 | 0) > ($49 | 0)) {
  $54 = HEAP8[$15 + 11 >> 0] | 0;
  $61 = HEAP8[$14 + 11 >> 0] | 0;
  $$pn = ($54 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $54 & 255) + ($$038 - $49 << 1 | 1) + ($61 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $61 & 255) | 0;
 } else {
  $71 = HEAP8[$15 + 11 >> 0] | 0;
  $78 = HEAP8[$14 + 11 >> 0] | 0;
  $$pn = ($71 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $71 & 255) + 2 + ($78 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $78 & 255) | 0;
 }
 $86 = $$pn + $49 | 0;
 if ($86 >>> 0 > 100) {
  $88 = _malloc($86) | 0;
  $89 = $88;
  if (!$88) {
   $$037 = 0;
   $$sroa$053$0 = $89;
   $96 = HEAP32[$16 >> 2] | 0;
  } else {
   $$037 = $88;
   $$sroa$053$0 = $89;
   $96 = $49;
  }
 } else {
  $$037 = $17;
  $$sroa$053$0 = 0;
  $96 = $49;
 }
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$037, $18, $19, HEAP32[$3 + 4 >> 2] | 0, $$0, $$0 + $$038 | 0, $32, $48, $10, HEAP8[$11 >> 0] | 0, HEAP8[$12 >> 0] | 0, $13, $14, $15, $96);
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 $98 = HEAP32[$18 >> 2] | 0;
 $99 = HEAP32[$19 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$20 >> 2];
 $100 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $98, $99, $3, $4) | 0;
 if ($$sroa$053$0 | 0) _free($$sroa$053$0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$9 >> 2] | 0) | 0;
 if ($$sroa$061$0 | 0) _free($$sroa$061$0);
 if ($$sroa$070$0 | 0) _free($$sroa$070$0);
 STACKTOP = sp;
 return $100 | 0;
}

function __ZN9LuaParser7IncludeEP9lua_State($0) {
 $0 = $0 | 0;
 var $$neg65 = 0, $1 = 0, $10 = 0, $13 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $36 = 0, $37 = 0, $4 = 0, $44 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $68 = 0, $69 = 0, $9 = 0, $vararg_buffer1 = 0, $vararg_buffer13 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2368 | 0;
 $vararg_buffer13 = sp + 48 | 0;
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $1 = sp + 1324 | 0;
 $2 = sp + 1312 | 0;
 $3 = sp + 1088 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 1336 | 0;
 $9 = HEAP32[(HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 16 >> 2] | 0) + 12 >> 2] | 0;
 $10 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, 0) | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $10, _strlen($10) | 0);
 if (!(__ZN5LuaIO12IsSimplePathERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1) | 0)) __Z10luaL_errorP9lua_StatePKcz($0, 83458, sp) | 0;
 $13 = $9 + 36 | 0;
 if ((HEAP8[$13 + 11 >> 0] | 0) < 0) $18 = HEAP32[$13 >> 2] | 0; else $18 = $13;
 $19 = __ZL21luaL_SpringOptCStringP9lua_StateiPKcPjPFS2_S0_iS2_S3_EPFS2_S0_iS3_EiS2_($0, 3, $18, 83320) | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, $19, _strlen($19) | 0);
 __ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2 | 0, $3 | 0, $13 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($3 | 0, $1 | 0, $2 | 0);
 if ((HEAP32[$3 + 220 >> 2] | 0) <= -1) {
  HEAP32[$vararg_buffer1 >> 2] = (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
  _snprintf($4, 1024, 83471, $vararg_buffer1) | 0;
  __Z14lua_pushstringP9lua_StatePKc($0, $4);
  __Z9lua_errorP9lua_State($0) | 0;
 };
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 if (!(__ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $4 | 0) | 0)) {
  HEAP32[$vararg_buffer3 >> 2] = (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
  _snprintf($5, 1024, 83500, $vararg_buffer3) | 0;
  __Z14lua_pushstringP9lua_StatePKc($0, $5);
  __Z9lua_errorP9lua_State($0) | 0;
 }
 $36 = HEAP8[$4 + 11 >> 0] | 0;
 $37 = $36 << 24 >> 24 < 0;
 $44 = $1 + 11 | 0;
 $49 = __Z15luaL_loadbufferP9lua_StatePKcjS2_($0, $37 ? HEAP32[$4 >> 2] | 0 : $4, $37 ? HEAP32[$4 + 4 >> 2] | 0 : $36 & 255, (HEAP8[$44 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1) | 0;
 if ($49 | 0) {
  $51 = HEAP8[$44 >> 0] | 0;
  $52 = HEAP32[$1 >> 2] | 0;
  $53 = __Z13lua_tolstringP9lua_StateiPj($0, -1, 0) | 0;
  HEAP32[$vararg_buffer6 >> 2] = $49;
  HEAP32[$vararg_buffer6 + 4 >> 2] = $51 << 24 >> 24 < 0 ? $52 : $1;
  HEAP32[$vararg_buffer6 + 8 >> 2] = $53;
  _snprintf($5, 1024, 83531, $vararg_buffer6) | 0;
  __Z14lua_pushstringP9lua_StatePKc($0, $5);
  __Z9lua_errorP9lua_State($0) | 0;
 }
 if ((__Z8lua_typeP9lua_Statei($0, 2) | 0) == 5) __Z13lua_pushvalueP9lua_Statei($0, 2); else __ZN8LuaUtils18PushCurrentFuncEnvEP9lua_StatePKc($0, 83320);
 if (!(__Z11lua_setfenvP9lua_Statei($0, -2) | 0)) __Z10luaL_errorP9lua_StatePKcz($0, 83551, sp + 40 | 0) | 0;
 $60 = __Z10lua_gettopP9lua_State($0) | 0;
 $61 = __Z9lua_pcallP9lua_Stateiii($0, 0, -1, 0) | 0;
 if (!$61) {
  $68 = __Z10lua_gettopP9lua_State($0) | 0;
  $$neg65 = 1 - $60 | 0;
  $69 = $$neg65 + $68 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  __ZN12CFileHandlerD2Ev($3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return $69 | 0;
 }
 $63 = HEAP8[$44 >> 0] | 0;
 $64 = HEAP32[$1 >> 2] | 0;
 $65 = __Z13lua_tolstringP9lua_StateiPj($0, -1, 0) | 0;
 HEAP32[$vararg_buffer13 >> 2] = $61;
 HEAP32[$vararg_buffer13 + 4 >> 2] = $63 << 24 >> 24 < 0 ? $64 : $1;
 HEAP32[$vararg_buffer13 + 8 >> 2] = $65;
 _snprintf($5, 1024, 83531, $vararg_buffer13) | 0;
 __Z14lua_pushstringP9lua_StatePKc($0, $5);
 __Z9lua_errorP9lua_State($0) | 0;
 $68 = __Z10lua_gettopP9lua_State($0) | 0;
 $$neg65 = 1 - $60 | 0;
 $69 = $$neg65 + $68 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZN12CFileHandlerD2Ev($3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return $69 | 0;
}

function __ZNSt3__26vectorIbNS_9allocatorIbEEE6resizeEjb($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i10$i = 0, $$cast = 0, $$sroa$0$0$$sroa$0$0$9$i = 0, $$sroa$0$i = 0, $$sroa$0$i30 = 0, $$sroa$054$0 = 0, $$sroa$6$0 = 0, $$sroa$9$1$i = 0, $$sroa$speculated$i$i = 0, $$sroa$speculated$i8$i = 0, $10 = 0, $105 = 0, $107 = 0, $117 = 0, $119 = 0, $121 = 0, $123 = 0, $125 = 0, $126 = 0, $18 = 0, $19 = 0, $20 = 0, $24 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $34 = 0, $38 = 0, $4 = 0, $43 = 0, $46 = 0, $47 = 0, $5 = 0, $52 = 0, $54 = 0, $58 = 0, $63 = 0, $65 = 0, $68 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $79 = 0, $8 = 0, $81 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $98 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$sroa$0$i30 = sp + 20 | 0;
 $$sroa$0$i = sp + 8 | 0;
 $3 = sp;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 >>> 0 >= $1 >>> 0) {
  HEAP32[$4 >> 2] = $1;
  STACKTOP = sp;
  return;
 }
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $8 << 5;
 $10 = $1 - $5 | 0;
 if ($9 >>> 0 < $10 >>> 0 | $5 >>> 0 > ($9 - $10 | 0) >>> 0) {
  HEAP32[$$sroa$0$i >> 2] = 0;
  $19 = $$sroa$0$i + 4 | 0;
  HEAP32[$19 >> 2] = 0;
  $20 = $$sroa$0$i + 8 | 0;
  HEAP32[$20 >> 2] = 0;
  if (($1 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  if ($8 << 5 >>> 0 < 1073741823) {
   $24 = $8 << 6;
   $26 = $1 + 31 & -32;
   $$0$i = $24 >>> 0 < $26 >>> 0 ? $26 : $24;
  } else $$0$i = 2147483647;
  __ZNSt3__26vectorIbNS_9allocatorIbEEE7reserveEj($$sroa$0$i, $$0$i);
  $28 = HEAP32[$4 >> 2] | 0;
  HEAP32[$19 >> 2] = $28 + $10;
  $30 = HEAP32[$0 >> 2] | 0;
  $$cast = $30;
  $34 = HEAP32[$$sroa$0$i >> 2] | 0;
  HEAP32[$$sroa$0$i30 >> 2] = $34;
  $38 = ($$cast + ($28 >>> 5 << 2) - $30 << 3) + ($28 & 31) | 0;
  if (($38 | 0) > 0) {
   $43 = $38 >>> 5;
   _memmove($34 | 0, $30 | 0, $43 << 2 | 0) | 0;
   $46 = $38 - ($43 << 5) | 0;
   $47 = $34 + ($43 << 2) | 0;
   HEAP32[$$sroa$0$i30 >> 2] = $47;
   if (($46 | 0) > 0) {
    $52 = -1 >>> (32 - $46 | 0);
    $54 = HEAP32[$$cast + ($43 << 2) >> 2] & $52;
    HEAP32[$47 >> 2] = HEAP32[$47 >> 2] & ~$52;
    $58 = HEAP32[$$sroa$0$i30 >> 2] | 0;
    HEAP32[$58 >> 2] = HEAP32[$58 >> 2] | $54;
    $$sroa$0$0$$sroa$0$0$9$i = $58;
    $$sroa$9$1$i = $46;
   } else {
    $$sroa$0$0$$sroa$0$0$9$i = $47;
    $$sroa$9$1$i = 0;
   }
  } else {
   $$sroa$0$0$$sroa$0$0$9$i = $34;
   $$sroa$9$1$i = 0;
  }
  HEAP32[$3 >> 2] = $$sroa$0$0$$sroa$0$0$9$i;
  HEAP32[$3 + 4 >> 2] = $$sroa$9$1$i;
  $63 = $3;
  $65 = HEAP32[$63 >> 2] | 0;
  $68 = HEAP32[$63 + 4 >> 2] | 0;
  $69 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$$sroa$0$i >> 2];
  HEAP32[$$sroa$0$i >> 2] = $69;
  $71 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$19 >> 2] = $71;
  $73 = HEAP32[$7 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$20 >> 2];
  HEAP32[$20 >> 2] = $73;
  if ($69 | 0) __ZdlPv($69);
  $$sroa$054$0 = $65;
  $$sroa$6$0 = $68;
 } else {
  $18 = (HEAP32[$0 >> 2] | 0) + ($5 >>> 5 << 2) | 0;
  HEAP32[$4 >> 2] = $1;
  $$sroa$054$0 = $18;
  $$sroa$6$0 = $5 & 31;
 }
 do if ($10 | 0) if ($2) {
  HEAP32[$$sroa$0$i30 >> 2] = $$sroa$054$0;
  $79 = $$sroa$054$0;
  if (!$$sroa$6$0) {
   $$0$i10$i = $10;
   $94 = $$sroa$054$0;
   $99 = $79;
  } else {
   $81 = 32 - $$sroa$6$0 | 0;
   $$sroa$speculated$i8$i = $81 >>> 0 > $10 >>> 0 ? $10 : $81;
   HEAP32[$79 >> 2] = HEAP32[$79 >> 2] | -1 >>> ($81 - $$sroa$speculated$i8$i | 0) & -1 << $$sroa$6$0;
   $90 = (HEAP32[$$sroa$0$i30 >> 2] | 0) + 4 | 0;
   HEAP32[$$sroa$0$i30 >> 2] = $90;
   $$0$i10$i = $10 - $$sroa$speculated$i8$i | 0;
   $94 = $90;
   $99 = $90;
  }
  $92 = $$0$i10$i >>> 5;
  _memset($94 | 0, -1, $92 << 2 | 0) | 0;
  $96 = $$0$i10$i - ($92 << 5) | 0;
  if (!$96) break;
  $98 = $99 + ($92 << 2) | 0;
  HEAP32[$$sroa$0$i30 >> 2] = $98;
  HEAP32[$98 >> 2] = HEAP32[$98 >> 2] | -1 >>> (32 - $96 | 0);
  break;
 } else {
  HEAP32[$$sroa$0$i >> 2] = $$sroa$054$0;
  $105 = $$sroa$054$0;
  if (!$$sroa$6$0) {
   $$0$i$i = $10;
   $121 = $$sroa$054$0;
   $126 = $105;
  } else {
   $107 = 32 - $$sroa$6$0 | 0;
   $$sroa$speculated$i$i = $107 >>> 0 > $10 >>> 0 ? $10 : $107;
   HEAP32[$105 >> 2] = HEAP32[$105 >> 2] & ~(-1 >>> ($107 - $$sroa$speculated$i$i | 0) & -1 << $$sroa$6$0);
   $117 = (HEAP32[$$sroa$0$i >> 2] | 0) + 4 | 0;
   HEAP32[$$sroa$0$i >> 2] = $117;
   $$0$i$i = $10 - $$sroa$speculated$i$i | 0;
   $121 = $117;
   $126 = $117;
  }
  $119 = $$0$i$i >>> 5;
  _memset($121 | 0, 0, $119 << 2 | 0) | 0;
  $123 = $$0$i$i - ($119 << 5) | 0;
  if (!$123) break;
  $125 = $126 + ($119 << 2) | 0;
  HEAP32[$$sroa$0$i >> 2] = $125;
  HEAP32[$125 >> 2] = HEAP32[$125 >> 2] & ~(-1 >>> (32 - $123 | 0));
  break;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__216__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1$lcssa = 0, $$189 = 0, $$pre$phi93Z2D = 0, $$pre$phiZ2D = 0, $$sroa$speculated = 0, $$sroa$speculated61 = 0, $$sroa$speculated73 = 0, $104 = 0, $105 = 0, $11 = 0, $113 = 0, $118 = 0, $12 = 0, $122 = 0, $125 = 0, $127 = 0, $13 = 0, $135 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $15 = 0, $17 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $35 = 0, $38 = 0, $39 = 0, $43 = 0, $48 = 0, $5 = 0, $52 = 0, $55 = 0, $57 = 0, $67 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $84 = 0, $88 = 0, $92 = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $11 = $1 + 4 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = ((HEAP32[$2 >> 2] | 0) - $5 << 3) + (HEAP32[$2 + 4 >> 2] | 0) - $12 | 0;
 $15 = $5;
 if (($13 | 0) <= 0) {
  $$pre$phi93Z2D = $3 + 4 | 0;
  $138 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $138;
  $139 = $0 + 4 | 0;
  $140 = HEAP32[$$pre$phi93Z2D >> 2] | 0;
  HEAP32[$139 >> 2] = $140;
  return;
 }
 if (!$12) {
  $$0 = $13;
  $$pre$phiZ2D = $3 + 4 | 0;
  $141 = $15;
 } else {
  $17 = 32 - $12 | 0;
  $$sroa$speculated73 = ($13 | 0) < ($17 | 0) ? $13 : $17;
  $25 = -1 >>> ($17 - $$sroa$speculated73 | 0) & -1 << $12 & HEAP32[$15 >> 2];
  $26 = $3 + 4 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  $28 = 32 - $27 | 0;
  $$sroa$speculated61 = $28 >>> 0 < $$sroa$speculated73 >>> 0 ? $28 : $$sroa$speculated73;
  $35 = HEAP32[$3 >> 2] | 0;
  HEAP32[$35 >> 2] = HEAP32[$35 >> 2] & ~(-1 >>> ($28 - $$sroa$speculated61 | 0) & -1 << $27);
  $38 = HEAP32[$26 >> 2] | 0;
  $39 = HEAP32[$11 >> 2] | 0;
  if ($38 >>> 0 > $39 >>> 0) {
   $43 = HEAP32[$3 >> 2] | 0;
   HEAP32[$43 >> 2] = HEAP32[$43 >> 2] | $25 << $38 - $39;
  } else {
   $48 = HEAP32[$3 >> 2] | 0;
   HEAP32[$48 >> 2] = HEAP32[$48 >> 2] | $25 >>> ($39 - $38 | 0);
  }
  $52 = (HEAP32[$26 >> 2] | 0) + $$sroa$speculated61 | 0;
  $55 = (HEAP32[$3 >> 2] | 0) + ($52 >>> 5 << 2) | 0;
  HEAP32[$3 >> 2] = $55;
  HEAP32[$26 >> 2] = $52 & 31;
  $57 = $$sroa$speculated73 - $$sroa$speculated61 | 0;
  if (($57 | 0) > 0) {
   HEAP32[$55 >> 2] = HEAP32[$55 >> 2] & ~(-1 >>> (32 - $57 | 0));
   $67 = HEAP32[$3 >> 2] | 0;
   HEAP32[$67 >> 2] = HEAP32[$67 >> 2] | $25 >>> ((HEAP32[$11 >> 2] | 0) + $$sroa$speculated61 | 0);
   HEAP32[$26 >> 2] = $57;
  }
  $71 = (HEAP32[$1 >> 2] | 0) + 4 | 0;
  HEAP32[$1 >> 2] = $71;
  $$0 = $13 - $$sroa$speculated73 | 0;
  $$pre$phiZ2D = $26;
  $141 = $71;
 }
 $72 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $73 = 32 - $72 | 0;
 $74 = -1 << $72;
 if ($$0 >>> 0 > 31) {
  $76 = ~$74;
  $$189 = $$0;
  $78 = $141;
  do {
   $77 = HEAP32[$78 >> 2] | 0;
   $79 = HEAP32[$3 >> 2] | 0;
   HEAP32[$79 >> 2] = HEAP32[$79 >> 2] & $76;
   $84 = HEAP32[$3 >> 2] | 0;
   HEAP32[$84 >> 2] = HEAP32[$84 >> 2] | $77 << HEAP32[$$pre$phiZ2D >> 2];
   $88 = (HEAP32[$3 >> 2] | 0) + 4 | 0;
   HEAP32[$3 >> 2] = $88;
   HEAP32[$88 >> 2] = HEAP32[$88 >> 2] & $74;
   $92 = HEAP32[$3 >> 2] | 0;
   HEAP32[$92 >> 2] = HEAP32[$92 >> 2] | $77 >>> $73;
   $$189 = $$189 + -32 | 0;
   $78 = (HEAP32[$1 >> 2] | 0) + 4 | 0;
   HEAP32[$1 >> 2] = $78;
  } while ($$189 >>> 0 > 31);
  $$1$lcssa = $$0 & 31;
  $104 = $78;
 } else {
  $$1$lcssa = $$0;
  $104 = $141;
 }
 if (!$$1$lcssa) {
  $$pre$phi93Z2D = $$pre$phiZ2D;
  $138 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $138;
  $139 = $0 + 4 | 0;
  $140 = HEAP32[$$pre$phi93Z2D >> 2] | 0;
  HEAP32[$139 >> 2] = $140;
  return;
 }
 $105 = HEAP32[$104 >> 2] & -1 >>> (32 - $$1$lcssa | 0);
 $$sroa$speculated = ($73 | 0) < ($$1$lcssa | 0) ? $73 : $$1$lcssa;
 $113 = HEAP32[$3 >> 2] | 0;
 HEAP32[$113 >> 2] = HEAP32[$113 >> 2] & ~(-1 << HEAP32[$$pre$phiZ2D >> 2] & -1 >>> ($73 - $$sroa$speculated | 0));
 $118 = HEAP32[$3 >> 2] | 0;
 HEAP32[$118 >> 2] = HEAP32[$118 >> 2] | $105 << HEAP32[$$pre$phiZ2D >> 2];
 $122 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + $$sroa$speculated | 0;
 $125 = (HEAP32[$3 >> 2] | 0) + ($122 >>> 5 << 2) | 0;
 HEAP32[$3 >> 2] = $125;
 HEAP32[$$pre$phiZ2D >> 2] = $122 & 31;
 $127 = $$1$lcssa - $$sroa$speculated | 0;
 if (($127 | 0) <= 0) {
  $$pre$phi93Z2D = $$pre$phiZ2D;
  $138 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $138;
  $139 = $0 + 4 | 0;
  $140 = HEAP32[$$pre$phi93Z2D >> 2] | 0;
  HEAP32[$139 >> 2] = $140;
  return;
 }
 HEAP32[$125 >> 2] = HEAP32[$125 >> 2] & ~(-1 >>> (32 - $127 | 0));
 $135 = HEAP32[$3 >> 2] | 0;
 HEAP32[$135 >> 2] = HEAP32[$135 >> 2] | $105 >>> $$sroa$speculated;
 HEAP32[$$pre$phiZ2D >> 2] = $127;
 $$pre$phi93Z2D = $$pre$phiZ2D;
 $138 = HEAP32[$3 >> 2] | 0;
 HEAP32[$0 >> 2] = $138;
 $139 = $0 + 4 | 0;
 $140 = HEAP32[$$pre$phi93Z2D >> 2] | 0;
 HEAP32[$139 >> 2] = $140;
 return;
}

function __ZNSt3__26vectorIN6google19CommandLineFlagInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i3739 = 0, $$0$i38 = 0, $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$i = 0, $12 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $54 = 0, $59 = 0, $60 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $83 = 0, $9 = 0, label = 0, $$06$i$i$looptemp = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $7 = (((HEAP32[$2 >> 2] | 0) - $4 | 0) / 80 | 0) + 1 | 0;
 if ($7 >>> 0 > 53687091) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 80 | 0;
 if ($12 >>> 0 < 26843545) {
  $17 = $12 << 1;
  $$sroa$speculated$i = $17 >>> 0 < $7 >>> 0 ? $7 : $17;
  $21 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 80 | 0;
  if (!$$sroa$speculated$i) {
   $$0$i38 = 0;
   $28 = 0;
   $29 = $21;
  } else if ($$sroa$speculated$i >>> 0 > 53687091) {
   $24 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($24);
   ___cxa_throw($24 | 0, 1824, 151);
  } else {
   $$0$i3739 = $$sroa$speculated$i;
   $83 = $21;
   label = 8;
  }
 } else {
  $$0$i3739 = 53687091;
  $83 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 80 | 0;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i38 = $$0$i3739;
  $28 = __Znwj($$0$i3739 * 80 | 0) | 0;
  $29 = $83;
 }
 $27 = $28 + ($29 * 80 | 0) | 0;
 $30 = $27;
 $32 = $28 + ($$0$i38 * 80 | 0) | 0;
 __ZN6google19CommandLineFlagInfoC2ERKS0_($27, $1);
 $34 = $27 + 80 | 0;
 $35 = HEAP32[$0 >> 2] | 0;
 $36 = HEAP32[$2 >> 2] | 0;
 if (($36 | 0) == ($35 | 0)) {
  $68 = $30;
  $69 = $35;
  $71 = $35;
 } else {
  $$06$i$i = $36;
  $$sroa$7$0 = $30;
  $40 = $27;
  do {
   $39 = $40 + -80 | 0;
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -80 | 0;
   HEAP32[$39 >> 2] = HEAP32[$$06$i$i >> 2];
   HEAP32[$39 + 4 >> 2] = HEAP32[$$06$i$i + 4 >> 2];
   HEAP32[$39 + 8 >> 2] = HEAP32[$$06$i$i + 8 >> 2];
   HEAP32[$$06$i$i >> 2] = 0;
   HEAP32[$$06$i$i + 4 >> 2] = 0;
   HEAP32[$$06$i$i + 8 >> 2] = 0;
   $42 = $40 + -68 | 0;
   $43 = $$06$i$i$looptemp + -68 | 0;
   HEAP32[$42 >> 2] = HEAP32[$43 >> 2];
   HEAP32[$42 + 4 >> 2] = HEAP32[$43 + 4 >> 2];
   HEAP32[$42 + 8 >> 2] = HEAP32[$43 + 8 >> 2];
   HEAP32[$43 >> 2] = 0;
   HEAP32[$43 + 4 >> 2] = 0;
   HEAP32[$43 + 8 >> 2] = 0;
   $44 = $40 + -56 | 0;
   $45 = $$06$i$i$looptemp + -56 | 0;
   HEAP32[$44 >> 2] = HEAP32[$45 >> 2];
   HEAP32[$44 + 4 >> 2] = HEAP32[$45 + 4 >> 2];
   HEAP32[$44 + 8 >> 2] = HEAP32[$45 + 8 >> 2];
   HEAP32[$45 >> 2] = 0;
   HEAP32[$45 + 4 >> 2] = 0;
   HEAP32[$45 + 8 >> 2] = 0;
   $46 = $40 + -44 | 0;
   $47 = $$06$i$i$looptemp + -44 | 0;
   HEAP32[$46 >> 2] = HEAP32[$47 >> 2];
   HEAP32[$46 + 4 >> 2] = HEAP32[$47 + 4 >> 2];
   HEAP32[$46 + 8 >> 2] = HEAP32[$47 + 8 >> 2];
   HEAP32[$47 >> 2] = 0;
   HEAP32[$47 + 4 >> 2] = 0;
   HEAP32[$47 + 8 >> 2] = 0;
   $48 = $40 + -32 | 0;
   $49 = $$06$i$i$looptemp + -32 | 0;
   HEAP32[$48 >> 2] = HEAP32[$49 >> 2];
   HEAP32[$48 + 4 >> 2] = HEAP32[$49 + 4 >> 2];
   HEAP32[$48 + 8 >> 2] = HEAP32[$49 + 8 >> 2];
   HEAP32[$49 >> 2] = 0;
   HEAP32[$49 + 4 >> 2] = 0;
   HEAP32[$49 + 8 >> 2] = 0;
   $50 = $40 + -20 | 0;
   $51 = $$06$i$i$looptemp + -20 | 0;
   HEAP32[$50 >> 2] = HEAP32[$51 >> 2];
   HEAP32[$50 + 4 >> 2] = HEAP32[$51 + 4 >> 2];
   HEAP32[$50 + 8 >> 2] = HEAP32[$51 + 8 >> 2];
   HEAP32[$51 >> 2] = 0;
   HEAP32[$51 + 4 >> 2] = 0;
   HEAP32[$51 + 8 >> 2] = 0;
   $54 = $$06$i$i$looptemp + -8 | 0;
   $59 = HEAP32[$54 + 4 >> 2] | 0;
   $60 = $40 + -8 | 0;
   HEAP32[$60 >> 2] = HEAP32[$54 >> 2];
   HEAP32[$60 + 4 >> 2] = $59;
   $40 = $$sroa$7$0 + -80 | 0;
   $$sroa$7$0 = $40;
  } while (($$06$i$i | 0) != ($35 | 0));
  $68 = $$sroa$7$0;
  $69 = HEAP32[$0 >> 2] | 0;
  $71 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $68;
 HEAP32[$2 >> 2] = $34;
 HEAP32[$9 >> 2] = $32;
 $70 = $69;
 if (($71 | 0) != ($70 | 0)) {
  $74 = $71;
  do {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74 + -20 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74 + -32 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74 + -44 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74 + -56 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74 + -68 | 0);
   $74 = $74 + -80 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74);
  } while (($74 | 0) != ($70 | 0));
 }
 if (!$69) return;
 __ZdlPv($69);
 return;
}

function __ZL6resizeP9lua_StateP5Tableii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i70 = 0, $$074 = 0, $$1$i$i = 0, $$173$in = 0, $$pre$phi$iZ2D = 0, $$pre$phi17$iZ2D = 0, $$pre$phi85Z2D = 0.0, $$pre$phiZ2D = 0, $$pre15$i = 0, $10 = 0, $11 = 0, $15 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $39 = 0.0, $4 = 0, $41 = 0, $5 = 0, $57 = 0, $6 = 0, $7 = 0, $72 = 0, $75 = 0, $76 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $85 = 0.0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0, $$074$looptemp = 0, $$173$in$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $4 = sp + 16 | 0;
 $5 = $1 + 28 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $1 + 7 | 0;
 $8 = HEAP8[$7 >> 0] | 0;
 $9 = $8 & 255;
 $10 = $1 + 16 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (($6 | 0) < ($2 | 0)) {
  if (($2 + 1 | 0) >>> 0 < 536870912) {
   $15 = $1 + 12 | 0;
   $$pre$phi$iZ2D = $15;
   $$pre$phi17$iZ2D = $15;
   $21 = __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$15 >> 2] | 0, $6 << 3, $2 << 3) | 0;
  } else {
   $$pre15$i = $1 + 12 | 0;
   $$pre$phi$iZ2D = $$pre15$i;
   $$pre$phi17$iZ2D = $$pre15$i;
   $21 = __Z11luaM_toobigP9lua_State($0) | 0;
  }
  HEAP32[$$pre$phi17$iZ2D >> 2] = $21;
  $22 = HEAP32[$5 >> 2] | 0;
  if (($22 | 0) < ($2 | 0)) {
   HEAP32[$21 + ($22 << 3) + 4 >> 2] = 0;
   $25 = $22 + 1 | 0;
   if (($25 | 0) != ($2 | 0)) {
    $27 = $25;
    do {
     HEAP32[(HEAP32[$$pre$phi$iZ2D >> 2] | 0) + ($27 << 3) + 4 >> 2] = 0;
     $27 = $27 + 1 | 0;
    } while (($27 | 0) != ($2 | 0));
   }
  }
  HEAP32[$5 >> 2] = $2;
 }
 __ZL13setnodevectorP9lua_StateP5Tablei($0, $1, $3);
 if (($6 | 0) > ($2 | 0)) {
  HEAP32[$5 >> 2] = $2;
  $30 = $1 + 12 | 0;
  $31 = $4 + 4 | 0;
  $$074 = $2;
  do {
   $32 = HEAP32[$30 >> 2] | 0;
   $33 = $32 + ($$074 << 3) + 4 | 0;
   $$074$looptemp = $$074;
   $$074 = $$074 + 1 | 0;
   if (HEAP32[$33 >> 2] | 0) {
    L19 : do if ($$074$looptemp >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
     $$1$i$i = $32 + ($$074$looptemp << 3) | 0;
     label = 20;
    } else {
     $39 = +($$074 | 0);
     $41 = HEAP32[$10 >> 2] | 0;
     if (!$$074) $$0$i$i = $41; else $$0$i$i = $41 + ((((HEAPF32[tempDoublePtr >> 2] = $39, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
     while (1) {
      if ((HEAP32[$$0$i$i + 12 >> 2] | 0) == 3) if (+HEAPF32[$$0$i$i + 8 >> 2] == $39) break;
      $57 = HEAP32[$$0$i$i + 16 >> 2] | 0;
      if (!$57) {
       $$pre$phi85Z2D = $39;
       label = 22;
       break L19;
      } else $$0$i$i = $57;
     }
     $$1$i$i = $$0$i$i;
     label = 20;
    } while (0);
    if ((label | 0) == 20) {
     label = 0;
     if (($$1$i$i | 0) == 108164) {
      $$pre$phi85Z2D = +($$074 | 0);
      label = 22;
     } else $$0$i = $$1$i$i;
    }
    if ((label | 0) == 22) {
     label = 0;
     HEAPF32[$4 >> 2] = $$pre$phi85Z2D;
     HEAP32[$31 >> 2] = 3;
     $$0$i = __ZL6newkeyP9lua_StateP5TablePK10lua_TValue($0, $1, $4) | 0;
    }
    HEAP32[$$0$i >> 2] = HEAP32[$32 + ($$074$looptemp << 3) >> 2];
    HEAP32[$$0$i + 4 >> 2] = HEAP32[$33 >> 2];
   }
  } while (($$074 | 0) != ($6 | 0));
  if (($2 + 1 | 0) >>> 0 < 536870912) {
   $$pre$phiZ2D = $30;
   $72 = __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$30 >> 2] | 0, $6 << 3, $2 << 3) | 0;
  } else {
   $$pre$phiZ2D = $30;
   $72 = __Z11luaM_toobigP9lua_State($0) | 0;
  }
  HEAP32[$$pre$phiZ2D >> 2] = $72;
 }
 if ($8 << 24 >> 24 != 31) {
  $75 = $1 + 6 | 0;
  $$173$in = 1 << $9;
  do {
   $$173$in$looptemp = $$173$in;
   $$173$in = $$173$in + -1 | 0;
   $76 = $11 + ($$173$in * 20 | 0) + 4 | 0;
   if (HEAP32[$76 >> 2] | 0) {
    $79 = $11 + ($$173$in * 20 | 0) | 0;
    $80 = $11 + ($$173$in * 20 | 0) + 8 | 0;
    $81 = __Z8luaH_getP5TablePK10lua_TValue($1, $80) | 0;
    HEAP8[$75 >> 0] = 0;
    if (($81 | 0) == 108164) {
     switch (HEAP32[$11 + ($$173$in * 20 | 0) + 12 >> 2] | 0) {
     case 0:
      {
       __Z13luaG_runerrorP9lua_StatePKcz($0, 88968, $vararg_buffer);
       break;
      }
     case 3:
      {
       $85 = +HEAPF32[$80 >> 2];
       if (!($85 == $85 & 0.0 == 0.0)) __Z13luaG_runerrorP9lua_StatePKcz($0, 88987, $vararg_buffer1);
       break;
      }
     default:
      {}
     }
     $$0$i70 = __ZL6newkeyP9lua_StateP5TablePK10lua_TValue($0, $1, $80) | 0;
    } else $$0$i70 = $81;
    HEAP32[$$0$i70 >> 2] = HEAP32[$79 >> 2];
    HEAP32[$$0$i70 + 4 >> 2] = HEAP32[$76 >> 2];
   }
  } while (($$173$in$looptemp | 0) > 1);
 }
 if (($11 | 0) == 108172) {
  STACKTOP = sp;
  return;
 }
 __Z13luaM_realloc_P9lua_StatePvjj($0, $11, 20 << $9, 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN9MapParserC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 $2 = sp + 264 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 __ZN9MapParser16GetMapConfigNameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($2, $1);
 __ZN12CFileHandlerC1EPKcS1_($3 | 0, 78553, 78565);
 $10 = (HEAP32[$3 + 220 >> 2] | 0) > -1;
 $11 = __Znwj(148) | 0;
 if ($10) {
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 78553, 11);
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 78565, 2);
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, 78565, 2);
  __ZN9LuaParserC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_RKNS_7booleanE($11, $4, $5, $6, 112102);
  HEAP32[$0 >> 2] = $11;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 } else {
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 78568, 21);
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 78565, 2);
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, 78565, 2);
  __ZN9LuaParserC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_RKNS_7booleanE($11, $4, $5, $6, 112103);
  HEAP32[$0 >> 2] = $11;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 }
 $12 = HEAP32[$0 >> 2] | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 78590, 3);
 __ZN9LuaParser8GetTableERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb($12, $4, 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $13 = HEAP32[$0 >> 2] | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 78594, 8);
 __ZN10FileSystem11GetFilenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($5 | 0, $1 | 0);
 __ZN9LuaParser9AddStringERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($13, $4, $5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 78603, 8);
 __ZN9LuaParser9AddStringERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($14, $4, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 $15 = HEAP32[$0 >> 2] | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 78612, 10);
 __ZN9LuaParser9AddStringERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($15, $4, $2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZN9LuaParser8EndTableEv(HEAP32[$0 >> 2] | 0);
 if (__ZN9LuaParser7ExecuteEv(HEAP32[$0 >> 2] | 0) | 0) {
  __ZN12CFileHandlerD2Ev($3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0 + 4 | 0, (HEAP32[$0 >> 2] | 0) + 136 | 0) | 0;
 __ZN12CFileHandlerD2Ev($3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26locale5__impC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 76368;
 $4 = $0 + 8 | 0;
 __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($4, 28);
 $5 = $0 + 144 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 102867, 1);
 $6 = HEAP32[$4 >> 2] | 0;
 $7 = $0 + 12 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 while (1) {
  if (($8 | 0) == ($6 | 0)) break;
  $10 = $8 + -4 | 0;
  HEAP32[$7 >> 2] = $10;
  $8 = $10;
 }
 HEAP32[26615] = 0;
 HEAP32[26614] = 74032;
 __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_($0, 106456);
 HEAP32[26617] = 0;
 HEAP32[26616] = 74064;
 __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_($0, 106464);
 __ZNSt3__25ctypeIcEC2EPKtbj(106472, 0, 0, 1);
 __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_($0, 106472);
 HEAP32[26623] = 0;
 HEAP32[26622] = 76584;
 __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_($0, 106488);
 HEAP32[26625] = 0;
 HEAP32[26624] = 76652;
 __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($0, 106496);
 HEAP32[26627] = 0;
 HEAP32[26626] = 76320;
 HEAP32[26628] = __ZNSt3__26__clocEv() | 0;
 __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($0, 106504);
 HEAP32[26631] = 0;
 HEAP32[26630] = 76700;
 __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($0, 106520);
 HEAP32[26633] = 0;
 HEAP32[26632] = 76748;
 __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($0, 106528);
 __ZNSt3__28numpunctIcEC2Ej(106536, 1);
 __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_($0, 106536);
 __ZNSt3__28numpunctIwEC2Ej(106560, 1);
 __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_($0, 106560);
 HEAP32[26649] = 0;
 HEAP32[26648] = 74096;
 __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 106592);
 HEAP32[26651] = 0;
 HEAP32[26650] = 74160;
 __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 106600);
 HEAP32[26653] = 0;
 HEAP32[26652] = 74224;
 __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 106608);
 HEAP32[26655] = 0;
 HEAP32[26654] = 74276;
 __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 106616);
 HEAP32[26657] = 0;
 HEAP32[26656] = 75824;
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($0, 106624);
 HEAP32[26659] = 0;
 HEAP32[26658] = 75880;
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($0, 106632);
 HEAP32[26661] = 0;
 HEAP32[26660] = 75936;
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($0, 106640);
 HEAP32[26663] = 0;
 HEAP32[26662] = 75992;
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($0, 106648);
 HEAP32[26665] = 0;
 HEAP32[26664] = 76048;
 __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 106656);
 HEAP32[26667] = 0;
 HEAP32[26666] = 76076;
 __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 106664);
 HEAP32[26669] = 0;
 HEAP32[26668] = 76104;
 __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 106672);
 HEAP32[26671] = 0;
 HEAP32[26670] = 76132;
 __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 106680);
 HEAP32[26673] = 0;
 HEAP32[26672] = 74328;
 HEAP32[26674] = 74376;
 __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 106688);
 HEAP32[26677] = 0;
 HEAP32[26676] = 74412;
 HEAP32[26678] = 74460;
 __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 106704);
 HEAP32[26681] = 0;
 HEAP32[26680] = 76564;
 HEAP32[26682] = __ZNSt3__26__clocEv() | 0;
 HEAP32[26680] = 75776;
 __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 106720);
 HEAP32[26685] = 0;
 HEAP32[26684] = 76564;
 HEAP32[26686] = __ZNSt3__26__clocEv() | 0;
 HEAP32[26684] = 75800;
 __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 106736);
 HEAP32[26689] = 0;
 HEAP32[26688] = 76160;
 __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_($0, 106752);
 HEAP32[26691] = 0;
 HEAP32[26690] = 76192;
 __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_($0, 106760);
 return;
}

function __ZL7subexprP8LexStateP7expdescj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i30$ph = 0, $$0$lcssa = 0, $$0$ph$ph = 0, $$032 = 0, $$pre = 0, $10 = 0, $16 = 0, $21 = 0, $3 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $43 = 0, $46 = 0, $53 = 0, $6 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $8 = 0, label = 0, sp = 0, $$032$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp;
 $4 = $0 + 32 | 0;
 $6 = (HEAP32[$4 >> 2] | 0) + 52 | 0;
 $8 = (HEAP16[$6 >> 1] | 0) + 1 << 16 >> 16;
 HEAP16[$6 >> 1] = $8;
 if (($8 & 65535) > 200) __Z13luaX_lexerrorP8LexStatePKci($0, 87765, 0);
 $10 = $0 + 12 | 0;
 do switch (HEAP32[$10 >> 2] | 0) {
 case 270:
  {
   $$0$i30$ph = 1;
   label = 6;
   break;
  }
 case 45:
  {
   $$0$i30$ph = 0;
   label = 6;
   break;
  }
 case 35:
  {
   $$0$i30$ph = 2;
   label = 6;
   break;
  }
 case 284:
  {
   HEAP32[$1 + 12 >> 2] = -1;
   HEAP32[$1 + 16 >> 2] = -1;
   HEAP32[$1 >> 2] = 5;
   $16 = $1 + 4 | 0;
   HEAP32[$16 >> 2] = 0;
   HEAP32[$16 >> 2] = HEAP32[$0 + 16 >> 2];
   label = 18;
   break;
  }
 case 286:
  {
   $21 = __Z12luaK_stringKP9FuncStateP7TString(HEAP32[$0 + 28 >> 2] | 0, HEAP32[$0 + 16 >> 2] | 0) | 0;
   HEAP32[$1 + 12 >> 2] = -1;
   HEAP32[$1 + 16 >> 2] = -1;
   HEAP32[$1 >> 2] = 4;
   HEAP32[$1 + 4 >> 2] = $21;
   label = 18;
   break;
  }
 case 269:
  {
   HEAP32[$1 + 12 >> 2] = -1;
   HEAP32[$1 + 16 >> 2] = -1;
   HEAP32[$1 >> 2] = 1;
   HEAP32[$1 + 4 >> 2] = 0;
   label = 18;
   break;
  }
 case 275:
  {
   HEAP32[$1 + 12 >> 2] = -1;
   HEAP32[$1 + 16 >> 2] = -1;
   HEAP32[$1 >> 2] = 2;
   HEAP32[$1 + 4 >> 2] = 0;
   label = 18;
   break;
  }
 case 263:
  {
   HEAP32[$1 + 12 >> 2] = -1;
   HEAP32[$1 + 16 >> 2] = -1;
   HEAP32[$1 >> 2] = 3;
   HEAP32[$1 + 4 >> 2] = 0;
   label = 18;
   break;
  }
 case 279:
  {
   $35 = HEAP32[$0 + 28 >> 2] | 0;
   $36 = HEAP32[$35 >> 2] | 0;
   $38 = HEAP8[$36 + 74 >> 0] | 0;
   if (!($38 << 24 >> 24)) {
    __Z16luaX_syntaxerrorP8LexStatePKc($0, 88236);
    $$pre = HEAP32[$35 >> 2] | 0;
    $41 = $$pre;
    $43 = HEAP8[$$pre + 74 >> 0] | 0;
   } else {
    $41 = $36;
    $43 = $38;
   }
   HEAP8[$41 + 74 >> 0] = $43 & 251;
   $46 = __Z12luaK_codeABCP9FuncState6OpCodeiii($35, 37, 0, 1, 0) | 0;
   HEAP32[$1 + 12 >> 2] = -1;
   HEAP32[$1 + 16 >> 2] = -1;
   HEAP32[$1 >> 2] = 14;
   HEAP32[$1 + 4 >> 2] = $46;
   label = 18;
   break;
  }
 case 123:
  {
   __ZL11constructorP8LexStateP7expdesc($0, $1);
   break;
  }
 case 265:
  {
   __Z9luaX_nextP8LexState($0);
   __ZL4bodyP8LexStateP7expdescii($0, $1, 0, HEAP32[$0 + 4 >> 2] | 0);
   break;
  }
 default:
  __ZL10primaryexpP8LexStateP7expdesc($0, $1);
 } while (0);
 if ((label | 0) == 6) {
  __Z9luaX_nextP8LexState($0);
  __ZL7subexprP8LexStateP7expdescj($0, $1, 8) | 0;
  __Z11luaK_prefixP9FuncState5UnOprP7expdesc(HEAP32[$0 + 28 >> 2] | 0, $$0$i30$ph, $1);
 } else if ((label | 0) == 18) __Z9luaX_nextP8LexState($0);
 do switch (HEAP32[$10 >> 2] | 0) {
 case 43:
  {
   $$0$ph$ph = 0;
   break;
  }
 case 45:
  {
   $$0$ph$ph = 1;
   break;
  }
 case 42:
  {
   $$0$ph$ph = 2;
   break;
  }
 case 47:
  {
   $$0$ph$ph = 3;
   break;
  }
 case 37:
  {
   $$0$ph$ph = 4;
   break;
  }
 case 94:
  {
   $$0$ph$ph = 5;
   break;
  }
 case 278:
  {
   $$0$ph$ph = 6;
   break;
  }
 case 283:
  {
   $$0$ph$ph = 7;
   break;
  }
 case 280:
  {
   $$0$ph$ph = 8;
   break;
  }
 case 60:
  {
   $$0$ph$ph = 9;
   break;
  }
 case 282:
  {
   $$0$ph$ph = 10;
   break;
  }
 case 62:
  {
   $$0$ph$ph = 11;
   break;
  }
 case 281:
  {
   $$0$ph$ph = 12;
   break;
  }
 case 257:
  {
   $$0$ph$ph = 13;
   break;
  }
 case 271:
  {
   $$0$ph$ph = 14;
   break;
  }
 default:
  {
   $$0$lcssa = 15;
   $65 = HEAP32[$4 >> 2] | 0;
   $66 = $65 + 52 | 0;
   $67 = HEAP16[$66 >> 1] | 0;
   $68 = $67 + -1 << 16 >> 16;
   HEAP16[$66 >> 1] = $68;
   STACKTOP = sp;
   return $$0$lcssa | 0;
  }
 } while (0);
 $53 = $0 + 28 | 0;
 $$032 = $$0$ph$ph;
 while (1) {
  if ((HEAPU8[87735 + ($$032 << 1) >> 0] | 0) >>> 0 <= $2 >>> 0) {
   $$0$lcssa = $$032;
   label = 37;
   break;
  }
  __Z9luaX_nextP8LexState($0);
  __Z10luaK_infixP9FuncState6BinOprP7expdesc(HEAP32[$53 >> 2] | 0, $$032, $1);
  $$032$looptemp = $$032;
  $$032 = __ZL7subexprP8LexStateP7expdescj($0, $3, HEAPU8[87735 + ($$032 << 1) + 1 >> 0] | 0) | 0;
  __Z11luaK_posfixP9FuncState6BinOprP7expdescS3_(HEAP32[$53 >> 2] | 0, $$032$looptemp, $1, $3);
  if (($$032 | 0) == 15) {
   $$0$lcssa = 15;
   label = 37;
   break;
  }
 }
 if ((label | 0) == 37) {
  $65 = HEAP32[$4 >> 2] | 0;
  $66 = $65 + 52 | 0;
  $67 = HEAP16[$66 >> 1] | 0;
  $68 = $67 + -1 << 16 >> 16;
  HEAP16[$66 >> 1] = $68;
  STACKTOP = sp;
  return $$0$lcssa | 0;
 }
 return 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9underflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i = 0, $$1 = 0, $$3 = 0, $$phi$trans$insert = 0, $$phi$trans$insert55 = 0, $$pre$phi59Z2D = 0, $$pre$phiZ2D = 0, $$sink2$i = 0, $$sink3$i = 0, $1 = 0, $104 = 0, $107 = 0, $109 = 0, $111 = 0, $113 = 0, $122 = 0, $123 = 0, $126 = 0, $128 = 0, $17 = 0, $2 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $34 = 0, $38 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $53 = 0, $59 = 0, $6 = 0, $62 = 0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $74 = 0, $78 = 0, $84 = 0, $85 = 0, $86 = 0, $88 = 0, $89 = 0, $92 = 0, $93 = 0, $98 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 $3 = $0 + 64 | 0;
 if (!(HEAP32[$3 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $6 = $0 + 92 | 0;
 if (!(HEAP32[$6 >> 2] & 8)) {
  HEAP32[$0 + 24 >> 2] = 0;
  HEAP32[$0 + 20 >> 2] = 0;
  HEAP32[$0 + 28 >> 2] = 0;
  if (!(HEAP8[$0 + 98 >> 0] | 0)) {
   $22 = HEAP32[$0 + 56 >> 2] | 0;
   $$sink2$i = $22 + (HEAP32[$0 + 60 >> 2] | 0) | 0;
   $$sink3$i = $22;
  } else {
   $17 = HEAP32[$0 + 32 >> 2] | 0;
   $$sink2$i = $17 + (HEAP32[$0 + 52 >> 2] | 0) | 0;
   $$sink3$i = $17;
  }
  HEAP32[$0 + 8 >> 2] = $$sink3$i;
  $27 = $0 + 12 | 0;
  HEAP32[$27 >> 2] = $$sink2$i;
  HEAP32[$0 + 16 >> 2] = $$sink2$i;
  HEAP32[$6 >> 2] = 8;
  $$0$i = 1;
  $$pre$phiZ2D = $27;
  $29 = $$sink2$i;
 } else {
  $$phi$trans$insert = $0 + 12 | 0;
  $$0$i = 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $29 = HEAP32[$$phi$trans$insert >> 2] | 0;
 }
 if (!$29) {
  $31 = $1 + 1 | 0;
  HEAP32[$0 + 8 >> 2] = $1;
  HEAP32[$$pre$phiZ2D >> 2] = $31;
  HEAP32[$0 + 16 >> 2] = $31;
  $41 = $31;
 } else $41 = $29;
 $$phi$trans$insert55 = $0 + 16 | 0;
 if ($$0$i) {
  $43 = HEAP32[$$phi$trans$insert55 >> 2] | 0;
  $45 = 0;
 } else {
  $34 = HEAP32[$$phi$trans$insert55 >> 2] | 0;
  $38 = ($34 - (HEAP32[$0 + 8 >> 2] | 0) | 0) / 2 | 0;
  $43 = $34;
  $45 = $38 >>> 0 > 4 ? 4 : $38;
 }
 do if (($41 | 0) == ($43 | 0)) {
  $46 = $0 + 8 | 0;
  _memmove(HEAP32[$46 >> 2] | 0, $41 + (0 - $45) | 0, $45 | 0) | 0;
  if (HEAP8[$0 + 98 >> 0] | 0) {
   $53 = HEAP32[$46 >> 2] | 0;
   $59 = _fread($53 + $45 | 0, 1, (HEAP32[$$phi$trans$insert55 >> 2] | 0) - $45 - $53 | 0, HEAP32[$3 >> 2] | 0) | 0;
   if (!$59) {
    $$3 = -1;
    $$pre$phi59Z2D = $46;
    break;
   }
   $62 = (HEAP32[$46 >> 2] | 0) + $45 | 0;
   HEAP32[$$pre$phiZ2D >> 2] = $62;
   HEAP32[$$phi$trans$insert55 >> 2] = $62 + $59;
   $$3 = HEAPU8[$62 >> 0] | 0;
   $$pre$phi59Z2D = $46;
   break;
  }
  $66 = $0 + 32 | 0;
  $68 = $0 + 36 | 0;
  $69 = HEAP32[$68 >> 2] | 0;
  $70 = $0 + 40 | 0;
  _memmove(HEAP32[$66 >> 2] | 0, $69 | 0, (HEAP32[$70 >> 2] | 0) - $69 | 0) | 0;
  $74 = HEAP32[$66 >> 2] | 0;
  $78 = $74 + ((HEAP32[$70 >> 2] | 0) - (HEAP32[$68 >> 2] | 0)) | 0;
  HEAP32[$68 >> 2] = $78;
  if (($74 | 0) == ($0 + 44 | 0)) $85 = 8; else $85 = HEAP32[$0 + 52 >> 2] | 0;
  $84 = $74 + $85 | 0;
  HEAP32[$70 >> 2] = $84;
  $86 = $0 + 60 | 0;
  $88 = (HEAP32[$86 >> 2] | 0) - $45 | 0;
  $89 = $84 - $78 | 0;
  $92 = $0 + 72 | 0;
  $93 = $92;
  $98 = HEAP32[$93 + 4 >> 2] | 0;
  $99 = $0 + 80 | 0;
  HEAP32[$99 >> 2] = HEAP32[$93 >> 2];
  HEAP32[$99 + 4 >> 2] = $98;
  $104 = _fread($78, 1, $89 >>> 0 < $88 >>> 0 ? $89 : $88, HEAP32[$3 >> 2] | 0) | 0;
  if (!$104) {
   $$3 = -1;
   $$pre$phi59Z2D = $46;
  } else {
   $107 = HEAP32[$0 + 68 >> 2] | 0;
   if (!$107) {
    $109 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($109);
    ___cxa_throw($109 | 0, 1856, 154);
   }
   $111 = (HEAP32[$68 >> 2] | 0) + $104 | 0;
   HEAP32[$70 >> 2] = $111;
   $113 = HEAP32[$46 >> 2] | 0;
   if ((FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$107 >> 2] | 0) + 16 >> 2] & 15]($107, $92, HEAP32[$66 >> 2] | 0, $111, $68, $113 + $45 | 0, $113 + (HEAP32[$86 >> 2] | 0) | 0, $2) | 0) == 3) {
    $122 = HEAP32[$66 >> 2] | 0;
    $123 = HEAP32[$70 >> 2] | 0;
    HEAP32[$46 >> 2] = $122;
    HEAP32[$$pre$phiZ2D >> 2] = $122;
    HEAP32[$$phi$trans$insert55 >> 2] = $123;
    $$1 = HEAPU8[$122 >> 0] | 0;
   } else {
    $126 = HEAP32[$2 >> 2] | 0;
    $128 = (HEAP32[$46 >> 2] | 0) + $45 | 0;
    if (($126 | 0) == ($128 | 0)) $$1 = -1; else {
     HEAP32[$$pre$phiZ2D >> 2] = $128;
     HEAP32[$$phi$trans$insert55 >> 2] = $126;
     $$1 = HEAPU8[$128 >> 0] | 0;
    }
   }
   $$3 = $$1;
   $$pre$phi59Z2D = $46;
  }
 } else {
  $$3 = HEAPU8[$41 >> 0] | 0;
  $$pre$phi59Z2D = $0 + 8 | 0;
 } while (0);
 if ((HEAP32[$$pre$phi59Z2D >> 2] | 0) == ($1 | 0)) {
  HEAP32[$$pre$phi59Z2D >> 2] = 0;
  HEAP32[$$pre$phiZ2D >> 2] = 0;
  HEAP32[$$phi$trans$insert55 >> 2] = 0;
 }
 $$0 = $$3;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL10close_funcP8LexState($0) {
 $0 = $0 | 0;
 var $$pre = 0, $$pre$phi65Z2D = 0, $$pre$phi67Z2D = 0, $$pre$phi71Z2D = 0, $$pre$phi73Z2D = 0, $$pre$phi77Z2D = 0, $$pre$phi79Z2D = 0, $$pre$phi83Z2D = 0, $$pre$phi85Z2D = 0, $$pre$phi89Z2D = 0, $$pre$phi91Z2D = 0, $$pre92 = 0, $10 = 0, $102 = 0, $105 = 0, $107 = 0, $119 = 0, $123 = 0, $124 = 0, $125 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $32 = 0, $35 = 0, $37 = 0, $4 = 0, $43 = 0, $45 = 0, $48 = 0, $5 = 0, $50 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $64 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $76 = 0, $78 = 0, $84 = 0, $86 = 0, $88 = 0, $9 = 0, $91 = 0, $93 = 0, $99 = 0;
 $2 = HEAP32[$0 + 32 >> 2] | 0;
 $3 = $0 + 28 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $4 + 50 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $$pre92 = $4 + 24 | 0;
 if ($7 << 24 >> 24) {
  $9 = HEAP32[$$pre92 >> 2] | 0;
  $10 = $7 + -1 << 24 >> 24;
  HEAP8[$6 >> 0] = $10;
  HEAP32[(HEAP32[$5 + 24 >> 2] | 0) + ((HEAPU16[$4 + 172 + (($10 & 255) << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = $9;
  $18 = HEAP8[$6 >> 0] | 0;
  if ($18 << 24 >> 24) {
   $22 = $18;
   do {
    $$pre = HEAP32[$4 >> 2] | 0;
    $20 = HEAP32[$$pre92 >> 2] | 0;
    $21 = $22 + -1 << 24 >> 24;
    HEAP8[$6 >> 0] = $21;
    HEAP32[(HEAP32[$$pre + 24 >> 2] | 0) + ((HEAPU16[$4 + 172 + (($21 & 255) << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = $20;
    $22 = HEAP8[$6 >> 0] | 0;
   } while ($22 << 24 >> 24 != 0);
  }
 }
 __Z8luaK_retP9FuncStateii($4, 0, 0);
 $32 = HEAP32[$$pre92 >> 2] | 0;
 if (($32 + 1 | 0) >>> 0 < 1073741824) {
  $35 = $5 + 12 | 0;
  $37 = $5 + 44 | 0;
  $$pre$phi65Z2D = $35;
  $$pre$phi67Z2D = $37;
  $43 = __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$35 >> 2] | 0, HEAP32[$37 >> 2] << 2, $32 << 2) | 0;
 } else {
  $$pre$phi65Z2D = $5 + 12 | 0;
  $$pre$phi67Z2D = $5 + 44 | 0;
  $43 = __Z11luaM_toobigP9lua_State($2) | 0;
 }
 HEAP32[$$pre$phi65Z2D >> 2] = $43;
 HEAP32[$$pre$phi67Z2D >> 2] = HEAP32[$$pre92 >> 2];
 $45 = HEAP32[$$pre92 >> 2] | 0;
 if (($45 + 1 | 0) >>> 0 < 1073741824) {
  $48 = $5 + 20 | 0;
  $50 = $5 + 48 | 0;
  $$pre$phi71Z2D = $48;
  $$pre$phi73Z2D = $50;
  $56 = __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$48 >> 2] | 0, HEAP32[$50 >> 2] << 2, $45 << 2) | 0;
 } else {
  $$pre$phi71Z2D = $5 + 20 | 0;
  $$pre$phi73Z2D = $5 + 48 | 0;
  $56 = __Z11luaM_toobigP9lua_State($2) | 0;
 }
 HEAP32[$$pre$phi71Z2D >> 2] = $56;
 HEAP32[$$pre$phi73Z2D >> 2] = HEAP32[$$pre92 >> 2];
 $58 = $4 + 40 | 0;
 $59 = HEAP32[$58 >> 2] | 0;
 if (($59 + 1 | 0) >>> 0 < 536870912) {
  $62 = $5 + 8 | 0;
  $64 = $5 + 40 | 0;
  $$pre$phi77Z2D = $62;
  $$pre$phi79Z2D = $64;
  $70 = __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$62 >> 2] | 0, HEAP32[$64 >> 2] << 3, $59 << 3) | 0;
 } else {
  $$pre$phi77Z2D = $5 + 8 | 0;
  $$pre$phi79Z2D = $5 + 40 | 0;
  $70 = __Z11luaM_toobigP9lua_State($2) | 0;
 }
 HEAP32[$$pre$phi77Z2D >> 2] = $70;
 HEAP32[$$pre$phi79Z2D >> 2] = HEAP32[$58 >> 2];
 $72 = $4 + 44 | 0;
 $73 = HEAP32[$72 >> 2] | 0;
 if (($73 + 1 | 0) >>> 0 < 1073741824) {
  $76 = $5 + 16 | 0;
  $78 = $5 + 52 | 0;
  $$pre$phi83Z2D = $76;
  $$pre$phi85Z2D = $78;
  $84 = __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$76 >> 2] | 0, HEAP32[$78 >> 2] << 2, $73 << 2) | 0;
 } else {
  $$pre$phi83Z2D = $5 + 16 | 0;
  $$pre$phi85Z2D = $5 + 52 | 0;
  $84 = __Z11luaM_toobigP9lua_State($2) | 0;
 }
 HEAP32[$$pre$phi83Z2D >> 2] = $84;
 HEAP32[$$pre$phi85Z2D >> 2] = HEAP32[$72 >> 2];
 $86 = $4 + 48 | 0;
 $88 = HEAP16[$86 >> 1] | 0;
 if (($88 + 1 | 0) >>> 0 < 357913942) {
  $91 = $5 + 24 | 0;
  $93 = $5 + 56 | 0;
  $$pre$phi89Z2D = $91;
  $$pre$phi91Z2D = $93;
  $99 = __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$91 >> 2] | 0, (HEAP32[$93 >> 2] | 0) * 12 | 0, $88 * 12 | 0) | 0;
 } else {
  $$pre$phi89Z2D = $5 + 24 | 0;
  $$pre$phi91Z2D = $5 + 56 | 0;
  $99 = __Z11luaM_toobigP9lua_State($2) | 0;
 }
 HEAP32[$$pre$phi89Z2D >> 2] = $99;
 HEAP32[$$pre$phi91Z2D >> 2] = HEAP16[$86 >> 1];
 $102 = $5 + 72 | 0;
 $105 = $5 + 28 | 0;
 $107 = $5 + 36 | 0;
 HEAP32[$105 >> 2] = __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$105 >> 2] | 0, HEAP32[$107 >> 2] << 2, HEAPU8[$102 >> 0] << 2) | 0;
 HEAP32[$107 >> 2] = HEAPU8[$102 >> 0];
 HEAP32[$3 >> 2] = HEAP32[$4 + 8 >> 2];
 if (((HEAP32[$0 + 12 >> 2] | 0) + -285 | 0) >>> 0 >= 2) {
  $123 = $2 + 8 | 0;
  $124 = HEAP32[$123 >> 2] | 0;
  $125 = $124 + -16 | 0;
  HEAP32[$123 >> 2] = $125;
  return;
 }
 $119 = HEAP32[$0 + 16 >> 2] | 0;
 __Z14luaX_newstringP8LexStatePKcj($0, $119 + 16 | 0, HEAP32[$119 + 12 >> 2] | 0) | 0;
 $123 = $2 + 8 | 0;
 $124 = HEAP32[$123 >> 2] | 0;
 $125 = $124 + -16 | 0;
 HEAP32[$123 >> 2] = $125;
 return;
}

function __ZNK8LuaTable8SubTableERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$06$0$i$i = 0, $14 = 0, $15 = 0, $17 = 0, $21 = 0, $22 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $40 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $53 = 0, $54 = 0, $6 = 0, $60 = 0, $7 = 0, $71 = 0, $72 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 $7 = $1 + 16 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!$8) label = 4; else if (!(HEAP8[$8 + 134 >> 0] | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($4, $2); else label = 4;
 if ((label | 0) == 4) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5, $2);
  $14 = HEAP8[$5 + 11 >> 0] | 0;
  $15 = $14 << 24 >> 24 < 0;
  $17 = $15 ? HEAP32[$5 >> 2] | 0 : $5;
  $21 = $15 ? HEAP32[$5 + 4 >> 2] | 0 : $14 & 255;
  $22 = $17 + $21 | 0;
  if ($21 | 0) {
   $$sroa$06$0$i$i = $17;
   do {
    HEAP8[$$sroa$06$0$i$i >> 0] = _tolower(HEAP8[$$sroa$06$0$i$i >> 0] | 0) | 0;
    $$sroa$06$0$i$i = $$sroa$06$0$i$i + 1 | 0;
   } while (($$sroa$06$0$i$i | 0) != ($22 | 0));
  };
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 };
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 114224, 0);
 $30 = $0 + 12 | 0;
 HEAP8[$30 >> 0] = 0;
 $31 = $0 + 16 | 0;
 HEAP32[$31 >> 2] = 0;
 $32 = $0 + 20 | 0;
 HEAP32[$32 >> 2] = 0;
 $33 = $0 + 24 | 0;
 HEAP32[$33 >> 2] = -2;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $35 = HEAP8[$1 + 11 >> 0] | 0;
 $36 = $35 << 24 >> 24 < 0;
 $40 = $36 ? HEAP32[$1 + 4 >> 2] | 0 : $35 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($6, $36 ? HEAP32[$1 >> 2] | 0 : $1, $40, $40 + 1 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($6, 102189, 1) | 0;
 $44 = $4 + 11 | 0;
 $45 = HEAP8[$44 >> 0] | 0;
 $46 = $45 << 24 >> 24 < 0;
 $53 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($6, $46 ? HEAP32[$4 >> 2] | 0 : $4, $46 ? HEAP32[$4 + 4 >> 2] | 0 : $45 & 255) | 0;
 HEAP32[$3 >> 2] = HEAP32[$53 >> 2];
 HEAP32[$3 + 4 >> 2] = HEAP32[$53 + 4 >> 2];
 HEAP32[$3 + 8 >> 2] = HEAP32[$53 + 8 >> 2];
 HEAP32[$53 >> 2] = 0;
 HEAP32[$53 + 4 >> 2] = 0;
 HEAP32[$53 + 8 >> 2] = 0;
 $54 = $0 + 11 | 0;
 if ((HEAP8[$54 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
 } else {
  HEAP8[$0 >> 0] = 0;
  HEAP8[$54 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, 0);
 HEAP32[$0 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 if (!(__ZNK8LuaTable9PushTableEv($1) | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 $60 = $1 + 20 | 0;
 __Z14lua_pushstringP9lua_StatePKc(HEAP32[$60 >> 2] | 0, (HEAP8[$44 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4);
 __Z12lua_gettableP9lua_Statei(HEAP32[$60 >> 2] | 0, -2);
 if ((__Z8lua_typeP9lua_Statei(HEAP32[$60 >> 2] | 0, -1) | 0) != 5) {
  __Z10lua_settopP9lua_Statei(HEAP32[$60 >> 2] | 0, -2);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 HEAP32[$31 >> 2] = HEAP32[$7 >> 2];
 $71 = HEAP32[$60 >> 2] | 0;
 HEAP32[$32 >> 2] = $71;
 $72 = __Z8luaL_refP9lua_Statei($71, -1e4) | 0;
 HEAP32[$33 >> 2] = $72;
 HEAP8[$30 >> 0] = ($72 | 0) != -2 & 1;
 $75 = HEAP32[$7 >> 2] | 0;
 HEAP32[$3 >> 2] = $0;
 $76 = $75 + 100 | 0;
 $77 = HEAP32[$76 >> 2] | 0;
 if (($77 | 0) == (HEAP32[$75 + 104 >> 2] | 0)) __ZNSt3__26vectorIP8LuaTableNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($75 + 96 | 0, $3); else {
  HEAP32[$77 >> 2] = $0;
  HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 4;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZL12singlevarauxP9FuncStateP7TStringP7expdesci($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $$0$i21 = 0, $$0$in$i = 0, $$044$i = 0, $$04551$i = 0, $$050$i = 0, $$08$i19 = 0, $$09$i = 0, $$1 = 0, $$pre$phi30Z2D = 0, $$pre$phi31Z2D = 0, $$pre$phiZ2D = 0, $104 = 0, $110 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $45 = 0, $60 = 0, $63 = 0, $68 = 0, $70 = 0, $72 = 0, $75 = 0, $79 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 if (!$0) {
  HEAP32[$2 + 12 >> 2] = -1;
  HEAP32[$2 + 16 >> 2] = -1;
  HEAP32[$2 >> 2] = 8;
  HEAP32[$2 + 4 >> 2] = 255;
  $$1 = 8;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $$0$in$i = HEAPU8[$0 + 50 >> 0] | 0;
 while (1) {
  $$0$i = $$0$in$i + -1 | 0;
  if (($$0$in$i | 0) <= 0) break;
  if ((HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$0 + 172 + ($$0$i << 1) >> 1] | 0) * 12 | 0) >> 2] | 0) == ($1 | 0)) {
   label = 6;
   break;
  } else $$0$in$i = $$0$i;
 }
 if ((label | 0) == 6) {
  HEAP32[$2 + 12 >> 2] = -1;
  HEAP32[$2 + 16 >> 2] = -1;
  HEAP32[$2 >> 2] = 6;
  HEAP32[$2 + 4 >> 2] = $$0$i;
  if ($3 | 0) {
   $$1 = 6;
   STACKTOP = sp;
   return $$1 | 0;
  }
  $$08$i19 = HEAP32[$0 + 20 >> 2] | 0;
  if (!$$08$i19) {
   $$1 = 6;
   STACKTOP = sp;
   return $$1 | 0;
  } else $$09$i = $$08$i19;
  while (1) {
   if ((HEAPU8[$$09$i + 8 >> 0] | 0 | 0) < ($$0$in$i | 0)) break;
   $$0$i21 = HEAP32[$$09$i >> 2] | 0;
   if (!$$0$i21) {
    $$1 = 6;
    label = 32;
    break;
   } else $$09$i = $$0$i21;
  }
  if ((label | 0) == 32) {
   STACKTOP = sp;
   return $$1 | 0;
  }
  HEAP8[$$09$i + 9 >> 0] = 1;
  $$1 = 6;
  STACKTOP = sp;
  return $$1 | 0;
 }
 if ((__ZL12singlevarauxP9FuncStateP7TStringP7expdesci(HEAP32[$0 + 8 >> 2] | 0, $1, $2, 0) | 0) == 8) {
  $$1 = 8;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $37 = HEAP32[$0 >> 2] | 0;
 $38 = $37 + 36 | 0;
 $39 = HEAP32[$38 >> 2] | 0;
 $40 = $37 + 72 | 0;
 $41 = HEAP8[$40 >> 0] | 0;
 $42 = $41 & 255;
 L26 : do if (!($41 << 24 >> 24)) label = 17; else {
  $44 = HEAP32[$2 >> 2] | 0;
  $45 = $2 + 4 | 0;
  $$04551$i = 0;
  while (1) {
   if ((HEAPU8[$0 + 51 + ($$04551$i << 1) >> 0] | 0 | 0) == ($44 | 0)) if ((HEAPU8[$0 + 51 + ($$04551$i << 1) + 1 >> 0] | 0 | 0) == (HEAP32[$45 >> 2] | 0)) {
    $$044$i = $$04551$i;
    $$pre$phi30Z2D = $2;
    $$pre$phiZ2D = $45;
    break L26;
   }
   $$04551$i = $$04551$i + 1 | 0;
   if (($$04551$i | 0) >= ($42 | 0)) {
    label = 17;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 17) {
  if (($42 + 1 | 0) >>> 0 > 60) {
   $60 = HEAP32[$37 + 60 >> 2] | 0;
   $63 = HEAP32[$0 + 16 >> 2] | 0;
   if (!$60) {
    HEAP32[$vararg_buffer >> 2] = 60;
    HEAP32[$vararg_buffer + 4 >> 2] = 88186;
    $68 = __Z16luaO_pushfstringP9lua_StatePKcz($63, 87964, $vararg_buffer) | 0;
   } else {
    HEAP32[$vararg_buffer2 >> 2] = $60;
    HEAP32[$vararg_buffer2 + 4 >> 2] = 60;
    HEAP32[$vararg_buffer2 + 8 >> 2] = 88186;
    $68 = __Z16luaO_pushfstringP9lua_StatePKcz($63, 87998, $vararg_buffer2) | 0;
   }
   __Z13luaX_lexerrorP8LexStatePKci(HEAP32[$0 + 12 >> 2] | 0, $68, 0);
   $70 = HEAP8[$40 >> 0] | 0;
   $72 = HEAP32[$38 >> 2] | 0;
  } else {
   $70 = $41;
   $72 = $39;
  }
  if (($70 & 255 | 0) < ($72 | 0)) {
   $$pre$phi31Z2D = $37 + 28 | 0;
   $79 = $72;
  } else {
   $75 = $37 + 28 | 0;
   HEAP32[$75 >> 2] = __Z13luaM_growaux_P9lua_StatePvPijiPKc(HEAP32[$0 + 16 >> 2] | 0, HEAP32[$75 >> 2] | 0, $38, 4, 2147483645, 114224) | 0;
   $$pre$phi31Z2D = $75;
   $79 = HEAP32[$38 >> 2] | 0;
  }
  if (($39 | 0) < ($79 | 0)) {
   $$050$i = $39;
   do {
    HEAP32[(HEAP32[$$pre$phi31Z2D >> 2] | 0) + ($$050$i << 2) >> 2] = 0;
    $$050$i = $$050$i + 1 | 0;
   } while (($$050$i | 0) < (HEAP32[$38 >> 2] | 0));
  }
  HEAP32[(HEAP32[$$pre$phi31Z2D >> 2] | 0) + ((HEAPU8[$40 >> 0] | 0) << 2) >> 2] = $1;
  if (HEAP8[$1 + 5 >> 0] & 3) if (HEAP8[$37 + 5 >> 0] & 4) __Z13luaC_barrierfP9lua_StateP8GCObjectS2_(HEAP32[$0 + 16 >> 2] | 0, $37, $1);
  HEAP8[$0 + 51 + ((HEAPU8[$40 >> 0] | 0) << 1) >> 0] = HEAP32[$2 >> 2];
  $104 = $2 + 4 | 0;
  HEAP8[$0 + 51 + ((HEAPU8[$40 >> 0] | 0) << 1) + 1 >> 0] = HEAP32[$104 >> 2];
  $110 = HEAP8[$40 >> 0] | 0;
  HEAP8[$40 >> 0] = $110 + 1 << 24 >> 24;
  $$044$i = $110 & 255;
  $$pre$phi30Z2D = $2;
  $$pre$phiZ2D = $104;
 }
 HEAP32[$$pre$phiZ2D >> 2] = $$044$i;
 HEAP32[$$pre$phi30Z2D >> 2] = 7;
 $$1 = 7;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i26 = 0, $$0$i$i28 = 0, $$byval_copy = 0, $$pn = 0, $$sroa$040$0 = 0, $10 = 0, $101 = 0, $103 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $31 = 0, $43 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $55 = 0, $6 = 0, $63 = 0, $7 = 0, $74 = 0, $8 = 0, $82 = 0, $9 = 0, $90 = 0, $93 = 0, $94 = 0, $98 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 $$byval_copy = sp + 468 | 0;
 $6 = sp + 464 | 0;
 $7 = sp + 472 | 0;
 $8 = sp + 460 | 0;
 $9 = sp + 456 | 0;
 $10 = sp + 444 | 0;
 $11 = sp + 432 | 0;
 $12 = sp + 420 | 0;
 $13 = sp + 416 | 0;
 $14 = sp + 16 | 0;
 $15 = sp + 8 | 0;
 $16 = sp + 4 | 0;
 $17 = sp;
 HEAP32[$6 >> 2] = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 $19 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110200) | 0;
 $21 = $5 + 8 + 3 | 0;
 $22 = HEAP8[$21 >> 0] | 0;
 $23 = $22 << 24 >> 24 < 0;
 $24 = $5 + 4 | 0;
 if (!(($23 ? HEAP32[$24 >> 2] | 0 : $22 & 255) | 0)) $43 = 0; else {
  $31 = HEAP32[($23 ? HEAP32[$5 >> 2] | 0 : $5) >> 2] | 0;
  $43 = ($31 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 44 >> 2] & 31]($19, 45) | 0);
 };
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 $$0$i$i26 = 0;
 while (1) {
  if (($$0$i$i26 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i26 << 2) >> 2] = 0;
  $$0$i$i26 = $$0$i$i26 + 1 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $$0$i$i28 = 0;
 while (1) {
  if (($$0$i$i28 | 0) == 3) break;
  HEAP32[$12 + ($$0$i$i28 << 2) >> 2] = 0;
  $$0$i$i28 = $$0$i$i28 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2, $43, $6, $7, $8, $9, $10, $11, $12, $13);
 $44 = HEAP8[$21 >> 0] | 0;
 $46 = HEAP32[$24 >> 2] | 0;
 $48 = $44 << 24 >> 24 < 0 ? $46 : $44 & 255;
 $49 = HEAP32[$13 >> 2] | 0;
 if (($48 | 0) > ($49 | 0)) {
  $55 = HEAP8[$12 + 8 + 3 >> 0] | 0;
  $63 = HEAP8[$11 + 8 + 3 >> 0] | 0;
  $$pn = ($55 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $55 & 255) + ($48 - $49 << 1 | 1) + ($63 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $63 & 255) | 0;
 } else {
  $74 = HEAP8[$12 + 8 + 3 >> 0] | 0;
  $82 = HEAP8[$11 + 8 + 3 >> 0] | 0;
  $$pn = ($74 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $74 & 255) + 2 + ($82 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $82 & 255) | 0;
 }
 $90 = $$pn + $49 | 0;
 if ($90 >>> 0 > 100) {
  $93 = _malloc($90 << 2) | 0;
  $94 = $93;
  if (!$93) {
   $$0 = 0;
   $$sroa$040$0 = $94;
   $103 = HEAP32[$24 >> 2] | 0;
   $108 = HEAP32[$13 >> 2] | 0;
   $98 = HEAP8[$21 >> 0] | 0;
  } else {
   $$0 = $93;
   $$sroa$040$0 = $94;
   $103 = $46;
   $108 = $49;
   $98 = $44;
  }
 } else {
  $$0 = $14;
  $$sroa$040$0 = 0;
  $103 = $46;
  $108 = $49;
  $98 = $44;
 }
 $99 = $98 << 24 >> 24 < 0;
 $101 = $99 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$0, $15, $16, HEAP32[$3 + 4 >> 2] | 0, $101, $101 + (($99 ? $103 : $98 & 255) << 2) | 0, $19, $43, $7, HEAP32[$8 >> 2] | 0, HEAP32[$9 >> 2] | 0, $10, $11, $12, $108);
 HEAP32[$17 >> 2] = HEAP32[$1 >> 2];
 $110 = HEAP32[$15 >> 2] | 0;
 $111 = HEAP32[$16 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$17 >> 2];
 $112 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$0, $110, $111, $3, $4) | 0;
 if ($$sroa$040$0 | 0) _free($$sroa$040$0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($12);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$6 >> 2] | 0) | 0;
 STACKTOP = sp;
 return $112 | 0;
}

function __Z13luaK_goiftrueP9FuncStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i15 = 0, $$0$i$i16 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i$i = 0, $$idx14 = 0, $$idx14$val = 0, $101 = 0, $107 = 0, $12 = 0, $19 = 0, $2 = 0, $25 = 0, $28 = 0, $3 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $57 = 0, $6 = 0, $62 = 0, $64 = 0, $66 = 0, $67 = 0, $69 = 0, $74 = 0, $80 = 0, $84 = 0, $85 = 0, $89 = 0, $91 = 0, $93 = 0, $94 = 0, $96 = 0, label = 0;
 __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $1);
 $2 = HEAP32[$1 >> 2] | 0;
 L1 : do switch ($2 | 0) {
 case 2:
 case 5:
 case 4:
  break;
 case 10:
  {
   $$idx14 = $1 + 4 | 0;
   $$idx14$val = HEAP32[$$idx14 >> 2] | 0;
   $3 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$idx14$val << 2) | 0;
   if (($$idx14$val | 0) > 0) {
    $5 = $3 + -4 | 0;
    $6 = HEAP32[$5 >> 2] | 0;
    if ((HEAP8[87697 + ($6 & 63) >> 0] | 0) < 0) {
     $$0$i$i = $5;
     $12 = $6;
    } else label = 4;
   } else label = 4;
   if ((label | 0) == 4) {
    $$0$i$i = $3;
    $12 = HEAP32[$3 >> 2] | 0;
   }
   HEAP32[$$0$i$i >> 2] = (($12 & 16320 | 0) == 0 & 1) << 6 | $12 & -16321;
   $$0 = HEAP32[$$idx14 >> 2] | 0;
   label = 18;
   break;
  }
 default:
  {
   $19 = $1 + 4 | 0;
   switch ($2 | 0) {
   case 11:
    {
     $25 = HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$19 >> 2] << 2) >> 2] | 0;
     if (($25 & 63 | 0) == 19) {
      $28 = $0 + 24 | 0;
      HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + -1;
      $$0 = __ZL8condjumpP9FuncState6OpCodeiii($0, 26, $25 >>> 23, 0, 1) | 0;
      label = 18;
      break L1;
     } else label = 9;
     break;
    }
   case 12:
    {
     label = 14;
     break;
    }
   default:
    label = 9;
   }
   if ((label | 0) == 9) {
    $33 = $0 + 36 | 0;
    $34 = HEAP32[$33 >> 2] | 0;
    $35 = $34 + 1 | 0;
    $36 = HEAP32[$0 >> 2] | 0;
    if (($34 | 0) < (HEAPU8[$36 + 75 >> 0] | 0)) $48 = $34; else {
     if (($34 | 0) > 248) {
      __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
      $46 = HEAP32[$0 >> 2] | 0;
     } else $46 = $36;
     HEAP8[$46 + 75 >> 0] = $35;
     $48 = HEAP32[$33 >> 2] | 0;
    }
    HEAP32[$33 >> 2] = $48 + 1;
    __ZL13discharge2regP9FuncStateP7expdesci($0, $1, $48);
    if ((HEAP32[$1 >> 2] | 0) == 12) label = 14;
   }
   if ((label | 0) == 14) {
    $50 = HEAP32[$19 >> 2] | 0;
    if (!($50 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0) <= ($50 | 0)) {
     $57 = $0 + 36 | 0;
     HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + -1;
    }
   }
   $$0 = __ZL8condjumpP9FuncState6OpCodeiii($0, 27, 255, HEAP32[$19 >> 2] | 0, 0) | 0;
   label = 18;
  }
 } while (0);
 do if ((label | 0) == 18) {
  $62 = $1 + 16 | 0;
  if (($$0 | 0) != -1) {
   $64 = HEAP32[$62 >> 2] | 0;
   if (($64 | 0) == -1) {
    HEAP32[$62 >> 2] = $$0;
    break;
   }
   $$idx$val$idx$val$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
   $$0$i = $64;
   while (1) {
    $66 = $$idx$val$idx$val$i + ($$0$i << 2) | 0;
    $67 = HEAP32[$66 >> 2] | 0;
    $69 = ($67 >>> 14) + -131071 | 0;
    $$0$i$i16 = ($69 | 0) == -1 ? -1 : $$0$i + 1 + $69 | 0;
    if (($$0$i$i16 | 0) == -1) break; else $$0$i = $$0$i$i16;
   }
   $74 = $$0 + ~$$0$i | 0;
   if (((($74 | 0) > -1 ? $74 : 0 - $74 | 0) | 0) > 131071) {
    __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
    $80 = HEAP32[$66 >> 2] | 0;
   } else $80 = $67;
   HEAP32[$66 >> 2] = $80 & 16383 | ($74 << 14) + 2147467264;
  }
 } while (0);
 $84 = $1 + 12 | 0;
 $85 = HEAP32[$84 >> 2] | 0;
 HEAP32[$0 + 28 >> 2] = HEAP32[$0 + 24 >> 2];
 $89 = $0 + 32 | 0;
 if (($85 | 0) == -1) {
  HEAP32[$84 >> 2] = -1;
  return;
 }
 $91 = HEAP32[$89 >> 2] | 0;
 if (($91 | 0) == -1) {
  HEAP32[$89 >> 2] = $85;
  HEAP32[$84 >> 2] = -1;
  return;
 }
 $$idx$val$idx$val$i$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
 $$0$i$i15 = $91;
 while (1) {
  $93 = $$idx$val$idx$val$i$i + ($$0$i$i15 << 2) | 0;
  $94 = HEAP32[$93 >> 2] | 0;
  $96 = ($94 >>> 14) + -131071 | 0;
  $$0$i$i$i = ($96 | 0) == -1 ? -1 : $$0$i$i15 + 1 + $96 | 0;
  if (($$0$i$i$i | 0) == -1) break; else $$0$i$i15 = $$0$i$i$i;
 }
 $101 = $85 + ~$$0$i$i15 | 0;
 if (((($101 | 0) > -1 ? $101 : 0 - $101 | 0) | 0) > 131071) {
  __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
  $107 = HEAP32[$93 >> 2] | 0;
 } else $107 = $94;
 HEAP32[$93 >> 2] = $107 & 16383 | ($101 << 14) + 2147467264;
 HEAP32[$84 >> 2] = -1;
 return;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i26 = 0, $$0$i$i29 = 0, $$byval_copy = 0, $$pn = 0, $$sroa$041$0 = 0, $10 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $30 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $53 = 0, $6 = 0, $60 = 0, $7 = 0, $70 = 0, $77 = 0, $8 = 0, $85 = 0, $87 = 0, $88 = 0, $9 = 0, $92 = 0, $93 = 0, $95 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 164 | 0;
 $8 = sp + 161 | 0;
 $9 = sp + 160 | 0;
 $10 = sp + 40 | 0;
 $11 = sp + 28 | 0;
 $12 = sp + 16 | 0;
 $13 = sp + 12 | 0;
 $14 = sp + 60 | 0;
 $15 = sp + 8 | 0;
 $16 = sp + 4 | 0;
 $17 = sp;
 HEAP32[$6 >> 2] = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 $19 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110168) | 0;
 $20 = $5 + 11 | 0;
 $21 = HEAP8[$20 >> 0] | 0;
 $22 = $21 << 24 >> 24 < 0;
 $23 = $5 + 4 | 0;
 if (!(($22 ? HEAP32[$23 >> 2] | 0 : $21 & 255) | 0)) $42 = 0; else {
  $30 = HEAP8[($22 ? HEAP32[$5 >> 2] | 0 : $5) >> 0] | 0;
  $42 = $30 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 31]($19, 45) | 0) << 24 >> 24;
 };
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 $$0$i$i26 = 0;
 while (1) {
  if (($$0$i$i26 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i26 << 2) >> 2] = 0;
  $$0$i$i26 = $$0$i$i26 + 1 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $$0$i$i29 = 0;
 while (1) {
  if (($$0$i$i29 | 0) == 3) break;
  HEAP32[$12 + ($$0$i$i29 << 2) >> 2] = 0;
  $$0$i$i29 = $$0$i$i29 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2, $42, $6, $7, $8, $9, $10, $11, $12, $13);
 $43 = HEAP8[$20 >> 0] | 0;
 $45 = HEAP32[$23 >> 2] | 0;
 $47 = $43 << 24 >> 24 < 0 ? $45 : $43 & 255;
 $48 = HEAP32[$13 >> 2] | 0;
 if (($47 | 0) > ($48 | 0)) {
  $53 = HEAP8[$12 + 11 >> 0] | 0;
  $60 = HEAP8[$11 + 11 >> 0] | 0;
  $$pn = ($53 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $53 & 255) + ($47 - $48 << 1 | 1) + ($60 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $60 & 255) | 0;
 } else {
  $70 = HEAP8[$12 + 11 >> 0] | 0;
  $77 = HEAP8[$11 + 11 >> 0] | 0;
  $$pn = ($70 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $70 & 255) + 2 + ($77 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $77 & 255) | 0;
 }
 $85 = $$pn + $48 | 0;
 if ($85 >>> 0 > 100) {
  $87 = _malloc($85) | 0;
  $88 = $87;
  if (!$87) {
   $$0 = 0;
   $$sroa$041$0 = $88;
   $102 = HEAP32[$13 >> 2] | 0;
   $92 = HEAP8[$20 >> 0] | 0;
   $97 = HEAP32[$23 >> 2] | 0;
  } else {
   $$0 = $87;
   $$sroa$041$0 = $88;
   $102 = $48;
   $92 = $43;
   $97 = $45;
  }
 } else {
  $$0 = $14;
  $$sroa$041$0 = 0;
  $102 = $48;
  $92 = $43;
  $97 = $45;
 }
 $93 = $92 << 24 >> 24 < 0;
 $95 = $93 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$0, $15, $16, HEAP32[$3 + 4 >> 2] | 0, $95, $95 + ($93 ? $97 : $92 & 255) | 0, $19, $42, $7, HEAP8[$8 >> 0] | 0, HEAP8[$9 >> 0] | 0, $10, $11, $12, $102);
 HEAP32[$17 >> 2] = HEAP32[$1 >> 2];
 $104 = HEAP32[$15 >> 2] | 0;
 $105 = HEAP32[$16 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$17 >> 2];
 $106 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$0, $104, $105, $3, $4) | 0;
 if ($$sroa$041$0 | 0) _free($$sroa$041$0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$6 >> 2] | 0) | 0;
 STACKTOP = sp;
 return $106 | 0;
}

function __ZNSt3__218__insertion_sort_3IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEvT0_S6_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i36 = 0, $$03338 = 0, $$034 = 0, $$034$lcssa = 0, $$039 = 0, $$039$phi = 0, $$1 = 0, $$1$phi = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $22 = 0, $28 = 0, $3 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $52 = 0, $53 = 0, $58 = 0, $6 = 0, $63 = 0, $69 = 0, $8 = 0, $82 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $3 = sp;
 $4 = $0 + 160 | 0;
 __ZNSt3__27__sort3IRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEjT0_S6_S6_T_($0, $0 + 80 | 0, $4, $2) | 0;
 $6 = $0 + 240 | 0;
 if (($6 | 0) == ($1 | 0)) {
  STACKTOP = sp;
  return;
 }
 $8 = $3 + 12 | 0;
 $9 = $3 + 24 | 0;
 $10 = $3 + 36 | 0;
 $11 = $3 + 48 | 0;
 $12 = $3 + 60 | 0;
 $13 = $3 + 72 | 0;
 $14 = $12 + 11 | 0;
 $15 = $3 + 11 | 0;
 $$03338 = $6;
 $$039 = $4;
 while (1) {
  $16 = $$03338 + 60 | 0;
  $22 = $$039 + 60 | 0;
  $28 = _strcmp((HEAP8[$16 + 11 >> 0] | 0) < 0 ? HEAP32[$16 >> 2] | 0 : $16, (HEAP8[$22 + 11 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) | 0;
  if (!$28) $$0$i = _strcmp((HEAP8[$$03338 + 11 >> 0] | 0) < 0 ? HEAP32[$$03338 >> 2] | 0 : $$03338, (HEAP8[$$039 + 11 >> 0] | 0) < 0 ? HEAP32[$$039 >> 2] | 0 : $$039) | 0; else $$0$i = $28;
  if (($$0$i | 0) < 0) {
   HEAP32[$3 >> 2] = HEAP32[$$03338 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$$03338 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$$03338 + 8 >> 2];
   HEAP32[$$03338 >> 2] = 0;
   HEAP32[$$03338 + 4 >> 2] = 0;
   HEAP32[$$03338 + 8 >> 2] = 0;
   $42 = $$03338 + 12 | 0;
   HEAP32[$8 >> 2] = HEAP32[$42 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$42 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$42 + 8 >> 2];
   HEAP32[$42 >> 2] = 0;
   HEAP32[$42 + 4 >> 2] = 0;
   HEAP32[$42 + 8 >> 2] = 0;
   $43 = $$03338 + 24 | 0;
   HEAP32[$9 >> 2] = HEAP32[$43 >> 2];
   HEAP32[$9 + 4 >> 2] = HEAP32[$43 + 4 >> 2];
   HEAP32[$9 + 8 >> 2] = HEAP32[$43 + 8 >> 2];
   HEAP32[$43 >> 2] = 0;
   HEAP32[$43 + 4 >> 2] = 0;
   HEAP32[$43 + 8 >> 2] = 0;
   $44 = $$03338 + 36 | 0;
   HEAP32[$10 >> 2] = HEAP32[$44 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$44 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$44 + 8 >> 2];
   HEAP32[$44 >> 2] = 0;
   HEAP32[$44 + 4 >> 2] = 0;
   HEAP32[$44 + 8 >> 2] = 0;
   $45 = $$03338 + 48 | 0;
   HEAP32[$11 >> 2] = HEAP32[$45 >> 2];
   HEAP32[$11 + 4 >> 2] = HEAP32[$45 + 4 >> 2];
   HEAP32[$11 + 8 >> 2] = HEAP32[$45 + 8 >> 2];
   HEAP32[$45 >> 2] = 0;
   HEAP32[$45 + 4 >> 2] = 0;
   HEAP32[$45 + 8 >> 2] = 0;
   HEAP32[$12 >> 2] = HEAP32[$16 >> 2];
   HEAP32[$12 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
   HEAP32[$12 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
   HEAP32[$16 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = 0;
   $47 = $$03338 + 72 | 0;
   $52 = HEAP32[$47 + 4 >> 2] | 0;
   $53 = $13;
   HEAP32[$53 >> 2] = HEAP32[$47 >> 2];
   HEAP32[$53 + 4 >> 2] = $52;
   $$034 = $$039;
   $$1 = $$03338;
   while (1) {
    __ZN6google19CommandLineFlagInfoaSEOS0_($$1, $$034) | 0;
    if (($$034 | 0) == ($0 | 0)) {
     $$034$lcssa = $0;
     break;
    }
    $58 = $$034 + -80 | 0;
    $63 = $$034 + -20 | 0;
    $69 = _strcmp((HEAP8[$14 >> 0] | 0) < 0 ? HEAP32[$12 >> 2] | 0 : $12, (HEAP8[$63 + 11 >> 0] | 0) < 0 ? HEAP32[$63 >> 2] | 0 : $63) | 0;
    if (!$69) $$0$i36 = _strcmp((HEAP8[$15 >> 0] | 0) < 0 ? HEAP32[$3 >> 2] | 0 : $3, (HEAP8[$58 + 11 >> 0] | 0) < 0 ? HEAP32[$58 >> 2] | 0 : $58) | 0; else $$0$i36 = $69;
    if (($$0$i36 | 0) < 0) {
     $$1$phi = $$034;
     $$034 = $58;
     $$1 = $$1$phi;
    } else {
     $$034$lcssa = $$034;
     break;
    }
   }
   __ZN6google19CommandLineFlagInfoaSEOS0_($$034$lcssa, $3) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  }
  $82 = $$03338 + 80 | 0;
  if (($82 | 0) == ($1 | 0)) break; else {
   $$039$phi = $$03338;
   $$03338 = $82;
   $$039 = $$039$phi;
  }
 }
 STACKTOP = sp;
 return;
}

function __ZN6google12_GLOBAL__N_19FlagValue9ParseFromEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$058 = 0, $$062 = 0, $$159 = 0, $$7 = 0, $$8 = 0, $14 = 0, $19 = 0, $2 = 0, $22 = 0, $23 = 0, $26 = 0, $3 = 0, $38 = 0, $39 = 0, $42 = 0, $50 = 0, $51 = 0, $54 = 0, $59 = 0, $65 = 0, $66 = 0, $69 = 0, $74 = 0, $78 = 0.0, $81 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 4 | 0;
 switch (HEAP8[$3 >> 0] | 0) {
 case 0:
  {
   do if (_strcasecmp($1, 91301) | 0) {
    if (_strcasecmp($1, 91299) | 0) {
     if (!(_strcasecmp($1, 91421) | 0)) break;
     if (_strcasecmp($1, 91423) | 0) {
      if (!(_strcasecmp($1, 104928) | 0)) break;
      if (_strcasecmp($1, 104922) | 0) {
       if (!(_strcasecmp($1, 91425) | 0)) break;
       if (_strcasecmp($1, 91427) | 0) {
        if (!(_strcasecmp($1, 91429) | 0)) break;
        if (_strcasecmp($1, 91433) | 0) {
         $$8 = 0;
         STACKTOP = sp;
         return $$8 | 0;
        }
       }
      }
     }
    }
    HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
    $$8 = 1;
    STACKTOP = sp;
    return $$8 | 0;
   } while (0);
   HEAP8[HEAP32[$0 >> 2] >> 0] = 1;
   $$8 = 1;
   STACKTOP = sp;
   return $$8 | 0;
  }
 case 6:
  {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(HEAP32[$0 >> 2] | 0, $1) | 0;
   $$8 = 1;
   STACKTOP = sp;
   return $$8 | 0;
  }
 default:
  {
   $14 = HEAP8[$1 >> 0] | 0;
   if (!($14 << 24 >> 24)) {
    $$8 = 0;
    STACKTOP = sp;
    return $$8 | 0;
   }
   L6 : do if ($14 << 24 >> 24 == 48) {
    switch (HEAP8[$1 + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      $$062 = 10;
      break L6;
     }
    }
    $$062 = 16;
   } else $$062 = 10; while (0);
   $19 = ___errno_location() | 0;
   HEAP32[$19 >> 2] = 0;
   L10 : do switch (HEAP8[$3 >> 0] | 0) {
   case 1:
    {
     $22 = _strtoll($1, $2, $$062) | 0;
     $23 = tempRet0;
     if (!(HEAP32[$19 >> 2] | 0)) {
      $26 = HEAP32[$2 >> 2] | 0;
      if (($26 | 0) == ($1 + (_strlen($1) | 0) | 0)) if (($22 | 0) == ($22 | 0) & ((($22 | 0) < 0) << 31 >> 31 | 0) == ($23 | 0)) {
       HEAP32[HEAP32[$0 >> 2] >> 2] = $22;
       $$7 = 1;
      } else $$7 = 0; else $$7 = 0;
     } else $$7 = 0;
     break;
    }
   case 2:
    {
     $$058 = $1;
     L15 : while (1) {
      switch (HEAP8[$$058 >> 0] | 0) {
      case 45:
       {
        $$7 = 0;
        break L10;
        break;
       }
      case 32:
       break;
      default:
       break L15;
      }
      $$058 = $$058 + 1 | 0;
     }
     $38 = _strtoull($$058, $2, $$062) | 0;
     $39 = tempRet0;
     if (!(HEAP32[$19 >> 2] | 0)) {
      $42 = HEAP32[$2 >> 2] | 0;
      if (($38 | 0) == ($38 | 0) & 0 == ($39 | 0) & ($42 | 0) == ($$058 + (_strlen($$058) | 0) | 0)) {
       HEAP32[HEAP32[$0 >> 2] >> 2] = $38;
       $$7 = 1;
      } else $$7 = 0;
     } else $$7 = 0;
     break;
    }
   case 3:
    {
     $50 = _strtoll($1, $2, $$062) | 0;
     $51 = tempRet0;
     if (!(HEAP32[$19 >> 2] | 0)) {
      $54 = HEAP32[$2 >> 2] | 0;
      if (($54 | 0) == ($1 + (_strlen($1) | 0) | 0)) {
       $59 = HEAP32[$0 >> 2] | 0;
       HEAP32[$59 >> 2] = $50;
       HEAP32[$59 + 4 >> 2] = $51;
       $$7 = 1;
      } else $$7 = 0;
     } else $$7 = 0;
     break;
    }
   case 4:
    {
     $$159 = $1;
     L24 : while (1) {
      switch (HEAP8[$$159 >> 0] | 0) {
      case 45:
       {
        $$7 = 0;
        break L10;
        break;
       }
      case 32:
       break;
      default:
       break L24;
      }
      $$159 = $$159 + 1 | 0;
     }
     $65 = _strtoull($$159, $2, $$062) | 0;
     $66 = tempRet0;
     if (!(HEAP32[$19 >> 2] | 0)) {
      $69 = HEAP32[$2 >> 2] | 0;
      if (($69 | 0) == ($$159 + (_strlen($$159) | 0) | 0)) {
       $74 = HEAP32[$0 >> 2] | 0;
       HEAP32[$74 >> 2] = $65;
       HEAP32[$74 + 4 >> 2] = $66;
       $$7 = 1;
      } else $$7 = 0;
     } else $$7 = 0;
     break;
    }
   case 5:
    {
     $78 = +_strtod($1, $2);
     if (!(HEAP32[$19 >> 2] | 0)) {
      $81 = HEAP32[$2 >> 2] | 0;
      if (($81 | 0) == ($1 + (_strlen($1) | 0) | 0)) {
       HEAPF64[HEAP32[$0 >> 2] >> 3] = $78;
       $$7 = 1;
      } else $$7 = 0;
     } else $$7 = 0;
     break;
    }
   default:
    $$7 = 0;
   } while (0);
   $$8 = $$7;
   STACKTOP = sp;
   return $$8 | 0;
  }
 }
 return 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$081$off0 = 0, $$084 = 0, $$085$off0 = 0, $$1 = 0, $$182$off0 = 0, $$186$off0 = 0, $$2 = 0, $$283$off0 = 0, $11 = 0, $19 = 0, $25 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $53 = 0, $61 = 0, $64 = 0, $65 = 0, $66 = 0, $69 = 0, $72 = 0, $75 = 0, $82 = 0, $83 = 0, $84 = 0, label = 0;
 L1 : do if (($0 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) {
  if ((HEAP32[$1 + 4 >> 2] | 0) == ($2 | 0)) {
   $11 = $1 + 28 | 0;
   if ((HEAP32[$11 >> 2] | 0) != 1) HEAP32[$11 >> 2] = $3;
  }
 } else {
  if (($0 | 0) != (HEAP32[$1 >> 2] | 0)) {
   $64 = HEAP32[$0 + 12 >> 2] | 0;
   $65 = $0 + 16 + ($64 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0 + 16 | 0, $1, $2, $3, $4);
   $66 = $0 + 24 | 0;
   if (($64 | 0) <= 1) break;
   $69 = HEAP32[$0 + 8 >> 2] | 0;
   if (!($69 & 2)) {
    $72 = $1 + 36 | 0;
    if ((HEAP32[$72 >> 2] | 0) != 1) {
     if (!($69 & 1)) {
      $84 = $1 + 54 | 0;
      $$2 = $66;
      while (1) {
       if (HEAP8[$84 >> 0] | 0) break L1;
       if ((HEAP32[$72 >> 2] | 0) == 1) break L1;
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$2, $1, $2, $3, $4);
       $$2 = $$2 + 8 | 0;
       if ($$2 >>> 0 >= $65 >>> 0) break L1;
      }
     }
     $82 = $1 + 24 | 0;
     $83 = $1 + 54 | 0;
     $$1 = $66;
     while (1) {
      if (HEAP8[$83 >> 0] | 0) break L1;
      if ((HEAP32[$72 >> 2] | 0) == 1) if ((HEAP32[$82 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$1, $1, $2, $3, $4);
      $$1 = $$1 + 8 | 0;
      if ($$1 >>> 0 >= $65 >>> 0) break L1;
     }
    }
   }
   $75 = $1 + 54 | 0;
   $$0 = $66;
   while (1) {
    if (HEAP8[$75 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$0, $1, $2, $3, $4);
    $$0 = $$0 + 8 | 0;
    if ($$0 >>> 0 >= $65 >>> 0) break L1;
   }
  }
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $19 = $1 + 20 | 0;
   if ((HEAP32[$19 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$1 + 32 >> 2] = $3;
    $25 = $1 + 44 | 0;
    if ((HEAP32[$25 >> 2] | 0) == 4) break;
    $31 = $0 + 16 + (HEAP32[$0 + 12 >> 2] << 3) | 0;
    $32 = $1 + 52 | 0;
    $33 = $1 + 53 | 0;
    $34 = $1 + 54 | 0;
    $35 = $0 + 8 | 0;
    $36 = $1 + 24 | 0;
    $$081$off0 = 0;
    $$084 = $0 + 16 | 0;
    $$085$off0 = 0;
    L34 : while (1) {
     if ($$084 >>> 0 >= $31 >>> 0) {
      $$283$off0 = $$081$off0;
      label = 20;
      break;
     }
     HEAP8[$32 >> 0] = 0;
     HEAP8[$33 >> 0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$084, $1, $2, $2, 1, $4);
     if (HEAP8[$34 >> 0] | 0) {
      $$283$off0 = $$081$off0;
      label = 20;
      break;
     }
     do if (!(HEAP8[$33 >> 0] | 0)) {
      $$182$off0 = $$081$off0;
      $$186$off0 = $$085$off0;
     } else {
      if (!(HEAP8[$32 >> 0] | 0)) if (!(HEAP32[$35 >> 2] & 1)) {
       $$283$off0 = 1;
       label = 20;
       break L34;
      } else {
       $$182$off0 = 1;
       $$186$off0 = $$085$off0;
       break;
      }
      if ((HEAP32[$36 >> 2] | 0) == 1) {
       label = 25;
       break L34;
      }
      if (!(HEAP32[$35 >> 2] & 2)) {
       label = 25;
       break L34;
      } else {
       $$182$off0 = 1;
       $$186$off0 = 1;
      }
     } while (0);
     $$081$off0 = $$182$off0;
     $$084 = $$084 + 8 | 0;
     $$085$off0 = $$186$off0;
    }
    do if ((label | 0) == 20) {
     if (!$$085$off0) {
      HEAP32[$19 >> 2] = $2;
      $53 = $1 + 40 | 0;
      HEAP32[$53 >> 2] = (HEAP32[$53 >> 2] | 0) + 1;
      if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$36 >> 2] | 0) == 2) {
       HEAP8[$34 >> 0] = 1;
       if ($$283$off0) {
        label = 25;
        break;
       } else {
        $61 = 4;
        break;
       }
      }
     }
     if ($$283$off0) label = 25; else $61 = 4;
    } while (0);
    if ((label | 0) == 25) $61 = 3;
    HEAP32[$25 >> 2] = $61;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __Z11luaV_concatP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$015$i = 0, $$076 = 0, $$077$lcssa = 0, $$07783 = 0, $$07889 = 0, $$079$lcssa = 0, $$07982 = 0, $$1 = 0, $$180$lcssa = 0, $$18088 = 0, $10 = 0, $102 = 0, $11 = 0, $12 = 0, $14 = 0, $20 = 0, $24 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $4 = 0, $40 = 0, $47 = 0, $5 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $63 = 0, $7 = 0, $70 = 0, $78 = 0, $81 = 0, $82 = 0, $86 = 0, $90 = 0, $92 = 0, $95 = 0, $99 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $3 = $0 + 12 | 0;
 $4 = $0 + 16 | 0;
 $5 = $0 + 32 | 0;
 $6 = $0 + 8 | 0;
 $7 = $0 + 28 | 0;
 $$0 = $1;
 $$076 = $2;
 while (1) {
  $10 = (HEAP32[$3 >> 2] | 0) + ($$076 << 3) + 8 | 0;
  $11 = $10 + -16 | 0;
  $12 = $11 + 4 | 0;
  $14 = $10 + -8 | 0;
  do if (((HEAP32[$12 >> 2] | 0) + -3 | 0) >>> 0 < 2) {
   if ((HEAP32[$14 + 4 >> 2] | 0) != 4) if (!(__Z13luaV_tostringP9lua_StateP10lua_TValue($0, $14) | 0)) {
    label = 5;
    break;
   }
   $63 = HEAP32[(HEAP32[$14 >> 2] | 0) + 12 >> 2] | 0;
   if (!$63) {
    if ((HEAP32[$12 >> 2] | 0) == 4) {
     $$1 = 2;
     break;
    }
    __Z13luaV_tostringP9lua_StateP10lua_TValue($0, $11) | 0;
    $$1 = 2;
    break;
   }
   L12 : do if (($$0 | 0) > 1) {
    $$07783 = 1;
    $$07982 = $63;
    while (1) {
     $70 = $10 + (0 - $$07783 << 3) + -8 | 0;
     if ((HEAP32[$70 + 4 >> 2] | 0) != 4) if (!(__Z13luaV_tostringP9lua_StateP10lua_TValue($0, $70) | 0)) {
      $$077$lcssa = $$07783;
      $$079$lcssa = $$07982;
      break L12;
     }
     $78 = HEAP32[(HEAP32[$70 >> 2] | 0) + 12 >> 2] | 0;
     if ($78 >>> 0 >= (-3 - $$07982 | 0) >>> 0) __Z13luaG_runerrorP9lua_StatePKcz($0, 89565, $vararg_buffer);
     $81 = $78 + $$07982 | 0;
     $82 = $$07783 + 1 | 0;
     if (($82 | 0) < ($$0 | 0)) {
      $$07783 = $82;
      $$07982 = $81;
     } else {
      $$077$lcssa = $82;
      $$079$lcssa = $81;
      break;
     }
    }
   } else {
    $$077$lcssa = 1;
    $$079$lcssa = $63;
   } while (0);
   $86 = __Z14luaZ_openspaceP9lua_StateP7Mbufferj($0, (HEAP32[$4 >> 2] | 0) + 52 | 0, $$079$lcssa) | 0;
   if (($$077$lcssa | 0) > 0) {
    $$07889 = $$077$lcssa;
    $$18088 = 0;
    while (1) {
     $90 = HEAP32[$10 + (0 - $$07889 << 3) >> 2] | 0;
     $92 = HEAP32[$90 + 12 >> 2] | 0;
     _memcpy($86 + $$18088 | 0, $90 + 16 | 0, $92 | 0) | 0;
     $95 = $92 + $$18088 | 0;
     if (($$07889 | 0) > 1) {
      $$07889 = $$07889 + -1 | 0;
      $$18088 = $95;
     } else {
      $$180$lcssa = $95;
      break;
     }
    }
   } else $$180$lcssa = 0;
   $99 = $10 + (0 - $$077$lcssa << 3) | 0;
   HEAP32[$99 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $86, $$180$lcssa) | 0;
   HEAP32[$99 + 4 >> 2] = 4;
   $$1 = $$077$lcssa;
  } else label = 5; while (0);
  do if ((label | 0) == 5) {
   label = 0;
   $20 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $11, 15) | 0;
   if (!(HEAP32[$20 + 4 >> 2] | 0)) {
    $24 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $14, 15) | 0;
    if (!(HEAP32[$24 + 4 >> 2] | 0)) {
     __Z16luaG_concaterrorP9lua_StateP10lua_TValueS2_($0, $11, $14);
     $$1 = 2;
     break;
    } else $$015$i = $24;
   } else $$015$i = $20;
   $29 = $11 - (HEAP32[$5 >> 2] | 0) | 0;
   $30 = HEAP32[$6 >> 2] | 0;
   HEAP32[$30 >> 2] = HEAP32[$$015$i >> 2];
   HEAP32[$30 + 4 >> 2] = HEAP32[$$015$i + 4 >> 2];
   $35 = HEAP32[$6 >> 2] | 0;
   HEAP32[$35 + 8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$35 + 12 >> 2] = HEAP32[$12 >> 2];
   $40 = HEAP32[$6 >> 2] | 0;
   HEAP32[$40 + 16 >> 2] = HEAP32[$14 >> 2];
   HEAP32[$40 + 20 >> 2] = HEAP32[$10 + -8 + 4 >> 2];
   $47 = HEAP32[$6 >> 2] | 0;
   if (((HEAP32[$7 >> 2] | 0) - $47 | 0) < 25) {
    __Z14luaD_growstackP9lua_Statei($0, 3);
    $52 = HEAP32[$6 >> 2] | 0;
   } else $52 = $47;
   HEAP32[$6 >> 2] = $52 + 24;
   __Z9luaD_callP9lua_StateP10lua_TValuei($0, $52, 1);
   $54 = (HEAP32[$5 >> 2] | 0) + $29 | 0;
   $55 = HEAP32[$6 >> 2] | 0;
   $56 = $55 + -8 | 0;
   HEAP32[$6 >> 2] = $56;
   HEAP32[$54 >> 2] = HEAP32[$56 >> 2];
   HEAP32[$54 + 4 >> 2] = HEAP32[$55 + -4 >> 2];
   $$1 = 2;
  } while (0);
  $102 = $$1 + -1 | 0;
  $$0 = $$0 - $102 | 0;
  if (($$0 | 0) <= 1) break; else $$076 = $$076 - $102 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN10LuaMemPool10AcquirePtrEbb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i$i = 0, $$06$i2$i$i = 0, $$pre$i$i = 0, $$pre13$i$i = 0, $$sroa$08$012$i$i = 0, $11 = 0, $17 = 0, $2 = 0, $23 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $48 = 0, $53 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $66 = 0, $69 = 0, $71 = 0, $72 = 0, $74 = 0, $78 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $88 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = 107868;
 if ($0) $24 = 107868; else {
  __ZN12spring_futex4lockEv(107840);
  $4 = HEAP32[26962] | 0;
  do if ((HEAP32[26961] | 0) == ($4 | 0)) {
   $6 = __Znwj(96) | 0;
   __ZN10LuaMemPoolC2Ej($6, (HEAP32[26965] | 0) - (HEAP32[26964] | 0) >> 2);
   HEAP32[$2 >> 2] = $6;
   $11 = HEAP32[26965] | 0;
   if (($11 | 0) == (HEAP32[26966] | 0)) {
    __ZNSt3__26vectorIP10LuaMemPoolNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(107856, $2);
    break;
   } else {
    HEAP32[$11 >> 2] = $6;
    HEAP32[26965] = (HEAP32[26965] | 0) + 4;
    break;
   }
  } else {
   $17 = $4 + -4 | 0;
   HEAP32[$2 >> 2] = HEAP32[(HEAP32[26964] | 0) + (HEAP32[$17 >> 2] << 2) >> 2];
   HEAP32[26962] = $17;
  } while (0);
  __ZN12spring_futex6unlockEv(107840);
  $24 = HEAP32[$2 >> 2] | 0;
 }
 $23 = $24 + 92 | 0;
 $26 = (HEAP32[$23 >> 2] | 0) + ($0 & 1) | 0;
 HEAP32[$23 >> 2] = $26;
 if ($26 >>> 0 >= 2) {
  $94 = $1 & 1;
  $95 = HEAP32[26959] | 0;
  HEAP32[26959] = $95 + $94;
  $96 = HEAP32[$2 >> 2] | 0;
  STACKTOP = sp;
  return $96 | 0;
 }
 $28 = $24 + 56 | 0;
 $29 = HEAP32[$28 >> 2] | 0;
 $30 = $24 + 60 | 0;
 $31 = HEAP32[$30 >> 2] | 0;
 if (($29 | 0) != ($31 | 0)) {
  $$sroa$08$012$i$i = $29;
  do {
   __ZdlPv(HEAP32[$$sroa$08$012$i$i >> 2] | 0);
   $$sroa$08$012$i$i = $$sroa$08$012$i$i + 4 | 0;
  } while (($$sroa$08$012$i$i | 0) != ($31 | 0));
  $$pre$i$i = HEAP32[$28 >> 2] | 0;
  $$pre13$i$i = HEAP32[$30 >> 2] | 0;
  if (($$pre13$i$i | 0) != ($$pre$i$i | 0)) HEAP32[$30 >> 2] = $$pre13$i$i + (~(($$pre13$i$i + -4 - $$pre$i$i | 0) >>> 2) << 2);
 }
 $42 = $24 + 68 | 0;
 $43 = $24 + 12 | 0;
 HEAP32[$42 >> 2] = 0;
 HEAP32[$42 + 4 >> 2] = 0;
 HEAP32[$42 + 8 >> 2] = 0;
 HEAP32[$42 + 12 >> 2] = 0;
 HEAP32[$42 + 16 >> 2] = 0;
 $44 = HEAP32[$43 >> 2] | 0;
 if ($44 | 0) {
  $46 = $24 + 4 | 0;
  $$06$i$i$i = 0;
  $97 = $44;
  while (1) {
   $48 = (HEAP32[$46 >> 2] | 0) + $$06$i$i$i | 0;
   if ((HEAP8[$48 >> 0] | 0) == 2) {
    HEAP8[$48 >> 0] = 0;
    $53 = HEAP32[$43 >> 2] | 0;
   } else $53 = $97;
   $$06$i$i$i = $$06$i$i$i + 1 | 0;
   if ($$06$i$i$i >>> 0 >= $53 >>> 0) break; else $97 = $53;
  }
 }
 HEAP32[$24 + 16 >> 2] = 0;
 HEAP32[$24 + 20 >> 2] = -1;
 $56 = $24 + 40 | 0;
 $57 = HEAP32[$56 >> 2] | 0;
 if ($57 | 0) {
  $59 = $24 + 32 | 0;
  $$06$i2$i$i = 0;
  $98 = $57;
  while (1) {
   $61 = (HEAP32[$59 >> 2] | 0) + $$06$i2$i$i | 0;
   if ((HEAP8[$61 >> 0] | 0) == 2) {
    HEAP8[$61 >> 0] = 0;
    $66 = HEAP32[$56 >> 2] | 0;
   } else $66 = $98;
   $$06$i2$i$i = $$06$i2$i$i + 1 | 0;
   if ($$06$i2$i$i >>> 0 >= $66 >>> 0) break; else $98 = $66;
  }
 }
 HEAP32[$24 + 44 >> 2] = 0;
 HEAP32[$24 + 48 >> 2] = -1;
 $69 = HEAP32[$2 >> 2] | 0;
 __ZN6emilib7HashMapIjPvNSt3__24hashIjEENS_14HashMapEqualToIjEEE7reserveEj($69, 16384);
 __ZN6emilib7HashMapIjjNSt3__24hashIjEENS_14HashMapEqualToIjEEE7reserveEj($69 + 28 | 0, 16384);
 $71 = $69 + 56 | 0;
 $72 = $69 + 64 | 0;
 $74 = HEAP32[$71 >> 2] | 0;
 if ((HEAP32[$72 >> 2] | 0) - $74 >> 2 >>> 0 >= 1024) {
  $94 = $1 & 1;
  $95 = HEAP32[26959] | 0;
  HEAP32[26959] = $95 + $94;
  $96 = HEAP32[$2 >> 2] | 0;
  STACKTOP = sp;
  return $96 | 0;
 }
 $78 = $69 + 60 | 0;
 $80 = (HEAP32[$78 >> 2] | 0) - $74 | 0;
 $81 = $80 >> 2;
 $82 = __Znwj(4096) | 0;
 $83 = $82 + ($81 << 2) | 0;
 $88 = $83 + (0 - $81 << 2) | 0;
 if (($80 | 0) > 0) _memcpy($88 | 0, $74 | 0, $80 | 0) | 0;
 HEAP32[$71 >> 2] = $88;
 HEAP32[$78 >> 2] = $83;
 HEAP32[$72 >> 2] = $82 + 4096;
 if (!$74) {
  $94 = $1 & 1;
  $95 = HEAP32[26959] | 0;
  HEAP32[26959] = $95 + $94;
  $96 = HEAP32[$2 >> 2] | 0;
  STACKTOP = sp;
  return $96 | 0;
 }
 __ZdlPv($74);
 $94 = $1 & 1;
 $95 = HEAP32[26959] | 0;
 HEAP32[26959] = $95 + $94;
 $96 = HEAP32[$2 >> 2] | 0;
 STACKTOP = sp;
 return $96 | 0;
}

function __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i79 = 0, $$07$i$i = 0, $$07$i$i78 = 0, $$072 = 0, $$073 = 0, $$075 = 0, $$1 = 0, $$174 = 0, $$176 = 0, $$pre$phiZ2D = 0, $101 = 0, $102 = 0, $110 = 0, $13 = 0, $14 = 0, $16 = 0, $25 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $42 = 0, $47 = 0, $48 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $80 = 0, $81 = 0, $85 = 0, $89 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110200) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110208) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 63]($7, $9);
 $13 = $7 + 11 | 0;
 $14 = HEAP8[$13 >> 0] | 0;
 $16 = $7 + 4 | 0;
 L1 : do if (!(($14 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $14 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 15]($8, $0, $2, $3) | 0;
  $25 = $0;
  $27 = $3 + ($2 - $25 << 2) | 0;
  HEAP32[$5 >> 2] = $27;
  $$pre$phiZ2D = $25;
  $110 = $27;
 } else {
  HEAP32[$5 >> 2] = $3;
  $28 = HEAP8[$0 >> 0] | 0;
  switch ($28 << 24 >> 24) {
  case 43:
  case 45:
   {
    $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 31]($8, $28) | 0;
    $34 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $34 + 4;
    HEAP32[$34 >> 2] = $33;
    $$075 = $0 + 1 | 0;
    break;
   }
  default:
   $$075 = $0;
  }
  L7 : do if (($2 - $$075 | 0) > 1) if ((HEAP8[$$075 >> 0] | 0) == 48) {
   $42 = $$075 + 1 | 0;
   switch (HEAP8[$42 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $$176 = $$075;
     break L7;
    }
   }
   $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 31]($8, 48) | 0;
   $48 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $48 + 4;
   HEAP32[$48 >> 2] = $47;
   $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 31]($8, HEAP8[$42 >> 0] | 0) | 0;
   $56 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $56 + 4;
   HEAP32[$56 >> 2] = $55;
   $$176 = $$075 + 2 | 0;
  } else $$176 = $$075; else $$176 = $$075; while (0);
  L12 : do if (($$176 | 0) != ($2 | 0)) {
   $$0$i$i = $2;
   $$07$i$i = $$176;
   while (1) {
    $59 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $59 >>> 0) break L12;
    $61 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$59 >> 0] | 0;
    HEAP8[$59 >> 0] = $61;
    $$0$i$i = $59;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 255]($9) | 0;
  $$0 = $$176;
  $$072 = 0;
  $$073 = 0;
  while (1) {
   if ($$0 >>> 0 >= $2 >>> 0) break;
   $80 = HEAP8[$13 >> 0] | 0;
   $81 = $80 << 24 >> 24 < 0;
   $85 = HEAP8[($81 ? HEAP32[$7 >> 2] | 0 : $7) + $$072 >> 0] | 0;
   if ($85 << 24 >> 24 != 0 & ($$073 | 0) == ($85 << 24 >> 24 | 0)) {
    $89 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $89 + 4;
    HEAP32[$89 >> 2] = $67;
    $$1 = ($$072 >>> 0 < (($81 ? HEAP32[$16 >> 2] | 0 : $80 & 255) + -1 | 0) >>> 0 & 1) + $$072 | 0;
    $$174 = 0;
   } else {
    $$1 = $$072;
    $$174 = $$073;
   }
   $101 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 31]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $102 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $102 + 4;
   HEAP32[$102 >> 2] = $101;
   $$0 = $$0 + 1 | 0;
   $$072 = $$1;
   $$073 = $$174 + 1 | 0;
  }
  $70 = $0;
  $72 = $3 + ($$176 - $70 << 2) | 0;
  $73 = HEAP32[$5 >> 2] | 0;
  if (($72 | 0) == ($73 | 0)) {
   $$pre$phiZ2D = $70;
   $110 = $72;
  } else {
   $$0$i$i79 = $73;
   $$07$i$i78 = $72;
   while (1) {
    $75 = $$0$i$i79 + -4 | 0;
    if ($$07$i$i78 >>> 0 >= $75 >>> 0) {
     $$pre$phiZ2D = $70;
     $110 = $73;
     break L1;
    }
    $77 = HEAP32[$$07$i$i78 >> 2] | 0;
    HEAP32[$$07$i$i78 >> 2] = HEAP32[$75 >> 2];
    HEAP32[$75 >> 2] = $77;
    $$0$i$i79 = $75;
    $$07$i$i78 = $$07$i$i78 + 4 | 0;
   }
  }
 } while (0);
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $110 : $3 + ($1 - $$pre$phiZ2D << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZL8skip_sepP8LexState($0) {
 $0 = $0 | 0;
 var $$0$lcssa = 0, $$025 = 0, $$lcssa = 0, $$pre$phi$i22Z2D = 0, $$pre$phi$iZ2D = 0, $1 = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $26 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $68 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $84 = 0, $85 = 0, $87 = 0, $88 = 0, $9 = 0, $not$ = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $1 = sp + 32 | 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 40 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $4 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $8 = $4 + 8 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 if (($6 + 1 | 0) >>> 0 > $9 >>> 0) {
  if ($9 >>> 0 > 2147483645) {
   __Z12luaO_chunkidPcPKcj($1, (HEAP32[$0 + 44 >> 2] | 0) + 16 | 0, 80);
   $18 = $0 + 32 | 0;
   $19 = HEAP32[$18 >> 2] | 0;
   $21 = HEAP32[$0 + 4 >> 2] | 0;
   HEAP32[$vararg_buffer >> 2] = $1;
   HEAP32[$vararg_buffer + 4 >> 2] = $21;
   HEAP32[$vararg_buffer + 8 >> 2] = 89965;
   __Z16luaO_pushfstringP9lua_StatePKcz($19, 89955, $vararg_buffer) | 0;
   __Z10luaD_throwP9lua_Statei(HEAP32[$18 >> 2] | 0, 3);
  }
  $12 = $9 << 1;
  $14 = HEAP32[$0 + 32 >> 2] | 0;
  if (($12 | 0) == -2) {
   $$pre$phi$iZ2D = $4;
   $26 = __Z11luaM_toobigP9lua_State($14) | 0;
  } else {
   $$pre$phi$iZ2D = $4;
   $26 = __Z13luaM_realloc_P9lua_StatePvjj($14, HEAP32[$4 >> 2] | 0, $9, $12) | 0;
  }
  HEAP32[$$pre$phi$iZ2D >> 2] = $26;
  HEAP32[$8 >> 2] = $12;
  $29 = HEAP32[$5 >> 2] | 0;
  $31 = $26;
 } else {
  $29 = $6;
  $31 = HEAP32[$4 >> 2] | 0;
 }
 HEAP32[$5 >> 2] = $29 + 1;
 HEAP8[$31 + $29 >> 0] = $2;
 $32 = $0 + 36 | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 $34 = HEAP32[$33 >> 2] | 0;
 HEAP32[$33 >> 2] = $34 + -1;
 $37 = HEAP32[$32 >> 2] | 0;
 if (!$34) $44 = __Z9luaZ_fillP3Zio($37) | 0; else {
  $38 = $37 + 4 | 0;
  $39 = HEAP32[$38 >> 2] | 0;
  HEAP32[$38 >> 2] = $39 + 1;
  $44 = HEAPU8[$39 >> 0] | 0;
 }
 HEAP32[$0 >> 2] = $44;
 if (($44 | 0) != 61) {
  $$0$lcssa = 0;
  $$lcssa = $44;
  $not$ = ($$lcssa | 0) != ($2 | 0);
  $87 = $not$ << 31 >> 31;
  $88 = $87 ^ $$0$lcssa;
  STACKTOP = sp;
  return $88 | 0;
 }
 $46 = $0 + 44 | 0;
 $47 = $0 + 32 | 0;
 $48 = $0 + 4 | 0;
 $$025 = 0;
 while (1) {
  $49 = HEAP32[$3 >> 2] | 0;
  $50 = $49 + 4 | 0;
  $51 = HEAP32[$50 >> 2] | 0;
  $53 = $49 + 8 | 0;
  $54 = HEAP32[$53 >> 2] | 0;
  if (($51 + 1 | 0) >>> 0 > $54 >>> 0) {
   if ($54 >>> 0 > 2147483645) {
    label = 17;
    break;
   }
   $62 = $54 << 1;
   $64 = HEAP32[$47 >> 2] | 0;
   if (($62 | 0) == -2) {
    $$pre$phi$i22Z2D = $49;
    $68 = __Z11luaM_toobigP9lua_State($64) | 0;
   } else {
    $$pre$phi$i22Z2D = $49;
    $68 = __Z13luaM_realloc_P9lua_StatePvjj($64, HEAP32[$49 >> 2] | 0, $54, $62) | 0;
   }
   HEAP32[$$pre$phi$i22Z2D >> 2] = $68;
   HEAP32[$53 >> 2] = $62;
   $70 = HEAP32[$50 >> 2] | 0;
   $72 = $68;
  } else {
   $70 = $51;
   $72 = HEAP32[$49 >> 2] | 0;
  }
  HEAP32[$50 >> 2] = $70 + 1;
  HEAP8[$72 + $70 >> 0] = 61;
  $73 = HEAP32[$32 >> 2] | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  HEAP32[$73 >> 2] = $74 + -1;
  $77 = HEAP32[$32 >> 2] | 0;
  if (!$74) $84 = __Z9luaZ_fillP3Zio($77) | 0; else {
   $78 = $77 + 4 | 0;
   $79 = HEAP32[$78 >> 2] | 0;
   HEAP32[$78 >> 2] = $79 + 1;
   $84 = HEAPU8[$79 >> 0] | 0;
  }
  HEAP32[$0 >> 2] = $84;
  $85 = $$025 + 1 | 0;
  if (($84 | 0) == 61) $$025 = $85; else {
   $$0$lcssa = $85;
   $$lcssa = $84;
   label = 26;
   break;
  }
 }
 if ((label | 0) == 17) {
  __Z12luaO_chunkidPcPKcj($1, (HEAP32[$46 >> 2] | 0) + 16 | 0, 80);
  $59 = HEAP32[$47 >> 2] | 0;
  $60 = HEAP32[$48 >> 2] | 0;
  HEAP32[$vararg_buffer3 >> 2] = $1;
  HEAP32[$vararg_buffer3 + 4 >> 2] = $60;
  HEAP32[$vararg_buffer3 + 8 >> 2] = 89965;
  __Z16luaO_pushfstringP9lua_StatePKcz($59, 89955, $vararg_buffer3) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$47 >> 2] | 0, 3);
 } else if ((label | 0) == 26) {
  $not$ = ($$lcssa | 0) != ($2 | 0);
  $87 = $not$ << 31 >> 31;
  $88 = $87 ^ $$0$lcssa;
  STACKTOP = sp;
  return $88 | 0;
 }
 return 0;
}

function __ZL7auxsortP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$081 = 0, $$082 = 0, $$08599 = 0, $$08898 = 0, $$1$lcssa = 0, $$183$lcssa = 0, $$18392 = 0, $$18392$phi = 0, $$194 = 0, $$194$phi = 0, $$lcssa = 0, $$lcssa91 = 0, $15 = 0, $16 = 0, $19 = 0, $23 = 0, $24 = 0, $28 = 0, $29 = 0, $35 = 0, $36 = 0, $6 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0, $$08599$looptemp = 0, $$08898$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if (($2 | 0) > ($1 | 0)) {
  $$08599 = $2;
  $$08898 = $1;
 } else {
  STACKTOP = sp;
  return;
 }
 while (1) {
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $$08898);
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $$08599);
  if (!(__ZL9sort_compP9lua_Stateii($0, -1, -2) | 0)) __Z10lua_settopP9lua_Statei($0, -3); else {
   __Z11lua_rawsetiP9lua_Stateii($0, 1, $$08898);
   __Z11lua_rawsetiP9lua_Stateii($0, 1, $$08599);
  }
  $6 = $$08599 - $$08898 | 0;
  if (($6 | 0) == 1) {
   label = 24;
   break;
  }
  $9 = ($$08599 + $$08898 | 0) / 2 | 0;
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $9);
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $$08898);
  do if (!(__ZL9sort_compP9lua_Stateii($0, -2, -1) | 0)) {
   __Z10lua_settopP9lua_Statei($0, -2);
   __Z11lua_rawgetiP9lua_Stateii($0, 1, $$08599);
   if (!(__ZL9sort_compP9lua_Stateii($0, -1, -2) | 0)) {
    __Z10lua_settopP9lua_Statei($0, -3);
    break;
   } else {
    __Z11lua_rawsetiP9lua_Stateii($0, 1, $9);
    __Z11lua_rawsetiP9lua_Stateii($0, 1, $$08599);
    break;
   }
  } else {
   __Z11lua_rawsetiP9lua_Stateii($0, 1, $9);
   __Z11lua_rawsetiP9lua_Stateii($0, 1, $$08898);
  } while (0);
  if (($6 | 0) == 2) {
   label = 24;
   break;
  }
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $9);
  __Z13lua_pushvalueP9lua_Statei($0, -1);
  $15 = $$08599 + -1 | 0;
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $15);
  __Z11lua_rawsetiP9lua_Stateii($0, 1, $9);
  __Z11lua_rawsetiP9lua_Stateii($0, 1, $15);
  $$081 = $15;
  $$082 = $$08898;
  while (1) {
   $16 = $$082 + 1 | 0;
   __Z11lua_rawgetiP9lua_Stateii($0, 1, $16);
   if (!(__ZL9sort_compP9lua_Stateii($0, -1, -2) | 0)) {
    $$183$lcssa = $$082;
    $$lcssa = $16;
   } else {
    $$18392 = $$082;
    $24 = $16;
    while (1) {
     if (($$08599 | 0) <= ($$18392 | 0)) __Z10luaL_errorP9lua_StatePKcz($0, 89079, $vararg_buffer) | 0;
     __Z10lua_settopP9lua_Statei($0, -2);
     $23 = $24 + 1 | 0;
     __Z11lua_rawgetiP9lua_Stateii($0, 1, $23);
     if (!(__ZL9sort_compP9lua_Stateii($0, -1, -2) | 0)) {
      $$183$lcssa = $24;
      $$lcssa = $23;
      break;
     } else {
      $$18392$phi = $24;
      $24 = $23;
      $$18392 = $$18392$phi;
     }
    }
   }
   $19 = $$081 + -1 | 0;
   __Z11lua_rawgetiP9lua_Stateii($0, 1, $19);
   if (!(__ZL9sort_compP9lua_Stateii($0, -3, -1) | 0)) {
    $$1$lcssa = $$081;
    $$lcssa91 = $19;
   } else {
    $$194 = $$081;
    $29 = $19;
    while (1) {
     if (($$194 | 0) <= ($$08898 | 0)) __Z10luaL_errorP9lua_StatePKcz($0, 89079, $vararg_buffer1) | 0;
     __Z10lua_settopP9lua_Statei($0, -2);
     $28 = $29 + -1 | 0;
     __Z11lua_rawgetiP9lua_Stateii($0, 1, $28);
     if (!(__ZL9sort_compP9lua_Stateii($0, -3, -1) | 0)) {
      $$1$lcssa = $29;
      $$lcssa91 = $28;
      break;
     } else {
      $$194$phi = $29;
      $29 = $28;
      $$194 = $$194$phi;
     }
    }
   }
   if (($$1$lcssa | 0) <= ($$lcssa | 0)) break;
   __Z11lua_rawsetiP9lua_Stateii($0, 1, $$lcssa);
   __Z11lua_rawsetiP9lua_Stateii($0, 1, $$lcssa91);
   $$081 = $$lcssa91;
   $$082 = $$lcssa;
  }
  __Z10lua_settopP9lua_Statei($0, -4);
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $15);
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $$lcssa);
  __Z11lua_rawsetiP9lua_Stateii($0, 1, $15);
  __Z11lua_rawsetiP9lua_Stateii($0, 1, $$lcssa);
  $35 = ($$lcssa - $$08898 | 0) < ($$08599 - $$lcssa | 0);
  $36 = $$183$lcssa + 2 | 0;
  $$08898$looptemp = $$08898;
  $$08898 = $35 ? $36 : $$08898;
  $$08599$looptemp = $$08599;
  $$08599 = $35 ? $$08599 : $$183$lcssa;
  __ZL7auxsortP9lua_Stateii($0, $35 ? $$08898$looptemp : $36, $35 ? $$183$lcssa : $$08599$looptemp);
  if (($$08599 | 0) <= ($$08898 | 0)) {
   label = 24;
   break;
  }
 }
 if ((label | 0) == 24) {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i77 = 0, $$07$i$i = 0, $$07$i$i76 = 0, $$070 = 0, $$071 = 0, $$073 = 0, $$1 = 0, $$172 = 0, $$174 = 0, $$pre$phiZ2D = 0, $103 = 0, $104 = 0, $112 = 0, $13 = 0, $14 = 0, $16 = 0, $25 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $42 = 0, $47 = 0, $48 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $85 = 0, $89 = 0, $9 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110168) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110184) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 63]($7, $9);
 $13 = $7 + 11 | 0;
 $14 = HEAP8[$13 >> 0] | 0;
 $16 = $7 + 4 | 0;
 if (!(($14 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $14 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 15]($8, $0, $2, $3) | 0;
  $25 = $0;
  $27 = $3 + ($2 - $25) | 0;
  HEAP32[$5 >> 2] = $27;
  $$pre$phiZ2D = $25;
  $112 = $27;
 } else {
  HEAP32[$5 >> 2] = $3;
  $28 = HEAP8[$0 >> 0] | 0;
  switch ($28 << 24 >> 24) {
  case 43:
  case 45:
   {
    $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, $28) | 0;
    $34 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $34 + 1;
    HEAP8[$34 >> 0] = $33;
    $$073 = $0 + 1 | 0;
    break;
   }
  default:
   $$073 = $0;
  }
  L7 : do if (($2 - $$073 | 0) > 1) if ((HEAP8[$$073 >> 0] | 0) == 48) {
   $42 = $$073 + 1 | 0;
   switch (HEAP8[$42 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $$174 = $$073;
     break L7;
    }
   }
   $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, 48) | 0;
   $48 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $48 + 1;
   HEAP8[$48 >> 0] = $47;
   $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, HEAP8[$42 >> 0] | 0) | 0;
   $56 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $56 + 1;
   HEAP8[$56 >> 0] = $55;
   $$174 = $$073 + 2 | 0;
  } else $$174 = $$073; else $$174 = $$073; while (0);
  L12 : do if (($$174 | 0) != ($2 | 0)) {
   $$0$i$i = $2;
   $$07$i$i = $$174;
   while (1) {
    $59 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $59 >>> 0) break L12;
    $61 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$59 >> 0] | 0;
    HEAP8[$59 >> 0] = $61;
    $$0$i$i = $59;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 255]($9) | 0;
  $$0 = $$174;
  $$070 = 0;
  $$071 = 0;
  while (1) {
   if ($$0 >>> 0 >= $2 >>> 0) break;
   $85 = HEAP8[((HEAP8[$13 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$070 >> 0] | 0;
   if ($85 << 24 >> 24 != 0 & ($$071 | 0) == ($85 << 24 >> 24 | 0)) {
    $89 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $89 + 1;
    HEAP8[$89 >> 0] = $67;
    $91 = HEAP8[$13 >> 0] | 0;
    $$1 = ($$070 >>> 0 < (($91 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $91 & 255) + -1 | 0) >>> 0 & 1) + $$070 | 0;
    $$172 = 0;
   } else {
    $$1 = $$070;
    $$172 = $$071;
   }
   $103 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $104 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $104 + 1;
   HEAP8[$104 >> 0] = $103;
   $$0 = $$0 + 1 | 0;
   $$070 = $$1;
   $$071 = $$172 + 1 | 0;
  }
  $70 = $0;
  $72 = $3 + ($$174 - $70) | 0;
  $73 = HEAP32[$5 >> 2] | 0;
  if (($72 | 0) == ($73 | 0)) {
   $$pre$phiZ2D = $70;
   $112 = $72;
  } else {
   $$0$i$i77 = $73;
   $$07$i$i76 = $72;
   while (1) {
    $75 = $$0$i$i77 + -1 | 0;
    if ($$07$i$i76 >>> 0 >= $75 >>> 0) break;
    $77 = HEAP8[$$07$i$i76 >> 0] | 0;
    HEAP8[$$07$i$i76 >> 0] = HEAP8[$75 >> 0] | 0;
    HEAP8[$75 >> 0] = $77;
    $$0$i$i77 = $75;
    $$07$i$i76 = $$07$i$i76 + 1 | 0;
   }
   $$pre$phiZ2D = $70;
   $112 = HEAP32[$5 >> 2] | 0;
  }
 }
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $112 : $3 + ($1 - $$pre$phiZ2D) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZN6google19CommandLineFlagInfoaSEOS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $30 = 0, $35 = 0, $36 = 0, $37 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 11 | 0;
 if ((HEAP8[$2 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
 } else {
  HEAP8[$0 >> 0] = 0;
  HEAP8[$2 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, 0);
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $7 = $0 + 12 | 0;
 $8 = $1 + 12 | 0;
 $9 = $7 + 11 | 0;
 if ((HEAP8[$9 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$7 >> 2] >> 0] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
 } else {
  HEAP8[$7 >> 0] = 0;
  HEAP8[$9 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($7, 0);
 HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
 HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $14 = $0 + 24 | 0;
 $15 = $1 + 24 | 0;
 $16 = $14 + 11 | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$14 >> 2] >> 0] = 0;
  HEAP32[$0 + 28 >> 2] = 0;
 } else {
  HEAP8[$14 >> 0] = 0;
  HEAP8[$16 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($14, 0);
 HEAP32[$14 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$14 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
 HEAP32[$14 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $21 = $0 + 36 | 0;
 $22 = $1 + 36 | 0;
 $23 = $21 + 11 | 0;
 if ((HEAP8[$23 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$21 >> 2] >> 0] = 0;
  HEAP32[$0 + 40 >> 2] = 0;
 } else {
  HEAP8[$21 >> 0] = 0;
  HEAP8[$23 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($21, 0);
 HEAP32[$21 >> 2] = HEAP32[$22 >> 2];
 HEAP32[$21 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
 HEAP32[$21 + 8 >> 2] = HEAP32[$22 + 8 >> 2];
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $28 = $0 + 48 | 0;
 $29 = $1 + 48 | 0;
 $30 = $28 + 11 | 0;
 if ((HEAP8[$30 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$28 >> 2] >> 0] = 0;
  HEAP32[$0 + 52 >> 2] = 0;
 } else {
  HEAP8[$28 >> 0] = 0;
  HEAP8[$30 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($28, 0);
 HEAP32[$28 >> 2] = HEAP32[$29 >> 2];
 HEAP32[$28 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
 HEAP32[$28 + 8 >> 2] = HEAP32[$29 + 8 >> 2];
 HEAP32[$29 >> 2] = 0;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$29 + 8 >> 2] = 0;
 $35 = $0 + 60 | 0;
 $36 = $1 + 60 | 0;
 $37 = $35 + 11 | 0;
 if ((HEAP8[$37 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$35 >> 2] >> 0] = 0;
  HEAP32[$0 + 64 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($35, 0);
  HEAP32[$35 >> 2] = HEAP32[$36 >> 2];
  HEAP32[$35 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
  HEAP32[$35 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
  HEAP32[$36 >> 2] = 0;
  HEAP32[$36 + 4 >> 2] = 0;
  HEAP32[$36 + 8 >> 2] = 0;
  $42 = $0 + 72 | 0;
  $43 = $1 + 72 | 0;
  $44 = $43;
  $45 = $44;
  $46 = HEAP32[$45 >> 2] | 0;
  $47 = $44 + 4 | 0;
  $48 = $47;
  $49 = HEAP32[$48 >> 2] | 0;
  $50 = $42;
  $51 = $50;
  HEAP32[$51 >> 2] = $46;
  $52 = $50 + 4 | 0;
  $53 = $52;
  HEAP32[$53 >> 2] = $49;
  return $0 | 0;
 } else {
  HEAP8[$35 >> 0] = 0;
  HEAP8[$37 >> 0] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($35, 0);
  HEAP32[$35 >> 2] = HEAP32[$36 >> 2];
  HEAP32[$35 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
  HEAP32[$35 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
  HEAP32[$36 >> 2] = 0;
  HEAP32[$36 + 4 >> 2] = 0;
  HEAP32[$36 + 8 >> 2] = 0;
  $42 = $0 + 72 | 0;
  $43 = $1 + 72 | 0;
  $44 = $43;
  $45 = $44;
  $46 = HEAP32[$45 >> 2] | 0;
  $47 = $44 + 4 | 0;
  $48 = $47;
  $49 = HEAP32[$48 >> 2] | 0;
  $50 = $42;
  $51 = $50;
  HEAP32[$51 >> 2] = $46;
  $52 = $50 + 4 | 0;
  $53 = $52;
  HEAP32[$53 >> 2] = $49;
  return $0 | 0;
 }
 return 0;
}

function _pat_next($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$089 = 0, $$090 = 0, $$094 = 0, $$1 = 0, $$191$ph = 0, $$191109 = 0, $$2 = 0, $$292$lcssa = 0, $$292$ph = 0, $$292104 = 0, $$3 = 0, $$4 = 0, $24 = 0, $25 = 0, $28 = 0, $31 = 0, $39 = 0, $4 = 0, $45 = 0, $51 = 0, $57 = 0, $58 = 0, $60 = 0, $65 = 0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 L1 : do if (!$1) label = 3; else if (!(HEAP8[$0 >> 0] | 0)) label = 3; else {
  HEAP32[$2 >> 2] = 1;
  $8 = HEAP8[$0 >> 0] | 0;
  switch ($8 << 24 >> 24) {
  case 42:
   {
    $$2 = -5;
    break L1;
    break;
   }
  case 92:
   {
    $9 = $0 + 1 | 0;
    if (($3 & 2 | 0) == 0 & (HEAP8[$9 >> 0] | 0) != 0) {
     HEAP32[$2 >> 2] = 2;
     $$089 = $9;
     $$094 = 1;
     $58 = HEAP8[$9 >> 0] | 0;
     label = 30;
    } else $65 = 92;
    break;
   }
  case 91:
   {
    L8 : do if ($1 >>> 0 > 1) {
     switch (HEAP8[$0 + 1 >> 0] | 0) {
     case 33:
     case 94:
      break;
     default:
      {
       $$090 = 1;
       break L8;
      }
     }
     $$090 = 2;
    } else $$090 = 1; while (0);
    if ($$090 >>> 0 < $1 >>> 0) $$191$ph = ((HEAP8[$0 + $$090 >> 0] | 0) == 93 & 1) + $$090 | 0; else $$191$ph = $$090;
    L15 : do if ($$191$ph >>> 0 < $1 >>> 0) {
     $$191109 = $$191$ph;
     while (1) {
      $24 = HEAP8[$0 + $$191109 >> 0] | 0;
      switch ($24 << 24 >> 24) {
      case 93:
      case 0:
       {
        $$4 = $$191109;
        label = 26;
        break L15;
        break;
       }
      default:
       {}
      }
      $25 = $$191109 + 1 | 0;
      L19 : do if ($25 >>> 0 < $1 >>> 0) {
       $28 = HEAP8[$0 + $25 >> 0] | 0;
       if ($24 << 24 >> 24 == 91 & $28 << 24 >> 24 != 0) {
        switch ($28 << 24 >> 24) {
        case 61:
        case 46:
        case 58:
         break;
        default:
         {
          $$3 = $$191109;
          break L19;
         }
        }
        $31 = $$191109 + 2 | 0;
        if ($31 >>> 0 < $1 >>> 0) $$292$ph = (HEAP8[$0 + $31 >> 0] | 0) == 0 ? $31 : $$191109 + 3 | 0; else $$292$ph = $31;
        L26 : do if ($$292$ph >>> 0 < $1 >>> 0) {
         $$292104 = $$292$ph;
         while (1) {
          $39 = HEAP8[$0 + $$292104 >> 0] | 0;
          if (!($39 << 24 >> 24)) {
           $$292$lcssa = $$292104;
           break L26;
          }
          if (!($39 << 24 >> 24 != 93 ? 1 : (HEAP8[$0 + ($$292104 + -1) >> 0] | 0) != $28 << 24 >> 24)) {
           $$292$lcssa = $$292104;
           break L26;
          }
          $45 = $$292104 + 1 | 0;
          if ($45 >>> 0 < $1 >>> 0) $$292104 = $45; else {
           $$292$lcssa = $45;
           break;
          }
         }
        } else $$292$lcssa = $$292$ph; while (0);
        if (($$292$lcssa | 0) == ($1 | 0)) {
         $$0 = 91;
         $storemerge = 1;
         break L15;
        }
        if (!(HEAP8[$0 + $$292$lcssa >> 0] | 0)) {
         $$4 = $$292$lcssa;
         label = 26;
         break L15;
        } else $$3 = $$292$lcssa;
       } else $$3 = $$191109;
      } else $$3 = $$191109; while (0);
      $51 = $$3 + 1 | 0;
      if ($51 >>> 0 < $1 >>> 0) $$191109 = $51; else {
       $$4 = $51;
       label = 26;
       break L15;
      }
     }
    } else {
     $$4 = $$191$ph;
     label = 26;
    } while (0);
    if ((label | 0) == 26) if (($$4 | 0) == ($1 | 0)) {
     $$0 = 91;
     $storemerge = 1;
    } else {
     $57 = (HEAP8[$0 + $$4 >> 0] | 0) == 0;
     $$0 = $57 ? 91 : -3;
     $storemerge = $57 ? 1 : $$4 + 1 | 0;
    }
    HEAP32[$2 >> 2] = $storemerge;
    $$2 = $$0;
    break L1;
    break;
   }
  case 63:
   {
    $$2 = -4;
    break L1;
    break;
   }
  default:
   {
    $$089 = $0;
    $$094 = 0;
    $58 = $8;
    label = 30;
   }
  }
  if ((label | 0) == 30) if ($58 << 24 >> 24 < 0) {
   $60 = _mbtowc($4, $$089, $1) | 0;
   if (($60 | 0) < 0) {
    HEAP32[$2 >> 2] = 0;
    $$1 = -2;
   } else {
    HEAP32[$2 >> 2] = $60 + $$094;
    $$1 = HEAP32[$4 >> 2] | 0;
   }
   $$2 = $$1;
   break;
  } else $65 = $58;
  $$2 = $65 << 24 >> 24;
 } while (0);
 if ((label | 0) == 3) {
  HEAP32[$2 >> 2] = 0;
  $$2 = 0;
 }
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__26vectorI8TeamBaseNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$0$lcssa$i$i$i$i$i$i$i = 0, $$04$i$i$i$i$i$i$i = 0, $$byval_copy = 0, $$byval_copy1 = 0, $11 = 0, $16 = 0, $18 = 0, $2 = 0, $22 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $50 = 0, $53 = 0, $57 = 0, $6 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $71 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy1 = sp + 48 | 0;
 $$byval_copy = sp + 40 | 0;
 $2 = sp + 32 | 0;
 $3 = sp + 24 | 0;
 $4 = sp;
 $6 = $0 + 4 | 0;
 $8 = HEAP32[$0 >> 2] | 0;
 $11 = (((HEAP32[$6 >> 2] | 0) - $8 | 0) / 76 | 0) + 1 | 0;
 if ($11 >>> 0 > 56512727) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $8 | 0) / 76 | 0;
 if ($16 >>> 0 < 28256363) {
  $18 = $16 << 1;
  $$0$i = $18 >>> 0 < $11 >>> 0 ? $11 : $18;
 } else $$0$i = 56512727;
 $22 = ((HEAP32[$6 >> 2] | 0) - $8 | 0) / 76 | 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = $0 + 8;
 do if (!$$0$i) $30 = 0; else if ($$0$i >>> 0 > 56512727) {
  $27 = ___cxa_allocate_exception(4) | 0;
  __ZNSt9bad_allocC2Ev($27);
  ___cxa_throw($27 | 0, 1824, 151);
 } else {
  $30 = __Znwj($$0$i * 76 | 0) | 0;
  break;
 } while (0);
 HEAP32[$4 >> 2] = $30;
 $31 = $30 + ($22 * 76 | 0) | 0;
 $32 = $4 + 8 | 0;
 HEAP32[$32 >> 2] = $31;
 $33 = $4 + 4 | 0;
 HEAP32[$33 >> 2] = $31;
 HEAP32[$4 + 12 >> 2] = $30 + ($$0$i * 76 | 0);
 HEAP32[$31 >> 2] = 68100;
 $36 = $30 + ($22 * 76 | 0) + 4 | 0;
 $37 = $1 + 4 | 0;
 HEAP32[$36 >> 2] = HEAP32[$37 >> 2];
 HEAP32[$36 + 4 >> 2] = HEAP32[$37 + 4 >> 2];
 HEAP32[$36 + 8 >> 2] = HEAP32[$37 + 8 >> 2];
 HEAP32[$36 + 12 >> 2] = HEAP32[$37 + 12 >> 2];
 HEAP32[$36 + 16 >> 2] = HEAP32[$37 + 16 >> 2];
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($30 + ($22 * 76 | 0) + 24 | 0, $1 + 24 | 0);
 $40 = $30 + ($22 * 76 | 0) + 36 | 0;
 $41 = $1 + 36 | 0;
 HEAP32[$40 >> 2] = HEAP32[$41 >> 2];
 HEAP32[$40 + 4 >> 2] = HEAP32[$41 + 4 >> 2];
 HEAP32[$40 + 8 >> 2] = HEAP32[$41 + 8 >> 2];
 $42 = $30 + ($22 * 76 | 0) + 48 | 0;
 $43 = $1 + 48 | 0;
 $44 = $30 + ($22 * 76 | 0) + 52 | 0;
 HEAP32[$44 >> 2] = 0;
 HEAP32[$44 + 4 >> 2] = 0;
 HEAP32[$44 + 8 >> 2] = 0;
 HEAP32[$44 + 12 >> 2] = 0;
 HEAP32[$30 + ($22 * 76 | 0) + 68 >> 2] = -1;
 HEAP32[$30 + ($22 * 76 | 0) + 72 >> 2] = 0;
 __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($42, HEAP32[$1 + 64 >> 2] | 0);
 $50 = HEAP32[$1 + 60 >> 2] | 0;
 L13 : do if (!$50) $$0$lcssa$i$i$i$i$i$i$i = 0; else {
  $53 = HEAP32[$1 + 52 >> 2] | 0;
  $$04$i$i$i$i$i$i$i = 0;
  while (1) {
   if ((HEAP8[$53 + $$04$i$i$i$i$i$i$i >> 0] | 0) == 2) {
    $$0$lcssa$i$i$i$i$i$i$i = $$04$i$i$i$i$i$i$i;
    break L13;
   }
   $57 = $$04$i$i$i$i$i$i$i + 1 | 0;
   if ($57 >>> 0 < $50 >>> 0) $$04$i$i$i$i$i$i$i = $57; else {
    $$0$lcssa$i$i$i$i$i$i$i = $57;
    break;
   }
  }
 } while (0);
 HEAP32[$2 >> 2] = $43;
 HEAP32[$2 + 4 >> 2] = $$0$lcssa$i$i$i$i$i$i$i;
 HEAP32[$3 >> 2] = $43;
 HEAP32[$3 + 4 >> 2] = $50;
 HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE6insertENSD_14const_iteratorESE_($42, $$byval_copy, $$byval_copy1);
 HEAP32[$32 >> 2] = $31 + 76;
 __ZNSt3__26vectorI8TeamBaseNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE($0, $4);
 $62 = HEAP32[$33 >> 2] | 0;
 $63 = HEAP32[$32 >> 2] | 0;
 if (($63 | 0) != ($62 | 0)) {
  $66 = $63;
  do {
   $65 = $66 + -76 | 0;
   HEAP32[$32 >> 2] = $65;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$65 >> 2] >> 2] & 255]($65);
   $66 = HEAP32[$32 >> 2] | 0;
  } while (($66 | 0) != ($62 | 0));
 }
 $71 = HEAP32[$4 >> 2] | 0;
 if (!$71) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($71);
 STACKTOP = sp;
 return;
}

function __ZL12str_find_auxP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$$i = 0, $$0$i = 0, $$016$i = 0, $$016$i68 = 0, $$02023$i = 0, $$02122$i = 0, $$058$lcssa = 0, $$058101 = 0, $$063 = 0, $$1$i73 = 0, $$2$ph = 0, $$3 = 0, $$65 = 0, $$lcssa = 0, $13 = 0, $14 = 0, $17 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $46 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $67 = 0, $7 = 0, $72 = 0, $8 = 0, $80 = 0, $81 = 0, label = 0, sp = 0, $$02122$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 $2 = sp + 276 | 0;
 $3 = sp + 272 | 0;
 $4 = sp;
 $5 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $2) | 0;
 $6 = __Z17luaL_checklstringP9lua_StateiPj($0, 2, $3) | 0;
 $7 = __Z15luaL_optintegerP9lua_Stateii($0, 3, 1) | 0;
 $8 = HEAP32[$2 >> 2] | 0;
 $$0$i = (($7 | 0) < 0 ? $8 + 1 | 0 : 0) + $7 | 0;
 $13 = ($$0$i | 0) < 0 ? 0 : $$0$i;
 $14 = $13 + -1 | 0;
 $$063 = ($13 | 0) < 1 ? 0 : $14 >>> 0 > $8 >>> 0 ? $8 : $14;
 $17 = ($1 | 0) != 0;
 L1 : do if ($17) {
  if (!(__Z13lua_tobooleanP9lua_Statei($0, 4) | 0)) if (_strpbrk($6, 88421) | 0) {
   $56 = HEAP32[$2 >> 2] | 0;
   label = 14;
   break;
  }
  $21 = $5 + $$063 | 0;
  $23 = (HEAP32[$2 >> 2] | 0) - $$063 | 0;
  $24 = HEAP32[$3 >> 2] | 0;
  L7 : do if (!$24) if (!$21) break L1; else $$1$i73 = $21; else {
   if ($24 >>> 0 > $23 >>> 0) break L1;
   $27 = $24 + -1 | 0;
   $28 = $23 - $27 | 0;
   if (!$28) break L1;
   $31 = HEAP8[$6 >> 0] | 0;
   $32 = $6 + 1 | 0;
   $$02023$i = $28;
   $$02122$i = $21;
   while (1) {
    $33 = _memchr($$02122$i, $31, $$02023$i) | 0;
    if (!$33) break L1;
    $$02122$i$looptemp = $$02122$i;
    $$02122$i = $33 + 1 | 0;
    if (!(_memcmp($$02122$i, $32, $27) | 0)) {
     $$1$i73 = $33;
     break L7;
    }
    $$02023$i = $$02122$i$looptemp + $$02023$i - $$02122$i | 0;
    if (!$$02023$i) break L1;
   }
  } while (0);
  $46 = $$1$i73 - $5 | 0;
  __Z15lua_pushintegerP9lua_Statei($0, $46 + 1 | 0);
  __Z15lua_pushintegerP9lua_Statei($0, $46 + (HEAP32[$3 >> 2] | 0) | 0);
  $$3 = 2;
  STACKTOP = sp;
  return $$3 | 0;
 } else {
  $56 = $8;
  label = 14;
 } while (0);
 do if ((label | 0) == 14) {
  $51 = (HEAP8[$6 >> 0] | 0) == 94;
  $$65 = $51 ? $6 + 1 | 0 : $6;
  $53 = $5 + $$063 | 0;
  $54 = $4 + 8 | 0;
  HEAP32[$54 >> 2] = $0;
  HEAP32[$4 >> 2] = $5;
  $57 = $4 + 4 | 0;
  HEAP32[$57 >> 2] = $5 + $56;
  $58 = $4 + 12 | 0;
  HEAP32[$58 >> 2] = 0;
  $59 = __ZL5matchP10MatchStatePKcS2_($4, $53, $$65) | 0;
  $60 = ($59 | 0) == 0;
  L20 : do if ($51) if ($60) label = 25; else {
   $$058$lcssa = $53;
   $$lcssa = $59;
  } else if ($60) {
   $$058101 = $53;
   while (1) {
    if ($$058101 >>> 0 >= (HEAP32[$57 >> 2] | 0) >>> 0) {
     label = 25;
     break L20;
    }
    $80 = $$058101 + 1 | 0;
    HEAP32[$58 >> 2] = 0;
    $81 = __ZL5matchP10MatchStatePKcS2_($4, $80, $$65) | 0;
    if (!$81) $$058101 = $80; else {
     $$058$lcssa = $80;
     $$lcssa = $81;
     break;
    }
   }
  } else {
   $$058$lcssa = $53;
   $$lcssa = $59;
  } while (0);
  if ((label | 0) == 25) break;
  if ($17) {
   $62 = $5;
   __Z15lua_pushintegerP9lua_Statei($0, 1 - $62 + $$058$lcssa | 0);
   __Z15lua_pushintegerP9lua_Statei($0, $$lcssa - $62 | 0);
   $67 = HEAP32[$58 >> 2] | 0;
   __Z15luaL_checkstackP9lua_StateiPKc(HEAP32[$54 >> 2] | 0, $67, 88432);
   if (($67 | 0) > 0) {
    $$016$i68 = 0;
    do {
     __ZL15push_onecaptureP10MatchStateiPKcS2_($4, $$016$i68, 0, 0);
     $$016$i68 = $$016$i68 + 1 | 0;
    } while (($$016$i68 | 0) != ($67 | 0));
   }
   $$2$ph = $67 + 2 | 0;
  } else {
   $72 = HEAP32[$58 >> 2] | 0;
   $$$i = ($$058$lcssa | 0) != 0 & ($72 | 0) == 0 ? 1 : $72;
   __Z15luaL_checkstackP9lua_StateiPKc(HEAP32[$54 >> 2] | 0, $$$i, 88432);
   if (($$$i | 0) > 0) {
    $$016$i = 0;
    do {
     __ZL15push_onecaptureP10MatchStateiPKcS2_($4, $$016$i, $$058$lcssa, $$lcssa);
     $$016$i = $$016$i + 1 | 0;
    } while (($$016$i | 0) != ($$$i | 0));
    $$2$ph = $$$i;
   } else $$2$ph = $$$i;
  }
  $$3 = $$2$ph;
  STACKTOP = sp;
  return $$3 | 0;
 } while (0);
 __Z11lua_pushnilP9lua_State($0);
 $$3 = 1;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNSt3__26vectorI8TeamBaseNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa$i$i$i$i$i$i$i$i = 0, $$04$i$i$i$i$i$i$i$i = 0, $$06$i = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$pre$phi13Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $32 = 0, $36 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 24 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $1 + 4 | 0;
 if (($6 | 0) == ($4 | 0)) {
  $$pre$phi13Z2D = $7;
  $$pre$phiZ2D = $0;
  $42 = HEAP32[$7 >> 2] | 0;
  $43 = $4;
  HEAP32[$$pre$phiZ2D >> 2] = $42;
  HEAP32[$$pre$phi13Z2D >> 2] = $43;
  $44 = $1 + 8 | 0;
  $45 = HEAP32[$5 >> 2] | 0;
  $46 = HEAP32[$44 >> 2] | 0;
  HEAP32[$5 >> 2] = $46;
  HEAP32[$44 >> 2] = $45;
  $47 = $0 + 8 | 0;
  $48 = $1 + 12 | 0;
  $49 = HEAP32[$47 >> 2] | 0;
  $50 = HEAP32[$48 >> 2] | 0;
  HEAP32[$47 >> 2] = $50;
  HEAP32[$48 >> 2] = $49;
  $51 = HEAP32[$$pre$phi13Z2D >> 2] | 0;
  HEAP32[$1 >> 2] = $51;
  STACKTOP = sp;
  return;
 }
 $10 = $2 + 4 | 0;
 $11 = $3 + 4 | 0;
 $$06$i = $6;
 $14 = HEAP32[$7 >> 2] | 0;
 do {
  HEAP32[$14 + -76 >> 2] = 68100;
  $15 = $14 + -72 | 0;
  $16 = $$06$i + -72 | 0;
  HEAP32[$15 >> 2] = HEAP32[$16 >> 2];
  HEAP32[$15 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
  HEAP32[$15 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
  HEAP32[$15 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
  HEAP32[$15 + 16 >> 2] = HEAP32[$16 + 16 >> 2];
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($14 + -52 | 0, $$06$i + -52 | 0);
  $19 = $14 + -40 | 0;
  $20 = $$06$i + -40 | 0;
  HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
  HEAP32[$19 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
  HEAP32[$19 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
  $21 = $14 + -28 | 0;
  $22 = $$06$i + -28 | 0;
  $23 = $14 + -24 | 0;
  HEAP32[$23 >> 2] = 0;
  HEAP32[$23 + 4 >> 2] = 0;
  HEAP32[$23 + 8 >> 2] = 0;
  HEAP32[$23 + 12 >> 2] = 0;
  HEAP32[$14 + -8 >> 2] = -1;
  HEAP32[$14 + -4 >> 2] = 0;
  __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($21, HEAP32[$$06$i + -12 >> 2] | 0);
  $29 = HEAP32[$$06$i + -16 >> 2] | 0;
  L7 : do if (!$29) $$0$lcssa$i$i$i$i$i$i$i$i = 0; else {
   $32 = HEAP32[$$06$i + -24 >> 2] | 0;
   $$04$i$i$i$i$i$i$i$i = 0;
   while (1) {
    if ((HEAP8[$32 + $$04$i$i$i$i$i$i$i$i >> 0] | 0) == 2) {
     $$0$lcssa$i$i$i$i$i$i$i$i = $$04$i$i$i$i$i$i$i$i;
     break L7;
    }
    $36 = $$04$i$i$i$i$i$i$i$i + 1 | 0;
    if ($36 >>> 0 < $29 >>> 0) $$04$i$i$i$i$i$i$i$i = $36; else {
     $$0$lcssa$i$i$i$i$i$i$i$i = $36;
     break;
    }
   }
  } while (0);
  $$06$i = $$06$i + -76 | 0;
  HEAP32[$2 >> 2] = $22;
  HEAP32[$10 >> 2] = $$0$lcssa$i$i$i$i$i$i$i$i;
  HEAP32[$3 >> 2] = $22;
  HEAP32[$11 >> 2] = $29;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE6insertENSD_14const_iteratorESE_($21, $$byval_copy, $$byval_copy1);
  $14 = (HEAP32[$7 >> 2] | 0) + -76 | 0;
  HEAP32[$7 >> 2] = $14;
 } while (($$06$i | 0) != ($4 | 0));
 $$pre$phi13Z2D = $7;
 $$pre$phiZ2D = $0;
 $42 = $14;
 $43 = HEAP32[$0 >> 2] | 0;
 HEAP32[$$pre$phiZ2D >> 2] = $42;
 HEAP32[$$pre$phi13Z2D >> 2] = $43;
 $44 = $1 + 8 | 0;
 $45 = HEAP32[$5 >> 2] | 0;
 $46 = HEAP32[$44 >> 2] | 0;
 HEAP32[$5 >> 2] = $46;
 HEAP32[$44 >> 2] = $45;
 $47 = $0 + 8 | 0;
 $48 = $1 + 12 | 0;
 $49 = HEAP32[$47 >> 2] | 0;
 $50 = HEAP32[$48 >> 2] | 0;
 HEAP32[$47 >> 2] = $50;
 HEAP32[$48 >> 2] = $49;
 $51 = HEAP32[$$pre$phi13Z2D >> 2] | 0;
 HEAP32[$1 >> 2] = $51;
 STACKTOP = sp;
 return;
}

function _log_file_removeLogFile($0) {
 $0 = $0 | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph7$i$i$i = 0, $$05$i$i$i$i = 0, $$07$ph6$i$i$i = 0, $$073$i$i$i = 0, $$idx$val = 0, $$sroa$speculated$i$i$i$i$i$i = 0, $$sroa$speculated$i$i$i$i$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $15 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $25 = 0, $30 = 0, $37 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $52 = 0, $57 = 0, $59 = 0, $62 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP8[106232] | 0)) if (___cxa_guard_acquire(106232) | 0) {
  HEAP32[26995] = 0;
  HEAP32[26996] = 0;
  HEAP32[26994] = 107980;
  ___cxa_atexit(171, 107976, ___dso_handle | 0) | 0;
 };
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $0, _strlen($0) | 0);
 $7 = HEAP32[26995] | 0;
 if (!$7) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return;
 }
 $10 = HEAP8[$1 + 11 >> 0] | 0;
 $11 = $10 << 24 >> 24 < 0;
 $15 = $11 ? HEAP32[$1 + 4 >> 2] | 0 : $10 & 255;
 $17 = $11 ? HEAP32[$1 >> 2] | 0 : $1;
 $$0$ph7$i$i$i = 107980;
 $$07$ph6$i$i$i = $7;
 L8 : while (1) {
  $$073$i$i$i = $$07$ph6$i$i$i;
  while (1) {
   $18 = $$073$i$i$i + 16 | 0;
   $20 = HEAP8[$18 + 11 >> 0] | 0;
   $21 = $20 << 24 >> 24 < 0;
   $25 = $21 ? HEAP32[$$073$i$i$i + 20 >> 2] | 0 : $20 & 255;
   $$sroa$speculated$i$i$i$i$i$i$i = $15 >>> 0 < $25 >>> 0 ? $15 : $25;
   if (!$$sroa$speculated$i$i$i$i$i$i$i) label = 9; else {
    $30 = _memcmp($21 ? HEAP32[$18 >> 2] | 0 : $18, $17, $$sroa$speculated$i$i$i$i$i$i$i) | 0;
    if (!$30) label = 9; else if (($30 | 0) >= 0) break;
   }
   if ((label | 0) == 9) {
    label = 0;
    if ($25 >>> 0 >= $15 >>> 0) break;
   }
   $37 = HEAP32[$$073$i$i$i + 4 >> 2] | 0;
   if (!$37) {
    $$0$ph$lcssa$i$i$i = $$0$ph7$i$i$i;
    break L8;
   } else $$073$i$i$i = $37;
  }
  $$07$ph6$i$i$i = HEAP32[$$073$i$i$i >> 2] | 0;
  if (!$$07$ph6$i$i$i) {
   $$0$ph$lcssa$i$i$i = $$073$i$i$i;
   break;
  } else $$0$ph7$i$i$i = $$073$i$i$i;
 }
 if (($$0$ph$lcssa$i$i$i | 0) == 107980) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return;
 }
 $40 = $$0$ph$lcssa$i$i$i + 16 | 0;
 $42 = HEAP8[$40 + 11 >> 0] | 0;
 $43 = $42 << 24 >> 24 < 0;
 $47 = $43 ? HEAP32[$$0$ph$lcssa$i$i$i + 20 >> 2] | 0 : $42 & 255;
 $$sroa$speculated$i$i$i$i$i$i = $47 >>> 0 < $15 >>> 0 ? $47 : $15;
 if (!$$sroa$speculated$i$i$i$i$i$i) label = 16; else {
  $52 = _memcmp($17, $43 ? HEAP32[$40 >> 2] | 0 : $40, $$sroa$speculated$i$i$i$i$i$i) | 0;
  if (!$52) label = 16; else if (($52 | 0) < 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   STACKTOP = sp;
   return;
  }
 }
 if ((label | 0) == 16) if ($15 >>> 0 < $47 >>> 0) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return;
 }
 $$idx$val = HEAP32[$$0$ph$lcssa$i$i$i + 28 >> 2] | 0;
 $57 = HEAP32[$$0$ph$lcssa$i$i$i + 4 >> 2] | 0;
 if (!$57) {
  $$0$i$i$i$i = $$0$ph$lcssa$i$i$i;
  while (1) {
   $62 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
   if ((HEAP32[$62 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
    $$05$i$i$i$i = $62;
    break;
   } else $$0$i$i$i$i = $62;
  }
 } else {
  $$0$i$i$i$i$i = $57;
  while (1) {
   $59 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
   if (!$59) {
    $$05$i$i$i$i = $$0$i$i$i$i$i;
    break;
   } else $$0$i$i$i$i$i = $59;
  }
 }
 if ((HEAP32[26994] | 0) == ($$0$ph$lcssa$i$i$i | 0)) HEAP32[26994] = $$05$i$i$i$i;
 HEAP32[26996] = (HEAP32[26996] | 0) + -1;
 __ZNSt3__213__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($7, $$0$ph$lcssa$i$i$i);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$0$ph$lcssa$i$i$i + 32 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$0$ph$lcssa$i$i$i + 16 | 0);
 __ZdlPv($$0$ph$lcssa$i$i$i);
 _fclose($$idx$val) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return;
}

function __ZN8LuaUtils3LogEP9lua_State($0) {
 $0 = $0 | 0;
 var $$125$ph = 0, $$2 = 0, $$226 = 0, $$sroa$06$0$i = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0, $31 = 0, $34 = 0, $39 = 0, $42 = 0, $47 = 0, $5 = 0, $50 = 0, $55 = 0, $58 = 0, $63 = 0, $66 = 0, $71 = 0, $74 = 0, $79 = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $1 = sp + 20 | 0;
 if ((__Z10lua_gettopP9lua_State($0) | 0) < 3) {
  $$2 = __Z10luaL_errorP9lua_StatePKcz($0, 84108, sp) | 0;
  STACKTOP = sp;
  return $$2 | 0;
 }
 $5 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, 0) | 0;
 if ((__Z8lua_typeP9lua_Statei($0, 2) | 0) == 3) $$226 = ~~+__Z12lua_tonumberP9lua_Statei($0, 2); else {
  if ((__Z8lua_typeP9lua_Statei($0, 2) | 0) != 4) {
   $$2 = __Z10luaL_errorP9lua_StatePKcz($0, 84108, $vararg_buffer3) | 0;
   STACKTOP = sp;
   return $$2 | 0;
  }
  $12 = __Z13lua_tolstringP9lua_StateiPj($0, 2, 0) | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $12, _strlen($12) | 0);
  $14 = $1 + 11 | 0;
  $15 = HEAP8[$14 >> 0] | 0;
  $16 = $15 << 24 >> 24 < 0;
  $18 = $16 ? HEAP32[$1 >> 2] | 0 : $1;
  $19 = $1 + 4 | 0;
  $20 = HEAP32[$19 >> 2] | 0;
  $22 = $16 ? $20 : $15 & 255;
  $23 = $18 + $22 | 0;
  if (!$22) {
   $31 = $15;
   $34 = $20;
  } else {
   $$sroa$06$0$i = $18;
   do {
    HEAP8[$$sroa$06$0$i >> 0] = _tolower(HEAP8[$$sroa$06$0$i >> 0] | 0) | 0;
    $$sroa$06$0$i = $$sroa$06$0$i + 1 | 0;
   } while (($$sroa$06$0$i | 0) != ($23 | 0));
   $31 = HEAP8[$14 >> 0] | 0;
   $34 = HEAP32[$19 >> 2] | 0;
  }
  if ((($31 << 24 >> 24 < 0 ? $34 : $31 & 255) | 0) == 5) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 84169, 5) | 0)) $$125$ph = 20; else {
   $39 = HEAP8[$14 >> 0] | 0;
   $42 = HEAP32[$19 >> 2] | 0;
   label = 12;
  } else {
   $39 = $31;
   $42 = $34;
   label = 12;
  }
  do if ((label | 0) == 12) {
   if ((($39 << 24 >> 24 < 0 ? $42 : $39 & 255) | 0) == 4) {
    if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 84175, 4) | 0)) {
     $$125$ph = 30;
     break;
    }
    $47 = HEAP8[$14 >> 0] | 0;
    $50 = HEAP32[$19 >> 2] | 0;
   } else {
    $47 = $39;
    $50 = $42;
   }
   if ((($47 << 24 >> 24 < 0 ? $50 : $47 & 255) | 0) == 6) {
    if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 84180, 6) | 0)) {
     $$125$ph = 30;
     break;
    }
    $55 = HEAP8[$14 >> 0] | 0;
    $58 = HEAP32[$19 >> 2] | 0;
   } else {
    $55 = $47;
    $58 = $50;
   }
   if ((($55 << 24 >> 24 < 0 ? $58 : $55 & 255) | 0) == 7) {
    if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 84187, 7) | 0)) {
     $$125$ph = 40;
     break;
    }
    $63 = HEAP8[$14 >> 0] | 0;
    $66 = HEAP32[$19 >> 2] | 0;
   } else {
    $63 = $55;
    $66 = $58;
   }
   if ((($63 << 24 >> 24 < 0 ? $66 : $63 & 255) | 0) == 5) {
    if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 85893, 5) | 0)) {
     $$125$ph = 50;
     break;
    }
    $71 = HEAP8[$14 >> 0] | 0;
    $74 = HEAP32[$19 >> 2] | 0;
   } else {
    $71 = $63;
    $74 = $66;
   }
   if ((($71 << 24 >> 24 < 0 ? $74 : $71 & 255) | 0) == 5) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 84195, 5) | 0)) {
    $$125$ph = 60;
    break;
   }
   $79 = __Z10luaL_errorP9lua_StatePKcz($0, 84108, $vararg_buffer1) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$2 = $79;
   STACKTOP = sp;
   return $$2 | 0;
  } while (0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $$226 = $$125$ph;
 }
 __ZL6LogMsgP9lua_StatePKcii($0, $5, $$226, 3);
 $$2 = 0;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$8 = 0, $$pre$phiZ2D = 0, $10 = 0, $104 = 0, $106 = 0, $11 = 0, $110 = 0, $113 = 0, $134 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $42 = 0, $48 = 0, $57 = 0, $59 = 0, $66 = 0, $75 = 0, $85 = 0, $87 = 0, $89 = 0, $95 = 0, $98 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 if (!($7 & 4)) $$pre$phiZ2D = $1; else {
  $10 = HEAP32[$2 >> 2] | 0;
  $11 = $1;
  if (($11 - $10 | 0) > 2) if ((HEAP8[$10 >> 0] | 0) == -17) if ((HEAP8[$10 + 1 >> 0] | 0) == -69) if ((HEAP8[$10 + 2 >> 0] | 0) == -65) {
   HEAP32[$2 >> 2] = $10 + 3;
   $$pre$phiZ2D = $11;
  } else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11;
 }
 $24 = $4;
 L9 : while (1) {
  $25 = HEAP32[$2 >> 2] | 0;
  $26 = $25 >>> 0 < $1 >>> 0;
  if (!$26) {
   label = 41;
   break;
  }
  $27 = HEAP32[$5 >> 2] | 0;
  if ($27 >>> 0 >= $4 >>> 0) {
   label = 41;
   break;
  }
  $29 = HEAP8[$25 >> 0] | 0;
  $30 = $29 & 255;
  if ($30 >>> 0 > $6 >>> 0) {
   $$8 = 2;
   break;
  }
  do if ($29 << 24 >> 24 > -1) {
   HEAP16[$27 >> 1] = $29 & 255;
   HEAP32[$2 >> 2] = $25 + 1;
  } else {
   if (($29 & 255) < 194) {
    $$8 = 2;
    break L9;
   }
   if (($29 & 255) < 224) {
    if (($$pre$phiZ2D - $25 | 0) < 2) {
     $$8 = 1;
     break L9;
    }
    $42 = HEAPU8[$25 + 1 >> 0] | 0;
    if (($42 & 192 | 0) != 128) {
     $$8 = 2;
     break L9;
    }
    $48 = $42 & 63 | $30 << 6 & 1984;
    if ($48 >>> 0 > $6 >>> 0) {
     $$8 = 2;
     break L9;
    }
    HEAP16[$27 >> 1] = $48;
    HEAP32[$2 >> 2] = $25 + 2;
    break;
   }
   if (($29 & 255) < 240) {
    if (($$pre$phiZ2D - $25 | 0) < 3) {
     $$8 = 1;
     break L9;
    }
    $57 = HEAP8[$25 + 1 >> 0] | 0;
    $59 = HEAP8[$25 + 2 >> 0] | 0;
    switch ($29 << 24 >> 24) {
    case -32:
     {
      if (($57 & -32) << 24 >> 24 != -96) {
       $$8 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if (($57 & -32) << 24 >> 24 != -128) {
       $$8 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($57 & -64) << 24 >> 24 != -128) {
      $$8 = 2;
      break L9;
     }
    }
    $66 = $59 & 255;
    if (($66 & 192 | 0) != 128) {
     $$8 = 2;
     break L9;
    }
    $75 = ($57 & 255) << 6 & 4032 | $30 << 12 | $66 & 63;
    if (($75 & 65535) >>> 0 > $6 >>> 0) {
     $$8 = 2;
     break L9;
    }
    HEAP16[$27 >> 1] = $75;
    HEAP32[$2 >> 2] = $25 + 3;
    break;
   }
   if (($29 & 255) >= 245) {
    $$8 = 2;
    break L9;
   }
   if (($$pre$phiZ2D - $25 | 0) < 4) {
    $$8 = 1;
    break L9;
   }
   $85 = HEAP8[$25 + 1 >> 0] | 0;
   $87 = HEAP8[$25 + 2 >> 0] | 0;
   $89 = HEAP8[$25 + 3 >> 0] | 0;
   switch ($29 << 24 >> 24) {
   case -16:
    {
     if (($85 + 112 & 255) >= 48) {
      $$8 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if (($85 & -16) << 24 >> 24 != -128) {
      $$8 = 2;
      break L9;
     }
     break;
    }
   default:
    if (($85 & -64) << 24 >> 24 != -128) {
     $$8 = 2;
     break L9;
    }
   }
   $95 = $87 & 255;
   if (($95 & 192 | 0) != 128) {
    $$8 = 2;
    break L9;
   }
   $98 = $89 & 255;
   if (($98 & 192 | 0) != 128) {
    $$8 = 2;
    break L9;
   }
   if (($24 - $27 | 0) < 4) {
    $$8 = 1;
    break L9;
   }
   $104 = $30 & 7;
   $106 = $85 & 255;
   $110 = $95 << 6;
   $113 = $98 & 63;
   if (($106 << 12 & 258048 | $104 << 18 | $110 & 4032 | $113) >>> 0 > $6 >>> 0) {
    $$8 = 2;
    break L9;
   }
   HEAP16[$27 >> 1] = $106 << 2 & 60 | $95 >>> 4 & 3 | (($106 >>> 4 & 3 | $104 << 2) << 6) + 16320 | 55296;
   $134 = $27 + 2 | 0;
   HEAP32[$5 >> 2] = $134;
   HEAP16[$134 >> 1] = $113 | $110 & 960 | 56320;
   HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 4;
  } while (0);
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2;
 }
 if ((label | 0) == 41) $$8 = $26 & 1;
 return $$8 | 0;
}

function __ZL7forbodyP8LexStateiiii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$idx$val = 0, $$idx$val$i = 0, $100 = 0, $101 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $119 = 0, $128 = 0, $129 = 0, $13 = 0, $131 = 0, $132 = 0, $48 = 0, $5 = 0, $51 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $67 = 0, $7 = 0, $78 = 0, $8 = 0, $83 = 0, $93 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $5 = sp + 4 | 0;
 $6 = $0 + 28 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $7 + 50 | 0;
 $11 = (HEAPU8[$8 >> 0] | 0) + 3 | 0;
 HEAP8[$8 >> 0] = $11;
 $13 = $7 + 24 | 0;
 HEAP32[(HEAP32[(HEAP32[$7 >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$7 + 172 + (($11 & 255) + -3 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$13 >> 2];
 HEAP32[(HEAP32[(HEAP32[$7 >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$7 + 172 + ((HEAPU8[$8 >> 0] | 0) + -2 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$13 >> 2];
 HEAP32[(HEAP32[(HEAP32[$7 >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$7 + 172 + ((HEAPU8[$8 >> 0] | 0) + -1 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$13 >> 2];
 if ((HEAP32[$0 + 12 >> 2] | 0) != 259) {
  $48 = HEAP32[$0 + 32 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = __Z14luaX_token2strP8LexStatei($0, 259) | 0;
  __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($48, 87798, $vararg_buffer) | 0);
 }
 __Z9luaX_nextP8LexState($0);
 $51 = ($4 | 0) != 0;
 if ($51) $128 = __Z12luaK_codeABxP9FuncState6OpCodeij($7, 32, $1, 131070) | 0; else $128 = __Z9luaK_jumpP9FuncState($7) | 0;
 HEAP32[$5 + 4 >> 2] = -1;
 HEAP8[$5 + 10 >> 0] = 0;
 HEAP8[$5 + 8 >> 0] = HEAP8[$8 >> 0] | 0;
 HEAP8[$5 + 9 >> 0] = 0;
 $59 = $7 + 20 | 0;
 HEAP32[$5 >> 2] = HEAP32[$59 >> 2];
 HEAP32[$59 >> 2] = $5;
 $$idx$val = HEAP32[$6 >> 2] | 0;
 $61 = $$idx$val + 50 | 0;
 $64 = (HEAPU8[$61 >> 0] | 0) + $3 | 0;
 HEAP8[$61 >> 0] = $64;
 if ($3 | 0) {
  $67 = $$idx$val + 24 | 0;
  HEAP32[(HEAP32[(HEAP32[$$idx$val >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val + 172 + (($64 & 255) - $3 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$67 >> 2];
  $78 = $3 + -1 | 0;
  if ($78 | 0) {
   $83 = $78;
   do {
    HEAP32[(HEAP32[(HEAP32[$$idx$val >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val + 172 + ((HEAPU8[$61 >> 0] | 0) - $83 << 1) >> 1] | 0) * 12 | 0) + 4 >> 2] = HEAP32[$67 >> 2];
    $83 = $83 + -1 | 0;
   } while (($83 | 0) != 0);
  }
 }
 __Z16luaK_reserveregsP9FuncStatei($7, $3);
 __ZL5blockP8LexState($0);
 $93 = HEAP32[$59 >> 2] | 0;
 HEAP32[$59 >> 2] = HEAP32[$93 >> 2];
 $97 = $93 + 8 | 0;
 $98 = HEAP16[$97 >> 1] | 0;
 $99 = $98 & 255;
 $$idx$val$i = HEAP32[(HEAP32[$7 + 12 >> 2] | 0) + 28 >> 2] | 0;
 $100 = $$idx$val$i + 50 | 0;
 $101 = HEAP8[$100 >> 0] | 0;
 if (($101 & 255) > ($99 & 255)) {
  $105 = $$idx$val$i + 24 | 0;
  $108 = $101;
  do {
   $106 = HEAP32[$105 >> 2] | 0;
   $107 = $108 + -1 << 24 >> 24;
   HEAP8[$100 >> 0] = $107;
   HEAP32[(HEAP32[(HEAP32[$$idx$val$i >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i + 172 + (($107 & 255) << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = $106;
   $108 = HEAP8[$100 >> 0] | 0;
  } while (($108 & 255) > ($99 & 255));
  $119 = HEAP8[$93 + 9 >> 0] | 0;
 } else $119 = ($98 & 65535) >>> 8 & 255;
 if ($119 << 24 >> 24) __Z12luaK_codeABCP9FuncState6OpCodeiii($7, 35, HEAPU8[$97 >> 0] | 0, 0, 0) | 0;
 HEAP32[$7 + 36 >> 2] = HEAPU8[$8 >> 0];
 __Z16luaK_patchtohereP9FuncStatei($7, HEAP32[$93 + 4 >> 2] | 0);
 __Z16luaK_patchtohereP9FuncStatei($7, $128);
 if ($51) {
  $129 = __Z12luaK_codeABxP9FuncState6OpCodeij($7, 31, $1, 131070) | 0;
  __Z12luaK_fixlineP9FuncStatei($7, $2);
  $132 = $129;
  $131 = $128 + 1 | 0;
  __Z14luaK_patchlistP9FuncStateii($7, $132, $131);
  STACKTOP = sp;
  return;
 } else {
  __Z12luaK_codeABCP9FuncState6OpCodeiii($7, 33, $1, 0, $3) | 0;
  __Z12luaK_fixlineP9FuncStatei($7, $2);
  $132 = __Z9luaK_jumpP9FuncState($7) | 0;
  $131 = $128 + 1 | 0;
  __Z14luaK_patchlistP9FuncStateii($7, $132, $131);
  STACKTOP = sp;
  return;
 }
}

function __Z9luaH_getnP5Table($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i25$i = 0, $$0$i29$i = 0, $$021$ = 0, $$021$i = 0, $$021$i$phi = 0, $$02132 = 0, $$022$i = 0, $$02231 = 0, $$1$i = 0, $$1$i$i = 0, $$1$i27$i = 0, $$1$i31$i = 0, $$12342$i = 0, $$2$$i = 0, $$243$i = 0, $105 = 0, $109 = 0, $12 = 0, $16 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0.0, $46 = 0, $53 = 0, $55 = 0, $59 = 0.0, $6 = 0, $76 = 0, $83 = 0, $84 = 0, $88 = 0.0, label = 0;
 $2 = HEAP32[$0 + 28 >> 2] | 0;
 if ($2 | 0) {
  $6 = HEAP32[$0 + 12 >> 2] | 0;
  if (!(HEAP32[$6 + ($2 + -1 << 3) + 4 >> 2] | 0)) {
   if ($2 >>> 0 > 1) {
    $$02132 = 0;
    $$02231 = $2;
   } else {
    $$0 = 0;
    return $$0 | 0;
   }
   while (1) {
    $12 = ($$02132 + $$02231 | 0) >>> 1;
    $16 = (HEAP32[$6 + ($12 + -1 << 3) + 4 >> 2] | 0) == 0;
    $$02231 = $16 ? $12 : $$02231;
    $$021$ = $16 ? $$02132 : $12;
    if (($$02231 - $$021$ | 0) >>> 0 <= 1) {
     $$0 = $$021$;
     break;
    } else $$02132 = $$021$;
   }
   return $$0 | 0;
  }
 }
 $20 = HEAP32[$0 + 16 >> 2] | 0;
 if (($20 | 0) == 108172) {
  $$0 = $2;
  return $$0 | 0;
 }
 $23 = $0 + 12 | 0;
 $24 = $0 + 7 | 0;
 $$021$i = $2;
 $$022$i = $2 + 1 | 0;
 while (1) {
  $25 = $$022$i + -1 | 0;
  L15 : do if ($25 >>> 0 < $2 >>> 0) $$1$i$i = (HEAP32[$23 >> 2] | 0) + ($25 << 3) | 0; else {
   $29 = +($$022$i | 0);
   if (!$$022$i) $$0$i$i = $20; else $$0$i$i = $20 + ((((HEAPF32[tempDoublePtr >> 2] = $29, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$24 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
   while (1) {
    if ((HEAP32[$$0$i$i + 12 >> 2] | 0) == 3) if (+HEAPF32[$$0$i$i + 8 >> 2] == $29) break;
    $46 = HEAP32[$$0$i$i + 16 >> 2] | 0;
    if (!$46) {
     $$1$i$i = 108164;
     break L15;
    } else $$0$i$i = $46;
   }
   $$1$i$i = $$0$i$i;
  } while (0);
  if (!(HEAP32[$$1$i$i + 4 >> 2] | 0)) break;
  $53 = $$022$i << 1;
  if ($53 >>> 0 > 2147483645) {
   $$1$i = 1;
   label = 18;
   break;
  } else {
   $$021$i$phi = $$022$i;
   $$022$i = $53;
   $$021$i = $$021$i$phi;
  }
 }
 if ((label | 0) == 18) {
  while (1) {
   label = 0;
   $55 = $$1$i + -1 | 0;
   L31 : do if ($55 >>> 0 < $2 >>> 0) $$1$i31$i = (HEAP32[$23 >> 2] | 0) + ($55 << 3) | 0; else {
    $59 = +($$1$i | 0);
    if (!$$1$i) $$0$i29$i = $20; else $$0$i29$i = $20 + ((((HEAPF32[tempDoublePtr >> 2] = $59, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$24 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
    while (1) {
     if ((HEAP32[$$0$i29$i + 12 >> 2] | 0) == 3) if (+HEAPF32[$$0$i29$i + 8 >> 2] == $59) break;
     $76 = HEAP32[$$0$i29$i + 16 >> 2] | 0;
     if (!$76) {
      $$1$i31$i = 108164;
      break L31;
     } else $$0$i29$i = $76;
    }
    $$1$i31$i = $$0$i29$i;
   } while (0);
   if (!(HEAP32[$$1$i31$i + 4 >> 2] | 0)) {
    $$0 = $55;
    break;
   } else {
    $$1$i = $$1$i + 1 | 0;
    label = 18;
   }
  }
  return $$0 | 0;
 }
 if (($$022$i - $$021$i | 0) >>> 0 > 1) {
  $$12342$i = $$022$i;
  $$243$i = $$021$i;
 } else {
  $$0 = $$021$i;
  return $$0 | 0;
 }
 while (1) {
  $83 = ($$12342$i + $$243$i | 0) >>> 1;
  $84 = $83 + -1 | 0;
  L49 : do if ($84 >>> 0 < $2 >>> 0) $$1$i27$i = (HEAP32[$23 >> 2] | 0) + ($84 << 3) | 0; else {
   $88 = +($83 | 0);
   if (!$83) $$0$i25$i = $20; else $$0$i25$i = $20 + ((((HEAPF32[tempDoublePtr >> 2] = $88, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$24 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
   while (1) {
    if ((HEAP32[$$0$i25$i + 12 >> 2] | 0) == 3) if (+HEAPF32[$$0$i25$i + 8 >> 2] == $88) break;
    $105 = HEAP32[$$0$i25$i + 16 >> 2] | 0;
    if (!$105) {
     $$1$i27$i = 108164;
     break L49;
    } else $$0$i25$i = $105;
   }
   $$1$i27$i = $$0$i25$i;
  } while (0);
  $109 = (HEAP32[$$1$i27$i + 4 >> 2] | 0) == 0;
  $$12342$i = $109 ? $83 : $$12342$i;
  $$2$$i = $109 ? $$243$i : $83;
  if (($$12342$i - $$2$$i | 0) >>> 0 <= 1) {
   $$0 = $$2$$i;
   break;
  } else $$243$i = $$2$$i;
 }
 return $$0 | 0;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $$sroa$027$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $18 = 0, $21 = 0, $28 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $44 = 0, $57 = 0, $60 = 0, $7 = 0, $70 = 0, $73 = 0, $8 = 0, $86 = 0, $89 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 $$byval_copy = sp + 424 | 0;
 $vararg_buffer = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 12 | 0;
 $10 = sp + 8 | 0;
 $11 = sp + 564 | 0;
 $12 = sp + 4 | 0;
 $13 = sp + 464 | 0;
 HEAP32[$8 >> 2] = $7;
 $15 = $8 + 4 | 0;
 HEAP32[$15 >> 2] = 187;
 HEAP32[$10 >> 2] = __ZNKSt3__28ios_base6getlocEv($4) | 0;
 $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 110200) | 0;
 HEAP8[$11 >> 0] = 0;
 HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
 $21 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1, $$byval_copy, $3, $10, $21, $5, $11, $18, $8, $9, $7 + 400 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 48 >> 2] & 15]($18, 104245, 104255, $$byval_copy) | 0;
  $28 = (HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) | 0;
  if (($28 | 0) > 392) {
   $32 = _malloc(($28 >> 2) + 2 | 0) | 0;
   $33 = $32;
   if (!$32) {
    $$025 = 0;
    $$sroa$027$0 = $33;
   } else {
    $$025 = $32;
    $$sroa$027$0 = $33;
   }
  } else {
   $$025 = $13;
   $$sroa$027$0 = 0;
  }
  if (!(HEAP8[$11 >> 0] | 0)) $$1 = $$025; else {
   HEAP8[$$025 >> 0] = 45;
   $$1 = $$025 + 1 | 0;
  }
  $39 = $$byval_copy + 40 | 0;
  $40 = $$byval_copy;
  $$0 = HEAP32[$8 >> 2] | 0;
  $$2 = $$1;
  while (1) {
   if ($$0 >>> 0 >= (HEAP32[$9 >> 2] | 0) >>> 0) break;
   $44 = HEAP32[$$0 >> 2] | 0;
   $$0$i = $$byval_copy;
   while (1) {
    if (($$0$i | 0) == ($39 | 0)) {
     $$0$lcssa$i = $39;
     break;
    }
    if ((HEAP32[$$0$i >> 2] | 0) == ($44 | 0)) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $$0$i = $$0$i + 4 | 0;
   }
   HEAP8[$$2 >> 0] = HEAP8[104245 + ($$0$lcssa$i - $40 >> 2) >> 0] | 0;
   $$0 = $$0 + 4 | 0;
   $$2 = $$2 + 1 | 0;
  }
  HEAP8[$$2 >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $6;
  _sscanf($13, 104146, $vararg_buffer) | 0;
  if ($$sroa$027$0 | 0) _free($$sroa$027$0);
 }
 $57 = HEAP32[$1 >> 2] | 0;
 do if (!$57) $89 = 1; else {
  $60 = HEAP32[$57 + 12 >> 2] | 0;
  if (($60 | 0) == (HEAP32[$57 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 36 >> 2] & 255]($57) | 0; else $$0$i$i$i$i = HEAP32[$60 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $89 = 1;
   break;
  } else {
   $89 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $70 = HEAP32[$2 >> 2] | 0;
 do if (!$70) label = 30; else {
  $73 = HEAP32[$70 + 12 >> 2] | 0;
  if (($73 | 0) == (HEAP32[$70 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$70 >> 2] | 0) + 36 >> 2] & 255]($70) | 0; else $$0$i$i2$i$i = HEAP32[$73 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 30;
   break;
  } else if ($89) break; else {
   label = 32;
   break;
  }
 } while (0);
 if ((label | 0) == 30) if ($89) label = 32;
 if ((label | 0) == 32) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$10 >> 2] | 0) | 0;
 $86 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($86 | 0) FUNCTION_TABLE_vi[HEAP32[$15 >> 2] & 255]($86);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __Z13luaV_equalvalP9lua_StatePK10lua_TValueS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$029$shrunk = 0, $102 = 0, $107 = 0, $109 = 0, $110 = 0, $111 = 0, $116 = 0, $118 = 0, $14 = 0, $15 = 0, $18 = 0, $20 = 0, $26 = 0, $3 = 0, $30 = 0, $41 = 0, $45 = 0, $46 = 0, $49 = 0, $51 = 0, $57 = 0, $61 = 0, $72 = 0, $79 = 0, $80 = 0, $81 = 0, $84 = 0, $89 = 0, $94 = 0, label = 0;
 $3 = $1 + 4 | 0;
 switch (HEAP32[$3 >> 2] | 0) {
 case 0:
  {
   $$029$shrunk = 1;
   break;
  }
 case 3:
  {
   $$029$shrunk = +HEAPF32[$1 >> 2] == +HEAPF32[$2 >> 2];
   break;
  }
 case 1:
  {
   $$029$shrunk = (HEAP32[$1 >> 2] | 0) == (HEAP32[$2 >> 2] | 0);
   break;
  }
 case 2:
  {
   $$029$shrunk = (HEAP32[$1 >> 2] | 0) == (HEAP32[$2 >> 2] | 0);
   break;
  }
 case 7:
  {
   $14 = HEAP32[$1 >> 2] | 0;
   $15 = HEAP32[$2 >> 2] | 0;
   if (($14 | 0) == ($15 | 0)) $$029$shrunk = 1; else {
    $18 = HEAP32[$14 + 8 >> 2] | 0;
    $20 = HEAP32[$15 + 8 >> 2] | 0;
    if (!$18) $$029$shrunk = 0; else if (!(HEAP8[$18 + 6 >> 0] & 16)) {
     $26 = $0 + 16 | 0;
     $30 = __Z10luaT_gettmP5Table3TMSP7TString($18, 4, HEAP32[(HEAP32[$26 >> 2] | 0) + 176 >> 2] | 0) | 0;
     if (!$30) $$029$shrunk = 0; else if (($18 | 0) == ($20 | 0)) {
      $$0 = $30;
      label = 24;
     } else if (!$20) $$029$shrunk = 0; else if (!(HEAP8[$20 + 6 >> 0] & 16)) {
      $41 = __Z10luaT_gettmP5Table3TMSP7TString($20, 4, HEAP32[(HEAP32[$26 >> 2] | 0) + 176 >> 2] | 0) | 0;
      if (!$41) $$029$shrunk = 0; else if (!(__Z16luaO_rawequalObjPK10lua_TValueS1_($30, $41) | 0)) $$029$shrunk = 0; else {
       $$0 = $30;
       label = 24;
      }
     } else $$029$shrunk = 0;
    } else $$029$shrunk = 0;
   }
   break;
  }
 case 5:
  {
   $45 = HEAP32[$1 >> 2] | 0;
   $46 = HEAP32[$2 >> 2] | 0;
   if (($45 | 0) == ($46 | 0)) $$029$shrunk = 1; else {
    $49 = HEAP32[$45 + 8 >> 2] | 0;
    $51 = HEAP32[$46 + 8 >> 2] | 0;
    if (!$49) $$029$shrunk = 0; else if (!(HEAP8[$49 + 6 >> 0] & 16)) {
     $57 = $0 + 16 | 0;
     $61 = __Z10luaT_gettmP5Table3TMSP7TString($49, 4, HEAP32[(HEAP32[$57 >> 2] | 0) + 176 >> 2] | 0) | 0;
     if (!$61) $$029$shrunk = 0; else if (($49 | 0) == ($51 | 0)) {
      $$0 = $61;
      label = 24;
     } else if (!$51) $$029$shrunk = 0; else if (!(HEAP8[$51 + 6 >> 0] & 16)) {
      $72 = __Z10luaT_gettmP5Table3TMSP7TString($51, 4, HEAP32[(HEAP32[$57 >> 2] | 0) + 176 >> 2] | 0) | 0;
      if (!$72) $$029$shrunk = 0; else if (!(__Z16luaO_rawequalObjPK10lua_TValueS1_($61, $72) | 0)) $$029$shrunk = 0; else {
       $$0 = $61;
       label = 24;
      }
     } else $$029$shrunk = 0;
    } else $$029$shrunk = 0;
   }
   break;
  }
 default:
  $$029$shrunk = (HEAP32[$1 >> 2] | 0) == (HEAP32[$2 >> 2] | 0);
 }
 if ((label | 0) == 24) {
  $79 = $0 + 8 | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $0 + 32 | 0;
  $84 = $80 - (HEAP32[$81 >> 2] | 0) | 0;
  HEAP32[$80 >> 2] = HEAP32[$$0 >> 2];
  HEAP32[$80 + 4 >> 2] = HEAP32[$$0 + 4 >> 2];
  $89 = HEAP32[$79 >> 2] | 0;
  HEAP32[$89 + 8 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$89 + 12 >> 2] = HEAP32[$3 >> 2];
  $94 = HEAP32[$79 >> 2] | 0;
  HEAP32[$94 + 16 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$94 + 20 >> 2] = HEAP32[$2 + 4 >> 2];
  $102 = HEAP32[$79 >> 2] | 0;
  if (((HEAP32[$0 + 28 >> 2] | 0) - $102 | 0) < 25) {
   __Z14luaD_growstackP9lua_Statei($0, 3);
   $107 = HEAP32[$79 >> 2] | 0;
  } else $107 = $102;
  HEAP32[$79 >> 2] = $107 + 24;
  __Z9luaD_callP9lua_StateP10lua_TValuei($0, $107, 1);
  $109 = (HEAP32[$81 >> 2] | 0) + $84 | 0;
  $110 = HEAP32[$79 >> 2] | 0;
  $111 = $110 + -8 | 0;
  HEAP32[$79 >> 2] = $111;
  HEAP32[$109 >> 2] = HEAP32[$111 >> 2];
  HEAP32[$109 + 4 >> 2] = HEAP32[$110 + -4 >> 2];
  $116 = HEAP32[$79 >> 2] | 0;
  $118 = HEAP32[$116 + 4 >> 2] | 0;
  if (!$118) $$029$shrunk = 0; else if (($118 | 0) == 1) $$029$shrunk = (HEAP32[$116 >> 2] | 0) != 0; else $$029$shrunk = 1;
 }
 return $$029$shrunk & 1 | 0;
}

function __Z9luaH_nextP9lua_StateP5TableP10lua_TValue($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $$0$ph$i = 0, $$056 = 0, $$056$in = 0, $$056$in$ph = 0, $$165 = 0, $101 = 0, $108 = 0, $112 = 0, $114 = 0, $115 = 0, $123 = 0, $130 = 0, $15 = 0, $3 = 0, $5 = 0.0, $6 = 0, $69 = 0, $89 = 0, $92 = 0, $93 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $3 = $2 + 4 | 0;
 L1 : do switch (HEAP32[$3 >> 2] | 0) {
 case 0:
  {
   $$056$in$ph = -1;
   break;
  }
 case 3:
  {
   $5 = +HEAPF32[$2 >> 2];
   $6 = ~~$5;
   if (($6 | 0) > 0 & +($6 | 0) == $5) if (($6 | 0) <= (HEAP32[$1 + 28 >> 2] | 0)) {
    $$056$in$ph = $6 + -1 | 0;
    break L1;
   }
   $15 = HEAP32[$1 + 16 >> 2] | 0;
   if ($5 == 0.0) {
    $$0$ph$i = $15;
    label = 11;
   } else {
    $$0$ph$i = $15 + ((((HEAPF32[tempDoublePtr >> 2] = $5, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
    label = 11;
   }
   break;
  }
 case 2:
  {
   $$0$ph$i = (HEAP32[$1 + 16 >> 2] | 0) + ((((HEAP32[$2 >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
   label = 11;
   break;
  }
 case 4:
  {
   $$0$ph$i = (HEAP32[$1 + 16 >> 2] | 0) + (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 & HEAP32[(HEAP32[$2 >> 2] | 0) + 8 >> 2]) * 20 | 0) | 0;
   label = 11;
   break;
  }
 case 1:
  {
   $$0$ph$i = (HEAP32[$1 + 16 >> 2] | 0) + (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 & HEAP32[$2 >> 2]) * 20 | 0) | 0;
   label = 11;
   break;
  }
 default:
  {
   $$0$ph$i = (HEAP32[$1 + 16 >> 2] | 0) + ((((HEAP32[$2 >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
   label = 11;
  }
 } while (0);
 do if ((label | 0) == 11) {
  $$0$i = $$0$ph$i;
  while (1) {
   $69 = $$0$i + 8 | 0;
   if (__Z16luaO_rawequalObjPK10lua_TValueS1_($69, $2) | 0) {
    label = 16;
    break;
   }
   if ((HEAP32[$$0$i + 12 >> 2] | 0) == 11) if ((HEAP32[$3 >> 2] | 0) > 3) if ((HEAP32[$69 >> 2] | 0) == (HEAP32[$2 >> 2] | 0)) {
    label = 16;
    break;
   }
   $89 = HEAP32[$$0$i + 16 >> 2] | 0;
   if (!$89) {
    label = 18;
    break;
   } else $$0$i = $89;
  }
  if ((label | 0) == 16) {
   $$056$in$ph = (($$0$i - (HEAP32[$1 + 16 >> 2] | 0) | 0) / 20 | 0) + (HEAP32[$1 + 28 >> 2] | 0) | 0;
   break;
  } else if ((label | 0) == 18) {
   __Z13luaG_runerrorP9lua_StatePKcz($0, 88946, $vararg_buffer);
   $$056$in$ph = 0;
   break;
  }
 } while (0);
 $92 = HEAP32[$1 + 28 >> 2] | 0;
 $93 = $1 + 12 | 0;
 $$056$in = $$056$in$ph;
 while (1) {
  $$056 = $$056$in + 1 | 0;
  if (($$056 | 0) >= ($92 | 0)) break;
  if (!(HEAP32[(HEAP32[$93 >> 2] | 0) + ($$056 << 3) + 4 >> 2] | 0)) $$056$in = $$056; else {
   label = 22;
   break;
  }
 }
 if ((label | 0) == 22) {
  HEAPF32[$2 >> 2] = +($$056$in + 2 | 0);
  HEAP32[$3 >> 2] = 3;
  $101 = HEAP32[$93 >> 2] | 0;
  HEAP32[$2 + 8 >> 2] = HEAP32[$101 + ($$056 << 3) >> 2];
  HEAP32[$2 + 12 >> 2] = HEAP32[$101 + ($$056 << 3) + 4 >> 2];
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $108 = $$056 - $92 | 0;
 $112 = 1 << (HEAPU8[$1 + 7 >> 0] | 0);
 if (($108 | 0) >= ($112 | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $114 = $1 + 16 | 0;
 $115 = HEAP32[$114 >> 2] | 0;
 $$165 = $108;
 while (1) {
  if (HEAP32[$115 + ($$165 * 20 | 0) + 4 >> 2] | 0) break;
  $130 = $$165 + 1 | 0;
  if (($130 | 0) < ($112 | 0)) $$165 = $130; else {
   $$0 = 0;
   label = 28;
   break;
  }
 }
 if ((label | 0) == 28) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$2 >> 2] = HEAP32[$115 + ($$165 * 20 | 0) + 8 >> 2];
 HEAP32[$3 >> 2] = HEAP32[$115 + ($$165 * 20 | 0) + 12 >> 2];
 $123 = HEAP32[$114 >> 2] | 0;
 HEAP32[$2 + 8 >> 2] = HEAP32[$123 + ($$165 * 20 | 0) >> 2];
 HEAP32[$2 + 12 >> 2] = HEAP32[$123 + ($$165 * 20 | 0) + 4 >> 2];
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z10lua_resumeP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$025 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $21 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $4 = 0, $42 = 0, $48 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $62 = 0, $82 = 0, $85 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $3 = $0 + 6 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 switch ($4 << 24 >> 24) {
 case 1:
  break;
 case 0:
  {
   $6 = HEAP32[$0 + 20 >> 2] | 0;
   if (($6 | 0) != (HEAP32[$0 + 40 >> 2] | 0)) {
    $11 = $6;
    label = 4;
   }
   break;
  }
 default:
  {
   $11 = HEAP32[$0 + 20 >> 2] | 0;
   label = 4;
  }
 }
 if ((label | 0) == 4) {
  $10 = HEAP32[$11 >> 2] | 0;
  $12 = $0 + 8 | 0;
  HEAP32[$12 >> 2] = $10;
  HEAP32[$10 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 87096, 37) | 0;
  HEAP32[$10 + 4 >> 2] = 4;
  do if (((HEAP32[$0 + 28 >> 2] | 0) - (HEAP32[$12 >> 2] | 0) | 0) < 9) {
   $21 = HEAP32[$0 + 44 >> 2] | 0;
   if (($21 | 0) < 1) {
    __Z17luaD_reallocstackP9lua_Statei($0, $21 + 1 | 0);
    break;
   } else {
    __Z17luaD_reallocstackP9lua_Statei($0, $21 << 1);
    break;
   }
  } while (0);
  HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 8;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  $$025 = 2;
  STACKTOP = sp;
  return $$025 | 0;
 }
 $27 = $0 + 52 | 0;
 $28 = HEAP16[$27 >> 1] | 0;
 if (($28 & 65535) > 199) {
  $32 = HEAP32[HEAP32[$0 + 20 >> 2] >> 2] | 0;
  $33 = $0 + 8 | 0;
  HEAP32[$33 >> 2] = $32;
  HEAP32[$32 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 87079, 16) | 0;
  HEAP32[$32 + 4 >> 2] = 4;
  do if (((HEAP32[$0 + 28 >> 2] | 0) - (HEAP32[$33 >> 2] | 0) | 0) < 9) {
   $42 = HEAP32[$0 + 44 >> 2] | 0;
   if (($42 | 0) < 1) {
    __Z17luaD_reallocstackP9lua_Statei($0, $42 + 1 | 0);
    break;
   } else {
    __Z17luaD_reallocstackP9lua_Statei($0, $42 << 1);
    break;
   }
  } while (0);
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 8;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  $$025 = 2;
  STACKTOP = sp;
  return $$025 | 0;
 }
 $48 = $28 + 1 << 16 >> 16;
 HEAP16[$27 >> 1] = $48;
 HEAP16[$0 + 54 >> 1] = $48;
 $50 = $0 + 8 | 0;
 $53 = (HEAP32[$50 >> 2] | 0) + (0 - $1 << 3) | 0;
 $54 = $2 + 8 | 0;
 HEAP32[$54 >> 2] = 0;
 $55 = $0 + 96 | 0;
 HEAP32[$2 >> 2] = HEAP32[$55 >> 2];
 HEAP32[$55 >> 2] = $2;
 $57 = $0 + 20 | 0;
 do if (!($4 << 24 >> 24)) {
  if (!(__Z12luaD_precallP9lua_StateP10lua_TValuei($0, $53 + -8 | 0, -1) | 0)) label = 21;
 } else {
  $62 = HEAP32[$57 >> 2] | 0;
  HEAP8[$3 >> 0] = 0;
  if (!(HEAP8[(HEAP32[HEAP32[$62 + 4 >> 2] >> 2] | 0) + 6 >> 0] | 0)) {
   HEAP32[$0 + 12 >> 2] = HEAP32[$62 >> 2];
   label = 21;
   break;
  }
  if (!(__Z12luaD_poscallP9lua_StateP10lua_TValue($0, $53) | 0)) label = 21; else {
   HEAP32[$50 >> 2] = HEAP32[(HEAP32[$57 >> 2] | 0) + 8 >> 2];
   label = 21;
  }
 } while (0);
 if ((label | 0) == 21) __Z12luaV_executeP9lua_Statei($0, ((HEAP32[$57 >> 2] | 0) - (HEAP32[$0 + 40 >> 2] | 0) | 0) / 24 | 0);
 HEAP32[$55 >> 2] = HEAP32[$2 >> 2];
 $82 = HEAP32[$54 >> 2] | 0;
 if (!$82) $$0 = HEAPU8[$3 >> 0] | 0; else {
  HEAP8[$3 >> 0] = $82;
  $85 = HEAP32[$50 >> 2] | 0;
  switch ($82 | 0) {
  case 4:
   {
    HEAP32[$85 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 88320, 17) | 0;
    HEAP32[$85 + 4 >> 2] = 4;
    break;
   }
  case 5:
   {
    HEAP32[$85 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 87006, 23) | 0;
    HEAP32[$85 + 4 >> 2] = 4;
    break;
   }
  case 2:
  case 3:
   {
    HEAP32[$85 >> 2] = HEAP32[$85 + -8 >> 2];
    HEAP32[$85 + 4 >> 2] = HEAP32[$85 + -4 >> 2];
    break;
   }
  default:
   {}
  }
  $95 = $85 + 8 | 0;
  HEAP32[$50 >> 2] = $95;
  HEAP32[(HEAP32[$57 >> 2] | 0) + 8 >> 2] = $95;
  $$0 = $82;
 }
 HEAP16[$27 >> 1] = (HEAP16[$27 >> 1] | 0) + -1 << 16 >> 16;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 $$025 = $$0;
 STACKTOP = sp;
 return $$025 | 0;
}

function __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0100 = 0, $$194 = 0, $$2102 = 0, $$598 = 0, $$pre142 = 0, $101 = 0, $121 = 0, $21 = 0, $22 = 0, $33 = 0, $43 = 0, $47 = 0, $49 = 0, $62 = 0, $76 = 0, $82 = 0, $84 = 0, $86 = 0, $98 = 0, label = 0;
 $$pre142 = $1;
 if (!($4 & 4)) {
  $$0100 = 0;
  $$194 = $0;
 } else if (($$pre142 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == -17) if ((HEAP8[$0 + 1 >> 0] | 0) == -69) {
  $$0100 = 0;
  $$194 = (HEAP8[$0 + 2 >> 0] | 0) == -65 ? $0 + 3 | 0 : $0;
 } else {
  $$0100 = 0;
  $$194 = $0;
 } else {
  $$0100 = 0;
  $$194 = $0;
 } else {
  $$0100 = 0;
  $$194 = $0;
 }
 L6 : while (1) {
  if (!($$0100 >>> 0 < $2 >>> 0 & $$194 >>> 0 < $1 >>> 0)) {
   label = 39;
   break;
  }
  $21 = HEAP8[$$194 >> 0] | 0;
  $22 = $21 & 255;
  if ($22 >>> 0 > $3 >>> 0) {
   label = 39;
   break;
  }
  do if ($21 << 24 >> 24 > -1) {
   $$2102 = $$0100;
   $$598 = $$194 + 1 | 0;
  } else {
   if (($21 & 255) < 194) {
    label = 39;
    break L6;
   }
   if (($21 & 255) < 224) {
    if (($$pre142 - $$194 | 0) < 2) {
     label = 39;
     break L6;
    }
    $33 = HEAPU8[$$194 + 1 >> 0] | 0;
    if (($33 & 192 | 0) != 128) {
     label = 39;
     break L6;
    }
    if (($33 & 63 | $22 << 6 & 1984) >>> 0 > $3 >>> 0) {
     label = 39;
     break L6;
    } else {
     $$2102 = $$0100;
     $$598 = $$194 + 2 | 0;
     break;
    }
   }
   if (($21 & 255) < 240) {
    $43 = $$194;
    if (($$pre142 - $43 | 0) < 3) {
     label = 39;
     break L6;
    }
    $47 = HEAP8[$$194 + 1 >> 0] | 0;
    $49 = HEAP8[$$194 + 2 >> 0] | 0;
    switch ($21 << 24 >> 24) {
    case -32:
     {
      if (($47 & -32) << 24 >> 24 != -96) {
       label = 19;
       break L6;
      }
      break;
     }
    case -19:
     {
      if (($47 & -32) << 24 >> 24 != -128) {
       label = 21;
       break L6;
      }
      break;
     }
    default:
     if (($47 & -64) << 24 >> 24 != -128) {
      label = 23;
      break L6;
     }
    }
    $62 = $49 & 255;
    if (($62 & 192 | 0) != 128) {
     label = 39;
     break L6;
    }
    if ((($47 & 255) << 6 & 4032 | $22 << 12 & 61440 | $62 & 63) >>> 0 > $3 >>> 0) {
     label = 39;
     break L6;
    } else {
     $$2102 = $$0100;
     $$598 = $$194 + 3 | 0;
     break;
    }
   }
   if (($21 & 255) >= 245) {
    label = 39;
    break L6;
   }
   $76 = $$194;
   if (($2 - $$0100 | 0) >>> 0 < 2 | ($$pre142 - $76 | 0) < 4) {
    label = 39;
    break L6;
   }
   $82 = HEAP8[$$194 + 1 >> 0] | 0;
   $84 = HEAP8[$$194 + 2 >> 0] | 0;
   $86 = HEAP8[$$194 + 3 >> 0] | 0;
   switch ($21 << 24 >> 24) {
   case -16:
    {
     if (($82 + 112 & 255) >= 48) {
      label = 30;
      break L6;
     }
     break;
    }
   case -12:
    {
     if (($82 & -16) << 24 >> 24 != -128) {
      label = 32;
      break L6;
     }
     break;
    }
   default:
    if (($82 & -64) << 24 >> 24 != -128) {
     label = 34;
     break L6;
    }
   }
   $98 = $84 & 255;
   if (($98 & 192 | 0) != 128) {
    label = 39;
    break L6;
   }
   $101 = $86 & 255;
   if (($101 & 192 | 0) != 128) {
    label = 39;
    break L6;
   }
   if ((($82 & 255) << 12 & 258048 | $22 << 18 & 1835008 | $98 << 6 & 4032 | $101 & 63) >>> 0 > $3 >>> 0) {
    label = 39;
    break L6;
   } else {
    $$2102 = $$0100 + 1 | 0;
    $$598 = $$194 + 4 | 0;
   }
  } while (0);
  $$0100 = $$2102 + 1 | 0;
  $$194 = $$598;
 }
 if ((label | 0) == 19) $121 = $43 - $0 | 0; else if ((label | 0) == 21) $121 = $43 - $0 | 0; else if ((label | 0) == 23) $121 = $43 - $0 | 0; else if ((label | 0) == 30) $121 = $76 - $0 | 0; else if ((label | 0) == 32) $121 = $76 - $0 | 0; else if ((label | 0) == 34) $121 = $76 - $0 | 0; else if ((label | 0) == 39) $121 = $$194 - $0 | 0;
 return $121 | 0;
}

function __ZL10max_expandP10MatchStatePKcS2_S2_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$$i$i = 0, $$0$i = 0, $$021$lcssa = 0, $$02124 = 0, $$02124$us = 0, $$02124$us27 = 0, $$023$be$i$i = 0, $$02325$i$i = 0, $$122 = 0, $$2 = 0, $$24$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $40 = 0, $5 = 0, $51 = 0, $52 = 0, $57 = 0, $58 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if ($5 >>> 0 > $1 >>> 0) {
  $7 = HEAP8[$2 >> 0] | 0;
  $8 = $7 << 24 >> 24;
  $9 = $2 + 1 | 0;
  $10 = $3 + -1 | 0;
  switch ($8 | 0) {
  case 46:
   {
    $$02124$us = 0;
    while (1) {
     $12 = $$02124$us + 1 | 0;
     if (($1 + $12 | 0) >>> 0 < $5 >>> 0) $$02124$us = $12; else {
      $$021$lcssa = $12;
      break;
     }
    }
    break;
   }
  case 37:
   {
    $11 = HEAPU8[$9 >> 0] | 0;
    $$02124$us27 = 0;
    $16 = $1;
    while (1) {
     if (!(__ZL11match_classii(HEAPU8[$16 >> 0] | 0, $11) | 0)) {
      $$021$lcssa = $$02124$us27;
      break L1;
     }
     $20 = $$02124$us27 + 1 | 0;
     $16 = $1 + $20 | 0;
     if ($16 >>> 0 >= $5 >>> 0) {
      $$021$lcssa = $20;
      break;
     } else $$02124$us27 = $20;
    }
    break;
   }
  default:
   {
    $$02124 = 0;
    $24 = $1;
    while (1) {
     $23 = HEAP8[$24 >> 0] | 0;
     $25 = $23 & 255;
     L6 : do switch ($8 | 0) {
     case 46:
      break;
     case 91:
      {
       $27 = (HEAP8[$9 >> 0] | 0) == 94;
       $$$i$i = $27 ? $9 : $2;
       $28 = $27 & 1;
       $$24$i$i = $28 ^ 1;
       $29 = $$$i$i + 1 | 0;
       if ($29 >>> 0 < $10 >>> 0) {
        $$02325$i$i = $$$i$i;
        $32 = $29;
        while (1) {
         $31 = HEAP8[$32 >> 0] | 0;
         $34 = $$02325$i$i + 2 | 0;
         $35 = HEAP8[$34 >> 0] | 0;
         do if ($31 << 24 >> 24 == 37) if (!(__ZL11match_classii($25, $35 & 255) | 0)) $$023$be$i$i = $34; else {
          $$0$i = $$24$i$i;
          label = 18;
          break L6;
         } else {
          if ($35 << 24 >> 24 == 45) {
           $40 = $$02325$i$i + 3 | 0;
           if ($40 >>> 0 < $10 >>> 0) {
            if (($31 & 255) > ($23 & 255)) {
             $$023$be$i$i = $40;
             break;
            }
            if ((HEAPU8[$40 >> 0] | 0) < ($23 & 255)) {
             $$023$be$i$i = $40;
             break;
            } else {
             $$0$i = $$24$i$i;
             label = 18;
             break L6;
            }
           }
          }
          if ($31 << 24 >> 24 == $23 << 24 >> 24) {
           $$0$i = $$24$i$i;
           label = 18;
           break L6;
          } else $$023$be$i$i = $32;
         } while (0);
         $32 = $$023$be$i$i + 1 | 0;
         if ($32 >>> 0 >= $10 >>> 0) {
          $$0$i = $28;
          label = 18;
          break;
         } else $$02325$i$i = $$023$be$i$i;
        }
       } else {
        $$0$i = $28;
        label = 18;
       }
       break;
      }
     default:
      {
       $$0$i = $7 << 24 >> 24 == $23 << 24 >> 24 & 1;
       label = 18;
      }
     } while (0);
     if ((label | 0) == 18) {
      label = 0;
      if (!$$0$i) {
       $$021$lcssa = $$02124;
       break L1;
      }
     }
     $52 = $$02124 + 1 | 0;
     $24 = $1 + $52 | 0;
     if ($24 >>> 0 >= $5 >>> 0) {
      $$021$lcssa = $52;
      break L1;
     } else $$02124 = $52;
    }
   }
  }
 } else $$021$lcssa = 0; while (0);
 $51 = $3 + 1 | 0;
 $$122 = $$021$lcssa;
 while (1) {
  if (($$122 | 0) <= -1) {
   $$2 = 0;
   label = 23;
   break;
  }
  $57 = __ZL5matchP10MatchStatePKcS2_($0, $1 + $$122 | 0, $51) | 0;
  $58 = ($57 | 0) == 0;
  if ($58) $$122 = ($58 << 31 >> 31) + $$122 | 0; else {
   $$2 = $57;
   label = 23;
   break;
  }
 }
 if ((label | 0) == 23) return $$2 | 0;
 return 0;
}

function __Z13luaL_loadfileP9lua_StatePKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$034 = 0, $$1 = 0, $$pre$phiZ2D = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $24 = 0, $25 = 0, $29 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $43 = 0, $44 = 0, $6 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088 | 0;
 $vararg_buffer11 = sp + 40 | 0;
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 56 | 0;
 $4 = (__Z10lua_gettopP9lua_State($0) | 0) + 1 | 0;
 HEAP32[$2 >> 2] = 0;
 if (!$1) {
  __Z15lua_pushlstringP9lua_StatePKcj($0, 85735, 6);
  $6 = HEAP32[17412] | 0;
  $7 = $2 + 4 | 0;
  HEAP32[$7 >> 2] = $6;
  $$pre$phiZ2D = $7;
  $17 = $6;
 } else {
  HEAP32[$vararg_buffer >> 2] = $1;
  __Z15lua_pushfstringP9lua_StatePKcz($0, 85742, $vararg_buffer) | 0;
  $9 = _fopen($1, 91303) | 0;
  $10 = $2 + 4 | 0;
  HEAP32[$10 >> 2] = $9;
  if (!$9) {
   $14 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
   $16 = (__Z13lua_tolstringP9lua_StateiPj($0, $4, 0) | 0) + 1 | 0;
   HEAP32[$vararg_buffer1 >> 2] = 85763;
   HEAP32[$vararg_buffer1 + 4 >> 2] = $16;
   HEAP32[$vararg_buffer1 + 8 >> 2] = $14;
   __Z15lua_pushfstringP9lua_StatePKcz($0, 85746, $vararg_buffer1) | 0;
   __Z10lua_removeP9lua_Statei($0, $4);
   $$0 = 6;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$pre$phiZ2D = $10;
   $17 = $9;
  }
 }
 $18 = _getc($17) | 0;
 do if (($18 | 0) == 35) {
  HEAP32[$2 >> 2] = 1;
  L9 : while (1) switch (_getc($17) | 0) {
  case 10:
   {
    label = 9;
    break L9;
    break;
   }
  case -1:
   {
    label = 8;
    break L9;
    break;
   }
  default:
   {}
  }
  if ((label | 0) == 8) {
   $$1 = -1;
   $33 = $17;
   $44 = ($1 | 0) != 0;
   break;
  } else if ((label | 0) == 9) {
   $$034 = _getc($17) | 0;
   label = 10;
   break;
  }
 } else {
  $$034 = $18;
  label = 10;
 } while (0);
 do if ((label | 0) == 10) {
  $24 = ($1 | 0) != 0;
  if ($24 & ($$034 | 0) == 27) {
   $25 = _freopen($1, 85768, $17) | 0;
   HEAP32[$$pre$phiZ2D >> 2] = $25;
   if (!$25) {
    $29 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    $31 = (__Z13lua_tolstringP9lua_StateiPj($0, $4, 0) | 0) + 1 | 0;
    HEAP32[$vararg_buffer6 >> 2] = 85771;
    HEAP32[$vararg_buffer6 + 4 >> 2] = $31;
    HEAP32[$vararg_buffer6 + 8 >> 2] = $29;
    __Z15lua_pushfstringP9lua_StatePKcz($0, 85746, $vararg_buffer6) | 0;
    __Z10lua_removeP9lua_Statei($0, $4);
    $$0 = 6;
    STACKTOP = sp;
    return $$0 | 0;
   } else {
    L20 : while (1) {
     $32 = _getc($25) | 0;
     switch ($32 | 0) {
     case 27:
     case -1:
      {
       break L20;
       break;
      }
     default:
      {}
     }
    }
    HEAP32[$2 >> 2] = 0;
    $$1 = $32;
    $33 = $25;
    $44 = 1;
    break;
   }
  } else {
   $$1 = $$034;
   $33 = $17;
   $44 = $24;
  }
 } while (0);
 _ungetc($$1, $33) | 0;
 $35 = __Z8lua_loadP9lua_StatePFPKcS0_PvPjES3_S2_($0, 29, $2, __Z13lua_tolstringP9lua_StateiPj($0, -1, 0) | 0) | 0;
 $36 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $37 = _ferror($36) | 0;
 if ($44) _fclose($36) | 0;
 if (!$37) {
  __Z10lua_removeP9lua_Statei($0, $4);
  $$0 = $35;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  __Z10lua_settopP9lua_Statei($0, $4);
  $41 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
  $43 = (__Z13lua_tolstringP9lua_StateiPj($0, $4, 0) | 0) + 1 | 0;
  HEAP32[$vararg_buffer11 >> 2] = 85778;
  HEAP32[$vararg_buffer11 + 4 >> 2] = $43;
  HEAP32[$vararg_buffer11 + 8 >> 2] = $41;
  __Z15lua_pushfstringP9lua_StatePKcz($0, 85746, $vararg_buffer11) | 0;
  __Z10lua_removeP9lua_Statei($0, $4);
  $$0 = 6;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __GLOBAL__sub_I_gflags_cc() {
 var $0 = 0, $1 = 0, $12 = 0, $16 = 0, $17 = 0, $20 = 0, $24 = 0, $25 = 0, $28 = 0, $4 = 0, $8 = 0, $9 = 0;
 HEAP32[27072] = 0;
 HEAP32[27073] = 0;
 HEAP32[27074] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(108288, 114224, 0);
 HEAP32[27106] = 108288;
 $0 = HEAP32[27106] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(108300, $0);
 $1 = __Znwj(8) | 0;
 HEAP32[$1 >> 2] = $0;
 HEAP8[$1 + 4 >> 0] = 6;
 HEAP8[$1 + 5 >> 0] = 0;
 $4 = __Znwj(8) | 0;
 HEAP32[$4 >> 2] = 108300;
 HEAP8[$4 + 4 >> 0] = 6;
 HEAP8[$4 + 5 >> 0] = 0;
 __ZN6google12_GLOBAL__N_123RegisterCommandLineFlagEPKcS2_S2_PNS0_9FlagValueES4_(90249, 90258, 90279, $1, $4);
 HEAP32[27104] = 108288;
 HEAP32[27105] = 108300;
 ___cxa_atexit(173, 108416, ___dso_handle | 0) | 0;
 HEAP32[27048] = HEAP32[27106];
 HEAP32[27066] = 0;
 HEAP32[27067] = 0;
 HEAP32[27068] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(108264, 114224, 0);
 HEAP32[27103] = 108264;
 $8 = HEAP32[27103] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(108276, $8);
 $9 = __Znwj(8) | 0;
 HEAP32[$9 >> 2] = $8;
 HEAP8[$9 + 4 >> 0] = 6;
 HEAP8[$9 + 5 >> 0] = 0;
 $12 = __Znwj(8) | 0;
 HEAP32[$12 >> 2] = 108276;
 HEAP8[$12 + 4 >> 0] = 6;
 HEAP8[$12 + 5 >> 0] = 0;
 __ZN6google12_GLOBAL__N_123RegisterCommandLineFlagEPKcS2_S2_PNS0_9FlagValueES4_(90336, 90344, 90279, $9, $12);
 HEAP32[27101] = 108264;
 HEAP32[27102] = 108276;
 ___cxa_atexit(173, 108404, ___dso_handle | 0) | 0;
 HEAP32[27049] = HEAP32[27103];
 HEAP32[27060] = 0;
 HEAP32[27061] = 0;
 HEAP32[27062] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(108240, 114224, 0);
 HEAP32[27100] = 108240;
 $16 = HEAP32[27100] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(108252, $16);
 $17 = __Znwj(8) | 0;
 HEAP32[$17 >> 2] = $16;
 HEAP8[$17 + 4 >> 0] = 6;
 HEAP8[$17 + 5 >> 0] = 0;
 $20 = __Znwj(8) | 0;
 HEAP32[$20 >> 2] = 108252;
 HEAP8[$20 + 4 >> 0] = 6;
 HEAP8[$20 + 5 >> 0] = 0;
 __ZN6google12_GLOBAL__N_123RegisterCommandLineFlagEPKcS2_S2_PNS0_9FlagValueES4_(90408, 90419, 90279, $17, $20);
 HEAP32[27098] = 108240;
 HEAP32[27099] = 108252;
 ___cxa_atexit(173, 108392, ___dso_handle | 0) | 0;
 HEAP32[27050] = HEAP32[27100];
 HEAP32[27054] = 0;
 HEAP32[27055] = 0;
 HEAP32[27056] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(108216, 114224, 0);
 HEAP32[27097] = 108216;
 $24 = HEAP32[27097] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(108228, $24);
 $25 = __Znwj(8) | 0;
 HEAP32[$25 >> 2] = $24;
 HEAP8[$25 + 4 >> 0] = 6;
 HEAP8[$25 + 5 >> 0] = 0;
 $28 = __Znwj(8) | 0;
 HEAP32[$28 >> 2] = 108228;
 HEAP8[$28 + 4 >> 0] = 6;
 HEAP8[$28 + 5 >> 0] = 0;
 __ZN6google12_GLOBAL__N_123RegisterCommandLineFlagEPKcS2_S2_PNS0_9FlagValueES4_(90461, 90469, 90279, $25, $28);
 HEAP32[27095] = 108216;
 HEAP32[27096] = 108228;
 ___cxa_atexit(173, 108380, ___dso_handle | 0) | 0;
 HEAP32[27051] = HEAP32[27097];
 HEAP32[27093] = 0;
 HEAP32[27090] = 0;
 HEAP32[27091] = 0;
 HEAP32[27092] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(108360, 90692, 7);
 ___cxa_atexit(164, 108360, ___dso_handle | 0) | 0;
 HEAP32[27087] = 0;
 HEAP32[27088] = 0;
 HEAP32[27089] = 0;
 ___cxa_atexit(164, 108348, ___dso_handle | 0) | 0;
 HEAP32[27084] = 0;
 HEAP32[27085] = 0;
 HEAP32[27086] = 0;
 ___cxa_atexit(164, 108336, ___dso_handle | 0) | 0;
 HEAP32[27081] = 0;
 HEAP32[27082] = 0;
 HEAP32[27083] = 0;
 ___cxa_atexit(174, 108324, ___dso_handle | 0) | 0;
 HEAP32[27078] = 0;
 HEAP32[27079] = 0;
 HEAP32[27080] = 0;
 ___cxa_atexit(164, 108312, ___dso_handle | 0) | 0;
 return;
}

function __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$4 = 0, $$pre80 = 0, $100 = 0, $109 = 0, $114 = 0, $117 = 0, $129 = 0, $134 = 0, $137 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $25 = 0, $32 = 0, $43 = 0, $46 = 0, $58 = 0, $63 = 0, $69 = 0, $71 = 0, $77 = 0, $87 = 0, $91 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $$pre80 = $4;
 if (!($7 & 2)) label = 4; else if (($$pre80 - $3 | 0) < 3) $$4 = 1; else {
  HEAP32[$5 >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = -17;
  $14 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $14 + 1;
  HEAP8[$14 >> 0] = -69;
  $16 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $16 + 1;
  HEAP8[$16 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $18 = $1;
  $19 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if ($19 >>> 0 >= $1 >>> 0) {
    $$4 = 0;
    break L4;
   }
   $21 = HEAP16[$19 >> 1] | 0;
   $22 = $21 & 65535;
   if ($22 >>> 0 > $6 >>> 0) {
    $$4 = 2;
    break L4;
   }
   do if (($21 & 65535) < 128) {
    $25 = HEAP32[$5 >> 2] | 0;
    if (($$pre80 - $25 | 0) < 1) {
     $$4 = 1;
     break L4;
    }
    HEAP32[$5 >> 2] = $25 + 1;
    HEAP8[$25 >> 0] = $21;
   } else {
    if (($21 & 65535) < 2048) {
     $32 = HEAP32[$5 >> 2] | 0;
     if (($$pre80 - $32 | 0) < 2) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $32 + 1;
     HEAP8[$32 >> 0] = $22 >>> 6 | 192;
     $43 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $43 + 1;
     HEAP8[$43 >> 0] = $22 & 63 | 128;
     break;
    }
    if (($21 & 65535) < 55296) {
     $46 = HEAP32[$5 >> 2] | 0;
     if (($$pre80 - $46 | 0) < 3) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $22 >>> 12 | 224;
     $58 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $58 + 1;
     HEAP8[$58 >> 0] = $22 >>> 6 & 63 | 128;
     $63 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $63 + 1;
     HEAP8[$63 >> 0] = $22 & 63 | 128;
     break;
    }
    if (($21 & 65535) >= 56320) {
     if (($21 & 65535) < 57344) {
      $$4 = 2;
      break L4;
     }
     $117 = HEAP32[$5 >> 2] | 0;
     if (($$pre80 - $117 | 0) < 3) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $117 + 1;
     HEAP8[$117 >> 0] = $22 >>> 12 | 224;
     $129 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $129 + 1;
     HEAP8[$129 >> 0] = $22 >>> 6 & 63 | 128;
     $134 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $134 + 1;
     HEAP8[$134 >> 0] = $22 & 63 | 128;
     break;
    }
    if (($18 - $19 | 0) < 4) {
     $$4 = 1;
     break L4;
    }
    $69 = $19 + 2 | 0;
    $71 = HEAPU16[$69 >> 1] | 0;
    if (($71 & 64512 | 0) != 56320) {
     $$4 = 2;
     break L4;
    }
    if (($$pre80 - (HEAP32[$5 >> 2] | 0) | 0) < 4) {
     $$4 = 1;
     break L4;
    }
    $77 = $22 & 960;
    if ((($77 << 10) + 65536 | $22 << 10 & 64512 | $71 & 1023) >>> 0 > $6 >>> 0) {
     $$4 = 2;
     break L4;
    }
    HEAP32[$2 >> 2] = $69;
    $87 = ($77 >>> 6) + 1 | 0;
    $91 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $91 + 1;
    HEAP8[$91 >> 0] = $87 >>> 2 | 240;
    $100 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $100 + 1;
    HEAP8[$100 >> 0] = $22 >>> 2 & 15 | $87 << 4 & 48 | 128;
    $109 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $109 + 1;
    HEAP8[$109 >> 0] = $22 << 4 & 48 | $71 >>> 6 & 15 | 128;
    $114 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $114 + 1;
    HEAP8[$114 >> 0] = $71 & 63 | 128;
   } while (0);
   $137 = (HEAP32[$2 >> 2] | 0) + 2 | 0;
   HEAP32[$2 >> 2] = $137;
   $19 = $137;
  }
 } while (0);
 return $$4 | 0;
}

function __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$9 = 0, $$pre$phiZ2D = 0, $10 = 0, $107 = 0, $11 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $40 = 0, $46 = 0, $54 = 0, $56 = 0, $63 = 0, $73 = 0, $81 = 0, $83 = 0, $85 = 0, $91 = 0, $94 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 if (!($7 & 4)) $$pre$phiZ2D = $1; else {
  $10 = HEAP32[$2 >> 2] | 0;
  $11 = $1;
  if (($11 - $10 | 0) > 2) if ((HEAP8[$10 >> 0] | 0) == -17) if ((HEAP8[$10 + 1 >> 0] | 0) == -69) if ((HEAP8[$10 + 2 >> 0] | 0) == -65) {
   HEAP32[$2 >> 2] = $10 + 3;
   $$pre$phiZ2D = $11;
  } else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11;
 }
 L9 : while (1) {
  $24 = HEAP32[$2 >> 2] | 0;
  $25 = $24 >>> 0 < $1 >>> 0;
  if (!$25) {
   label = 40;
   break;
  }
  $26 = HEAP32[$5 >> 2] | 0;
  if ($26 >>> 0 >= $4 >>> 0) {
   label = 40;
   break;
  }
  $28 = HEAP8[$24 >> 0] | 0;
  $29 = $28 & 255;
  do if ($28 << 24 >> 24 > -1) {
   if ($29 >>> 0 > $6 >>> 0) {
    $$9 = 2;
    break L9;
   }
   HEAP32[$26 >> 2] = $29;
   HEAP32[$2 >> 2] = $24 + 1;
  } else {
   if (($28 & 255) < 194) {
    $$9 = 2;
    break L9;
   }
   if (($28 & 255) < 224) {
    if (($$pre$phiZ2D - $24 | 0) < 2) {
     $$9 = 1;
     break L9;
    }
    $40 = HEAPU8[$24 + 1 >> 0] | 0;
    if (($40 & 192 | 0) != 128) {
     $$9 = 2;
     break L9;
    }
    $46 = $40 & 63 | $29 << 6 & 1984;
    if ($46 >>> 0 > $6 >>> 0) {
     $$9 = 2;
     break L9;
    }
    HEAP32[$26 >> 2] = $46;
    HEAP32[$2 >> 2] = $24 + 2;
    break;
   }
   if (($28 & 255) < 240) {
    if (($$pre$phiZ2D - $24 | 0) < 3) {
     $$9 = 1;
     break L9;
    }
    $54 = HEAP8[$24 + 1 >> 0] | 0;
    $56 = HEAP8[$24 + 2 >> 0] | 0;
    switch ($28 << 24 >> 24) {
    case -32:
     {
      if (($54 & -32) << 24 >> 24 != -96) {
       $$9 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if (($54 & -32) << 24 >> 24 != -128) {
       $$9 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($54 & -64) << 24 >> 24 != -128) {
      $$9 = 2;
      break L9;
     }
    }
    $63 = $56 & 255;
    if (($63 & 192 | 0) != 128) {
     $$9 = 2;
     break L9;
    }
    $73 = ($54 & 255) << 6 & 4032 | $29 << 12 & 61440 | $63 & 63;
    if ($73 >>> 0 > $6 >>> 0) {
     $$9 = 2;
     break L9;
    }
    HEAP32[$26 >> 2] = $73;
    HEAP32[$2 >> 2] = $24 + 3;
    break;
   }
   if (($28 & 255) >= 245) {
    $$9 = 2;
    break L9;
   }
   if (($$pre$phiZ2D - $24 | 0) < 4) {
    $$9 = 1;
    break L9;
   }
   $81 = HEAP8[$24 + 1 >> 0] | 0;
   $83 = HEAP8[$24 + 2 >> 0] | 0;
   $85 = HEAP8[$24 + 3 >> 0] | 0;
   switch ($28 << 24 >> 24) {
   case -16:
    {
     if (($81 + 112 & 255) >= 48) {
      $$9 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if (($81 & -16) << 24 >> 24 != -128) {
      $$9 = 2;
      break L9;
     }
     break;
    }
   default:
    if (($81 & -64) << 24 >> 24 != -128) {
     $$9 = 2;
     break L9;
    }
   }
   $91 = $83 & 255;
   if (($91 & 192 | 0) != 128) {
    $$9 = 2;
    break L9;
   }
   $94 = $85 & 255;
   if (($94 & 192 | 0) != 128) {
    $$9 = 2;
    break L9;
   }
   $107 = ($81 & 255) << 12 & 258048 | $29 << 18 & 1835008 | $91 << 6 & 4032 | $94 & 63;
   if ($107 >>> 0 > $6 >>> 0) {
    $$9 = 2;
    break L9;
   }
   HEAP32[$26 >> 2] = $107;
   HEAP32[$2 >> 2] = $24 + 4;
  } while (0);
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 4;
 }
 if ((label | 0) == 40) $$9 = $25 & 1;
 return $$9 | 0;
}

function __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$091 = 0, $$185 = 0, $$395 = 0, $$589 = 0, $$pre136 = 0, $21 = 0, $22 = 0, $33 = 0, $43 = 0, $47 = 0, $49 = 0, $62 = 0, $76 = 0, $80 = 0, $82 = 0, $84 = 0, $96 = 0, $99 = 0, label = 0;
 $$pre136 = $1;
 if (!($4 & 4)) {
  $$091 = 0;
  $$185 = $0;
 } else if (($$pre136 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == -17) if ((HEAP8[$0 + 1 >> 0] | 0) == -69) {
  $$091 = 0;
  $$185 = (HEAP8[$0 + 2 >> 0] | 0) == -65 ? $0 + 3 | 0 : $0;
 } else {
  $$091 = 0;
  $$185 = $0;
 } else {
  $$091 = 0;
  $$185 = $0;
 } else {
  $$091 = 0;
  $$185 = $0;
 }
 L6 : while (1) {
  if (!($$091 >>> 0 < $2 >>> 0 & $$185 >>> 0 < $1 >>> 0)) {
   label = 40;
   break;
  }
  $21 = HEAP8[$$185 >> 0] | 0;
  $22 = $21 & 255;
  do if ($21 << 24 >> 24 > -1) {
   if ($22 >>> 0 > $3 >>> 0) {
    label = 40;
    break L6;
   }
   $$589 = $$185 + 1 | 0;
  } else {
   if (($21 & 255) < 194) {
    label = 40;
    break L6;
   }
   if (($21 & 255) < 224) {
    if (($$pre136 - $$185 | 0) < 2) {
     label = 40;
     break L6;
    }
    $33 = HEAPU8[$$185 + 1 >> 0] | 0;
    if (($33 & 192 | 0) != 128) {
     label = 40;
     break L6;
    }
    if (($33 & 63 | $22 << 6 & 1984) >>> 0 > $3 >>> 0) {
     label = 40;
     break L6;
    }
    $$589 = $$185 + 2 | 0;
    break;
   }
   if (($21 & 255) < 240) {
    $43 = $$185;
    if (($$pre136 - $43 | 0) < 3) {
     label = 40;
     break L6;
    }
    $47 = HEAP8[$$185 + 1 >> 0] | 0;
    $49 = HEAP8[$$185 + 2 >> 0] | 0;
    switch ($21 << 24 >> 24) {
    case -32:
     {
      if (($47 & -32) << 24 >> 24 != -96) {
       label = 20;
       break L6;
      }
      break;
     }
    case -19:
     {
      if (($47 & -32) << 24 >> 24 != -128) {
       label = 22;
       break L6;
      }
      break;
     }
    default:
     if (($47 & -64) << 24 >> 24 != -128) {
      label = 24;
      break L6;
     }
    }
    $62 = $49 & 255;
    if (($62 & 192 | 0) != 128) {
     label = 40;
     break L6;
    }
    if ((($47 & 255) << 6 & 4032 | $22 << 12 & 61440 | $62 & 63) >>> 0 > $3 >>> 0) {
     label = 40;
     break L6;
    } else {
     $$589 = $$185 + 3 | 0;
     break;
    }
   }
   if (($21 & 255) >= 245) {
    label = 40;
    break L6;
   }
   $76 = $$185;
   if (($$pre136 - $76 | 0) < 4) {
    label = 40;
    break L6;
   }
   $80 = HEAP8[$$185 + 1 >> 0] | 0;
   $82 = HEAP8[$$185 + 2 >> 0] | 0;
   $84 = HEAP8[$$185 + 3 >> 0] | 0;
   switch ($21 << 24 >> 24) {
   case -16:
    {
     if (($80 + 112 & 255) >= 48) {
      label = 31;
      break L6;
     }
     break;
    }
   case -12:
    {
     if (($80 & -16) << 24 >> 24 != -128) {
      label = 33;
      break L6;
     }
     break;
    }
   default:
    if (($80 & -64) << 24 >> 24 != -128) {
     label = 35;
     break L6;
    }
   }
   $96 = $82 & 255;
   if (($96 & 192 | 0) != 128) {
    label = 40;
    break L6;
   }
   $99 = $84 & 255;
   if (($99 & 192 | 0) != 128) {
    label = 40;
    break L6;
   }
   if ((($80 & 255) << 12 & 258048 | $22 << 18 & 1835008 | $96 << 6 & 4032 | $99 & 63) >>> 0 > $3 >>> 0) {
    label = 40;
    break L6;
   } else $$589 = $$185 + 4 | 0;
  } while (0);
  $$091 = $$091 + 1 | 0;
  $$185 = $$589;
 }
 if ((label | 0) == 20) $$395 = $43 - $0 | 0; else if ((label | 0) == 22) $$395 = $43 - $0 | 0; else if ((label | 0) == 24) $$395 = $43 - $0 | 0; else if ((label | 0) == 31) $$395 = $76 - $0 | 0; else if ((label | 0) == 33) $$395 = $76 - $0 | 0; else if ((label | 0) == 35) $$395 = $76 - $0 | 0; else if ((label | 0) == 40) $$395 = $$185 - $0 | 0;
 return $$395 | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $$sroa$028$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $18 = 0, $21 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $39 = 0, $43 = 0, $55 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $84 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 24 | 0;
 $vararg_buffer = sp;
 $7 = sp + 140 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 12 | 0;
 $10 = sp + 8 | 0;
 $11 = sp + 136 | 0;
 $12 = sp + 4 | 0;
 $13 = sp + 36 | 0;
 HEAP32[$8 >> 2] = $7;
 $15 = $8 + 4 | 0;
 HEAP32[$15 >> 2] = 187;
 HEAP32[$10 >> 2] = __ZNKSt3__28ios_base6getlocEv($4) | 0;
 $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 110168) | 0;
 HEAP8[$11 >> 0] = 0;
 HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
 $21 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1, $$byval_copy, $3, $10, $21, $5, $11, $18, $8, $9, $7 + 100 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 32 >> 2] & 15]($18, 104135, 104145, $$byval_copy) | 0;
  $28 = (HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) | 0;
  if (($28 | 0) > 98) {
   $31 = _malloc($28 + 2 | 0) | 0;
   $32 = $31;
   if (!$31) {
    $$025 = 0;
    $$sroa$028$0 = $32;
   } else {
    $$025 = $31;
    $$sroa$028$0 = $32;
   }
  } else {
   $$025 = $13;
   $$sroa$028$0 = 0;
  }
  if (!(HEAP8[$11 >> 0] | 0)) $$1 = $$025; else {
   HEAP8[$$025 >> 0] = 45;
   $$1 = $$025 + 1 | 0;
  }
  $38 = $$byval_copy + 10 | 0;
  $39 = $$byval_copy;
  $$0 = HEAP32[$8 >> 2] | 0;
  $$2 = $$1;
  while (1) {
   if ($$0 >>> 0 >= (HEAP32[$9 >> 2] | 0) >>> 0) break;
   $43 = HEAP8[$$0 >> 0] | 0;
   $$0$i = $$byval_copy;
   while (1) {
    if (($$0$i | 0) == ($38 | 0)) {
     $$0$lcssa$i = $38;
     break;
    }
    if ((HEAP8[$$0$i >> 0] | 0) == $43 << 24 >> 24) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $$0$i = $$0$i + 1 | 0;
   }
   HEAP8[$$2 >> 0] = HEAP8[104135 + ($$0$lcssa$i - $39) >> 0] | 0;
   $$0 = $$0 + 1 | 0;
   $$2 = $$2 + 1 | 0;
  }
  HEAP8[$$2 >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $6;
  _sscanf($13, 104146, $vararg_buffer) | 0;
  if ($$sroa$028$0 | 0) _free($$sroa$028$0);
 }
 $55 = HEAP32[$1 >> 2] | 0;
 do if (!$55) $67 = 0; else if ((HEAP32[$55 + 12 >> 2] | 0) == (HEAP32[$55 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 36 >> 2] & 255]($55) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $67 = 0;
  break;
 } else {
  $67 = HEAP32[$1 >> 2] | 0;
  break;
 } else $67 = $55; while (0);
 $68 = ($67 | 0) == 0;
 $69 = HEAP32[$2 >> 2] | 0;
 do if (!$69) label = 27; else {
  if ((HEAP32[$69 + 12 >> 2] | 0) == (HEAP32[$69 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$69 >> 2] | 0) + 36 >> 2] & 255]($69) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 27;
   break;
  }
  if (!$68) label = 28;
 } while (0);
 if ((label | 0) == 27) if ($68) label = 28;
 if ((label | 0) == 28) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$10 >> 2] | 0) | 0;
 $84 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($84 | 0) FUNCTION_TABLE_vi[HEAP32[$15 >> 2] & 255]($84);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE4syncEv($0) {
 $0 = $0 | 0;
 var $$129$off0 = 0, $$131 = 0, $$4 = 0, $1 = 0, $10 = 0, $109 = 0, $114 = 0, $115 = 0, $120 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $33 = 0, $35 = 0, $37 = 0, $47 = 0, $5 = 0, $52 = 0, $53 = 0, $6 = 0, $68 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $84 = 0, $88 = 0, $89 = 0, $9 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 64 | 0;
 if (!(HEAP32[$2 >> 2] | 0)) {
  $$4 = 0;
  STACKTOP = sp;
  return $$4 | 0;
 }
 $5 = $0 + 68 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) {
  $8 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($8);
  ___cxa_throw($8 | 0, 1856, 154);
 }
 $9 = $0 + 92 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 do if (!($10 & 16)) {
  if ($10 & 8 | 0) {
   $47 = $0 + 80 | 0;
   $52 = HEAP32[$47 + 4 >> 2] | 0;
   $53 = $1;
   HEAP32[$53 >> 2] = HEAP32[$47 >> 2];
   HEAP32[$53 + 4 >> 2] = $52;
   do if (!(HEAP8[$0 + 98 >> 0] | 0)) {
    $68 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 255]($6) | 0;
    $71 = $0 + 36 | 0;
    $72 = HEAP32[$71 >> 2] | 0;
    $73 = (HEAP32[$0 + 40 >> 2] | 0) - $72 | 0;
    if (($68 | 0) > 0) {
     $$129$off0 = 0;
     $$131 = (Math_imul((HEAP32[$0 + 16 >> 2] | 0) - (HEAP32[$0 + 12 >> 2] | 0) | 0, $68) | 0) + $73 | 0;
     break;
    }
    $84 = HEAP32[$0 + 12 >> 2] | 0;
    if (($84 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) {
     $$129$off0 = 0;
     $$131 = $73;
    } else {
     $88 = HEAP32[$5 >> 2] | 0;
     $89 = $0 + 32 | 0;
     $98 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$88 >> 2] | 0) + 32 >> 2] & 31]($88, $1, HEAP32[$89 >> 2] | 0, $72, $84 - (HEAP32[$0 + 8 >> 2] | 0) | 0) | 0;
     $$129$off0 = 1;
     $$131 = $73 - $98 + (HEAP32[$71 >> 2] | 0) - (HEAP32[$89 >> 2] | 0) | 0;
    }
   } else {
    $$129$off0 = 0;
    $$131 = (HEAP32[$0 + 16 >> 2] | 0) - (HEAP32[$0 + 12 >> 2] | 0) | 0;
   } while (0);
   if (___fseeko(HEAP32[$2 >> 2] | 0, 0 - $$131 | 0, 1) | 0) {
    $$4 = -1;
    STACKTOP = sp;
    return $$4 | 0;
   }
   if ($$129$off0) {
    $109 = $1;
    $114 = HEAP32[$109 + 4 >> 2] | 0;
    $115 = $0 + 72 | 0;
    HEAP32[$115 >> 2] = HEAP32[$109 >> 2];
    HEAP32[$115 + 4 >> 2] = $114;
   }
   $120 = HEAP32[$0 + 32 >> 2] | 0;
   HEAP32[$0 + 40 >> 2] = $120;
   HEAP32[$0 + 36 >> 2] = $120;
   HEAP32[$0 + 8 >> 2] = 0;
   HEAP32[$0 + 12 >> 2] = 0;
   HEAP32[$0 + 16 >> 2] = 0;
   HEAP32[$9 >> 2] = 0;
  }
 } else {
  if ((HEAP32[$0 + 24 >> 2] | 0) != (HEAP32[$0 + 20 >> 2] | 0)) if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 31]($0, -1) | 0) == -1) {
   $$4 = -1;
   STACKTOP = sp;
   return $$4 | 0;
  }
  $23 = $0 + 72 | 0;
  $24 = $0 + 32 | 0;
  $25 = $0 + 52 | 0;
  L30 : while (1) {
   $26 = HEAP32[$5 >> 2] | 0;
   $27 = HEAP32[$24 >> 2] | 0;
   $33 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 31]($26, $23, $27, $27 + (HEAP32[$25 >> 2] | 0) | 0, $1) | 0;
   $35 = HEAP32[$24 >> 2] | 0;
   $37 = (HEAP32[$1 >> 2] | 0) - $35 | 0;
   if ((_fwrite($35, 1, $37, HEAP32[$2 >> 2] | 0) | 0) != ($37 | 0)) {
    $$4 = -1;
    label = 24;
    break;
   }
   switch ($33 | 0) {
   case 1:
    break;
   case 2:
    {
     $$4 = -1;
     label = 24;
     break L30;
     break;
    }
   default:
    {
     label = 10;
     break L30;
    }
   }
  }
  if ((label | 0) == 10) {
   if (!(_fflush(HEAP32[$2 >> 2] | 0) | 0)) break; else $$4 = -1;
   STACKTOP = sp;
   return $$4 | 0;
  } else if ((label | 0) == 24) {
   STACKTOP = sp;
   return $$4 | 0;
  }
 } while (0);
 $$4 = 0;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$070 = 0, $$070$lcssa = 0, $$074 = 0, $$077 = 0, $$1 = 0, $$172$ph = 0, $$175 = 0, $$2 = 0, $$2$lcssa = 0, $$273 = 0, $$276 = 0, $$4$ph = 0, $$pre = 0, $13 = 0, $14 = 0, $17 = 0, $22 = 0, $23 = 0, $27 = 0, $34 = 0, $35 = 0, $43 = 0, $44 = 0, $52 = 0, $56 = 0, $57 = 0, $63 = 0, $68 = 0, $70 = 0, $71 = 0, $8 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp;
 $$070 = $2;
 while (1) {
  if (($$070 | 0) == ($3 | 0)) {
   $$070$lcssa = $3;
   break;
  }
  if (!(HEAP8[$$070 >> 0] | 0)) {
   $$070$lcssa = $$070;
   break;
  }
  $$070 = $$070 + 1 | 0;
 }
 HEAP32[$7 >> 2] = $5;
 HEAP32[$4 >> 2] = $2;
 $13 = $6;
 $14 = $0 + 8 | 0;
 $$074 = $2;
 $$077 = $5;
 $$1 = $$070$lcssa;
 while (1) {
  if (($$077 | 0) == ($6 | 0) | ($$074 | 0) == ($3 | 0)) {
   $68 = $$074;
   label = 33;
   break;
  }
  $17 = $1;
  $22 = HEAP32[$17 + 4 >> 2] | 0;
  $23 = $8;
  HEAP32[$23 >> 2] = HEAP32[$17 >> 2];
  HEAP32[$23 + 4 >> 2] = $22;
  $27 = $$1;
  $34 = _uselocale(HEAP32[$14 >> 2] | 0) | 0;
  $35 = _mbsnrtowcs($$077, $4, $27 - $$074 | 0, $13 - $$077 >> 2, $1) | 0;
  if ($34 | 0) _uselocale($34) | 0;
  if (($35 | 0) == -1) {
   $$175 = $$074;
   $storemerge = $$077;
   label = 10;
   break;
  }
  $52 = (HEAP32[$7 >> 2] | 0) + ($35 << 2) | 0;
  HEAP32[$7 >> 2] = $52;
  if (($52 | 0) == ($6 | 0)) {
   label = 30;
   break;
  }
  $$pre = HEAP32[$4 >> 2] | 0;
  if (($$1 | 0) == ($3 | 0)) {
   $$4$ph = $3;
   $70 = $52;
   $71 = $$pre;
  } else {
   $56 = _uselocale(HEAP32[$14 >> 2] | 0) | 0;
   $57 = _mbrtowc($52, $$pre, 1, $1) | 0;
   if ($56 | 0) _uselocale($56) | 0;
   if ($57 | 0) {
    $$172$ph = 2;
    label = 29;
    break;
   }
   HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 4;
   $63 = (HEAP32[$4 >> 2] | 0) + 1 | 0;
   HEAP32[$4 >> 2] = $63;
   $$2 = $63;
   while (1) {
    if (($$2 | 0) == ($3 | 0)) {
     $$2$lcssa = $3;
     break;
    }
    if (!(HEAP8[$$2 >> 0] | 0)) {
     $$2$lcssa = $$2;
     break;
    }
    $$2 = $$2 + 1 | 0;
   }
   $$4$ph = $$2$lcssa;
   $70 = HEAP32[$7 >> 2] | 0;
   $71 = $63;
  }
  $$074 = $71;
  $$077 = $70;
  $$1 = $$4$ph;
 }
 do if ((label | 0) == 10) {
  L28 : while (1) {
   label = 0;
   HEAP32[$7 >> 2] = $storemerge;
   if (($$175 | 0) == (HEAP32[$4 >> 2] | 0)) {
    label = 19;
    break;
   }
   $43 = _uselocale(HEAP32[$14 >> 2] | 0) | 0;
   $44 = _mbrtowc($storemerge, $$175, $27 - $$175 | 0, $8) | 0;
   if ($43 | 0) _uselocale($43) | 0;
   switch ($44 | 0) {
   case -1:
    {
     label = 15;
     break L28;
     break;
    }
   case -2:
    {
     label = 16;
     break L28;
     break;
    }
   case 0:
    {
     $$276 = $$175 + 1 | 0;
     break;
    }
   default:
    $$276 = $$175 + $44 | 0;
   }
   $$175 = $$276;
   $storemerge = (HEAP32[$7 >> 2] | 0) + 4 | 0;
   label = 10;
  }
  if ((label | 0) == 15) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = 2;
   label = 29;
   break;
  } else if ((label | 0) == 16) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = 1;
   label = 29;
   break;
  } else if ((label | 0) == 19) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = ($$175 | 0) != ($3 | 0) & 1;
   label = 29;
   break;
  }
 } else if ((label | 0) == 30) {
  $68 = HEAP32[$4 >> 2] | 0;
  label = 33;
 } while (0);
 if ((label | 0) == 29) $$273 = $$172$ph; else if ((label | 0) == 33) $$273 = ($68 | 0) != ($3 | 0) & 1;
 STACKTOP = sp;
 return $$273 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$069 = 0, $$070 = 0, $$070$lcssa = 0, $$077 = 0, $$079 = 0, $$171 = 0, $$173 = 0, $$178 = 0, $$2 = 0, $$2$lcssa = 0, $$375$ph = 0, $$476 = 0, $$5$ph85 = 0, $14 = 0, $15 = 0, $18 = 0, $23 = 0, $24 = 0, $35 = 0, $36 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $48 = 0, $51 = 0, $55 = 0, $56 = 0, $64 = 0, $66 = 0, $67 = 0, $74 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp;
 $9 = sp + 8 | 0;
 $$070 = $2;
 while (1) {
  if (($$070 | 0) == ($3 | 0)) {
   $$070$lcssa = $3;
   break;
  }
  if (!(HEAP32[$$070 >> 2] | 0)) {
   $$070$lcssa = $$070;
   break;
  }
  $$070 = $$070 + 4 | 0;
 }
 HEAP32[$7 >> 2] = $5;
 HEAP32[$4 >> 2] = $2;
 $14 = $6;
 $15 = $0 + 8 | 0;
 $$077 = $2;
 $$079 = $5;
 $$171 = $$070$lcssa;
 L6 : while (1) {
  if (($$079 | 0) == ($6 | 0) | ($$077 | 0) == ($3 | 0)) {
   $74 = $$077;
   label = 35;
   break;
  }
  $18 = $1;
  $23 = HEAP32[$18 + 4 >> 2] | 0;
  $24 = $8;
  HEAP32[$24 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$24 + 4 >> 2] = $23;
  $35 = _uselocale(HEAP32[$15 >> 2] | 0) | 0;
  $36 = _wcsnrtombs($$079, $4, $$171 - $$077 >> 2, $14 - $$079 | 0, $1) | 0;
  if ($35 | 0) _uselocale($35) | 0;
  switch ($36 | 0) {
  case -1:
   {
    label = 10;
    break L6;
    break;
   }
  case 0:
   {
    $$375$ph = 1;
    label = 32;
    break L6;
    break;
   }
  default:
   {}
  }
  $51 = (HEAP32[$7 >> 2] | 0) + $36 | 0;
  HEAP32[$7 >> 2] = $51;
  if (($51 | 0) == ($6 | 0)) {
   label = 33;
   break;
  }
  if (($$171 | 0) == ($3 | 0)) {
   $$5$ph85 = $3;
   $76 = $51;
   $77 = HEAP32[$4 >> 2] | 0;
  } else {
   $55 = _uselocale(HEAP32[$15 >> 2] | 0) | 0;
   $56 = _wcrtomb($9, 0, $1) | 0;
   if ($55 | 0) _uselocale($55) | 0;
   if (($56 | 0) == -1) {
    $$173 = 2;
    label = 31;
    break;
   }
   if ($56 >>> 0 > ($14 - (HEAP32[$7 >> 2] | 0) | 0) >>> 0) {
    $$173 = 1;
    label = 31;
    break;
   } else {
    $$0 = $9;
    $$069 = $56;
   }
   while (1) {
    if (!$$069) break;
    $66 = HEAP8[$$0 >> 0] | 0;
    $67 = HEAP32[$7 >> 2] | 0;
    HEAP32[$7 >> 2] = $67 + 1;
    HEAP8[$67 >> 0] = $66;
    $$0 = $$0 + 1 | 0;
    $$069 = $$069 + -1 | 0;
   }
   $64 = (HEAP32[$4 >> 2] | 0) + 4 | 0;
   HEAP32[$4 >> 2] = $64;
   $$2 = $64;
   while (1) {
    if (($$2 | 0) == ($3 | 0)) {
     $$2$lcssa = $3;
     break;
    }
    if (!(HEAP32[$$2 >> 2] | 0)) {
     $$2$lcssa = $$2;
     break;
    }
    $$2 = $$2 + 4 | 0;
   }
   $$5$ph85 = $$2$lcssa;
   $76 = HEAP32[$7 >> 2] | 0;
   $77 = $64;
  }
  $$077 = $77;
  $$079 = $76;
  $$171 = $$5$ph85;
 }
 if ((label | 0) == 10) {
  HEAP32[$7 >> 2] = $$079;
  $$178 = $$077;
  $43 = $$079;
  while (1) {
   if (($$178 | 0) == (HEAP32[$4 >> 2] | 0)) break;
   $40 = HEAP32[$$178 >> 2] | 0;
   $42 = _uselocale(HEAP32[$15 >> 2] | 0) | 0;
   $44 = _wcrtomb($43, $40, $8) | 0;
   if ($42 | 0) _uselocale($42) | 0;
   if (($44 | 0) == -1) break;
   $48 = (HEAP32[$7 >> 2] | 0) + $44 | 0;
   HEAP32[$7 >> 2] = $48;
   $$178 = $$178 + 4 | 0;
   $43 = $48;
  }
  HEAP32[$4 >> 2] = $$178;
  $$375$ph = 2;
  label = 32;
 } else if ((label | 0) == 31) {
  $$375$ph = $$173;
  label = 32;
 } else if ((label | 0) == 33) {
  $74 = HEAP32[$4 >> 2] | 0;
  label = 35;
 }
 if ((label | 0) == 32) $$476 = $$375$ph; else if ((label | 0) == 35) $$476 = ($74 | 0) != ($3 | 0) & 1;
 STACKTOP = sp;
 return $$476 | 0;
}

function __Z18luaC_separateudataP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$0$lcssa40 = 0, $$0$ph45 = 0, $$035$ph44 = 0, $$041 = 0, $$042 = 0, $$042$us = 0, $$lcssa = 0, $$lcssa37$sink = 0, $$lcssa38 = 0, $10 = 0, $11 = 0, $16 = 0, $2 = 0, $3 = 0, $30 = 0, $36 = 0, $43 = 0, $44 = 0, $47 = 0, $5 = 0, $53 = 0, $6 = 0, $71 = 0, $77 = 0, $8 = 0, $83 = 0, $9 = 0, label = 0;
 $2 = $0 + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = HEAP32[$3 + 100 >> 2] | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) {
  $$0$lcssa = 0;
  return $$0$lcssa | 0;
 }
 $8 = ($1 | 0) == 0;
 $9 = $3 + 48 | 0;
 $$0$ph45 = 0;
 $$035$ph44 = $5;
 $83 = $6;
 L4 : while (1) {
  L6 : do if ($8) {
   $$042 = $$0$ph45;
   $43 = $83;
   while (1) {
    $44 = HEAP8[$43 + 5 >> 0] | 0;
    if (!($44 & 3)) {
     $$041 = $$042;
     $$lcssa37$sink = $43;
     break L6;
    }
    $47 = $43 + 5 | 0;
    if ($44 & 8) {
     $$041 = $$042;
     $$lcssa37$sink = $43;
     break L6;
    }
    $53 = HEAP32[$43 + 8 >> 2] | 0;
    if (!$53) {
     $$0$lcssa40 = $$042;
     $$lcssa = $47;
     $$lcssa38 = $43;
     label = 18;
     break L6;
    }
    if (HEAP8[$53 + 6 >> 0] & 4) {
     $$0$lcssa40 = $$042;
     $$lcssa = $47;
     $$lcssa38 = $43;
     label = 18;
     break L6;
    }
    if (!(__Z10luaT_gettmP5Table3TMSP7TString($53, 2, HEAP32[(HEAP32[$2 >> 2] | 0) + 168 >> 2] | 0) | 0)) {
     $$0$lcssa40 = $$042;
     $$lcssa = $47;
     $$lcssa38 = $43;
     label = 18;
     break L6;
    }
    $71 = $$042 + 24 + (HEAP32[$43 + 16 >> 2] | 0) | 0;
    HEAP8[$47 >> 0] = HEAPU8[$47 >> 0] | 0 | 8;
    HEAP32[$$035$ph44 >> 2] = HEAP32[$43 >> 2];
    $77 = HEAP32[$9 >> 2] | 0;
    if (!$77) HEAP32[$43 >> 2] = $43; else {
     HEAP32[$43 >> 2] = HEAP32[$77 >> 2];
     HEAP32[HEAP32[$9 >> 2] >> 2] = $43;
    }
    HEAP32[$9 >> 2] = $43;
    $43 = HEAP32[$$035$ph44 >> 2] | 0;
    if (!$43) {
     $$0$lcssa = $71;
     label = 23;
     break L4;
    } else $$042 = $71;
   }
  } else {
   $$042$us = $$0$ph45;
   $11 = $83;
   while (1) {
    $10 = $11 + 5 | 0;
    if (HEAP8[$10 >> 0] & 8) {
     $$041 = $$042$us;
     $$lcssa37$sink = $11;
     break L6;
    }
    $16 = HEAP32[$11 + 8 >> 2] | 0;
    if (!$16) {
     $$0$lcssa40 = $$042$us;
     $$lcssa = $10;
     $$lcssa38 = $11;
     label = 18;
     break L6;
    }
    if (HEAP8[$16 + 6 >> 0] & 4) {
     $$0$lcssa40 = $$042$us;
     $$lcssa = $10;
     $$lcssa38 = $11;
     label = 18;
     break L6;
    }
    if (!(__Z10luaT_gettmP5Table3TMSP7TString($16, 2, HEAP32[(HEAP32[$2 >> 2] | 0) + 168 >> 2] | 0) | 0)) {
     $$0$lcssa40 = $$042$us;
     $$lcssa = $10;
     $$lcssa38 = $11;
     label = 18;
     break L6;
    }
    $30 = $$042$us + 24 + (HEAP32[$11 + 16 >> 2] | 0) | 0;
    HEAP8[$10 >> 0] = HEAPU8[$10 >> 0] | 0 | 8;
    HEAP32[$$035$ph44 >> 2] = HEAP32[$11 >> 2];
    $36 = HEAP32[$9 >> 2] | 0;
    if (!$36) HEAP32[$11 >> 2] = $11; else {
     HEAP32[$11 >> 2] = HEAP32[$36 >> 2];
     HEAP32[HEAP32[$9 >> 2] >> 2] = $11;
    }
    HEAP32[$9 >> 2] = $11;
    $11 = HEAP32[$$035$ph44 >> 2] | 0;
    if (!$11) {
     $$0$lcssa = $30;
     label = 23;
     break L4;
    } else $$042$us = $30;
   }
  } while (0);
  if ((label | 0) == 18) {
   label = 0;
   HEAP8[$$lcssa >> 0] = HEAPU8[$$lcssa >> 0] | 0 | 8;
   $$041 = $$0$lcssa40;
   $$lcssa37$sink = $$lcssa38;
  }
  $83 = HEAP32[$$lcssa37$sink >> 2] | 0;
  if (!$83) {
   $$0$lcssa = $$041;
   label = 23;
   break;
  } else {
   $$0$ph45 = $$041;
   $$035$ph44 = $$lcssa37$sink;
  }
 }
 if ((label | 0) == 23) return $$0$lcssa | 0;
 return 0;
}

function __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$056 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $17 = 0, $2 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $34 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $50 = 0, $55 = 0, $6 = 0, $64 = 0, $65 = 0, $66 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $76 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $84 = 0, $87 = 0, label = 0;
 $2 = ($1 | 0) == ($0 | 0);
 HEAP8[$1 + 12 >> 0] = $2 & 1;
 if ($2) return; else $$056 = $1;
 while (1) {
  $6 = HEAP32[$$056 + 8 >> 2] | 0;
  $7 = $6 + 12 | 0;
  if (HEAP8[$7 >> 0] | 0) {
   label = 37;
   break;
  }
  $10 = $6 + 8 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if (($12 | 0) == ($6 | 0)) {
   $15 = HEAP32[$11 + 4 >> 2] | 0;
   if (!$15) {
    label = 8;
    break;
   }
   $17 = $15 + 12 | 0;
   if (HEAP8[$17 >> 0] | 0) {
    label = 8;
    break;
   }
   HEAP8[$7 >> 0] = 1;
   HEAP8[$11 + 12 >> 0] = ($11 | 0) == ($0 | 0) & 1;
   HEAP8[$17 >> 0] = 1;
  } else {
   if (!$12) {
    label = 24;
    break;
   }
   $55 = $12 + 12 | 0;
   if (HEAP8[$55 >> 0] | 0) {
    label = 24;
    break;
   }
   HEAP8[$7 >> 0] = 1;
   HEAP8[$11 + 12 >> 0] = ($11 | 0) == ($0 | 0) & 1;
   HEAP8[$55 >> 0] = 1;
  }
  if (($11 | 0) == ($0 | 0)) {
   label = 37;
   break;
  } else $$056 = $11;
 }
 if ((label | 0) == 8) {
  if ((HEAP32[$6 >> 2] | 0) == ($$056 | 0)) {
   $39 = $6;
   $41 = $11;
  } else {
   $27 = $6 + 4 | 0;
   $28 = HEAP32[$27 >> 2] | 0;
   $29 = HEAP32[$28 >> 2] | 0;
   HEAP32[$27 >> 2] = $29;
   if (!$29) $33 = $11; else {
    HEAP32[$29 + 8 >> 2] = $6;
    $33 = HEAP32[$10 >> 2] | 0;
   }
   $32 = $28 + 8 | 0;
   HEAP32[$32 >> 2] = $33;
   $34 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$34 >> 2] | 0) == ($6 | 0)) HEAP32[$34 >> 2] = $28; else HEAP32[$34 + 4 >> 2] = $28;
   HEAP32[$28 >> 2] = $6;
   HEAP32[$10 >> 2] = $28;
   $39 = $28;
   $41 = HEAP32[$32 >> 2] | 0;
  }
  HEAP8[$39 + 12 >> 0] = 1;
  HEAP8[$41 + 12 >> 0] = 0;
  $42 = HEAP32[$41 >> 2] | 0;
  $43 = $42 + 4 | 0;
  $44 = HEAP32[$43 >> 2] | 0;
  HEAP32[$41 >> 2] = $44;
  if ($44 | 0) HEAP32[$44 + 8 >> 2] = $41;
  $47 = $41 + 8 | 0;
  HEAP32[$42 + 8 >> 2] = HEAP32[$47 >> 2];
  $50 = HEAP32[$47 >> 2] | 0;
  if ((HEAP32[$50 >> 2] | 0) == ($41 | 0)) HEAP32[$50 >> 2] = $42; else HEAP32[$50 + 4 >> 2] = $42;
  HEAP32[$43 >> 2] = $41;
  HEAP32[$47 >> 2] = $42;
  return;
 } else if ((label | 0) == 24) {
  if ((HEAP32[$6 >> 2] | 0) == ($$056 | 0)) {
   $64 = HEAP32[$6 >> 2] | 0;
   $65 = $64 + 4 | 0;
   $66 = HEAP32[$65 >> 2] | 0;
   HEAP32[$6 >> 2] = $66;
   if (!$66) $70 = $11; else {
    HEAP32[$66 + 8 >> 2] = $6;
    $70 = HEAP32[$10 >> 2] | 0;
   }
   $69 = $64 + 8 | 0;
   HEAP32[$69 >> 2] = $70;
   $71 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$71 >> 2] | 0) == ($6 | 0)) HEAP32[$71 >> 2] = $64; else HEAP32[$71 + 4 >> 2] = $64;
   HEAP32[$65 >> 2] = $6;
   HEAP32[$10 >> 2] = $64;
   $76 = $64;
   $78 = HEAP32[$69 >> 2] | 0;
  } else {
   $76 = $6;
   $78 = $11;
  }
  HEAP8[$76 + 12 >> 0] = 1;
  HEAP8[$78 + 12 >> 0] = 0;
  $79 = $78 + 4 | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = HEAP32[$80 >> 2] | 0;
  HEAP32[$79 >> 2] = $81;
  if ($81 | 0) HEAP32[$81 + 8 >> 2] = $78;
  $84 = $78 + 8 | 0;
  HEAP32[$80 + 8 >> 2] = HEAP32[$84 >> 2];
  $87 = HEAP32[$84 >> 2] | 0;
  if ((HEAP32[$87 >> 2] | 0) == ($78 | 0)) HEAP32[$87 >> 2] = $80; else HEAP32[$87 + 4 >> 2] = $80;
  HEAP32[$80 >> 2] = $78;
  HEAP32[$84 >> 2] = $80;
  return;
 } else if ((label | 0) == 37) return;
}

function __ZL20log_sink_record_fileiPKcS0_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $19 = 0, $21 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 if (HEAP8[84259] | 0) {
  if (!(HEAP8[106232] | 0)) if (___cxa_guard_acquire(106232) | 0) {
   HEAP32[26995] = 0;
   HEAP32[26996] = 0;
   HEAP32[26994] = 107980;
   ___cxa_atexit(171, 107976, ___dso_handle | 0) | 0;
  }
  if (HEAP32[26996] | 0) {
   if (!(HEAP8[106240] | 0)) if (___cxa_guard_acquire(106240) | 0) {
    HEAP32[26991] = 107964;
    HEAP32[26992] = 107964;
    HEAP32[26993] = 0;
    ___cxa_atexit(172, 107964, ___dso_handle | 0) | 0;
   }
   if (HEAP32[26993] | 0) do {
    $19 = HEAP32[26992] | 0;
    $21 = $19 + 12 | 0;
    if ((HEAP8[$21 + 11 >> 0] | 0) < 0) $31 = HEAP32[$21 >> 2] | 0; else $31 = $21;
    $26 = $19 + 24 | 0;
    if ((HEAP8[$26 + 11 >> 0] | 0) < 0) $32 = HEAP32[$26 >> 2] | 0; else $32 = $26;
    __ZN12_GLOBAL__N_121log_file_writeToFilesEiPKcS1_(HEAP32[$19 + 8 >> 2] | 0, $31, $32);
    $33 = $19 + 4 | 0;
    HEAP32[(HEAP32[$19 >> 2] | 0) + 4 >> 2] = HEAP32[$33 >> 2];
    HEAP32[HEAP32[$33 >> 2] >> 2] = HEAP32[$19 >> 2];
    HEAP32[26993] = (HEAP32[26993] | 0) + -1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
    __ZdlPv($19);
   } while ((HEAP32[26993] | 0) != 0);
   __ZN12_GLOBAL__N_121log_file_writeToFilesEiPKcS1_($0, $1, $2);
   STACKTOP = sp;
   return;
  }
 };
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, $1, _strlen($1) | 0);
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, $2, _strlen($2) | 0);
 if (!(HEAP8[106240] | 0)) if (___cxa_guard_acquire(106240) | 0) {
  HEAP32[26991] = 107964;
  HEAP32[26992] = 107964;
  HEAP32[26993] = 0;
  ___cxa_atexit(172, 107964, ___dso_handle | 0) | 0;
 }
 HEAP32[$3 >> 2] = $0;
 $48 = $3 + 4 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($48, $4);
 $49 = $3 + 16 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($49, $5);
 $50 = __Znwj(36) | 0;
 HEAP32[$50 + 8 >> 2] = HEAP32[$3 >> 2];
 $53 = $50 + 12 | 0;
 HEAP32[$53 >> 2] = HEAP32[$48 >> 2];
 HEAP32[$53 + 4 >> 2] = HEAP32[$48 + 4 >> 2];
 HEAP32[$53 + 8 >> 2] = HEAP32[$48 + 8 >> 2];
 HEAP32[$48 >> 2] = 0;
 HEAP32[$48 + 4 >> 2] = 0;
 HEAP32[$48 + 8 >> 2] = 0;
 $54 = $50 + 24 | 0;
 HEAP32[$54 >> 2] = HEAP32[$49 >> 2];
 HEAP32[$54 + 4 >> 2] = HEAP32[$49 + 4 >> 2];
 HEAP32[$54 + 8 >> 2] = HEAP32[$49 + 8 >> 2];
 HEAP32[$49 >> 2] = 0;
 HEAP32[$49 + 4 >> 2] = 0;
 HEAP32[$49 + 8 >> 2] = 0;
 HEAP32[$50 + 4 >> 2] = 107964;
 $56 = HEAP32[26991] | 0;
 HEAP32[$50 >> 2] = $56;
 HEAP32[$56 + 4 >> 2] = $50;
 HEAP32[26991] = $50;
 HEAP32[26993] = (HEAP32[26993] | 0) + 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $38 = 0, $40 = 0, $41 = 0, $46 = 0, $49 = 0, $61 = 0, $7 = 0, $75 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 $$byval_copy = sp + 424 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 8 | 0;
 $10 = sp + 4 | 0;
 $11 = sp + 428 | 0;
 $12 = sp;
 HEAP32[$8 >> 2] = $7;
 $14 = $8 + 4 | 0;
 HEAP32[$14 >> 2] = 187;
 HEAP32[$10 >> 2] = __ZNKSt3__28ios_base6getlocEv($4) | 0;
 $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 110200) | 0;
 HEAP8[$11 >> 0] = 0;
 $18 = HEAP32[$2 >> 2] | 0;
 HEAP32[$12 >> 2] = $18;
 $20 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 $22 = $18;
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1, $$byval_copy, $3, $10, $20, $5, $11, $17, $8, $9, $7 + 400 | 0) | 0) {
  $24 = $6 + 8 + 3 | 0;
  if ((HEAP8[$24 >> 0] | 0) < 0) {
   HEAP32[HEAP32[$6 >> 2] >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$6 >> 2] = 0;
   HEAP8[$24 >> 0] = 0;
  }
  if (HEAP8[$11 >> 0] | 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 44 >> 2] & 31]($17, 45) | 0);
  $38 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 44 >> 2] & 31]($17, 48) | 0;
  $40 = HEAP32[$9 >> 2] | 0;
  $41 = $40 + -4 | 0;
  $$0 = HEAP32[$8 >> 2] | 0;
  while (1) {
   if ($$0 >>> 0 >= $41 >>> 0) break;
   if ((HEAP32[$$0 >> 2] | 0) != ($38 | 0)) break;
   $$0 = $$0 + 4 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_($6, $$0, $40) | 0;
 }
 $46 = HEAP32[$1 >> 2] | 0;
 do if (!$46) $78 = 1; else {
  $49 = HEAP32[$46 + 12 >> 2] | 0;
  if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 255]($46) | 0; else $$0$i$i$i$i = HEAP32[$49 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $78 = 1;
   break;
  } else {
   $78 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$18) label = 25; else {
  $61 = HEAP32[$22 + 12 >> 2] | 0;
  if (($61 | 0) == (HEAP32[$22 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 255]($22) | 0; else $$0$i$i2$i$i = HEAP32[$61 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 25;
   break;
  } else if ($78) break; else {
   label = 27;
   break;
  }
 } while (0);
 if ((label | 0) == 25) if ($78) label = 27;
 if ((label | 0) == 27) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$10 >> 2] | 0) | 0;
 $75 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($75 | 0) FUNCTION_TABLE_vi[HEAP32[$14 >> 2] & 255]($75);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZN10PlayerBase8SetValueERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $23 = 0, $26 = 0, $3 = 0, $32 = 0, $35 = 0, $4 = 0, $47 = 0, $5 = 0, $50 = 0, $56 = 0, $59 = 0, $6 = 0, $7 = 0, $73 = 0, $76 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 $6 = $1 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $9 = $1 + 4 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 do if ((($7 << 24 >> 24 < 0 ? $10 : $7 & 255) | 0) == 4) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82749, 4) | 0) {
   $23 = HEAP8[$6 >> 0] | 0;
   $26 = HEAP32[$9 >> 2] | 0;
   break;
  }
  HEAP32[$0 + 4 >> 2] = _atoi((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) | 0;
  STACKTOP = sp;
  return;
 } else {
  $23 = $7;
  $26 = $10;
 } while (0);
 do if ((($23 << 24 >> 24 < 0 ? $26 : $23 & 255) | 0) == 4) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 92438, 4) | 0) {
   $32 = HEAP8[$6 >> 0] | 0;
   $35 = HEAP32[$9 >> 2] | 0;
   break;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0 + 8 | 0, $2) | 0;
  STACKTOP = sp;
  return;
 } else {
  $32 = $23;
  $35 = $26;
 } while (0);
 do if ((($32 << 24 >> 24 < 0 ? $35 : $32 & 255) | 0) == 4) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82754, 4) | 0) {
   $47 = HEAP8[$6 >> 0] | 0;
   $50 = HEAP32[$9 >> 2] | 0;
   break;
  }
  HEAP32[$0 + 20 >> 2] = _atoi((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) | 0;
  STACKTOP = sp;
  return;
 } else {
  $47 = $32;
  $50 = $35;
 } while (0);
 do if ((($47 << 24 >> 24 < 0 ? $50 : $47 & 255) | 0) == 11) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82759, 11) | 0) {
   $56 = HEAP8[$6 >> 0] | 0;
   $59 = HEAP32[$9 >> 2] | 0;
   break;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0 + 32 | 0, $2) | 0;
  STACKTOP = sp;
  return;
 } else {
  $56 = $47;
  $59 = $50;
 } while (0);
 do if ((($56 << 24 >> 24 < 0 ? $59 : $56 & 255) | 0) == 9) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82771, 9) | 0) {
   $73 = HEAP8[$6 >> 0] | 0;
   $76 = HEAP32[$9 >> 2] | 0;
   break;
  }
  HEAP8[$0 + 28 >> 0] = (_atoi((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) | 0) != 0 & 1;
  STACKTOP = sp;
  return;
 } else {
  $73 = $56;
  $76 = $59;
 } while (0);
 if ((($73 << 24 >> 24 < 0 ? $76 : $73 & 255) | 0) == 10) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82781, 10) | 0)) {
  HEAP8[$0 + 29 >> 0] = (_atoi((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2) | 0) != 0 & 1;
  STACKTOP = sp;
  return;
 }
 HEAP32[$3 >> 2] = $1;
 __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($5, $0 + 44 | 0, $1, 112104, $3, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_((HEAP32[$5 >> 2] | 0) + 28 | 0, $2) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i8 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i14 = 0, $$pre = 0, $$pre$i4$i$i1622 = 0, $18 = 0, $21 = 0, $33 = 0, $35 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $63 = 0, $64 = 0, $76 = 0, $8 = 0, $88 = 0, $89 = 0, label = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 do if (!$5) $88 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 255]($5) | 0; else $$0$i$i$i$i = HEAP32[$8 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $88 = 1;
   break;
  } else {
   $88 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $18 = HEAP32[$2 >> 2] | 0;
 do if (!$18) label = 14; else {
  $21 = HEAP32[$18 + 12 >> 2] | 0;
  if (($21 | 0) == (HEAP32[$18 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 255]($18) | 0; else $$0$i$i2$i$i = HEAP32[$21 >> 2] | 0;
  if (($$0$i$i2$i$i | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 14;
   break;
  } else if ($88) {
   $$pre$i4$i$i1622 = $18;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($88) label = 16; else {
  $$pre$i4$i$i1622 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 6; else if ((label | 0) == 17) {
  $33 = HEAP32[$1 >> 2] | 0;
  $35 = HEAP32[$33 + 12 >> 2] | 0;
  if (($35 | 0) == (HEAP32[$33 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] & 255]($33) | 0; else $$0$i$i = HEAP32[$35 >> 2] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, $$0$i$i, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 4;
   break;
  }
  $51 = HEAP32[$1 >> 2] | 0;
  $52 = $51 + 12 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  if (($53 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 40 >> 2] & 255]($51) | 0;
   $$pre = HEAP32[$1 >> 2] | 0;
   if (!$$pre) $89 = 1; else {
    $63 = $$pre;
    label = 25;
   }
  } else {
   HEAP32[$52 >> 2] = $53 + 4;
   $63 = $51;
   label = 25;
  }
  do if ((label | 0) == 25) {
   $64 = HEAP32[$63 + 12 >> 2] | 0;
   if (($64 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) $$0$i$i$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] & 255]($63) | 0; else $$0$i$i$i$i8 = HEAP32[$64 >> 2] | 0;
   if (($$0$i$i$i$i8 | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $89 = 1;
    break;
   } else {
    $89 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i4$i$i1622) label = 37; else {
   $76 = HEAP32[$$pre$i4$i$i1622 + 12 >> 2] | 0;
   if (($76 | 0) == (HEAP32[$$pre$i4$i$i1622 + 16 >> 2] | 0)) $$0$i$i2$i$i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i1622 >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i1622) | 0; else $$0$i$i2$i$i14 = HEAP32[$76 >> 2] | 0;
   if (($$0$i$i2$i$i14 | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 37;
    break;
   } else if ($89) break L22; else break;
  } while (0);
  if ((label | 0) == 37) if (!$89) break;
  HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 } while (0);
 return;
}

function __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb1ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$sroa$0$0$$sroa$0$0$9$i = 0, $$sroa$0$i = 0, $$sroa$9$0$i = 0, $$sroa$9$1$i = 0, $$sroa$speculated$i$i = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $20 = 0, $22 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $44 = 0, $5 = 0, $51 = 0, $53 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $75 = 0, $8 = 0, $80 = 0, $84 = 0, $9 = 0, $tmpcast$i$byval_copy = 0, $tmpcast1$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $tmpcast1$i$byval_copy = sp + 48 | 0;
 $tmpcast$i$byval_copy = sp + 40 | 0;
 $$sroa$0$i = sp + 32 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $5 = sp + 24 | 0;
 $6 = sp + 16 | 0;
 $7 = $0 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $1;
 $11 = HEAP32[$9 >> 2] | 0;
 $14 = HEAP32[$9 + 4 >> 2] | 0;
 $15 = $2;
 $17 = HEAP32[$15 >> 2] | 0;
 $20 = HEAP32[$15 + 4 >> 2] | 0;
 $22 = $17 - $11 << 3;
 HEAP32[$7 >> 2] = $8 - $14 + $20 + $22;
 $28 = (HEAP32[$0 >> 2] | 0) + ($8 >>> 5 << 2) | 0;
 $29 = $8 & 31;
 $30 = $28;
 if (($14 | 0) != ($29 | 0)) {
  $80 = $3;
  HEAP32[$80 >> 2] = $11;
  HEAP32[$80 + 4 >> 2] = $14;
  $84 = $4;
  HEAP32[$84 >> 2] = $17;
  HEAP32[$84 + 4 >> 2] = $20;
  HEAP32[$5 >> 2] = $30;
  HEAP32[$5 + 4 >> 2] = $29;
  HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$3 >> 2];
  HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$tmpcast1$i$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$tmpcast1$i$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  __ZNSt3__216__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($6, $tmpcast$i$byval_copy, $tmpcast1$i$byval_copy, $5);
  STACKTOP = sp;
  return;
 }
 HEAP32[$$sroa$0$i >> 2] = $30;
 $33 = $20 - $14 + $22 | 0;
 $35 = $11;
 if (($33 | 0) > 0) {
  if (!$14) {
   $$0$i$i = $33;
   $$sroa$9$0$i = 0;
   $59 = $28;
   $60 = $11;
   $67 = $35;
  } else {
   $38 = 32 - $14 | 0;
   $$sroa$speculated$i$i = ($33 | 0) < ($38 | 0) ? $33 : $38;
   $44 = -1 >>> ($38 - $$sroa$speculated$i$i | 0) & -1 << $14;
   HEAP32[$28 >> 2] = HEAP32[$28 >> 2] & ~$44 | HEAP32[$35 >> 2] & $44;
   $51 = $$sroa$speculated$i$i + $14 | 0;
   $53 = $28 + ($51 >>> 5 << 2) | 0;
   HEAP32[$$sroa$0$i >> 2] = $53;
   $56 = $35 + 4 | 0;
   $$0$i$i = $33 - $$sroa$speculated$i$i | 0;
   $$sroa$9$0$i = $51 & 31;
   $59 = $53;
   $60 = $56;
   $67 = $56;
  }
  $57 = $$0$i$i >>> 5;
  _memmove($59 | 0, $60 | 0, $57 << 2 | 0) | 0;
  $62 = $$0$i$i - ($57 << 5) | 0;
  $63 = $59 + ($57 << 2) | 0;
  HEAP32[$$sroa$0$i >> 2] = $63;
  if (($62 | 0) > 0) {
   $69 = -1 >>> (32 - $62 | 0);
   $71 = HEAP32[$67 + ($57 << 2) >> 2] & $69;
   HEAP32[$63 >> 2] = HEAP32[$63 >> 2] & ~$69;
   $75 = HEAP32[$$sroa$0$i >> 2] | 0;
   HEAP32[$75 >> 2] = HEAP32[$75 >> 2] | $71;
   $$sroa$0$0$$sroa$0$0$9$i = $75;
   $$sroa$9$1$i = $62;
  } else {
   $$sroa$0$0$$sroa$0$0$9$i = $63;
   $$sroa$9$1$i = $$sroa$9$0$i;
  }
 } else {
  $$sroa$0$0$$sroa$0$0$9$i = $30;
  $$sroa$9$1$i = $14;
 }
 HEAP32[$6 >> 2] = $$sroa$0$0$$sroa$0$0$9$i;
 HEAP32[$6 + 4 >> 2] = $$sroa$9$1$i;
 STACKTOP = sp;
 return;
}

function _match_bracket($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$069 = 0, $$077 = 0, $$1$ph = 0, $$170 = 0, $$271 = 0, $$473 = 0, $$675 = 0, $$776 = 0, $$8 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $33 = 0, $35 = 0, $4 = 0, $41 = 0, $45 = 0, $5 = 0, $52 = 0, $53 = 0, $57 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp;
 $4 = $0 + 1 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 switch ($5 << 24 >> 24) {
 case 33:
 case 94:
  {
   $6 = $0 + 2 | 0;
   $$069 = $6;
   $$077 = 1;
   $7 = HEAP8[$6 >> 0] | 0;
   break;
  }
 default:
  {
   $$069 = $4;
   $$077 = 0;
   $7 = $5;
  }
 }
 L4 : do switch ($7 << 24 >> 24) {
 case 93:
  {
   if (($1 | 0) == 93) {
    $$8 = $$077 ^ 1;
    break L4;
   } else {
    $$170 = $$069 + 1 | 0;
    label = 10;
    break L4;
   }
   break;
  }
 case 45:
  {
   if (($1 | 0) == 45) {
    $$8 = $$077 ^ 1;
    break L4;
   } else {
    $$170 = $$069 + 1 | 0;
    label = 10;
    break L4;
   }
   break;
  }
 default:
  {
   $$170 = $$069;
   label = 10;
  }
 } while (0);
 L13 : do if ((label | 0) == 10) {
  HEAP32[$2 >> 2] = HEAP8[$$170 + -1 >> 0];
  $17 = $$077 ^ 1;
  $$271 = $$170;
  L15 : while (1) {
   $18 = HEAP8[$$271 >> 0] | 0;
   L17 : do switch ($18 << 24 >> 24) {
   case 93:
    {
     $$8 = $$077;
     break L13;
     break;
    }
   case 45:
    {
     $19 = $$271 + 1 | 0;
     if ((HEAP8[$19 >> 0] | 0) == 93) label = 27; else {
      $22 = _mbtowc($3, $19, 4) | 0;
      if (($22 | 0) < 0) {
       $$1$ph = 0;
       break L15;
      }
      $24 = HEAP32[$2 >> 2] | 0;
      $25 = HEAP32[$3 >> 2] | 0;
      if (($25 | 0) >= ($24 | 0)) if (($1 - $24 | 0) >>> 0 <= ($25 - $24 | 0) >>> 0) {
       $$1$ph = $17;
       break L15;
      }
      $$776 = $$271 + ($22 + -1) | 0;
     }
     break;
    }
   case 91:
    {
     $33 = HEAP8[$$271 + 1 >> 0] | 0;
     switch ($33 << 24 >> 24) {
     case 61:
     case 46:
     case 58:
      break;
     default:
      {
       label = 27;
       break L17;
      }
     }
     $$473 = $$271 + 3 | 0;
     while (1) {
      $35 = $$473 + -1 | 0;
      if ((HEAP8[$35 >> 0] | 0) == $33 << 24 >> 24) if ((HEAP8[$$473 >> 0] | 0) == 93) break;
      $$473 = $$473 + 1 | 0;
     }
     $41 = $$271 + 2 | 0;
     if ($33 << 24 >> 24 == 58) {
      $45 = $35 - $41 | 0;
      if (($45 | 0) < 16) {
       _memcpy($3 | 0, $41 | 0, $45 | 0) | 0;
       HEAP8[$3 + $45 >> 0] = 0;
       if (!(_iswctype($1, _wctype($3) | 0) | 0)) $$776 = $$473; else {
        $$8 = $17;
        break L13;
       }
      } else $$776 = $$473;
     } else $$776 = $$473;
     break;
    }
   default:
    if ($18 << 24 >> 24 > -1) label = 27; else {
     $53 = _mbtowc($2, $$271, 4) | 0;
     if (($53 | 0) < 0) {
      $$8 = 0;
      break L13;
     }
     $$675 = $$271 + ($53 + -1) | 0;
     $57 = HEAP32[$2 >> 2] | 0;
     label = 30;
    }
   } while (0);
   if ((label | 0) == 27) {
    label = 0;
    $52 = $18 & 255;
    HEAP32[$2 >> 2] = $52;
    $$675 = $$271;
    $57 = $52;
    label = 30;
   }
   if ((label | 0) == 30) {
    label = 0;
    if (($57 | 0) == ($1 | 0)) {
     $$8 = $17;
     break L13;
    } else $$776 = $$675;
   }
   $$271 = $$776 + 1 | 0;
  }
  $$8 = $$1$ph;
 } while (0);
 STACKTOP = sp;
 return $$8 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 $$byval_copy = sp + 300 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $5 = sp;
 $6 = sp + 304 | 0;
 $7 = sp + 296 | 0;
 $8 = sp + 68 | 0;
 $9 = sp + 64 | 0;
 $10 = sp + 60 | 0;
 $11 = sp + 56 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 103080, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) {
   $$pre = HEAP32[$7 >> 2] | 0;
   $$2 = $$1;
   $$sroa$046$0 = $$pre;
   $34 = $$pre;
  } else {
   $$2 = $$1;
   $$sroa$046$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$046$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$039$0 = 0;
  $41 = $6;
 } else {
  $38 = _malloc($$2 << 3) | 0;
  if (!$38) {
   $$037 = $38;
   $$sroa$039$0 = $38;
   $41 = HEAP32[$7 >> 2] | 0;
  } else {
   $$037 = $38;
   $$sroa$039$0 = $38;
   $41 = $34;
  }
 }
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($41, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $44 = HEAP32[$9 >> 2] | 0;
 $45 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $46 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $44, $45, $2, $3) | 0;
 HEAP32[$1 >> 2] = $46;
 if ($$sroa$039$0 | 0) _free($$sroa$039$0);
 _free($$sroa$046$0);
 STACKTOP = sp;
 return $46 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 $$byval_copy = sp + 300 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $5 = sp;
 $6 = sp + 304 | 0;
 $7 = sp + 296 | 0;
 $8 = sp + 68 | 0;
 $9 = sp + 64 | 0;
 $10 = sp + 60 | 0;
 $11 = sp + 56 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 114224, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) {
   $$pre = HEAP32[$7 >> 2] | 0;
   $$2 = $$1;
   $$sroa$046$0 = $$pre;
   $34 = $$pre;
  } else {
   $$2 = $$1;
   $$sroa$046$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$046$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$039$0 = 0;
  $41 = $6;
 } else {
  $38 = _malloc($$2 << 3) | 0;
  if (!$38) {
   $$037 = $38;
   $$sroa$039$0 = $38;
   $41 = HEAP32[$7 >> 2] | 0;
  } else {
   $$037 = $38;
   $$sroa$039$0 = $38;
   $41 = $34;
  }
 }
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($41, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $44 = HEAP32[$9 >> 2] | 0;
 $45 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $46 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $44, $45, $2, $3) | 0;
 HEAP32[$1 >> 2] = $46;
 if ($$sroa$039$0 | 0) _free($$sroa$039$0);
 _free($$sroa$046$0);
 STACKTOP = sp;
 return $46 | 0;
}

function __ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $15 = 0, $18 = 0, $25 = 0, $30 = 0, $34 = 0, $43 = 0, $48 = 0, $50 = 0, $56 = 0, $59 = 0, $60 = 0, $71 = 0, $74 = 0, $83 = 0, $90 = 0, $95 = 0, $97 = 0;
 L1 : do if ($0 << 24 >> 24 == $5 << 24 >> 24) if (!(HEAP8[$1 >> 0] | 0)) $$2 = -1; else {
  HEAP8[$1 >> 0] = 0;
  $15 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = 46;
  $18 = HEAP8[$7 + 11 >> 0] | 0;
  if (!(($18 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $18 & 255) | 0)) $$2 = 0; else {
   $25 = HEAP32[$9 >> 2] | 0;
   if (($25 - $8 | 0) < 160) {
    $30 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $25 + 4;
    HEAP32[$25 >> 2] = $30;
    $$2 = 0;
   } else $$2 = 0;
  }
 } else {
  if ($0 << 24 >> 24 == $6 << 24 >> 24) {
   $34 = HEAP8[$7 + 11 >> 0] | 0;
   if (($34 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $34 & 255) | 0) {
    if (!(HEAP8[$1 >> 0] | 0)) {
     $$2 = -1;
     break;
    }
    $43 = HEAP32[$9 >> 2] | 0;
    if (($43 - $8 | 0) >= 160) {
     $$2 = 0;
     break;
    }
    $48 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $43 + 4;
    HEAP32[$43 >> 2] = $48;
    HEAP32[$10 >> 2] = 0;
    $$2 = 0;
    break;
   }
  }
  $50 = $11 + 32 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $11 + $$0$i$idx | 0;
   if (($$0$i$idx | 0) == 32) {
    $$0$lcssa$i = $50;
    break;
   }
   if ((HEAP8[$$0$i$ptr >> 0] | 0) == $0 << 24 >> 24) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $56 = $$0$lcssa$i - $11 | 0;
  if (($56 | 0) > 31) $$2 = -1; else {
   $59 = HEAP8[102831 + $56 >> 0] | 0;
   switch ($56 | 0) {
   case 24:
   case 25:
    {
     $60 = HEAP32[$4 >> 2] | 0;
     if (($60 | 0) != ($3 | 0)) if ((HEAPU8[$60 + -1 >> 0] & 95 | 0) != (HEAPU8[$2 >> 0] & 127 | 0)) {
      $$2 = -1;
      break L1;
     }
     HEAP32[$4 >> 2] = $60 + 1;
     HEAP8[$60 >> 0] = $59;
     $$2 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$2 >> 0] = 80;
     $71 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $71 + 1;
     HEAP8[$71 >> 0] = $59;
     $$2 = 0;
     break L1;
     break;
    }
   default:
    {
     $74 = $59 & 95;
     if (($74 | 0) == (HEAP8[$2 >> 0] | 0)) {
      HEAP8[$2 >> 0] = $74 | 128;
      if (HEAP8[$1 >> 0] | 0) {
       HEAP8[$1 >> 0] = 0;
       $83 = HEAP8[$7 + 11 >> 0] | 0;
       if (($83 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $83 & 255) | 0) {
        $90 = HEAP32[$9 >> 2] | 0;
        if (($90 - $8 | 0) < 160) {
         $95 = HEAP32[$10 >> 2] | 0;
         HEAP32[$9 >> 2] = $90 + 4;
         HEAP32[$90 >> 2] = $95;
        }
       }
      }
     }
     $97 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $97 + 1;
     HEAP8[$97 >> 0] = $59;
     if (($56 | 0) > 21) {
      $$2 = 0;
      break L1;
     }
     HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
     $$2 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return $$2 | 0;
}

function __ZN8LuaUtils14PushLogEntriesEP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $12 = 0, $13 = 0, $21 = 0, $22 = 0, $3 = 0, $30 = 0, $31 = 0, $39 = 0, $4 = 0, $40 = 0, $48 = 0, $49 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 84070, 5);
 $3 = HEAP8[$1 + 11 >> 0] | 0;
 $4 = $3 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $4 ? HEAP32[$1 >> 2] | 0 : $1, $4 ? HEAP32[$1 + 4 >> 2] | 0 : $3 & 255);
 __Z14lua_pushnumberP9lua_Statef($0, 20.0);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 84076, 4);
 $12 = HEAP8[$1 + 11 >> 0] | 0;
 $13 = $12 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $13 ? HEAP32[$1 >> 2] | 0 : $1, $13 ? HEAP32[$1 + 4 >> 2] | 0 : $12 & 255);
 __Z14lua_pushnumberP9lua_Statef($0, 30.0);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 84081, 6);
 $21 = HEAP8[$1 + 11 >> 0] | 0;
 $22 = $21 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $22 ? HEAP32[$1 >> 2] | 0 : $1, $22 ? HEAP32[$1 + 4 >> 2] | 0 : $21 & 255);
 __Z14lua_pushnumberP9lua_Statef($0, 35.0);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 84088, 7);
 $30 = HEAP8[$1 + 11 >> 0] | 0;
 $31 = $30 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $31 ? HEAP32[$1 >> 2] | 0 : $1, $31 ? HEAP32[$1 + 4 >> 2] | 0 : $30 & 255);
 __Z14lua_pushnumberP9lua_Statef($0, 40.0);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 84096, 5);
 $39 = HEAP8[$1 + 11 >> 0] | 0;
 $40 = $39 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $40 ? HEAP32[$1 >> 2] | 0 : $1, $40 ? HEAP32[$1 + 4 >> 2] | 0 : $39 & 255);
 __Z14lua_pushnumberP9lua_Statef($0, 50.0);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 84102, 5);
 $48 = HEAP8[$1 + 11 >> 0] | 0;
 $49 = $48 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, $49 ? HEAP32[$1 >> 2] | 0 : $1, $49 ? HEAP32[$1 + 4 >> 2] | 0 : $48 & 255);
 __Z14lua_pushnumberP9lua_Statef($0, 60.0);
 __Z10lua_rawsetP9lua_Statei($0, -3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return 1;
}

function __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE16find_or_allocateERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02431$i$i55 = 0, $$02530$i$i56 = 0, $$02629$i$i57 = 0, $$03659 = 0, $$039$lcssa68 = 0, $$03958 = 0, $$137 = 0, $$140 = 0, $$4 = 0, $10 = 0, $12 = 0, $13 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $4 = 0, $53 = 0, $55 = 0, $57 = 0, $7 = 0, $9 = 0, label = 0, $$03958$looptemp = 0;
 $2 = __ZNK6spring11synced_hashINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEclERKS7_($0, $1) | 0;
 $3 = $0 + 20 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 do if (($4 | 0) < 0) $$039$lcssa68 = 0; else {
  $7 = HEAP32[$0 + 24 >> 2] | 0;
  $9 = HEAP32[$0 + 4 >> 2] | 0;
  $10 = $0 + 8 | 0;
  $12 = HEAP8[$1 + 11 >> 0] | 0;
  $13 = $12 << 24 >> 24 < 0;
  $17 = $13 ? HEAP32[$1 + 4 >> 2] | 0 : $12 & 255;
  $19 = $13 ? HEAP32[$1 >> 2] | 0 : $1;
  $20 = ($17 | 0) == 0;
  $$03659 = -1;
  $$03958 = 0;
  L3 : while (1) {
   $22 = $7 & $$03958 + $2;
   L5 : do switch (HEAP8[$9 + $22 >> 0] | 0) {
   case 0:
    {
     $$4 = $22;
     label = 18;
     break L3;
     break;
    }
   case 2:
    {
     $25 = HEAP32[$10 >> 2] | 0;
     $26 = $25 + ($22 * 24 | 0) | 0;
     $28 = HEAP8[$26 + 11 >> 0] | 0;
     $29 = $28 << 24 >> 24 < 0;
     $32 = $28 & 255;
     if ((($29 ? HEAP32[$25 + ($22 * 24 | 0) + 4 >> 2] | 0 : $32) | 0) == ($17 | 0)) {
      $35 = HEAP32[$26 >> 2] | 0;
      $36 = $29 ? $35 : $26;
      if ($29) {
       if ($20) {
        $$4 = $22;
        label = 18;
        break L3;
       }
       if (!(_memcmp($36, $19, $17) | 0)) {
        $$4 = $22;
        label = 18;
        break L3;
       } else {
        $$137 = $$03659;
        break L5;
       }
      }
      if ($20) {
       $$4 = $22;
       label = 18;
       break L3;
      }
      if (($35 & 255) << 24 >> 24 == (HEAP8[$19 >> 0] | 0)) {
       $$02431$i$i55 = $32;
       $$02530$i$i56 = $19;
       $$02629$i$i57 = $26;
       while (1) {
        $$02431$i$i55 = $$02431$i$i55 + -1 | 0;
        $$02629$i$i57 = $$02629$i$i57 + 1 | 0;
        if (!$$02431$i$i55) {
         $$4 = $22;
         label = 18;
         break L3;
        }
        $$02530$i$i56 = $$02530$i$i56 + 1 | 0;
        if ((HEAP8[$$02629$i$i57 >> 0] | 0) != (HEAP8[$$02530$i$i56 >> 0] | 0)) {
         $$137 = $$03659;
         break;
        }
       }
      } else $$137 = $$03659;
     } else $$137 = $$03659;
     break;
    }
   default:
    $$137 = ($$03659 | 0) == -1 ? $22 : $$03659;
   } while (0);
   $$03958$looptemp = $$03958;
   $$03958 = $$03958 + 1 | 0;
   if (($$03958$looptemp | 0) >= ($4 | 0)) {
    label = 14;
    break;
   } else $$03659 = $$137;
  }
  if ((label | 0) == 14) {
   if (($$137 | 0) == -1) {
    $$039$lcssa68 = $$03958;
    break;
   } else $$4 = $$137;
   return $$4 | 0;
  } else if ((label | 0) == 18) return $$4 | 0;
 } while (0);
 $53 = HEAP32[$0 + 24 >> 2] | 0;
 $55 = HEAP32[$0 + 4 >> 2] | 0;
 $$140 = $$039$lcssa68;
 while (1) {
  $57 = $$140 + $2 & $53;
  if ((HEAP8[$55 + $57 >> 0] | 0) == 2) $$140 = $$140 + 1 | 0; else break;
 }
 HEAP32[$3 >> 2] = $$140;
 $$4 = $57;
 return $$4 | 0;
}

function __ZN6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE16find_or_allocateERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02431$i$i55 = 0, $$02530$i$i56 = 0, $$02629$i$i57 = 0, $$03659 = 0, $$039$lcssa68 = 0, $$03958 = 0, $$137 = 0, $$140 = 0, $$4 = 0, $10 = 0, $12 = 0, $13 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $4 = 0, $53 = 0, $55 = 0, $57 = 0, $7 = 0, $9 = 0, label = 0, $$03958$looptemp = 0;
 $2 = __ZNK6spring11synced_hashINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEclERKS7_($0, $1) | 0;
 $3 = $0 + 20 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 do if (($4 | 0) < 0) $$039$lcssa68 = 0; else {
  $7 = HEAP32[$0 + 24 >> 2] | 0;
  $9 = HEAP32[$0 + 4 >> 2] | 0;
  $10 = $0 + 8 | 0;
  $12 = HEAP8[$1 + 11 >> 0] | 0;
  $13 = $12 << 24 >> 24 < 0;
  $17 = $13 ? HEAP32[$1 + 4 >> 2] | 0 : $12 & 255;
  $19 = $13 ? HEAP32[$1 >> 2] | 0 : $1;
  $20 = ($17 | 0) == 0;
  $$03659 = -1;
  $$03958 = 0;
  L3 : while (1) {
   $22 = $7 & $$03958 + $2;
   L5 : do switch (HEAP8[$9 + $22 >> 0] | 0) {
   case 0:
    {
     $$4 = $22;
     label = 18;
     break L3;
     break;
    }
   case 2:
    {
     $25 = HEAP32[$10 >> 2] | 0;
     $26 = $25 + ($22 * 12 | 0) | 0;
     $28 = HEAP8[$26 + 11 >> 0] | 0;
     $29 = $28 << 24 >> 24 < 0;
     $32 = $28 & 255;
     if ((($29 ? HEAP32[$25 + ($22 * 12 | 0) + 4 >> 2] | 0 : $32) | 0) == ($17 | 0)) {
      $35 = HEAP32[$26 >> 2] | 0;
      $36 = $29 ? $35 : $26;
      if ($29) {
       if ($20) {
        $$4 = $22;
        label = 18;
        break L3;
       }
       if (!(_memcmp($36, $19, $17) | 0)) {
        $$4 = $22;
        label = 18;
        break L3;
       } else {
        $$137 = $$03659;
        break L5;
       }
      }
      if ($20) {
       $$4 = $22;
       label = 18;
       break L3;
      }
      if (($35 & 255) << 24 >> 24 == (HEAP8[$19 >> 0] | 0)) {
       $$02431$i$i55 = $32;
       $$02530$i$i56 = $19;
       $$02629$i$i57 = $26;
       while (1) {
        $$02431$i$i55 = $$02431$i$i55 + -1 | 0;
        $$02629$i$i57 = $$02629$i$i57 + 1 | 0;
        if (!$$02431$i$i55) {
         $$4 = $22;
         label = 18;
         break L3;
        }
        $$02530$i$i56 = $$02530$i$i56 + 1 | 0;
        if ((HEAP8[$$02629$i$i57 >> 0] | 0) != (HEAP8[$$02530$i$i56 >> 0] | 0)) {
         $$137 = $$03659;
         break;
        }
       }
      } else $$137 = $$03659;
     } else $$137 = $$03659;
     break;
    }
   default:
    $$137 = ($$03659 | 0) == -1 ? $22 : $$03659;
   } while (0);
   $$03958$looptemp = $$03958;
   $$03958 = $$03958 + 1 | 0;
   if (($$03958$looptemp | 0) >= ($4 | 0)) {
    label = 14;
    break;
   } else $$03659 = $$137;
  }
  if ((label | 0) == 14) {
   if (($$137 | 0) == -1) {
    $$039$lcssa68 = $$03958;
    break;
   } else $$4 = $$137;
   return $$4 | 0;
  } else if ((label | 0) == 18) return $$4 | 0;
 } while (0);
 $53 = HEAP32[$0 + 24 >> 2] | 0;
 $55 = HEAP32[$0 + 4 >> 2] | 0;
 $$140 = $$039$lcssa68;
 while (1) {
  $57 = $$140 + $2 & $53;
  if ((HEAP8[$55 + $57 >> 0] | 0) == 2) $$140 = $$140 + 1 | 0; else break;
 }
 HEAP32[$3 >> 2] = $$140;
 $$4 = $57;
 return $$4 | 0;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$pre = 0, $105 = 0, $110 = 0, $117 = 0, $12 = 0, $122 = 0, $13 = 0, $137 = 0, $142 = 0, $15 = 0, $20 = 0, $26 = 0, $31 = 0, $41 = 0, $46 = 0, $49 = 0, $54 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $65 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $89 = 0, $9 = 0, $94 = 0;
 $6 = $1 + 44 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $1 + 24 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $12 = $9;
 if ($7 >>> 0 < $9 >>> 0) {
  HEAP32[$6 >> 2] = $9;
  $57 = $12;
 } else $57 = $7;
 $13 = $5 & 24;
 if (!$13) {
  $15 = $0;
  HEAP32[$15 >> 2] = 0;
  HEAP32[$15 + 4 >> 2] = 0;
  $20 = $0 + 8 | 0;
  HEAP32[$20 >> 2] = -1;
  HEAP32[$20 + 4 >> 2] = -1;
  return;
 }
 if (($4 | 0) == 1 & ($13 | 0) == 24) {
  $26 = $0;
  HEAP32[$26 >> 2] = 0;
  HEAP32[$26 + 4 >> 2] = 0;
  $31 = $0 + 8 | 0;
  HEAP32[$31 >> 2] = -1;
  HEAP32[$31 + 4 >> 2] = -1;
  return;
 }
 L12 : do switch ($4 | 0) {
 case 0:
  {
   $69 = 0;
   $70 = 0;
   break;
  }
 case 1:
  {
   if (!($5 & 8)) {
    $46 = $12 - (HEAP32[$1 + 20 >> 2] | 0) | 0;
    $69 = $46;
    $70 = (($46 | 0) < 0) << 31 >> 31;
    break L12;
   } else {
    $41 = (HEAP32[$1 + 12 >> 2] | 0) - (HEAP32[$1 + 8 >> 2] | 0) | 0;
    $69 = $41;
    $70 = (($41 | 0) < 0) << 31 >> 31;
    break L12;
   }
   break;
  }
 case 2:
  {
   $49 = $1 + 32 | 0;
   if ((HEAP8[$49 + 11 >> 0] | 0) < 0) $54 = HEAP32[$49 >> 2] | 0; else $54 = $49;
   $56 = $57 - $54 | 0;
   $69 = $56;
   $70 = (($56 | 0) < 0) << 31 >> 31;
   break;
  }
 default:
  {
   $60 = $0;
   HEAP32[$60 >> 2] = 0;
   HEAP32[$60 + 4 >> 2] = 0;
   $65 = $0 + 8 | 0;
   HEAP32[$65 >> 2] = -1;
   HEAP32[$65 + 4 >> 2] = -1;
   return;
  }
 } while (0);
 $71 = _i64Add($69 | 0, $70 | 0, $2 | 0, $3 | 0) | 0;
 $72 = tempRet0;
 if (($72 | 0) >= 0) {
  $74 = $1 + 32 | 0;
  if ((HEAP8[$74 + 11 >> 0] | 0) < 0) $79 = HEAP32[$74 >> 2] | 0; else $79 = $74;
  $81 = $57 - $79 | 0;
  $83 = (($81 | 0) < 0) << 31 >> 31;
  if (!(($83 | 0) < ($72 | 0) | ($83 | 0) == ($72 | 0) & $81 >>> 0 < $71 >>> 0)) {
   $$pre = $5 & 8;
   if (!(($71 | 0) == 0 & ($72 | 0) == 0)) {
    if ($$pre | 0) if (!(HEAP32[$1 + 12 >> 2] | 0)) {
     $105 = $0;
     HEAP32[$105 >> 2] = 0;
     HEAP32[$105 + 4 >> 2] = 0;
     $110 = $0 + 8 | 0;
     HEAP32[$110 >> 2] = -1;
     HEAP32[$110 + 4 >> 2] = -1;
     return;
    }
    if (($5 & 16 | 0) != 0 & ($9 | 0) == 0) {
     $117 = $0;
     HEAP32[$117 >> 2] = 0;
     HEAP32[$117 + 4 >> 2] = 0;
     $122 = $0 + 8 | 0;
     HEAP32[$122 >> 2] = -1;
     HEAP32[$122 + 4 >> 2] = -1;
     return;
    }
   }
   if ($$pre | 0) {
    HEAP32[$1 + 12 >> 2] = (HEAP32[$1 + 8 >> 2] | 0) + $71;
    HEAP32[$1 + 16 >> 2] = $57;
   }
   if ($5 & 16 | 0) HEAP32[$8 >> 2] = (HEAP32[$1 + 20 >> 2] | 0) + $71;
   $137 = $0;
   HEAP32[$137 >> 2] = 0;
   HEAP32[$137 + 4 >> 2] = 0;
   $142 = $0 + 8 | 0;
   HEAP32[$142 >> 2] = $71;
   HEAP32[$142 + 4 >> 2] = $72;
   return;
  }
 }
 $89 = $0;
 HEAP32[$89 >> 2] = 0;
 HEAP32[$89 + 4 >> 2] = 0;
 $94 = $0 + 8 | 0;
 HEAP32[$94 >> 2] = -1;
 HEAP32[$94 + 4 >> 2] = -1;
 return;
}

function __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiN6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE16find_or_allocateERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02431$i$i55 = 0, $$02530$i$i56 = 0, $$02629$i$i57 = 0, $$03659 = 0, $$039$lcssa68 = 0, $$03958 = 0, $$137 = 0, $$140 = 0, $$4 = 0, $10 = 0, $12 = 0, $13 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $4 = 0, $53 = 0, $55 = 0, $57 = 0, $7 = 0, $9 = 0, label = 0, $$03958$looptemp = 0;
 $2 = __ZNK6spring11synced_hashINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEclERKS7_($0, $1) | 0;
 $3 = $0 + 20 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 do if (($4 | 0) < 0) $$039$lcssa68 = 0; else {
  $7 = HEAP32[$0 + 24 >> 2] | 0;
  $9 = HEAP32[$0 + 4 >> 2] | 0;
  $10 = $0 + 8 | 0;
  $12 = HEAP8[$1 + 11 >> 0] | 0;
  $13 = $12 << 24 >> 24 < 0;
  $17 = $13 ? HEAP32[$1 + 4 >> 2] | 0 : $12 & 255;
  $19 = $13 ? HEAP32[$1 >> 2] | 0 : $1;
  $20 = ($17 | 0) == 0;
  $$03659 = -1;
  $$03958 = 0;
  L3 : while (1) {
   $22 = $7 & $$03958 + $2;
   L5 : do switch (HEAP8[$9 + $22 >> 0] | 0) {
   case 0:
    {
     $$4 = $22;
     label = 18;
     break L3;
     break;
    }
   case 2:
    {
     $25 = HEAP32[$10 >> 2] | 0;
     $26 = $25 + ($22 << 4) | 0;
     $28 = HEAP8[$26 + 11 >> 0] | 0;
     $29 = $28 << 24 >> 24 < 0;
     $32 = $28 & 255;
     if ((($29 ? HEAP32[$25 + ($22 << 4) + 4 >> 2] | 0 : $32) | 0) == ($17 | 0)) {
      $35 = HEAP32[$26 >> 2] | 0;
      $36 = $29 ? $35 : $26;
      if ($29) {
       if ($20) {
        $$4 = $22;
        label = 18;
        break L3;
       }
       if (!(_memcmp($36, $19, $17) | 0)) {
        $$4 = $22;
        label = 18;
        break L3;
       } else {
        $$137 = $$03659;
        break L5;
       }
      }
      if ($20) {
       $$4 = $22;
       label = 18;
       break L3;
      }
      if (($35 & 255) << 24 >> 24 == (HEAP8[$19 >> 0] | 0)) {
       $$02431$i$i55 = $32;
       $$02530$i$i56 = $19;
       $$02629$i$i57 = $26;
       while (1) {
        $$02431$i$i55 = $$02431$i$i55 + -1 | 0;
        $$02629$i$i57 = $$02629$i$i57 + 1 | 0;
        if (!$$02431$i$i55) {
         $$4 = $22;
         label = 18;
         break L3;
        }
        $$02530$i$i56 = $$02530$i$i56 + 1 | 0;
        if ((HEAP8[$$02629$i$i57 >> 0] | 0) != (HEAP8[$$02530$i$i56 >> 0] | 0)) {
         $$137 = $$03659;
         break;
        }
       }
      } else $$137 = $$03659;
     } else $$137 = $$03659;
     break;
    }
   default:
    $$137 = ($$03659 | 0) == -1 ? $22 : $$03659;
   } while (0);
   $$03958$looptemp = $$03958;
   $$03958 = $$03958 + 1 | 0;
   if (($$03958$looptemp | 0) >= ($4 | 0)) {
    label = 14;
    break;
   } else $$03659 = $$137;
  }
  if ((label | 0) == 14) {
   if (($$137 | 0) == -1) {
    $$039$lcssa68 = $$03958;
    break;
   } else $$4 = $$137;
   return $$4 | 0;
  } else if ((label | 0) == 18) return $$4 | 0;
 } while (0);
 $53 = HEAP32[$0 + 24 >> 2] | 0;
 $55 = HEAP32[$0 + 4 >> 2] | 0;
 $$140 = $$039$lcssa68;
 while (1) {
  $57 = $$140 + $2 & $53;
  if ((HEAP8[$55 + $57 >> 0] | 0) == 2) $$140 = $$140 + 1 | 0; else break;
 }
 HEAP32[$3 >> 2] = $$140;
 $$4 = $57;
 return $$4 | 0;
}

function __Z13luaV_lessthanP9lua_StatePK10lua_TValueS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$03858$i = 0, $$04157$i = 0, $$04456$i = 0, $$04755$i = 0, $$251$i = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $23 = 0, $25 = 0, $28 = 0, $3 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $5 = 0, $51 = 0, $56 = 0, $63 = 0, $68 = 0, $70 = 0, $71 = 0, $72 = 0, $77 = 0, $79 = 0;
 $3 = $1 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $2 + 4 | 0;
 if (($4 | 0) != (HEAP32[$5 >> 2] | 0)) {
  $$0 = __Z15luaG_ordererrorP9lua_StatePK10lua_TValueS3_($0, $1, $2) | 0;
  return $$0 | 0;
 }
 switch ($4 | 0) {
 case 3:
  {
   $$0 = +HEAPF32[$1 >> 2] < +HEAPF32[$2 >> 2] & 1;
   return $$0 | 0;
  }
 case 4:
  {
   $13 = HEAP32[$1 >> 2] | 0;
   $14 = HEAP32[$2 >> 2] | 0;
   $15 = $13 + 16 | 0;
   $16 = $14 + 16 | 0;
   $17 = _strcoll($15, $16) | 0;
   L25 : do if (!$17) {
    $$03858$i = HEAP32[$14 + 12 >> 2] | 0;
    $$04157$i = $16;
    $$04456$i = HEAP32[$13 + 12 >> 2] | 0;
    $$04755$i = $15;
    while (1) {
     $23 = _strlen($$04755$i) | 0;
     $25 = ($23 | 0) == ($$04456$i | 0);
     if (($23 | 0) == ($$03858$i | 0)) break;
     if ($25) {
      $$251$i = -1;
      break L25;
     }
     $28 = $23 + 1 | 0;
     $$04755$i = $$04755$i + $28 | 0;
     $$04157$i = $$04157$i + $28 | 0;
     $33 = _strcoll($$04755$i, $$04157$i) | 0;
     if ($33 | 0) {
      $$251$i = $33;
      break L25;
     } else {
      $$03858$i = $$03858$i - $28 | 0;
      $$04456$i = $$04456$i - $28 | 0;
     }
    }
    $$251$i = $25 & 1 ^ 1;
   } else $$251$i = $17; while (0);
   $$0 = $$251$i >>> 31;
   return $$0 | 0;
  }
 default:
  {
   $35 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $1, 13) | 0;
   $36 = $35 + 4 | 0;
   if (HEAP32[$36 >> 2] | 0) if (__Z16luaO_rawequalObjPK10lua_TValueS1_($35, __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $2, 13) | 0) | 0) {
    $42 = $0 + 8 | 0;
    $43 = HEAP32[$42 >> 2] | 0;
    $44 = $0 + 32 | 0;
    $47 = $43 - (HEAP32[$44 >> 2] | 0) | 0;
    HEAP32[$43 >> 2] = HEAP32[$35 >> 2];
    HEAP32[$43 + 4 >> 2] = HEAP32[$36 >> 2];
    $51 = HEAP32[$42 >> 2] | 0;
    HEAP32[$51 + 8 >> 2] = HEAP32[$1 >> 2];
    HEAP32[$51 + 12 >> 2] = HEAP32[$3 >> 2];
    $56 = HEAP32[$42 >> 2] | 0;
    HEAP32[$56 + 16 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$56 + 20 >> 2] = HEAP32[$5 >> 2];
    $63 = HEAP32[$42 >> 2] | 0;
    if (((HEAP32[$0 + 28 >> 2] | 0) - $63 | 0) < 25) {
     __Z14luaD_growstackP9lua_Statei($0, 3);
     $68 = HEAP32[$42 >> 2] | 0;
    } else $68 = $63;
    HEAP32[$42 >> 2] = $68 + 24;
    __Z9luaD_callP9lua_StateP10lua_TValuei($0, $68, 1);
    $70 = (HEAP32[$44 >> 2] | 0) + $47 | 0;
    $71 = HEAP32[$42 >> 2] | 0;
    $72 = $71 + -8 | 0;
    HEAP32[$42 >> 2] = $72;
    HEAP32[$70 >> 2] = HEAP32[$72 >> 2];
    HEAP32[$70 + 4 >> 2] = HEAP32[$71 + -4 >> 2];
    $77 = HEAP32[$42 >> 2] | 0;
    $79 = HEAP32[$77 + 4 >> 2] | 0;
    if (!$79) {
     $$0 = 0;
     return $$0 | 0;
    }
    if (($79 | 0) != 1) {
     $$0 = 1;
     return $$0 | 0;
    }
    $$0 = (HEAP32[$77 >> 2] | 0) != 0 & 1;
    return $$0 | 0;
   }
   $$0 = __Z15luaG_ordererrorP9lua_StatePK10lua_TValueS3_($0, $1, $2) | 0;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 72 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $5 = sp;
 $6 = sp + 134 | 0;
 $7 = sp + 68 | 0;
 $8 = sp + 76 | 0;
 $9 = sp + 64 | 0;
 $10 = sp + 60 | 0;
 $11 = sp + 56 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 103080, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) {
   $$pre = HEAP32[$7 >> 2] | 0;
   $$2 = $$1;
   $$sroa$048$0 = $$pre;
   $34 = $$pre;
  } else {
   $$2 = $$1;
   $$sroa$048$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$048$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$041$0 = 0;
  $41 = $6;
 } else {
  $38 = _malloc($$2 << 1) | 0;
  if (!$38) {
   $$037 = 0;
   $$sroa$041$0 = 0;
   $41 = HEAP32[$7 >> 2] | 0;
  } else {
   $$037 = $38;
   $$sroa$041$0 = $38;
   $41 = $34;
  }
 }
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($41, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $44 = HEAP32[$9 >> 2] | 0;
 $45 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $46 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $44, $45, $2, $3) | 0;
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;
 return $46 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 72 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $5 = sp;
 $6 = sp + 134 | 0;
 $7 = sp + 68 | 0;
 $8 = sp + 76 | 0;
 $9 = sp + 64 | 0;
 $10 = sp + 60 | 0;
 $11 = sp + 56 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 114224, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) {
   $$pre = HEAP32[$7 >> 2] | 0;
   $$2 = $$1;
   $$sroa$048$0 = $$pre;
   $34 = $$pre;
  } else {
   $$2 = $$1;
   $$sroa$048$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$048$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$041$0 = 0;
  $41 = $6;
 } else {
  $38 = _malloc($$2 << 1) | 0;
  if (!$38) {
   $$037 = 0;
   $$sroa$041$0 = 0;
   $41 = HEAP32[$7 >> 2] | 0;
  } else {
   $$037 = $38;
   $$sroa$041$0 = $38;
   $41 = $34;
  }
 }
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($41, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $44 = HEAP32[$9 >> 2] | 0;
 $45 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $46 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $44, $45, $2, $3) | 0;
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;
 return $46 | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $20 = 0, $22 = 0, $23 = 0, $37 = 0, $39 = 0, $40 = 0, $45 = 0, $57 = 0, $58 = 0, $7 = 0, $74 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp + 24 | 0;
 $7 = sp + 32 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 8 | 0;
 $10 = sp + 4 | 0;
 $11 = sp + 28 | 0;
 $12 = sp;
 HEAP32[$8 >> 2] = $7;
 $14 = $8 + 4 | 0;
 HEAP32[$14 >> 2] = 187;
 HEAP32[$10 >> 2] = __ZNKSt3__28ios_base6getlocEv($4) | 0;
 $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 110168) | 0;
 HEAP8[$11 >> 0] = 0;
 $18 = HEAP32[$2 >> 2] | 0;
 HEAP32[$12 >> 2] = $18;
 $20 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 $22 = $18;
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1, $$byval_copy, $3, $10, $20, $5, $11, $17, $8, $9, $7 + 100 | 0) | 0) {
  $23 = $6 + 11 | 0;
  if ((HEAP8[$23 >> 0] | 0) < 0) {
   HEAP8[HEAP32[$6 >> 2] >> 0] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP8[$6 >> 0] = 0;
   HEAP8[$23 >> 0] = 0;
  }
  if (HEAP8[$11 >> 0] | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 31]($17, 45) | 0);
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 31]($17, 48) | 0;
  $39 = HEAP32[$9 >> 2] | 0;
  $40 = $39 + -1 | 0;
  $$0 = HEAP32[$8 >> 2] | 0;
  while (1) {
   if ($$0 >>> 0 >= $40 >>> 0) break;
   if ((HEAP8[$$0 >> 0] | 0) != $37 << 24 >> 24) break;
   $$0 = $$0 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_($6, $$0, $39) | 0;
 }
 $45 = HEAP32[$1 >> 2] | 0;
 do if (!$45) $57 = 0; else if ((HEAP32[$45 + 12 >> 2] | 0) == (HEAP32[$45 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 255]($45) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $57 = 0;
  break;
 } else {
  $57 = HEAP32[$1 >> 2] | 0;
  break;
 } else $57 = $45; while (0);
 $58 = ($57 | 0) == 0;
 do if (!$18) label = 22; else {
  if ((HEAP32[$22 + 12 >> 2] | 0) == (HEAP32[$22 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 255]($22) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 22;
   break;
  }
  if (!$58) label = 23;
 } while (0);
 if ((label | 0) == 22) if ($58) label = 23;
 if ((label | 0) == 23) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$10 >> 2] | 0) | 0;
 $74 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($74 | 0) FUNCTION_TABLE_vi[HEAP32[$14 >> 2] & 255]($74);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function ___stpncpy($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$037$lcssa = 0, $$03753 = 0, $$038$lcssa = 0, $$038$lcssa79 = 0, $$03866 = 0, $$039$lcssa = 0, $$039$lcssa78 = 0, $$03965 = 0, $$041$lcssa = 0, $$041$lcssa77 = 0, $$04164 = 0, $$054 = 0, $$1$lcssa = 0, $$140$ph = 0, $$14046 = 0, $$142$ph = 0, $$14245 = 0, $$152 = 0, $$2$ph = 0, $$243 = 0, $$247 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $38 = 0, label = 0;
 $3 = $1;
 do if (!(($3 ^ $0) & 3)) {
  $10 = ($2 | 0) != 0;
  L3 : do if ($10 & ($3 & 3 | 0) != 0) {
   $$03866 = $2;
   $$03965 = $1;
   $$04164 = $0;
   while (1) {
    $11 = HEAP8[$$03965 >> 0] | 0;
    HEAP8[$$04164 >> 0] = $11;
    if (!($11 << 24 >> 24)) {
     $$038$lcssa79 = $$03866;
     $$039$lcssa78 = $$03965;
     $$041$lcssa77 = $$04164;
     break L3;
    }
    $13 = $$03866 + -1 | 0;
    $14 = $$03965 + 1 | 0;
    $15 = $$04164 + 1 | 0;
    $19 = ($13 | 0) != 0;
    if ($19 & ($14 & 3 | 0) != 0) {
     $$03866 = $13;
     $$03965 = $14;
     $$04164 = $15;
    } else {
     $$038$lcssa = $13;
     $$039$lcssa = $14;
     $$041$lcssa = $15;
     $$lcssa = $19;
     label = 5;
     break;
    }
   }
  } else {
   $$038$lcssa = $2;
   $$039$lcssa = $1;
   $$041$lcssa = $0;
   $$lcssa = $10;
   label = 5;
  } while (0);
  if ((label | 0) == 5) if ($$lcssa) {
   $$038$lcssa79 = $$038$lcssa;
   $$039$lcssa78 = $$039$lcssa;
   $$041$lcssa77 = $$041$lcssa;
  } else {
   $$243 = $$041$lcssa;
   $$3 = 0;
   break;
  }
  if (!(HEAP8[$$039$lcssa78 >> 0] | 0)) {
   $$243 = $$041$lcssa77;
   $$3 = $$038$lcssa79;
  } else {
   L11 : do if ($$038$lcssa79 >>> 0 > 3) {
    $$03753 = $$041$lcssa77;
    $$054 = $$039$lcssa78;
    $$152 = $$038$lcssa79;
    while (1) {
     $23 = HEAP32[$$054 >> 2] | 0;
     if (($23 & -2139062144 ^ -2139062144) & $23 + -16843009 | 0) {
      $$0$lcssa = $$054;
      $$037$lcssa = $$03753;
      $$1$lcssa = $$152;
      break L11;
     }
     HEAP32[$$03753 >> 2] = $23;
     $29 = $$152 + -4 | 0;
     $30 = $$054 + 4 | 0;
     $31 = $$03753 + 4 | 0;
     if ($29 >>> 0 > 3) {
      $$03753 = $31;
      $$054 = $30;
      $$152 = $29;
     } else {
      $$0$lcssa = $30;
      $$037$lcssa = $31;
      $$1$lcssa = $29;
      break;
     }
    }
   } else {
    $$0$lcssa = $$039$lcssa78;
    $$037$lcssa = $$041$lcssa77;
    $$1$lcssa = $$038$lcssa79;
   } while (0);
   $$140$ph = $$0$lcssa;
   $$142$ph = $$037$lcssa;
   $$2$ph = $$1$lcssa;
   label = 11;
  }
 } else {
  $$140$ph = $1;
  $$142$ph = $0;
  $$2$ph = $2;
  label = 11;
 } while (0);
 L16 : do if ((label | 0) == 11) if (!$$2$ph) {
  $$243 = $$142$ph;
  $$3 = 0;
 } else {
  $$14046 = $$140$ph;
  $$14245 = $$142$ph;
  $$247 = $$2$ph;
  while (1) {
   $34 = HEAP8[$$14046 >> 0] | 0;
   HEAP8[$$14245 >> 0] = $34;
   if (!($34 << 24 >> 24)) {
    $$243 = $$14245;
    $$3 = $$247;
    break L16;
   }
   $$247 = $$247 + -1 | 0;
   $38 = $$14245 + 1 | 0;
   if (!$$247) {
    $$243 = $38;
    $$3 = 0;
    break;
   } else {
    $$14046 = $$14046 + 1 | 0;
    $$14245 = $38;
   }
  }
 } while (0);
 _memset($$243 | 0, 0, $$3 | 0) | 0;
 return $$243 | 0;
}

function __Z11luaY_parserP9lua_StateP3ZioP7MbufferPKc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $12 = 0, $20 = 0, $26 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $37 = 0, $38 = 0, $4 = 0, $41 = 0, $46 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $65 = 0, $66 = 0, $69 = 0, $73 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 640 | 0;
 $vararg_buffer = sp;
 $4 = sp + 576 | 0;
 $5 = sp + 4 | 0;
 HEAP32[$4 + 40 >> 2] = $2;
 __Z13luaX_setinputP9lua_StateP8LexStateP3ZioP7TString($0, $4, $1, __Z12luaS_newlstrP9lua_StatePKcj($0, $3, _strlen($3) | 0) | 0);
 $9 = $4 + 32 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = __Z13luaF_newprotoP9lua_State($10) | 0;
 HEAP32[$5 >> 2] = $11;
 $12 = $4 + 28 | 0;
 HEAP32[$5 + 8 >> 2] = HEAP32[$12 >> 2];
 HEAP32[$5 + 12 >> 2] = $4;
 HEAP32[$5 + 16 >> 2] = $10;
 HEAP32[$12 >> 2] = $5;
 HEAP32[$5 + 24 >> 2] = 0;
 HEAP32[$5 + 28 >> 2] = -1;
 HEAP32[$5 + 32 >> 2] = -1;
 $20 = $5 + 36 | 0;
 HEAP32[$5 + 20 >> 2] = 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 HEAP16[$20 + 12 >> 1] = 0;
 HEAP8[$20 + 14 >> 0] = 0;
 HEAP32[$11 + 32 >> 2] = HEAP32[$4 + 44 >> 2];
 HEAP8[$11 + 75 >> 0] = 2;
 $26 = __Z8luaH_newP9lua_Stateii($10, 0, 0) | 0;
 HEAP32[$5 + 4 >> 2] = $26;
 $28 = $10 + 8 | 0;
 $29 = HEAP32[$28 >> 2] | 0;
 HEAP32[$29 >> 2] = $26;
 HEAP32[$29 + 4 >> 2] = 5;
 $31 = $10 + 28 | 0;
 $33 = HEAP32[$28 >> 2] | 0;
 if (((HEAP32[$31 >> 2] | 0) - $33 | 0) < 9) {
  __Z14luaD_growstackP9lua_Statei($10, 1);
  $38 = HEAP32[$28 >> 2] | 0;
 } else $38 = $33;
 $37 = $38 + 8 | 0;
 HEAP32[$28 >> 2] = $37;
 HEAP32[$37 >> 2] = $11;
 HEAP32[$38 + 12 >> 2] = 9;
 $41 = HEAP32[$28 >> 2] | 0;
 if (((HEAP32[$31 >> 2] | 0) - $41 | 0) < 9) {
  __Z14luaD_growstackP9lua_Statei($10, 1);
  $46 = HEAP32[$28 >> 2] | 0;
 } else $46 = $41;
 HEAP32[$28 >> 2] = $46 + 8;
 HEAP8[(HEAP32[$5 >> 2] | 0) + 74 >> 0] = 2;
 __Z9luaX_nextP8LexState($4);
 $50 = (HEAP32[$9 >> 2] | 0) + 52 | 0;
 $52 = (HEAP16[$50 >> 1] | 0) + 1 << 16 >> 16;
 HEAP16[$50 >> 1] = $52;
 if (($52 & 65535) > 200) __Z13luaX_lexerrorP8LexStatePKci($4, 87765, 0);
 $54 = $4 + 12 | 0;
 L10 : while (1) {
  $55 = HEAP32[$54 >> 2] | 0;
  switch ($55 | 0) {
  case 287:
  case 276:
  case 262:
  case 261:
  case 260:
   {
    $69 = $55;
    break L10;
    break;
   }
  default:
   {}
  }
  $56 = __ZL9statementP8LexState($4) | 0;
  if ((HEAP32[$54 >> 2] | 0) == 59) __Z9luaX_nextP8LexState($4);
  $59 = HEAP32[$12 >> 2] | 0;
  HEAP32[$59 + 36 >> 2] = HEAPU8[$59 + 50 >> 0];
  if ($56 | 0) {
   label = 12;
   break;
  }
 }
 if ((label | 0) == 12) $69 = HEAP32[$54 >> 2] | 0;
 $65 = HEAP32[$9 >> 2] | 0;
 $66 = $65 + 52 | 0;
 HEAP16[$66 >> 1] = (HEAP16[$66 >> 1] | 0) + -1 << 16 >> 16;
 if (($69 | 0) == 287) {
  __ZL10close_funcP8LexState($4);
  $73 = HEAP32[$5 >> 2] | 0;
  STACKTOP = sp;
  return $73 | 0;
 }
 HEAP32[$vararg_buffer >> 2] = __Z14luaX_token2strP8LexStatei($4, 287) | 0;
 __Z16luaX_syntaxerrorP8LexStatePKc($4, __Z16luaO_pushfstringP9lua_StatePKcz($65, 87798, $vararg_buffer) | 0);
 __ZL10close_funcP8LexState($4);
 $73 = HEAP32[$5 >> 2] | 0;
 STACKTOP = sp;
 return $73 | 0;
}

function __ZN6google11GetAllFlagsEPNSt3__26vectorINS_19CommandLineFlagInfoENS0_9allocatorIS2_EEEE($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$05$i$i$i = 0, $$idx$val23$i31 = 0, $$pre$phiZ2D = 0, $$sroa$020$033 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $32 = 0, $34 = 0, $36 = 0, $39 = 0, $4 = 0, $5 = 0, $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $1 = sp;
 $2 = HEAP32[27053] | 0;
 if (!$2) {
  $4 = __Znwj(32) | 0;
  $5 = $4 + 4 | 0;
  HEAP32[$5 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  HEAP32[$4 >> 2] = $5;
  $8 = $4 + 16 | 0;
  HEAP32[$8 >> 2] = 0;
  HEAP32[$4 + 20 >> 2] = 0;
  HEAP32[$4 + 12 >> 2] = $8;
  HEAP32[$4 + 24 >> 2] = 0;
  HEAP32[27053] = $4;
  $11 = $4;
 } else $11 = $2;
 $$idx$val23$i31 = HEAP32[$11 >> 2] | 0;
 $12 = $11 + 4 | 0;
 $13 = $$idx$val23$i31;
 if (($13 | 0) == ($12 | 0)) {
  $$pre$phiZ2D = $0 + 4 | 0;
  $22 = HEAP32[$0 >> 2] | 0;
  $23 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  __ZNSt3__26__sortIRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEvT0_S6_T_($22, $23, $1);
  STACKTOP = sp;
  return;
 }
 $15 = $0 + 4 | 0;
 $16 = $0 + 8 | 0;
 $17 = $1 + 60 | 0;
 $18 = $1 + 48 | 0;
 $19 = $1 + 36 | 0;
 $20 = $1 + 24 | 0;
 $21 = $1 + 12 | 0;
 $$sroa$020$033 = $$idx$val23$i31;
 $25 = $13;
 while (1) {
  dest = $1;
  stop = dest + 72 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  __ZN6google12_GLOBAL__N_115CommandLineFlag23FillCommandLineFlagInfoEPNS_19CommandLineFlagInfoE(HEAP32[$25 + 20 >> 2] | 0, $1);
  $27 = HEAP32[$15 >> 2] | 0;
  if (($27 | 0) == (HEAP32[$16 >> 2] | 0)) __ZNSt3__26vectorIN6google19CommandLineFlagInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $1); else {
   __ZN6google19CommandLineFlagInfoC2ERKS0_($27, $1);
   HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 80;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $32 = $$sroa$020$033;
  $34 = HEAP32[$32 + 4 >> 2] | 0;
  if (!$34) {
   $$0$i$i$i = $32;
   while (1) {
    $39 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$39 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$05$i$i$i = $39;
     break;
    } else $$0$i$i$i = $39;
   }
  } else {
   $$0$i$i$i$i = $34;
   while (1) {
    $36 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$36) {
     $$05$i$i$i = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $36;
   }
  }
  if (($$05$i$i$i | 0) == ($12 | 0)) {
   $$pre$phiZ2D = $15;
   break;
  } else {
   $$sroa$020$033 = $$05$i$i$i;
   $25 = $$05$i$i$i;
  }
 }
 $22 = HEAP32[$0 >> 2] | 0;
 $23 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 __ZNSt3__26__sortIRN6google19FilenameFlagnameCmpEPNS1_19CommandLineFlagInfoEEEvT0_S6_T_($22, $23, $1);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$sroa$0$0$$sroa$0$0$318$i$in = 0, $$sroa$0$0$$sroa$0$0$5$i = 0, $$sroa$0$i = 0, $$sroa$010$i = 0, $$sroa$9$0$i = 0, $$sroa$9$1$i = 0, $$sroa$speculated$i$i = 0, $10 = 0, $13 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $44 = 0, $5 = 0, $51 = 0, $53 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$sroa$010$i = sp + 36 | 0;
 $$sroa$0$i = sp + 32 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 16 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 $7 = $0 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $10 = $1 + 4 | 0;
 $13 = $2 + 4 | 0;
 HEAP32[$7 >> 2] = $8 - (HEAP32[$10 >> 2] | 0) + (HEAP32[$13 >> 2] | 0) + ((HEAP32[$2 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) << 3);
 $20 = HEAP32[$1 >> 2] | 0;
 $21 = HEAP32[$10 >> 2] | 0;
 $22 = HEAP32[$2 >> 2] | 0;
 $23 = HEAP32[$13 >> 2] | 0;
 $26 = (HEAP32[$0 >> 2] | 0) + ($8 >>> 5 << 2) | 0;
 $27 = $8 & 31;
 $28 = $26;
 if (($21 | 0) != ($27 | 0)) {
  HEAP32[$3 >> 2] = $20;
  HEAP32[$3 + 4 >> 2] = $21;
  HEAP32[$4 >> 2] = $22;
  HEAP32[$4 + 4 >> 2] = $23;
  HEAP32[$5 >> 2] = $28;
  HEAP32[$5 + 4 >> 2] = $27;
  __ZNSt3__216__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_($6, $3, $4, $5);
  STACKTOP = sp;
  return;
 }
 HEAP32[$$sroa$010$i >> 2] = $20;
 HEAP32[$$sroa$0$i >> 2] = $28;
 $33 = $23 - $21 + ($22 - $20 << 3) | 0;
 $35 = $20;
 if (($33 | 0) > 0) {
  if (!$21) {
   $$0$i$i = $33;
   $$sroa$0$0$$sroa$0$0$318$i$in = $26;
   $$sroa$9$0$i = 0;
   $60 = $20;
   $67 = $35;
  } else {
   $38 = 32 - $21 | 0;
   $$sroa$speculated$i$i = ($33 | 0) < ($38 | 0) ? $33 : $38;
   $44 = -1 >>> ($38 - $$sroa$speculated$i$i | 0) & -1 << $21;
   HEAP32[$26 >> 2] = HEAP32[$26 >> 2] & ~$44 | HEAP32[$35 >> 2] & $44;
   $51 = $$sroa$speculated$i$i + $21 | 0;
   $53 = $26 + ($51 >>> 5 << 2) | 0;
   HEAP32[$$sroa$0$i >> 2] = $53;
   $56 = (HEAP32[$$sroa$010$i >> 2] | 0) + 4 | 0;
   HEAP32[$$sroa$010$i >> 2] = $56;
   $$0$i$i = $33 - $$sroa$speculated$i$i | 0;
   $$sroa$0$0$$sroa$0$0$318$i$in = $53;
   $$sroa$9$0$i = $51 & 31;
   $60 = $56;
   $67 = $56;
  }
  $58 = $$0$i$i >>> 5;
  _memmove($$sroa$0$0$$sroa$0$0$318$i$in | 0, $60 | 0, $58 << 2 | 0) | 0;
  $62 = $$0$i$i - ($58 << 5) | 0;
  $63 = $$sroa$0$0$$sroa$0$0$318$i$in + ($58 << 2) | 0;
  HEAP32[$$sroa$0$i >> 2] = $63;
  if (($62 | 0) > 0) {
   $66 = $67 + ($58 << 2) | 0;
   HEAP32[$$sroa$010$i >> 2] = $66;
   $69 = -1 >>> (32 - $62 | 0);
   HEAP32[$63 >> 2] = HEAP32[$63 >> 2] & ~$69 | HEAP32[$66 >> 2] & $69;
   $$sroa$0$0$$sroa$0$0$5$i = HEAP32[$$sroa$0$i >> 2] | 0;
   $$sroa$9$1$i = $62;
  } else {
   $$sroa$0$0$$sroa$0$0$5$i = $63;
   $$sroa$9$1$i = $$sroa$9$0$i;
  }
 } else {
  $$sroa$0$0$$sroa$0$0$5$i = $28;
  $$sroa$9$1$i = $21;
 }
 HEAP32[$6 >> 2] = $$sroa$0$0$$sroa$0$0$5$i;
 HEAP32[$6 + 4 >> 2] = $$sroa$9$1$i;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i13 = 0, $$pre$i4$i$i15 = 0, $18 = 0, $21 = 0, $31 = 0, $33 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $56 = 0, $59 = 0, $71 = 0, $8 = 0, $83 = 0, $84 = 0, $85 = 0, label = 0;
 L1 : while (1) {
  $5 = HEAP32[$1 >> 2] | 0;
  do if (!$5) $83 = 1; else {
   $8 = HEAP32[$5 + 12 >> 2] | 0;
   if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 255]($5) | 0; else $$0$i$i$i$i = HEAP32[$8 >> 2] | 0;
   if (($$0$i$i$i$i | 0) == -1) {
    HEAP32[$1 >> 2] = 0;
    $83 = 1;
    break;
   } else {
    $83 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $18 = HEAP32[$2 >> 2] | 0;
  do if (!$18) label = 15; else {
   $21 = HEAP32[$18 + 12 >> 2] | 0;
   if (($21 | 0) == (HEAP32[$18 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 255]($18) | 0; else $$0$i$i2$i$i = HEAP32[$21 >> 2] | 0;
   if (($$0$i$i2$i$i | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 15;
    break;
   } else if ($83) {
    $84 = $18;
    break;
   } else {
    $$pre$i4$i$i15 = $18;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($83) {
    $$pre$i4$i$i15 = 0;
    break;
   } else $84 = 0;
  }
  $31 = HEAP32[$1 >> 2] | 0;
  $33 = HEAP32[$31 + 12 >> 2] | 0;
  if (($33 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 255]($31) | 0; else $$0$i$i = HEAP32[$33 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, $$0$i$i) | 0)) {
   $$pre$i4$i$i15 = $84;
   break;
  }
  $46 = HEAP32[$1 >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 255]($46) | 0;
   continue;
  } else {
   HEAP32[$47 >> 2] = $48 + 4;
   continue;
  }
 }
 $56 = HEAP32[$1 >> 2] | 0;
 do if (!$56) $85 = 1; else {
  $59 = HEAP32[$56 + 12 >> 2] | 0;
  if (($59 | 0) == (HEAP32[$56 + 16 >> 2] | 0)) $$0$i$i$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 36 >> 2] & 255]($56) | 0; else $$0$i$i$i$i7 = HEAP32[$59 >> 2] | 0;
  if (($$0$i$i$i$i7 | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $85 = 1;
   break;
  } else {
   $85 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i4$i$i15) label = 37; else {
  $71 = HEAP32[$$pre$i4$i$i15 + 12 >> 2] | 0;
  if (($71 | 0) == (HEAP32[$$pre$i4$i$i15 + 16 >> 2] | 0)) $$0$i$i2$i$i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i4$i$i15 >> 2] | 0) + 36 >> 2] & 255]($$pre$i4$i$i15) | 0; else $$0$i$i2$i$i13 = HEAP32[$71 >> 2] | 0;
  if (($$0$i$i2$i$i13 | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 37;
   break;
  } else if ($85) break; else {
   label = 39;
   break;
  }
 } while (0);
 if ((label | 0) == 37) if ($85) label = 39;
 if ((label | 0) == 39) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 return;
}

function __ZL8recfieldP8LexStateP11ConsControl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $40 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer2 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 56 | 0;
 $3 = sp + 36 | 0;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $5 + 36 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $0 + 12 | 0;
 if ((HEAP32[$8 >> 2] | 0) == 285) {
  $11 = $1 + 24 | 0;
  if ((HEAP32[$11 >> 2] | 0) > 2147483645) {
   $16 = HEAP32[(HEAP32[$5 >> 2] | 0) + 60 >> 2] | 0;
   $19 = HEAP32[$5 + 16 >> 2] | 0;
   if (!$16) {
    HEAP32[$vararg_buffer >> 2] = 2147483645;
    HEAP32[$vararg_buffer + 4 >> 2] = 88133;
    $24 = __Z16luaO_pushfstringP9lua_StatePKcz($19, 87964, $vararg_buffer) | 0;
   } else {
    HEAP32[$vararg_buffer2 >> 2] = $16;
    HEAP32[$vararg_buffer2 + 4 >> 2] = 2147483645;
    HEAP32[$vararg_buffer2 + 8 >> 2] = 88133;
    $24 = __Z16luaO_pushfstringP9lua_StatePKcz($19, 87998, $vararg_buffer2) | 0;
   }
   __Z13luaX_lexerrorP8LexStatePKci(HEAP32[$5 + 12 >> 2] | 0, $24, 0);
   if ((HEAP32[$8 >> 2] | 0) != 285) {
    $26 = HEAP32[$0 + 32 >> 2] | 0;
    HEAP32[$vararg_buffer7 >> 2] = __Z14luaX_token2strP8LexStatei($0, 285) | 0;
    __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($26, 87798, $vararg_buffer7) | 0);
   }
  }
  $30 = HEAP32[$0 + 16 >> 2] | 0;
  __Z9luaX_nextP8LexState($0);
  $31 = __Z12luaK_stringKP9FuncStateP7TString(HEAP32[$4 >> 2] | 0, $30) | 0;
  HEAP32[$2 + 12 >> 2] = -1;
  HEAP32[$2 + 16 >> 2] = -1;
  HEAP32[$2 >> 2] = 4;
  HEAP32[$2 + 4 >> 2] = $31;
  $$pre$phiZ2D = $11;
 } else {
  __ZL6yindexP8LexStateP7expdesc($0, $2);
  $$pre$phiZ2D = $1 + 24 | 0;
 }
 HEAP32[$$pre$phiZ2D >> 2] = (HEAP32[$$pre$phiZ2D >> 2] | 0) + 1;
 if ((HEAP32[$8 >> 2] | 0) == 61) {
  __Z9luaX_nextP8LexState($0);
  $43 = __Z11luaK_exp2RKP9FuncStateP7expdesc($5, $2) | 0;
  __ZL7subexprP8LexStateP7expdescj($0, $3, 0) | 0;
  $44 = $1 + 20 | 0;
  $45 = HEAP32[$44 >> 2] | 0;
  $46 = $45 + 4 | 0;
  $47 = HEAP32[$46 >> 2] | 0;
  $48 = __Z11luaK_exp2RKP9FuncStateP7expdesc($5, $3) | 0;
  __Z12luaK_codeABCP9FuncState6OpCodeiii($5, 9, $47, $43, $48) | 0;
  HEAP32[$6 >> 2] = $7;
  STACKTOP = sp;
  return;
 }
 $40 = HEAP32[$0 + 32 >> 2] | 0;
 HEAP32[$vararg_buffer10 >> 2] = __Z14luaX_token2strP8LexStatei($0, 61) | 0;
 __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($40, 87798, $vararg_buffer10) | 0);
 __Z9luaX_nextP8LexState($0);
 $43 = __Z11luaK_exp2RKP9FuncStateP7expdesc($5, $2) | 0;
 __ZL7subexprP8LexStateP7expdescj($0, $3, 0) | 0;
 $44 = $1 + 20 | 0;
 $45 = HEAP32[$44 >> 2] | 0;
 $46 = $45 + 4 | 0;
 $47 = HEAP32[$46 >> 2] | 0;
 $48 = __Z11luaK_exp2RKP9FuncStateP7expdesc($5, $3) | 0;
 __Z12luaK_codeABCP9FuncState6OpCodeiii($5, 9, $47, $43, $48) | 0;
 HEAP32[$6 >> 2] = $7;
 STACKTOP = sp;
 return;
}

function _scanexp($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$04860 = 0, $$049 = 0, $$1$be = 0, $$159 = 0, $$2$be = 0, $$2$lcssa = 0, $$254 = 0, $$3$be = 0, $100 = 0, $101 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $22 = 0, $3 = 0, $38 = 0, $4 = 0, $50 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $80 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 100 | 0;
 if ($3 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
  HEAP32[$2 >> 2] = $3 + 1;
  $11 = HEAPU8[$3 >> 0] | 0;
 } else $11 = ___shgetc($0) | 0;
 switch ($11 | 0) {
 case 43:
 case 45:
  {
   $13 = ($11 | 0) == 45 & 1;
   $14 = HEAP32[$2 >> 2] | 0;
   if ($14 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$2 >> 2] = $14 + 1;
    $22 = HEAPU8[$14 >> 0] | 0;
   } else $22 = ___shgetc($0) | 0;
   if (($1 | 0) != 0 & ($22 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$4 >> 2] | 0)) {
    $$0 = $13;
    $$049 = $22;
   } else {
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
    $$0 = $13;
    $$049 = $22;
   } else {
    $$0 = $13;
    $$049 = $22;
   }
   break;
  }
 default:
  {
   $$0 = 0;
   $$049 = $11;
  }
 }
 if (($$049 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$4 >> 2] | 0)) {
  $100 = -2147483648;
  $101 = 0;
 } else {
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
  $100 = -2147483648;
  $101 = 0;
 } else {
  $$04860 = 0;
  $$159 = $$049;
  while (1) {
   $$04860 = $$159 + -48 + ($$04860 * 10 | 0) | 0;
   $38 = HEAP32[$2 >> 2] | 0;
   if ($38 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$2 >> 2] = $38 + 1;
    $$1$be = HEAPU8[$38 >> 0] | 0;
   } else $$1$be = ___shgetc($0) | 0;
   if (!(($$1$be + -48 | 0) >>> 0 < 10 & ($$04860 | 0) < 214748364)) break; else $$159 = $$1$be;
  }
  $50 = (($$04860 | 0) < 0) << 31 >> 31;
  if (($$1$be + -48 | 0) >>> 0 < 10) {
   $$254 = $$1$be;
   $55 = $$04860;
   $56 = $50;
   while (1) {
    $57 = ___muldi3($55 | 0, $56 | 0, 10, 0) | 0;
    $58 = tempRet0;
    $61 = _i64Add($$254 | 0, (($$254 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    $63 = _i64Add($61 | 0, tempRet0 | 0, $57 | 0, $58 | 0) | 0;
    $64 = tempRet0;
    $65 = HEAP32[$2 >> 2] | 0;
    if ($65 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$2 >> 2] = $65 + 1;
     $$2$be = HEAPU8[$65 >> 0] | 0;
    } else $$2$be = ___shgetc($0) | 0;
    if (($$2$be + -48 | 0) >>> 0 < 10 & (($64 | 0) < 21474836 | ($64 | 0) == 21474836 & $63 >>> 0 < 2061584302)) {
     $$254 = $$2$be;
     $55 = $63;
     $56 = $64;
    } else {
     $$2$lcssa = $$2$be;
     $94 = $63;
     $95 = $64;
     break;
    }
   }
  } else {
   $$2$lcssa = $$1$be;
   $94 = $$04860;
   $95 = $50;
  }
  if (($$2$lcssa + -48 | 0) >>> 0 < 10) do {
   $80 = HEAP32[$2 >> 2] | 0;
   if ($80 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$2 >> 2] = $80 + 1;
    $$3$be = HEAPU8[$80 >> 0] | 0;
   } else $$3$be = ___shgetc($0) | 0;
  } while (($$3$be + -48 | 0) >>> 0 < 10);
  if (HEAP32[$4 >> 2] | 0) HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
  $93 = ($$0 | 0) != 0;
  $96 = _i64Subtract(0, 0, $94 | 0, $95 | 0) | 0;
  $100 = $93 ? tempRet0 : $95;
  $101 = $93 ? $96 : $94;
 }
 tempRet0 = $100;
 return $101 | 0;
}

function __ZNK6google12_GLOBAL__N_19FlagValue8ToStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $18 = 0, $2 = 0, $23 = 0, $24 = 0, $30 = 0, $35 = 0, $36 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 40 | 0;
 switch (HEAP8[$1 + 4 >> 0] | 0) {
 case 0:
  {
   $8 = (HEAP8[HEAP32[$1 >> 2] >> 0] | 0) != 0;
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $8 ? 104928 : 104922, $8 ? 4 : 5);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   HEAP32[$vararg_buffer >> 2] = HEAP32[HEAP32[$1 >> 2] >> 2];
   _snprintf($2, 64, 90922, $vararg_buffer) | 0;
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $2, _strlen($2) | 0);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   HEAP32[$vararg_buffer1 >> 2] = HEAP32[HEAP32[$1 >> 2] >> 2];
   _snprintf($2, 64, 90925, $vararg_buffer1) | 0;
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $2, _strlen($2) | 0);
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   $18 = HEAP32[$1 >> 2] | 0;
   $23 = HEAP32[$18 + 4 >> 2] | 0;
   $24 = $vararg_buffer4;
   HEAP32[$24 >> 2] = HEAP32[$18 >> 2];
   HEAP32[$24 + 4 >> 2] = $23;
   _snprintf($2, 64, 90928, $vararg_buffer4) | 0;
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $2, _strlen($2) | 0);
   STACKTOP = sp;
   return;
  }
 case 4:
  {
   $30 = HEAP32[$1 >> 2] | 0;
   $35 = HEAP32[$30 + 4 >> 2] | 0;
   $36 = $vararg_buffer7;
   HEAP32[$36 >> 2] = HEAP32[$30 >> 2];
   HEAP32[$36 + 4 >> 2] = $35;
   _snprintf($2, 64, 90933, $vararg_buffer7) | 0;
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $2, _strlen($2) | 0);
   STACKTOP = sp;
   return;
  }
 case 5:
  {
   HEAPF64[$vararg_buffer10 >> 3] = +HEAPF64[HEAP32[$1 >> 2] >> 3];
   _snprintf($2, 64, 90938, $vararg_buffer10) | 0;
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $2, _strlen($2) | 0);
   STACKTOP = sp;
   return;
  }
 case 6:
  {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, HEAP32[$1 >> 2] | 0);
   STACKTOP = sp;
   return;
  }
 default:
  {
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 114224, 0);
   STACKTOP = sp;
   return;
  }
 }
}

function __ZN6google12_GLOBAL__N_121CommandLineFlagParser21ProcessFlagfileLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$01430 = 0, $$in = 0, $10 = 0, $16 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $31 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $4 = sp + 36 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 12 | 0;
 $7 = sp;
 $9 = HEAP8[$2 + 11 >> 0] | 0;
 $10 = $9 << 24 >> 24 < 0;
 if (!(($10 ? HEAP32[$2 + 4 >> 2] | 0 : $9 & 255) | 0)) {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 114224, 0);
  STACKTOP = sp;
  return;
 };
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$5 >> 2] = 0;
 $16 = $5 + 4 | 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZN6google12_GLOBAL__N_1L13ParseFlagListEPKcPNSt3__26vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEE($10 ? HEAP32[$2 >> 2] | 0 : $2, $5);
 $20 = HEAP32[$16 >> 2] | 0;
 $21 = HEAP32[$5 >> 2] | 0;
 $23 = $21;
 if (($20 | 0) == ($21 | 0)) {
  $$in = $20;
  $27 = $23;
 } else {
  $24 = $6 + 11 | 0;
  $25 = $6 + 4 | 0;
  $$01430 = 0;
  $36 = $23;
  while (1) {
   $35 = $36 + ($$01430 * 12 | 0) | 0;
   if ((HEAP8[$35 + 11 >> 0] | 0) < 0) $41 = HEAP32[$35 >> 2] | 0; else $41 = $35;
   __ZN6google12_GLOBAL__N_1L18ReadFileIntoStringEPKc($7, $41);
   __ZN6google12_GLOBAL__N_121CommandLineFlagParser30ProcessOptionsFromStringLockedERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_15FlagSettingModeE($6, $1, $7, $3);
   $42 = HEAP8[$24 >> 0] | 0;
   $43 = $42 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($4, $43 ? HEAP32[$6 >> 2] | 0 : $6, $43 ? HEAP32[$25 >> 2] | 0 : $42 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   $$01430 = $$01430 + 1 | 0;
   $50 = HEAP32[$16 >> 2] | 0;
   $51 = HEAP32[$5 >> 2] | 0;
   $55 = $51;
   if ($$01430 >>> 0 >= (($50 - $51 | 0) / 12 | 0) >>> 0) {
    $$in = $50;
    $27 = $55;
    break;
   } else $36 = $55;
  }
 }
 $26 = $$in;
 HEAP32[$0 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 if ($27 | 0) {
  if (($26 | 0) == ($27 | 0)) $34 = $27; else {
   $31 = $26;
   do {
    $30 = $31 + -12 | 0;
    HEAP32[$16 >> 2] = $30;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
    $31 = HEAP32[$16 >> 2] | 0;
   } while (($31 | 0) != ($27 | 0));
   $34 = HEAP32[$5 >> 2] | 0;
  }
  __ZdlPv($34);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $15 = 0, $18 = 0, $25 = 0, $30 = 0, $34 = 0, $43 = 0, $48 = 0, $50 = 0, $56 = 0, $57 = 0, $60 = 0, $61 = 0, $73 = 0, $82 = 0, $89 = 0, $94 = 0, $96 = 0;
 L1 : do if (($0 | 0) == ($5 | 0)) if (!(HEAP8[$1 >> 0] | 0)) $$2 = -1; else {
  HEAP8[$1 >> 0] = 0;
  $15 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = 46;
  $18 = HEAP8[$7 + 11 >> 0] | 0;
  if (!(($18 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $18 & 255) | 0)) $$2 = 0; else {
   $25 = HEAP32[$9 >> 2] | 0;
   if (($25 - $8 | 0) < 160) {
    $30 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $25 + 4;
    HEAP32[$25 >> 2] = $30;
    $$2 = 0;
   } else $$2 = 0;
  }
 } else {
  if (($0 | 0) == ($6 | 0)) {
   $34 = HEAP8[$7 + 11 >> 0] | 0;
   if (($34 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $34 & 255) | 0) {
    if (!(HEAP8[$1 >> 0] | 0)) {
     $$2 = -1;
     break;
    }
    $43 = HEAP32[$9 >> 2] | 0;
    if (($43 - $8 | 0) >= 160) {
     $$2 = 0;
     break;
    }
    $48 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $43 + 4;
    HEAP32[$43 >> 2] = $48;
    HEAP32[$10 >> 2] = 0;
    $$2 = 0;
    break;
   }
  }
  $50 = $11 + 128 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $11 + ($$0$i$idx << 2) | 0;
   if (($$0$i$idx | 0) == 32) {
    $$0$lcssa$i = $50;
    break;
   }
   if ((HEAP32[$$0$i$ptr >> 2] | 0) == ($0 | 0)) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $56 = $$0$lcssa$i - $11 | 0;
  $57 = $56 >> 2;
  if (($56 | 0) > 124) $$2 = -1; else {
   $60 = HEAP8[102831 + $57 >> 0] | 0;
   switch ($57 | 0) {
   case 24:
   case 25:
    {
     $61 = HEAP32[$4 >> 2] | 0;
     if (($61 | 0) != ($3 | 0)) if ((HEAPU8[$61 + -1 >> 0] & 95 | 0) != (HEAPU8[$2 >> 0] & 127 | 0)) {
      $$2 = -1;
      break L1;
     }
     HEAP32[$4 >> 2] = $61 + 1;
     HEAP8[$61 >> 0] = $60;
     $$2 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$2 >> 0] = 80;
     break;
    }
   default:
    {
     $73 = $60 & 95;
     if (($73 | 0) == (HEAP8[$2 >> 0] | 0)) {
      HEAP8[$2 >> 0] = $73 | 128;
      if (HEAP8[$1 >> 0] | 0) {
       HEAP8[$1 >> 0] = 0;
       $82 = HEAP8[$7 + 11 >> 0] | 0;
       if (($82 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $82 & 255) | 0) {
        $89 = HEAP32[$9 >> 2] | 0;
        if (($89 - $8 | 0) < 160) {
         $94 = HEAP32[$10 >> 2] | 0;
         HEAP32[$9 >> 2] = $89 + 4;
         HEAP32[$89 >> 2] = $94;
        }
       }
      }
     }
    }
   }
   $96 = HEAP32[$4 >> 2] | 0;
   HEAP32[$4 >> 2] = $96 + 1;
   HEAP8[$96 >> 0] = $60;
   if (($56 | 0) > 84) $$2 = 0; else {
    HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
    $$2 = 0;
   }
  }
 } while (0);
 return $$2 | 0;
}

function __ZL9luaK_codeP9FuncStateji($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i5$i = 0, $$012$i$i = 0, $$idx$val$i$i = 0, $10 = 0, $11 = 0, $13 = 0, $18 = 0, $19 = 0, $25 = 0, $3 = 0, $35 = 0, $36 = 0, $4 = 0, $45 = 0, $5 = 0, $50 = 0, $55 = 0, $57 = 0, $6 = 0, $61 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $9 = 0, label = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $4 = $0 + 32 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $0 + 24 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($5 | 0) == -1) $57 = $7; else {
  $9 = $0 + 12 | 0;
  $$012$i$i = $5;
  $$idx$val$i$i = $3;
  while (1) {
   $10 = (HEAP32[$$idx$val$i$i + 12 >> 2] | 0) + ($$012$i$i << 2) | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   $13 = ($11 >>> 14) + -131071 | 0;
   $$0$i$i$i = ($13 | 0) == -1 ? -1 : $$012$i$i + 1 + $13 | 0;
   if (($$012$i$i | 0) > 0) {
    $18 = $10 + -4 | 0;
    $19 = HEAP32[$18 >> 2] | 0;
    if ((HEAP8[87697 + ($19 & 63) >> 0] | 0) < 0) {
     $$0$i$i5$i = $18;
     $25 = $19;
    } else label = 5;
   } else label = 5;
   if ((label | 0) == 5) {
    label = 0;
    $$0$i$i5$i = $10;
    $25 = $11;
   }
   if (($25 & 63 | 0) == 27) {
    HEAP32[$$0$i$i5$i >> 2] = $25 & 8372224 | $25 >>> 23 << 6 | 26;
    $35 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i$i << 2) | 0;
    $36 = $7 + ~$$012$i$i | 0;
    if (((($36 | 0) > -1 ? $36 : 0 - $36 | 0) | 0) > 131071) __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$9 >> 2] | 0, 89696);
    HEAP32[$35 >> 2] = HEAP32[$35 >> 2] & 16383 | ($36 << 14) + 2147467264;
   } else {
    $45 = $7 + ~$$012$i$i | 0;
    if (((($45 | 0) > -1 ? $45 : 0 - $45 | 0) | 0) > 131071) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$9 >> 2] | 0, 89696);
     $50 = HEAP32[$10 >> 2] | 0;
    } else $50 = $11;
    HEAP32[$10 >> 2] = $50 & 16383 | ($45 << 14) + 2147467264;
   }
   if (($$0$i$i$i | 0) == -1) break;
   $$012$i$i = $$0$i$i$i;
   $$idx$val$i$i = HEAP32[$0 >> 2] | 0;
  }
  $57 = HEAP32[$6 >> 2] | 0;
 }
 HEAP32[$4 >> 2] = -1;
 $55 = $3 + 44 | 0;
 if (($57 | 0) < (HEAP32[$55 >> 2] | 0)) {
  $65 = HEAP32[$3 + 12 >> 2] | 0;
  $66 = $57;
 } else {
  $61 = $3 + 12 | 0;
  $63 = __Z13luaM_growaux_P9lua_StatePvPijiPKc(HEAP32[$0 + 16 >> 2] | 0, HEAP32[$61 >> 2] | 0, $55, 4, 2147483645, 89723) | 0;
  HEAP32[$61 >> 2] = $63;
  $65 = $63;
  $66 = HEAP32[$6 >> 2] | 0;
 }
 HEAP32[$65 + ($66 << 2) >> 2] = $1;
 $67 = HEAP32[$6 >> 2] | 0;
 $68 = $3 + 48 | 0;
 if (($67 | 0) < (HEAP32[$68 >> 2] | 0)) {
  $77 = HEAP32[$3 + 20 >> 2] | 0;
  $78 = $67;
  $76 = $77 + ($78 << 2) | 0;
  HEAP32[$76 >> 2] = $2;
  $79 = HEAP32[$6 >> 2] | 0;
  $80 = $79 + 1 | 0;
  HEAP32[$6 >> 2] = $80;
  return $79 | 0;
 } else {
  $73 = $3 + 20 | 0;
  $75 = __Z13luaM_growaux_P9lua_StatePvPijiPKc(HEAP32[$0 + 16 >> 2] | 0, HEAP32[$73 >> 2] | 0, $68, 4, 2147483645, 89723) | 0;
  HEAP32[$73 >> 2] = $75;
  $77 = $75;
  $78 = HEAP32[$6 >> 2] | 0;
  $76 = $77 + ($78 << 2) | 0;
  HEAP32[$76 >> 2] = $2;
  $79 = HEAP32[$6 >> 2] | 0;
  $80 = $79 + 1 | 0;
  HEAP32[$6 >> 2] = $80;
  return $79 | 0;
 }
 return 0;
}

function __ZL9codearithP9FuncState6OpCodeP7expdescS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0.0, $$033$i = 0.0, $20 = 0, $21 = 0.0, $23 = 0.0, $38 = 0, $40 = 0, $44 = 0, $51 = 0, $57 = 0, $64 = 0, $70 = 0, $77 = 0, $83 = 0, $90 = 0, label = 0;
 L1 : do if ((HEAP32[$2 >> 2] | 0) == 5) if ((HEAP32[$2 + 12 >> 2] | 0) == -1) if ((HEAP32[$2 + 16 >> 2] | 0) == -1) if ((HEAP32[$3 >> 2] | 0) == 5) if ((HEAP32[$3 + 12 >> 2] | 0) == -1) if ((HEAP32[$3 + 16 >> 2] | 0) == -1) {
  $20 = $2 + 4 | 0;
  $21 = +HEAPF32[$20 >> 2];
  $23 = +HEAPF32[$3 + 4 >> 2];
  switch ($1 | 0) {
  case 20:
   {
    $40 = 0;
    break L1;
    break;
   }
  case 12:
   {
    $$0$i = $21 + $23;
    label = 17;
    break;
   }
  case 13:
   {
    $$0$i = $21 - $23;
    label = 17;
    break;
   }
  case 14:
   {
    $$0$i = $21 * $23;
    label = 17;
    break;
   }
  case 15:
   {
    if ($23 == 0.0) {
     label = 20;
     break L1;
    }
    $$0$i = $21 / $23;
    label = 17;
    break;
   }
  case 16:
   {
    if ($23 == 0.0) {
     label = 20;
     break L1;
    }
    $$0$i = $21 - $23 * +__ZN13streflop_libm8__floorfEf(+($21 / $23));
    label = 17;
    break;
   }
  case 17:
   {
    $$0$i = +__ZN13streflop_libm14__ieee754_powfEff(+$21, +$23);
    label = 17;
    break;
   }
  case 18:
   {
    $$0$i = -$21;
    label = 17;
    break;
   }
  default:
   $$033$i = 0.0;
  }
  if ((label | 0) == 17) if ($$0$i == $$0$i & 0.0 == 0.0) $$033$i = $$0$i; else {
   label = 19;
   break;
  }
  HEAPF32[$20 >> 2] = $$033$i;
  return;
 } else label = 19; else label = 19; else label = 19; else label = 19; else label = 19; else label = 19; while (0);
 if ((label | 0) == 19) switch ($1 | 0) {
 case 18:
 case 20:
  {
   $40 = 0;
   break;
  }
 default:
  label = 20;
 }
 if ((label | 0) == 20) $40 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $3) | 0;
 $38 = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
 if (($38 | 0) > ($40 | 0)) {
  if ((HEAP32[$2 >> 2] | 0) == 12) {
   $44 = HEAP32[$2 + 4 >> 2] | 0;
   if (!($44 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($44 | 0)) {
    $51 = $0 + 36 | 0;
    HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + -1;
   }
  }
  if ((HEAP32[$3 >> 2] | 0) == 12) {
   $57 = HEAP32[$3 + 4 >> 2] | 0;
   if (!($57 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($57 | 0)) {
    $64 = $0 + 36 | 0;
    HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + -1;
   }
  }
 } else {
  if ((HEAP32[$3 >> 2] | 0) == 12) {
   $70 = HEAP32[$3 + 4 >> 2] | 0;
   if (!($70 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($70 | 0)) {
    $77 = $0 + 36 | 0;
    HEAP32[$77 >> 2] = (HEAP32[$77 >> 2] | 0) + -1;
   }
  }
  if ((HEAP32[$2 >> 2] | 0) == 12) {
   $83 = HEAP32[$2 + 4 >> 2] | 0;
   if (!($83 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($83 | 0)) {
    $90 = $0 + 36 | 0;
    HEAP32[$90 >> 2] = (HEAP32[$90 >> 2] | 0) + -1;
   }
  }
 }
 HEAP32[$2 + 4 >> 2] = __ZL9luaK_codeP9FuncStateji($0, $40 << 14 | $1 | $38 << 23, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
 HEAP32[$2 >> 2] = 11;
 return;
}

function __Z12lua_newstatePFPvS_S_jjES_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$066 = 0, $10 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $32 = 0, $4 = 0, $43 = 0, $46 = 0, $54 = 0, $56 = 0, $61 = 0, $63 = 0, $76 = 0, $8 = 0, $9 = 0, dest = 0, stop = 0;
 $2 = FUNCTION_TABLE_iiiii[$0 & 15]($1, 0, 0, 356) | 0;
 if (!$2) {
  $$0 = 0;
  return $$0 | 0;
 }
 $4 = $2 + 104 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP8[$2 + 4 >> 0] = 8;
 HEAP8[$2 + 124 >> 0] = 33;
 HEAP8[$2 + 5 >> 0] = 97;
 $8 = $2 + 16 | 0;
 HEAP32[$8 >> 2] = $4;
 $9 = $2 + 32 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $2 + 44 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$2 + 96 >> 2] = 0;
 HEAP32[$2 + 68 >> 2] = 0;
 HEAP8[$2 + 56 >> 0] = 0;
 HEAP32[$2 + 60 >> 2] = 0;
 HEAP8[$2 + 57 >> 0] = 1;
 HEAP32[$2 + 64 >> 2] = 0;
 HEAP32[$2 + 88 >> 2] = 0;
 $18 = $2 + 48 | 0;
 HEAP8[$2 + 6 >> 0] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 $21 = $2 + 40 | 0;
 HEAP32[$21 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP32[$2 + 100 >> 2] = 0;
 HEAP32[$2 + 76 >> 2] = 0;
 $25 = $18;
 HEAP32[$25 >> 2] = 0;
 HEAP32[$25 + 4 >> 2] = 0;
 HEAP32[$2 + 116 >> 2] = $0;
 HEAP32[$2 + 120 >> 2] = $1;
 HEAP32[$2 + 204 >> 2] = $2;
 $32 = $2 + 208 | 0;
 HEAP32[$2 + 220 >> 2] = $32;
 HEAP32[$2 + 224 >> 2] = $32;
 HEAP32[$2 + 168 >> 2] = 0;
 HEAP32[$2 + 112 >> 2] = 0;
 HEAP32[$2 + 108 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$2 + 200 >> 2] = 0;
 HEAP32[$2 + 156 >> 2] = 0;
 HEAP32[$2 + 164 >> 2] = 0;
 HEAP32[$2 + 192 >> 2] = 0;
 HEAP8[$2 + 125 >> 0] = 0;
 $43 = $2 + 132 | 0;
 HEAP32[$43 >> 2] = $2;
 HEAP32[$2 + 128 >> 2] = 0;
 HEAP32[$2 + 136 >> 2] = $43;
 $46 = $2 + 140 | 0;
 HEAP32[$46 >> 2] = 0;
 HEAP32[$46 + 4 >> 2] = 0;
 HEAP32[$46 + 8 >> 2] = 0;
 HEAP32[$46 + 12 >> 2] = 0;
 HEAP32[$2 + 172 >> 2] = 356;
 HEAP32[$2 + 184 >> 2] = 200;
 HEAP32[$2 + 188 >> 2] = 200;
 HEAP32[$2 + 180 >> 2] = 0;
 dest = $2 + 228 | 0;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (!(__Z20luaD_rawrunprotectedP9lua_StatePFvS0_PvES1_($2, 44, 0) | 0)) {
  __Z14LuaCreateMutexP9lua_State($2 | 0);
  $$066 = $2;
 } else {
  $54 = HEAP32[$8 >> 2] | 0;
  __Z10luaF_closeP9lua_StateP10lua_TValue($2, HEAP32[$9 >> 2] | 0);
  __Z12luaC_freeallP9lua_State($2);
  $56 = HEAP32[$8 >> 2] | 0;
  __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$56 >> 2] | 0, HEAP32[$56 + 8 >> 2] << 2, 0) | 0;
  $61 = $54 + 52 | 0;
  $63 = $54 + 60 | 0;
  HEAP32[$61 >> 2] = __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$61 >> 2] | 0, HEAP32[$63 >> 2] | 0, 0) | 0;
  HEAP32[$63 >> 2] = 0;
  __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$21 >> 2] | 0, (HEAP32[$18 >> 2] | 0) * 24 | 0, 0) | 0;
  __Z13luaM_realloc_P9lua_StatePvjj($2, HEAP32[$9 >> 2] | 0, HEAP32[$10 >> 2] << 3, 0) | 0;
  FUNCTION_TABLE_iiiii[HEAP32[$54 + 12 >> 2] & 15](HEAP32[$54 + 16 >> 2] | 0, $2, 356, 0) | 0;
  $$066 = 0;
 }
 $76 = $2 + 332 | 0;
 HEAP32[$76 >> 2] = 0;
 HEAP32[$76 + 4 >> 2] = 0;
 HEAP32[$76 + 8 >> 2] = 0;
 HEAP32[$76 + 12 >> 2] = 0;
 HEAP32[$76 + 16 >> 2] = 0;
 HEAP32[$76 + 20 >> 2] = 0;
 $$0 = $$066;
 return $$0 | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE8__monthsEv($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $9 = 0;
 if (!(HEAP8[106344] | 0)) if (___cxa_guard_acquire(106344) | 0) {
  if (!(HEAP8[106352] | 0)) if (___cxa_guard_acquire(106352) | 0) {
   $9 = 110580;
   do {
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 110868);
   ___cxa_atexit(181, 0, ___dso_handle | 0) | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110580, 103355) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110592, 103363) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110604, 103372) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110616, 103378) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110628, 103384) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110640, 103388) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110652, 103393) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110664, 103398) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110676, 103405) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110688, 103415) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110700, 103423) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110712, 103432) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110724, 103441) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110736, 103445) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110748, 103449) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110760, 103453) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110772, 103384) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110784, 103457) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110796, 103461) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110808, 103465) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110820, 103469) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110832, 103473) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110844, 103477) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110856, 103481) | 0;
  HEAP32[27717] = 110580;
 }
 return HEAP32[27717] | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE8__monthsEv($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $9 = 0;
 if (!(HEAP8[106424] | 0)) if (___cxa_guard_acquire(106424) | 0) {
  if (!(HEAP8[106432] | 0)) if (___cxa_guard_acquire(106432) | 0) {
   $9 = 111392;
   do {
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 111680);
   ___cxa_atexit(184, 0, ___dso_handle | 0) | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111392, 74716) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111404, 74748) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111416, 74784) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111428, 74808) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111440, 74832) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111452, 74848) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111464, 74868) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111476, 74888) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111488, 74916) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111500, 74956) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111512, 74988) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111524, 75024) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111536, 75060) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111548, 75076) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111560, 75092) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111572, 75108) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111584, 74832) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111596, 75124) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111608, 75140) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111620, 75156) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111632, 75172) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111644, 75188) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111656, 75204) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111668, 75220) | 0;
  HEAP32[27920] = 111392;
 }
 return HEAP32[27920] | 0;
}

function __Z11lua_replaceP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i$ph = 0, $$pre$phi41Z2D = 0, $$pre$phiZ2D = 0, $12 = 0, $28 = 0, $29 = 0, $3 = 0, $38 = 0, $46 = 0, $47 = 0, $52 = 0, $57 = 0, $66 = 0, $67 = 0, $74 = 0, $79 = 0, $88 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) == -10001) {
  $3 = $0 + 20 | 0;
  if ((HEAP32[$3 >> 2] | 0) == (HEAP32[$0 + 40 >> 2] | 0)) {
   __Z13luaG_runerrorP9lua_StatePKcz($0, 85506, $vararg_buffer);
   $$pre$phi41Z2D = $3;
   label = 13;
  } else {
   $$pre$phi41Z2D = $3;
   label = 13;
  }
 } else {
  L5 : do if (($1 | 0) > 0) {
   $12 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
   $$1$i$ph = $12 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $12 : 108164;
  } else {
   if (($1 | 0) > -1e4) {
    $$1$i$ph = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
    break;
   }
   switch ($1 | 0) {
   case -1e4:
    {
     $$1$i$ph = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
     break L5;
     break;
    }
   case -10001:
    {
     $$pre$phi41Z2D = $0 + 20 | 0;
     label = 13;
     break L1;
     break;
    }
   case -10002:
    {
     $$1$i$ph = $0 + 72 | 0;
     break L5;
     break;
    }
   default:
    {
     $28 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
     $29 = -10002 - $1 | 0;
     $$1$i$ph = ($29 | 0) > (HEAPU8[$28 + 7 >> 0] | 0 | 0) ? 108164 : $28 + 20 + ($29 + -1 << 3) | 0;
     break L5;
    }
   }
  } while (0);
  $66 = $0 + 8 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  HEAP32[$$1$i$ph >> 2] = HEAP32[$67 + -8 >> 2];
  HEAP32[$$1$i$ph + 4 >> 2] = HEAP32[$67 + -4 >> 2];
  if (($1 | 0) < -10002) {
   $74 = HEAP32[$66 >> 2] | 0;
   if ((HEAP32[$74 + -4 >> 2] | 0) > 3) {
    $79 = HEAP32[$74 + -8 >> 2] | 0;
    if (!(HEAP8[$79 + 5 >> 0] & 3)) $$pre$phiZ2D = $66; else {
     $88 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
     if (!(HEAP8[$88 + 5 >> 0] & 4)) $$pre$phiZ2D = $66; else {
      __Z13luaC_barrierfP9lua_StateP8GCObjectS2_($0, $88, $79);
      $$pre$phiZ2D = $66;
     }
    }
   } else $$pre$phiZ2D = $66;
  } else $$pre$phiZ2D = $66;
 } while (0);
 if ((label | 0) == 13) {
  $38 = (HEAP32[$$pre$phi41Z2D >> 2] | 0) + 4 | 0;
  HEAP32[$0 + 80 >> 2] = HEAP32[(HEAP32[HEAP32[$38 >> 2] >> 2] | 0) + 12 >> 2];
  HEAP32[$0 + 84 >> 2] = 5;
  $46 = HEAP32[HEAP32[$38 >> 2] >> 2] | 0;
  $47 = $0 + 8 | 0;
  HEAP32[$46 + 12 >> 2] = HEAP32[(HEAP32[$47 >> 2] | 0) + -8 >> 2];
  $52 = HEAP32[$47 >> 2] | 0;
  if ((HEAP32[$52 + -4 >> 2] | 0) > 3) {
   $57 = HEAP32[$52 + -8 >> 2] | 0;
   if (!(HEAP8[$57 + 5 >> 0] & 3)) $$pre$phiZ2D = $47; else if (!(HEAP8[$46 + 5 >> 0] & 4)) $$pre$phiZ2D = $47; else {
    __Z13luaC_barrierfP9lua_StateP8GCObjectS2_($0, $46, $57);
    $$pre$phiZ2D = $47;
   }
  } else $$pre$phiZ2D = $47;
 }
 HEAP32[$$pre$phiZ2D >> 2] = (HEAP32[$$pre$phiZ2D >> 2] | 0) + -8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 STACKTOP = sp;
 return;
}

function __ZN8AllyTeamC2ERKS_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa$i$i$i = 0, $$04$i$i$i = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $33 = 0, $36 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy3 = sp + 24 | 0;
 $$byval_copy2 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 $4 = $0 + 16 | 0;
 $5 = $1 + 16 | 0;
 HEAP32[$4 >> 2] = 0;
 $6 = $0 + 20 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $0 + 24 | 0;
 HEAP32[$7 >> 2] = 0;
 $8 = $1 + 20 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 do if ($9 | 0) if (($9 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($4); else {
  $14 = (($9 + -1 | 0) >>> 5) + 1 | 0;
  HEAP32[$4 >> 2] = __Znwj($14 << 2) | 0;
  HEAP32[$6 >> 2] = 0;
  HEAP32[$7 >> 2] = $14;
  $17 = HEAP32[$5 >> 2] | 0;
  HEAP32[$2 >> 2] = $17;
  HEAP32[$2 + 4 >> 2] = 0;
  $19 = HEAP32[$8 >> 2] | 0;
  HEAP32[$3 >> 2] = $17 + ($19 >>> 5 << 2);
  HEAP32[$3 + 4 >> 2] = $19 & 31;
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$$byval_copy3 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb1ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($4, $$byval_copy2, $$byval_copy3);
  break;
 } while (0);
 $25 = $0 + 28 | 0;
 $26 = $1 + 28 | 0;
 $27 = $0 + 32 | 0;
 HEAP32[$27 >> 2] = 0;
 HEAP32[$27 + 4 >> 2] = 0;
 HEAP32[$27 + 8 >> 2] = 0;
 HEAP32[$27 + 12 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = -1;
 HEAP32[$0 + 52 >> 2] = 0;
 __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($25, HEAP32[$1 + 44 >> 2] | 0);
 $33 = HEAP32[$1 + 40 >> 2] | 0;
 L7 : do if (!$33) $$0$lcssa$i$i$i = 0; else {
  $36 = HEAP32[$1 + 32 >> 2] | 0;
  $$04$i$i$i = 0;
  while (1) {
   if ((HEAP8[$36 + $$04$i$i$i >> 0] | 0) == 2) {
    $$0$lcssa$i$i$i = $$04$i$i$i;
    break L7;
   }
   $40 = $$04$i$i$i + 1 | 0;
   if ($40 >>> 0 < $33 >>> 0) $$04$i$i$i = $40; else {
    $$0$lcssa$i$i$i = $40;
    break;
   }
  }
 } while (0);
 HEAP32[$2 >> 2] = $26;
 HEAP32[$2 + 4 >> 2] = $$0$lcssa$i$i$i;
 HEAP32[$3 >> 2] = $26;
 HEAP32[$3 + 4 >> 2] = $33;
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy3 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE6insertENSD_14const_iteratorESE_($25, $$byval_copy2, $$byval_copy3);
 STACKTOP = sp;
 return;
}

function __Z13luaV_settableP9lua_StatePK10lua_TValuePS1_S4_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$05775 = 0, $$076 = 0, $$3 = 0, $10 = 0, $11 = 0, $15 = 0, $24 = 0, $27 = 0, $4 = 0, $41 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $59 = 0, $6 = 0, $65 = 0, $7 = 0, $73 = 0, $78 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $4 = sp + 8 | 0;
 $5 = $0 + 16 | 0;
 $6 = $4 + 4 | 0;
 $$05775 = 0;
 $$076 = $1;
 $7 = HEAP32[$1 + 4 >> 2] | 0;
 while (1) {
  if (($7 | 0) == 5) {
   $9 = HEAP32[$$076 >> 2] | 0;
   $10 = __Z8luaH_setP9lua_StateP5TablePK10lua_TValue($0, $9, $2) | 0;
   $11 = $10 + 4 | 0;
   if (HEAP32[$11 >> 2] | 0) {
    label = 7;
    break;
   }
   $15 = HEAP32[$9 + 8 >> 2] | 0;
   if (!$15) {
    label = 7;
    break;
   }
   if (HEAP8[$15 + 6 >> 0] & 2) {
    label = 7;
    break;
   }
   $24 = __Z10luaT_gettmP5Table3TMSP7TString($15, 1, HEAP32[(HEAP32[$5 >> 2] | 0) + 164 >> 2] | 0) | 0;
   if (!$24) {
    label = 7;
    break;
   } else $$3 = $24;
  } else {
   $41 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $$076, 1) | 0;
   if (!(HEAP32[$41 + 4 >> 2] | 0)) {
    __Z14luaG_typeerrorP9lua_StatePK10lua_TValuePKc($0, $$076, 89525);
    $$3 = $41;
   } else $$3 = $41;
  }
  $45 = $$3 + 4 | 0;
  $7 = HEAP32[$45 >> 2] | 0;
  if (($7 | 0) == 6) {
   label = 14;
   break;
  }
  HEAP32[$4 >> 2] = HEAP32[$$3 >> 2];
  HEAP32[$6 >> 2] = $7;
  $$05775 = $$05775 + 1 | 0;
  if (($$05775 | 0) >= 100) {
   label = 18;
   break;
  } else $$076 = $4;
 }
 if ((label | 0) == 7) {
  HEAP32[$10 >> 2] = HEAP32[$3 >> 2];
  $27 = $3 + 4 | 0;
  HEAP32[$11 >> 2] = HEAP32[$27 >> 2];
  HEAP8[$9 + 6 >> 0] = 0;
  if ((HEAP32[$27 >> 2] | 0) <= 3) {
   STACKTOP = sp;
   return;
  }
  if (!(HEAP8[(HEAP32[$3 >> 2] | 0) + 5 >> 0] & 3)) {
   STACKTOP = sp;
   return;
  }
  if (!(HEAP8[$9 + 5 >> 0] & 4)) {
   STACKTOP = sp;
   return;
  }
  __Z16luaC_barrierbackP9lua_StateP5Table($0, $9);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 14) {
  $49 = $0 + 8 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  HEAP32[$50 >> 2] = HEAP32[$$3 >> 2];
  HEAP32[$50 + 4 >> 2] = HEAP32[$45 >> 2];
  $54 = HEAP32[$49 >> 2] | 0;
  HEAP32[$54 + 8 >> 2] = HEAP32[$$076 >> 2];
  HEAP32[$54 + 12 >> 2] = HEAP32[$$076 + 4 >> 2];
  $59 = HEAP32[$49 >> 2] | 0;
  HEAP32[$59 + 16 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$59 + 20 >> 2] = HEAP32[$2 + 4 >> 2];
  $65 = HEAP32[$49 >> 2] | 0;
  HEAP32[$65 + 24 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$65 + 28 >> 2] = HEAP32[$3 + 4 >> 2];
  $73 = HEAP32[$49 >> 2] | 0;
  if (((HEAP32[$0 + 28 >> 2] | 0) - $73 | 0) < 33) {
   __Z14luaD_growstackP9lua_Statei($0, 4);
   $78 = HEAP32[$49 >> 2] | 0;
  } else $78 = $73;
  HEAP32[$49 >> 2] = $78 + 32;
  __Z9luaD_callP9lua_StateP10lua_TValuei($0, $78, 0);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 18) {
  __Z13luaG_runerrorP9lua_StatePKcz($0, 89548, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$pre$phiZ2D = 0, $$sroa$023$132 = 0, $12 = 0, $17 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $49 = 0, $65 = 0, $7 = 0, $8 = 0, $87 = 0, $88 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP8[$0 >> 0] = 0;
 $7 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 $8 = $7 + 16 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 if (!$9) {
  $12 = HEAP32[$7 + 72 >> 2] | 0;
  if ($12 | 0) __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  do if (!$2) {
   $17 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
   if (HEAP32[$17 + 4 >> 2] & 4096 | 0) {
    HEAP32[$3 >> 2] = __ZNKSt3__28ios_base6getlocEv($17) | 0;
    $23 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 110168) | 0;
    __ZNSt3__26localeD2Ev($3);
    $29 = HEAP32[$1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
    $30 = $23 + 8 | 0;
    $31 = $29;
    $32 = ($29 | 0) == 0;
    $33 = $31 + 12 | 0;
    $34 = $31 + 16 | 0;
    $35 = $29;
    $36 = $29;
    $37 = $36 + 12 | 0;
    $38 = $36 + 16 | 0;
    $39 = $29;
    $40 = $29;
    while (1) {
     if ($32) {
      $$pre$phiZ2D = 0;
      $$sroa$023$132 = 0;
      break;
     }
     if ((HEAP32[$33 >> 2] | 0) == (HEAP32[$34 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] & 255]($31) | 0) == -1) {
      $$pre$phiZ2D = 0;
      $$sroa$023$132 = 0;
      break;
     }
     $49 = HEAP32[$37 >> 2] | 0;
     if (($49 | 0) == (HEAP32[$38 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$39 >> 2] | 0) + 36 >> 2] & 255]($36) | 0; else $$0$i$i = HEAPU8[$49 >> 0] | 0;
     if (($$0$i$i & 255) << 24 >> 24 <= -1) {
      $$pre$phiZ2D = $36;
      $$sroa$023$132 = $29;
      break;
     }
     if (!(HEAP16[(HEAP32[$30 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
      $$pre$phiZ2D = $36;
      $$sroa$023$132 = $29;
      break;
     }
     $65 = HEAP32[$37 >> 2] | 0;
     if (($65 | 0) == (HEAP32[$38 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$40 >> 2] | 0) + 40 >> 2] & 255]($36) | 0;
      continue;
     } else {
      HEAP32[$37 >> 2] = $65 + 1;
      continue;
     }
    }
    if ($$sroa$023$132 | 0) {
     if ((HEAP32[$$pre$phiZ2D + 12 >> 2] | 0) != (HEAP32[$$pre$phiZ2D + 16 >> 2] | 0)) break;
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$sroa$023$132 >> 2] | 0) + 36 >> 2] & 255]($$pre$phiZ2D) | 0) != -1) break;
    }
    $87 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
    $88 = $87 + 16 | 0;
    HEAP32[$88 >> 2] = HEAP32[$88 >> 2] | (HEAP32[$87 + 24 >> 2] | 0) == 0 | 6;
   }
  } while (0);
  HEAP8[$0 >> 0] = (HEAP32[$1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] | 0) == 0 & 1;
 } else HEAP32[$8 >> 2] = $9 | (HEAP32[$7 + 24 >> 2] | 0) == 0 | 4;
 STACKTOP = sp;
 return;
}

function _wcsrtombs($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$05675 = 0, $$057$lcssa = 0, $$05785 = 0, $$05874 = 0, $$1 = 0, $$159 = 0, $$260$lcssa = 0, $$26084 = 0, $$279 = 0, $$3 = 0, $$361 = 0, $$478 = 0, $$5 = 0, $$pn = 0, $10 = 0, $12 = 0, $18 = 0, $19 = 0, $24 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $40 = 0, $51 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 L1 : do if (!$0) {
  $7 = HEAP32[$1 >> 2] | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) $$0 = 0; else {
   $$05675 = $7;
   $$05874 = 0;
   $10 = $8;
   while (1) {
    if ($10 >>> 0 > 127) {
     $12 = _wcrtomb($4, $10, 0) | 0;
     if (($12 | 0) == -1) {
      $$0 = -1;
      break L1;
     } else $$pn = $12;
    } else $$pn = 1;
    $$159 = $$pn + $$05874 | 0;
    $$05675 = $$05675 + 4 | 0;
    $10 = HEAP32[$$05675 >> 2] | 0;
    if (!$10) {
     $$0 = $$159;
     break;
    } else $$05874 = $$159;
   }
  }
 } else {
  L9 : do if ($2 >>> 0 > 3) {
   $$05785 = $0;
   $$26084 = $2;
   $19 = HEAP32[$1 >> 2] | 0;
   while (1) {
    $18 = HEAP32[$19 >> 2] | 0;
    if (($18 + -1 | 0) >>> 0 > 126) {
     if (!$18) break;
     $24 = _wcrtomb($$05785, $18, 0) | 0;
     if (($24 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     $$1 = $$05785 + $24 | 0;
     $$361 = $$26084 - $24 | 0;
     $32 = $19;
    } else {
     HEAP8[$$05785 >> 0] = $18;
     $$1 = $$05785 + 1 | 0;
     $$361 = $$26084 + -1 | 0;
     $32 = HEAP32[$1 >> 2] | 0;
    }
    $19 = $32 + 4 | 0;
    HEAP32[$1 >> 2] = $19;
    if ($$361 >>> 0 <= 3) {
     $$057$lcssa = $$1;
     $$260$lcssa = $$361;
     break L9;
    } else {
     $$05785 = $$1;
     $$26084 = $$361;
    }
   }
   HEAP8[$$05785 >> 0] = 0;
   HEAP32[$1 >> 2] = 0;
   $$0 = $2 - $$26084 | 0;
   break L1;
  } else {
   $$057$lcssa = $0;
   $$260$lcssa = $2;
  } while (0);
  if (!$$260$lcssa) $$0 = $2; else {
   $$279 = $$057$lcssa;
   $$478 = $$260$lcssa;
   $35 = HEAP32[$1 >> 2] | 0;
   while (1) {
    $34 = HEAP32[$35 >> 2] | 0;
    if (($34 + -1 | 0) >>> 0 > 126) {
     if (!$34) {
      label = 19;
      break;
     }
     $40 = _wcrtomb($4, $34, 0) | 0;
     if (($40 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     if ($$478 >>> 0 < $40 >>> 0) {
      label = 22;
      break;
     }
     _wcrtomb($$279, HEAP32[$35 >> 2] | 0, 0) | 0;
     $$3 = $$279 + $40 | 0;
     $$5 = $$478 - $40 | 0;
     $51 = $35;
    } else {
     HEAP8[$$279 >> 0] = $34;
     $$3 = $$279 + 1 | 0;
     $$5 = $$478 + -1 | 0;
     $51 = HEAP32[$1 >> 2] | 0;
    }
    $35 = $51 + 4 | 0;
    HEAP32[$1 >> 2] = $35;
    if (!$$5) {
     $$0 = $2;
     break L1;
    } else {
     $$279 = $$3;
     $$478 = $$5;
    }
   }
   if ((label | 0) == 19) {
    HEAP8[$$279 >> 0] = 0;
    HEAP32[$1 >> 2] = 0;
    $$0 = $2 - $$478 | 0;
    break;
   } else if ((label | 0) == 22) {
    $$0 = $2 - $$478 | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z13luaX_lexerrorP8LexStatePKci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $33 = 0, $35 = 0, $37 = 0, $4 = 0, $48 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $vararg_buffer14 = sp + 112 | 0;
 $vararg_buffer11 = sp + 104 | 0;
 $vararg_buffer8 = sp + 96 | 0;
 $vararg_buffer3 = sp + 80 | 0;
 $vararg_buffer = sp;
 $3 = sp + 120 | 0;
 $4 = $0 + 44 | 0;
 __Z12luaO_chunkidPcPKcj($3, (HEAP32[$4 >> 2] | 0) + 16 | 0, 80);
 $7 = $0 + 32 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $0 + 4 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $3;
 HEAP32[$vararg_buffer + 4 >> 2] = $10;
 HEAP32[$vararg_buffer + 8 >> 2] = $1;
 $11 = __Z16luaO_pushfstringP9lua_StatePKcz($8, 89955, $vararg_buffer) | 0;
 if (!$2) {
  $48 = HEAP32[$7 >> 2] | 0;
  __Z10luaD_throwP9lua_Statei($48, 3);
 }
 $13 = HEAP32[$7 >> 2] | 0;
 do if (($2 + -284 | 0) >>> 0 < 3) {
  $14 = $0 + 40 | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  $16 = $15 + 4 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  $19 = $15 + 8 | 0;
  $20 = HEAP32[$19 >> 2] | 0;
  if (($17 + 1 | 0) >>> 0 > $20 >>> 0) {
   if ($20 >>> 0 > 2147483645) {
    __Z12luaO_chunkidPcPKcj($vararg_buffer, (HEAP32[$4 >> 2] | 0) + 16 | 0, 80);
    $25 = HEAP32[$7 >> 2] | 0;
    $26 = HEAP32[$9 >> 2] | 0;
    HEAP32[$vararg_buffer3 >> 2] = $vararg_buffer;
    HEAP32[$vararg_buffer3 + 4 >> 2] = $26;
    HEAP32[$vararg_buffer3 + 8 >> 2] = 89965;
    __Z16luaO_pushfstringP9lua_StatePKcz($25, 89955, $vararg_buffer3) | 0;
    __Z10luaD_throwP9lua_Statei(HEAP32[$7 >> 2] | 0, 3);
   }
   $28 = $20 << 1;
   if (($28 | 0) == -2) {
    $$pre$phiZ2D = $15;
    $33 = __Z11luaM_toobigP9lua_State($13) | 0;
   } else {
    $$pre$phiZ2D = $15;
    $33 = __Z13luaM_realloc_P9lua_StatePvjj($13, HEAP32[$15 >> 2] | 0, $20, $28) | 0;
   }
   HEAP32[$$pre$phiZ2D >> 2] = $33;
   HEAP32[$19 >> 2] = $28;
   $35 = HEAP32[$16 >> 2] | 0;
   $37 = $33;
  } else {
   $35 = $17;
   $37 = HEAP32[$15 >> 2] | 0;
  }
  HEAP32[$16 >> 2] = $35 + 1;
  HEAP8[$37 + $35 >> 0] = 0;
  $$0$i = HEAP32[HEAP32[$14 >> 2] >> 2] | 0;
 } else {
  if (($2 | 0) >= 257) {
   $$0$i = HEAP32[69388 + ($2 + -257 << 2) >> 2] | 0;
   break;
  }
  if (!(_iscntrl($2) | 0)) {
   HEAP32[$vararg_buffer11 >> 2] = $2;
   $$0$i = __Z16luaO_pushfstringP9lua_StatePKcz($13, 89952, $vararg_buffer11) | 0;
   break;
  } else {
   HEAP32[$vararg_buffer8 >> 2] = $2;
   $$0$i = __Z16luaO_pushfstringP9lua_StatePKcz($13, 89943, $vararg_buffer8) | 0;
   break;
  }
 } while (0);
 HEAP32[$vararg_buffer14 >> 2] = $11;
 HEAP32[$vararg_buffer14 + 4 >> 2] = $$0$i;
 __Z16luaO_pushfstringP9lua_StatePKcz($13, 89990, $vararg_buffer14) | 0;
 $48 = HEAP32[$7 >> 2] | 0;
 __Z10luaD_throwP9lua_Statei($48, 3);
}

function __ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE5ClampERKS6_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$speculated$i$i$i$i$i = 0, $$sroa$speculated$i$i$i$i$i7 = 0, $10 = 0, $12 = 0, $13 = 0, $17 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0, $34 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $55 = 0, $6 = 0, $61 = 0, $64 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $5 = $3 + 4 | 0;
 HEAP8[$5 >> 0] = 0;
 HEAP32[$3 >> 2] = 67692;
 $6 = $3 + 8 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($4, $2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($6, $4) | 0;
 HEAP8[$5 >> 0] = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 if (HEAP8[$1 + 100 >> 0] | 0) {
  $10 = $1 + 104 | 0;
  $12 = HEAP8[$6 + 11 >> 0] | 0;
  $13 = $12 << 24 >> 24 < 0;
  $17 = $13 ? HEAP32[$3 + 12 >> 2] | 0 : $12 & 255;
  $19 = HEAP8[$10 + 11 >> 0] | 0;
  $20 = $19 << 24 >> 24 < 0;
  $24 = $20 ? HEAP32[$1 + 108 >> 2] | 0 : $19 & 255;
  $25 = $24 >>> 0 < $17 >>> 0;
  $$sroa$speculated$i$i$i$i$i = $25 ? $24 : $17;
  if (!$$sroa$speculated$i$i$i$i$i) label = 4; else {
   $31 = _memcmp($13 ? HEAP32[$6 >> 2] | 0 : $6, $20 ? HEAP32[$10 >> 2] | 0 : $10, $$sroa$speculated$i$i$i$i$i) | 0;
   if (!$31) label = 4; else $34 = $31;
  }
  if ((label | 0) == 4) $34 = $17 >>> 0 < $24 >>> 0 ? -1 : $25 & 1;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($6, ($34 | 0) < 0 ? $10 : $6) | 0;
  HEAP8[$5 >> 0] = 1;
 }
 if (!(HEAP8[$1 + 120 >> 0] | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $6);
  HEAP32[$3 >> 2] = 67692;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  STACKTOP = sp;
  return;
 }
 $40 = $1 + 124 | 0;
 $42 = HEAP8[$40 + 11 >> 0] | 0;
 $43 = $42 << 24 >> 24 < 0;
 $47 = $43 ? HEAP32[$1 + 128 >> 2] | 0 : $42 & 255;
 $49 = HEAP8[$6 + 11 >> 0] | 0;
 $50 = $49 << 24 >> 24 < 0;
 $54 = $50 ? HEAP32[$3 + 12 >> 2] | 0 : $49 & 255;
 $55 = $54 >>> 0 < $47 >>> 0;
 $$sroa$speculated$i$i$i$i$i7 = $55 ? $54 : $47;
 if (!$$sroa$speculated$i$i$i$i$i7) label = 9; else {
  $61 = _memcmp($43 ? HEAP32[$40 >> 2] | 0 : $40, $50 ? HEAP32[$6 >> 2] | 0 : $6, $$sroa$speculated$i$i$i$i$i7) | 0;
  if (!$61) label = 9; else $64 = $61;
 }
 if ((label | 0) == 9) $64 = $47 >>> 0 < $54 >>> 0 ? -1 : $55 & 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($6, ($64 | 0) < 0 ? $40 : $6) | 0;
 HEAP8[$5 >> 0] = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $6);
 HEAP32[$3 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 STACKTOP = sp;
 return;
}

function __ZNSt3__210__stdinbufIcE9__getcharEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $2 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $43 = 0, $49 = 0, $5 = 0, $6 = 0, $62 = 0, $66 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 52 | 0;
 if (!(HEAP8[$6 >> 0] | 0)) {
  $12 = HEAP32[$0 + 44 >> 2] | 0;
  $$sroa$speculated = ($12 | 0) > 1 ? $12 : 1;
  $14 = $0 + 32 | 0;
  $$052 = 0;
  while (1) {
   if (($$052 | 0) >= ($$sroa$speculated | 0)) {
    label = 8;
    break;
   }
   $17 = _getc(HEAP32[$14 >> 2] | 0) | 0;
   if (($17 | 0) == -1) {
    $$10 = -1;
    break;
   }
   HEAP8[$2 + $$052 >> 0] = $17;
   $$052 = $$052 + 1 | 0;
  }
  if ((label | 0) == 8) {
   do if (!(HEAP8[$0 + 53 >> 0] | 0)) {
    $26 = $0 + 40 | 0;
    $27 = $0 + 36 | 0;
    $28 = $3 + 1 | 0;
    $$048 = $$sroa$speculated;
    L11 : while (1) {
     $29 = HEAP32[$26 >> 2] | 0;
     $30 = $29;
     $32 = HEAP32[$30 >> 2] | 0;
     $35 = HEAP32[$30 + 4 >> 2] | 0;
     $36 = HEAP32[$27 >> 2] | 0;
     $37 = $2 + $$048 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$36 >> 2] | 0) + 16 >> 2] & 15]($36, $29, $2, $37, $4, $3, $28, $5) | 0) {
     case 3:
      {
       label = 15;
       break L11;
       break;
      }
     case 2:
      {
       label = 17;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     $43 = HEAP32[$26 >> 2] | 0;
     HEAP32[$43 >> 2] = $32;
     HEAP32[$43 + 4 >> 2] = $35;
     if (($$048 | 0) == 8) {
      label = 17;
      break;
     }
     $49 = _getc(HEAP32[$14 >> 2] | 0) | 0;
     if (($49 | 0) == -1) {
      label = 17;
      break;
     }
     HEAP8[$37 >> 0] = $49;
     $$048 = $$048 + 1 | 0;
    }
    if ((label | 0) == 15) HEAP8[$3 >> 0] = HEAP8[$2 >> 0] | 0; else if ((label | 0) == 17) {
     $$9 = -1;
     break;
    }
    $$351 = $$048;
    label = 18;
   } else {
    HEAP8[$3 >> 0] = HEAP8[$2 >> 0] | 0;
    $$351 = $$sroa$speculated;
    label = 18;
   } while (0);
   L21 : do if ((label | 0) == 18) {
    if ($1) {
     $62 = HEAP8[$3 >> 0] | 0;
     HEAP32[$0 + 48 >> 2] = $62 & 255;
     $66 = $62;
    } else {
     $$0 = $$351;
     while (1) {
      if (($$0 | 0) <= 0) break;
      $$0 = $$0 + -1 | 0;
      if ((_ungetc(HEAPU8[$2 + $$0 >> 0] | 0, HEAP32[$14 >> 2] | 0) | 0) == -1) {
       $$9 = -1;
       break L21;
      }
     }
     $66 = HEAP8[$3 >> 0] | 0;
    }
    $$9 = $66 & 255;
   } while (0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $9 = $0 + 48 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($1) {
   HEAP32[$9 >> 2] = -1;
   HEAP8[$6 >> 0] = 0;
   $$11 = $10;
  } else $$11 = $10;
 }
 STACKTOP = sp;
 return $$11 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$pre$i3$i$i12 = 0, $18 = 0, $19 = 0, $20 = 0, $32 = 0, $34 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $61 = 0, $73 = 0, $74 = 0, $88 = 0, label = 0;
 $5 = $4 + 8 | 0;
 L1 : while (1) {
  $6 = HEAP32[$1 >> 2] | 0;
  do if (!$6) $18 = 0; else if ((HEAP32[$6 + 12 >> 2] | 0) == (HEAP32[$6 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 255]($6) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $18 = 0;
   break;
  } else {
   $18 = HEAP32[$1 >> 2] | 0;
   break;
  } else $18 = $6; while (0);
  $19 = ($18 | 0) == 0;
  $20 = HEAP32[$2 >> 2] | 0;
  do if (!$20) label = 12; else {
   if ((HEAP32[$20 + 12 >> 2] | 0) != (HEAP32[$20 + 16 >> 2] | 0)) if ($19) {
    $88 = $20;
    break;
   } else {
    $$pre$i3$i$i12 = $20;
    break L1;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 255]($20) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 12;
    break;
   } else if ($19) {
    $88 = $20;
    break;
   } else {
    $$pre$i3$i$i12 = $20;
    break L1;
   }
  } while (0);
  if ((label | 0) == 12) {
   label = 0;
   if ($19) {
    $$pre$i3$i$i12 = 0;
    break;
   } else $88 = 0;
  }
  $32 = HEAP32[$1 >> 2] | 0;
  $34 = HEAP32[$32 + 12 >> 2] | 0;
  if (($34 | 0) == (HEAP32[$32 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 255]($32) | 0; else $$0$i$i = HEAPU8[$34 >> 0] | 0;
  if (($$0$i$i & 255) << 24 >> 24 <= -1) {
   $$pre$i3$i$i12 = $88;
   break;
  }
  if (!(HEAP16[(HEAP32[$5 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
   $$pre$i3$i$i12 = $88;
   break;
  }
  $51 = HEAP32[$1 >> 2] | 0;
  $52 = $51 + 12 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  if (($53 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 40 >> 2] & 255]($51) | 0;
   continue;
  } else {
   HEAP32[$52 >> 2] = $53 + 1;
   continue;
  }
 }
 $61 = HEAP32[$1 >> 2] | 0;
 do if (!$61) $73 = 0; else if ((HEAP32[$61 + 12 >> 2] | 0) == (HEAP32[$61 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$61 >> 2] | 0) + 36 >> 2] & 255]($61) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $73 = 0;
  break;
 } else {
  $73 = HEAP32[$1 >> 2] | 0;
  break;
 } else $73 = $61; while (0);
 $74 = ($73 | 0) == 0;
 do if (!$$pre$i3$i$i12) label = 32; else {
  if ((HEAP32[$$pre$i3$i$i12 + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i12 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i12 >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i12) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 32;
   break;
  }
  if (!$74) label = 33;
 } while (0);
 if ((label | 0) == 32) if ($74) label = 33;
 if ((label | 0) == 33) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 return;
}

function __ZL10getobjnameP9lua_StateP8CallInfoiPPKc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $$0$i60 = 0, $$0$i61 = 0, $$3 = 0, $$tr65 = 0, $12 = 0, $17 = 0, $23 = 0, $25 = 0, $30 = 0, $34 = 0, $36 = 0, $4 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $6 = 0, $60 = 0, $66 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $8 = 0, label = 0;
 $4 = $1 + 4 | 0;
 $5 = $0 + 20 | 0;
 $6 = $0 + 24 | 0;
 $7 = $1 + 12 | 0;
 $$tr65 = $2;
 L1 : while (1) {
  $8 = HEAP32[$4 >> 2] | 0;
  if ((HEAP32[$8 + 4 >> 2] | 0) != 6) {
   $$3 = 0;
   label = 24;
   break;
  }
  $12 = HEAP32[$8 >> 2] | 0;
  if (HEAP8[$12 + 6 >> 0] | 0) {
   $$3 = 0;
   label = 24;
   break;
  }
  $17 = HEAP32[$12 + 16 >> 2] | 0;
  if (!(HEAP8[$12 + 6 >> 0] | 0)) {
   if ((HEAP32[$5 >> 2] | 0) == ($1 | 0)) {
    $23 = HEAP32[$6 >> 2] | 0;
    HEAP32[$7 >> 2] = $23;
    $25 = HEAP32[$8 >> 2] | 0;
    $30 = $23;
   } else {
    $25 = $12;
    $30 = HEAP32[$7 >> 2] | 0;
   }
   $$0$i = ($30 - (HEAP32[(HEAP32[$25 + 16 >> 2] | 0) + 12 >> 2] | 0) >> 2) + -1 | 0;
  } else $$0$i = -1;
  $34 = __Z17luaF_getlocalnamePK5Protoii($17, $$tr65 + 1 | 0, $$0$i) | 0;
  HEAP32[$3 >> 2] = $34;
  if ($34 | 0) {
   $$3 = 89849;
   label = 24;
   break;
  }
  $36 = __ZL8symbexecPK5Protoii($17, $$0$i, $$tr65) | 0;
  switch ($36 & 63) {
  case 5:
   {
    label = 11;
    break L1;
    break;
   }
  case 6:
   {
    label = 13;
    break L1;
    break;
   }
  case 4:
   {
    label = 17;
    break L1;
    break;
   }
  case 11:
   {
    label = 20;
    break L1;
    break;
   }
  case 0:
   break;
  default:
   {
    $$3 = 0;
    label = 24;
    break L1;
   }
  }
  $$tr65 = $36 >>> 23;
  if ($$tr65 >>> 0 >= ($36 >>> 6 & 255) >>> 0) {
   $$3 = 0;
   label = 24;
   break;
  }
 }
 if ((label | 0) == 11) {
  HEAP32[$3 >> 2] = (HEAP32[(HEAP32[$17 + 8 >> 2] | 0) + ($36 >>> 14 << 3) >> 2] | 0) + 16;
  $$3 = 86821;
  return $$3 | 0;
 } else if ((label | 0) == 13) {
  $47 = $36 >>> 14;
  if (!($47 & 256)) $$0$i61 = 86819; else {
   $50 = $47 & 255;
   $52 = HEAP32[$17 + 8 >> 2] | 0;
   if ((HEAP32[$52 + ($50 << 3) + 4 >> 2] | 0) == 4) $$0$i61 = (HEAP32[$52 + ($50 << 3) >> 2] | 0) + 16 | 0; else $$0$i61 = 86819;
  }
  HEAP32[$3 >> 2] = $$0$i61;
  $$3 = 86828;
  return $$3 | 0;
 } else if ((label | 0) == 17) {
  $60 = HEAP32[$17 + 28 >> 2] | 0;
  if (!$60) $66 = 86819; else $66 = (HEAP32[$60 + ($36 >>> 23 << 2) >> 2] | 0) + 16 | 0;
  HEAP32[$3 >> 2] = $66;
  $$3 = 86834;
  return $$3 | 0;
 } else if ((label | 0) == 20) {
  $67 = $36 >>> 14;
  if (!($67 & 256)) $$0$i60 = 86819; else {
   $70 = $67 & 255;
   $72 = HEAP32[$17 + 8 >> 2] | 0;
   if ((HEAP32[$72 + ($70 << 3) + 4 >> 2] | 0) == 4) $$0$i60 = (HEAP32[$72 + ($70 << 3) >> 2] | 0) + 16 | 0; else $$0$i60 = 86819;
  }
  HEAP32[$3 >> 2] = $$0$i60;
  $$3 = 86842;
  return $$3 | 0;
 } else if ((label | 0) == 24) return $$3 | 0;
 return 0;
}

function __ZL16CheckForNaNsRealP9lua_StateRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$off0$lcssa = 0, $$0$off047 = 0, $$2$off0 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0.0, $3 = 0, $30 = 0, $4 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = sp + 20 | 0;
 $3 = sp + 8 | 0;
 __Z15luaL_checkstackP9lua_StateiPKc($0, 3, 84015);
 $4 = __Z10lua_gettopP9lua_State($0) | 0;
 __Z11lua_pushnilP9lua_State($0);
 if (!(__Z8lua_nextP9lua_Statei($0, $4) | 0)) {
  $$0$off0$lcssa = 0;
  STACKTOP = sp;
  return $$0$off0$lcssa | 0;
 }
 $7 = $1 + 11 | 0;
 $8 = $1 + 4 | 0;
 $$0$off047 = 0;
 while (1) {
  if ((__Z8lua_typeP9lua_Statei($0, -1) | 0) == 5) {
   __Z13lua_pushvalueP9lua_Statei($0, -2);
   $11 = __Z13lua_tolstringP9lua_StateiPj($0, -1, 0) | 0;
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   $12 = HEAP8[$7 >> 0] | 0;
   $13 = $12 << 24 >> 24 < 0;
   $16 = $13 ? HEAP32[$8 >> 2] | 0 : $12 & 255;
   $17 = _strlen($11) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($3, $13 ? HEAP32[$1 >> 2] | 0 : $1, $16, $16 + $17 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($3, $11, $17) | 0;
   $21 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($3, 102189) | 0;
   HEAP32[$2 >> 2] = HEAP32[$21 >> 2];
   HEAP32[$2 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
   HEAP32[$21 >> 2] = 0;
   HEAP32[$21 + 4 >> 2] = 0;
   HEAP32[$21 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   __Z10lua_settopP9lua_Statei($0, -2);
   $23 = $$0$off047 | (__ZL16CheckForNaNsRealP9lua_StateRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $2) | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $$2$off0 = $23;
  } else if (!(__Z12lua_isnumberP9lua_Statei($0, -1) | 0)) $$2$off0 = $$0$off047; else {
   $26 = +__Z12lua_tonumberP9lua_Statei($0, -1);
   if (((HEAPF32[tempDoublePtr >> 2] = $26, HEAP32[tempDoublePtr >> 2] | 0) & 2139095040) >>> 0 > 2139095039) {
    __Z13lua_pushvalueP9lua_Statei($0, -2);
    $30 = __Z13lua_tolstringP9lua_StateiPj($0, -1, 0) | 0;
    HEAP32[$vararg_buffer >> 2] = (HEAP8[$7 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
    HEAP32[$vararg_buffer + 4 >> 2] = $30;
    _log_frontend_record(40, 114224, 84032, $vararg_buffer);
    __Z10lua_settopP9lua_Statei($0, -2);
    $$2$off0 = 1;
   } else $$2$off0 = $$0$off047;
  }
  __Z10lua_settopP9lua_Statei($0, -2);
  if (!(__Z8lua_nextP9lua_Statei($0, $4) | 0)) {
   $$0$off0$lcssa = $$2$off0;
   break;
  } else $$0$off047 = $$2$off0;
 }
 STACKTOP = sp;
 return $$0$off0$lcssa | 0;
}

function __ZNSt3__210__stdinbufIwE9__getcharEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $2 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $5 = 0, $50 = 0, $6 = 0, $64 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 52 | 0;
 if (!(HEAP8[$6 >> 0] | 0)) {
  $12 = HEAP32[$0 + 44 >> 2] | 0;
  $$sroa$speculated = ($12 | 0) > 1 ? $12 : 1;
  $14 = $0 + 32 | 0;
  $$052 = 0;
  while (1) {
   if (($$052 | 0) >= ($$sroa$speculated | 0)) {
    label = 8;
    break;
   }
   $17 = _getc(HEAP32[$14 >> 2] | 0) | 0;
   if (($17 | 0) == -1) {
    $$10 = -1;
    break;
   }
   HEAP8[$2 + $$052 >> 0] = $17;
   $$052 = $$052 + 1 | 0;
  }
  if ((label | 0) == 8) {
   do if (!(HEAP8[$0 + 53 >> 0] | 0)) {
    $27 = $0 + 40 | 0;
    $28 = $0 + 36 | 0;
    $29 = $3 + 4 | 0;
    $$048 = $$sroa$speculated;
    L11 : while (1) {
     $30 = HEAP32[$27 >> 2] | 0;
     $31 = $30;
     $33 = HEAP32[$31 >> 2] | 0;
     $36 = HEAP32[$31 + 4 >> 2] | 0;
     $37 = HEAP32[$28 >> 2] | 0;
     $38 = $2 + $$048 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$37 >> 2] | 0) + 16 >> 2] & 15]($37, $30, $2, $38, $4, $3, $29, $5) | 0) {
     case 3:
      {
       label = 15;
       break L11;
       break;
      }
     case 2:
      {
       label = 17;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     $44 = HEAP32[$27 >> 2] | 0;
     HEAP32[$44 >> 2] = $33;
     HEAP32[$44 + 4 >> 2] = $36;
     if (($$048 | 0) == 8) {
      label = 17;
      break;
     }
     $50 = _getc(HEAP32[$14 >> 2] | 0) | 0;
     if (($50 | 0) == -1) {
      label = 17;
      break;
     }
     HEAP8[$38 >> 0] = $50;
     $$048 = $$048 + 1 | 0;
    }
    if ((label | 0) == 15) HEAP32[$3 >> 2] = HEAP8[$2 >> 0]; else if ((label | 0) == 17) {
     $$9 = -1;
     break;
    }
    $$351 = $$048;
    label = 18;
   } else {
    HEAP32[$3 >> 2] = HEAP8[$2 >> 0];
    $$351 = $$sroa$speculated;
    label = 18;
   } while (0);
   L21 : do if ((label | 0) == 18) {
    if ($1) {
     $64 = HEAP32[$3 >> 2] | 0;
     HEAP32[$0 + 48 >> 2] = $64;
     $$9 = $64;
     break;
    } else $$0 = $$351;
    while (1) {
     if (($$0 | 0) <= 0) break;
     $$0 = $$0 + -1 | 0;
     if ((_ungetc(HEAP8[$2 + $$0 >> 0] | 0, HEAP32[$14 >> 2] | 0) | 0) == -1) {
      $$9 = -1;
      break L21;
     }
    }
    $$9 = HEAP32[$3 >> 2] | 0;
   } while (0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $9 = $0 + 48 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($1) {
   HEAP32[$9 >> 2] = -1;
   HEAP8[$6 >> 0] = 0;
   $$11 = $10;
  } else $$11 = $10;
 }
 STACKTOP = sp;
 return $$11 | 0;
}

function __ZNSt3__26__treeIPKc26log_filter_section_compareNS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEEiEEbEERKT_DpOT0_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$19 = 0, $$0$i = 0, $$0$lcssa27$i = 0, $$018 = 0, $$020$i = 0, $$lcssa$i = 0, $$sink37$i = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $20 = 0, $25 = 0, $26 = 0, $31 = 0, $33 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $5 = $1 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 L1 : do if (!$6) {
  HEAP32[$4 >> 2] = $5;
  $$0$19 = $5;
  $$020$i = $5;
 } else {
  $8 = HEAP32[$2 >> 2] | 0;
  L4 : do if (!$8) {
   $10 = HEAP32[$6 >> 2] | 0;
   if (!$10) {
    $$0$lcssa27$i = $6;
    $$lcssa$i = $6;
   } else {
    $13 = $10;
    while (1) {
     $12 = HEAP32[$13 >> 2] | 0;
     if (!$12) break; else $13 = $12;
    }
    $$0$lcssa27$i = $13;
    $$lcssa$i = $13;
   }
  } else {
   $$0$i = $6;
   L9 : while (1) {
    $16 = HEAP32[$$0$i + 16 >> 2] | 0;
    do if (!$16) label = 11; else if ((_strcmp($8, $16) | 0) > 0) {
     $20 = HEAP32[$$0$i >> 2] | 0;
     if (!$20) {
      $$0$lcssa27$i = $$0$i;
      $$lcssa$i = $$0$i;
      break L4;
     } else {
      $$sink37$i = $20;
      break;
     }
    } else if ((_strcmp($16, $8) | 0) > 0) {
     label = 11;
     break;
    } else {
     label = 14;
     break L9;
    } while (0);
    if ((label | 0) == 11) {
     label = 0;
     $25 = $$0$i + 4 | 0;
     $26 = HEAP32[$25 >> 2] | 0;
     if (!$26) {
      label = 13;
      break;
     } else $$sink37$i = $26;
    }
    $$0$i = $$sink37$i;
   }
   if ((label | 0) == 13) {
    HEAP32[$4 >> 2] = $$0$i;
    $$0$19 = $$0$i;
    $$020$i = $25;
    break L1;
   } else if ((label | 0) == 14) {
    HEAP32[$4 >> 2] = $$0$i;
    $$0$19 = $$0$i;
    $$020$i = $4;
    break L1;
   }
  } while (0);
  HEAP32[$4 >> 2] = $$0$lcssa27$i;
  $$0$19 = $$0$lcssa27$i;
  $$020$i = $$lcssa$i;
 } while (0);
 $31 = HEAP32[$$020$i >> 2] | 0;
 if ($31 | 0) {
  $$0 = $31;
  $$018 = 0;
  $48 = $$0;
  HEAP32[$0 >> 2] = $48;
  $49 = $0 + 4 | 0;
  HEAP8[$49 >> 0] = $$018;
  STACKTOP = sp;
  return;
 }
 $33 = __Znwj(20) | 0;
 HEAP32[$33 + 16 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$33 >> 2] = 0;
 HEAP32[$33 + 4 >> 2] = 0;
 HEAP32[$33 + 8 >> 2] = $$0$19;
 HEAP32[$$020$i >> 2] = $33;
 $39 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
 if (!$39) $44 = $33; else {
  HEAP32[$1 >> 2] = $39;
  $44 = HEAP32[$$020$i >> 2] | 0;
 }
 __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 + 4 >> 2] | 0, $44);
 $45 = $1 + 8 | 0;
 HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 1;
 $$0 = $33;
 $$018 = 1;
 $48 = $$0;
 HEAP32[$0 >> 2] = $48;
 $49 = $0 + 4 | 0;
 HEAP8[$49 >> 0] = $$018;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i3$i$i1318 = 0, $17 = 0, $18 = 0, $19 = 0, $33 = 0, $35 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $65 = 0, $75 = 0, $76 = 0, label = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 do if (!$5) $17 = 0; else if ((HEAP32[$5 + 12 >> 2] | 0) == (HEAP32[$5 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 255]($5) | 0) == -1) {
  HEAP32[$1 >> 2] = 0;
  $17 = 0;
  break;
 } else {
  $17 = HEAP32[$1 >> 2] | 0;
  break;
 } else $17 = $5; while (0);
 $18 = ($17 | 0) == 0;
 $19 = HEAP32[$2 >> 2] | 0;
 do if (!$19) label = 11; else {
  if ((HEAP32[$19 + 12 >> 2] | 0) == (HEAP32[$19 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0) == -1) {
   HEAP32[$2 >> 2] = 0;
   label = 11;
   break;
  }
  if ($18) {
   $$pre$i3$i$i1318 = $19;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($18) label = 12; else {
  $$pre$i3$i$i1318 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 6; else if ((label | 0) == 13) {
  $33 = HEAP32[$1 >> 2] | 0;
  $35 = HEAP32[$33 + 12 >> 2] | 0;
  if (($35 | 0) == (HEAP32[$33 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] & 255]($33) | 0; else $$0$i$i = HEAPU8[$35 >> 0] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, $$0$i$i & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 4;
   break;
  }
  $53 = HEAP32[$1 >> 2] | 0;
  $54 = $53 + 12 | 0;
  $55 = HEAP32[$54 >> 2] | 0;
  if (($55 | 0) == (HEAP32[$53 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 40 >> 2] & 255]($53) | 0;
   $$pre = HEAP32[$1 >> 2] | 0;
   if (!$$pre) $75 = 0; else {
    $65 = $$pre;
    label = 21;
   }
  } else {
   HEAP32[$54 >> 2] = $55 + 1;
   $65 = $53;
   label = 21;
  }
  do if ((label | 0) == 21) if ((HEAP32[$65 + 12 >> 2] | 0) == (HEAP32[$65 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 255]($65) | 0) == -1) {
   HEAP32[$1 >> 2] = 0;
   $75 = 0;
   break;
  } else {
   $75 = HEAP32[$1 >> 2] | 0;
   break;
  } else $75 = $65; while (0);
  $76 = ($75 | 0) == 0;
  do if (!$$pre$i3$i$i1318) label = 30; else {
   if ((HEAP32[$$pre$i3$i$i1318 + 12 >> 2] | 0) == (HEAP32[$$pre$i3$i$i1318 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i1318 >> 2] | 0) + 36 >> 2] & 255]($$pre$i3$i$i1318) | 0) == -1) {
    HEAP32[$2 >> 2] = 0;
    label = 30;
    break;
   }
   if ($76) break L16;
  } while (0);
  if ((label | 0) == 30) if (!$76) break;
  HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 } while (0);
 return;
}

function __ZNK8LuaTable8SubTableEi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $14 = 0, $15 = 0, $19 = 0, $25 = 0, $3 = 0, $33 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer = sp;
 $3 = sp + 16 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 114224, 0);
 $4 = $0 + 12 | 0;
 HEAP8[$4 >> 0] = 0;
 $5 = $0 + 16 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $0 + 20 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $0 + 24 | 0;
 HEAP32[$7 >> 2] = -2;
 HEAP32[$vararg_buffer >> 2] = $2;
 _snprintf($3, 32, 83854, $vararg_buffer) | 0;
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 $9 = HEAP8[$1 + 11 >> 0] | 0;
 $10 = $9 << 24 >> 24 < 0;
 $14 = $10 ? HEAP32[$1 + 4 >> 2] | 0 : $9 & 255;
 $15 = _strlen($3) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($vararg_buffer, $10 ? HEAP32[$1 >> 2] | 0 : $1, $14, $14 + $15 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($vararg_buffer, $3, $15) | 0;
 $19 = $0 + 11 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
 } else {
  HEAP8[$0 >> 0] = 0;
  HEAP8[$19 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, 0);
 HEAP32[$0 >> 2] = HEAP32[$vararg_buffer >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$vararg_buffer + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$vararg_buffer + 8 >> 2];
 HEAP32[$vararg_buffer >> 2] = 0;
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vararg_buffer);
 if (!(__ZNK8LuaTable9PushTableEv($1) | 0)) {
  STACKTOP = sp;
  return;
 }
 $25 = $1 + 20 | 0;
 __Z14lua_pushnumberP9lua_Statef(HEAP32[$25 >> 2] | 0, +($2 | 0));
 __Z12lua_gettableP9lua_Statei(HEAP32[$25 >> 2] | 0, -2);
 if ((__Z8lua_typeP9lua_Statei(HEAP32[$25 >> 2] | 0, -1) | 0) != 5) {
  __Z10lua_settopP9lua_Statei(HEAP32[$25 >> 2] | 0, -2);
  STACKTOP = sp;
  return;
 }
 $33 = $1 + 16 | 0;
 HEAP32[$5 >> 2] = HEAP32[$33 >> 2];
 $35 = HEAP32[$25 >> 2] | 0;
 HEAP32[$6 >> 2] = $35;
 $36 = __Z8luaL_refP9lua_Statei($35, -1e4) | 0;
 HEAP32[$7 >> 2] = $36;
 HEAP8[$4 >> 0] = ($36 | 0) != -2 & 1;
 $39 = HEAP32[$33 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $0;
 $40 = $39 + 100 | 0;
 $41 = HEAP32[$40 >> 2] | 0;
 if (($41 | 0) == (HEAP32[$39 + 104 >> 2] | 0)) __ZNSt3__26vectorIP8LuaTableNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($39 + 96 | 0, $vararg_buffer); else {
  HEAP32[$41 >> 2] = $0;
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 4;
 }
 STACKTOP = sp;
 return;
}

function __ZN9MapParser16GetMapConfigNameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $16 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $37 = 0, $4 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $2 = sp + 36 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 __ZN10FileSystem12GetDirectoryERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($2 | 0, $1 | 0);
 __ZN10FileSystem11GetBasenameERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $1 | 0);
 __ZN10FileSystem12GetExtensionERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($4 | 0, $1 | 0);
 $6 = $4 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $9 = $4 + 4 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 do if ((($7 << 24 >> 24 < 0 ? $10 : $7 & 255) | 0) == 3) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($4, 0, -1, 78540, 3) | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1);
  break;
 } else {
  $16 = HEAP8[$6 >> 0] | 0;
  $19 = HEAP32[$9 >> 2] | 0;
  label = 5;
  break;
 } else {
  $16 = $7;
  $19 = $10;
  label = 5;
 } while (0);
 do if ((label | 0) == 5) {
  if ((($16 << 24 >> 24 < 0 ? $19 : $16 & 255) | 0) == 3) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($4, 0, -1, 78544, 3) | 0)) {
   HEAP32[$5 >> 2] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   HEAP32[$5 + 8 >> 2] = 0;
   $25 = HEAP8[$2 + 11 >> 0] | 0;
   $26 = $25 << 24 >> 24 < 0;
   $30 = $26 ? HEAP32[$2 + 4 >> 2] | 0 : $25 & 255;
   $31 = $3 + 11 | 0;
   $32 = HEAP8[$31 >> 0] | 0;
   $37 = $32 << 24 >> 24 < 0 ? HEAP32[$3 + 4 >> 2] | 0 : $32 & 255;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($5, $26 ? HEAP32[$2 >> 2] | 0 : $2, $30, $37 + $30 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($5, (HEAP8[$31 >> 0] | 0) < 0 ? HEAP32[$3 >> 2] | 0 : $3, $37) | 0;
   $45 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($5, 78548) | 0;
   HEAP32[$0 >> 2] = HEAP32[$45 >> 2];
   HEAP32[$0 + 4 >> 2] = HEAP32[$45 + 4 >> 2];
   HEAP32[$0 + 8 >> 2] = HEAP32[$45 + 8 >> 2];
   HEAP32[$45 >> 2] = 0;
   HEAP32[$45 + 4 >> 2] = 0;
   HEAP32[$45 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   break;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1);
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;
 return;
}

function __ZL6LogMsgP9lua_StatePKcii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$05160 = 0, $10 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $4 = sp + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $5 = __Z10lua_gettopP9lua_State($0) | 0;
 __Z12lua_getfieldP9lua_StateiPKc($0, -10002, 86029);
 L1 : do if (($5 | 0) == ($3 | 0)) if ((__Z8lua_typeP9lua_Statei($0, $3) | 0) == 5) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($4, 84062) | 0;
  __Z11lua_pushnilP9lua_State($0);
  $15 = $4 + 11 | 0;
  $16 = $4 + 4 | 0;
  while (1) {
   if (!(__Z8lua_nextP9lua_Statei($0, $3) | 0)) break L1;
   if ((__Z8lua_typeP9lua_Statei($0, -2) | 0) == 3) {
    __Z13lua_pushvalueP9lua_Statei($0, -3);
    __Z13lua_pushvalueP9lua_Statei($0, -2);
    __Z9lua_pcallP9lua_Stateiii($0, 1, 1, 0) | 0;
    $21 = __Z13lua_tolstringP9lua_StateiPj($0, -1, 0) | 0;
    $22 = HEAP8[$15 >> 0] | 0;
    if ((($22 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $22 & 255) + 1 | 0) >>> 0 > 8) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($4, 84059) | 0;
    if ($21 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($4, $21) | 0;
    __Z10lua_settopP9lua_Statei($0, -2);
   }
   __Z10lua_settopP9lua_Statei($0, -2);
  }
 } else label = 3; else label = 3; while (0);
 if ((label | 0) == 3) if (($5 | 0) >= ($3 | 0)) {
  $$05160 = $3;
  while (1) {
   __Z13lua_pushvalueP9lua_Statei($0, -1);
   __Z13lua_pushvalueP9lua_Statei($0, $$05160);
   __Z9lua_pcallP9lua_Stateiii($0, 1, 1, 0) | 0;
   $10 = __Z13lua_tolstringP9lua_StateiPj($0, -1, 0) | 0;
   if (($$05160 | 0) > ($3 | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($4, 84059) | 0;
   if ($10 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($4, $10) | 0;
   __Z10lua_settopP9lua_Statei($0, -2);
   if (($$05160 | 0) < ($5 | 0)) $$05160 = $$05160 + 1 | 0; else break;
  }
 }
 if (!$1) {
  HEAP32[$vararg_buffer >> 2] = (HEAP8[$4 + 11 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4;
  _log_frontend_record(35, 114224, 91439, $vararg_buffer);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 if (($2 | 0) <= 29) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 HEAP32[$vararg_buffer1 >> 2] = (HEAP8[$4 + 11 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4;
 _log_frontend_record($2, $1, 91439, $vararg_buffer1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i17 = 0, $$0$i20 = 0, $$016$i = 0, $$017$i = 0, $$019$i = 0, $$020$i = 0, $10 = 0, $11 = 0, $12 = 0, $18 = 0, $19 = 0, $21 = 0, $26 = 0, $27 = 0, $34 = 0, $49 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $6 = sp + 168 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 32 | 0;
 $10 = sp;
 $11 = sp + 24 | 0;
 $12 = sp + 16 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 >> 2] = 76224;
 $18 = HEAP8[$5 + 8 + 3 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 $21 = $19 ? HEAP32[$5 >> 2] | 0 : $5;
 $26 = $21 + (($19 ? HEAP32[$5 + 4 >> 2] | 0 : $18 & 255) << 2) | 0;
 $27 = $7 + 32 | 0;
 $$016$i = $21;
 $$017$i = 0;
 while (1) {
  if (!(($$017$i | 0) != 2 & $$016$i >>> 0 < $26 >>> 0)) break;
  HEAP32[$9 >> 2] = $$016$i;
  $34 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 15]($11, $6, $$016$i, $26, $9, $7, $27, $8) | 0;
  $$0$i20 = $7;
  while (1) {
   if ($$0$i20 >>> 0 >= (HEAP32[$8 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($10, HEAP8[$$0$i20 >> 0] | 0);
   $$0$i20 = $$0$i20 + 1 | 0;
  }
  $$016$i = HEAP32[$9 >> 2] | 0;
  $$017$i = $34;
 }
 $49 = _catgets(($2 | 0) == -1 ? -1 : $2 << 1, $3, $4, (HEAP8[$10 + 11 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i17 = 0;
 while (1) {
  if (($$0$i$i17 | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i17 << 2) >> 2] = 0;
  $$0$i$i17 = $$0$i$i17 + 1 | 0;
 }
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 >> 2] = 76272;
 $54 = $49 + (_strlen($49) | 0) | 0;
 $55 = $54;
 $56 = $7 + 128 | 0;
 $$019$i = $49;
 $$020$i = 0;
 while (1) {
  if (!(($$020$i | 0) != 2 & $$019$i >>> 0 < $54 >>> 0)) break;
  HEAP32[$9 >> 2] = $$019$i;
  $68 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 15]($12, $6, $$019$i, ($55 - $$019$i | 0) > 32 ? $$019$i + 32 | 0 : $54, $9, $7, $56, $8) | 0;
  $$0$i = $7;
  while (1) {
   if ($$0$i >>> 0 >= (HEAP32[$8 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($0, HEAP32[$$0$i >> 2] | 0);
   $$0$i = $$0$i + 4 | 0;
  }
  $$019$i = HEAP32[$9 >> 2] | 0;
  $$020$i = $68;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorI8AllyTeamNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$06$i$i = 0, $$pre$phi11$iZ2D = 0, $11 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $33 = 0, $36 = 0, $37 = 0, $4 = 0, $42 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $4 = $0 + 4 | 0;
 $6 = HEAP32[$0 >> 2] | 0;
 $9 = (((HEAP32[$4 >> 2] | 0) - $6 | 0) / 56 | 0) + 1 | 0;
 if ($9 >>> 0 > 76695844) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = $0 + 8 | 0;
 $14 = ((HEAP32[$11 >> 2] | 0) - $6 | 0) / 56 | 0;
 if ($14 >>> 0 < 38347922) {
  $16 = $14 << 1;
  $$0$i = $16 >>> 0 < $9 >>> 0 ? $9 : $16;
 } else $$0$i = 76695844;
 $20 = ((HEAP32[$4 >> 2] | 0) - $6 | 0) / 56 | 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = $0 + 8;
 do if (!$$0$i) $28 = 0; else if ($$0$i >>> 0 > 76695844) {
  $25 = ___cxa_allocate_exception(4) | 0;
  __ZNSt9bad_allocC2Ev($25);
  ___cxa_throw($25 | 0, 1824, 151);
 } else {
  $28 = __Znwj($$0$i * 56 | 0) | 0;
  break;
 } while (0);
 HEAP32[$2 >> 2] = $28;
 $29 = $28 + ($20 * 56 | 0) | 0;
 $30 = $2 + 8 | 0;
 HEAP32[$30 >> 2] = $29;
 $31 = $2 + 4 | 0;
 HEAP32[$31 >> 2] = $29;
 $33 = $2 + 12 | 0;
 HEAP32[$33 >> 2] = $28 + ($$0$i * 56 | 0);
 __ZN8AllyTeamC2ERKS_($29, $1);
 HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 56;
 $36 = HEAP32[$0 >> 2] | 0;
 $37 = HEAP32[$4 >> 2] | 0;
 if (($37 | 0) == ($36 | 0)) {
  $$pre$phi11$iZ2D = $31;
  $48 = HEAP32[$31 >> 2] | 0;
  $49 = $36;
  $51 = $37;
  HEAP32[$0 >> 2] = $48;
  HEAP32[$$pre$phi11$iZ2D >> 2] = $49;
  $50 = HEAP32[$30 >> 2] | 0;
  HEAP32[$4 >> 2] = $50;
  HEAP32[$30 >> 2] = $51;
  $52 = HEAP32[$11 >> 2] | 0;
  $53 = HEAP32[$33 >> 2] | 0;
  HEAP32[$11 >> 2] = $53;
  HEAP32[$33 >> 2] = $52;
  $54 = HEAP32[$$pre$phi11$iZ2D >> 2] | 0;
  HEAP32[$2 >> 2] = $54;
  __ZNSt3__214__split_bufferI8AllyTeamRNS_9allocatorIS1_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
 $$06$i$i = $37;
 $42 = HEAP32[$31 >> 2] | 0;
 do {
  $$06$i$i = $$06$i$i + -56 | 0;
  __ZN8AllyTeamC2ERKS_($42 + -56 | 0, $$06$i$i);
  $42 = (HEAP32[$31 >> 2] | 0) + -56 | 0;
  HEAP32[$31 >> 2] = $42;
 } while (($$06$i$i | 0) != ($36 | 0));
 $$pre$phi11$iZ2D = $31;
 $48 = $42;
 $49 = HEAP32[$0 >> 2] | 0;
 $51 = HEAP32[$4 >> 2] | 0;
 HEAP32[$0 >> 2] = $48;
 HEAP32[$$pre$phi11$iZ2D >> 2] = $49;
 $50 = HEAP32[$30 >> 2] | 0;
 HEAP32[$4 >> 2] = $50;
 HEAP32[$30 >> 2] = $51;
 $52 = HEAP32[$11 >> 2] | 0;
 $53 = HEAP32[$33 >> 2] | 0;
 HEAP32[$11 >> 2] = $53;
 HEAP32[$33 >> 2] = $52;
 $54 = HEAP32[$$pre$phi11$iZ2D >> 2] | 0;
 HEAP32[$2 >> 2] = $54;
 __ZNSt3__214__split_bufferI8AllyTeamRNS_9allocatorIS1_EEED2Ev($2);
 STACKTOP = sp;
 return;
}

function _pop_arg($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $108 = 0, $109 = 0.0, $115 = 0, $116 = 0.0, $16 = 0, $17 = 0, $20 = 0, $29 = 0, $30 = 0, $31 = 0, $40 = 0, $41 = 0, $43 = 0, $46 = 0, $47 = 0, $56 = 0, $57 = 0, $59 = 0, $62 = 0, $71 = 0, $72 = 0, $73 = 0, $82 = 0, $83 = 0, $85 = 0, $88 = 0, $9 = 0, $97 = 0, $98 = 0, $99 = 0;
 L1 : do if ($1 >>> 0 <= 20) do switch ($1 | 0) {
 case 9:
  {
   $9 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $10 = HEAP32[$9 >> 2] | 0;
   HEAP32[$2 >> 2] = $9 + 4;
   HEAP32[$0 >> 2] = $10;
   break L1;
   break;
  }
 case 10:
  {
   $16 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $17 = HEAP32[$16 >> 2] | 0;
   HEAP32[$2 >> 2] = $16 + 4;
   $20 = $0;
   HEAP32[$20 >> 2] = $17;
   HEAP32[$20 + 4 >> 2] = (($17 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 11:
  {
   $29 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $30 = HEAP32[$29 >> 2] | 0;
   HEAP32[$2 >> 2] = $29 + 4;
   $31 = $0;
   HEAP32[$31 >> 2] = $30;
   HEAP32[$31 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 12:
  {
   $40 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $41 = $40;
   $43 = HEAP32[$41 >> 2] | 0;
   $46 = HEAP32[$41 + 4 >> 2] | 0;
   HEAP32[$2 >> 2] = $40 + 8;
   $47 = $0;
   HEAP32[$47 >> 2] = $43;
   HEAP32[$47 + 4 >> 2] = $46;
   break L1;
   break;
  }
 case 13:
  {
   $56 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $57 = HEAP32[$56 >> 2] | 0;
   HEAP32[$2 >> 2] = $56 + 4;
   $59 = ($57 & 65535) << 16 >> 16;
   $62 = $0;
   HEAP32[$62 >> 2] = $59;
   HEAP32[$62 + 4 >> 2] = (($59 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 14:
  {
   $71 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $72 = HEAP32[$71 >> 2] | 0;
   HEAP32[$2 >> 2] = $71 + 4;
   $73 = $0;
   HEAP32[$73 >> 2] = $72 & 65535;
   HEAP32[$73 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 15:
  {
   $82 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $83 = HEAP32[$82 >> 2] | 0;
   HEAP32[$2 >> 2] = $82 + 4;
   $85 = ($83 & 255) << 24 >> 24;
   $88 = $0;
   HEAP32[$88 >> 2] = $85;
   HEAP32[$88 + 4 >> 2] = (($85 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 16:
  {
   $97 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $98 = HEAP32[$97 >> 2] | 0;
   HEAP32[$2 >> 2] = $97 + 4;
   $99 = $0;
   HEAP32[$99 >> 2] = $98 & 255;
   HEAP32[$99 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 17:
  {
   $108 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $109 = +HEAPF64[$108 >> 3];
   HEAP32[$2 >> 2] = $108 + 8;
   HEAPF64[$0 >> 3] = $109;
   break L1;
   break;
  }
 case 18:
  {
   $115 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $116 = +HEAPF64[$115 >> 3];
   HEAP32[$2 >> 2] = $115 + 8;
   HEAPF64[$0 >> 3] = $116;
   break L1;
   break;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function __Z13lua_tolstringP9lua_StateiPj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$020 = 0, $$1$i = 0, $$1$i22 = 0, $23 = 0, $3 = 0, $32 = 0, $33 = 0, $47 = 0, $48 = 0, $57 = 0, $7 = 0, $72 = 0, $81 = 0, $82 = 0;
 $3 = ($1 | 0) > 0;
 L1 : do if ($3) {
  $7 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $7 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $23 = $0 + 80 | 0;
    HEAP32[$23 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $23;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $32 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $33 = -10002 - $1 | 0;
    $$1$i = ($33 | 0) > (HEAPU8[$32 + 7 >> 0] | 0 | 0) ? 108164 : $32 + 20 + ($33 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 if ((HEAP32[$$1$i + 4 >> 2] | 0) == 4) $$0 = $$1$i; else {
  __Z12LuaMutexLockP9lua_State($0 | 0);
  if (!(__Z13luaV_tostringP9lua_StateP10lua_TValue($0, $$1$i) | 0)) {
   if ($2 | 0) HEAP32[$2 >> 2] = 0;
   __Z14LuaMutexUnlockP9lua_State($0 | 0);
   $$020 = 0;
   return $$020 | 0;
  }
  $47 = $0 + 16 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if ((HEAP32[$48 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$48 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
  L25 : do if ($3) {
   $57 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
   $$1$i22 = $57 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $57 : 108164;
  } else {
   if (($1 | 0) > -1e4) {
    $$1$i22 = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
    break;
   }
   switch ($1 | 0) {
   case -1e4:
    {
     $$1$i22 = (HEAP32[$47 >> 2] | 0) + 92 | 0;
     break L25;
     break;
    }
   case -10001:
    {
     $72 = $0 + 80 | 0;
     HEAP32[$72 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
     HEAP32[$0 + 84 >> 2] = 5;
     $$1$i22 = $72;
     break L25;
     break;
    }
   case -10002:
    {
     $$1$i22 = $0 + 72 | 0;
     break L25;
     break;
    }
   default:
    {
     $81 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
     $82 = -10002 - $1 | 0;
     $$1$i22 = ($82 | 0) > (HEAPU8[$81 + 7 >> 0] | 0 | 0) ? 108164 : $81 + 20 + ($82 + -1 << 3) | 0;
     break L25;
    }
   }
  } while (0);
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  $$0 = $$1$i22;
 }
 if ($2 | 0) HEAP32[$2 >> 2] = HEAP32[(HEAP32[$$0 >> 2] | 0) + 12 >> 2];
 $$020 = (HEAP32[$$0 >> 2] | 0) + 16 | 0;
 return $$020 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKcj($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$069 = 0, $$070 = 0, $$074 = 0, $$096 = 0, $$297 = 0, $$3 = 0, $$373 = 0, $$377 = 0, $$398 = 0, $$4 = 0, $$sroa$speculated = 0, $11 = 0, $13 = 0, $20 = 0, $24 = 0, $27 = 0, $28 = 0, $41 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0;
 $5 = $0 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) $11 = HEAP32[$0 + 4 >> 2] | 0; else $11 = $6 & 255;
 if ($11 >>> 0 < $1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 $13 = $11 - $1 | 0;
 $$sroa$speculated = $13 >>> 0 < $2 >>> 0 ? $13 : $2;
 if ($7) $20 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $20 = 10;
 if (($$sroa$speculated - $11 + $20 | 0) >>> 0 < $4 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $20, $11 + $4 - $$sroa$speculated - $20 | 0, $11, $1, $$sroa$speculated, $4, $3); else {
  if ($7) $28 = HEAP32[$0 >> 2] | 0; else $28 = $0;
  do if (($$sroa$speculated | 0) == ($4 | 0)) {
   $$297 = $4;
   $$3 = $1;
   $$373 = $3;
   $$377 = $4;
   label = 25;
  } else {
   $24 = $13 - $$sroa$speculated | 0;
   if (!$24) {
    $$297 = $$sroa$speculated;
    $$3 = $1;
    $$373 = $3;
    $$377 = $4;
    label = 25;
   } else {
    $27 = $28 + $1 | 0;
    if ($$sroa$speculated >>> 0 > $4 >>> 0) {
     if ($4 | 0) _memmove($27 | 0, $3 | 0, $4 | 0) | 0;
     _memmove($27 + $4 | 0, $27 + $$sroa$speculated | 0, $24 | 0) | 0;
     $$398 = $$sroa$speculated;
     $$4 = $4;
     break;
    }
    do if ($27 >>> 0 < $3 >>> 0 & ($28 + $11 | 0) >>> 0 > $3 >>> 0) {
     if (($27 + $$sroa$speculated | 0) >>> 0 <= $3 >>> 0) {
      $$069 = $1;
      $$070 = $3 + ($4 - $$sroa$speculated) | 0;
      $$074 = $4;
      $$096 = $$sroa$speculated;
      break;
     }
     if ($$sroa$speculated | 0) _memmove($27 | 0, $3 | 0, $$sroa$speculated | 0) | 0;
     $$069 = $$sroa$speculated + $1 | 0;
     $$070 = $3 + $4 | 0;
     $$074 = $4 - $$sroa$speculated | 0;
     $$096 = 0;
    } else {
     $$069 = $1;
     $$070 = $3;
     $$074 = $4;
     $$096 = $$sroa$speculated;
    } while (0);
    $41 = $28 + $$069 | 0;
    _memmove($41 + $$074 | 0, $41 + $$096 | 0, $24 | 0) | 0;
    $$297 = $$096;
    $$3 = $$069;
    $$373 = $$070;
    $$377 = $$074;
    label = 25;
   }
  } while (0);
  if ((label | 0) == 25) if (!$$377) {
   $$398 = $$297;
   $$4 = 0;
  } else {
   _memmove($28 + $$3 | 0, $$373 | 0, $$377 | 0) | 0;
   $$398 = $$297;
   $$4 = $$377;
  }
  $49 = $$4 - $$398 + $11 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $49; else HEAP8[$5 >> 0] = $49;
  HEAP8[$28 + $49 >> 0] = 0;
 }
 return $0 | 0;
}

function __Z13luaV_gettableP9lua_StatePK10lua_TValuePS1_S4_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$04259 = 0, $$04458 = 0, $$3 = 0, $10 = 0, $11 = 0, $15 = 0, $24 = 0, $29 = 0, $33 = 0, $37 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $46 = 0, $51 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $4 = $0 + 16 | 0;
 $$04259 = $1;
 $$04458 = 0;
 $7 = HEAP32[$1 + 4 >> 2] | 0;
 while (1) {
  if (($7 | 0) == 5) {
   $9 = HEAP32[$$04259 >> 2] | 0;
   $10 = __Z8luaH_getP5TablePK10lua_TValue($9, $2) | 0;
   $11 = $10 + 4 | 0;
   if (HEAP32[$11 >> 2] | 0) {
    label = 8;
    break;
   }
   $15 = HEAP32[$9 + 8 >> 2] | 0;
   if (!$15) {
    label = 8;
    break;
   }
   if (HEAP8[$15 + 6 >> 0] & 1) {
    label = 8;
    break;
   }
   $24 = __Z10luaT_gettmP5Table3TMSP7TString($15, 0, HEAP32[(HEAP32[$4 >> 2] | 0) + 160 >> 2] | 0) | 0;
   if (!$24) {
    label = 8;
    break;
   } else $$3 = $24;
  } else {
   $29 = __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $$04259, 0) | 0;
   if (!(HEAP32[$29 + 4 >> 2] | 0)) {
    __Z14luaG_typeerrorP9lua_StatePK10lua_TValuePKc($0, $$04259, 89525);
    $$3 = $29;
   } else $$3 = $29;
  }
  $33 = $$3 + 4 | 0;
  $7 = HEAP32[$33 >> 2] | 0;
  $$04458 = $$04458 + 1 | 0;
  if (($7 | 0) == 6) {
   label = 12;
   break;
  }
  if (($$04458 | 0) >= 100) {
   label = 15;
   break;
  } else $$04259 = $$3;
 }
 if ((label | 0) == 8) {
  HEAP32[$3 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$3 + 4 >> 2] = HEAP32[$11 >> 2];
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 12) {
  $37 = $0 + 32 | 0;
  $40 = $3 - (HEAP32[$37 >> 2] | 0) | 0;
  $41 = $0 + 8 | 0;
  $42 = HEAP32[$41 >> 2] | 0;
  HEAP32[$42 >> 2] = HEAP32[$$3 >> 2];
  HEAP32[$42 + 4 >> 2] = HEAP32[$33 >> 2];
  $46 = HEAP32[$41 >> 2] | 0;
  HEAP32[$46 + 8 >> 2] = HEAP32[$$04259 >> 2];
  HEAP32[$46 + 12 >> 2] = HEAP32[$$04259 + 4 >> 2];
  $51 = HEAP32[$41 >> 2] | 0;
  HEAP32[$51 + 16 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$51 + 20 >> 2] = HEAP32[$2 + 4 >> 2];
  $59 = HEAP32[$41 >> 2] | 0;
  if (((HEAP32[$0 + 28 >> 2] | 0) - $59 | 0) < 25) {
   __Z14luaD_growstackP9lua_Statei($0, 3);
   $64 = HEAP32[$41 >> 2] | 0;
  } else $64 = $59;
  HEAP32[$41 >> 2] = $64 + 24;
  __Z9luaD_callP9lua_StateP10lua_TValuei($0, $64, 1);
  $66 = (HEAP32[$37 >> 2] | 0) + $40 | 0;
  $67 = HEAP32[$41 >> 2] | 0;
  $68 = $67 + -8 | 0;
  HEAP32[$41 >> 2] = $68;
  HEAP32[$66 >> 2] = HEAP32[$68 >> 2];
  HEAP32[$66 + 4 >> 2] = HEAP32[$67 + -4 >> 2];
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 15) {
  __Z13luaG_runerrorP9lua_StatePKcz($0, 89531, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
}

function _mbsnrtowcs($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$ = 0, $$04975 = 0, $$05274 = 0, $$055$ = 0, $$05573 = 0, $$064 = 0, $$076 = 0, $$1 = 0, $$150 = 0, $$153 = 0, $$156 = 0, $$25170 = 0, $$25469 = 0, $$257 = 0, $$271 = 0, $$3 = 0, $$35868 = 0, $$59 = 0, $$cast = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $18 = 0, $21 = 0, $22 = 0, $25 = 0, $30 = 0, $31 = 0, $39 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP32[$6 >> 2] = $7;
 $8 = ($0 | 0) != 0;
 $$ = $8 ? $3 : 256;
 $$59 = $8 ? $0 : $5;
 $$cast = $7;
 L1 : do if (($$ | 0) != 0 & ($7 | 0) != 0) {
  $$04975 = 0;
  $$05274 = $2;
  $$05573 = $$;
  $$076 = $$59;
  $44 = $$cast;
  while (1) {
   $11 = $$05274 >>> 2;
   $12 = $11 >>> 0 >= $$05573 >>> 0;
   if (!($$05274 >>> 0 > 131 | $12)) {
    $$064 = $$076;
    $$150 = $$04975;
    $$153 = $$05274;
    $$257 = $$05573;
    $25 = $44;
    break L1;
   }
   $$055$ = $12 ? $$05573 : $11;
   $15 = $$05274 - $$055$ | 0;
   $16 = _mbsrtowcs($$076, $6, $$055$, $4) | 0;
   if (($16 | 0) == -1) break;
   $18 = ($$076 | 0) == ($5 | 0);
   $$156 = $$05573 - ($18 ? 0 : $16) | 0;
   $$1 = $18 ? $$076 : $$076 + ($16 << 2) | 0;
   $21 = $16 + $$04975 | 0;
   $22 = HEAP32[$6 >> 2] | 0;
   if (($$156 | 0) != 0 & ($22 | 0) != 0) {
    $$04975 = $21;
    $$05274 = $15;
    $$05573 = $$156;
    $$076 = $$1;
    $44 = $22;
   } else {
    $$064 = $$1;
    $$150 = $21;
    $$153 = $15;
    $$257 = $$156;
    $25 = $22;
    break L1;
   }
  }
  $$064 = $$076;
  $$150 = -1;
  $$153 = $15;
  $$257 = 0;
  $25 = HEAP32[$6 >> 2] | 0;
 } else {
  $$064 = $$59;
  $$150 = 0;
  $$153 = $2;
  $$257 = $$;
  $25 = $$cast;
 } while (0);
 L8 : do if (!$25) $$3 = $$150; else if (($$257 | 0) != 0 & ($$153 | 0) != 0) {
  $$25170 = $$150;
  $$25469 = $$153;
  $$271 = $$064;
  $$35868 = $$257;
  $30 = $25;
  while (1) {
   $31 = _mbrtowc($$271, $30, $$25469, $4) | 0;
   if (($31 + 2 | 0) >>> 0 < 3) break;
   $30 = (HEAP32[$6 >> 2] | 0) + $31 | 0;
   HEAP32[$6 >> 2] = $30;
   $$25469 = $$25469 - $31 | 0;
   $$35868 = $$35868 + -1 | 0;
   $39 = $$25170 + 1 | 0;
   if (!(($$35868 | 0) != 0 & ($$25469 | 0) != 0)) {
    $$3 = $39;
    break L8;
   } else {
    $$25170 = $39;
    $$271 = $$271 + 4 | 0;
   }
  }
  switch ($31 | 0) {
  case -1:
   {
    $$3 = -1;
    break L8;
    break;
   }
  case 0:
   {
    HEAP32[$6 >> 2] = 0;
    $$3 = $$25170;
    break L8;
    break;
   }
  default:
   {
    HEAP32[$4 >> 2] = 0;
    $$3 = $$25170;
    break L8;
   }
  }
 } else $$3 = $$150; while (0);
 if ($8) HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$phi$trans$insert = 0, $$pre$phi26Z2D = 0, $$pre$phi28Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $32 = 0, $33 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $49 = 0, $53 = 0, $59 = 0, $6 = 0, $62 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 if (($1 | 0) == -1) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $4 = $0 + 12 | 0;
 $6 = $0 + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $0 + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $0 + 28 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 if (($10 | 0) == ($12 | 0)) {
  $14 = $0 + 48 | 0;
  if (!(HEAP32[$14 >> 2] & 16)) {
   $$1 = -1;
   STACKTOP = sp;
   return $$1 | 0;
  }
  $18 = $0 + 20 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  $22 = $0 + 44 | 0;
  $24 = (HEAP32[$22 >> 2] | 0) - $19 | 0;
  $25 = $0 + 32 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($25, 0);
  $26 = $25 + 11 | 0;
  if ((HEAP8[$26 >> 0] | 0) < 0) $32 = (HEAP32[$0 + 40 >> 2] & 2147483647) + -1 | 0; else $32 = 10;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($25, $32, 0);
  $33 = HEAP8[$26 >> 0] | 0;
  if ($33 << 24 >> 24 < 0) {
   $40 = HEAP32[$25 >> 2] | 0;
   $41 = HEAP32[$0 + 36 >> 2] | 0;
  } else {
   $40 = $25;
   $41 = $33 & 255;
  }
  $39 = $40 + $41 | 0;
  HEAP32[$18 >> 2] = $40;
  HEAP32[$11 >> 2] = $39;
  $42 = $40 + ($10 - $19) | 0;
  HEAP32[$9 >> 2] = $42;
  $43 = $40 + $24 | 0;
  HEAP32[$22 >> 2] = $43;
  $$pre$phi26Z2D = $22;
  $$pre$phi28Z2D = $14;
  $$pre$phiZ2D = $22;
  $45 = $42;
  $47 = $43;
  $62 = $39;
 } else {
  $$phi$trans$insert = $0 + 44 | 0;
  $$pre$phi26Z2D = $$phi$trans$insert;
  $$pre$phi28Z2D = $0 + 48 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $45 = $10;
  $47 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $62 = $12;
 }
 $44 = $45 + 1 | 0;
 HEAP32[$2 >> 2] = $44;
 $49 = HEAP32[($44 >>> 0 < $47 >>> 0 ? $$pre$phiZ2D : $2) >> 2] | 0;
 HEAP32[$$pre$phi26Z2D >> 2] = $49;
 if (HEAP32[$$pre$phi28Z2D >> 2] & 8 | 0) {
  $53 = $0 + 32 | 0;
  if ((HEAP8[$53 + 11 >> 0] | 0) < 0) $59 = HEAP32[$53 >> 2] | 0; else $59 = $53;
  HEAP32[$6 >> 2] = $59;
  HEAP32[$4 >> 2] = $59 + $8;
  HEAP32[$0 + 16 >> 2] = $49;
 }
 if (($45 | 0) == ($62 | 0)) {
  $$1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 31]($0, $1 & 255) | 0;
  STACKTOP = sp;
  return $$1 | 0;
 } else {
  HEAP32[$9 >> 2] = $44;
  HEAP8[$45 >> 0] = $1;
  $$1 = $1 & 255;
  STACKTOP = sp;
  return $$1 | 0;
 }
 return 0;
}

function __ZN9LuaParser7SubDirsEP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $12 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $1 = sp + 36 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $8 = HEAP32[(HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 16 >> 2] | 0) + 12 >> 2] | 0;
 $9 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, 0) | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $9, _strlen($9) | 0);
 if (!(__ZN5LuaIO12IsSimplePathERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1) | 0)) {
  $$0 = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return $$0 | 0;
 }
 $12 = __ZL21luaL_SpringOptCStringP9lua_StateiPKcPjPFS2_S0_iS2_S3_EPFS2_S0_iS3_EiS2_($0, 2, 83581, 83312) | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $12, _strlen($12) | 0);
 $14 = $8 + 36 | 0;
 if ((HEAP8[$14 + 11 >> 0] | 0) < 0) $19 = HEAP32[$14 >> 2] | 0; else $19 = $14;
 $20 = __ZL21luaL_SpringOptCStringP9lua_StateiPKcPjPFS2_S0_iS2_S3_EPFS2_S0_iS3_EiS2_($0, 3, $19, 83312) | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, $20, _strlen($20) | 0);
 __ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($3 | 0, $4 | 0, $14 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZN12CFileHandler7SubDirsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_($4 | 0, $1 | 0, $2 | 0, $3 | 0);
 __ZN8LuaUtils16PushStringVectorEP9lua_StateRKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE($0, $4);
 $22 = HEAP32[$4 >> 2] | 0;
 if ($22 | 0) {
  $24 = $4 + 4 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  if (($25 | 0) == ($22 | 0)) $31 = $22; else {
   $28 = $25;
   do {
    $27 = $28 + -12 | 0;
    HEAP32[$24 >> 2] = $27;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
    $28 = HEAP32[$24 >> 2] | 0;
   } while (($28 | 0) != ($22 | 0));
   $31 = HEAP32[$4 >> 2] | 0;
  }
  __ZdlPv($31);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $$0 = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN9LuaParser7DirListEP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $12 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $1 = sp + 36 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $8 = HEAP32[(HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 16 >> 2] | 0) + 12 >> 2] | 0;
 $9 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, 0) | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $9, _strlen($9) | 0);
 if (!(__ZN5LuaIO12IsSimplePathERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1) | 0)) {
  $$0 = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return $$0 | 0;
 }
 $12 = __ZL21luaL_SpringOptCStringP9lua_StateiPKcPjPFS2_S0_iS2_S3_EPFS2_S0_iS3_EiS2_($0, 2, 83581, 83304) | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $12, _strlen($12) | 0);
 $14 = $8 + 36 | 0;
 if ((HEAP8[$14 + 11 >> 0] | 0) < 0) $19 = HEAP32[$14 >> 2] | 0; else $19 = $14;
 $20 = __ZL21luaL_SpringOptCStringP9lua_StateiPKcPjPFS2_S0_iS2_S3_EPFS2_S0_iS3_EiS2_($0, 3, $19, 83304) | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, $20, _strlen($20) | 0);
 __ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($3 | 0, $4 | 0, $14 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZN12CFileHandler7DirListERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_($4 | 0, $1 | 0, $2 | 0, $3 | 0);
 __ZN8LuaUtils16PushStringVectorEP9lua_StateRKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE($0, $4);
 $22 = HEAP32[$4 >> 2] | 0;
 if ($22 | 0) {
  $24 = $4 + 4 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  if (($25 | 0) == ($22 | 0)) $31 = $22; else {
   $28 = $25;
   do {
    $27 = $28 + -12 | 0;
    HEAP32[$24 >> 2] = $27;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
    $28 = HEAP32[$24 >> 2] | 0;
   } while (($28 | 0) != ($22 | 0));
   $31 = HEAP32[$4 >> 2] | 0;
  }
  __ZdlPv($31);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $$0 = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$016$i = 0, $$05051 = 0, $10 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0;
 $4 = $1 + 1 + ($1 >>> 1) | 0;
 $5 = $0 + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ($4 >>> 0 > $6 >>> 0) $$0 = 4; else return;
 while (1) if ($$0 >>> 0 < $4 >>> 0) $$0 = $$0 << 1; else break;
 $10 = _malloc($$0) | 0;
 $12 = _malloc($$0 * 24 | 0) | 0;
 if (!(($10 | 0) != 0 & ($12 | 0) != 0)) {
  _free($10);
  _free($12);
  $15 = ___cxa_allocate_exception(4) | 0;
  __ZNSt9bad_allocC2Ev($15);
  ___cxa_throw($15 | 0, 1824, 151);
 }
 $16 = $0 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $0 + 8 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = $0 + 16 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$5 >> 2] = $$0;
 $22 = $0 + 24 | 0;
 HEAP32[$22 >> 2] = $$0 + -1;
 HEAP32[$16 >> 2] = $10;
 HEAP32[$18 >> 2] = $12;
 if ($$0 | 0) _memset($10 | 0, 0, $$0 | 0) | 0;
 $24 = $0 + 20 | 0;
 HEAP32[$24 >> 2] = -1;
 if ($6 | 0) {
  $$05051 = 0;
  do {
   if ((HEAP8[$17 + $$05051 >> 0] | 0) == 2) {
    $29 = $19 + ($$05051 * 24 | 0) | 0;
    $30 = __ZNK6spring11synced_hashINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEclERKS7_($0, $29) | 0;
    $31 = HEAP32[$22 >> 2] | 0;
    $32 = HEAP32[$16 >> 2] | 0;
    $$016$i = 0;
    while (1) {
     $34 = $$016$i + $30 & $31;
     $35 = $32 + $34 | 0;
     if ((HEAP8[$35 >> 0] | 0) == 2) $$016$i = $$016$i + 1 | 0; else break;
    }
    if (($$016$i | 0) > (HEAP32[$24 >> 2] | 0)) HEAP32[$24 >> 2] = $$016$i;
    HEAP8[$35 >> 0] = 2;
    $41 = HEAP32[$18 >> 2] | 0;
    $42 = $41 + ($34 * 24 | 0) | 0;
    HEAP32[$42 >> 2] = HEAP32[$29 >> 2];
    HEAP32[$42 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
    HEAP32[$42 + 8 >> 2] = HEAP32[$29 + 8 >> 2];
    HEAP32[$29 >> 2] = 0;
    HEAP32[$29 + 4 >> 2] = 0;
    HEAP32[$29 + 8 >> 2] = 0;
    $43 = $41 + ($34 * 24 | 0) + 12 | 0;
    $44 = $19 + ($$05051 * 24 | 0) + 12 | 0;
    HEAP32[$43 >> 2] = HEAP32[$44 >> 2];
    HEAP32[$43 + 4 >> 2] = HEAP32[$44 + 4 >> 2];
    HEAP32[$43 + 8 >> 2] = HEAP32[$44 + 8 >> 2];
    HEAP32[$44 >> 2] = 0;
    HEAP32[$44 + 4 >> 2] = 0;
    HEAP32[$44 + 8 >> 2] = 0;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
   }
   $$05051 = $$05051 + 1 | 0;
  } while (($$05051 | 0) != ($6 | 0));
 }
 _free($17);
 _free($19);
 return;
}

function __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i2325 = 0, $$0$i24 = 0, $$06$i$i = 0, $$sroa$5$0 = 0, $$sroa$speculated$i = 0, $12 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $52 = 0, $56 = 0, $7 = 0, $9 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $7 = (((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0) + 1 | 0;
 if ($7 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 12 | 0;
 if ($12 >>> 0 < 178956970) {
  $17 = $12 << 1;
  $$sroa$speculated$i = $17 >>> 0 < $7 >>> 0 ? $7 : $17;
  $21 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0;
  if (!$$sroa$speculated$i) {
   $$0$i24 = 0;
   $28 = 0;
   $29 = $21;
  } else if ($$sroa$speculated$i >>> 0 > 357913941) {
   $24 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($24);
   ___cxa_throw($24 | 0, 1824, 151);
  } else {
   $$0$i2325 = $$sroa$speculated$i;
   $56 = $21;
   label = 8;
  }
 } else {
  $$0$i2325 = 357913941;
  $56 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i24 = $$0$i2325;
  $28 = __Znwj($$0$i2325 * 12 | 0) | 0;
  $29 = $56;
 }
 $27 = $28 + ($29 * 12 | 0) | 0;
 $30 = $27;
 $32 = $28 + ($$0$i24 * 12 | 0) | 0;
 HEAP32[$27 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$27 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$27 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $34 = $27 + 12 | 0;
 $35 = HEAP32[$0 >> 2] | 0;
 $36 = HEAP32[$2 >> 2] | 0;
 if (($36 | 0) == ($35 | 0)) {
  $46 = $30;
  $47 = $35;
  $49 = $35;
 } else {
  $$06$i$i = $36;
  $$sroa$5$0 = $30;
  $40 = $27;
  do {
   $39 = $40 + -12 | 0;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$39 >> 2] = HEAP32[$$06$i$i >> 2];
   HEAP32[$39 + 4 >> 2] = HEAP32[$$06$i$i + 4 >> 2];
   HEAP32[$39 + 8 >> 2] = HEAP32[$$06$i$i + 8 >> 2];
   HEAP32[$$06$i$i >> 2] = 0;
   HEAP32[$$06$i$i + 4 >> 2] = 0;
   HEAP32[$$06$i$i + 8 >> 2] = 0;
   $40 = $$sroa$5$0 + -12 | 0;
   $$sroa$5$0 = $40;
  } while (($$06$i$i | 0) != ($35 | 0));
  $46 = $$sroa$5$0;
  $47 = HEAP32[$0 >> 2] | 0;
  $49 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $46;
 HEAP32[$2 >> 2] = $34;
 HEAP32[$9 >> 2] = $32;
 $48 = $47;
 if (($49 | 0) != ($48 | 0)) {
  $52 = $49;
  do {
   $52 = $52 + -12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
  } while (($52 | 0) != ($48 | 0));
 }
 if (!$47) return;
 __ZdlPv($47);
 return;
}

function __Z8luaH_getP5TablePK10lua_TValue($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i24 = 0, $$2 = 0, $106 = 0, $23 = 0, $25 = 0.0, $26 = 0, $27 = 0.0, $29 = 0, $38 = 0, $4 = 0, $55 = 0, $57 = 0.0, $60 = 0, label = 0;
 L1 : do switch (HEAP32[$1 + 4 >> 2] | 0) {
 case 4:
  {
   $4 = HEAP32[$1 >> 2] | 0;
   $$0$i = (HEAP32[$0 + 16 >> 2] | 0) + (((1 << (HEAPU8[$0 + 7 >> 0] | 0)) + -1 & HEAP32[$4 + 8 >> 2]) * 20 | 0) | 0;
   while (1) {
    if ((HEAP32[$$0$i + 12 >> 2] | 0) == 4) if ((HEAP32[$$0$i + 8 >> 2] | 0) == ($4 | 0)) break;
    $23 = HEAP32[$$0$i + 16 >> 2] | 0;
    if (!$23) {
     $$2 = 108164;
     label = 24;
     break;
    } else $$0$i = $23;
   }
   if ((label | 0) == 24) return $$2 | 0;
   $$2 = $$0$i;
   return $$2 | 0;
  }
 case 3:
  {
   $25 = +HEAPF32[$1 >> 2];
   $26 = ~~$25;
   $27 = +($26 | 0);
   if (!($27 == $25)) {
    $57 = +HEAPF32[$1 >> 2];
    $60 = HEAP32[$0 + 16 >> 2] | 0;
    if ($57 == 0.0) {
     $$0 = $60;
     break L1;
    }
    $$0 = $60 + ((((HEAPF32[tempDoublePtr >> 2] = $57, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$0 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
    break L1;
   }
   $29 = $26 + -1 | 0;
   if ($29 >>> 0 < (HEAP32[$0 + 28 >> 2] | 0) >>> 0) {
    $$2 = (HEAP32[$0 + 12 >> 2] | 0) + ($29 << 3) | 0;
    return $$2 | 0;
   }
   $38 = HEAP32[$0 + 16 >> 2] | 0;
   if (!$26) $$0$i24 = $38; else $$0$i24 = $38 + ((((HEAPF32[tempDoublePtr >> 2] = $27, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$0 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
   while (1) {
    if ((HEAP32[$$0$i24 + 12 >> 2] | 0) == 3) if (+HEAPF32[$$0$i24 + 8 >> 2] == $27) break;
    $55 = HEAP32[$$0$i24 + 16 >> 2] | 0;
    if (!$55) {
     $$2 = 108164;
     label = 24;
     break;
    } else $$0$i24 = $55;
   }
   if ((label | 0) == 24) return $$2 | 0;
   $$2 = $$0$i24;
   return $$2 | 0;
  }
 case 1:
  {
   $$0 = (HEAP32[$0 + 16 >> 2] | 0) + (((1 << (HEAPU8[$0 + 7 >> 0] | 0)) + -1 & HEAP32[$1 >> 2]) * 20 | 0) | 0;
   break;
  }
 case 2:
  {
   $$0 = (HEAP32[$0 + 16 >> 2] | 0) + ((((HEAP32[$1 >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$0 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
   break;
  }
 case 0:
  {
   $$2 = 108164;
   return $$2 | 0;
  }
 default:
  $$0 = (HEAP32[$0 + 16 >> 2] | 0) + ((((HEAP32[$1 >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$0 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
 } while (0);
 while (1) {
  if (__Z16luaO_rawequalObjPK10lua_TValueS1_($$0 + 8 | 0, $1) | 0) break;
  $106 = HEAP32[$$0 + 16 >> 2] | 0;
  if (!$106) {
   $$2 = 108164;
   label = 24;
   break;
  } else $$0 = $106;
 }
 if ((label | 0) == 24) return $$2 | 0;
 $$2 = $$0;
 return $$2 | 0;
}

function __ZNK6google12_GLOBAL__N_19FlagValue5EqualERKS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$02431$i10 = 0, $$02530$i11 = 0, $$02629$i12 = 0, $24 = 0, $3 = 0, $31 = 0, $41 = 0, $48 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $69 = 0, $70 = 0, $72 = 0, $73 = 0, $79 = 0, $80 = 0, $82 = 0, $83 = 0, label = 0;
 $3 = HEAP8[$0 + 4 >> 0] | 0;
 if ($3 << 24 >> 24 != (HEAP8[$1 + 4 >> 0] | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 switch ($3 << 24 >> 24 | 0) {
 case 0:
  {
   $$0 = (HEAP8[HEAP32[$0 >> 2] >> 0] | 0) == (HEAP8[HEAP32[$1 >> 2] >> 0] | 0);
   return $$0 | 0;
  }
 case 1:
  {
   $$0 = (HEAP32[HEAP32[$0 >> 2] >> 2] | 0) == (HEAP32[HEAP32[$1 >> 2] >> 2] | 0);
   return $$0 | 0;
  }
 case 2:
  {
   $$0 = (HEAP32[HEAP32[$0 >> 2] >> 2] | 0) == (HEAP32[HEAP32[$1 >> 2] >> 2] | 0);
   return $$0 | 0;
  }
 case 3:
  {
   $24 = HEAP32[$0 >> 2] | 0;
   $31 = HEAP32[$1 >> 2] | 0;
   $$0 = (HEAP32[$24 >> 2] | 0) == (HEAP32[$31 >> 2] | 0) ? (HEAP32[$24 + 4 >> 2] | 0) == (HEAP32[$31 + 4 >> 2] | 0) : 0;
   return $$0 | 0;
  }
 case 4:
  {
   $41 = HEAP32[$0 >> 2] | 0;
   $48 = HEAP32[$1 >> 2] | 0;
   $$0 = (HEAP32[$41 >> 2] | 0) == (HEAP32[$48 >> 2] | 0) ? (HEAP32[$41 + 4 >> 2] | 0) == (HEAP32[$48 + 4 >> 2] | 0) : 0;
   return $$0 | 0;
  }
 case 5:
  {
   $$0 = +HEAPF64[HEAP32[$0 >> 2] >> 3] == +HEAPF64[HEAP32[$1 >> 2] >> 3];
   return $$0 | 0;
  }
 case 6:
  {
   $62 = HEAP32[$0 >> 2] | 0;
   $63 = HEAP32[$1 >> 2] | 0;
   $65 = HEAP8[$62 + 11 >> 0] | 0;
   $66 = $65 << 24 >> 24 < 0;
   $69 = $65 & 255;
   $70 = $66 ? HEAP32[$62 + 4 >> 2] | 0 : $69;
   $72 = HEAP8[$63 + 11 >> 0] | 0;
   $73 = $72 << 24 >> 24 < 0;
   if (($70 | 0) != (($73 ? HEAP32[$63 + 4 >> 2] | 0 : $72 & 255) | 0)) {
    $$0 = 0;
    return $$0 | 0;
   }
   $79 = HEAP32[$62 >> 2] | 0;
   $80 = $66 ? $79 : $62;
   $82 = $73 ? HEAP32[$63 >> 2] | 0 : $63;
   $83 = ($70 | 0) == 0;
   if ($66) {
    if ($83) {
     $$0 = 1;
     return $$0 | 0;
    }
    $$0 = (_memcmp($80, $82, $70) | 0) == 0;
    return $$0 | 0;
   }
   if ($83) {
    $$0 = 1;
    return $$0 | 0;
   }
   if (($79 & 255) << 24 >> 24 == (HEAP8[$82 >> 0] | 0)) {
    $$02431$i10 = $69;
    $$02530$i11 = $82;
    $$02629$i12 = $62;
   } else {
    $$0 = 0;
    return $$0 | 0;
   }
   while (1) {
    $$02431$i10 = $$02431$i10 + -1 | 0;
    $$02629$i12 = $$02629$i12 + 1 | 0;
    if (!$$02431$i10) {
     $$0 = 1;
     label = 17;
     break;
    }
    $$02530$i11 = $$02530$i11 + 1 | 0;
    if ((HEAP8[$$02629$i12 >> 0] | 0) != (HEAP8[$$02530$i11 >> 0] | 0)) {
     $$0 = 0;
     label = 17;
     break;
    }
   }
   if ((label | 0) == 17) return $$0 | 0;
   break;
  }
 default:
  {
   $$0 = 0;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZN14SkirmishAIDataC2ERKS_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa$i$i$i = 0, $$04$i$i$i = 0, $$byval_copy = 0, $$byval_copy1 = 0, $11 = 0, $16 = 0, $17 = 0, $2 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $35 = 0, $38 = 0, $42 = 0, $46 = 0, $47 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 24 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 HEAP32[$0 >> 2] = 68116;
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 8 | 0, $1 + 8 | 0);
 HEAP32[$0 >> 2] = 68148;
 $11 = $1 + 20 | 0;
 $16 = HEAP32[$11 + 4 >> 2] | 0;
 $17 = $0 + 20 | 0;
 HEAP32[$17 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$17 + 4 >> 2] = $16;
 HEAP32[$0 >> 2] = 68132;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 28 | 0, $1 + 28 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 40 | 0, $1 + 40 | 0);
 __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_($0 + 52 | 0, $1 + 52 | 0);
 $27 = $0 + 64 | 0;
 $28 = $1 + 64 | 0;
 $29 = $0 + 68 | 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$29 + 8 >> 2] = 0;
 HEAP32[$29 + 12 >> 2] = 0;
 HEAP32[$0 + 84 >> 2] = -1;
 HEAP32[$0 + 88 >> 2] = 0;
 __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($27, HEAP32[$1 + 80 >> 2] | 0);
 $35 = HEAP32[$1 + 76 >> 2] | 0;
 L1 : do if (!$35) $$0$lcssa$i$i$i = 0; else {
  $38 = HEAP32[$1 + 68 >> 2] | 0;
  $$04$i$i$i = 0;
  while (1) {
   if ((HEAP8[$38 + $$04$i$i$i >> 0] | 0) == 2) {
    $$0$lcssa$i$i$i = $$04$i$i$i;
    break L1;
   }
   $42 = $$04$i$i$i + 1 | 0;
   if ($42 >>> 0 < $35 >>> 0) $$04$i$i$i = $42; else {
    $$0$lcssa$i$i$i = $42;
    break;
   }
  }
 } while (0);
 HEAP32[$2 >> 2] = $28;
 HEAP32[$2 + 4 >> 2] = $$0$lcssa$i$i$i;
 HEAP32[$3 >> 2] = $28;
 HEAP32[$3 + 4 >> 2] = $35;
 HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE6insertENSD_14const_iteratorESE_($27, $$byval_copy, $$byval_copy1);
 $46 = $0 + 92 | 0;
 $47 = $1 + 92 | 0;
 HEAP32[$46 >> 2] = HEAP32[$47 >> 2];
 HEAP32[$46 + 4 >> 2] = HEAP32[$47 + 4 >> 2];
 HEAP32[$46 + 8 >> 2] = HEAP32[$47 + 8 >> 2];
 HEAP32[$46 + 12 >> 2] = HEAP32[$47 + 12 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN6googleL7XMLTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$014 = 0, $$sroa$0$0$i$i = 0, $$sroa$0$0$i$i24 = 0, $$sroa$033$142$i$i$i = 0, $$sroa$033$142$i$i$i19 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $22 = 0, $28 = 0, $3 = 0, $31 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $47 = 0, $49 = 0, $55 = 0, $9 = 0, label = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1);
 $2 = $0 + 11 | 0;
 $3 = $0 + 4 | 0;
 $$014 = 0;
 while (1) {
  $4 = HEAP8[$2 >> 0] | 0;
  if ($4 << 24 >> 24 < 0) {
   $12 = HEAP32[$0 >> 2] | 0;
   $9 = HEAP32[$3 >> 2] | 0;
  } else {
   $12 = $0;
   $9 = $4 & 255;
  }
  if ($9 >>> 0 <= $$014 >>> 0) {
   $$0 = 0;
   $31 = $4;
   break;
  }
  $11 = $12 + $$014 | 0;
  $13 = $12 + $9 | 0;
  $14 = $11;
  $15 = $13;
  L8 : do if (($9 | 0) == ($$014 | 0) | ($15 - $14 | 0) < 1) $$sroa$0$0$i$i = $15; else {
   $$sroa$033$142$i$i$i = $14;
   $20 = $11;
   while (1) {
    if ((HEAP8[$20 >> 0] | 0) == 38) {
     $$sroa$0$0$i$i = $$sroa$033$142$i$i$i;
     break L8;
    }
    $22 = $20 + 1 | 0;
    if (($22 | 0) == ($13 | 0)) {
     $$sroa$0$0$i$i = $15;
     break;
    } else {
     $$sroa$033$142$i$i$i = $22;
     $20 = $22;
    }
   }
  } while (0);
  $28 = $$sroa$0$0$i$i - $12 | 0;
  if (($$sroa$0$0$i$i | 0) == ($13 | 0) | ($28 | 0) == -1) {
   $$0 = 0;
   $31 = $4;
   break;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKc($0, $28, 1, 92487) | 0;
  $$014 = $28 + 1 | 0;
 }
 while (1) {
  if ($31 << 24 >> 24 < 0) {
   $36 = HEAP32[$3 >> 2] | 0;
   $39 = HEAP32[$0 >> 2] | 0;
  } else {
   $36 = $31 & 255;
   $39 = $0;
  }
  if ($36 >>> 0 <= $$0 >>> 0) {
   label = 20;
   break;
  }
  $38 = $39 + $$0 | 0;
  $40 = $39 + $36 | 0;
  $41 = $38;
  $42 = $40;
  L21 : do if (($36 | 0) == ($$0 | 0) | ($42 - $41 | 0) < 1) $$sroa$0$0$i$i24 = $42; else {
   $$sroa$033$142$i$i$i19 = $41;
   $47 = $38;
   while (1) {
    if ((HEAP8[$47 >> 0] | 0) == 60) {
     $$sroa$0$0$i$i24 = $$sroa$033$142$i$i$i19;
     break L21;
    }
    $49 = $47 + 1 | 0;
    if (($49 | 0) == ($40 | 0)) {
     $$sroa$0$0$i$i24 = $42;
     break;
    } else {
     $$sroa$033$142$i$i$i19 = $49;
     $47 = $49;
    }
   }
  } while (0);
  $55 = $$sroa$0$0$i$i24 - $39 | 0;
  if (($$sroa$0$0$i$i24 | 0) == ($40 | 0) | ($55 | 0) == -1) {
   label = 20;
   break;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKc($0, $55, 1, 92493) | 0;
  $$0 = $55 + 1 | 0;
  $31 = HEAP8[$2 >> 0] | 0;
 }
 if ((label | 0) == 20) return;
}

function __ZN6google12_GLOBAL__N_115CommandLineFlag23FillCommandLineFlagInfoEPNS_19CommandLineFlagInfoE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$idx10 = 0, $$idx10$val$idx$val = 0, $$idx12 = 0, $10 = 0, $15 = 0, $16 = 0, $2 = 0, $22 = 0, $29 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($1, HEAP32[$0 >> 2] | 0) | 0;
 $$idx10 = $0 + 16 | 0;
 $$idx10$val$idx$val = HEAP8[(HEAP32[$$idx10 >> 2] | 0) + 4 >> 0] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($1 + 12 | 0, $$idx10$val$idx$val << 24 >> 24 > 6 ? 114224 : 90200 + (($$idx10$val$idx$val << 24 >> 24) * 7 | 0) | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($1 + 24 | 0, HEAP32[$0 + 4 >> 2] | 0) | 0;
 $9 = $1 + 36 | 0;
 $$idx12 = $0 + 20 | 0;
 __ZNK6google12_GLOBAL__N_19FlagValue8ToStringEv($2, HEAP32[$$idx12 >> 2] | 0);
 $10 = $9 + 11 | 0;
 if ((HEAP8[$10 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$9 >> 2] >> 0] = 0;
  HEAP32[$1 + 40 >> 2] = 0;
 } else {
  HEAP8[$9 >> 0] = 0;
  HEAP8[$10 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($9, 0);
 HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$9 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$9 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $15 = $1 + 48 | 0;
 __ZNK6google12_GLOBAL__N_19FlagValue8ToStringEv($2, HEAP32[$$idx10 >> 2] | 0);
 $16 = $15 + 11 | 0;
 if ((HEAP8[$16 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$15 >> 2] >> 0] = 0;
  HEAP32[$1 + 52 >> 2] = 0;
 } else {
  HEAP8[$15 >> 0] = 0;
  HEAP8[$16 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($15, 0);
 HEAP32[$15 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$15 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$15 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($1 + 60 | 0, HEAP32[$0 + 8 >> 2] | 0) | 0;
 $22 = $0 + 12 | 0;
 if (!(HEAP8[$22 >> 0] | 0)) if (__ZNK6google12_GLOBAL__N_19FlagValue5EqualERKS1_(HEAP32[$$idx12 >> 2] | 0, HEAP32[$$idx10 >> 2] | 0) | 0) $29 = 1; else {
  HEAP8[$22 >> 0] = 1;
  $29 = 0;
 } else $29 = 0;
 HEAP8[$1 + 73 >> 0] = $29;
 HEAP8[$1 + 72 >> 0] = (HEAP32[$0 + 24 >> 2] | 0) != 0 & 1;
 HEAP32[$1 + 76 >> 2] = HEAP32[HEAP32[$$idx12 >> 2] >> 2];
 STACKTOP = sp;
 return;
}

function __ZN10LuaMemPoolD2Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i = 0, $$06$i2$i$i = 0, $$pre$i$i = 0, $$pre13$i$i = 0, $$sroa$08$012$i$i = 0, $1 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $39 = 0, $4 = 0, $42 = 0, $45 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0;
 $1 = $0 + 56 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $0 + 60 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($2 | 0) != ($4 | 0)) {
  $$sroa$08$012$i$i = $2;
  do {
   __ZdlPv(HEAP32[$$sroa$08$012$i$i >> 2] | 0);
   $$sroa$08$012$i$i = $$sroa$08$012$i$i + 4 | 0;
  } while (($$sroa$08$012$i$i | 0) != ($4 | 0));
  $$pre$i$i = HEAP32[$1 >> 2] | 0;
  $$pre13$i$i = HEAP32[$3 >> 2] | 0;
  if (($$pre13$i$i | 0) != ($$pre$i$i | 0)) HEAP32[$3 >> 2] = $$pre13$i$i + (~(($$pre13$i$i + -4 - $$pre$i$i | 0) >>> 2) << 2);
 }
 $15 = $0 + 68 | 0;
 $16 = $0 + 12 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 HEAP32[$15 + 16 >> 2] = 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if ($17 | 0) {
  $19 = $0 + 4 | 0;
  $$06$i$i$i = 0;
  $59 = $17;
  while (1) {
   $21 = (HEAP32[$19 >> 2] | 0) + $$06$i$i$i | 0;
   if ((HEAP8[$21 >> 0] | 0) == 2) {
    HEAP8[$21 >> 0] = 0;
    $26 = HEAP32[$16 >> 2] | 0;
   } else $26 = $59;
   $$06$i$i$i = $$06$i$i$i + 1 | 0;
   if ($$06$i$i$i >>> 0 >= $26 >>> 0) break; else $59 = $26;
  }
 }
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = -1;
 $29 = $0 + 40 | 0;
 $30 = HEAP32[$29 >> 2] | 0;
 if ($30 | 0) {
  $32 = $0 + 32 | 0;
  $$06$i2$i$i = 0;
  $60 = $30;
  while (1) {
   $34 = (HEAP32[$32 >> 2] | 0) + $$06$i2$i$i | 0;
   if ((HEAP8[$34 >> 0] | 0) == 2) {
    HEAP8[$34 >> 0] = 0;
    $39 = HEAP32[$29 >> 2] | 0;
   } else $39 = $60;
   $$06$i2$i$i = $$06$i2$i$i + 1 | 0;
   if ($$06$i2$i$i >>> 0 >= $39 >>> 0) break; else $60 = $39;
  }
 }
 HEAP32[$0 + 44 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = -1;
 $42 = HEAP32[$1 >> 2] | 0;
 if (!$42) {
  $51 = $0 + 32 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  _free($52);
  $53 = $0 + 36 | 0;
  $54 = HEAP32[$53 >> 2] | 0;
  _free($54);
  $55 = $0 + 4 | 0;
  $56 = HEAP32[$55 >> 2] | 0;
  _free($56);
  $57 = $0 + 8 | 0;
  $58 = HEAP32[$57 >> 2] | 0;
  _free($58);
  return;
 }
 $45 = HEAP32[$3 >> 2] | 0;
 if (($45 | 0) != ($42 | 0)) HEAP32[$3 >> 2] = $45 + (~(($45 + -4 - $42 | 0) >>> 2) << 2);
 __ZdlPv($42);
 $51 = $0 + 32 | 0;
 $52 = HEAP32[$51 >> 2] | 0;
 _free($52);
 $53 = $0 + 36 | 0;
 $54 = HEAP32[$53 >> 2] | 0;
 _free($54);
 $55 = $0 + 4 | 0;
 $56 = HEAP32[$55 >> 2] | 0;
 _free($56);
 $57 = $0 + 8 | 0;
 $58 = HEAP32[$57 >> 2] | 0;
 _free($58);
 return;
}

function __ZL9sweeplistP9lua_StatePP8GCObjectj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$be = 0, $$0$lcssa = 0, $$02526 = 0, $$027 = 0, $$phi$trans$insert = 0, $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $41 = 0, $5 = 0, $8 = 0, $9 = 0, label = 0;
 $3 = $0 + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $4 + 20 | 0;
 $8 = HEAPU8[$5 >> 0] ^ 3;
 $9 = HEAP32[$1 >> 2] | 0;
 if (!$9) {
  $$0$lcssa = $1;
  return $$0$lcssa | 0;
 }
 $11 = $4 + 28 | 0;
 $$02526 = $2;
 $$027 = $1;
 $15 = $9;
 while (1) {
  if (!$$02526) {
   $$0$lcssa = $$027;
   label = 20;
   break;
  }
  $$02526 = $$02526 + -1 | 0;
  $14 = $15 + 4 | 0;
  $16 = HEAP16[$14 >> 1] | 0;
  if (($16 & 255) << 24 >> 24 == 8) {
   __ZL9sweeplistP9lua_StatePP8GCObjectj($0, $15 + 88 | 0, -3) | 0;
   $$phi$trans$insert = $15 + 5 | 0;
   $$pre$phiZ2D = $$phi$trans$insert;
   $23 = HEAP8[$$phi$trans$insert >> 0] | 0;
  } else {
   $$pre$phiZ2D = $15 + 5 | 0;
   $23 = ($16 & 65535) >>> 8 & 255;
  }
  $22 = $23 & 255;
  L11 : do if (!(($22 ^ 3) & $8)) {
   HEAP32[$$027 >> 2] = HEAP32[$15 >> 2];
   if (($15 | 0) == (HEAP32[$11 >> 2] | 0)) HEAP32[$11 >> 2] = HEAP32[$15 >> 2];
   switch (HEAP8[$14 >> 0] | 0) {
   case 9:
    {
     __Z14luaF_freeprotoP9lua_StateP5Proto($0, $15);
     $$0$be = $$027;
     break L11;
     break;
    }
   case 6:
    {
     __Z16luaF_freeclosureP9lua_StateP7Closure($0, $15);
     $$0$be = $$027;
     break L11;
     break;
    }
   case 10:
    {
     __Z14luaF_freeupvalP9lua_StateP5UpVal($0, $15);
     $$0$be = $$027;
     break L11;
     break;
    }
   case 5:
    {
     __Z9luaH_freeP9lua_StateP5Table($0, $15);
     $$0$be = $$027;
     break L11;
     break;
    }
   case 8:
    {
     __Z15luaE_freethreadP9lua_StateS0_($0, $15);
     $$0$be = $$027;
     break L11;
     break;
    }
   case 4:
    {
     $41 = (HEAP32[$3 >> 2] | 0) + 4 | 0;
     HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + -1;
     __Z13luaM_realloc_P9lua_StatePvjj($0, $15, (HEAP32[$15 + 12 >> 2] | 0) + 17 | 0, 0) | 0;
     $$0$be = $$027;
     break L11;
     break;
    }
   case 7:
    {
     __Z13luaM_realloc_P9lua_StatePvjj($0, $15, (HEAP32[$15 + 16 >> 2] | 0) + 24 | 0, 0) | 0;
     $$0$be = $$027;
     break L11;
     break;
    }
   default:
    {
     $$0$be = $$027;
     break L11;
    }
   }
  } else {
   HEAP8[$$pre$phiZ2D >> 0] = HEAPU8[$5 >> 0] & 3 | $22 & 248;
   $$0$be = $15;
  } while (0);
  $15 = HEAP32[$$0$be >> 2] | 0;
  if (!$15) {
   $$0$lcssa = $$0$be;
   label = 20;
   break;
  } else $$027 = $$0$be;
 }
 if ((label | 0) == 20) return $$0$lcssa | 0;
 return 0;
}

function __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$2 = 0, $$pre49 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $25 = 0, $32 = 0, $43 = 0, $46 = 0, $48 = 0, $58 = 0, $63 = 0, $74 = 0, $80 = 0, $85 = 0, $88 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $$pre49 = $4;
 if (!($7 & 2)) label = 4; else if (($$pre49 - $3 | 0) < 3) $$2 = 1; else {
  HEAP32[$5 >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = -17;
  $14 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $14 + 1;
  HEAP8[$14 >> 0] = -69;
  $16 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $16 + 1;
  HEAP8[$16 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $18 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if ($18 >>> 0 >= $1 >>> 0) {
    $$2 = 0;
    break L4;
   }
   $20 = HEAP32[$18 >> 2] | 0;
   if ($20 >>> 0 > $6 >>> 0 | ($20 & -2048 | 0) == 55296) {
    $$2 = 2;
    break L4;
   }
   do if ($20 >>> 0 < 128) {
    $25 = HEAP32[$5 >> 2] | 0;
    if (($$pre49 - $25 | 0) < 1) {
     $$2 = 1;
     break L4;
    }
    HEAP32[$5 >> 2] = $25 + 1;
    HEAP8[$25 >> 0] = $20;
   } else {
    if ($20 >>> 0 < 2048) {
     $32 = HEAP32[$5 >> 2] | 0;
     if (($$pre49 - $32 | 0) < 2) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $32 + 1;
     HEAP8[$32 >> 0] = $20 >>> 6 | 192;
     $43 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $43 + 1;
     HEAP8[$43 >> 0] = $20 & 63 | 128;
     break;
    }
    $46 = HEAP32[$5 >> 2] | 0;
    $48 = $$pre49 - $46 | 0;
    if ($20 >>> 0 < 65536) {
     if (($48 | 0) < 3) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $20 >>> 12 | 224;
     $58 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $58 + 1;
     HEAP8[$58 >> 0] = $20 >>> 6 & 63 | 128;
     $63 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $63 + 1;
     HEAP8[$63 >> 0] = $20 & 63 | 128;
     break;
    } else {
     if (($48 | 0) < 4) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $20 >>> 18 | 240;
     $74 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $74 + 1;
     HEAP8[$74 >> 0] = $20 >>> 12 & 63 | 128;
     $80 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $80 + 1;
     HEAP8[$80 >> 0] = $20 >>> 6 & 63 | 128;
     $85 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $85 + 1;
     HEAP8[$85 >> 0] = $20 & 63 | 128;
     break;
    }
   } while (0);
   $88 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
   HEAP32[$2 >> 2] = $88;
   $18 = $88;
  }
 } while (0);
 return $$2 | 0;
}

function __ZNK6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE18find_filled_bucketERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02129 = 0, $$02431$i$i26 = 0, $$02530$i$i27 = 0, $$02629$i$i28 = 0, $$4 = 0, $10 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $20 = 0, $22 = 0, $23 = 0, $27 = 0, $29 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $37 = 0, $40 = 0, $41 = 0, $5 = 0, $7 = 0, label = 0;
 if (!(HEAP32[$0 + 16 >> 2] | 0)) {
  $$4 = -1;
  return $$4 | 0;
 }
 $5 = __ZNK6spring11synced_hashINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEclERKS7_($0, $1) | 0;
 $7 = HEAP32[$0 + 20 >> 2] | 0;
 if (($7 | 0) < 0) {
  $$4 = -1;
  return $$4 | 0;
 }
 $10 = HEAP32[$0 + 24 >> 2] | 0;
 $12 = HEAP32[$0 + 4 >> 2] | 0;
 $13 = $0 + 8 | 0;
 $15 = HEAP8[$1 + 11 >> 0] | 0;
 $16 = $15 << 24 >> 24 < 0;
 $20 = $16 ? HEAP32[$1 + 4 >> 2] | 0 : $15 & 255;
 $22 = $16 ? HEAP32[$1 >> 2] | 0 : $1;
 $23 = ($20 | 0) == 0;
 $$02129 = 0;
 L7 : while (1) {
  $27 = $10 & $$02129 + $5;
  $29 = HEAP8[$12 + $27 >> 0] | 0;
  L9 : do switch ($29 << 24 >> 24) {
  case 0:
   {
    $$4 = -1;
    label = 15;
    break L7;
    break;
   }
  case 2:
   {
    $30 = HEAP32[$13 >> 2] | 0;
    $31 = $30 + ($27 * 12 | 0) | 0;
    $33 = HEAP8[$31 + 11 >> 0] | 0;
    $34 = $33 << 24 >> 24 < 0;
    $37 = $33 & 255;
    if ((($34 ? HEAP32[$30 + ($27 * 12 | 0) + 4 >> 2] | 0 : $37) | 0) == ($20 | 0)) {
     $40 = HEAP32[$31 >> 2] | 0;
     $41 = $34 ? $40 : $31;
     if ($34) {
      if ($23) {
       $$4 = $27;
       label = 15;
       break L7;
      }
      if (!(_memcmp($41, $22, $20) | 0)) {
       $$4 = $27;
       label = 15;
       break L7;
      } else break L9;
     }
     if ($23) {
      $$4 = $27;
      label = 15;
      break L7;
     }
     if (($40 & 255) << 24 >> 24 == (HEAP8[$22 >> 0] | 0)) {
      $$02431$i$i26 = $37;
      $$02530$i$i27 = $22;
      $$02629$i$i28 = $31;
      do {
       $$02431$i$i26 = $$02431$i$i26 + -1 | 0;
       $$02629$i$i28 = $$02629$i$i28 + 1 | 0;
       if (!$$02431$i$i26) {
        $$4 = $27;
        label = 15;
        break L7;
       }
       $$02530$i$i27 = $$02530$i$i27 + 1 | 0;
      } while ((HEAP8[$$02629$i$i28 >> 0] | 0) == (HEAP8[$$02530$i$i27 >> 0] | 0));
      if (!($29 << 24 >> 24)) {
       $$4 = -1;
       label = 15;
       break L7;
      }
     }
    }
    break;
   }
  default:
   {}
  } while (0);
  if (($$02129 | 0) < ($7 | 0)) $$02129 = $$02129 + 1 | 0; else {
   $$4 = -1;
   label = 15;
   break;
  }
 }
 if ((label | 0) == 15) return $$4 | 0;
 return 0;
}

function __ZL5blockP8LexState($0) {
 $0 = $0 | 0;
 var $$idx$val$i = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $30 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 28 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAP32[$1 + 4 >> 2] = -1;
 HEAP8[$1 + 10 >> 0] = 0;
 $6 = $3 + 50 | 0;
 HEAP8[$1 + 8 >> 0] = HEAP8[$6 >> 0] | 0;
 HEAP8[$1 + 9 >> 0] = 0;
 $10 = $3 + 20 | 0;
 HEAP32[$1 >> 2] = HEAP32[$10 >> 2];
 HEAP32[$10 >> 2] = $1;
 $12 = $0 + 32 | 0;
 $14 = (HEAP32[$12 >> 2] | 0) + 52 | 0;
 $16 = (HEAP16[$14 >> 1] | 0) + 1 << 16 >> 16;
 HEAP16[$14 >> 1] = $16;
 if (($16 & 65535) > 200) __Z13luaX_lexerrorP8LexStatePKci($0, 87765, 0);
 $18 = $0 + 12 | 0;
 L4 : do {
  switch (HEAP32[$18 >> 2] | 0) {
  case 287:
  case 276:
  case 262:
  case 261:
  case 260:
   {
    break L4;
    break;
   }
  default:
   {}
  }
  $20 = __ZL9statementP8LexState($0) | 0;
  if ((HEAP32[$18 >> 2] | 0) == 59) __Z9luaX_nextP8LexState($0);
  $23 = HEAP32[$2 >> 2] | 0;
  HEAP32[$23 + 36 >> 2] = HEAPU8[$23 + 50 >> 0];
 } while (!($20 | 0));
 $30 = (HEAP32[$12 >> 2] | 0) + 52 | 0;
 HEAP16[$30 >> 1] = (HEAP16[$30 >> 1] | 0) + -1 << 16 >> 16;
 $33 = HEAP32[$10 >> 2] | 0;
 HEAP32[$10 >> 2] = HEAP32[$33 >> 2];
 $37 = $33 + 8 | 0;
 $38 = HEAP16[$37 >> 1] | 0;
 $39 = $38 & 255;
 $$idx$val$i = HEAP32[(HEAP32[$3 + 12 >> 2] | 0) + 28 >> 2] | 0;
 $40 = $$idx$val$i + 50 | 0;
 $41 = HEAP8[$40 >> 0] | 0;
 if (($41 & 255) > ($39 & 255)) {
  $45 = $$idx$val$i + 24 | 0;
  $48 = $41;
  do {
   $46 = HEAP32[$45 >> 2] | 0;
   $47 = $48 + -1 << 24 >> 24;
   HEAP8[$40 >> 0] = $47;
   HEAP32[(HEAP32[(HEAP32[$$idx$val$i >> 2] | 0) + 24 >> 2] | 0) + ((HEAPU16[$$idx$val$i + 172 + (($47 & 255) << 1) >> 1] | 0) * 12 | 0) + 8 >> 2] = $46;
   $48 = HEAP8[$40 >> 0] | 0;
  } while (($48 & 255) > ($39 & 255));
  $59 = HEAP8[$33 + 9 >> 0] | 0;
 } else $59 = ($38 & 65535) >>> 8 & 255;
 if (!($59 << 24 >> 24)) {
  $63 = HEAP8[$6 >> 0] | 0;
  $64 = $63 & 255;
  $65 = $3 + 36 | 0;
  HEAP32[$65 >> 2] = $64;
  $66 = $33 + 4 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  __Z16luaK_patchtohereP9FuncStatei($3, $67);
  STACKTOP = sp;
  return;
 }
 __Z12luaK_codeABCP9FuncState6OpCodeiii($3, 35, HEAPU8[$37 >> 0] | 0, 0, 0) | 0;
 $63 = HEAP8[$6 >> 0] | 0;
 $64 = $63 & 255;
 $65 = $3 + 36 | 0;
 HEAP32[$65 >> 2] = $64;
 $66 = $33 + 4 | 0;
 $67 = HEAP32[$66 >> 2] | 0;
 __Z16luaK_patchtohereP9FuncStatei($3, $67);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i3739 = 0, $$0$i38 = 0, $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$i = 0, $12 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $52 = 0, $56 = 0, $7 = 0, $9 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $7 = (((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0) + 1 | 0;
 if ($7 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 12 | 0;
 if ($12 >>> 0 < 178956970) {
  $17 = $12 << 1;
  $$sroa$speculated$i = $17 >>> 0 < $7 >>> 0 ? $7 : $17;
  $21 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0;
  if (!$$sroa$speculated$i) {
   $$0$i38 = 0;
   $28 = 0;
   $29 = $21;
  } else if ($$sroa$speculated$i >>> 0 > 357913941) {
   $24 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($24);
   ___cxa_throw($24 | 0, 1824, 151);
  } else {
   $$0$i3739 = $$sroa$speculated$i;
   $56 = $21;
   label = 8;
  }
 } else {
  $$0$i3739 = 357913941;
  $56 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 12 | 0;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i38 = $$0$i3739;
  $28 = __Znwj($$0$i3739 * 12 | 0) | 0;
  $29 = $56;
 }
 $27 = $28 + ($29 * 12 | 0) | 0;
 $30 = $27;
 $32 = $28 + ($$0$i38 * 12 | 0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($27, $1);
 $34 = $27 + 12 | 0;
 $35 = HEAP32[$0 >> 2] | 0;
 $36 = HEAP32[$2 >> 2] | 0;
 if (($36 | 0) == ($35 | 0)) {
  $46 = $30;
  $47 = $35;
  $49 = $35;
 } else {
  $$06$i$i = $36;
  $$sroa$7$0 = $30;
  $40 = $27;
  do {
   $39 = $40 + -12 | 0;
   $$06$i$i = $$06$i$i + -12 | 0;
   HEAP32[$39 >> 2] = HEAP32[$$06$i$i >> 2];
   HEAP32[$39 + 4 >> 2] = HEAP32[$$06$i$i + 4 >> 2];
   HEAP32[$39 + 8 >> 2] = HEAP32[$$06$i$i + 8 >> 2];
   HEAP32[$$06$i$i >> 2] = 0;
   HEAP32[$$06$i$i + 4 >> 2] = 0;
   HEAP32[$$06$i$i + 8 >> 2] = 0;
   $40 = $$sroa$7$0 + -12 | 0;
   $$sroa$7$0 = $40;
  } while (($$06$i$i | 0) != ($35 | 0));
  $46 = $$sroa$7$0;
  $47 = HEAP32[$0 >> 2] | 0;
  $49 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $46;
 HEAP32[$2 >> 2] = $34;
 HEAP32[$9 >> 2] = $32;
 $48 = $47;
 if (($49 | 0) != ($48 | 0)) {
  $52 = $49;
  do {
   $52 = $52 + -12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
  } while (($52 | 0) != ($48 | 0));
 }
 if (!$47) return;
 __ZdlPv($47);
 return;
}

function __Z14luaK_patchlistP9FuncStateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i6 = 0, $$012$i = 0, $$idx$val$idx$val$i$i = 0, $11 = 0, $12 = 0, $14 = 0, $19 = 0, $25 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $39 = 0, $40 = 0, $46 = 0, $56 = 0, $57 = 0, $66 = 0, $7 = 0, $71 = 0, $9 = 0, label = 0, $$012$i$looptemp = 0;
 if ((HEAP32[$0 + 24 >> 2] | 0) == ($2 | 0)) {
  HEAP32[$0 + 28 >> 2] = $2;
  $7 = $0 + 32 | 0;
  if (($1 | 0) == -1) return;
  $9 = HEAP32[$7 >> 2] | 0;
  if (($9 | 0) == -1) {
   HEAP32[$7 >> 2] = $1;
   return;
  }
  $$idx$val$idx$val$i$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
  $$0$i$i = $9;
  while (1) {
   $11 = $$idx$val$idx$val$i$i + ($$0$i$i << 2) | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   $14 = ($12 >>> 14) + -131071 | 0;
   $$0$i$i$i = ($14 | 0) == -1 ? -1 : $$0$i$i + 1 + $14 | 0;
   if (($$0$i$i$i | 0) == -1) break; else $$0$i$i = $$0$i$i$i;
  }
  $19 = ~$$0$i$i + $1 | 0;
  if (((($19 | 0) > -1 ? $19 : 0 - $19 | 0) | 0) > 131071) {
   __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
   $25 = HEAP32[$11 >> 2] | 0;
  } else $25 = $12;
  HEAP32[$11 >> 2] = $25 & 16383 | ($19 << 14) + 2147467264;
  return;
 }
 if (($1 | 0) == -1) return;
 $30 = $0 + 12 | 0;
 $$012$i = $1;
 do {
  $31 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i << 2) | 0;
  $32 = HEAP32[$31 >> 2] | 0;
  $34 = ($32 >>> 14) + -131071 | 0;
  $$012$i$looptemp = $$012$i;
  $$012$i = ($34 | 0) == -1 ? -1 : $$012$i + 1 + $34 | 0;
  if (($$012$i$looptemp | 0) > 0) {
   $39 = $31 + -4 | 0;
   $40 = HEAP32[$39 >> 2] | 0;
   if ((HEAP8[87697 + ($40 & 63) >> 0] | 0) < 0) {
    $$0$i$i6 = $39;
    $46 = $40;
   } else label = 14;
  } else label = 14;
  if ((label | 0) == 14) {
   label = 0;
   $$0$i$i6 = $31;
   $46 = $32;
  }
  if (($46 & 63 | 0) == 27) {
   HEAP32[$$0$i$i6 >> 2] = $46 & 8372224 | $46 >>> 23 << 6 | 26;
   $56 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($$012$i$looptemp << 2) | 0;
   $57 = ~$$012$i$looptemp + $2 | 0;
   if (((($57 | 0) > -1 ? $57 : 0 - $57 | 0) | 0) > 131071) __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$30 >> 2] | 0, 89696);
   HEAP32[$56 >> 2] = HEAP32[$56 >> 2] & 16383 | ($57 << 14) + 2147467264;
  } else {
   $66 = ~$$012$i$looptemp + $2 | 0;
   if (((($66 | 0) > -1 ? $66 : 0 - $66 | 0) | 0) > 131071) {
    __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$30 >> 2] | 0, 89696);
    $71 = HEAP32[$31 >> 2] | 0;
   } else $71 = $32;
   HEAP32[$31 >> 2] = $71 & 16383 | ($66 << 14) + 2147467264;
  }
 } while (($$012$i | 0) != -1);
 return;
}

function ___stdio_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$056 = 0, $$058 = 0, $$059 = 0, $$061 = 0, $$1 = 0, $$157 = 0, $$160 = 0, $13 = 0, $14 = 0, $19 = 0, $24 = 0, $29 = 0, $3 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $5 = 0, $53 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 32 | 0;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$3 >> 2] = $5;
 $7 = $0 + 20 | 0;
 $9 = (HEAP32[$7 >> 2] | 0) - $5 | 0;
 HEAP32[$3 + 4 >> 2] = $9;
 HEAP32[$3 + 8 >> 2] = $1;
 HEAP32[$3 + 12 >> 2] = $2;
 $13 = $0 + 60 | 0;
 $14 = $0 + 44 | 0;
 $$056 = 2;
 $$058 = $9 + $2 | 0;
 $$059 = $3;
 while (1) {
  if (!(HEAP32[27140] | 0)) {
   HEAP32[$vararg_buffer3 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$vararg_buffer3 + 4 >> 2] = $$059;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $$056;
   $$0 = ___syscall_ret(___syscall146(146, $vararg_buffer3 | 0) | 0) | 0;
  } else {
   _pthread_cleanup_push(175, $0 | 0);
   HEAP32[$vararg_buffer >> 2] = HEAP32[$13 >> 2];
   HEAP32[$vararg_buffer + 4 >> 2] = $$059;
   HEAP32[$vararg_buffer + 8 >> 2] = $$056;
   $19 = ___syscall_ret(___syscall146(146, $vararg_buffer | 0) | 0) | 0;
   _pthread_cleanup_pop(0);
   $$0 = $19;
  }
  if (($$058 | 0) == ($$0 | 0)) {
   label = 6;
   break;
  }
  if (($$0 | 0) < 0) {
   label = 8;
   break;
  }
  $38 = $$058 - $$0 | 0;
  $40 = HEAP32[$$059 + 4 >> 2] | 0;
  if ($$0 >>> 0 > $40 >>> 0) {
   $42 = HEAP32[$14 >> 2] | 0;
   HEAP32[$4 >> 2] = $42;
   HEAP32[$7 >> 2] = $42;
   $$1 = $$0 - $40 | 0;
   $$157 = $$056 + -1 | 0;
   $$160 = $$059 + 8 | 0;
   $53 = HEAP32[$$059 + 12 >> 2] | 0;
  } else if (($$056 | 0) == 2) {
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + $$0;
   $$1 = $$0;
   $$157 = 2;
   $$160 = $$059;
   $53 = $40;
  } else {
   $$1 = $$0;
   $$157 = $$056;
   $$160 = $$059;
   $53 = $40;
  }
  HEAP32[$$160 >> 2] = (HEAP32[$$160 >> 2] | 0) + $$1;
  HEAP32[$$160 + 4 >> 2] = $53 - $$1;
  $$056 = $$157;
  $$058 = $38;
  $$059 = $$160;
 }
 if ((label | 0) == 6) {
  $24 = HEAP32[$14 >> 2] | 0;
  HEAP32[$0 + 16 >> 2] = $24 + (HEAP32[$0 + 48 >> 2] | 0);
  $29 = $24;
  HEAP32[$4 >> 2] = $29;
  HEAP32[$7 >> 2] = $29;
  $$061 = $2;
 } else if ((label | 0) == 8) {
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$7 >> 2] = 0;
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 32;
  if (($$056 | 0) == 2) $$061 = 0; else $$061 = $2 - (HEAP32[$$059 + 4 >> 2] | 0) | 0;
 }
 STACKTOP = sp;
 return $$061 | 0;
}

function __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021$lcssa$i$i = 0, $$021$lcssa$i$i9 = 0, $$021$ph$i$i = 0, $$021$ph$i$i2 = 0, $$02122$i$i = 0, $$02122$i$i5 = 0, $$023$i$i = 0, $$023$i$i4 = 0, $12 = 0, $14 = 0, $16 = 0, $22 = 0, $23 = 0, $3 = 0, $35 = 0, $37 = 0, $40 = 0, $46 = 0, $47 = 0, $6 = 0, $7 = 0, $9 = 0;
 $3 = HEAP32[$1 + 48 >> 2] | 0;
 if ($3 & 16 | 0) {
  $6 = $1 + 44 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $9 = HEAP32[$1 + 24 >> 2] | 0;
  if ($7 >>> 0 < $9 >>> 0) {
   HEAP32[$6 >> 2] = $9;
   $14 = $9;
  } else $14 = $7;
  $12 = HEAP32[$1 + 20 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  $16 = $14 - $12 | 0;
  if ($16 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  if ($16 >>> 0 < 11) {
   HEAP8[$0 + 11 >> 0] = $16;
   $$021$ph$i$i2 = $0;
  } else {
   $22 = $16 + 16 & -16;
   $23 = __Znwj($22) | 0;
   HEAP32[$0 >> 2] = $23;
   HEAP32[$0 + 8 >> 2] = $22 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $16;
   $$021$ph$i$i2 = $23;
  }
  if (($12 | 0) == ($14 | 0)) $$021$lcssa$i$i9 = $$021$ph$i$i2; else {
   $$02122$i$i5 = $$021$ph$i$i2;
   $$023$i$i4 = $12;
   while (1) {
    HEAP8[$$02122$i$i5 >> 0] = HEAP8[$$023$i$i4 >> 0] | 0;
    $$023$i$i4 = $$023$i$i4 + 1 | 0;
    if (($$023$i$i4 | 0) == ($14 | 0)) break; else $$02122$i$i5 = $$02122$i$i5 + 1 | 0;
   }
   $$021$lcssa$i$i9 = $$021$ph$i$i2 + $16 | 0;
  }
  HEAP8[$$021$lcssa$i$i9 >> 0] = 0;
  return;
 }
 if (!($3 & 8)) {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  return;
 }
 $35 = HEAP32[$1 + 8 >> 2] | 0;
 $37 = HEAP32[$1 + 16 >> 2] | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $40 = $37 - $35 | 0;
 if ($40 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($40 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $40;
  $$021$ph$i$i = $0;
 } else {
  $46 = $40 + 16 & -16;
  $47 = __Znwj($46) | 0;
  HEAP32[$0 >> 2] = $47;
  HEAP32[$0 + 8 >> 2] = $46 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $40;
  $$021$ph$i$i = $47;
 }
 if (($35 | 0) == ($37 | 0)) $$021$lcssa$i$i = $$021$ph$i$i; else {
  $$02122$i$i = $$021$ph$i$i;
  $$023$i$i = $35;
  while (1) {
   HEAP8[$$02122$i$i >> 0] = HEAP8[$$023$i$i >> 0] | 0;
   $$023$i$i = $$023$i$i + 1 | 0;
   if (($$023$i$i | 0) == ($37 | 0)) break; else $$02122$i$i = $$02122$i$i + 1 | 0;
  }
  $$021$lcssa$i$i = $$021$ph$i$i + $40 | 0;
 }
 HEAP8[$$021$lcssa$i$i >> 0] = 0;
 return;
}

function _wcsnrtombs($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$ = 0, $$04672 = 0, $$04971 = 0, $$052$$049 = 0, $$05270 = 0, $$061 = 0, $$073 = 0, $$1 = 0, $$147 = 0, $$150 = 0, $$153 = 0, $$24867 = 0, $$25166 = 0, $$254 = 0, $$268 = 0, $$3 = 0, $$35565 = 0, $$56 = 0, $$cast = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $20 = 0, $21 = 0, $24 = 0, $30 = 0, $31 = 0, $40 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP32[$6 >> 2] = $7;
 $8 = ($0 | 0) != 0;
 $$ = $8 ? $3 : 256;
 $$56 = $8 ? $0 : $5;
 $$cast = $7;
 L1 : do if (($$ | 0) != 0 & ($7 | 0) != 0) {
  $$04672 = 0;
  $$04971 = $2;
  $$05270 = $$;
  $$073 = $$56;
  $45 = $$cast;
  while (1) {
   $11 = $$04971 >>> 0 >= $$05270 >>> 0;
   if (!($11 | $$04971 >>> 0 > 32)) {
    $$061 = $$073;
    $$147 = $$04672;
    $$150 = $$04971;
    $$254 = $$05270;
    $24 = $45;
    break L1;
   }
   $$052$$049 = $11 ? $$05270 : $$04971;
   $14 = $$04971 - $$052$$049 | 0;
   $15 = _wcsrtombs($$073, $6, $$052$$049, 0) | 0;
   if (($15 | 0) == -1) break;
   $17 = ($$073 | 0) == ($5 | 0);
   $$153 = $$05270 - ($17 ? 0 : $15) | 0;
   $$1 = $17 ? $$073 : $$073 + $15 | 0;
   $20 = $15 + $$04672 | 0;
   $21 = HEAP32[$6 >> 2] | 0;
   if (($$153 | 0) != 0 & ($21 | 0) != 0) {
    $$04672 = $20;
    $$04971 = $14;
    $$05270 = $$153;
    $$073 = $$1;
    $45 = $21;
   } else {
    $$061 = $$1;
    $$147 = $20;
    $$150 = $14;
    $$254 = $$153;
    $24 = $21;
    break L1;
   }
  }
  $$061 = $$073;
  $$147 = -1;
  $$150 = $14;
  $$254 = 0;
  $24 = HEAP32[$6 >> 2] | 0;
 } else {
  $$061 = $$56;
  $$147 = 0;
  $$150 = $2;
  $$254 = $$;
  $24 = $$cast;
 } while (0);
 L8 : do if (!$24) $$3 = $$147; else if (($$254 | 0) != 0 & ($$150 | 0) != 0) {
  $$24867 = $$147;
  $$25166 = $$150;
  $$268 = $$061;
  $$35565 = $$254;
  $30 = $24;
  while (1) {
   $31 = _wcrtomb($$268, HEAP32[$30 >> 2] | 0, 0) | 0;
   if (($31 + 1 | 0) >>> 0 < 2) break;
   $30 = (HEAP32[$6 >> 2] | 0) + 4 | 0;
   HEAP32[$6 >> 2] = $30;
   $$25166 = $$25166 + -1 | 0;
   $$35565 = $$35565 - $31 | 0;
   $40 = $$24867 + 1 | 0;
   if (!(($$35565 | 0) != 0 & ($$25166 | 0) != 0)) {
    $$3 = $40;
    break L8;
   } else {
    $$24867 = $40;
    $$268 = $$268 + $31 | 0;
   }
  }
  if (!$31) {
   HEAP32[$6 >> 2] = 0;
   $$3 = $$24867;
  } else $$3 = -1;
 } else $$3 = $$147; while (0);
 if ($8) HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN10CGameSetup14RemapAllyteamsEv($0) {
 $0 = $0 | 0;
 var $$01221 = 0, $$02123$i$i = 0, $$in = 0, $$sroa$2$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $26 = 0, $3 = 0, $37 = 0, $40 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 224 | 0;
 $3 = $0 + 228 | 0;
 $5 = HEAP32[$2 >> 2] | 0;
 if ((HEAP32[$3 >> 2] | 0) == ($5 | 0)) {
  STACKTOP = sp;
  return;
 }
 $7 = $0 + 184 | 0;
 $8 = $0 + 200 | 0;
 $9 = $0 + 196 | 0;
 $10 = $0 + 192 | 0;
 $11 = $0 + 204 | 0;
 $12 = $0 + 208 | 0;
 $13 = $0 + 188 | 0;
 $$01221 = 0;
 $$in = $5;
 while (1) {
  $14 = $$in;
  L6 : do if (!(HEAP32[$8 >> 2] | 0)) label = 11; else {
   $18 = HEAP32[$14 + ($$01221 * 76 | 0) + 16 >> 2] | 0;
   $19 = HEAP32[$11 >> 2] | 0;
   if (($19 | 0) < 0) label = 11; else {
    $21 = HEAP32[$12 >> 2] | 0;
    $22 = HEAP32[$13 >> 2] | 0;
    $$02123$i$i = 0;
    L9 : while (1) {
     $26 = $$02123$i$i + $18 & $21;
     switch (HEAP8[$22 + $26 >> 0] | 0) {
     case 0:
      {
       label = 11;
       break L6;
       break;
      }
     case 2:
      {
       if ((HEAP32[(HEAP32[$10 >> 2] | 0) + ($26 << 3) >> 2] | 0) == ($18 | 0)) break L9;
       break;
      }
     default:
      {}
     }
     if (($$02123$i$i | 0) < ($19 | 0)) $$02123$i$i = $$02123$i$i + 1 | 0; else {
      label = 11;
      break L6;
     }
    }
    if (($26 | 0) == -1) label = 11; else $$sroa$2$0 = $26;
   }
  } while (0);
  if ((label | 0) == 11) {
   label = 0;
   $$sroa$2$0 = HEAP32[$9 >> 2] | 0;
  }
  if (($$sroa$2$0 | 0) == (HEAP32[$9 >> 2] | 0)) {
   label = 13;
   break;
  }
  $40 = HEAP32[(__ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($7, $14 + ($$01221 * 76 | 0) + 16 | 0) | 0) >> 2] | 0;
  HEAP32[(HEAP32[$2 >> 2] | 0) + ($$01221 * 76 | 0) + 16 >> 2] = $40;
  $$01221 = $$01221 + 1 | 0;
  $$in = HEAP32[$2 >> 2] | 0;
  if ($$01221 >>> 0 >= (((HEAP32[$3 >> 2] | 0) - $$in | 0) / 76 | 0) >>> 0) {
   label = 3;
   break;
  }
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 13) {
  $37 = ___cxa_allocate_exception(8) | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 81828, 41);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($37, $1);
  HEAP32[$37 >> 2] = 68080;
  ___cxa_throw($37 | 0, 192, 31);
 }
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload24 = 0, $16 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $33 = 0, $38 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy2 = sp + 40 | 0;
 $$byval_copy = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp + 12 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 if (!(HEAP32[$3 + 4 >> 2] & 1)) {
  HEAP32[$6 >> 2] = -1;
  $16 = HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$1 >> 2] = FUNCTION_TABLE_iiiiiii[$16 & 63]($0, $$byval_copy, $$byval_copy2, $3, $4, $6) | 0;
  switch (HEAP32[$6 >> 2] | 0) {
  case 0:
   {
    HEAP8[$5 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[$5 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[$5 >> 0] = 1;
    HEAP32[$4 >> 2] = 4;
   }
  }
  $$sroa$022$0 = HEAP32[$1 >> 2] | 0;
 } else {
  $21 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
  HEAP32[$$byval_copy2 >> 2] = $21;
  $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 110200) | 0;
  __ZNSt3__214__shared_count16__release_sharedEv($21) | 0;
  $23 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
  HEAP32[$$byval_copy2 >> 2] = $23;
  $24 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 110208) | 0;
  __ZNSt3__214__shared_count16__release_sharedEv($23) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] & 63]($$byval_copy, $24);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] & 63]($$byval_copy + 12 | 0, $24);
  HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
  $33 = $$byval_copy + 24 | 0;
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$9 >> 2];
  HEAP8[$5 >> 0] = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($1, $$byval_copy2, $$byval_copy, $33, $22, $4, 1) | 0) == ($$byval_copy | 0) & 1;
  $$sroa$022$0$copyload24 = HEAP32[$1 >> 2] | 0;
  $38 = $33;
  do {
   $38 = $38 + -12 | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($38);
  } while (($38 | 0) != ($$byval_copy | 0));
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;
 return $$sroa$022$0 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload24 = 0, $16 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $33 = 0, $38 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy2 = sp + 40 | 0;
 $$byval_copy = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp + 12 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 if (!(HEAP32[$3 + 4 >> 2] & 1)) {
  HEAP32[$6 >> 2] = -1;
  $16 = HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$1 >> 2] = FUNCTION_TABLE_iiiiiii[$16 & 63]($0, $$byval_copy, $$byval_copy2, $3, $4, $6) | 0;
  switch (HEAP32[$6 >> 2] | 0) {
  case 0:
   {
    HEAP8[$5 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[$5 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[$5 >> 0] = 1;
    HEAP32[$4 >> 2] = 4;
   }
  }
  $$sroa$022$0 = HEAP32[$1 >> 2] | 0;
 } else {
  $21 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
  HEAP32[$$byval_copy2 >> 2] = $21;
  $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 110168) | 0;
  __ZNSt3__214__shared_count16__release_sharedEv($21) | 0;
  $23 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
  HEAP32[$$byval_copy2 >> 2] = $23;
  $24 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 110184) | 0;
  __ZNSt3__214__shared_count16__release_sharedEv($23) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] & 63]($$byval_copy, $24);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] & 63]($$byval_copy + 12 | 0, $24);
  HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
  $33 = $$byval_copy + 24 | 0;
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$9 >> 2];
  HEAP8[$5 >> 0] = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($1, $$byval_copy2, $$byval_copy, $33, $22, $4, 1) | 0) == ($$byval_copy | 0) & 1;
  $$sroa$022$0$copyload24 = HEAP32[$1 >> 2] | 0;
  $38 = $33;
  do {
   $38 = $38 + -12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($38);
  } while (($38 | 0) != ($$byval_copy | 0));
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;
 return $$sroa$022$0 | 0;
}

function __ZNSt3__28ios_base4InitC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $15 = 0, $2 = 0, $3 = 0, $30 = 0, $37 = 0, $9 = 0;
 $1 = HEAP32[17412] | 0;
 __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(109800, $1, 109856);
 HEAP32[27280] = 73620;
 HEAP32[27282] = 73640;
 HEAP32[27281] = 0;
 __ZNSt3__28ios_base4initEPv(109128, 109800);
 HEAP32[27300] = 0;
 HEAP32[27301] = -1;
 __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(109864, $1, 109920);
 HEAP32[27302] = 73660;
 HEAP32[27304] = 73680;
 HEAP32[27303] = 0;
 __ZNSt3__28ios_base4initEPv(109216, 109864);
 HEAP32[27322] = 0;
 HEAP32[27323] = -1;
 $2 = HEAP32[17382] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(109928, $2, 109976);
 HEAP32[27324] = 73700;
 HEAP32[27325] = 73720;
 __ZNSt3__28ios_base4initEPv(109300, 109928);
 HEAP32[27343] = 0;
 HEAP32[27344] = -1;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(109984, $2, 110032);
 HEAP32[27345] = 73740;
 HEAP32[27346] = 73760;
 __ZNSt3__28ios_base4initEPv(109384, 109984);
 HEAP32[27364] = 0;
 HEAP32[27365] = -1;
 $3 = HEAP32[17441] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(110040, $3, 110088);
 HEAP32[27366] = 73700;
 HEAP32[27367] = 73720;
 __ZNSt3__28ios_base4initEPv(109468, 110040);
 HEAP32[27385] = 0;
 HEAP32[27386] = -1;
 $9 = HEAP32[109464 + (HEAP32[(HEAP32[27366] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[27408] = 73700;
 HEAP32[27409] = 73720;
 __ZNSt3__28ios_base4initEPv(109636, $9);
 HEAP32[27427] = 0;
 HEAP32[27428] = -1;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(110096, $3, 110144);
 HEAP32[27387] = 73740;
 HEAP32[27388] = 73760;
 __ZNSt3__28ios_base4initEPv(109552, 110096);
 HEAP32[27406] = 0;
 HEAP32[27407] = -1;
 $15 = HEAP32[109548 + (HEAP32[(HEAP32[27387] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[27429] = 73740;
 HEAP32[27430] = 73760;
 __ZNSt3__28ios_base4initEPv(109720, $15);
 HEAP32[27448] = 0;
 HEAP32[27449] = -1;
 HEAP32[109120 + (HEAP32[(HEAP32[27280] | 0) + -12 >> 2] | 0) + 72 >> 2] = 109296;
 HEAP32[109208 + (HEAP32[(HEAP32[27302] | 0) + -12 >> 2] | 0) + 72 >> 2] = 109380;
 $30 = 109464 + (HEAP32[(HEAP32[27366] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[$30 >> 2] = HEAP32[$30 >> 2] | 8192;
 $37 = 109548 + (HEAP32[(HEAP32[27387] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[$37 >> 2] = HEAP32[$37 >> 2] | 8192;
 HEAP32[109464 + (HEAP32[(HEAP32[27366] | 0) + -12 >> 2] | 0) + 72 >> 2] = 109296;
 HEAP32[109548 + (HEAP32[(HEAP32[27387] | 0) + -12 >> 2] | 0) + 72 >> 2] = 109380;
 return;
}

function _memchr($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$13745 = 0, $$140 = 0, $$2 = 0, $$23839 = 0, $$3 = 0, $$lcssa = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $20 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $7 = 0, $8 = 0, label = 0;
 $3 = $1 & 255;
 $7 = ($2 | 0) != 0;
 L1 : do if ($7 & ($0 & 3 | 0) != 0) {
  $8 = $1 & 255;
  $$03555 = $0;
  $$03654 = $2;
  while (1) {
   if ((HEAP8[$$03555 >> 0] | 0) == $8 << 24 >> 24) {
    $$035$lcssa65 = $$03555;
    $$036$lcssa64 = $$03654;
    label = 6;
    break L1;
   }
   $11 = $$03555 + 1 | 0;
   $12 = $$03654 + -1 | 0;
   $16 = ($12 | 0) != 0;
   if ($16 & ($11 & 3 | 0) != 0) {
    $$03555 = $11;
    $$03654 = $12;
   } else {
    $$035$lcssa = $11;
    $$036$lcssa = $12;
    $$lcssa = $16;
    label = 5;
    break;
   }
  }
 } else {
  $$035$lcssa = $0;
  $$036$lcssa = $2;
  $$lcssa = $7;
  label = 5;
 } while (0);
 if ((label | 0) == 5) if ($$lcssa) {
  $$035$lcssa65 = $$035$lcssa;
  $$036$lcssa64 = $$036$lcssa;
  label = 6;
 } else {
  $$2 = $$035$lcssa;
  $$3 = 0;
 }
 L8 : do if ((label | 0) == 6) {
  $18 = $1 & 255;
  if ((HEAP8[$$035$lcssa65 >> 0] | 0) == $18 << 24 >> 24) {
   $$2 = $$035$lcssa65;
   $$3 = $$036$lcssa64;
  } else {
   $20 = Math_imul($3, 16843009) | 0;
   L11 : do if ($$036$lcssa64 >>> 0 > 3) {
    $$046 = $$035$lcssa65;
    $$13745 = $$036$lcssa64;
    while (1) {
     $23 = HEAP32[$$046 >> 2] ^ $20;
     if (($23 & -2139062144 ^ -2139062144) & $23 + -16843009 | 0) break;
     $29 = $$046 + 4 | 0;
     $30 = $$13745 + -4 | 0;
     if ($30 >>> 0 > 3) {
      $$046 = $29;
      $$13745 = $30;
     } else {
      $$0$lcssa = $29;
      $$137$lcssa = $30;
      label = 11;
      break L11;
     }
    }
    $$140 = $$046;
    $$23839 = $$13745;
   } else {
    $$0$lcssa = $$035$lcssa65;
    $$137$lcssa = $$036$lcssa64;
    label = 11;
   } while (0);
   if ((label | 0) == 11) if (!$$137$lcssa) {
    $$2 = $$0$lcssa;
    $$3 = 0;
    break;
   } else {
    $$140 = $$0$lcssa;
    $$23839 = $$137$lcssa;
   }
   while (1) {
    if ((HEAP8[$$140 >> 0] | 0) == $18 << 24 >> 24) {
     $$2 = $$140;
     $$3 = $$23839;
     break L8;
    }
    $35 = $$140 + 1 | 0;
    $$23839 = $$23839 + -1 | 0;
    if (!$$23839) {
     $$2 = $35;
     $$3 = 0;
     break;
    } else $$140 = $35;
   }
  }
 } while (0);
 return ($$3 | 0 ? $$2 : 0) | 0;
}

function _log_frontend_register_section($0) {
 $0 = $0 | 0;
 var $$0$ph$lcssa$i$i$i = 0, $$0$ph13$i$i$i = 0, $$0$ph13$us$i$i$i = 0, $$07$ph12$i$i$i = 0, $$07$ph12$us$i$i$i = 0, $$0710$i$i$i = 0, $$0710$us$us$i$i$i = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $18 = 0, $2 = 0, $23 = 0, $30 = 0, $34 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $0;
 if (($0 | 0) == 114224) {
  STACKTOP = sp;
  return;
 }
 if ($0 | 0) if (!(HEAP8[$0 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 if (!(HEAP8[106136] | 0)) if (___cxa_guard_acquire(106136) | 0) {
  HEAP32[26743] = 0;
  HEAP32[26744] = 0;
  HEAP32[26742] = 106972;
  ___cxa_atexit(163, 106968, ___dso_handle | 0) | 0;
 }
 $10 = HEAP32[26743] | 0;
 if ($10 | 0) {
  $12 = HEAP32[$2 >> 2] | 0;
  $13 = ($12 | 0) == 0;
  L14 : do if ($13) {
   $$0$ph13$us$i$i$i = 106972;
   $$07$ph12$us$i$i$i = $10;
   while (1) {
    $$0710$us$us$i$i$i = $$07$ph12$us$i$i$i;
    while (1) {
     if (HEAP32[$$0710$us$us$i$i$i + 16 >> 2] | 0) break;
     $18 = HEAP32[$$0710$us$us$i$i$i + 4 >> 2] | 0;
     if (!$18) {
      $$0$ph$lcssa$i$i$i = $$0$ph13$us$i$i$i;
      break L14;
     } else $$0710$us$us$i$i$i = $18;
    }
    $$07$ph12$us$i$i$i = HEAP32[$$0710$us$us$i$i$i >> 2] | 0;
    if (!$$07$ph12$us$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$0710$us$us$i$i$i;
     break;
    } else $$0$ph13$us$i$i$i = $$0710$us$us$i$i$i;
   }
  } else {
   $$0$ph13$i$i$i = 106972;
   $$07$ph12$i$i$i = $10;
   while (1) {
    $$0710$i$i$i = $$07$ph12$i$i$i;
    while (1) {
     $23 = HEAP32[$$0710$i$i$i + 16 >> 2] | 0;
     if ($23 | 0) if ((_strcmp($23, $12) | 0) <= 0) break;
     $30 = HEAP32[$$0710$i$i$i + 4 >> 2] | 0;
     if (!$30) {
      $$0$ph$lcssa$i$i$i = $$0$ph13$i$i$i;
      break L14;
     } else $$0710$i$i$i = $30;
    }
    $$07$ph12$i$i$i = HEAP32[$$0710$i$i$i >> 2] | 0;
    if (!$$07$ph12$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$0710$i$i$i;
     break;
    } else $$0$ph13$i$i$i = $$0710$i$i$i;
   }
  } while (0);
  if (($$0$ph$lcssa$i$i$i | 0) != 106972) {
   $34 = HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0;
   if (!$13) {
    if (!$34) {
     STACKTOP = sp;
     return;
    }
    if ((_strcmp($12, $34) | 0) <= 0) {
     STACKTOP = sp;
     return;
    }
   }
  }
 }
 __ZNSt3__26__treeIPKc26log_filter_section_compareNS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEEiEEbEERKT_DpOT0_($1, 106968, $2, $2);
 STACKTOP = sp;
 return;
}

function __Z12luaD_poscallP9lua_StateP10lua_TValue($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$03542 = 0, $$03741 = 0, $$136$lcssa = 0, $$13640 = 0, $$13839 = 0, $$143 = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $29 = 0, $34 = 0, $35 = 0, $37 = 0, $39 = 0, $45 = 0, $51 = 0, $56 = 0, $59 = 0, $6 = 0, $62 = 0, $9 = 0, label = 0;
 $2 = $0 + 56 | 0;
 if (!(HEAP8[$2 >> 0] & 2)) {
  $$0 = $1;
  $$pre$phiZ2D = $0 + 20 | 0;
 } else {
  $6 = $0 + 32 | 0;
  $9 = $1 - (HEAP32[$6 >> 2] | 0) | 0;
  __Z13luaD_callhookP9lua_Stateii($0, 1, -1);
  $10 = $0 + 20 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  L4 : do if (!(HEAP8[(HEAP32[HEAP32[$11 + 4 >> 2] >> 2] | 0) + 6 >> 0] | 0)) if (HEAP8[$2 >> 0] & 2) {
   $21 = $11 + 20 | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   HEAP32[$21 >> 2] = $22 + -1;
   if ($22 | 0) do {
    __Z13luaD_callhookP9lua_Stateii($0, 4, -1);
    if (!(HEAP8[$2 >> 0] & 2)) break L4;
    $28 = (HEAP32[$10 >> 2] | 0) + 20 | 0;
    $29 = HEAP32[$28 >> 2] | 0;
    HEAP32[$28 >> 2] = $29 + -1;
   } while (($29 | 0) != 0);
  } while (0);
  $$0 = (HEAP32[$6 >> 2] | 0) + $9 | 0;
  $$pre$phiZ2D = $10;
 }
 $34 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $35 = $34 + -24 | 0;
 HEAP32[$$pre$phiZ2D >> 2] = $35;
 $37 = HEAP32[$34 + 4 >> 2] | 0;
 $39 = HEAP32[$34 + 16 >> 2] | 0;
 HEAP32[$0 + 12 >> 2] = HEAP32[$35 >> 2];
 HEAP32[$0 + 24 >> 2] = HEAP32[$34 + -12 >> 2];
 $45 = $0 + 8 | 0;
 if (!$39) {
  $$136$lcssa = $37;
  HEAP32[$45 >> 2] = $$136$lcssa;
  $62 = $39 + 1 | 0;
  return $62 | 0;
 } else {
  $$03542 = $37;
  $$03741 = $39;
  $$143 = $$0;
 }
 while (1) {
  if ($$143 >>> 0 >= (HEAP32[$45 >> 2] | 0) >>> 0) break;
  $51 = $$03542 + 8 | 0;
  HEAP32[$$03542 >> 2] = HEAP32[$$143 >> 2];
  HEAP32[$$03542 + 4 >> 2] = HEAP32[$$143 + 4 >> 2];
  $56 = $$03741 + -1 | 0;
  if (!$56) {
   $$136$lcssa = $51;
   label = 14;
   break;
  } else {
   $$03542 = $51;
   $$03741 = $56;
   $$143 = $$143 + 8 | 0;
  }
 }
 if ((label | 0) == 14) {
  HEAP32[$45 >> 2] = $$136$lcssa;
  $62 = $39 + 1 | 0;
  return $62 | 0;
 }
 if (($$03741 | 0) > 0) {
  $$13640 = $$03542;
  $$13839 = $$03741;
 } else {
  $$136$lcssa = $$03542;
  HEAP32[$45 >> 2] = $$136$lcssa;
  $62 = $39 + 1 | 0;
  return $62 | 0;
 }
 while (1) {
  $59 = $$13640 + 8 | 0;
  HEAP32[$$13640 + 4 >> 2] = 0;
  if (($$13839 | 0) > 1) {
   $$13640 = $59;
   $$13839 = $$13839 + -1 | 0;
  } else {
   $$136$lcssa = $59;
   break;
  }
 }
 HEAP32[$45 >> 2] = $$136$lcssa;
 $62 = $39 + 1 | 0;
 return $62 | 0;
}

function __ZN10CGameSetup12LoadMutatorsERK9TdfParserRNSt3__26vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$01435 = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer = sp;
 $3 = sp + 56 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 28 | 0;
 $6 = sp + 16 | 0;
 $7 = sp + 4 | 0;
 $8 = $7 + 11 | 0;
 $9 = $4 + 11 | 0;
 $10 = $4 + 4 | 0;
 $11 = $2 + 4 | 0;
 $12 = $2 + 8 | 0;
 $$01435 = 0;
 while (1) {
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 114224, 0);
  HEAP32[$7 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($7, 81813, 14);
  $16 = (HEAP8[$8 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7;
  HEAP32[$vararg_buffer >> 2] = $$01435;
  _snprintf($3, 64, $16, $vararg_buffer) | 0;
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6, $3, _strlen($3) | 0);
  __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($4 | 0, $1 | 0, $5 | 0, $6 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $18 = HEAP8[$9 >> 0] | 0;
  if (!(($18 << 24 >> 24 < 0 ? HEAP32[$10 >> 2] | 0 : $18 & 255) | 0)) break;
  $24 = HEAP32[$11 >> 2] | 0;
  if (($24 | 0) == (HEAP32[$12 >> 2] | 0)) __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_($2, $4); else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($24, $4);
   HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 12;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $$01435 = $$01435 + 1 | 0;
  if (($$01435 | 0) >= 10) {
   label = 8;
   break;
  }
 }
 if ((label | 0) == 8) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZN9LuaParser8LoadFileEP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $1 = 0, $12 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $1 = sp + 252 | 0;
 $2 = sp + 240 | 0;
 $3 = sp + 16 | 0;
 $4 = sp;
 $8 = HEAP32[(HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 16 >> 2] | 0) + 12 >> 2] | 0;
 $9 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, 0) | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $9, _strlen($9) | 0);
 if (!(__ZN5LuaIO12IsSimplePathERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1) | 0)) {
  $$2 = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return $$2 | 0;
 }
 $12 = $8 + 36 | 0;
 if ((HEAP8[$12 + 11 >> 0] | 0) < 0) $17 = HEAP32[$12 >> 2] | 0; else $17 = $12;
 $18 = __ZL21luaL_SpringOptCStringP9lua_StateiPKcPjPFS2_S0_iS2_S3_EPFS2_S0_iS3_EiS2_($0, 2, $17, 83328) | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, $18, _strlen($18) | 0);
 __ZN12CFileHandler10AllowModesERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($2 | 0, $3 | 0, $12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZN12CFileHandlerC1ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($3 | 0, $1 | 0, $2 | 0);
 if ((HEAP32[$3 + 220 >> 2] | 0) > -1) {
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  if (__ZN12CFileHandler14LoadStringDataERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0, $4 | 0) | 0) {
   __Z14lua_pushstringP9lua_StatePKc($0, (HEAP8[$4 + 11 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4);
   $$0 = 1;
  } else {
   __Z11lua_pushnilP9lua_State($0);
   __Z14lua_pushstringP9lua_StatePKc($0, 83365);
   $$0 = 2;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $$1 = $$0;
 } else {
  __Z11lua_pushnilP9lua_State($0);
  __Z14lua_pushstringP9lua_StatePKc($0, 83352);
  $$1 = 2;
 }
 __ZN12CFileHandlerD2Ev($3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $$2 = $$1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN10CGameSetup25LoadStartPositionsFromMapEv($0) {
 $0 = $0 | 0;
 var $$01029 = 0, $$in = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $22 = 0, $3 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 __ZNK15CArchiveScanner16MapNameToMapFileERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($2 | 0, HEAP32[_archiveScanner >> 2] | 0, $0 + 44 | 0);
 __ZN9MapParserC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1, $2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 if (!(__ZNK9MapParser7IsValidEv($1) | 0)) {
  $14 = ___cxa_allocate_exception(8) | 0;
  __ZNK9MapParser11GetErrorLogEv($3, $1);
  $15 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($3, 0, 82681) | 0;
  HEAP32[$2 >> 2] = HEAP32[$15 >> 2];
  HEAP32[$2 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
  HEAP32[$2 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
  HEAP32[$15 >> 2] = 0;
  HEAP32[$15 + 4 >> 2] = 0;
  HEAP32[$15 + 8 >> 2] = 0;
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($14, $2);
  HEAP32[$14 >> 2] = 68080;
  ___cxa_throw($14 | 0, 192, 31);
 }
 $7 = $0 + 224 | 0;
 $8 = $0 + 228 | 0;
 $10 = HEAP32[$7 >> 2] | 0;
 if ((HEAP32[$8 >> 2] | 0) == ($10 | 0)) {
  __ZN9MapParserD2Ev($1);
  STACKTOP = sp;
  return;
 }
 $12 = $2 + 4 | 0;
 $13 = $2 + 8 | 0;
 $$01029 = 0;
 $$in = $10;
 while (1) {
  HEAPF32[$2 >> 2] = 0.0;
  HEAPF32[$12 >> 2] = 0.0;
  HEAPF32[$13 >> 2] = 0.0;
  if (!(__ZNK9MapParser11GetStartPosEiR6float3($1, HEAP32[$$in + ($$01029 * 76 | 0) + 12 >> 2] | 0, $2) | 0)) {
   label = 7;
   break;
  }
  $22 = (HEAP32[$7 >> 2] | 0) + ($$01029 * 76 | 0) + 36 | 0;
  HEAP32[$22 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$22 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$22 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  $$01029 = $$01029 + 1 | 0;
  $$in = HEAP32[$7 >> 2] | 0;
  if ($$01029 >>> 0 >= (((HEAP32[$8 >> 2] | 0) - $$in | 0) / 76 | 0) >>> 0) {
   label = 5;
   break;
  }
 }
 if ((label | 0) == 5) {
  __ZN9MapParserD2Ev($1);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 7) {
  $20 = ___cxa_allocate_exception(8) | 0;
  __ZNK9MapParser11GetErrorLogEv($3, $1);
  __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($20, $3);
  HEAP32[$20 >> 2] = 68080;
  ___cxa_throw($20 | 0, 192, 31);
 }
}

function __ZN9LuaParser9TimeCheckEP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $2 = 0, $21 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $35 = 0, $40 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $1 = sp + 36 | 0;
 $2 = sp + 24 | 0;
 if (!(__Z12lua_isstringP9lua_Statei($0, 1) | 0)) label = 3; else if ((__Z8lua_typeP9lua_Statei($0, 2) | 0) != 6) label = 3;
 if ((label | 0) == 3) __Z10luaL_errorP9lua_StatePKcz($0, 83583, $vararg_buffer) | 0;
 $7 = __Z13lua_tolstringP9lua_StateiPj($0, 1, 0) | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $7, _strlen($7) | 0);
 __Z10lua_removeP9lua_Statei($0, 1);
 $9 = __ZN12spring_clock8GetTicksEv() | 0;
 $10 = tempRet0;
 $11 = __ZN11spring_time2xsE;
 $13 = HEAP32[$11 >> 2] | 0;
 $16 = HEAP32[$11 + 4 >> 2] | 0;
 if (__Z9lua_pcallP9lua_Stateiii($0, (__Z10lua_gettopP9lua_State($0) | 0) + -1 | 0, -1, 0) | 0) {
  $21 = __Z13lua_tolstringP9lua_StateiPj($0, -1, 0) | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $21, _strlen($21) | 0);
  __Z10lua_settopP9lua_Statei($0, -2);
  __Z10luaL_errorP9lua_StatePKcz($0, (HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2, $vararg_buffer1) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 }
 $28 = __ZN12spring_clock8GetTicksEv() | 0;
 $29 = tempRet0;
 $30 = __ZN11spring_time2xsE;
 $32 = HEAP32[$30 >> 2] | 0;
 $35 = HEAP32[$30 + 4 >> 2] | 0;
 $40 = (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
 $41 = _i64Subtract($13 | 0, $16 | 0, $9 | 0, $10 | 0) | 0;
 $43 = _i64Add($41 | 0, tempRet0 | 0, $28 | 0, $29 | 0) | 0;
 $45 = _i64Subtract($43 | 0, tempRet0 | 0, $32 | 0, $35 | 0) | 0;
 $47 = ___divdi3($45 | 0, tempRet0 | 0, 1e6, 0) | 0;
 HEAP32[$vararg_buffer3 >> 2] = $40;
 HEAP32[$vararg_buffer3 + 4 >> 2] = $47;
 _log_frontend_record(35, 114224, 83635, $vararg_buffer3);
 $49 = __Z10lua_gettopP9lua_State($0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return $49 | 0;
}

function __Z11lua_setfenvP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$026 = 0, $$1$i = 0, $$pre$phi27Z2D = 0, $$pre$phiZ2D = 0, $22 = 0, $31 = 0, $32 = 0, $42 = 0, $48 = 0, $54 = 0, $56 = 0, $6 = 0, $63 = 0, $68 = 0, label = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 switch (HEAP32[$$1$i + 4 >> 2] | 0) {
 case 6:
  {
   $42 = $0 + 8 | 0;
   HEAP32[(HEAP32[$$1$i >> 2] | 0) + 12 >> 2] = HEAP32[(HEAP32[$42 >> 2] | 0) + -8 >> 2];
   $$pre$phiZ2D = $42;
   label = 15;
   break;
  }
 case 7:
  {
   $48 = $0 + 8 | 0;
   HEAP32[(HEAP32[$$1$i >> 2] | 0) + 12 >> 2] = HEAP32[(HEAP32[$48 >> 2] | 0) + -8 >> 2];
   $$pre$phiZ2D = $48;
   label = 15;
   break;
  }
 case 8:
  {
   $54 = HEAP32[$$1$i >> 2] | 0;
   $56 = $0 + 8 | 0;
   HEAP32[$54 + 72 >> 2] = HEAP32[(HEAP32[$56 >> 2] | 0) + -8 >> 2];
   HEAP32[$54 + 76 >> 2] = 5;
   $$pre$phiZ2D = $56;
   label = 15;
   break;
  }
 default:
  {
   $$026 = 0;
   $$pre$phi27Z2D = $0 + 8 | 0;
  }
 }
 if ((label | 0) == 15) {
  $63 = HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -8 >> 2] | 0;
  if (!(HEAP8[$63 + 5 >> 0] & 3)) {
   $$026 = 1;
   $$pre$phi27Z2D = $$pre$phiZ2D;
  } else {
   $68 = HEAP32[$$1$i >> 2] | 0;
   if (!(HEAP8[$68 + 5 >> 0] & 4)) {
    $$026 = 1;
    $$pre$phi27Z2D = $$pre$phiZ2D;
   } else {
    __Z13luaC_barrierfP9lua_StateP8GCObjectS2_($0, $68, $63);
    $$026 = 1;
    $$pre$phi27Z2D = $$pre$phiZ2D;
   }
  }
 }
 HEAP32[$$pre$phi27Z2D >> 2] = (HEAP32[$$pre$phi27Z2D >> 2] | 0) + -8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $$026 | 0;
}

function __GLOBAL__sub_I_main_cpp() {
 var $0 = 0, $10 = 0, $4 = 0, $8 = 0;
 HEAPF32[27038] = 0.0;
 HEAPF32[27039] = 1.0;
 HEAPF32[27040] = 0.0;
 HEAPF32[27035] = 0.0;
 HEAPF32[27036] = 0.0;
 HEAPF32[27037] = 1.0;
 HEAPF32[27032] = 1.0;
 HEAPF32[27033] = 0.0;
 HEAPF32[27034] = 0.0;
 HEAPF32[27029] = 0.0;
 HEAPF32[27030] = 0.0;
 HEAPF32[27031] = 0.0;
 HEAPF32[27026] = 1.0;
 HEAPF32[27027] = 1.0;
 HEAPF32[27028] = 1.0;
 HEAPF32[27023] = 1.0;
 HEAPF32[27024] = 1.0;
 HEAPF32[27025] = 0.0;
 HEAPF32[27020] = 1.0;
 HEAPF32[27021] = 0.0;
 HEAPF32[27022] = 1.0;
 HEAPF32[27017] = 0.0;
 HEAPF32[27018] = 1.0;
 HEAPF32[27019] = 1.0;
 $0 = 106256;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 $4 = 106248;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 _log_frontend_register_section(84268);
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112125, 84284, 84297, 84346, 112110, 112111);
 HEAP32[27005] = 0;
 HEAP32[27006] = 0;
 HEAP32[27007] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(108020, 114224, 0);
 HEAP32[27016] = 108020;
 $8 = HEAP32[27016] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(108032, $8);
 __ZN6google14FlagRegistererC2INSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEPKcSA_SA_PT_SC_(112124, 84404, 84411, 84346, $8, 108032);
 HEAP32[27014] = 108020;
 HEAP32[27015] = 108032;
 ___cxa_atexit(173, 108056, ___dso_handle | 0) | 0;
 HEAP32[26997] = HEAP32[27016];
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112123, 84440, 84457, 84346, 112112, 112113);
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112122, 84508, 84518, 84346, 112114, 112115);
 HEAP32[26999] = 0;
 HEAP32[27e3] = 0;
 HEAP32[27001] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107996, 114224, 0);
 HEAP32[27013] = 107996;
 $10 = HEAP32[27013] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(108008, $10);
 __ZN6google14FlagRegistererC2INSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEPKcSA_SA_PT_SC_(112121, 84577, 84591, 84346, $10, 108008);
 HEAP32[27011] = 107996;
 HEAP32[27012] = 108008;
 ___cxa_atexit(173, 108044, ___dso_handle | 0) | 0;
 HEAP32[26998] = HEAP32[27013];
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112120, 84645, 84653, 84346, 112116, 112117);
 __ZN6google14FlagRegistererC2IjEEPKcS3_S3_PT_S5_(112119, 84679, 84689, 84346, 68412, 68416);
 return;
}

function __ZNK9TdfParser7GetTDefIjEEvRT_RKS1_RKNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $16 = 0, $18 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $4 = sp + 156 | 0;
 $5 = sp + 144 | 0;
 $6 = sp;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 if (__ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_($0 | 0, $5 | 0, $3 | 0) | 0) {
  $9 = $6 + 64 | 0;
  $10 = $6 + 8 | 0;
  HEAP32[$10 >> 2] = 68204;
  $11 = $6 + 12 | 0;
  HEAP32[$6 >> 2] = 68284;
  HEAP32[$9 >> 2] = 68304;
  HEAP32[$6 + 4 >> 2] = 0;
  __ZNSt3__28ios_base4initEPv($6 + 64 | 0, $11);
  HEAP32[$6 + 136 >> 2] = 0;
  HEAP32[$6 + 140 >> 2] = -1;
  HEAP32[$6 >> 2] = 68184;
  HEAP32[$9 >> 2] = 68224;
  HEAP32[$10 >> 2] = 68204;
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($11);
  HEAP32[$11 >> 2] = 67920;
  $16 = $6 + 44 | 0;
  HEAP32[$16 >> 2] = 0;
  HEAP32[$16 + 4 >> 2] = 0;
  HEAP32[$16 + 8 >> 2] = 0;
  HEAP32[$16 + 12 >> 2] = 0;
  HEAP32[$6 + 60 >> 2] = 24;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($11, $4);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $18 = $6 + 8 | 0;
  $20 = HEAP8[$5 + 11 >> 0] | 0;
  $21 = $20 << 24 >> 24 < 0;
  __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($18, $21 ? HEAP32[$5 >> 2] | 0 : $5, $21 ? HEAP32[$5 + 4 >> 2] | 0 : $20 & 255) | 0;
  __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERj($6, $1) | 0;
  HEAP32[$6 >> 2] = 68184;
  HEAP32[$9 >> 2] = 68224;
  HEAP32[$18 >> 2] = 68204;
  HEAP32[$11 >> 2] = 67920;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($11);
  __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($6, 68236);
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($9);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $$pr = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $$sroa$09$0$ph = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $5 = sp;
 if (!(HEAP32[$2 + 4 >> 2] & 1)) {
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$12 & 31]($0, $$byval_copy, $2, $3, $4 & 1) | 0;
 } else {
  $16 = __ZNKSt3__28ios_base6getlocEv($2) | 0;
  HEAP32[$$byval_copy >> 2] = $16;
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110184) | 0;
  __ZNSt3__214__shared_count16__release_sharedEv($16) | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  if ($4) FUNCTION_TABLE_vii[HEAP32[$18 + 24 >> 2] & 63]($$byval_copy, $17); else FUNCTION_TABLE_vii[HEAP32[$18 + 28 >> 2] & 63]($$byval_copy, $17);
  $23 = $$byval_copy + 11 | 0;
  $24 = HEAP8[$23 >> 0] | 0;
  if ($24 << 24 >> 24 < 0) {
   $$pr = $24;
   $$sroa$09$0$ph = HEAP32[$$byval_copy >> 2] | 0;
   label = 8;
  } else {
   $$sroa$09$0 = $$byval_copy;
   $27 = $24;
  }
  while (1) {
   if ((label | 0) == 8) {
    label = 0;
    $$sroa$09$0 = $$sroa$09$0$ph;
    $27 = $$pr;
   }
   $28 = $27 << 24 >> 24 < 0;
   if (($$sroa$09$0 | 0) == (($28 ? HEAP32[$$byval_copy >> 2] | 0 : $$byval_copy) + ($28 ? HEAP32[$$byval_copy + 4 >> 2] | 0 : $27 & 255) | 0)) break;
   $37 = HEAP8[$$sroa$09$0 >> 0] | 0;
   $38 = HEAP32[$1 >> 2] | 0;
   do if ($38 | 0) {
    $40 = $38 + 24 | 0;
    $41 = HEAP32[$40 >> 2] | 0;
    if (($41 | 0) != (HEAP32[$38 + 28 >> 2] | 0)) {
     HEAP32[$40 >> 2] = $41 + 1;
     HEAP8[$41 >> 0] = $37;
     break;
    }
    if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$38 >> 2] | 0) + 52 >> 2] & 31]($38, $37 & 255) | 0) == -1) HEAP32[$1 >> 2] = 0;
   } while (0);
   $$pr = HEAP8[$23 >> 0] | 0;
   $$sroa$09$0$ph = $$sroa$09$0 + 1 | 0;
   label = 8;
  }
  $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$byval_copy);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $14 = 0, $21 = 0, $29 = 0, $34 = 0, $36 = 0, $42 = 0, $43 = 0, $55 = 0, $58 = 0, label = 0;
 $10 = HEAP32[$3 >> 2] | 0;
 $11 = ($10 | 0) == ($2 | 0);
 do if ($11) {
  $14 = (HEAP32[$9 + 96 >> 2] | 0) == ($0 | 0);
  if (!$14) if ((HEAP32[$9 + 100 >> 2] | 0) != ($0 | 0)) {
   label = 5;
   break;
  }
  HEAP32[$3 >> 2] = $2 + 1;
  HEAP8[$2 >> 0] = $14 ? 43 : 45;
  HEAP32[$4 >> 2] = 0;
  $$1 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $21 = HEAP8[$6 + 11 >> 0] | 0;
  if (($0 | 0) == ($5 | 0) ? (($21 << 24 >> 24 < 0 ? HEAP32[$6 + 4 >> 2] | 0 : $21 & 255) | 0) != 0 : 0) {
   $29 = HEAP32[$8 >> 2] | 0;
   if (($29 - $7 | 0) >= 160) {
    $$1 = 0;
    break;
   }
   $34 = HEAP32[$4 >> 2] | 0;
   HEAP32[$8 >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $34;
   HEAP32[$4 >> 2] = 0;
   $$1 = 0;
   break;
  }
  $36 = $9 + 104 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $9 + ($$0$i$idx << 2) | 0;
   if (($$0$i$idx | 0) == 26) {
    $$0$lcssa$i = $36;
    break;
   }
   if ((HEAP32[$$0$i$ptr >> 2] | 0) == ($0 | 0)) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $42 = $$0$lcssa$i - $9 | 0;
  $43 = $42 >> 2;
  if (($42 | 0) > 92) $$1 = -1; else {
   switch ($1 | 0) {
   case 10:
   case 8:
    {
     if (($43 | 0) >= ($1 | 0)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($42 | 0) >= 88) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      if (($10 - $2 | 0) >= 3) {
       $$1 = -1;
       break L6;
      }
      if ((HEAP8[$10 + -1 >> 0] | 0) != 48) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$4 >> 2] = 0;
      $55 = HEAP8[102831 + $43 >> 0] | 0;
      HEAP32[$3 >> 2] = $10 + 1;
      HEAP8[$10 >> 0] = $55;
      $$1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $58 = HEAP8[102831 + $43 >> 0] | 0;
   HEAP32[$3 >> 2] = $10 + 1;
   HEAP8[$10 >> 0] = $58;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
   $$1 = 0;
  }
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $14 = 0, $21 = 0, $29 = 0, $34 = 0, $36 = 0, $42 = 0, $54 = 0, $57 = 0, label = 0;
 $10 = HEAP32[$3 >> 2] | 0;
 $11 = ($10 | 0) == ($2 | 0);
 do if ($11) {
  $14 = (HEAP8[$9 + 24 >> 0] | 0) == $0 << 24 >> 24;
  if (!$14) if ((HEAP8[$9 + 25 >> 0] | 0) != $0 << 24 >> 24) {
   label = 5;
   break;
  }
  HEAP32[$3 >> 2] = $2 + 1;
  HEAP8[$2 >> 0] = $14 ? 43 : 45;
  HEAP32[$4 >> 2] = 0;
  $$1 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $21 = HEAP8[$6 + 11 >> 0] | 0;
  if ($0 << 24 >> 24 == $5 << 24 >> 24 ? (($21 << 24 >> 24 < 0 ? HEAP32[$6 + 4 >> 2] | 0 : $21 & 255) | 0) != 0 : 0) {
   $29 = HEAP32[$8 >> 2] | 0;
   if (($29 - $7 | 0) >= 160) {
    $$1 = 0;
    break;
   }
   $34 = HEAP32[$4 >> 2] | 0;
   HEAP32[$8 >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $34;
   HEAP32[$4 >> 2] = 0;
   $$1 = 0;
   break;
  }
  $36 = $9 + 26 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $9 + $$0$i$idx | 0;
   if (($$0$i$idx | 0) == 26) {
    $$0$lcssa$i = $36;
    break;
   }
   if ((HEAP8[$$0$i$ptr >> 0] | 0) == $0 << 24 >> 24) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $42 = $$0$lcssa$i - $9 | 0;
  if (($42 | 0) > 23) $$1 = -1; else {
   switch ($1 | 0) {
   case 10:
   case 8:
    {
     if (($42 | 0) >= ($1 | 0)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($42 | 0) >= 22) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      if (($10 - $2 | 0) >= 3) {
       $$1 = -1;
       break L6;
      }
      if ((HEAP8[$10 + -1 >> 0] | 0) != 48) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$4 >> 2] = 0;
      $54 = HEAP8[102831 + $42 >> 0] | 0;
      HEAP32[$3 >> 2] = $10 + 1;
      HEAP8[$10 >> 0] = $54;
      $$1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $57 = HEAP8[102831 + $42 >> 0] | 0;
   HEAP32[$3 >> 2] = $10 + 1;
   HEAP8[$10 >> 0] = $57;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
   $$1 = 0;
  }
 } while (0);
 return $$1 | 0;
}

function __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiN6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$016$i = 0, $$05051 = 0, $10 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 $4 = $1 + 1 + ($1 >>> 1) | 0;
 $5 = $0 + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ($4 >>> 0 > $6 >>> 0) $$0 = 4; else return;
 while (1) if ($$0 >>> 0 < $4 >>> 0) $$0 = $$0 << 1; else break;
 $10 = _malloc($$0) | 0;
 $12 = _malloc($$0 << 4) | 0;
 if (!(($10 | 0) != 0 & ($12 | 0) != 0)) {
  _free($10);
  _free($12);
  $15 = ___cxa_allocate_exception(4) | 0;
  __ZNSt9bad_allocC2Ev($15);
  ___cxa_throw($15 | 0, 1824, 151);
 }
 $16 = $0 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $0 + 8 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = $0 + 16 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$5 >> 2] = $$0;
 $22 = $0 + 24 | 0;
 HEAP32[$22 >> 2] = $$0 + -1;
 HEAP32[$16 >> 2] = $10;
 HEAP32[$18 >> 2] = $12;
 if ($$0 | 0) _memset($10 | 0, 0, $$0 | 0) | 0;
 $24 = $0 + 20 | 0;
 HEAP32[$24 >> 2] = -1;
 if ($6 | 0) {
  $$05051 = 0;
  do {
   if ((HEAP8[$17 + $$05051 >> 0] | 0) == 2) {
    $29 = $19 + ($$05051 << 4) | 0;
    $30 = __ZNK6spring11synced_hashINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEclERKS7_($0, $29) | 0;
    $31 = HEAP32[$22 >> 2] | 0;
    $32 = HEAP32[$16 >> 2] | 0;
    $$016$i = 0;
    while (1) {
     $34 = $$016$i + $30 & $31;
     $35 = $32 + $34 | 0;
     if ((HEAP8[$35 >> 0] | 0) == 2) $$016$i = $$016$i + 1 | 0; else break;
    }
    if (($$016$i | 0) > (HEAP32[$24 >> 2] | 0)) HEAP32[$24 >> 2] = $$016$i;
    HEAP8[$35 >> 0] = 2;
    $41 = HEAP32[$18 >> 2] | 0;
    $42 = $41 + ($34 << 4) | 0;
    HEAP32[$42 >> 2] = HEAP32[$29 >> 2];
    HEAP32[$42 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
    HEAP32[$42 + 8 >> 2] = HEAP32[$29 + 8 >> 2];
    HEAP32[$29 >> 2] = 0;
    HEAP32[$29 + 4 >> 2] = 0;
    HEAP32[$29 + 8 >> 2] = 0;
    HEAP32[$41 + ($34 << 4) + 12 >> 2] = HEAP32[$19 + ($$05051 << 4) + 12 >> 2];
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
   }
   $$05051 = $$05051 + 1 | 0;
  } while (($$05051 | 0) != ($6 | 0));
 }
 _free($17);
 _free($19);
 return;
}

function __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$ph$lcssa$i = 0, $$0$ph14$i = 0, $$07$ph13$i = 0, $$0710$i = 0, $$sroa$0$0 = 0, $$sroa$speculated$i$i$i$i = 0, $$sroa$speculated$i$i$i$i$i = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $33 = 0, $36 = 0, $38 = 0, $39 = 0, $43 = 0, $48 = 0, $6 = 0, $7 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 do if ($3 | 0) {
  $6 = HEAP8[$1 + 11 >> 0] | 0;
  $7 = $6 << 24 >> 24 < 0;
  $11 = $7 ? HEAP32[$1 + 4 >> 2] | 0 : $6 & 255;
  $13 = $7 ? HEAP32[$1 >> 2] | 0 : $1;
  $$0$ph14$i = $2;
  $$07$ph13$i = $3;
  L3 : while (1) {
   $$0710$i = $$07$ph13$i;
   while (1) {
    $14 = $$0710$i + 16 | 0;
    $16 = HEAP8[$14 + 11 >> 0] | 0;
    $17 = $16 << 24 >> 24 < 0;
    $21 = $17 ? HEAP32[$$0710$i + 20 >> 2] | 0 : $16 & 255;
    $$sroa$speculated$i$i$i$i$i = $11 >>> 0 < $21 >>> 0 ? $11 : $21;
    if (!$$sroa$speculated$i$i$i$i$i) label = 6; else {
     $26 = _memcmp($17 ? HEAP32[$14 >> 2] | 0 : $14, $13, $$sroa$speculated$i$i$i$i$i) | 0;
     if (!$26) label = 6; else if (($26 | 0) >= 0) break;
    }
    if ((label | 0) == 6) {
     label = 0;
     if ($21 >>> 0 >= $11 >>> 0) break;
    }
    $33 = HEAP32[$$0710$i + 4 >> 2] | 0;
    if (!$33) {
     $$0$ph$lcssa$i = $$0$ph14$i;
     break L3;
    } else $$0710$i = $33;
   }
   $$07$ph13$i = HEAP32[$$0710$i >> 2] | 0;
   if (!$$07$ph13$i) {
    $$0$ph$lcssa$i = $$0710$i;
    break;
   } else $$0$ph14$i = $$0710$i;
  }
  if (($$0$ph$lcssa$i | 0) != ($2 | 0)) {
   $36 = $$0$ph$lcssa$i + 16 | 0;
   $38 = HEAP8[$36 + 11 >> 0] | 0;
   $39 = $38 << 24 >> 24 < 0;
   $43 = $39 ? HEAP32[$$0$ph$lcssa$i + 20 >> 2] | 0 : $38 & 255;
   $$sroa$speculated$i$i$i$i = $43 >>> 0 < $11 >>> 0 ? $43 : $11;
   if ($$sroa$speculated$i$i$i$i | 0) {
    $48 = _memcmp($13, $39 ? HEAP32[$36 >> 2] | 0 : $36, $$sroa$speculated$i$i$i$i) | 0;
    if ($48 | 0) {
     if (($48 | 0) < 0) break; else $$sroa$0$0 = $$0$ph$lcssa$i;
     return $$sroa$0$0 | 0;
    }
   }
   if ($11 >>> 0 >= $43 >>> 0) {
    $$sroa$0$0 = $$0$ph$lcssa$i;
    return $$sroa$0$0 | 0;
   }
  }
 } while (0);
 $$sroa$0$0 = $2;
 return $$sroa$0$0 | 0;
}

function ___fdopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $15 = 0, $17 = 0, $2 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $40 = 0, $7 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 52 | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 if (!(_memchr(95955, $3 << 24 >> 24, 4) | 0)) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $$0 = 0;
 } else {
  $7 = _malloc(1144) | 0;
  if (!$7) $$0 = 0; else {
   dest = $7;
   stop = dest + 112 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   if (!(_strchr($1, 43) | 0)) HEAP32[$7 >> 2] = $3 << 24 >> 24 == 114 ? 8 : 4;
   if (!(_strchr($1, 101) | 0)) $15 = $3; else {
    HEAP32[$vararg_buffer >> 2] = $0;
    HEAP32[$vararg_buffer + 4 >> 2] = 2;
    HEAP32[$vararg_buffer + 8 >> 2] = 1;
    ___syscall221(221, $vararg_buffer | 0) | 0;
    $15 = HEAP8[$1 >> 0] | 0;
   }
   if ($15 << 24 >> 24 == 97) {
    HEAP32[$vararg_buffer3 >> 2] = $0;
    HEAP32[$vararg_buffer3 + 4 >> 2] = 3;
    $17 = ___syscall221(221, $vararg_buffer3 | 0) | 0;
    if (!($17 & 1024)) {
     HEAP32[$vararg_buffer7 >> 2] = $0;
     HEAP32[$vararg_buffer7 + 4 >> 2] = 4;
     HEAP32[$vararg_buffer7 + 8 >> 2] = $17 | 1024;
     ___syscall221(221, $vararg_buffer7 | 0) | 0;
    }
    $22 = HEAP32[$7 >> 2] | 128;
    HEAP32[$7 >> 2] = $22;
    $29 = $22;
   } else $29 = HEAP32[$7 >> 2] | 0;
   HEAP32[$7 + 60 >> 2] = $0;
   HEAP32[$7 + 44 >> 2] = $7 + 120;
   HEAP32[$7 + 48 >> 2] = 1024;
   $27 = $7 + 75 | 0;
   HEAP8[$27 >> 0] = -1;
   if (!($29 & 8)) {
    HEAP32[$vararg_buffer12 >> 2] = $0;
    HEAP32[$vararg_buffer12 + 4 >> 2] = 21505;
    HEAP32[$vararg_buffer12 + 8 >> 2] = $2;
    if (!(___syscall54(54, $vararg_buffer12 | 0) | 0)) HEAP8[$27 >> 0] = 10;
   }
   HEAP32[$7 + 32 >> 2] = 7;
   HEAP32[$7 + 36 >> 2] = 8;
   HEAP32[$7 + 40 >> 2] = 6;
   HEAP32[$7 + 12 >> 2] = 102;
   if (!(HEAP32[27141] | 0)) HEAP32[$7 + 76 >> 2] = -1;
   ___lock(108588);
   $40 = HEAP32[27146] | 0;
   HEAP32[$7 + 56 >> 2] = $40;
   if ($40 | 0) HEAP32[$40 + 52 >> 2] = $7;
   HEAP32[27146] = $7;
   ___unlock(108588);
   $$0 = $7;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL10primaryexpP8LexStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = sp + 4 | 0;
 $3 = $0 + 28 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 12 | 0;
 switch (HEAP32[$5 >> 2] | 0) {
 case 40:
  {
   $8 = HEAP32[$0 + 4 >> 2] | 0;
   __Z9luaX_nextP8LexState($0);
   __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
   __ZL11check_matchP8LexStateiii($0, 41, 40, $8);
   __Z18luaK_dischargevarsP9FuncStateP7expdesc(HEAP32[$3 >> 2] | 0, $1);
   break;
  }
 case 285:
  {
   $11 = HEAP32[$0 + 16 >> 2] | 0;
   __Z9luaX_nextP8LexState($0);
   $12 = HEAP32[$3 >> 2] | 0;
   if ((__ZL12singlevarauxP9FuncStateP7TStringP7expdesci($12, $11, $1, 1) | 0) == 8) HEAP32[$1 + 4 >> 2] = __Z12luaK_stringKP9FuncStateP7TString($12, $11) | 0;
   break;
  }
 default:
  __Z16luaX_syntaxerrorP8LexStatePKc($0, 88038);
 }
 $17 = $0 + 16 | 0;
 $18 = $2 + 12 | 0;
 $19 = $2 + 16 | 0;
 $20 = $2 + 4 | 0;
 $21 = $0 + 32 | 0;
 L7 : while (1) switch (HEAP32[$5 >> 2] | 0) {
 case 46:
  {
   __ZL5fieldP8LexStateP7expdesc($0, $1);
   continue L7;
   break;
  }
 case 91:
  {
   __Z15luaK_exp2anyregP9FuncStateP7expdesc($4, $1) | 0;
   __ZL6yindexP8LexStateP7expdesc($0, $2);
   __Z12luaK_indexedP9FuncStateP7expdescS2_($4, $1, $2);
   continue L7;
   break;
  }
 case 58:
  {
   __Z9luaX_nextP8LexState($0);
   if ((HEAP32[$5 >> 2] | 0) != 285) {
    $25 = HEAP32[$21 >> 2] | 0;
    HEAP32[$vararg_buffer >> 2] = __Z14luaX_token2strP8LexStatei($0, 285) | 0;
    __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($25, 87798, $vararg_buffer) | 0);
   }
   $28 = HEAP32[$17 >> 2] | 0;
   __Z9luaX_nextP8LexState($0);
   $29 = __Z12luaK_stringKP9FuncStateP7TString(HEAP32[$3 >> 2] | 0, $28) | 0;
   HEAP32[$18 >> 2] = -1;
   HEAP32[$19 >> 2] = -1;
   HEAP32[$2 >> 2] = 4;
   HEAP32[$20 >> 2] = $29;
   __Z9luaK_selfP9FuncStateP7expdescS2_($4, $1, $2);
   __ZL8funcargsP8LexStateP7expdesc($0, $1);
   continue L7;
   break;
  }
 case 123:
 case 286:
 case 40:
  {
   __Z16luaK_exp2nextregP9FuncStateP7expdesc($4, $1);
   __ZL8funcargsP8LexStateP7expdesc($0, $1);
   continue L7;
   break;
  }
 default:
  break L7;
 }
 STACKTOP = sp;
 return;
}

function __Z12lua_lessthanP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1$i = 0, $$1$i18 = 0, $23 = 0, $32 = 0, $33 = 0, $45 = 0, $61 = 0, $7 = 0, $70 = 0, $71 = 0, $82 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $7 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $7 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $23 = $0 + 80 | 0;
    HEAP32[$23 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $23;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $32 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $33 = -10002 - $1 | 0;
    $$1$i = ($33 | 0) > (HEAPU8[$32 + 7 >> 0] | 0 | 0) ? 108164 : $32 + 20 + ($33 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 L13 : do if (($2 | 0) > 0) {
  $45 = (HEAP32[$0 + 12 >> 2] | 0) + ($2 + -1 << 3) | 0;
  $$1$i18 = $45 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $45 : 108164;
 } else {
  if (($2 | 0) > -1e4) {
   $$1$i18 = (HEAP32[$0 + 8 >> 2] | 0) + ($2 << 3) | 0;
   break;
  }
  switch ($2 | 0) {
  case -1e4:
   {
    $$1$i18 = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L13;
    break;
   }
  case -10001:
   {
    $61 = $0 + 80 | 0;
    HEAP32[$61 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i18 = $61;
    break L13;
    break;
   }
  case -10002:
   {
    $$1$i18 = $0 + 72 | 0;
    break L13;
    break;
   }
  default:
   {
    $70 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $71 = -10002 - $2 | 0;
    $$1$i18 = ($71 | 0) > (HEAPU8[$70 + 7 >> 0] | 0 | 0) ? 108164 : $70 + 20 + ($71 + -1 << 3) | 0;
    break L13;
   }
  }
 } while (0);
 if (($$1$i | 0) == 108164 | ($$1$i18 | 0) == 108164) {
  $82 = 0;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return $82 | 0;
 }
 $82 = __Z13luaV_lessthanP9lua_StatePK10lua_TValueS3_($0, $$1$i, $$1$i18) | 0;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $82 | 0;
}

function __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$020 = 0, $$sink = 0, $$sroa$speculated$i$i$i$i = 0, $$sroa$speculated$i$i$i$i21 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $22 = 0, $23 = 0, $27 = 0, $3 = 0, $31 = 0, $37 = 0, $4 = 0, $40 = 0, $41 = 0, $7 = 0, $8 = 0, label = 0;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) {
  HEAP32[$1 >> 2] = $3;
  $$020 = $3;
  return $$020 | 0;
 }
 $7 = HEAP8[$2 + 11 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 $12 = $8 ? HEAP32[$2 + 4 >> 2] | 0 : $7 & 255;
 $14 = $8 ? HEAP32[$2 >> 2] | 0 : $2;
 $$0 = $4;
 while (1) {
  $15 = $$0 + 16 | 0;
  $17 = HEAP8[$15 + 11 >> 0] | 0;
  $18 = $17 << 24 >> 24 < 0;
  $22 = $18 ? HEAP32[$$0 + 20 >> 2] | 0 : $17 & 255;
  $23 = $22 >>> 0 < $12 >>> 0;
  $$sroa$speculated$i$i$i$i21 = $23 ? $22 : $12;
  if (!$$sroa$speculated$i$i$i$i21) label = 5; else {
   $27 = _memcmp($14, $18 ? HEAP32[$15 >> 2] | 0 : $15, $$sroa$speculated$i$i$i$i21) | 0;
   if (!$27) label = 5; else if (($27 | 0) < 0) label = 7; else label = 9;
  }
  if ((label | 0) == 5) {
   label = 0;
   if ($12 >>> 0 < $22 >>> 0) label = 7; else label = 9;
  }
  if ((label | 0) == 7) {
   label = 0;
   $31 = HEAP32[$$0 >> 2] | 0;
   if (!$31) {
    label = 8;
    break;
   } else $$sink = $31;
  } else if ((label | 0) == 9) {
   label = 0;
   $$sroa$speculated$i$i$i$i = $12 >>> 0 < $22 >>> 0 ? $12 : $22;
   if (!$$sroa$speculated$i$i$i$i) label = 11; else {
    $37 = _memcmp($18 ? HEAP32[$15 >> 2] | 0 : $15, $14, $$sroa$speculated$i$i$i$i) | 0;
    if (!$37) label = 11; else if (($37 | 0) >= 0) {
     label = 16;
     break;
    }
   }
   if ((label | 0) == 11) {
    label = 0;
    if (!$23) {
     label = 16;
     break;
    }
   }
   $40 = $$0 + 4 | 0;
   $41 = HEAP32[$40 >> 2] | 0;
   if (!$41) {
    label = 15;
    break;
   } else $$sink = $41;
  }
  $$0 = $$sink;
 }
 if ((label | 0) == 8) {
  HEAP32[$1 >> 2] = $$0;
  $$020 = $$0;
  return $$020 | 0;
 } else if ((label | 0) == 15) {
  HEAP32[$1 >> 2] = $$0;
  $$020 = $40;
  return $$020 | 0;
 } else if ((label | 0) == 16) {
  HEAP32[$1 >> 2] = $$0;
  $$020 = $1;
  return $$020 | 0;
 }
 return 0;
}

function __ZN13SpringVersion7GetFullEv() {
 var $0 = 0, $1 = 0, $12 = 0, $13 = 0, $17 = 0, $23 = 0, $24 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 if (HEAP8[106192] | 0) {
  STACKTOP = sp;
  return 107776;
 }
 if (!(___cxa_guard_acquire(106192) | 0)) {
  STACKTOP = sp;
  return 107776;
 }
 __ZN13SpringVersion13GetAdditionalEv() | 0;
 $6 = HEAP8[107811] | 0;
 if (!(($6 << 24 >> 24 < 0 ? HEAP32[26951] | 0 : $6 & 255) | 0)) {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 114224, 0);
  $12 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($0, 0, 82806) | 0;
  HEAP32[26944] = HEAP32[$12 >> 2];
  HEAP32[26945] = HEAP32[$12 + 4 >> 2];
  HEAP32[26946] = HEAP32[$12 + 8 >> 2];
  HEAP32[$12 >> 2] = 0;
  HEAP32[$12 + 4 >> 2] = 0;
  HEAP32[$12 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 } else {
  __ZN13SpringVersion13GetAdditionalEv() | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  $13 = HEAP8[107811] | 0;
  $17 = $13 << 24 >> 24 < 0 ? HEAP32[26951] | 0 : $13 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($1, 82835, 2, $17 + 2 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($1, (HEAP8[107811] | 0) < 0 ? HEAP32[26950] | 0 : 107800, $17) | 0;
  $23 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($1, 82838) | 0;
  HEAP32[$0 >> 2] = HEAP32[$23 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$23 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$23 + 8 >> 2];
  HEAP32[$23 >> 2] = 0;
  HEAP32[$23 + 4 >> 2] = 0;
  HEAP32[$23 + 8 >> 2] = 0;
  $24 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($0, 0, 82806) | 0;
  HEAP32[26944] = HEAP32[$24 >> 2];
  HEAP32[26945] = HEAP32[$24 + 4 >> 2];
  HEAP32[26946] = HEAP32[$24 + 8 >> 2];
  HEAP32[$24 >> 2] = 0;
  HEAP32[$24 + 4 >> 2] = 0;
  HEAP32[$24 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 }
 ___cxa_atexit(164, 107776, ___dso_handle | 0) | 0;
 STACKTOP = sp;
 return 107776;
}

function __Z10luaD_pcallP9lua_StatePFvS0_PvES1_ii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $25 = 0, $31 = 0, $39 = 0, $40 = 0, $46 = 0, $47 = 0, $5 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 $6 = $0 + 52 | 0;
 $7 = HEAP16[$6 >> 1] | 0;
 $8 = $0 + 20 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = $0 + 40 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $12 = $0 + 57 | 0;
 $13 = HEAP8[$12 >> 0] | 0;
 $14 = $0 + 100 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 HEAP32[$14 >> 2] = $4;
 $16 = $5 + 8 | 0;
 HEAP32[$16 >> 2] = 0;
 $17 = $0 + 96 | 0;
 HEAP32[$5 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$17 >> 2] = $5;
 FUNCTION_TABLE_vii[$1 & 63]($0, $2);
 HEAP32[$17 >> 2] = HEAP32[$5 >> 2];
 $20 = HEAP32[$16 >> 2] | 0;
 if (!$20) {
  HEAP32[$14 >> 2] = $15;
  STACKTOP = sp;
  return $20 | 0;
 }
 $22 = $9 - $11 | 0;
 $25 = (HEAP32[$0 + 32 >> 2] | 0) + $3 | 0;
 __Z10luaF_closeP9lua_StateP10lua_TValue($0, $25);
 switch ($20 | 0) {
 case 4:
  {
   HEAP32[$25 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 88320, 17) | 0;
   HEAP32[$25 + 4 >> 2] = 4;
   break;
  }
 case 5:
  {
   HEAP32[$25 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 87006, 23) | 0;
   HEAP32[$25 + 4 >> 2] = 4;
   break;
  }
 case 2:
 case 3:
  {
   $31 = HEAP32[$0 + 8 >> 2] | 0;
   HEAP32[$25 >> 2] = HEAP32[$31 + -8 >> 2];
   HEAP32[$25 + 4 >> 2] = HEAP32[$31 + -4 >> 2];
   break;
  }
 default:
  {}
 }
 HEAP32[$0 + 8 >> 2] = $25 + 8;
 HEAP16[$6 >> 1] = $7;
 $39 = HEAP32[$10 >> 2] | 0;
 $40 = $39 + $22 | 0;
 HEAP32[$8 >> 2] = $40;
 HEAP32[$0 + 12 >> 2] = HEAP32[$40 >> 2];
 HEAP32[$0 + 24 >> 2] = HEAP32[$40 + 12 >> 2];
 HEAP8[$12 >> 0] = $13;
 $46 = $0 + 48 | 0;
 $47 = HEAP32[$46 >> 2] | 0;
 if (($47 | 0) <= 2e4) {
  HEAP32[$14 >> 2] = $15;
  STACKTOP = sp;
  return $20 | 0;
 }
 if (((($22 | 0) / 24 | 0) + 1 | 0) >= 2e4) {
  HEAP32[$14 >> 2] = $15;
  STACKTOP = sp;
  return $20 | 0;
 }
 $54 = __Z13luaM_realloc_P9lua_StatePvjj($0, $39, $47 * 24 | 0, 48e4) | 0;
 HEAP32[$10 >> 2] = $54;
 HEAP32[$46 >> 2] = 2e4;
 HEAP32[$8 >> 2] = $54 + ((((HEAP32[$8 >> 2] | 0) - $39 | 0) / 24 | 0) * 24 | 0);
 HEAP32[$0 + 36 >> 2] = $54 + 479976;
 HEAP32[$14 >> 2] = $15;
 STACKTOP = sp;
 return $20 | 0;
}

function __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEEaSERKSD_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa$i$i = 0, $$04$i$i = 0, $$06$i = 0, $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $13 = 0, $18 = 0, $2 = 0, $24 = 0, $27 = 0, $3 = 0, $31 = 0, $35 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 24 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 $4 = $0 + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 | 0) {
  $7 = $0 + 4 | 0;
  $8 = $0 + 8 | 0;
  $$06$i = 0;
  $35 = $5;
  while (1) {
   $10 = (HEAP32[$7 >> 2] | 0) + $$06$i | 0;
   if ((HEAP8[$10 >> 0] | 0) == 2) {
    HEAP8[$10 >> 0] = 0;
    $13 = HEAP32[$8 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13 + ($$06$i * 24 | 0) + 12 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13 + ($$06$i * 24 | 0) | 0);
    $18 = HEAP32[$4 >> 2] | 0;
   } else $18 = $35;
   $$06$i = $$06$i + 1 | 0;
   if ($$06$i >>> 0 >= $18 >>> 0) break; else $35 = $18;
  }
 }
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = -1;
 __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($0, HEAP32[$1 + 16 >> 2] | 0);
 $24 = HEAP32[$1 + 12 >> 2] | 0;
 L9 : do if (!$24) $$0$lcssa$i$i = 0; else {
  $27 = HEAP32[$1 + 4 >> 2] | 0;
  $$04$i$i = 0;
  while (1) {
   if ((HEAP8[$27 + $$04$i$i >> 0] | 0) == 2) {
    $$0$lcssa$i$i = $$04$i$i;
    break L9;
   }
   $31 = $$04$i$i + 1 | 0;
   if ($31 >>> 0 < $24 >>> 0) $$04$i$i = $31; else {
    $$0$lcssa$i$i = $31;
    break;
   }
  }
 } while (0);
 HEAP32[$2 >> 2] = $1;
 HEAP32[$2 + 4 >> 2] = $$0$lcssa$i$i;
 HEAP32[$3 >> 2] = $1;
 HEAP32[$3 + 4 >> 2] = $24;
 HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE6insertENSD_14const_iteratorESE_($0, $$byval_copy, $$byval_copy1);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$byval_copy = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $5 = sp;
 if (!(HEAP32[$2 + 4 >> 2] & 1)) {
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$12 & 31]($0, $$byval_copy, $2, $3, $4 & 1) | 0;
 } else {
  $16 = __ZNKSt3__28ios_base6getlocEv($2) | 0;
  HEAP32[$$byval_copy >> 2] = $16;
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110208) | 0;
  __ZNSt3__214__shared_count16__release_sharedEv($16) | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  if ($4) FUNCTION_TABLE_vii[HEAP32[$18 + 24 >> 2] & 63]($$byval_copy, $17); else FUNCTION_TABLE_vii[HEAP32[$18 + 28 >> 2] & 63]($$byval_copy, $17);
  $24 = $$byval_copy + 8 + 3 | 0;
  $25 = HEAP8[$24 >> 0] | 0;
  $27 = HEAP32[$$byval_copy >> 2] | 0;
  $28 = $$byval_copy + 4 | 0;
  $$sroa$09$0 = $25 << 24 >> 24 < 0 ? $27 : $$byval_copy;
  $29 = $25;
  $33 = $27;
  while (1) {
   $30 = $29 << 24 >> 24 < 0;
   if (($$sroa$09$0 | 0) == (($30 ? $33 : $$byval_copy) + (($30 ? HEAP32[$28 >> 2] | 0 : $29 & 255) << 2) | 0)) break;
   $38 = HEAP32[$$sroa$09$0 >> 2] | 0;
   $39 = HEAP32[$1 >> 2] | 0;
   if ($39 | 0) {
    $41 = $39 + 24 | 0;
    $42 = HEAP32[$41 >> 2] | 0;
    if (($42 | 0) == (HEAP32[$39 + 28 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$39 >> 2] | 0) + 52 >> 2] & 31]($39, $38) | 0; else {
     HEAP32[$41 >> 2] = $42 + 4;
     HEAP32[$42 >> 2] = $38;
     $$0$i$i = $38;
    }
    if (($$0$i$i | 0) == -1) HEAP32[$1 >> 2] = 0;
   }
   $$sroa$09$0 = $$sroa$09$0 + 4 | 0;
   $29 = HEAP8[$24 >> 0] | 0;
   $33 = HEAP32[$$byval_copy >> 2] | 0;
  }
  $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($$byval_copy);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function _ParseCmdLine($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $24 = 0, $3 = 0, $37 = 0, $39 = 0, $44 = 0, $47 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 4 | 0;
 if (!(HEAP8[112116] | 0)) if (!(_getenv(84741) | 0)) if (_isatty(_fileno(HEAP32[17382] | 0) | 0) | 0) _log_console_colorizedOutput(1);
 if (HEAP8[112110] | 0) {
  $14 = __ZN13SpringVersion7GetSyncEv() | 0;
  HEAP32[$vararg_buffer >> 2] = (HEAP8[$14 + 11 >> 0] | 0) < 0 ? HEAP32[$14 >> 2] | 0 : $14;
  _log_frontend_record(35, 114224, 91439, $vararg_buffer);
  _exit(0);
 }
 if (($0 | 0) > 1) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($2, HEAP32[$1 + 4 >> 2] | 0) | 0;
 $24 = HEAP8[$2 + 11 >> 0] | 0;
 if ((HEAP8[112112] | 0) == 0 ? (($24 << 24 >> 24 < 0 ? HEAP32[$2 + 4 >> 2] | 0 : $24 & 255) | 0) == 0 : 0) {
  __ZN6google18ShowUsageWithFlagsEPKc(HEAP32[$1 >> 2] | 0);
  _exit(1);
 }
 if (HEAP8[112114] | 0) HEAP8[(__ZN14DataDirLocater11GetInstanceEv() | 0) >> 0] = 1;
 $37 = HEAP32[26998] | 0;
 $39 = HEAP8[$37 + 11 >> 0] | 0;
 if ($39 << 24 >> 24 < 0) $44 = HEAP32[$37 + 4 >> 2] | 0; else $44 = $39 & 255;
 if ($44 | 0) {
  HEAP8[(__ZN14DataDirLocater11GetInstanceEv() | 0) >> 0] = 1;
  $47 = __ZN14DataDirLocater11GetInstanceEv() | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($47 + 4 | 0, HEAP32[26998] | 0) | 0;
 }
 if (!(HEAP8[112112] | 0)) {
  __ZN21FileSystemInitializer26PreInitializeConfigHandlerERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(HEAP32[26997] | 0, 0);
  STACKTOP = sp;
  return;
 } else {
  _log_enable_and_disable(0);
  __ZN21FileSystemInitializer26PreInitializeConfigHandlerERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(HEAP32[26997] | 0, 0);
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 114224, 0);
  __ZN21FileSystemInitializer19InitializeLogOutputERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($3 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  _log_enable_and_disable(1);
  __ZN14ConfigVariable17OutputMetaDataMapEv();
  _exit(0);
 }
}

function __ZN6emilib7HashSetINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN6spring11synced_hashIS7_EENS_14HashSetEqualToIS7_EEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$016$i = 0, $$05051 = 0, $10 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $42 = 0, $5 = 0, $6 = 0;
 $4 = $1 + 1 + ($1 >>> 1) | 0;
 $5 = $0 + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ($4 >>> 0 > $6 >>> 0) $$0 = 4; else return;
 while (1) if ($$0 >>> 0 < $4 >>> 0) $$0 = $$0 << 1; else break;
 $10 = _malloc($$0) | 0;
 $12 = _malloc($$0 * 12 | 0) | 0;
 if (!(($10 | 0) != 0 & ($12 | 0) != 0)) {
  _free($10);
  _free($12);
  $15 = ___cxa_allocate_exception(4) | 0;
  __ZNSt9bad_allocC2Ev($15);
  ___cxa_throw($15 | 0, 1824, 151);
 }
 $16 = $0 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $0 + 8 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = $0 + 16 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$5 >> 2] = $$0;
 $22 = $0 + 24 | 0;
 HEAP32[$22 >> 2] = $$0 + -1;
 HEAP32[$16 >> 2] = $10;
 HEAP32[$18 >> 2] = $12;
 if ($$0 | 0) _memset($10 | 0, 0, $$0 | 0) | 0;
 $24 = $0 + 20 | 0;
 HEAP32[$24 >> 2] = -1;
 if ($6 | 0) {
  $$05051 = 0;
  do {
   if ((HEAP8[$17 + $$05051 >> 0] | 0) == 2) {
    $29 = $19 + ($$05051 * 12 | 0) | 0;
    $30 = __ZNK6spring11synced_hashINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEclERKS7_($0, $29) | 0;
    $31 = HEAP32[$22 >> 2] | 0;
    $32 = HEAP32[$16 >> 2] | 0;
    $$016$i = 0;
    while (1) {
     $34 = $$016$i + $30 & $31;
     $35 = $32 + $34 | 0;
     if ((HEAP8[$35 >> 0] | 0) == 2) $$016$i = $$016$i + 1 | 0; else break;
    }
    if (($$016$i | 0) > (HEAP32[$24 >> 2] | 0)) HEAP32[$24 >> 2] = $$016$i;
    HEAP8[$35 >> 0] = 2;
    $42 = (HEAP32[$18 >> 2] | 0) + ($34 * 12 | 0) | 0;
    HEAP32[$42 >> 2] = HEAP32[$29 >> 2];
    HEAP32[$42 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
    HEAP32[$42 + 8 >> 2] = HEAP32[$29 + 8 >> 2];
    HEAP32[$29 >> 2] = 0;
    HEAP32[$29 + 4 >> 2] = 0;
    HEAP32[$29 + 8 >> 2] = 0;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
   }
   $$05051 = $$05051 + 1 | 0;
  } while (($$05051 | 0) != ($6 | 0));
 }
 _free($17);
 _free($19);
 return;
}

function __ZNSt3__26vectorI14SkirmishAIDataNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i3739 = 0, $$0$i38 = 0, $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$i = 0, $12 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $40 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $52 = 0, $58 = 0, $7 = 0, $9 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $7 = (((HEAP32[$2 >> 2] | 0) - $4 | 0) / 108 | 0) + 1 | 0;
 if ($7 >>> 0 > 39768215) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 108 | 0;
 if ($12 >>> 0 < 19884107) {
  $17 = $12 << 1;
  $$sroa$speculated$i = $17 >>> 0 < $7 >>> 0 ? $7 : $17;
  $21 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 108 | 0;
  if (!$$sroa$speculated$i) {
   $$0$i38 = 0;
   $28 = 0;
   $29 = $21;
  } else if ($$sroa$speculated$i >>> 0 > 39768215) {
   $24 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($24);
   ___cxa_throw($24 | 0, 1824, 151);
  } else {
   $$0$i3739 = $$sroa$speculated$i;
   $58 = $21;
   label = 8;
  }
 } else {
  $$0$i3739 = 39768215;
  $58 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 108 | 0;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i38 = $$0$i3739;
  $28 = __Znwj($$0$i3739 * 108 | 0) | 0;
  $29 = $58;
 }
 $27 = $28 + ($29 * 108 | 0) | 0;
 $30 = $27;
 $32 = $28 + ($$0$i38 * 108 | 0) | 0;
 __ZN14SkirmishAIDataC2ERKS_($27, $1);
 $34 = $27 + 108 | 0;
 $35 = HEAP32[$0 >> 2] | 0;
 $36 = HEAP32[$2 >> 2] | 0;
 if (($36 | 0) == ($35 | 0)) {
  $46 = $30;
  $47 = $35;
  $49 = $35;
 } else {
  $$06$i$i = $36;
  $$sroa$7$0 = $30;
  $40 = $27;
  do {
   $$06$i$i = $$06$i$i + -108 | 0;
   __ZN14SkirmishAIDataC2ERKS_($40 + -108 | 0, $$06$i$i);
   $40 = $$sroa$7$0 + -108 | 0;
   $$sroa$7$0 = $40;
  } while (($$06$i$i | 0) != ($35 | 0));
  $46 = $$sroa$7$0;
  $47 = HEAP32[$0 >> 2] | 0;
  $49 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $46;
 HEAP32[$2 >> 2] = $34;
 HEAP32[$9 >> 2] = $32;
 $48 = $47;
 if (($49 | 0) != ($48 | 0)) {
  $52 = $49;
  do {
   $52 = $52 + -108 | 0;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$52 >> 2] >> 2] & 255]($52);
  } while (($52 | 0) != ($48 | 0));
 }
 if (!$47) return;
 __ZdlPv($47);
 return;
}

function __ZN9LuaParserD2Ev($0) {
 $0 = $0 | 0;
 var $$pre1$i = 0, $$sroa$013$017 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0, $34 = 0, $43 = 0, $45 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 $1 = $0 + 52 | 0;
 $2 = $0 + 48 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($3 | 0) {
  __Z9lua_closeP9lua_State($3);
  HEAP32[$2 >> 2] = 0;
 }
 $5 = $0 + 96 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $0 + 100 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($6 | 0) != ($8 | 0)) {
  $$sroa$013$017 = $6;
  do {
   $49 = HEAP32[$$sroa$013$017 >> 2] | 0;
   HEAP32[$49 + 16 >> 2] = 0;
   HEAP32[$49 + 20 >> 2] = 0;
   HEAP8[$49 + 12 >> 0] = 0;
   HEAP32[$49 + 24 >> 2] = -2;
   $$sroa$013$017 = $$sroa$013$017 + 4 | 0;
  } while (($$sroa$013$017 | 0) != ($8 | 0));
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 136 | 0);
 $11 = $0 + 108 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 if ($12 | 0) {
  $14 = $0 + 112 | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  if (($15 | 0) == ($12 | 0)) $21 = $12; else {
   $18 = $15;
   do {
    $17 = $18 + -12 | 0;
    HEAP32[$14 >> 2] = $17;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    $18 = HEAP32[$14 >> 2] | 0;
   } while (($18 | 0) != ($12 | 0));
   $21 = HEAP32[$11 >> 2] | 0;
  }
  __ZdlPv($21);
 }
 $22 = HEAP32[$5 >> 2] | 0;
 $24 = $22;
 if ($22 | 0) {
  $25 = HEAP32[$7 >> 2] | 0;
  if (($25 | 0) != ($22 | 0)) HEAP32[$7 >> 2] = $25 + (~(($25 + -4 - $24 | 0) >>> 2) << 2);
  __ZdlPv($22);
 }
 $31 = HEAP32[$1 >> 2] | 0;
 $$pre1$i = $0 + 60 | 0;
 if (!$31) $45 = 0; else {
  $34 = $31 + 4 | 0;
  if ((HEAP8[$34 + 11 >> 0] | 0) < 0) $43 = HEAP32[$34 >> 2] | 0; else $43 = $34;
  __ZNK10LuaMemPool8LogStatsEPKcS1_(HEAP32[$$pre1$i >> 2] | 0, $43, HEAP8[$0 + 68 >> 0] | 0 ? 83216 : 83223);
  $45 = HEAP32[$1 >> 2] | 0;
 }
 __ZN10LuaMemPool10ReleasePtrEPS_PK10CLuaHandle(HEAP32[$$pre1$i >> 2] | 0, $45);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 36 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 24 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}

function __ZNSt3__26vectorI10PlayerBaseNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i3739 = 0, $$0$i38 = 0, $$06$i$i = 0, $$sroa$7$0 = 0, $$sroa$speculated$i = 0, $12 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $40 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $52 = 0, $58 = 0, $7 = 0, $9 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $7 = (((HEAP32[$2 >> 2] | 0) - $4 | 0) / 56 | 0) + 1 | 0;
 if ($7 >>> 0 > 76695844) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 56 | 0;
 if ($12 >>> 0 < 38347922) {
  $17 = $12 << 1;
  $$sroa$speculated$i = $17 >>> 0 < $7 >>> 0 ? $7 : $17;
  $21 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 56 | 0;
  if (!$$sroa$speculated$i) {
   $$0$i38 = 0;
   $28 = 0;
   $29 = $21;
  } else if ($$sroa$speculated$i >>> 0 > 76695844) {
   $24 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($24);
   ___cxa_throw($24 | 0, 1824, 151);
  } else {
   $$0$i3739 = $$sroa$speculated$i;
   $58 = $21;
   label = 8;
  }
 } else {
  $$0$i3739 = 76695844;
  $58 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 56 | 0;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i38 = $$0$i3739;
  $28 = __Znwj($$0$i3739 * 56 | 0) | 0;
  $29 = $58;
 }
 $27 = $28 + ($29 * 56 | 0) | 0;
 $30 = $27;
 $32 = $28 + ($$0$i38 * 56 | 0) | 0;
 __ZN10PlayerBaseC2ERKS_($27, $1);
 $34 = $27 + 56 | 0;
 $35 = HEAP32[$0 >> 2] | 0;
 $36 = HEAP32[$2 >> 2] | 0;
 if (($36 | 0) == ($35 | 0)) {
  $46 = $30;
  $47 = $35;
  $49 = $35;
 } else {
  $$06$i$i = $36;
  $$sroa$7$0 = $30;
  $40 = $27;
  do {
   $$06$i$i = $$06$i$i + -56 | 0;
   __ZN10PlayerBaseC2ERKS_($40 + -56 | 0, $$06$i$i);
   $40 = $$sroa$7$0 + -56 | 0;
   $$sroa$7$0 = $40;
  } while (($$06$i$i | 0) != ($35 | 0));
  $46 = $$sroa$7$0;
  $47 = HEAP32[$0 >> 2] | 0;
  $49 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $46;
 HEAP32[$2 >> 2] = $34;
 HEAP32[$9 >> 2] = $32;
 $48 = $47;
 if (($49 | 0) != ($48 | 0)) {
  $52 = $49;
  do {
   $52 = $52 + -56 | 0;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$52 >> 2] >> 2] & 255]($52);
  } while (($52 | 0) != ($48 | 0));
 }
 if (!$47) return;
 __ZdlPv($47);
 return;
}

function __ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEEixERKi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$03649$i = 0, $$03948$i = 0, $$137$i = 0, $$140$i = 0, $$4$i = 0, $$pre = 0, $$pre$phi19Z2D = 0, $$pre15 = 0, $11 = 0, $2 = 0, $23 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $39 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, label = 0, $$03948$i$looptemp = 0;
 $2 = $0 + 16 | 0;
 __ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEE7reserveEj($0, (HEAP32[$2 >> 2] | 0) + 1 | 0);
 $5 = HEAP32[$1 >> 2] | 0;
 $6 = $0 + 20 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $$pre = HEAP32[$0 + 24 >> 2] | 0;
 $$pre15 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (($7 | 0) < 0) {
  $$140$i = 0;
  label = 8;
 } else {
  $9 = $0 + 8 | 0;
  $$03649$i = -1;
  $$03948$i = 0;
  while (1) {
   $11 = $$03948$i + $5 & $$pre;
   switch (HEAP8[$$pre15 + $11 >> 0] | 0) {
   case 0:
    {
     $$4$i = $11;
     break L1;
     break;
    }
   case 2:
    {
     if ((HEAP32[(HEAP32[$9 >> 2] | 0) + ($11 << 3) >> 2] | 0) == ($5 | 0)) {
      $$4$i = $11;
      break L1;
     } else $$137$i = $$03649$i;
     break;
    }
   default:
    $$137$i = ($$03649$i | 0) == -1 ? $11 : $$03649$i;
   }
   $$03948$i$looptemp = $$03948$i;
   $$03948$i = $$03948$i + 1 | 0;
   if (($$03948$i$looptemp | 0) >= ($7 | 0)) break; else $$03649$i = $$137$i;
  }
  if (($$137$i | 0) == -1) {
   $$140$i = $$03948$i;
   label = 8;
  } else $$4$i = $$137$i;
 } while (0);
 if ((label | 0) == 8) {
  while (1) {
   label = 0;
   $23 = $$140$i + $5 & $$pre;
   if ((HEAP8[$$pre15 + $23 >> 0] | 0) == 2) {
    $$140$i = $$140$i + 1 | 0;
    label = 8;
   } else break;
  }
  HEAP32[$6 >> 2] = $$140$i;
  $$4$i = $23;
 }
 $28 = $$pre15 + $$4$i | 0;
 if ((HEAP8[$28 >> 0] | 0) == 2) {
  $$pre$phi19Z2D = $0 + 8 | 0;
  $38 = HEAP32[$$pre$phi19Z2D >> 2] | 0;
  $39 = $38 + ($$4$i << 3) + 4 | 0;
  return $39 | 0;
 } else {
  HEAP8[$28 >> 0] = 2;
  $31 = $0 + 8 | 0;
  $32 = HEAP32[$31 >> 2] | 0;
  HEAP32[$32 + ($$4$i << 3) >> 2] = HEAP32[$1 >> 2];
  HEAP32[$32 + ($$4$i << 3) + 4 >> 2] = 0;
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
  $$pre$phi19Z2D = $31;
  $38 = HEAP32[$$pre$phi19Z2D >> 2] | 0;
  $39 = $38 + ($$4$i << 3) + 4 | 0;
  return $39 | 0;
 }
 return 0;
}

function __Z12lua_rawequalP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1$i = 0, $$1$i12 = 0, $23 = 0, $32 = 0, $33 = 0, $45 = 0, $61 = 0, $7 = 0, $70 = 0, $71 = 0, $82 = 0;
 L1 : do if (($1 | 0) > 0) {
  $7 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $7 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $23 = $0 + 80 | 0;
    HEAP32[$23 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $23;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $32 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $33 = -10002 - $1 | 0;
    $$1$i = ($33 | 0) > (HEAPU8[$32 + 7 >> 0] | 0 | 0) ? 108164 : $32 + 20 + ($33 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 L13 : do if (($2 | 0) > 0) {
  $45 = (HEAP32[$0 + 12 >> 2] | 0) + ($2 + -1 << 3) | 0;
  $$1$i12 = $45 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $45 : 108164;
 } else {
  if (($2 | 0) > -1e4) {
   $$1$i12 = (HEAP32[$0 + 8 >> 2] | 0) + ($2 << 3) | 0;
   break;
  }
  switch ($2 | 0) {
  case -1e4:
   {
    $$1$i12 = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L13;
    break;
   }
  case -10001:
   {
    $61 = $0 + 80 | 0;
    HEAP32[$61 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i12 = $61;
    break L13;
    break;
   }
  case -10002:
   {
    $$1$i12 = $0 + 72 | 0;
    break L13;
    break;
   }
  default:
   {
    $70 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $71 = -10002 - $2 | 0;
    $$1$i12 = ($71 | 0) > (HEAPU8[$70 + 7 >> 0] | 0 | 0) ? 108164 : $70 + 20 + ($71 + -1 << 3) | 0;
    break L13;
   }
  }
 } while (0);
 if (($$1$i | 0) == 108164 | ($$1$i12 | 0) == 108164) {
  $82 = 0;
  return $82 | 0;
 }
 $82 = __Z16luaO_rawequalObjPK10lua_TValueS1_($$1$i, $$1$i12) | 0;
 return $82 | 0;
}

function __ZNSt3__25stackIiNS_5dequeIiNS_9allocatorIiEEEEED2Ev($0) {
 $0 = $0 | 0;
 var $$08$i = 0, $$in$i = 0, $$lcssa$i = 0, $$pre$i = 0, $$pre9$i = 0, $$sroa$08$0$ph$i = 0, $$sroa$5$0$i = 0, $$sroa$5$0$ph$i = 0, $1 = 0, $10 = 0, $11 = 0, $16 = 0, $18 = 0, $2 = 0, $24 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $36 = 0, $4 = 0, $43 = 0, $45 = 0, $46 = 0, $57 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $0 + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = $2 + ($4 >>> 10 << 2) | 0;
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $10 = $8;
 $11 = $2;
 if (($8 | 0) == ($2 | 0)) {
  $26 = 0;
  $27 = $0 + 20 | 0;
  $59 = 0;
 } else {
  $16 = $0 + 20 | 0;
  $18 = (HEAP32[$16 >> 2] | 0) + $4 | 0;
  $26 = (HEAP32[$2 + ($18 >>> 10 << 2) >> 2] | 0) + (($18 & 1023) << 2) | 0;
  $27 = $16;
  $59 = (HEAP32[$6 >> 2] | 0) + (($4 & 1023) << 2) | 0;
 }
 $$sroa$08$0$ph$i = $6;
 $$sroa$5$0$ph$i = $59;
 L5 : while (1) {
  $$sroa$5$0$i = $$sroa$5$0$ph$i;
  do {
   $24 = $$sroa$5$0$i;
   if (($24 | 0) == ($26 | 0)) break L5;
   $$sroa$5$0$i = $24 + 4 | 0;
  } while (($$sroa$5$0$i - (HEAP32[$$sroa$08$0$ph$i >> 2] | 0) | 0) != 4096);
  $36 = $$sroa$08$0$ph$i + 4 | 0;
  $$sroa$08$0$ph$i = $36;
  $$sroa$5$0$ph$i = HEAP32[$36 >> 2] | 0;
 }
 HEAP32[$27 >> 2] = 0;
 $29 = $10 - $11 >> 2;
 if ($29 >>> 0 > 2) {
  $$in$i = $2;
  do {
   __ZdlPv(HEAP32[$$in$i >> 2] | 0);
   $$in$i = (HEAP32[$1 >> 2] | 0) + 4 | 0;
   HEAP32[$1 >> 2] = $$in$i;
   $43 = (HEAP32[$7 >> 2] | 0) - $$in$i >> 2;
  } while ($43 >>> 0 > 2);
  $$lcssa$i = $43;
 } else $$lcssa$i = $29;
 switch ($$lcssa$i | 0) {
 case 1:
  {
   HEAP32[$3 >> 2] = 512;
   break;
  }
 case 2:
  {
   HEAP32[$3 >> 2] = 1024;
   break;
  }
 default:
  {}
 }
 $45 = HEAP32[$1 >> 2] | 0;
 $46 = HEAP32[$7 >> 2] | 0;
 if (($45 | 0) != ($46 | 0)) {
  $$08$i = $45;
  do {
   __ZdlPv(HEAP32[$$08$i >> 2] | 0);
   $$08$i = $$08$i + 4 | 0;
  } while (($$08$i | 0) != ($46 | 0));
  $$pre$i = HEAP32[$1 >> 2] | 0;
  $$pre9$i = HEAP32[$7 >> 2] | 0;
  if (($$pre9$i | 0) != ($$pre$i | 0)) HEAP32[$7 >> 2] = $$pre9$i + (~(($$pre9$i + -4 - $$pre$i | 0) >>> 2) << 2);
 }
 $57 = HEAP32[$0 >> 2] | 0;
 if (!$57) return;
 __ZdlPv($57);
 return;
}

function __ZNK9TdfParser6GetDefIjEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $4 = sp + 140 | 0;
 $5 = sp;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($5 | 0, $0 | 0, $2 | 0, $3 | 0);
 $6 = $4 + 11 | 0;
 if ((HEAP8[$6 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$4 >> 2] >> 0] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
 } else {
  HEAP8[$4 >> 0] = 0;
  HEAP8[$6 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($4, 0);
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 $11 = $5 + 60 | 0;
 $12 = $5 + 8 | 0;
 HEAP32[$5 >> 2] = 68004;
 HEAP32[$11 >> 2] = 68024;
 HEAP32[$5 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($5 + 60 | 0, $12);
 HEAP32[$5 + 132 >> 2] = 0;
 HEAP32[$5 + 136 >> 2] = -1;
 HEAP32[$5 >> 2] = 68044;
 HEAP32[$11 >> 2] = 68064;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($12);
 HEAP32[$12 >> 2] = 67920;
 $17 = $5 + 40 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$5 + 56 >> 2] = 8;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($12, $4);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERj($5, $1) | 0;
 HEAP32[$5 >> 2] = 68044;
 HEAP32[$11 >> 2] = 68064;
 HEAP32[$12 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($12);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($5, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNK9TdfParser6GetDefIiEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $4 = sp + 140 | 0;
 $5 = sp;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($5 | 0, $0 | 0, $2 | 0, $3 | 0);
 $6 = $4 + 11 | 0;
 if ((HEAP8[$6 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$4 >> 2] >> 0] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
 } else {
  HEAP8[$4 >> 0] = 0;
  HEAP8[$6 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($4, 0);
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 $11 = $5 + 60 | 0;
 $12 = $5 + 8 | 0;
 HEAP32[$5 >> 2] = 68004;
 HEAP32[$11 >> 2] = 68024;
 HEAP32[$5 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($5 + 60 | 0, $12);
 HEAP32[$5 + 132 >> 2] = 0;
 HEAP32[$5 + 136 >> 2] = -1;
 HEAP32[$5 >> 2] = 68044;
 HEAP32[$11 >> 2] = 68064;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($12);
 HEAP32[$12 >> 2] = 67920;
 $17 = $5 + 40 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$5 + 56 >> 2] = 8;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($12, $4);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERi($5, $1) | 0;
 HEAP32[$5 >> 2] = 68044;
 HEAP32[$11 >> 2] = 68064;
 HEAP32[$12 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($12);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($5, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNK9TdfParser6GetDefIfEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $4 = sp + 140 | 0;
 $5 = sp;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($5 | 0, $0 | 0, $2 | 0, $3 | 0);
 $6 = $4 + 11 | 0;
 if ((HEAP8[$6 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$4 >> 2] >> 0] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
 } else {
  HEAP8[$4 >> 0] = 0;
  HEAP8[$6 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($4, 0);
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 $11 = $5 + 60 | 0;
 $12 = $5 + 8 | 0;
 HEAP32[$5 >> 2] = 68004;
 HEAP32[$11 >> 2] = 68024;
 HEAP32[$5 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($5 + 60 | 0, $12);
 HEAP32[$5 + 132 >> 2] = 0;
 HEAP32[$5 + 136 >> 2] = -1;
 HEAP32[$5 >> 2] = 68044;
 HEAP32[$11 >> 2] = 68064;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($12);
 HEAP32[$12 >> 2] = 67920;
 $17 = $5 + 40 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$5 + 56 >> 2] = 8;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($12, $4);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERf($5, $1) | 0;
 HEAP32[$5 >> 2] = 68044;
 HEAP32[$11 >> 2] = 68064;
 HEAP32[$12 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($12);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($5, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNK9TdfParser6GetDefIbEEvRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $4 = sp + 140 | 0;
 $5 = sp;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 __ZNK9TdfParser12SGetValueDefERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($5 | 0, $0 | 0, $2 | 0, $3 | 0);
 $6 = $4 + 11 | 0;
 if ((HEAP8[$6 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$4 >> 2] >> 0] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
 } else {
  HEAP8[$4 >> 0] = 0;
  HEAP8[$6 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($4, 0);
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 $11 = $5 + 60 | 0;
 $12 = $5 + 8 | 0;
 HEAP32[$5 >> 2] = 68004;
 HEAP32[$11 >> 2] = 68024;
 HEAP32[$5 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($5 + 60 | 0, $12);
 HEAP32[$5 + 132 >> 2] = 0;
 HEAP32[$5 + 136 >> 2] = -1;
 HEAP32[$5 >> 2] = 68044;
 HEAP32[$11 >> 2] = 68064;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($12);
 HEAP32[$12 >> 2] = 67920;
 $17 = $5 + 40 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$5 + 56 >> 2] = 8;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($12, $4);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERb($5, $1) | 0;
 HEAP32[$5 >> 2] = 68044;
 HEAP32[$11 >> 2] = 68064;
 HEAP32[$12 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($12);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($5, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __Z17luaD_reallocstackP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i17 = 0, $$0$i18 = 0, $$03435$i = 0, $$036$i = 0, $$pre$phiZ2D = 0, $13 = 0, $16 = 0, $18 = 0, $2 = 0, $24 = 0, $3 = 0, $30 = 0, $37 = 0, $38 = 0, $4 = 0, $41 = 0, $52 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0;
 $2 = $0 + 32 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 + 6 | 0;
 if (($1 + 7 | 0) >>> 0 < 536870912) {
  $7 = $0 + 44 | 0;
  $$pre$phiZ2D = $7;
  $13 = __Z13luaM_realloc_P9lua_StatePvjj($0, $3, HEAP32[$7 >> 2] << 3, $4 << 3) | 0;
 } else {
  $$pre$phiZ2D = $0 + 44 | 0;
  $13 = __Z11luaM_toobigP9lua_State($0) | 0;
 }
 HEAP32[$2 >> 2] = $13;
 HEAP32[$$pre$phiZ2D >> 2] = $4;
 HEAP32[$0 + 28 >> 2] = $13 + ($1 << 3);
 $16 = $0 + 8 | 0;
 $18 = $3;
 HEAP32[$16 >> 2] = $13 + ((HEAP32[$16 >> 2] | 0) - $18 >> 3 << 3);
 $$036$i = HEAP32[$0 + 88 >> 2] | 0;
 if ($$036$i | 0) {
  $24 = $$036$i + 8 | 0;
  HEAP32[$24 >> 2] = $13 + ((HEAP32[$24 >> 2] | 0) - $18 >> 3 << 3);
  $$0$i17 = HEAP32[$$036$i >> 2] | 0;
  if ($$0$i17 | 0) {
   $$0$i18 = $$0$i17;
   do {
    $30 = $$0$i18 + 8 | 0;
    HEAP32[$30 >> 2] = (HEAP32[$2 >> 2] | 0) + ((HEAP32[$30 >> 2] | 0) - $18 >> 3 << 3);
    $$0$i18 = HEAP32[$$0$i18 >> 2] | 0;
   } while (($$0$i18 | 0) != 0);
  }
 }
 $37 = HEAP32[$0 + 40 >> 2] | 0;
 $38 = $0 + 20 | 0;
 if ($37 >>> 0 > (HEAP32[$38 >> 2] | 0) >>> 0) {
  $61 = $0 + 12 | 0;
  $62 = HEAP32[$61 >> 2] | 0;
  $63 = $62 - $18 | 0;
  $64 = $63 >> 3;
  $65 = HEAP32[$2 >> 2] | 0;
  $66 = $65 + ($64 << 3) | 0;
  HEAP32[$61 >> 2] = $66;
  return;
 } else $$03435$i = $37;
 do {
  $41 = $$03435$i + 8 | 0;
  HEAP32[$41 >> 2] = (HEAP32[$2 >> 2] | 0) + ((HEAP32[$41 >> 2] | 0) - $18 >> 3 << 3);
  HEAP32[$$03435$i >> 2] = (HEAP32[$2 >> 2] | 0) + ((HEAP32[$$03435$i >> 2] | 0) - $18 >> 3 << 3);
  $52 = $$03435$i + 4 | 0;
  HEAP32[$52 >> 2] = (HEAP32[$2 >> 2] | 0) + ((HEAP32[$52 >> 2] | 0) - $18 >> 3 << 3);
  $$03435$i = $$03435$i + 24 | 0;
 } while ($$03435$i >>> 0 <= (HEAP32[$38 >> 2] | 0) >>> 0);
 $61 = $0 + 12 | 0;
 $62 = HEAP32[$61 >> 2] | 0;
 $63 = $62 - $18 | 0;
 $64 = $63 >> 3;
 $65 = HEAP32[$2 >> 2] | 0;
 $66 = $65 + ($64 << 3) | 0;
 HEAP32[$61 >> 2] = $66;
 return;
}

function __ZNSt3__214__split_bufferIPiRNS_9allocatorIS1_EEE10push_frontERKS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$cast = 0, $$in = 0, $$sroa$10$0 = 0, $$sroa$10$1 = 0, $$sroa$speculated = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $48 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = $4;
 do if (($3 | 0) == ($4 | 0)) {
  $7 = $0 + 8 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  $9 = $0 + 12 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $$cast = $10;
  if ($8 >>> 0 < $10 >>> 0) {
   $12 = $8;
   $16 = (($$cast - $12 >> 2) + 1 | 0) / 2 | 0;
   $17 = $8 + ($16 << 2) | 0;
   $19 = $12 - $3 | 0;
   $20 = $19 >> 2;
   $23 = $17 + (0 - $20 << 2) | 0;
   if (!$20) {
    $$0$i$i = $17;
    $25 = $8;
   } else {
    _memmove($23 | 0, $3 | 0, $19 | 0) | 0;
    $$0$i$i = $23;
    $25 = HEAP32[$7 >> 2] | 0;
   }
   HEAP32[$2 >> 2] = $$0$i$i;
   HEAP32[$7 >> 2] = $25 + ($16 << 2);
   $51 = $$0$i$i;
   break;
  }
  $27 = $$cast - $6 >> 1;
  $$sroa$speculated = ($27 | 0) == 0 ? 1 : $27;
  if ($$sroa$speculated >>> 0 > 1073741823) {
   $30 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($30);
   ___cxa_throw($30 | 0, 1824, 151);
  }
  $34 = __Znwj($$sroa$speculated << 2) | 0;
  $35 = $34;
  $36 = $34 + (($$sroa$speculated + 3 | 0) >>> 2 << 2) | 0;
  $37 = $36;
  $39 = $34 + ($$sroa$speculated << 2) | 0;
  if (($3 | 0) == ($8 | 0)) {
   $$sroa$10$1 = $37;
   $48 = $3;
  } else {
   $$in = $36;
   $$sroa$10$0 = $37;
   $42 = $3;
   do {
    HEAP32[$$in >> 2] = HEAP32[$42 >> 2];
    $$in = $$sroa$10$0 + 4 | 0;
    $$sroa$10$0 = $$in;
    $42 = $42 + 4 | 0;
   } while (($42 | 0) != ($8 | 0));
   $$sroa$10$1 = $$sroa$10$0;
   $48 = HEAP32[$0 >> 2] | 0;
  }
  HEAP32[$0 >> 2] = $35;
  HEAP32[$2 >> 2] = $37;
  HEAP32[$7 >> 2] = $$sroa$10$1;
  HEAP32[$9 >> 2] = $39;
  if (!$48) $51 = $36; else {
   __ZdlPv($48);
   $51 = HEAP32[$2 >> 2] | 0;
  }
 } else $51 = $3; while (0);
 HEAP32[$51 + -4 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -4;
 return;
}

function __ZNSt3__214__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$cast = 0, $$in = 0, $$sroa$10$0 = 0, $$sroa$10$1 = 0, $$sroa$speculated = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $48 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = $4;
 do if (($3 | 0) == ($4 | 0)) {
  $7 = $0 + 8 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  $9 = $0 + 12 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $$cast = $10;
  if ($8 >>> 0 < $10 >>> 0) {
   $12 = $8;
   $16 = (($$cast - $12 >> 2) + 1 | 0) / 2 | 0;
   $17 = $8 + ($16 << 2) | 0;
   $19 = $12 - $3 | 0;
   $20 = $19 >> 2;
   $23 = $17 + (0 - $20 << 2) | 0;
   if (!$20) {
    $$0$i$i = $17;
    $25 = $8;
   } else {
    _memmove($23 | 0, $3 | 0, $19 | 0) | 0;
    $$0$i$i = $23;
    $25 = HEAP32[$7 >> 2] | 0;
   }
   HEAP32[$2 >> 2] = $$0$i$i;
   HEAP32[$7 >> 2] = $25 + ($16 << 2);
   $51 = $$0$i$i;
   break;
  }
  $27 = $$cast - $6 >> 1;
  $$sroa$speculated = ($27 | 0) == 0 ? 1 : $27;
  if ($$sroa$speculated >>> 0 > 1073741823) {
   $30 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($30);
   ___cxa_throw($30 | 0, 1824, 151);
  }
  $34 = __Znwj($$sroa$speculated << 2) | 0;
  $35 = $34;
  $36 = $34 + (($$sroa$speculated + 3 | 0) >>> 2 << 2) | 0;
  $37 = $36;
  $39 = $34 + ($$sroa$speculated << 2) | 0;
  if (($3 | 0) == ($8 | 0)) {
   $$sroa$10$1 = $37;
   $48 = $3;
  } else {
   $$in = $36;
   $$sroa$10$0 = $37;
   $42 = $3;
   do {
    HEAP32[$$in >> 2] = HEAP32[$42 >> 2];
    $$in = $$sroa$10$0 + 4 | 0;
    $$sroa$10$0 = $$in;
    $42 = $42 + 4 | 0;
   } while (($42 | 0) != ($8 | 0));
   $$sroa$10$1 = $$sroa$10$0;
   $48 = HEAP32[$0 >> 2] | 0;
  }
  HEAP32[$0 >> 2] = $35;
  HEAP32[$2 >> 2] = $37;
  HEAP32[$7 >> 2] = $$sroa$10$1;
  HEAP32[$9 >> 2] = $39;
  if (!$48) $51 = $36; else {
   __ZdlPv($48);
   $51 = HEAP32[$2 >> 2] | 0;
  }
 } else $51 = $3; while (0);
 HEAP32[$51 + -4 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -4;
 return;
}

function _log_filter_section_getMinLevel($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph13$i$i$i = 0, $$0$ph13$us$i$i$i = 0, $$07$ph12$i$i$i = 0, $$07$ph12$us$i$i$i = 0, $$0710$i$i$i = 0, $$0710$us$us$i$i$i = 0, $12 = 0, $17 = 0, $24 = 0, $28 = 0, $5 = 0, $7 = 0;
 if (!(HEAP8[106128] | 0)) if (___cxa_guard_acquire(106128) | 0) {
  HEAP32[26746] = 0;
  HEAP32[26747] = 0;
  HEAP32[26745] = 106984;
  ___cxa_atexit(161, 106980, ___dso_handle | 0) | 0;
 }
 $5 = HEAP32[26746] | 0;
 do if ($5 | 0) {
  $7 = ($0 | 0) == 0;
  L7 : do if ($7) {
   $$0$ph13$us$i$i$i = 106984;
   $$07$ph12$us$i$i$i = $5;
   while (1) {
    $$0710$us$us$i$i$i = $$07$ph12$us$i$i$i;
    while (1) {
     if (HEAP32[$$0710$us$us$i$i$i + 16 >> 2] | 0) break;
     $12 = HEAP32[$$0710$us$us$i$i$i + 4 >> 2] | 0;
     if (!$12) {
      $$0$ph$lcssa$i$i$i = $$0$ph13$us$i$i$i;
      break L7;
     } else $$0710$us$us$i$i$i = $12;
    }
    $$07$ph12$us$i$i$i = HEAP32[$$0710$us$us$i$i$i >> 2] | 0;
    if (!$$07$ph12$us$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$0710$us$us$i$i$i;
     break;
    } else $$0$ph13$us$i$i$i = $$0710$us$us$i$i$i;
   }
  } else {
   $$0$ph13$i$i$i = 106984;
   $$07$ph12$i$i$i = $5;
   while (1) {
    $$0710$i$i$i = $$07$ph12$i$i$i;
    while (1) {
     $17 = HEAP32[$$0710$i$i$i + 16 >> 2] | 0;
     if ($17 | 0) if ((_strcmp($17, $0) | 0) <= 0) break;
     $24 = HEAP32[$$0710$i$i$i + 4 >> 2] | 0;
     if (!$24) {
      $$0$ph$lcssa$i$i$i = $$0$ph13$i$i$i;
      break L7;
     } else $$0710$i$i$i = $24;
    }
    $$07$ph12$i$i$i = HEAP32[$$0710$i$i$i >> 2] | 0;
    if (!$$07$ph12$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$0710$i$i$i;
     break;
    } else $$0$ph13$i$i$i = $$0710$i$i$i;
   }
  } while (0);
  if (($$0$ph$lcssa$i$i$i | 0) != 106984) {
   $28 = HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0;
   if ($7) {
    $$0 = 35;
    return $$0 | 0;
   }
   if ($28 | 0) if ((_strcmp($0, $28) | 0) > 0) break;
   $$0 = HEAP32[$$0$ph$lcssa$i$i$i + 20 >> 2] | 0;
   return $$0 | 0;
  }
 } while (0);
 if (($0 | 0) == 114224) {
  $$0 = 30;
  return $$0 | 0;
 }
 if (!$0) {
  $$0 = 35;
  return $$0 | 0;
 }
 $$0 = HEAP8[$0 >> 0] | 0 ? 35 : 30;
 return $$0 | 0;
}

function __ZN10PlayerBaseC2ERKS_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$05$i$i$i$i$i = 0, $$byval_copy = 0, $12 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $30 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 68116;
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 8 | 0, $1 + 8 | 0);
 HEAP32[$0 >> 2] = 68164;
 $8 = $0 + 20 | 0;
 $9 = $1 + 20 | 0;
 HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
 HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 32 | 0, $1 + 32 | 0);
 $12 = $0 + 44 | 0;
 HEAP32[$0 + 48 >> 2] = 0;
 HEAP32[$0 + 52 >> 2] = 0;
 $15 = $0 + 48 | 0;
 HEAP32[$12 >> 2] = $15;
 $17 = HEAP32[$1 + 44 >> 2] | 0;
 $18 = $1 + 48 | 0;
 if (($17 | 0) == ($18 | 0)) {
  STACKTOP = sp;
  return;
 }
 $20 = $15;
 $22 = $17;
 $24 = $17;
 while (1) {
  $21 = $22 + 16 | 0;
  HEAP32[$2 >> 2] = $20;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEENS_21__tree_const_iteratorIS8_SP_iEERKT_DpOT0_($12, $$byval_copy, $21, $21) | 0;
  $25 = HEAP32[$24 + 4 >> 2] | 0;
  if (!$25) {
   $$0$i$i$i$i$i = $24;
   while (1) {
    $30 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$30 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$05$i$i$i$i$i = $30;
     break;
    } else $$0$i$i$i$i$i = $30;
   }
  } else {
   $$0$i$i$i$i$i$i = $25;
   while (1) {
    $27 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$27) {
     $$05$i$i$i$i$i = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $27;
   }
  }
  if (($$05$i$i$i$i$i | 0) == ($18 | 0)) break; else {
   $22 = $$05$i$i$i$i$i;
   $24 = $$05$i$i$i$i$i;
  }
 }
 STACKTOP = sp;
 return;
}

function __ZN6google7SetArgvEiPPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021 = 0, $$sink19 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $34 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 if (HEAP8[112128] | 0) {
  STACKTOP = sp;
  return;
 }
 HEAP8[112128] = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(108360, HEAP32[$1 >> 2] | 0) | 0;
 if ((HEAP8[108359] | 0) < 0) {
  HEAP8[HEAP32[27087] >> 0] = 0;
  HEAP32[27088] = 0;
 } else {
  HEAP8[108348] = 0;
  HEAP8[108359] = 0;
 }
 if (($0 | 0) > 0) {
  $$021 = 0;
  do {
   if ($$021 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(108348, 92155) | 0;
   $20 = $1 + ($$021 << 2) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(108348, HEAP32[$20 >> 2] | 0) | 0;
   $22 = HEAP32[$20 >> 2] | 0;
   HEAP32[$2 >> 2] = 0;
   HEAP32[$2 + 4 >> 2] = 0;
   HEAP32[$2 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $22, _strlen($22) | 0);
   $24 = HEAP32[27082] | 0;
   if ($24 >>> 0 < (HEAP32[27083] | 0) >>> 0) {
    HEAP32[$24 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$24 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
    HEAP32[$24 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
    HEAP32[$2 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    HEAP32[27082] = (HEAP32[27082] | 0) + 12;
   } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(108324, $2);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $$021 = $$021 + 1 | 0;
  } while (($$021 | 0) < ($0 | 0));
 }
 HEAP32[27052] = 0;
 $10 = HEAP8[108359] | 0;
 $11 = $10 << 24 >> 24 < 0;
 $13 = $11 ? HEAP32[27087] | 0 : 108348;
 $16 = $11 ? HEAP32[27088] | 0 : $10 & 255;
 $17 = $13 + $16 | 0;
 if (!$16) {
  STACKTOP = sp;
  return;
 } else {
  $$sink19 = $13;
  $34 = 0;
 }
 do {
  $34 = $34 + (HEAP8[$$sink19 >> 0] | 0) | 0;
  $$sink19 = $$sink19 + 1 | 0;
 } while (($$sink19 | 0) != ($17 | 0));
 HEAP32[27052] = $34;
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$017$off041 = 0, $$017$off042 = 0, $$017$off047 = 0, $$018$off039 = 0, $$018$off046 = 0, $$01937 = 0, $$01938 = 0, $$01945 = 0, $$02035 = 0, $$02036 = 0, $$02044 = 0, $$phitmp$i = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $18 = 0, $20 = 0, $22 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0;
 if ($1 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) {
  $12 = HEAP32[$0 + 4 >> 2] | 0;
  $18 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $12 = $4 & 255;
  $18 = 10;
 }
 $$sroa$speculated = $12 >>> 0 > $1 >>> 0 ? $12 : $1;
 $14 = $$sroa$speculated >>> 0 < 11;
 $$phitmp$i = $14 ? 10 : ($$sroa$speculated + 16 & -16) + -1 | 0;
 do if (($$phitmp$i | 0) != ($18 | 0)) {
  do if ($14) {
   $22 = HEAP32[$0 >> 2] | 0;
   if ($5) {
    $$017$off042 = 0;
    $$01938 = $22;
    $$02036 = $0;
    label = 12;
   } else {
    $$017$off047 = 0;
    $$018$off046 = 1;
    $$01945 = $22;
    $$02044 = $0;
    label = 13;
   }
  } else {
   $20 = __Znwj($$phitmp$i + 1 | 0) | 0;
   if ($5) {
    $$017$off042 = 1;
    $$01938 = HEAP32[$0 >> 2] | 0;
    $$02036 = $20;
    label = 12;
    break;
   } else {
    $$017$off047 = 1;
    $$018$off046 = 0;
    $$01945 = $0;
    $$02044 = $20;
    label = 13;
    break;
   }
  } while (0);
  if ((label | 0) == 12) {
   $$017$off041 = $$017$off042;
   $$018$off039 = 1;
   $$01937 = $$01938;
   $$02035 = $$02036;
   $27 = HEAP32[$0 + 4 >> 2] | 0;
  } else if ((label | 0) == 13) {
   $$017$off041 = $$017$off047;
   $$018$off039 = $$018$off046;
   $$01937 = $$01945;
   $$02035 = $$02044;
   $27 = $4 & 255;
  }
  $26 = $27 + 1 | 0;
  if ($26 | 0) _memcpy($$02035 | 0, $$01937 | 0, $26 | 0) | 0;
  if ($$018$off039) __ZdlPv($$01937);
  if ($$017$off041) {
   HEAP32[$0 + 8 >> 2] = $$phitmp$i + 1 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $12;
   HEAP32[$0 >> 2] = $$02035;
   break;
  } else {
   HEAP8[$3 >> 0] = $12;
   break;
  }
 } while (0);
 return;
}

function __ZL13discharge2regP9FuncStateP7expdesci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $19 = 0, $20 = 0, $25 = 0, $3 = 0, $4 = 0, $6 = 0, $78 = 0, $85 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $1);
 $4 = HEAP32[$1 >> 2] | 0;
 L1 : do switch ($4 | 0) {
 case 1:
  {
   $6 = HEAP32[$0 + 24 >> 2] | 0;
   do if (($6 | 0) > (HEAP32[$0 + 28 >> 2] | 0)) {
    if (!$6) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) > ($2 | 0)) break; else break L1;
    $19 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($6 + -1 << 2) | 0;
    $20 = HEAP32[$19 >> 2] | 0;
    if (($20 & 63 | 0) == 3) {
     $25 = $20 >>> 23;
     if (!(($20 >>> 6 & 255 | 0) > ($2 | 0) | ($25 + 1 | 0) < ($2 | 0))) {
      if (($25 | 0) >= ($2 | 0)) break L1;
      HEAP32[$19 >> 2] = $20 & 8388607 | $2 << 23;
      break L1;
     }
    }
   } while (0);
   __ZL9luaK_codeP9FuncStateji($0, $2 << 23 | $2 << 6 | 3, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   break;
  }
 case 2:
 case 3:
  {
   __ZL9luaK_codeP9FuncStateji($0, $2 << 6 | (($4 | 0) == 2 & 1) << 23 | 2, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   break;
  }
 case 4:
  {
   __ZL9luaK_codeP9FuncStateji($0, $2 << 6 | HEAP32[$1 + 4 >> 2] << 14 | 1, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   break;
  }
 case 5:
  {
   HEAP32[$3 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$3 + 4 >> 2] = 3;
   __ZL9luaK_codeP9FuncStateji($0, $2 << 6 | (__ZL4addkP9FuncStateP10lua_TValueS2_($0, $3, $3) | 0) << 14 | 1, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   break;
  }
 case 11:
  {
   $78 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$1 + 4 >> 2] << 2) | 0;
   HEAP32[$78 >> 2] = HEAP32[$78 >> 2] & -16321 | $2 << 6 & 16320;
   break;
  }
 case 12:
  {
   $85 = HEAP32[$1 + 4 >> 2] | 0;
   if (($85 | 0) != ($2 | 0)) __ZL9luaK_codeP9FuncStateji($0, $85 << 23 | $2 << 6, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   break;
  }
 default:
  {
   STACKTOP = sp;
   return;
  }
 } while (0);
 HEAP32[$1 + 4 >> 2] = $2;
 HEAP32[$1 >> 2] = 12;
 STACKTOP = sp;
 return;
}

function __ZL12new_localvarP8LexStateP7TStringi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$026$i = 0, $$pre$phiZ2D = 0, $12 = 0, $15 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0, $35 = 0, $4 = 0, $5 = 0, $55 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = $0 + 28 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $4 + 50 | 0;
 if (((HEAPU8[$5 >> 0] | 0) + $2 | 0) > 199) {
  $12 = HEAP32[(HEAP32[$4 >> 2] | 0) + 60 >> 2] | 0;
  $15 = HEAP32[$4 + 16 >> 2] | 0;
  if (!$12) {
   HEAP32[$vararg_buffer >> 2] = 200;
   HEAP32[$vararg_buffer + 4 >> 2] = 88195;
   $20 = __Z16luaO_pushfstringP9lua_StatePKcz($15, 87964, $vararg_buffer) | 0;
  } else {
   HEAP32[$vararg_buffer2 >> 2] = $12;
   HEAP32[$vararg_buffer2 + 4 >> 2] = 200;
   HEAP32[$vararg_buffer2 + 8 >> 2] = 88195;
   $20 = __Z16luaO_pushfstringP9lua_StatePKcz($15, 87998, $vararg_buffer2) | 0;
  }
  __Z13luaX_lexerrorP8LexStatePKci(HEAP32[$4 + 12 >> 2] | 0, $20, 0);
  $22 = HEAP32[$3 >> 2] | 0;
 } else $22 = $4;
 $21 = HEAP32[$22 >> 2] | 0;
 $23 = $21 + 56 | 0;
 $24 = HEAP32[$23 >> 2] | 0;
 $25 = $22 + 48 | 0;
 if ((HEAP16[$25 >> 1] | 0) < ($24 | 0)) {
  $$pre$phiZ2D = $21 + 24 | 0;
  $35 = $24;
 } else {
  $31 = $21 + 24 | 0;
  HEAP32[$31 >> 2] = __Z13luaM_growaux_P9lua_StatePvPijiPKc(HEAP32[$0 + 32 >> 2] | 0, HEAP32[$31 >> 2] | 0, $23, 12, 32767, 88211) | 0;
  $$pre$phiZ2D = $31;
  $35 = HEAP32[$23 >> 2] | 0;
 }
 if (($24 | 0) < ($35 | 0)) {
  $$026$i = $24;
  do {
   HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + ($$026$i * 12 | 0) >> 2] = 0;
   $$026$i = $$026$i + 1 | 0;
  } while (($$026$i | 0) < (HEAP32[$23 >> 2] | 0));
 }
 HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + ((HEAP16[$25 >> 1] | 0) * 12 | 0) >> 2] = $1;
 if (HEAP8[$1 + 5 >> 0] & 3) if (HEAP8[$21 + 5 >> 0] & 4) __Z13luaC_barrierfP9lua_StateP8GCObjectS2_(HEAP32[$0 + 32 >> 2] | 0, $21, $1);
 $55 = HEAP16[$25 >> 1] | 0;
 HEAP16[$25 >> 1] = $55 + 1 << 16 >> 16;
 HEAP16[$4 + 172 + ((HEAPU8[$5 >> 0] | 0) + $2 << 1) >> 1] = $55;
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferIPiRNS_9allocatorIS1_EEE9push_backEOS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$in = 0, $$sroa$10$0 = 0, $$sroa$10$1 = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $47 = 0, $5 = 0, $51 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $7 = $5;
 $8 = $3;
 do if (($3 | 0) == ($5 | 0)) {
  $9 = $0 + 4 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $11 = HEAP32[$0 >> 2] | 0;
  $13 = $11;
  if ($10 >>> 0 > $11 >>> 0) {
   $14 = $10;
   $18 = (($14 - $13 >> 2) + 1 | 0) / -2 | 0;
   $19 = $10 + ($18 << 2) | 0;
   $20 = $8 - $14 | 0;
   $21 = $20 >> 2;
   if (!$21) $25 = $10; else {
    _memmove($19 | 0, $10 | 0, $20 | 0) | 0;
    $25 = HEAP32[$9 >> 2] | 0;
   }
   $23 = $19 + ($21 << 2) | 0;
   HEAP32[$2 >> 2] = $23;
   HEAP32[$9 >> 2] = $25 + ($18 << 2);
   $51 = $23;
   break;
  }
  $27 = $7 - $13 >> 1;
  $$sroa$speculated = ($27 | 0) == 0 ? 1 : $27;
  if ($$sroa$speculated >>> 0 > 1073741823) {
   $30 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($30);
   ___cxa_throw($30 | 0, 1824, 151);
  }
  $33 = __Znwj($$sroa$speculated << 2) | 0;
  $34 = $33;
  $35 = $33 + ($$sroa$speculated >>> 2 << 2) | 0;
  $36 = $35;
  $38 = $33 + ($$sroa$speculated << 2) | 0;
  if (($10 | 0) == ($3 | 0)) {
   $$sroa$10$1 = $36;
   $47 = $11;
  } else {
   $$in = $35;
   $$sroa$10$0 = $36;
   $41 = $10;
   do {
    HEAP32[$$in >> 2] = HEAP32[$41 >> 2];
    $$in = $$sroa$10$0 + 4 | 0;
    $$sroa$10$0 = $$in;
    $41 = $41 + 4 | 0;
   } while (($41 | 0) != ($3 | 0));
   $$sroa$10$1 = $$sroa$10$0;
   $47 = HEAP32[$0 >> 2] | 0;
  }
  HEAP32[$0 >> 2] = $34;
  HEAP32[$9 >> 2] = $36;
  HEAP32[$2 >> 2] = $$sroa$10$1;
  HEAP32[$4 >> 2] = $38;
  if (!$47) $51 = $$sroa$10$1; else {
   __ZdlPv($47);
   $51 = HEAP32[$2 >> 2] | 0;
  }
 } else $51 = $3; while (0);
 HEAP32[$51 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 4;
 return;
}

function __ZNSt3__214__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$in = 0, $$sroa$10$0 = 0, $$sroa$10$1 = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $47 = 0, $5 = 0, $51 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $7 = $5;
 $8 = $3;
 do if (($3 | 0) == ($5 | 0)) {
  $9 = $0 + 4 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $11 = HEAP32[$0 >> 2] | 0;
  $13 = $11;
  if ($10 >>> 0 > $11 >>> 0) {
   $14 = $10;
   $18 = (($14 - $13 >> 2) + 1 | 0) / -2 | 0;
   $19 = $10 + ($18 << 2) | 0;
   $20 = $8 - $14 | 0;
   $21 = $20 >> 2;
   if (!$21) $25 = $10; else {
    _memmove($19 | 0, $10 | 0, $20 | 0) | 0;
    $25 = HEAP32[$9 >> 2] | 0;
   }
   $23 = $19 + ($21 << 2) | 0;
   HEAP32[$2 >> 2] = $23;
   HEAP32[$9 >> 2] = $25 + ($18 << 2);
   $51 = $23;
   break;
  }
  $27 = $7 - $13 >> 1;
  $$sroa$speculated = ($27 | 0) == 0 ? 1 : $27;
  if ($$sroa$speculated >>> 0 > 1073741823) {
   $30 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($30);
   ___cxa_throw($30 | 0, 1824, 151);
  }
  $33 = __Znwj($$sroa$speculated << 2) | 0;
  $34 = $33;
  $35 = $33 + ($$sroa$speculated >>> 2 << 2) | 0;
  $36 = $35;
  $38 = $33 + ($$sroa$speculated << 2) | 0;
  if (($10 | 0) == ($3 | 0)) {
   $$sroa$10$1 = $36;
   $47 = $11;
  } else {
   $$in = $35;
   $$sroa$10$0 = $36;
   $41 = $10;
   do {
    HEAP32[$$in >> 2] = HEAP32[$41 >> 2];
    $$in = $$sroa$10$0 + 4 | 0;
    $$sroa$10$0 = $$in;
    $41 = $41 + 4 | 0;
   } while (($41 | 0) != ($3 | 0));
   $$sroa$10$1 = $$sroa$10$0;
   $47 = HEAP32[$0 >> 2] | 0;
  }
  HEAP32[$0 >> 2] = $34;
  HEAP32[$9 >> 2] = $36;
  HEAP32[$2 >> 2] = $$sroa$10$1;
  HEAP32[$4 >> 2] = $38;
  if (!$47) $51 = $$sroa$10$1; else {
   __ZdlPv($47);
   $51 = HEAP32[$2 >> 2] | 0;
  }
 } else $51 = $3; while (0);
 HEAP32[$51 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 4;
 return;
}

function __Z12luaI_openlibP9lua_StatePKcPK8luaL_Regi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$lcssa$i = 0, $$034$i = 0, $$036$us = 0, $$05$i = 0, $19 = 0, $20 = 0, $23 = 0, $30 = 0, $36 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if ($1 | 0) {
  if (!(HEAP32[$2 >> 2] | 0)) $$0$lcssa$i = 0; else {
   $$034$i = $2;
   $$05$i = 0;
   while (1) {
    $7 = $$05$i + 1 | 0;
    $$034$i = $$034$i + 8 | 0;
    if (!(HEAP32[$$034$i >> 2] | 0)) {
     $$0$lcssa$i = $7;
     break;
    } else $$05$i = $7;
   }
  }
  __Z14luaL_findtableP9lua_StateiPKci($0, -1e4, 85697, 1) | 0;
  __Z12lua_getfieldP9lua_StateiPKc($0, -1, $1);
  if ((__Z8lua_typeP9lua_Statei($0, -1) | 0) != 5) {
   __Z10lua_settopP9lua_Statei($0, -2);
   if (__Z14luaL_findtableP9lua_StateiPKci($0, -10002, $1, $$0$lcssa$i) | 0) {
    HEAP32[$vararg_buffer >> 2] = $1;
    __Z10luaL_errorP9lua_StatePKcz($0, 85705, $vararg_buffer) | 0;
   }
   __Z13lua_pushvalueP9lua_Statei($0, -1);
   __Z12lua_setfieldP9lua_StateiPKc($0, -3, $1);
  }
  __Z10lua_removeP9lua_Statei($0, -2);
  __Z10lua_insertP9lua_Statei($0, ~$3);
 }
 if (!(HEAP32[$2 >> 2] | 0)) {
  $36 = ~$3;
  __Z10lua_settopP9lua_Statei($0, $36);
  STACKTOP = sp;
  return;
 }
 $19 = -2 - $3 | 0;
 $20 = 0 - $3 | 0;
 if (($3 | 0) > 0) $23 = $2; else {
  $30 = $2;
  do {
   __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, HEAP32[$30 + 4 >> 2] | 0, $3);
   __Z12lua_setfieldP9lua_StateiPKc($0, $19, HEAP32[$30 >> 2] | 0);
   $30 = $30 + 8 | 0;
  } while ((HEAP32[$30 >> 2] | 0) != 0);
  $36 = ~$3;
  __Z10lua_settopP9lua_Statei($0, $36);
  STACKTOP = sp;
  return;
 }
 do {
  $$036$us = 0;
  do {
   __Z13lua_pushvalueP9lua_Statei($0, $20);
   $$036$us = $$036$us + 1 | 0;
  } while (($$036$us | 0) != ($3 | 0));
  __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, HEAP32[$23 + 4 >> 2] | 0, $3);
  __Z12lua_setfieldP9lua_StateiPKc($0, $19, HEAP32[$23 >> 2] | 0);
  $23 = $23 + 8 | 0;
 } while ((HEAP32[$23 >> 2] | 0) != 0);
 $36 = ~$3;
 __Z10lua_settopP9lua_Statei($0, $36);
 STACKTOP = sp;
 return;
}

function __Z10lua_rawsetP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $40 = 0, $41 = 0, $45 = 0, $50 = 0, $6 = 0, $60 = 0, $65 = 0, $66 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $40 = $0 + 8 | 0;
 $41 = HEAP32[$40 >> 2] | 0;
 $45 = __Z8luaH_setP9lua_StateP5TablePK10lua_TValue($0, HEAP32[$$1$i >> 2] | 0, $41 + -16 | 0) | 0;
 HEAP32[$45 >> 2] = HEAP32[$41 + -8 >> 2];
 HEAP32[$45 + 4 >> 2] = HEAP32[$41 + -4 >> 2];
 $50 = HEAP32[$40 >> 2] | 0;
 if ((HEAP32[$50 + -4 >> 2] | 0) <= 3) {
  $66 = $50;
  $65 = $66 + -16 | 0;
  HEAP32[$40 >> 2] = $65;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 if (!(HEAP8[(HEAP32[$50 + -8 >> 2] | 0) + 5 >> 0] & 3)) {
  $66 = $50;
  $65 = $66 + -16 | 0;
  HEAP32[$40 >> 2] = $65;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 $60 = HEAP32[$$1$i >> 2] | 0;
 if (!(HEAP8[$60 + 5 >> 0] & 4)) {
  $66 = $50;
  $65 = $66 + -16 | 0;
  HEAP32[$40 >> 2] = $65;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 __Z16luaC_barrierbackP9lua_StateP5Table($0, $60);
 $66 = HEAP32[$40 >> 2] | 0;
 $65 = $66 + -16 | 0;
 HEAP32[$40 >> 2] = $65;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __Z11lua_rawsetiP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1$i = 0, $23 = 0, $32 = 0, $33 = 0, $41 = 0, $42 = 0, $45 = 0, $50 = 0, $60 = 0, $65 = 0, $66 = 0, $7 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $7 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $7 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $23 = $0 + 80 | 0;
    HEAP32[$23 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $23;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $32 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $33 = -10002 - $1 | 0;
    $$1$i = ($33 | 0) > (HEAPU8[$32 + 7 >> 0] | 0 | 0) ? 108164 : $32 + 20 + ($33 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $41 = $0 + 8 | 0;
 $42 = HEAP32[$41 >> 2] | 0;
 $45 = __Z11luaH_setnumP9lua_StateP5Tablei($0, HEAP32[$$1$i >> 2] | 0, $2) | 0;
 HEAP32[$45 >> 2] = HEAP32[$42 + -8 >> 2];
 HEAP32[$45 + 4 >> 2] = HEAP32[$42 + -4 >> 2];
 $50 = HEAP32[$41 >> 2] | 0;
 if ((HEAP32[$50 + -4 >> 2] | 0) <= 3) {
  $66 = $50;
  $65 = $66 + -8 | 0;
  HEAP32[$41 >> 2] = $65;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 if (!(HEAP8[(HEAP32[$50 + -8 >> 2] | 0) + 5 >> 0] & 3)) {
  $66 = $50;
  $65 = $66 + -8 | 0;
  HEAP32[$41 >> 2] = $65;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 $60 = HEAP32[$$1$i >> 2] | 0;
 if (!(HEAP8[$60 + 5 >> 0] & 4)) {
  $66 = $50;
  $65 = $66 + -8 | 0;
  HEAP32[$41 >> 2] = $65;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 __Z16luaC_barrierbackP9lua_StateP5Table($0, $60);
 $66 = HEAP32[$41 >> 2] | 0;
 $65 = $66 + -8 | 0;
 HEAP32[$41 >> 2] = $65;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZL16reallymarkobjectP12global_StateP8GCObject($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$tr38 = 0, $10 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $29 = 0, $35 = 0, $4 = 0, $41 = 0, $44 = 0, $47 = 0, $5 = 0, $50 = 0, label = 0;
 $$tr38 = $1;
 $4 = HEAP8[$1 + 5 >> 0] | 0;
 L1 : while (1) {
  $2 = $$tr38 + 5 | 0;
  $5 = $4 & 252;
  HEAP8[$2 >> 0] = $5;
  switch (HEAP8[$$tr38 + 4 >> 0] | 0) {
  case 9:
   {
    label = 15;
    break L1;
    break;
   }
  case 10:
   {
    label = 7;
    break L1;
    break;
   }
  case 6:
   {
    label = 12;
    break L1;
    break;
   }
  case 5:
   {
    label = 13;
    break L1;
    break;
   }
  case 8:
   {
    label = 14;
    break L1;
    break;
   }
  case 7:
   break;
  default:
   {
    label = 16;
    break L1;
   }
  }
  $10 = HEAP32[$$tr38 + 8 >> 2] | 0;
  HEAP8[$2 >> 0] = $5 | 4;
  if ($10 | 0) if (HEAP8[$10 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $10);
  $19 = HEAP32[$$tr38 + 12 >> 2] | 0;
  $4 = HEAP8[$19 + 5 >> 0] | 0;
  if (!($4 & 3)) {
   label = 16;
   break;
  } else $$tr38 = $19;
 }
 if ((label | 0) == 7) {
  $24 = $$tr38 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  if ((HEAP32[$25 + 4 >> 2] | 0) > 3) {
   $29 = HEAP32[$25 >> 2] | 0;
   if (!(HEAP8[$29 + 5 >> 0] & 3)) $35 = $25; else {
    __ZL16reallymarkobjectP12global_StateP8GCObject($0, $29);
    $35 = HEAP32[$24 >> 2] | 0;
   }
  } else $35 = $25;
  if (($35 | 0) != ($$tr38 + 12 | 0)) return;
  HEAP8[$2 >> 0] = HEAPU8[$2 >> 0] | 4;
  return;
 } else if ((label | 0) == 12) {
  $41 = $0 + 36 | 0;
  HEAP32[$$tr38 + 8 >> 2] = HEAP32[$41 >> 2];
  HEAP32[$41 >> 2] = $$tr38;
  return;
 } else if ((label | 0) == 13) {
  $44 = $0 + 36 | 0;
  HEAP32[$$tr38 + 24 >> 2] = HEAP32[$44 >> 2];
  HEAP32[$44 >> 2] = $$tr38;
  return;
 } else if ((label | 0) == 14) {
  $47 = $0 + 36 | 0;
  HEAP32[$$tr38 + 92 >> 2] = HEAP32[$47 >> 2];
  HEAP32[$47 >> 2] = $$tr38;
  return;
 } else if ((label | 0) == 15) {
  $50 = $0 + 36 | 0;
  HEAP32[$$tr38 + 68 >> 2] = HEAP32[$50 >> 2];
  HEAP32[$50 >> 2] = $$tr38;
  return;
 } else if ((label | 0) == 16) return;
}

function _log_backend_registerCleanup($0) {
 $0 = $0 | 0;
 var $$0$19$i$i$i = 0, $$0$i$i$i$i = 0, $$020$i$i$i$i = 0, $$sink$i$i$i$i = 0, $1 = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $2 = 0, $23 = 0, $28 = 0, $32 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0;
 if (!(HEAP8[106120] | 0)) if (___cxa_guard_acquire(106120) | 0) {
  HEAP32[26737] = 0;
  HEAP32[26738] = 0;
  HEAP32[26736] = 106948;
  ___cxa_atexit(160, 106944, ___dso_handle | 0) | 0;
 }
 $7 = HEAP32[26737] | 0;
 do if (!$7) {
  HEAP32[$1 >> 2] = 106948;
  $$0$19$i$i$i = 106948;
  $$020$i$i$i$i = 106948;
 } else {
  $$0$i$i$i$i = $7;
  while (1) {
   $10 = HEAP32[$$0$i$i$i$i + 16 >> 2] | 0;
   if ($10 >>> 0 > $0 >>> 0) {
    $12 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$12) {
     label = 7;
     break;
    } else $$sink$i$i$i$i = $12;
   } else {
    if ($10 >>> 0 >= $0 >>> 0) {
     label = 12;
     break;
    }
    $16 = $$0$i$i$i$i + 4 | 0;
    $17 = HEAP32[$16 >> 2] | 0;
    if (!$17) {
     label = 11;
     break;
    } else $$sink$i$i$i$i = $17;
   }
   $$0$i$i$i$i = $$sink$i$i$i$i;
  }
  if ((label | 0) == 7) {
   HEAP32[$1 >> 2] = $$0$i$i$i$i;
   $$0$19$i$i$i = $$0$i$i$i$i;
   $$020$i$i$i$i = $$0$i$i$i$i;
   break;
  } else if ((label | 0) == 11) {
   HEAP32[$1 >> 2] = $$0$i$i$i$i;
   $$0$19$i$i$i = $$0$i$i$i$i;
   $$020$i$i$i$i = $16;
   break;
  } else if ((label | 0) == 12) {
   HEAP32[$1 >> 2] = $$0$i$i$i$i;
   $$0$19$i$i$i = $$0$i$i$i$i;
   $$020$i$i$i$i = $1;
   break;
  }
 } while (0);
 if (HEAP32[$$020$i$i$i$i >> 2] | 0) {
  STACKTOP = sp;
  return;
 }
 $23 = __Znwj(20) | 0;
 HEAP32[$23 + 16 >> 2] = $2;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = $$0$19$i$i$i;
 HEAP32[$$020$i$i$i$i >> 2] = $23;
 $28 = HEAP32[HEAP32[26736] >> 2] | 0;
 if (!$28) $32 = $23; else {
  HEAP32[26736] = $28;
  $32 = HEAP32[$$020$i$i$i$i >> 2] | 0;
 }
 __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[26737] | 0, $32);
 HEAP32[26738] = (HEAP32[26738] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __ZN8AllyTeam8SetValueERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $20 = 0, $23 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $52 = 0, $55 = 0, $6 = 0, $7 = 0;
 $3 = $1 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $6 = $1 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 do if ((($4 << 24 >> 24 < 0 ? $7 : $4 & 255) | 0) == 12) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82970, 12) | 0) {
   $20 = HEAP8[$3 >> 0] | 0;
   $23 = HEAP32[$6 >> 2] | 0;
   break;
  }
  HEAPF32[$0 >> 2] = +_atof((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2);
  return;
 } else {
  $20 = $4;
  $23 = $7;
 } while (0);
 do if ((($20 << 24 >> 24 < 0 ? $23 : $20 & 255) | 0) == 15) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82983, 15) | 0) {
   $36 = HEAP8[$3 >> 0] | 0;
   $39 = HEAP32[$6 >> 2] | 0;
   break;
  }
  HEAPF32[$0 + 4 >> 2] = +_atof((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2);
  return;
 } else {
  $36 = $20;
  $39 = $23;
 } while (0);
 do if ((($36 << 24 >> 24 < 0 ? $39 : $36 & 255) | 0) == 13) {
  if (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 82999, 13) | 0) {
   $52 = HEAP8[$3 >> 0] | 0;
   $55 = HEAP32[$6 >> 2] | 0;
   break;
  }
  HEAPF32[$0 + 8 >> 2] = +_atof((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2);
  return;
 } else {
  $52 = $36;
  $55 = $39;
 } while (0);
 if ((($52 << 24 >> 24 < 0 ? $55 : $52 & 255) | 0) == 14) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($1, 0, -1, 83013, 14) | 0)) {
  HEAPF32[$0 + 12 >> 2] = +_atof((HEAP8[$2 + 11 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2);
  return;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(__ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEEixERKS7_($0 + 28 | 0, $1) | 0, $2) | 0;
 return;
}

function _log_backend_registerSink($0) {
 $0 = $0 | 0;
 var $$0$19$i$i$i = 0, $$0$i$i$i$i = 0, $$020$i$i$i$i = 0, $$sink$i$i$i$i = 0, $1 = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $2 = 0, $23 = 0, $28 = 0, $32 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0;
 if (!(HEAP8[106112] | 0)) if (___cxa_guard_acquire(106112) | 0) {
  HEAP32[26740] = 0;
  HEAP32[26741] = 0;
  HEAP32[26739] = 106960;
  ___cxa_atexit(159, 106956, ___dso_handle | 0) | 0;
 }
 $7 = HEAP32[26740] | 0;
 do if (!$7) {
  HEAP32[$1 >> 2] = 106960;
  $$0$19$i$i$i = 106960;
  $$020$i$i$i$i = 106960;
 } else {
  $$0$i$i$i$i = $7;
  while (1) {
   $10 = HEAP32[$$0$i$i$i$i + 16 >> 2] | 0;
   if ($10 >>> 0 > $0 >>> 0) {
    $12 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$12) {
     label = 7;
     break;
    } else $$sink$i$i$i$i = $12;
   } else {
    if ($10 >>> 0 >= $0 >>> 0) {
     label = 12;
     break;
    }
    $16 = $$0$i$i$i$i + 4 | 0;
    $17 = HEAP32[$16 >> 2] | 0;
    if (!$17) {
     label = 11;
     break;
    } else $$sink$i$i$i$i = $17;
   }
   $$0$i$i$i$i = $$sink$i$i$i$i;
  }
  if ((label | 0) == 7) {
   HEAP32[$1 >> 2] = $$0$i$i$i$i;
   $$0$19$i$i$i = $$0$i$i$i$i;
   $$020$i$i$i$i = $$0$i$i$i$i;
   break;
  } else if ((label | 0) == 11) {
   HEAP32[$1 >> 2] = $$0$i$i$i$i;
   $$0$19$i$i$i = $$0$i$i$i$i;
   $$020$i$i$i$i = $16;
   break;
  } else if ((label | 0) == 12) {
   HEAP32[$1 >> 2] = $$0$i$i$i$i;
   $$0$19$i$i$i = $$0$i$i$i$i;
   $$020$i$i$i$i = $1;
   break;
  }
 } while (0);
 if (HEAP32[$$020$i$i$i$i >> 2] | 0) {
  STACKTOP = sp;
  return;
 }
 $23 = __Znwj(20) | 0;
 HEAP32[$23 + 16 >> 2] = $2;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = $$0$19$i$i$i;
 HEAP32[$$020$i$i$i$i >> 2] = $23;
 $28 = HEAP32[HEAP32[26739] >> 2] | 0;
 if (!$28) $32 = $23; else {
  HEAP32[26739] = $28;
  $32 = HEAP32[$$020$i$i$i$i >> 2] | 0;
 }
 __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[26740] | 0, $32);
 HEAP32[26741] = (HEAP32[26741] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __Z11lua_getfenvP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $$pre$phiZ2D = 0, $22 = 0, $31 = 0, $32 = 0, $42 = 0, $43 = 0, $48 = 0, $49 = 0, $54 = 0, $56 = 0, $57 = 0, $6 = 0, $62 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 switch (HEAP32[$$1$i + 4 >> 2] | 0) {
 case 6:
  {
   $42 = $0 + 8 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   HEAP32[$43 >> 2] = HEAP32[(HEAP32[$$1$i >> 2] | 0) + 12 >> 2];
   HEAP32[$43 + 4 >> 2] = 5;
   $$pre$phiZ2D = $42;
   break;
  }
 case 7:
  {
   $48 = $0 + 8 | 0;
   $49 = HEAP32[$48 >> 2] | 0;
   HEAP32[$49 >> 2] = HEAP32[(HEAP32[$$1$i >> 2] | 0) + 12 >> 2];
   HEAP32[$49 + 4 >> 2] = 5;
   $$pre$phiZ2D = $48;
   break;
  }
 case 8:
  {
   $54 = HEAP32[$$1$i >> 2] | 0;
   $56 = $0 + 8 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   HEAP32[$57 >> 2] = HEAP32[$54 + 72 >> 2];
   HEAP32[$57 + 4 >> 2] = HEAP32[$54 + 76 >> 2];
   $$pre$phiZ2D = $56;
   break;
  }
 default:
  {
   $62 = $0 + 8 | 0;
   HEAP32[(HEAP32[$62 >> 2] | 0) + 4 >> 2] = 0;
   $$pre$phiZ2D = $62;
  }
 }
 HEAP32[$$pre$phiZ2D >> 2] = (HEAP32[$$pre$phiZ2D >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __Z9lua_pcallP9lua_Stateiii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1$i = 0, $10 = 0, $26 = 0, $35 = 0, $36 = 0, $4 = 0, $45 = 0, $48 = 0, $51 = 0, $54 = 0, $55 = 0, $57 = 0, $60 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 if (!$3) {
  $$0 = 0;
  $54 = HEAP32[$0 + 32 >> 2] | 0;
 } else {
  L4 : do if (($3 | 0) > 0) {
   $10 = (HEAP32[$0 + 12 >> 2] | 0) + ($3 + -1 << 3) | 0;
   $$1$i = $10 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $10 : 108164;
  } else {
   if (($3 | 0) > -1e4) {
    $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($3 << 3) | 0;
    break;
   }
   switch ($3 | 0) {
   case -1e4:
    {
     $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
     break L4;
     break;
    }
   case -10001:
    {
     $26 = $0 + 80 | 0;
     HEAP32[$26 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
     HEAP32[$0 + 84 >> 2] = 5;
     $$1$i = $26;
     break L4;
     break;
    }
   case -10002:
    {
     $$1$i = $0 + 72 | 0;
     break L4;
     break;
    }
   default:
    {
     $35 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
     $36 = -10002 - $3 | 0;
     $$1$i = ($36 | 0) > (HEAPU8[$35 + 7 >> 0] | 0 | 0) ? 108164 : $35 + 20 + ($36 + -1 << 3) | 0;
     break L4;
    }
   }
  } while (0);
  $45 = HEAP32[$0 + 32 >> 2] | 0;
  $$0 = $$1$i - $45 | 0;
  $54 = $45;
 }
 $48 = $0 + 8 | 0;
 $51 = (HEAP32[$48 >> 2] | 0) + (~$1 << 3) | 0;
 HEAP32[$4 >> 2] = $51;
 HEAP32[$4 + 4 >> 2] = $2;
 $55 = __Z10luaD_pcallP9lua_StatePFvS0_PvES1_ii($0, 42, $4, $51 - $54 | 0, $$0) | 0;
 if (($2 | 0) != -1) {
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  STACKTOP = sp;
  return $55 | 0;
 }
 $57 = HEAP32[$48 >> 2] | 0;
 $60 = (HEAP32[$0 + 20 >> 2] | 0) + 8 | 0;
 if ($57 >>> 0 < (HEAP32[$60 >> 2] | 0) >>> 0) {
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  STACKTOP = sp;
  return $55 | 0;
 }
 HEAP32[$60 >> 2] = $57;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 STACKTOP = sp;
 return $55 | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__weeksEv($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $9 = 0;
 if (!(HEAP8[106360] | 0)) if (___cxa_guard_acquire(106360) | 0) {
  if (!(HEAP8[106368] | 0)) if (___cxa_guard_acquire(106368) | 0) {
   $9 = 110872;
   do {
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 111040);
   ___cxa_atexit(180, 0, ___dso_handle | 0) | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110872, 103485) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110884, 103492) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110896, 103499) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110908, 103507) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110920, 103517) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110932, 103526) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110944, 103533) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110956, 103542) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110968, 103546) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110980, 103550) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110992, 103554) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(111004, 103558) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(111016, 103562) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(111028, 103566) | 0;
  HEAP32[27760] = 110872;
 }
 return HEAP32[27760] | 0;
}

function __ZN6google12_GLOBAL__N_1L13ParseFlagListEPKcPNSt3__26vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02325 = 0, $$024 = 0, $$1 = 0, $16 = 0, $18 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 16 | 0;
 if (!$0) {
  STACKTOP = sp;
  return;
 }
 $4 = $1 + 4 | 0;
 $5 = $1 + 8 | 0;
 $$02325 = $0;
 while (1) {
  $6 = HEAP8[$$02325 >> 0] | 0;
  if (!($6 << 24 >> 24)) {
   label = 4;
   break;
  }
  $8 = _strchr($$02325, 44) | 0;
  if (!$8) {
   $$024 = _strlen($$02325) | 0;
   $$1 = 0;
  } else {
   $$024 = $8 - $$02325 | 0;
   $$1 = $8 + 1 | 0;
  }
  if (!$$024) {
   __ZN6google12_GLOBAL__N_1L11ReportErrorENS0_16DieWhenReportingEPKcz(0, 91144, $vararg_buffer);
   $16 = HEAP8[$$02325 >> 0] | 0;
  } else $16 = $6;
  if ($16 << 24 >> 24 == 45) {
   HEAP32[$vararg_buffer1 >> 2] = $$024;
   HEAP32[$vararg_buffer1 + 4 >> 2] = $$02325;
   __ZN6google12_GLOBAL__N_1L11ReportErrorENS0_16DieWhenReportingEPKcz(0, 91173, $vararg_buffer1);
  };
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $$02325, $$024);
  $18 = HEAP32[$4 >> 2] | 0;
  if ($18 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) {
   HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$18 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   HEAP32[$18 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAP32[$2 >> 2] = 0;
   HEAP32[$2 + 4 >> 2] = 0;
   HEAP32[$2 + 8 >> 2] = 0;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 12;
  } else __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($1, $2);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  if (!$$1) {
   label = 4;
   break;
  } else $$02325 = $$1;
 }
 if ((label | 0) == 4) {
  STACKTOP = sp;
  return;
 }
}

function __ZL8funcargsP8LexStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $4 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $3 = $0 + 28 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = $0 + 12 | 0;
 switch (HEAP32[$7 >> 2] | 0) {
 case 40:
  {
   if (($6 | 0) != (HEAP32[$0 + 8 >> 2] | 0)) __Z16luaX_syntaxerrorP8LexStatePKc($0, 88056);
   __Z9luaX_nextP8LexState($0);
   if ((HEAP32[$7 >> 2] | 0) == 41) HEAP32[$2 >> 2] = 0; else {
    __ZL7subexprP8LexStateP7expdescj($0, $2, 0) | 0;
    if ((HEAP32[$7 >> 2] | 0) == 44) do {
     __Z9luaX_nextP8LexState($0);
     __Z16luaK_exp2nextregP9FuncStateP7expdesc(HEAP32[$3 >> 2] | 0, $2);
     __ZL7subexprP8LexStateP7expdescj($0, $2, 0) | 0;
    } while ((HEAP32[$7 >> 2] | 0) == 44);
    __Z15luaK_setreturnsP9FuncStateP7expdesci($4, $2, -1);
   }
   __ZL11check_matchP8LexStateiii($0, 41, 40, $6);
   break;
  }
 case 123:
  {
   __ZL11constructorP8LexStateP7expdesc($0, $2);
   break;
  }
 case 286:
  {
   $21 = __Z12luaK_stringKP9FuncStateP7TString($4, HEAP32[$0 + 16 >> 2] | 0) | 0;
   HEAP32[$2 + 12 >> 2] = -1;
   HEAP32[$2 + 16 >> 2] = -1;
   HEAP32[$2 >> 2] = 4;
   HEAP32[$2 + 4 >> 2] = $21;
   __Z9luaX_nextP8LexState($0);
   break;
  }
 default:
  {
   __Z16luaX_syntaxerrorP8LexStatePKc($0, 88105);
   STACKTOP = sp;
   return;
  }
 }
 $25 = $1 + 4 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 switch (HEAP32[$2 >> 2] | 0) {
 case 14:
 case 13:
  {
   $$0 = 0;
   break;
  }
 case 0:
  {
   label = 15;
   break;
  }
 default:
  {
   __Z16luaK_exp2nextregP9FuncStateP7expdesc($4, $2);
   label = 15;
  }
 }
 if ((label | 0) == 15) $$0 = (HEAP32[$4 + 36 >> 2] | 0) - $26 | 0;
 $30 = __Z12luaK_codeABCP9FuncState6OpCodeiii($4, 28, $26, $$0, 2) | 0;
 HEAP32[$1 + 12 >> 2] = -1;
 HEAP32[$1 + 16 >> 2] = -1;
 HEAP32[$1 >> 2] = 13;
 HEAP32[$25 >> 2] = $30;
 __Z12luaK_fixlineP9FuncStatei($4, $6);
 HEAP32[$4 + 36 >> 2] = $26 + 1;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__220__time_get_c_storageIwE7__weeksEv($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $9 = 0;
 if (!(HEAP8[106440] | 0)) if (___cxa_guard_acquire(106440) | 0) {
  if (!(HEAP8[106448] | 0)) if (___cxa_guard_acquire(106448) | 0) {
   $9 = 111684;
   do {
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 111852);
   ___cxa_atexit(183, 0, ___dso_handle | 0) | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111684, 75236) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111696, 75264) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111708, 75292) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111720, 75324) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111732, 75364) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111744, 75400) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111756, 75428) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111768, 75464) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111780, 75480) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111792, 75496) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111804, 75512) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111816, 75528) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111828, 75544) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111840, 75560) | 0;
  HEAP32[27963] = 111684;
 }
 return HEAP32[27963] | 0;
}

function _mbrtowc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$0 = 0, $$03750 = 0, $$03849 = 0, $$04148 = 0, $$1 = 0, $$139 = 0, $$142 = 0, $$2 = 0, $$45 = 0, $12 = 0, $13 = 0, $17 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $35 = 0, $4 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $$ = ($3 | 0) == 0 ? 108608 : $3;
 $6 = HEAP32[$$ >> 2] | 0;
 L1 : do if (!$1) if (!$6) $$0 = 0; else label = 15; else {
  $$45 = ($0 | 0) == 0 ? $4 : $0;
  if (!$2) $$0 = -2; else {
   if (!$6) {
    $12 = HEAP8[$1 >> 0] | 0;
    $13 = $12 & 255;
    if ($12 << 24 >> 24 > -1) {
     HEAP32[$$45 >> 2] = $13;
     $$0 = $12 << 24 >> 24 != 0 & 1;
     break;
    }
    $17 = $13 + -194 | 0;
    if ($17 >>> 0 > 50) {
     label = 15;
     break;
    }
    $21 = HEAP32[69880 + ($17 << 2) >> 2] | 0;
    $22 = $2 + -1 | 0;
    if (!$22) $$2 = $21; else {
     $$03750 = $1 + 1 | 0;
     $$03849 = $21;
     $$04148 = $22;
     label = 9;
    }
   } else {
    $$03750 = $1;
    $$03849 = $6;
    $$04148 = $2;
    label = 9;
   }
   L11 : do if ((label | 0) == 9) {
    $24 = HEAP8[$$03750 >> 0] | 0;
    $26 = ($24 & 255) >>> 3;
    if (($26 + -16 | $26 + ($$03849 >> 26)) >>> 0 > 7) {
     label = 15;
     break L1;
    } else {
     $$1 = $$03750;
     $$139 = $$03849;
     $$142 = $$04148;
     $35 = $24;
    }
    while (1) {
     $$1 = $$1 + 1 | 0;
     $$139 = ($35 & 255) + -128 | $$139 << 6;
     $$142 = $$142 + -1 | 0;
     if (($$139 | 0) >= 0) break;
     if (!$$142) {
      $$2 = $$139;
      break L11;
     }
     $35 = HEAP8[$$1 >> 0] | 0;
     if (($35 & -64) << 24 >> 24 != -128) {
      label = 15;
      break L1;
     }
    }
    HEAP32[$$ >> 2] = 0;
    HEAP32[$$45 >> 2] = $$139;
    $$0 = $2 - $$142 | 0;
    break L1;
   } while (0);
   HEAP32[$$ >> 2] = $$2;
   $$0 = -2;
  }
 } while (0);
 if ((label | 0) == 15) {
  HEAP32[$$ >> 2] = 0;
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z16lua_setmetatableP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $40 = 0, $41 = 0, $48 = 0, $56 = 0, $6 = 0, $68 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $40 = $0 + 8 | 0;
 $41 = HEAP32[$40 >> 2] | 0;
 if (!(HEAP32[$41 + -4 >> 2] | 0)) $$0 = 0; else $$0 = HEAP32[$41 + -8 >> 2] | 0;
 $48 = HEAP32[$$1$i + 4 >> 2] | 0;
 switch ($48 | 0) {
 case 5:
  {
   HEAP32[(HEAP32[$$1$i >> 2] | 0) + 8 >> 2] = $$0;
   if ($$0 | 0) if (HEAP8[$$0 + 5 >> 0] & 3) {
    $56 = HEAP32[$$1$i >> 2] | 0;
    if (HEAP8[$56 + 5 >> 0] & 4) __Z16luaC_barrierbackP9lua_StateP5Table($0, $56);
   }
   break;
  }
 case 7:
  {
   HEAP32[(HEAP32[$$1$i >> 2] | 0) + 8 >> 2] = $$0;
   if ($$0 | 0) if (HEAP8[$$0 + 5 >> 0] & 3) {
    $68 = HEAP32[$$1$i >> 2] | 0;
    if (HEAP8[$68 + 5 >> 0] & 4) __Z13luaC_barrierfP9lua_StateP8GCObjectS2_($0, $68, $$0);
   }
   break;
  }
 default:
  HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 124 + ($48 << 2) >> 2] = $$0;
 }
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + -8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return 1;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$017$off042 = 0, $$01938 = 0, $$020355154 = 0, $$02036 = 0, $$phitmp$i = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $22 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0;
 if ($1 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $3 = $0 + 8 | 0;
 $4 = $3 + 3 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $12 = HEAP32[$0 + 4 >> 2] | 0;
  $18 = (HEAP32[$3 >> 2] & 2147483647) + -1 | 0;
 } else {
  $12 = $5 & 255;
  $18 = 1;
 }
 $$sroa$speculated = $12 >>> 0 > $1 >>> 0 ? $12 : $1;
 $14 = $$sroa$speculated >>> 0 < 2;
 $$phitmp$i = $14 ? 1 : ($$sroa$speculated + 4 & -4) + -1 | 0;
 do if (($$phitmp$i | 0) != ($18 | 0)) {
  do if ($14) {
   $24 = HEAP32[$0 >> 2] | 0;
   if ($6) {
    $$017$off042 = 0;
    $$01938 = $24;
    $$02036 = $0;
    label = 15;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwj($0, $24, ($5 & 255) + 1 | 0) | 0;
    __ZdlPv($24);
    label = 17;
   }
  } else {
   $19 = $$phitmp$i + 1 | 0;
   if ($19 >>> 0 > 1073741823) ___assert_fail(105295, 105332, 1734, 105403);
   $22 = __Znwj($19 << 2) | 0;
   if ($6) {
    $$017$off042 = 1;
    $$01938 = HEAP32[$0 >> 2] | 0;
    $$02036 = $22;
    label = 15;
    break;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwj($22, $0, ($5 & 255) + 1 | 0) | 0;
    $$020355154 = $22;
    label = 16;
    break;
   }
  } while (0);
  if ((label | 0) == 15) {
   __ZNSt3__211char_traitsIwE4copyEPwPKwj($$02036, $$01938, (HEAP32[$0 + 4 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv($$01938);
   if ($$017$off042) {
    $$020355154 = $$02036;
    label = 16;
   } else label = 17;
  }
  if ((label | 0) == 16) {
   HEAP32[$3 >> 2] = $$phitmp$i + 1 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $12;
   HEAP32[$0 >> 2] = $$020355154;
   break;
  } else if ((label | 0) == 17) {
   HEAP8[$4 >> 0] = $12;
   break;
  }
 } while (0);
 return;
}

function _log_enable_and_disable($0) {
 $0 = $0 | 0;
 var $$05 = 0, $15 = 0, $16 = 0, $18 = 0, $29 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[106144] | 0)) if (___cxa_guard_acquire(106144) | 0) {
  HEAP32[26749] = 0;
  HEAP32[26750] = 0;
  HEAP32[26751] = 0;
  HEAP32[26752] = 0;
  HEAP32[26753] = 0;
  HEAP32[26754] = 0;
  ___cxa_atexit(162, 106996, ___dso_handle | 0) | 0;
 }
 if (!$0) {
  $29 = HEAP32[26748] | 0;
  $31 = HEAP32[26750] | 0;
  $32 = (HEAP32[26751] | 0) - $31 | 0;
  $36 = HEAP32[26753] | 0;
  $37 = HEAP32[26754] | 0;
  if (((($32 | 0) == 0 ? 0 : ($32 << 8) + -1 | 0) | 0) == ($37 + $36 | 0)) {
   __ZNSt3__25dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(106996);
   $41 = HEAP32[26753] | 0;
   $42 = HEAP32[26754] | 0;
   $45 = HEAP32[26750] | 0;
  } else {
   $41 = $36;
   $42 = $37;
   $45 = $31;
  }
  $40 = $42 + $41 | 0;
  HEAP32[(HEAP32[$45 + ($40 >>> 10 << 2) >> 2] | 0) + (($40 & 1023) << 2) >> 2] = $29;
  HEAP32[26754] = (HEAP32[26754] | 0) + 1;
  $$05 = 60;
  HEAP32[26748] = $$05;
  STACKTOP = sp;
  return;
 }
 $5 = HEAP32[26754] | 0;
 $6 = HEAP32[26753] | 0;
 $7 = $5 + -1 | 0;
 $8 = $7 + $6 | 0;
 $9 = HEAP32[26750] | 0;
 $15 = HEAP32[(HEAP32[$9 + ($8 >>> 10 << 2) >> 2] | 0) + (($8 & 1023) << 2) >> 2] | 0;
 HEAP32[26754] = $7;
 $16 = HEAP32[26751] | 0;
 $18 = $16 - $9 | 0;
 if ((1 - $5 - $6 + (($18 | 0) == 0 ? 0 : ($18 << 8) + -1 | 0) | 0) >>> 0 > 2047) {
  __ZdlPv(HEAP32[$16 + -4 >> 2] | 0);
  HEAP32[26751] = (HEAP32[26751] | 0) + -4;
 }
 if (($15 | 0) > 29) {
  $$05 = $15;
  HEAP32[26748] = $$05;
  STACKTOP = sp;
  return;
 }
 HEAP32[$vararg_buffer >> 2] = $15;
 HEAP32[$vararg_buffer + 4 >> 2] = 30;
 HEAP32[$vararg_buffer + 8 >> 2] = 30;
 _log_frontend_record(40, 114224, 78889, $vararg_buffer);
 $$05 = $15;
 HEAP32[26748] = $$05;
 STACKTOP = sp;
 return;
}

function ___towcase($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06385 = 0, $$16484 = 0, $$2 = 0, $$neg76 = 0, $13 = 0, $24 = 0, $26 = 0, $3 = 0, $34 = 0, $35 = 0, $4 = 0, $47 = 0, $52 = 0, label = 0;
 $3 = ($1 << 1) + -1 | 0;
 $4 = $1 + -1 | 0;
 L1 : do if (($0 + -43008 | 0) >>> 0 < 22272 | (($0 + -11776 | 0) >>> 0 < 30784 | (($0 + -1536 | 0) >>> 0 < 2560 | (_iswalpha($0) | 0) == 0))) $$2 = $0; else {
  $13 = ($1 | 0) != 0;
  if ($13 & ($0 + -4256 | 0) >>> 0 < 46) {
   if (($0 | 0) > 4293) switch ($0 | 0) {
   case 4295:
   case 4301:
    break;
   default:
    {
     $$2 = $0;
     break L1;
    }
   }
   $$2 = $0 + 7264 | 0;
   break;
  }
  if (($0 + -11520 | 0) >>> 0 < 38 & ($13 ^ 1)) {
   if (($0 | 0) > 11557) switch ($0 | 0) {
   case 11559:
   case 11565:
    break;
   default:
    {
     $$2 = $0;
     break L1;
    }
   }
   $$2 = $0 + -7264 | 0;
   break;
  } else $$06385 = 0;
  do {
   $34 = HEAP8[77524 + ($$06385 << 2) + 2 >> 0] | 0;
   $35 = $34 << 24 >> 24;
   $$neg76 = $0 - (HEAPU16[77524 + ($$06385 << 2) >> 1] | 0) | 0;
   if (($$neg76 - ($35 & $4) | 0) >>> 0 < (HEAPU8[77524 + ($$06385 << 2) + 3 >> 0] | 0) >>> 0) {
    label = 13;
    break;
   }
   $$06385 = $$06385 + 1 | 0;
  } while (($$06385 | 0) != 61);
  if ((label | 0) == 13) if ($34 << 24 >> 24 == 1) {
   $$2 = $1 + $0 - ($$neg76 & 1) | 0;
   break;
  } else {
   $$2 = (Math_imul($35, $3) | 0) + $0 | 0;
   break;
  }
  $24 = 1 - $1 | 0;
  $26 = HEAP16[77032 + ($24 << 1) >> 1] | 0;
  L23 : do if ($26 << 16 >> 16) {
   $$16484 = 0;
   $47 = $26;
   while (1) {
    if (($47 & 65535 | 0) == ($0 | 0)) break;
    $52 = $$16484 + 1 | 0;
    $47 = HEAP16[77032 + ($52 << 2) + ($24 << 1) >> 1] | 0;
    if (!($47 << 16 >> 16)) break L23; else $$16484 = $52;
   }
   $$2 = HEAPU16[77032 + ($$16484 << 2) + ($1 << 1) >> 1] | 0;
   break L1;
  } while (0);
  return (($0 + -66600 + ($1 * 40 | 0) | 0) >>> 0 < 40 ? $0 + -40 + ($1 * 80 | 0) | 0 : $0) | 0;
 } while (0);
 return $$2 | 0;
}

function __ZN6emilib7HashMapIiiN6spring11synced_hashIiEENS_14HashMapEqualToIiEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$016$i = 0, $$05051 = 0, $10 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $43 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0;
 $4 = $1 + 1 + ($1 >>> 1) | 0;
 $5 = $0 + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ($4 >>> 0 > $6 >>> 0) $$0 = 4; else return;
 while (1) if ($$0 >>> 0 < $4 >>> 0) $$0 = $$0 << 1; else break;
 $10 = _malloc($$0) | 0;
 $12 = _malloc($$0 << 3) | 0;
 if (!(($10 | 0) != 0 & ($12 | 0) != 0)) {
  _free($10);
  _free($12);
  $15 = ___cxa_allocate_exception(4) | 0;
  __ZNSt9bad_allocC2Ev($15);
  ___cxa_throw($15 | 0, 1824, 151);
 }
 $16 = $0 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $0 + 8 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = $0 + 16 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$5 >> 2] = $$0;
 $22 = $0 + 24 | 0;
 HEAP32[$22 >> 2] = $$0 + -1;
 HEAP32[$16 >> 2] = $10;
 HEAP32[$18 >> 2] = $12;
 if ($$0 | 0) _memset($10 | 0, 0, $$0 | 0) | 0;
 $24 = $0 + 20 | 0;
 HEAP32[$24 >> 2] = -1;
 if ($6 | 0) {
  $$05051 = 0;
  do {
   if ((HEAP8[$17 + $$05051 >> 0] | 0) == 2) {
    $29 = $19 + ($$05051 << 3) | 0;
    $30 = HEAP32[$29 >> 2] | 0;
    $31 = HEAP32[$22 >> 2] | 0;
    $32 = HEAP32[$16 >> 2] | 0;
    $$016$i = 0;
    while (1) {
     $34 = $$016$i + $30 & $31;
     $35 = $32 + $34 | 0;
     if ((HEAP8[$35 >> 0] | 0) == 2) $$016$i = $$016$i + 1 | 0; else break;
    }
    if (($$016$i | 0) > (HEAP32[$24 >> 2] | 0)) HEAP32[$24 >> 2] = $$016$i;
    HEAP8[$35 >> 0] = 2;
    $43 = $29;
    $48 = HEAP32[$43 + 4 >> 2] | 0;
    $49 = (HEAP32[$18 >> 2] | 0) + ($34 << 3) | 0;
    HEAP32[$49 >> 2] = HEAP32[$43 >> 2];
    HEAP32[$49 + 4 >> 2] = $48;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
   }
   $$05051 = $$05051 + 1 | 0;
  } while (($$05051 | 0) != ($6 | 0));
 }
 _free($17);
 _free($19);
 return;
}

function __Z14luaE_newthreadP9lua_State($0) {
 $0 = $0 | 0;
 var $$cast$i = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $25 = 0, $28 = 0, $29 = 0, $34 = 0, $37 = 0, $5 = 0, $52 = 0, $6 = 0, $8 = 0, $9 = 0;
 $1 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 104) | 0;
 __Z9luaC_linkP9lua_StateP8GCObjecth($0, $1, 8);
 HEAP32[$1 + 16 >> 2] = HEAP32[$0 + 16 >> 2];
 $5 = $1 + 32 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $1 + 44 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$1 + 96 >> 2] = 0;
 $8 = $1 + 68 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 56 | 0;
 HEAP8[$9 >> 0] = 0;
 $10 = $1 + 60 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP8[$1 + 57 >> 0] = 1;
 $12 = $1 + 64 | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$1 + 88 >> 2] = 0;
 $14 = $1 + 48 | 0;
 HEAP8[$1 + 6 >> 0] = 0;
 $16 = $1 + 20 | 0;
 HEAP32[$16 >> 2] = 0;
 $17 = $1 + 40 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$1 + 24 >> 2] = 0;
 HEAP32[$1 + 100 >> 2] = 0;
 $20 = $1 + 76 | 0;
 HEAP32[$20 >> 2] = 0;
 $21 = $14;
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 $25 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 192) | 0;
 HEAP32[$17 >> 2] = $25;
 HEAP32[$16 >> 2] = $25;
 HEAP32[$14 >> 2] = 8;
 HEAP32[$1 + 36 >> 2] = $25 + 168;
 $28 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 360) | 0;
 HEAP32[$5 >> 2] = $28;
 HEAP32[$6 >> 2] = 45;
 $$cast$i = $28;
 $29 = $1 + 8 | 0;
 HEAP32[$29 >> 2] = $$cast$i;
 HEAP32[$1 + 28 >> 2] = $28 + 312;
 HEAP32[(HEAP32[$16 >> 2] | 0) + 4 >> 2] = $$cast$i;
 $34 = HEAP32[$29 >> 2] | 0;
 HEAP32[$29 >> 2] = $34 + 8;
 HEAP32[$34 + 4 >> 2] = 0;
 $37 = HEAP32[$29 >> 2] | 0;
 HEAP32[HEAP32[$16 >> 2] >> 2] = $37;
 HEAP32[$1 + 12 >> 2] = $37;
 HEAP32[(HEAP32[$16 >> 2] | 0) + 8 >> 2] = (HEAP32[$29 >> 2] | 0) + 160;
 HEAP32[$1 + 72 >> 2] = HEAP32[$0 + 72 >> 2];
 HEAP32[$20 >> 2] = HEAP32[$0 + 76 >> 2];
 HEAP8[$9 >> 0] = HEAP8[$0 + 56 >> 0] | 0;
 $52 = HEAP32[$0 + 60 >> 2] | 0;
 HEAP32[$10 >> 2] = $52;
 HEAP32[$8 >> 2] = HEAP32[$0 + 68 >> 2];
 HEAP32[$12 >> 2] = $52;
 return $1 | 0;
}

function __ZN6emilib7HashMapIjPvNSt3__24hashIjEENS_14HashMapEqualToIjEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$016$i = 0, $$05051 = 0, $10 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $43 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0;
 $4 = $1 + 1 + ($1 >>> 1) | 0;
 $5 = $0 + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ($4 >>> 0 > $6 >>> 0) $$0 = 4; else return;
 while (1) if ($$0 >>> 0 < $4 >>> 0) $$0 = $$0 << 1; else break;
 $10 = _malloc($$0) | 0;
 $12 = _malloc($$0 << 3) | 0;
 if (!(($10 | 0) != 0 & ($12 | 0) != 0)) {
  _free($10);
  _free($12);
  $15 = ___cxa_allocate_exception(4) | 0;
  __ZNSt9bad_allocC2Ev($15);
  ___cxa_throw($15 | 0, 1824, 151);
 }
 $16 = $0 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $0 + 8 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = $0 + 16 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$5 >> 2] = $$0;
 $22 = $0 + 24 | 0;
 HEAP32[$22 >> 2] = $$0 + -1;
 HEAP32[$16 >> 2] = $10;
 HEAP32[$18 >> 2] = $12;
 if ($$0 | 0) _memset($10 | 0, 0, $$0 | 0) | 0;
 $24 = $0 + 20 | 0;
 HEAP32[$24 >> 2] = -1;
 if ($6 | 0) {
  $$05051 = 0;
  do {
   if ((HEAP8[$17 + $$05051 >> 0] | 0) == 2) {
    $29 = $19 + ($$05051 << 3) | 0;
    $30 = HEAP32[$29 >> 2] | 0;
    $31 = HEAP32[$22 >> 2] | 0;
    $32 = HEAP32[$16 >> 2] | 0;
    $$016$i = 0;
    while (1) {
     $34 = $$016$i + $30 & $31;
     $35 = $32 + $34 | 0;
     if ((HEAP8[$35 >> 0] | 0) == 2) $$016$i = $$016$i + 1 | 0; else break;
    }
    if (($$016$i | 0) > (HEAP32[$24 >> 2] | 0)) HEAP32[$24 >> 2] = $$016$i;
    HEAP8[$35 >> 0] = 2;
    $43 = $29;
    $48 = HEAP32[$43 + 4 >> 2] | 0;
    $49 = (HEAP32[$18 >> 2] | 0) + ($34 << 3) | 0;
    HEAP32[$49 >> 2] = HEAP32[$43 >> 2];
    HEAP32[$49 + 4 >> 2] = $48;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
   }
   $$05051 = $$05051 + 1 | 0;
  } while (($$05051 | 0) != ($6 | 0));
 }
 _free($17);
 _free($19);
 return;
}

function ___stpcpy($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$029 = 0, $$037 = 0, $$1$ph = 0, $$128$ph = 0, $$12834 = 0, $$135 = 0, $11 = 0, $12 = 0, $16 = 0, $2 = 0, $22 = 0, $23 = 0, $24 = 0, $31 = 0, $34 = 0, $35 = 0, $9 = 0, label = 0;
 $2 = $1;
 L1 : do if (!(($2 ^ $0) & 3)) {
  if (!($2 & 3)) {
   $$026$lcssa = $1;
   $$027$lcssa = $0;
  } else {
   $$02642 = $1;
   $$02741 = $0;
   while (1) {
    $9 = HEAP8[$$02642 >> 0] | 0;
    HEAP8[$$02741 >> 0] = $9;
    if (!($9 << 24 >> 24)) {
     $$029 = $$02741;
     break L1;
    }
    $11 = $$02642 + 1 | 0;
    $12 = $$02741 + 1 | 0;
    if (!($11 & 3)) {
     $$026$lcssa = $11;
     $$027$lcssa = $12;
     break;
    } else {
     $$02642 = $11;
     $$02741 = $12;
    }
   }
  }
  $16 = HEAP32[$$026$lcssa >> 2] | 0;
  if (!(($16 & -2139062144 ^ -2139062144) & $16 + -16843009)) {
   $$02536 = $$027$lcssa;
   $$037 = $$026$lcssa;
   $24 = $16;
   while (1) {
    $22 = $$037 + 4 | 0;
    $23 = $$02536 + 4 | 0;
    HEAP32[$$02536 >> 2] = $24;
    $24 = HEAP32[$22 >> 2] | 0;
    if (($24 & -2139062144 ^ -2139062144) & $24 + -16843009 | 0) {
     $$0$lcssa = $22;
     $$025$lcssa = $23;
     break;
    } else {
     $$02536 = $23;
     $$037 = $22;
    }
   }
  } else {
   $$0$lcssa = $$026$lcssa;
   $$025$lcssa = $$027$lcssa;
  }
  $$1$ph = $$0$lcssa;
  $$128$ph = $$025$lcssa;
  label = 8;
 } else {
  $$1$ph = $1;
  $$128$ph = $0;
  label = 8;
 } while (0);
 if ((label | 0) == 8) {
  $31 = HEAP8[$$1$ph >> 0] | 0;
  HEAP8[$$128$ph >> 0] = $31;
  if (!($31 << 24 >> 24)) $$029 = $$128$ph; else {
   $$12834 = $$128$ph;
   $$135 = $$1$ph;
   while (1) {
    $$135 = $$135 + 1 | 0;
    $34 = $$12834 + 1 | 0;
    $35 = HEAP8[$$135 >> 0] | 0;
    HEAP8[$34 >> 0] = $35;
    if (!($35 << 24 >> 24)) {
     $$029 = $34;
     break;
    } else $$12834 = $34;
   }
  }
 }
 return $$029 | 0;
}

function __ZN6emilib7HashMapIjjNSt3__24hashIjEENS_14HashMapEqualToIjEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$016$i = 0, $$05051 = 0, $10 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $43 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0;
 $4 = $1 + 1 + ($1 >>> 1) | 0;
 $5 = $0 + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ($4 >>> 0 > $6 >>> 0) $$0 = 4; else return;
 while (1) if ($$0 >>> 0 < $4 >>> 0) $$0 = $$0 << 1; else break;
 $10 = _malloc($$0) | 0;
 $12 = _malloc($$0 << 3) | 0;
 if (!(($10 | 0) != 0 & ($12 | 0) != 0)) {
  _free($10);
  _free($12);
  $15 = ___cxa_allocate_exception(4) | 0;
  __ZNSt9bad_allocC2Ev($15);
  ___cxa_throw($15 | 0, 1824, 151);
 }
 $16 = $0 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $0 + 8 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = $0 + 16 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$5 >> 2] = $$0;
 $22 = $0 + 24 | 0;
 HEAP32[$22 >> 2] = $$0 + -1;
 HEAP32[$16 >> 2] = $10;
 HEAP32[$18 >> 2] = $12;
 if ($$0 | 0) _memset($10 | 0, 0, $$0 | 0) | 0;
 $24 = $0 + 20 | 0;
 HEAP32[$24 >> 2] = -1;
 if ($6 | 0) {
  $$05051 = 0;
  do {
   if ((HEAP8[$17 + $$05051 >> 0] | 0) == 2) {
    $29 = $19 + ($$05051 << 3) | 0;
    $30 = HEAP32[$29 >> 2] | 0;
    $31 = HEAP32[$22 >> 2] | 0;
    $32 = HEAP32[$16 >> 2] | 0;
    $$016$i = 0;
    while (1) {
     $34 = $$016$i + $30 & $31;
     $35 = $32 + $34 | 0;
     if ((HEAP8[$35 >> 0] | 0) == 2) $$016$i = $$016$i + 1 | 0; else break;
    }
    if (($$016$i | 0) > (HEAP32[$24 >> 2] | 0)) HEAP32[$24 >> 2] = $$016$i;
    HEAP8[$35 >> 0] = 2;
    $43 = $29;
    $48 = HEAP32[$43 + 4 >> 2] | 0;
    $49 = (HEAP32[$18 >> 2] | 0) + ($34 << 3) | 0;
    HEAP32[$49 >> 2] = HEAP32[$43 >> 2];
    HEAP32[$49 + 4 >> 2] = $48;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
   }
   $$05051 = $$05051 + 1 | 0;
  } while (($$05051 | 0) != ($6 | 0));
 }
 _free($17);
 _free($19);
 return;
}

function __Z10luaD_throwP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $26 = 0, $3 = 0, $38 = 0, $39 = 0, $42 = 0, $49 = 0, $6 = 0;
 $2 = $0 + 96 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($3 | 0) {
  HEAP32[$3 + 8 >> 2] = $1;
  $6 = ___cxa_allocate_exception(4) | 0;
  HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
  ___cxa_throw($6 | 0, 336, 0);
 }
 HEAP8[$0 + 6 >> 0] = $1;
 $10 = $0 + 16 | 0;
 if (!(HEAP32[(HEAP32[$10 >> 2] | 0) + 88 >> 2] | 0)) _exit(1);
 $15 = $0 + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 $17 = $0 + 20 | 0;
 HEAP32[$17 >> 2] = $16;
 $18 = HEAP32[$16 >> 2] | 0;
 $19 = $0 + 12 | 0;
 HEAP32[$19 >> 2] = $18;
 __Z10luaF_closeP9lua_StateP10lua_TValue($0, $18);
 $20 = HEAP32[$19 >> 2] | 0;
 switch ($1 | 0) {
 case 4:
  {
   HEAP32[$20 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 88320, 17) | 0;
   HEAP32[$20 + 4 >> 2] = 4;
   break;
  }
 case 5:
  {
   HEAP32[$20 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 87006, 23) | 0;
   HEAP32[$20 + 4 >> 2] = 4;
   break;
  }
 case 2:
 case 3:
  {
   $26 = HEAP32[$0 + 8 >> 2] | 0;
   HEAP32[$20 >> 2] = HEAP32[$26 + -8 >> 2];
   HEAP32[$20 + 4 >> 2] = HEAP32[$26 + -4 >> 2];
   break;
  }
 default:
  {}
 }
 HEAP32[$0 + 8 >> 2] = $20 + 8;
 HEAP16[$0 + 52 >> 1] = HEAP16[$0 + 54 >> 1] | 0;
 HEAP8[$0 + 57 >> 0] = 1;
 $38 = $0 + 48 | 0;
 $39 = HEAP32[$38 >> 2] | 0;
 if (($39 | 0) > 2e4) {
  $42 = HEAP32[$15 >> 2] | 0;
  if (((((HEAP32[$17 >> 2] | 0) - $42 | 0) / 24 | 0) + 1 | 0) < 2e4) {
   $49 = __Z13luaM_realloc_P9lua_StatePvjj($0, $42, $39 * 24 | 0, 48e4) | 0;
   HEAP32[$15 >> 2] = $49;
   HEAP32[$38 >> 2] = 2e4;
   HEAP32[$17 >> 2] = $49 + ((((HEAP32[$17 >> 2] | 0) - $42 | 0) / 24 | 0) * 24 | 0);
   HEAP32[$0 + 36 >> 2] = $49 + 479976;
  }
 }
 HEAP32[$0 + 100 >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 88 >> 2] & 255]($0) | 0;
 _exit(1);
}

function __Z10lua_insertP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$030 = 0, $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $40 = 0, $41 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $$030$looptemp = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $40 = $0 + 8 | 0;
 $41 = HEAP32[$40 >> 2] | 0;
 if ($41 >>> 0 > $$1$i >>> 0) $$030 = $41; else {
  $50 = $41;
  $49 = HEAP32[$50 >> 2] | 0;
  HEAP32[$$1$i >> 2] = $49;
  $51 = $50 + 4 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  $53 = $$1$i + 4 | 0;
  HEAP32[$53 >> 2] = $52;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 do {
  $$030$looptemp = $$030;
  $$030 = $$030 + -8 | 0;
  HEAP32[$$030$looptemp >> 2] = HEAP32[$$030 >> 2];
  HEAP32[$$030$looptemp + 4 >> 2] = HEAP32[$$030$looptemp + -4 >> 2];
 } while ($$030 >>> 0 > $$1$i >>> 0);
 $50 = HEAP32[$40 >> 2] | 0;
 $49 = HEAP32[$50 >> 2] | 0;
 HEAP32[$$1$i >> 2] = $49;
 $51 = $50 + 4 | 0;
 $52 = HEAP32[$51 >> 2] | 0;
 $53 = $$1$i + 4 | 0;
 HEAP32[$53 >> 2] = $52;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZNK6google12_GLOBAL__N_19FlagValue3NewEv($$0$1$val) {
 $$0$1$val = $$0$1$val | 0;
 var $$04 = 0, $1 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $5 = 0, $6 = 0, $9 = 0;
 switch ($$0$1$val << 24 >> 24 | 0) {
 case 0:
  {
   $1 = __Znwj(8) | 0;
   $2 = __Znwj(1) | 0;
   HEAP8[$2 >> 0] = 0;
   HEAP32[$1 >> 2] = $2;
   HEAP8[$1 + 4 >> 0] = 0;
   HEAP8[$1 + 5 >> 0] = 1;
   $$04 = $1;
   return $$04 | 0;
  }
 case 1:
  {
   $5 = __Znwj(8) | 0;
   $6 = __Znwj(4) | 0;
   HEAP32[$6 >> 2] = 0;
   HEAP32[$5 >> 2] = $6;
   HEAP8[$5 + 4 >> 0] = 1;
   HEAP8[$5 + 5 >> 0] = 1;
   $$04 = $5;
   return $$04 | 0;
  }
 case 2:
  {
   $9 = __Znwj(8) | 0;
   $10 = __Znwj(4) | 0;
   HEAP32[$10 >> 2] = 0;
   HEAP32[$9 >> 2] = $10;
   HEAP8[$9 + 4 >> 0] = 2;
   HEAP8[$9 + 5 >> 0] = 1;
   $$04 = $9;
   return $$04 | 0;
  }
 case 3:
  {
   $13 = __Znwj(8) | 0;
   $14 = __Znwj(8) | 0;
   $15 = $14;
   HEAP32[$15 >> 2] = 0;
   HEAP32[$15 + 4 >> 2] = 0;
   HEAP32[$13 >> 2] = $14;
   HEAP8[$13 + 4 >> 0] = 3;
   HEAP8[$13 + 5 >> 0] = 1;
   $$04 = $13;
   return $$04 | 0;
  }
 case 4:
  {
   $21 = __Znwj(8) | 0;
   $22 = __Znwj(8) | 0;
   $23 = $22;
   HEAP32[$23 >> 2] = 0;
   HEAP32[$23 + 4 >> 2] = 0;
   HEAP32[$21 >> 2] = $22;
   HEAP8[$21 + 4 >> 0] = 4;
   HEAP8[$21 + 5 >> 0] = 1;
   $$04 = $21;
   return $$04 | 0;
  }
 case 5:
  {
   $29 = __Znwj(8) | 0;
   $30 = __Znwj(8) | 0;
   HEAPF64[$30 >> 3] = 0.0;
   HEAP32[$29 >> 2] = $30;
   HEAP8[$29 + 4 >> 0] = 5;
   HEAP8[$29 + 5 >> 0] = 1;
   $$04 = $29;
   return $$04 | 0;
  }
 case 6:
  {
   $33 = __Znwj(8) | 0;
   $34 = __Znwj(12) | 0;
   HEAP32[$34 >> 2] = 0;
   HEAP32[$34 + 4 >> 2] = 0;
   HEAP32[$34 + 8 >> 2] = 0;
   HEAP32[$33 >> 2] = $34;
   HEAP8[$33 + 4 >> 0] = 6;
   HEAP8[$33 + 5 >> 0] = 1;
   $$04 = $33;
   return $$04 | 0;
  }
 default:
  {
   $$04 = 0;
   return $$04 | 0;
  }
 }
 return 0;
}

function _log_backend_unregisterCleanup($0) {
 $0 = $0 | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph12$i$i$i$i = 0, $$05$i$i$i$i$i = 0, $$07$ph11$i$i$i$i = 0, $$079$i$i$i$i = 0, $13 = 0, $20 = 0, $22 = 0, $25 = 0, $5 = 0;
 if (!(HEAP8[106120] | 0)) if (___cxa_guard_acquire(106120) | 0) {
  HEAP32[26737] = 0;
  HEAP32[26738] = 0;
  HEAP32[26736] = 106948;
  ___cxa_atexit(160, 106944, ___dso_handle | 0) | 0;
 }
 $5 = HEAP32[26737] | 0;
 if (!$5) return; else {
  $$0$ph12$i$i$i$i = 106948;
  $$07$ph11$i$i$i$i = $5;
 }
 L7 : while (1) {
  $$079$i$i$i$i = $$07$ph11$i$i$i$i;
  while (1) {
   if ((HEAP32[$$079$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $0 >>> 0) break;
   $13 = HEAP32[$$079$i$i$i$i + 4 >> 2] | 0;
   if (!$13) {
    $$0$ph$lcssa$i$i$i$i = $$0$ph12$i$i$i$i;
    break L7;
   } else $$079$i$i$i$i = $13;
  }
  $$07$ph11$i$i$i$i = HEAP32[$$079$i$i$i$i >> 2] | 0;
  if (!$$07$ph11$i$i$i$i) {
   $$0$ph$lcssa$i$i$i$i = $$079$i$i$i$i;
   break;
  } else $$0$ph12$i$i$i$i = $$079$i$i$i$i;
 }
 if (($$0$ph$lcssa$i$i$i$i | 0) == 106948) return;
 if ((HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0 > $0 >>> 0) return;
 $20 = HEAP32[$$0$ph$lcssa$i$i$i$i + 4 >> 2] | 0;
 if (!$20) {
  $$0$i$i$i$i$i = $$0$ph$lcssa$i$i$i$i;
  while (1) {
   $25 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
   if ((HEAP32[$25 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
    $$05$i$i$i$i$i = $25;
    break;
   } else $$0$i$i$i$i$i = $25;
  }
 } else {
  $$0$i$i$i$i$i$i = $20;
  while (1) {
   $22 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
   if (!$22) {
    $$05$i$i$i$i$i = $$0$i$i$i$i$i$i;
    break;
   } else $$0$i$i$i$i$i$i = $22;
  }
 }
 if ((HEAP32[26736] | 0) == ($$0$ph$lcssa$i$i$i$i | 0)) HEAP32[26736] = $$05$i$i$i$i$i;
 HEAP32[26738] = (HEAP32[26738] | 0) + -1;
 __ZNSt3__213__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($5, $$0$ph$lcssa$i$i$i$i);
 __ZdlPv($$0$ph$lcssa$i$i$i$i);
 return;
}

function _log_backend_unregisterSink($0) {
 $0 = $0 | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph12$i$i$i$i = 0, $$05$i$i$i$i$i = 0, $$07$ph11$i$i$i$i = 0, $$079$i$i$i$i = 0, $13 = 0, $20 = 0, $22 = 0, $25 = 0, $5 = 0;
 if (!(HEAP8[106112] | 0)) if (___cxa_guard_acquire(106112) | 0) {
  HEAP32[26740] = 0;
  HEAP32[26741] = 0;
  HEAP32[26739] = 106960;
  ___cxa_atexit(159, 106956, ___dso_handle | 0) | 0;
 }
 $5 = HEAP32[26740] | 0;
 if (!$5) return; else {
  $$0$ph12$i$i$i$i = 106960;
  $$07$ph11$i$i$i$i = $5;
 }
 L7 : while (1) {
  $$079$i$i$i$i = $$07$ph11$i$i$i$i;
  while (1) {
   if ((HEAP32[$$079$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $0 >>> 0) break;
   $13 = HEAP32[$$079$i$i$i$i + 4 >> 2] | 0;
   if (!$13) {
    $$0$ph$lcssa$i$i$i$i = $$0$ph12$i$i$i$i;
    break L7;
   } else $$079$i$i$i$i = $13;
  }
  $$07$ph11$i$i$i$i = HEAP32[$$079$i$i$i$i >> 2] | 0;
  if (!$$07$ph11$i$i$i$i) {
   $$0$ph$lcssa$i$i$i$i = $$079$i$i$i$i;
   break;
  } else $$0$ph12$i$i$i$i = $$079$i$i$i$i;
 }
 if (($$0$ph$lcssa$i$i$i$i | 0) == 106960) return;
 if ((HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0 > $0 >>> 0) return;
 $20 = HEAP32[$$0$ph$lcssa$i$i$i$i + 4 >> 2] | 0;
 if (!$20) {
  $$0$i$i$i$i$i = $$0$ph$lcssa$i$i$i$i;
  while (1) {
   $25 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
   if ((HEAP32[$25 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
    $$05$i$i$i$i$i = $25;
    break;
   } else $$0$i$i$i$i$i = $25;
  }
 } else {
  $$0$i$i$i$i$i$i = $20;
  while (1) {
   $22 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
   if (!$22) {
    $$05$i$i$i$i$i = $$0$i$i$i$i$i$i;
    break;
   } else $$0$i$i$i$i$i$i = $22;
  }
 }
 if ((HEAP32[26739] | 0) == ($$0$ph$lcssa$i$i$i$i | 0)) HEAP32[26739] = $$05$i$i$i$i$i;
 HEAP32[26741] = (HEAP32[26741] | 0) + -1;
 __ZNSt3__213__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($5, $$0$ph$lcssa$i$i$i$i);
 __ZdlPv($$0$ph$lcssa$i$i$i$i);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$037$off039 = 0, $11 = 0, $19 = 0, $25 = 0, $28 = 0, $29 = 0, $31 = 0, $38 = 0, $48 = 0, $50 = 0, label = 0;
 do if (($0 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) {
  if ((HEAP32[$1 + 4 >> 2] | 0) == ($2 | 0)) {
   $11 = $1 + 28 | 0;
   if ((HEAP32[$11 >> 2] | 0) != 1) HEAP32[$11 >> 2] = $3;
  }
 } else {
  if (($0 | 0) != (HEAP32[$1 >> 2] | 0)) {
   $50 = HEAP32[$0 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$50 >> 2] | 0) + 24 >> 2] & 3]($50, $1, $2, $3, $4);
   break;
  }
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $19 = $1 + 20 | 0;
   if ((HEAP32[$19 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$1 + 32 >> 2] = $3;
    $25 = $1 + 44 | 0;
    if ((HEAP32[$25 >> 2] | 0) == 4) break;
    $28 = $1 + 52 | 0;
    HEAP8[$28 >> 0] = 0;
    $29 = $1 + 53 | 0;
    HEAP8[$29 >> 0] = 0;
    $31 = HEAP32[$0 + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$31 >> 2] | 0) + 20 >> 2] & 15]($31, $1, $2, $2, 1, $4);
    if (!(HEAP8[$29 >> 0] | 0)) {
     $$037$off039 = 0;
     label = 13;
    } else if (!(HEAP8[$28 >> 0] | 0)) {
     $$037$off039 = 1;
     label = 13;
    } else label = 17;
    do if ((label | 0) == 13) {
     HEAP32[$19 >> 2] = $2;
     $38 = $1 + 40 | 0;
     HEAP32[$38 >> 2] = (HEAP32[$38 >> 2] | 0) + 1;
     if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$1 + 24 >> 2] | 0) == 2) {
      HEAP8[$1 + 54 >> 0] = 1;
      if ($$037$off039) {
       label = 17;
       break;
      } else {
       $48 = 4;
       break;
      }
     }
     if ($$037$off039) label = 17; else $48 = 4;
    } while (0);
    if ((label | 0) == 17) $48 = 3;
    HEAP32[$25 >> 2] = $48;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN5LuaIO12IsSimplePathERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$026$i$i$i = 0, $$sroa$0$0$i$i = 0, $$sroa$033$044$i$i$i = 0, $$sroa$033$142$i$i$i = 0, $10 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $22 = 0, $24 = 0, $3 = 0, $33 = 0, $39 = 0, $5 = 0;
 $2 = HEAP8[$0 + 11 >> 0] | 0;
 $3 = $2 << 24 >> 24 < 0;
 $5 = $3 ? HEAP32[$0 >> 2] | 0 : $0;
 switch (HEAP8[$5 >> 0] | 0) {
 case 92:
 case 47:
  {
   $$0 = 0;
   return $$0 | 0;
  }
 default:
  {}
 }
 $10 = $3 ? HEAP32[$0 + 4 >> 2] | 0 : $2 & 255;
 if ($10 >>> 0 <= 1) {
  $$0 = 1;
  return $$0 | 0;
 }
 if ((HEAP8[$5 + 1 >> 0] | 0) == 58) {
  $$0 = 0;
  return $$0 | 0;
 }
 $15 = $5 + $10 | 0;
 $16 = $5;
 $17 = $15;
 L10 : do if (($10 | 0) < 2) $$sroa$0$0$i$i = $17; else {
  $19 = $15 + -1 | 0;
  if (($19 | 0) == ($5 | 0)) $$sroa$0$0$i$i = $17; else {
   $$sroa$033$044$i$i$i = $16;
   $39 = $5;
   while (1) {
    $$sroa$033$142$i$i$i = $$sroa$033$044$i$i$i;
    $22 = $39;
    while (1) {
     if ((HEAP8[$22 >> 0] | 0) == 46) {
      $$0$i$i$i = 89897;
      $$026$i$i$i = $22;
      break;
     }
     $24 = $22 + 1 | 0;
     if (($24 | 0) == ($19 | 0)) {
      $$sroa$0$0$i$i = $17;
      break L10;
     } else {
      $$sroa$033$142$i$i$i = $24;
      $22 = $24;
     }
    }
    do {
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
     if (($$0$i$i$i | 0) == 89899) {
      $$sroa$0$0$i$i = $$sroa$033$142$i$i$i;
      break L10;
     }
     $$026$i$i$i = $$026$i$i$i + 1 | 0;
    } while ((HEAP8[$$026$i$i$i >> 0] | 0) == (HEAP8[$$0$i$i$i >> 0] | 0));
    $33 = $22 + 1 | 0;
    if (($33 | 0) == ($19 | 0)) {
     $$sroa$0$0$i$i = $17;
     break;
    } else {
     $$sroa$033$044$i$i$i = $33;
     $39 = $33;
    }
   }
  }
 } while (0);
 $$0 = ($$sroa$0$0$i$i | 0) == ($15 | 0) | ($$sroa$0$0$i$i - $16 | 0) == -1;
 return $$0 | 0;
}

function __Z11luaU_undumpP9lua_StateP3ZioP7MbufferPKc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $17 = 0, $21 = 0, $25 = 0, $29 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $4 = sp + 32 | 0;
 $5 = sp + 44 | 0;
 $6 = sp + 16 | 0;
 switch (HEAP8[$3 >> 0] | 0) {
 case 61:
 case 64:
  {
   $8 = $3 + 1 | 0;
   HEAP32[$6 + 12 >> 2] = $8;
   $21 = $8;
   break;
  }
 case 27:
  {
   HEAP32[$6 + 12 >> 2] = 89383;
   $21 = 89383;
   break;
  }
 default:
  {
   HEAP32[$6 + 12 >> 2] = $3;
   $21 = $3;
  }
 }
 HEAP32[$6 >> 2] = $0;
 HEAP32[$6 + 4 >> 2] = $1;
 HEAP32[$6 + 8 >> 2] = $2;
 HEAP32[$4 >> 2] = 1635077147;
 HEAP8[$4 + 4 >> 0] = 81;
 HEAP8[$4 + 5 >> 0] = 0;
 $17 = $4 + 7 | 0;
 HEAP8[$4 + 6 >> 0] = 1;
 HEAP8[$17 >> 0] = 4;
 HEAP8[$17 + 1 >> 0] = 4;
 HEAP8[$17 + 2 >> 0] = 4;
 HEAP8[$17 + 3 >> 0] = 4;
 HEAP8[$4 + 11 >> 0] = 0;
 if (__Z9luaZ_readP3ZioPvj($1, $5, 12) | 0) {
  HEAP32[$vararg_buffer >> 2] = $21;
  HEAP32[$vararg_buffer + 4 >> 2] = 89397;
  __Z16luaO_pushfstringP9lua_StatePKcz($0, 89412, $vararg_buffer) | 0;
  __Z10luaD_throwP9lua_Statei(HEAP32[$6 >> 2] | 0, 3);
 }
 if (!(_memcmp($4, $5, 12) | 0)) {
  $29 = __Z12luaS_newlstrP9lua_StatePKcj($0, 89451, 2) | 0;
  $30 = __ZL12LoadFunctionP9LoadStateP7TString($6, $29) | 0;
  STACKTOP = sp;
  return $30 | 0;
 }
 $25 = HEAP32[$6 >> 2] | 0;
 HEAP32[$vararg_buffer2 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$vararg_buffer2 + 4 >> 2] = 89440;
 __Z16luaO_pushfstringP9lua_StatePKcz($25, 89412, $vararg_buffer2) | 0;
 __Z10luaD_throwP9lua_Statei(HEAP32[$6 >> 2] | 0, 3);
 $29 = __Z12luaS_newlstrP9lua_StatePKcj($0, 89451, 2) | 0;
 $30 = __ZL12LoadFunctionP9LoadStateP7TString($6, $29) | 0;
 STACKTOP = sp;
 return $30 | 0;
}

function __Z10lua_removeP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$ph = 0, $$018 = 0, $$018$phi = 0, $$lcssa = 0, $22 = 0, $31 = 0, $32 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $49 = 0, $50 = 0, $52 = 0, $6 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$0$ph = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$0$ph = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$0$ph = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$0$ph = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$0$ph = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$0$ph = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $40 = $$0$ph + 8 | 0;
 $41 = $0 + 8 | 0;
 $42 = HEAP32[$41 >> 2] | 0;
 if ($40 >>> 0 < $42 >>> 0) {
  $$018 = $$0$ph;
  $45 = $40;
 } else {
  $$lcssa = $42;
  $52 = $$lcssa + -8 | 0;
  HEAP32[$41 >> 2] = $52;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 while (1) {
  HEAP32[$$018 >> 2] = HEAP32[$45 >> 2];
  HEAP32[$$018 + 4 >> 2] = HEAP32[$$018 + 12 >> 2];
  $49 = $45 + 8 | 0;
  $50 = HEAP32[$41 >> 2] | 0;
  if ($49 >>> 0 < $50 >>> 0) {
   $$018$phi = $45;
   $45 = $49;
   $$018 = $$018$phi;
  } else {
   $$lcssa = $50;
   break;
  }
 }
 $52 = $$lcssa + -8 | 0;
 HEAP32[$41 >> 2] = $52;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE6insertENSD_14const_iteratorESE_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $21 = 0, $23 = 0, $27 = 0, $3 = 0, $32 = 0, $33 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0;
 $3 = $1 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$2 + 4 >> 2] | 0;
 if (($4 | 0) == ($6 | 0)) return;
 $8 = HEAP32[$1 >> 2] | 0;
 $9 = $8 + 8 | 0;
 $10 = $0 + 16 | 0;
 $11 = $0 + 4 | 0;
 $12 = $8 + 4 | 0;
 $13 = $8 + 12 | 0;
 $14 = $0 + 8 | 0;
 $$pre$i$i = $4;
 while (1) {
  $17 = HEAP32[$9 >> 2] | 0;
  $18 = $17 + ($$pre$i$i * 24 | 0) | 0;
  __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($0, (HEAP32[$10 >> 2] | 0) + 1 | 0);
  $21 = __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE16find_or_allocateERKS7_($0, $18) | 0;
  $23 = (HEAP32[$11 >> 2] | 0) + $21 | 0;
  if ((HEAP8[$23 >> 0] | 0) != 2) {
   HEAP8[$23 >> 0] = 2;
   $27 = HEAP32[$14 >> 2] | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($27 + ($21 * 24 | 0) | 0, $18);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($27 + ($21 * 24 | 0) + 12 | 0, $17 + ($$pre$i$i * 24 | 0) + 12 | 0);
   HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
  }
  $32 = HEAP32[$13 >> 2] | 0;
  $33 = $$pre$i$i;
  do {
   $33 = $33 + 1 | 0;
   if ($33 >>> 0 >= $32 >>> 0) break;
  } while ((HEAP8[(HEAP32[$12 >> 2] | 0) + $33 >> 0] | 0) != 2);
  HEAP32[$3 >> 2] = $33;
  if (($33 | 0) == ($6 | 0)) break; else $$pre$i$i = $33;
 }
 return;
}

function __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEEbEERKT_DpOT0_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$019 = 0, $10 = 0, $13 = 0, $14 = 0, $18 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 $7 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_($1, $6, $2) | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($8 | 0) {
  $$0 = $8;
  $$019 = 0;
  $27 = $$0;
  HEAP32[$0 >> 2] = $27;
  $28 = $0 + 4 | 0;
  HEAP8[$28 >> 0] = $$019;
  STACKTOP = sp;
  return;
 }
 $10 = __Znwj(40) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($10 + 16 | 0, HEAP32[$4 >> 2] | 0);
 $13 = $10 + 28 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $14 = HEAP32[$6 >> 2] | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = $14;
 HEAP32[$7 >> 2] = $10;
 $18 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
 if (!$18) $23 = $10; else {
  HEAP32[$1 >> 2] = $18;
  $23 = HEAP32[$7 >> 2] | 0;
 }
 __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 + 4 >> 2] | 0, $23);
 $24 = $1 + 8 | 0;
 HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 1;
 $$0 = $10;
 $$019 = 1;
 $27 = $$0;
 HEAP32[$0 >> 2] = $27;
 $28 = $0 + 4 | 0;
 HEAP8[$28 >> 0] = $$019;
 STACKTOP = sp;
 return;
}

function __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$038 = 0, $$sroa$0$2 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $38 = 0, $39 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 $7 = HEAP32[$0 >> 2] | 0;
 L1 : do if (!$7) $$sroa$0$2 = 0; else {
  $9 = $3;
  $10 = $1;
  $12 = $9 - $10 >> 2;
  $13 = $4 + 12 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  $$038 = ($14 | 0) > ($12 | 0) ? $14 - $12 | 0 : 0;
  $17 = $2;
  $18 = $17 - $10 | 0;
  $19 = $18 >> 2;
  if (($18 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $1, $19) | 0) != ($19 | 0)) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  do if (($$038 | 0) > 0) {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($6, $$038, $5);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, (HEAP8[$6 + 8 + 3 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6, $$038) | 0) == ($$038 | 0)) {
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
    break;
   } else {
    HEAP32[$0 >> 2] = 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
    $$sroa$0$2 = 0;
    break L1;
   }
  } while (0);
  $38 = $9 - $17 | 0;
  $39 = $38 >> 2;
  if (($38 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $2, $39) | 0) != ($39 | 0)) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  HEAP32[$13 >> 2] = 0;
  $$sroa$0$2 = $7;
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$2 | 0;
}

function __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$sroa$0$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $35 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 $7 = HEAP32[$0 >> 2] | 0;
 if (!$7) {
  $$sroa$0$2 = 0;
  STACKTOP = sp;
  return $$sroa$0$2 | 0;
 }
 $9 = $3;
 $10 = $1;
 $11 = $9 - $10 | 0;
 $12 = $4 + 12 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 $$0 = ($13 | 0) > ($11 | 0) ? $13 - $11 | 0 : 0;
 $16 = $2;
 $17 = $16 - $10 | 0;
 if (($17 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $1, $17) | 0) != ($17 | 0)) {
  HEAP32[$0 >> 2] = 0;
  $$sroa$0$2 = 0;
  STACKTOP = sp;
  return $$sroa$0$2 | 0;
 }
 do if (($$0 | 0) > 0) {
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($6, $$0, $5);
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, (HEAP8[$6 + 11 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6, $$0) | 0) == ($$0 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   break;
  }
  HEAP32[$0 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $$sroa$0$2 = 0;
  STACKTOP = sp;
  return $$sroa$0$2 | 0;
 } while (0);
 $35 = $9 - $16 | 0;
 if (($35 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $2, $35) | 0) != ($35 | 0)) {
  HEAP32[$0 >> 2] = 0;
  $$sroa$0$2 = 0;
  STACKTOP = sp;
  return $$sroa$0$2 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 $$sroa$0$2 = $7;
 STACKTOP = sp;
 return $$sroa$0$2 | 0;
}

function __GLOBAL__sub_I_gflags_reporting_cc() {
 var $0 = 0, $2 = 0;
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112148, 91615, 91620, 91680, 112129, 112130);
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112147, 91747, 91756, 91680, 112131, 112132);
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112146, 91796, 91806, 91680, 112133, 112134);
 HEAP32[27115] = 0;
 HEAP32[27116] = 0;
 HEAP32[27117] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(108460, 114224, 0);
 HEAP32[27126] = 108460;
 $0 = HEAP32[27126] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(108472, $0);
 __ZN6google14FlagRegistererC2INSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEPKcSA_SA_PT_SC_(112145, 91857, 91864, 91680, $0, 108472);
 HEAP32[27124] = 108460;
 HEAP32[27125] = 108472;
 ___cxa_atexit(173, 108496, ___dso_handle | 0) | 0;
 HEAP32[27107] = HEAP32[27126];
 HEAP32[27109] = 0;
 HEAP32[27110] = 0;
 HEAP32[27111] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(108436, 114224, 0);
 HEAP32[27123] = 108436;
 $2 = HEAP32[27123] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(108448, $2);
 __ZN6google14FlagRegistererC2INSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEPKcSA_SA_PT_SC_(112144, 91914, 91924, 91680, $2, 108448);
 HEAP32[27121] = 108436;
 HEAP32[27122] = 108448;
 ___cxa_atexit(173, 108484, ___dso_handle | 0) | 0;
 HEAP32[27108] = HEAP32[27123];
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112143, 91986, 91998, 91680, 112135, 112136);
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112142, 92043, 92051, 91680, 112137, 112138);
 __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_(112141, 92082, 92090, 91680, 112139, 112140);
 return;
}

function __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$byval_copy = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $38 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $3 = sp;
 $4 = sp + 8 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (!(HEAP8[$3 >> 0] | 0)) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
  STACKTOP = sp;
  return $0 | 0;
 }
 $8 = (HEAP32[$0 >> 2] | 0) + -12 | 0;
 HEAP32[$4 >> 2] = HEAP32[$0 + (HEAP32[$8 >> 2] | 0) + 24 >> 2];
 $14 = $0 + (HEAP32[$8 >> 2] | 0) | 0;
 $16 = HEAP32[$14 + 4 >> 2] | 0;
 $17 = $1 + $2 | 0;
 $18 = $14 + 76 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (($19 | 0) == -1) {
  HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($14) | 0;
  $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110168) | 0;
  $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 31]($22, 32) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $27 = $26 << 24 >> 24;
  HEAP32[$18 >> 2] = $27;
  $29 = $27;
 } else $29 = $19;
 HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
 if (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $1, ($16 & 176 | 0) == 32 ? $17 : $1, $17, $14, $29 & 255) | 0) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
  STACKTOP = sp;
  return $0 | 0;
 }
 $38 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 __ZNSt3__28ios_base5clearEj($38, HEAP32[$38 + 16 >> 2] | 5);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $32 = 0, $34 = 0, $35 = 0, $40 = 0, $46 = 0, $5 = 0, $7 = 0, $8 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 255]($0) | 0;
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 111960) | 0;
 HEAP32[$0 + 68 >> 2] = $5;
 $7 = $0 + 98 | 0;
 $8 = HEAP8[$7 >> 0] | 0;
 $12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 255]($5) | 0;
 HEAP8[$7 >> 0] = $12 & 1;
 if (($8 & 255 | 0) == ($12 & 1 | 0)) return;
 $17 = $0 + 8 | 0;
 $18 = $0 + 96 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$17 + 16 >> 2] = 0;
 HEAP32[$17 + 20 >> 2] = 0;
 $19 = HEAP16[$18 >> 1] | 0;
 $21 = ($19 & 255) << 24 >> 24 != 0;
 $23 = ($19 & 65535) >>> 8 & 255;
 if ($12) {
  $24 = $0 + 32 | 0;
  if ($21) {
   $25 = HEAP32[$24 >> 2] | 0;
   if (!$25) $28 = $23; else {
    __ZdaPv($25);
    $28 = HEAP8[$0 + 97 >> 0] | 0;
   }
  } else $28 = $23;
  HEAP8[$18 >> 0] = $28;
  $29 = $0 + 60 | 0;
  HEAP32[$0 + 52 >> 2] = HEAP32[$29 >> 2];
  $32 = $0 + 56 | 0;
  HEAP32[$24 >> 2] = HEAP32[$32 >> 2];
  HEAP32[$29 >> 2] = 0;
  HEAP32[$32 >> 2] = 0;
  HEAP8[$0 + 97 >> 0] = 0;
  return;
 }
 if (!$21) {
  $34 = $0 + 32 | 0;
  $35 = HEAP32[$34 >> 2] | 0;
  if (($35 | 0) != ($0 + 44 | 0)) {
   $40 = HEAP32[$0 + 52 >> 2] | 0;
   HEAP32[$0 + 60 >> 2] = $40;
   HEAP32[$0 + 56 >> 2] = $35;
   HEAP8[$0 + 97 >> 0] = 0;
   HEAP32[$34 >> 2] = __Znaj($40) | 0;
   HEAP8[$18 >> 0] = 1;
   return;
  }
 }
 $46 = HEAP32[$0 + 52 >> 2] | 0;
 HEAP32[$0 + 60 >> 2] = $46;
 HEAP32[$0 + 56 >> 2] = __Znaj($46) | 0;
 HEAP8[$0 + 97 >> 0] = 1;
 return;
}

function __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEENS_21__tree_const_iteratorIS8_SP_iEERKT_DpOT0_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $14 = 0, $18 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
 $7 = __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($0, $$byval_copy, $4, $2) | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($8 | 0) {
  $$0 = $8;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $10 = __Znwj(40) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($10 + 16 | 0, $3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($10 + 28 | 0, $3 + 12 | 0);
 $14 = HEAP32[$4 >> 2] | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = $14;
 HEAP32[$7 >> 2] = $10;
 $18 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
 if (!$18) $23 = $10; else {
  HEAP32[$0 >> 2] = $18;
  $23 = HEAP32[$7 >> 2] | 0;
 }
 __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 + 4 >> 2] | 0, $23);
 $24 = $0 + 8 | 0;
 HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 1;
 $$0 = $10;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK6spring11synced_hashINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEclERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$03$i = 0, $$052$lcssa$i = 0, $$0522$i = 0, $$053$lcssa$i = 0, $$0531$i = 0, $$1$i = 0, $10 = 0, $11 = 0, $15 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0;
 $3 = HEAP8[$1 + 11 >> 0] | 0;
 $4 = $3 << 24 >> 24 < 0;
 $6 = $4 ? HEAP32[$1 >> 2] | 0 : $1;
 $10 = $4 ? HEAP32[$1 + 4 >> 2] | 0 : $3 & 255;
 $11 = $10 >> 2;
 if (($11 | 0) > 0) {
  $$03$i = $11;
  $$0522$i = 0;
  $$0531$i = $6;
  while (1) {
   $15 = (HEAPU16[$$0531$i >> 1] | 0) + $$0522$i | 0;
   $22 = (HEAPU16[$$0531$i + 2 >> 1] | 0) << 11 ^ $15 ^ $15 << 16;
   $24 = ($22 >>> 11) + $22 | 0;
   $25 = $$0531$i + 4 | 0;
   if (($$03$i | 0) > 1) {
    $$03$i = $$03$i + -1 | 0;
    $$0522$i = $24;
    $$0531$i = $25;
   } else {
    $$052$lcssa$i = $24;
    $$053$lcssa$i = $25;
    break;
   }
  }
 } else {
  $$052$lcssa$i = 0;
  $$053$lcssa$i = $6;
 }
 switch ($10 & 3) {
 case 3:
  {
   $30 = (HEAPU16[$$053$lcssa$i >> 1] | 0) + $$052$lcssa$i | 0;
   $37 = $30 << 16 ^ $30 ^ (HEAPU8[$$053$lcssa$i + 2 >> 0] | 0) << 18;
   $$1$i = ($37 >>> 11) + $37 | 0;
   break;
  }
 case 2:
  {
   $42 = (HEAPU16[$$053$lcssa$i >> 1] | 0) + $$052$lcssa$i | 0;
   $44 = $42 << 11 ^ $42;
   $$1$i = ($44 >>> 17) + $44 | 0;
   break;
  }
 case 1:
  {
   $49 = (HEAPU8[$$053$lcssa$i >> 0] | 0) + $$052$lcssa$i | 0;
   $51 = $49 << 10 ^ $49;
   $$1$i = ($51 >>> 1) + $51 | 0;
   break;
  }
 default:
  $$1$i = $$052$lcssa$i;
 }
 $55 = $$1$i << 3 ^ $$1$i;
 $57 = ($55 >>> 5) + $55 | 0;
 $59 = $57 << 4 ^ $57;
 $61 = ($59 >>> 17) + $59 | 0;
 $63 = $61 << 25 ^ $61;
 return ($63 >>> 6) + $63 | 0;
}

function __ZN14SkirmishAIDataD2Ev($0) {
 $0 = $0 | 0;
 var $$05$i = 0, $$lcssa$i = 0, $$pre8$i = 0, $1 = 0, $10 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 68132;
 $1 = $0 + 76 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = $0 + 68 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $$pre8$i = $0 + 72 | 0;
 if (!$2) $$lcssa$i = $5; else {
  $$05$i = 0;
  $31 = $2;
  $7 = $5;
  while (1) {
   if ((HEAP8[$7 + $$05$i >> 0] | 0) == 2) {
    $10 = HEAP32[$$pre8$i >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10 + ($$05$i * 24 | 0) + 12 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10 + ($$05$i * 24 | 0) | 0);
    $15 = HEAP32[$1 >> 2] | 0;
    $32 = HEAP32[$4 >> 2] | 0;
   } else {
    $15 = $31;
    $32 = $7;
   }
   $$05$i = $$05$i + 1 | 0;
   if ($$05$i >>> 0 >= $15 >>> 0) {
    $$lcssa$i = $32;
    break;
   } else {
    $31 = $15;
    $7 = $32;
   }
  }
 }
 _free($$lcssa$i);
 _free(HEAP32[$$pre8$i >> 2] | 0);
 $17 = $0 + 52 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if ($18 | 0) {
  $20 = $0 + 56 | 0;
  $21 = HEAP32[$20 >> 2] | 0;
  if (($21 | 0) == ($18 | 0)) $27 = $18; else {
   $24 = $21;
   do {
    $23 = $24 + -12 | 0;
    HEAP32[$20 >> 2] = $23;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
    $24 = HEAP32[$20 >> 2] | 0;
   } while (($24 | 0) != ($18 | 0));
   $27 = HEAP32[$17 >> 2] | 0;
  }
  __ZdlPv($27);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 40 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 28 | 0);
 HEAP32[$0 >> 2] = 68116;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 8 | 0);
 return;
}

function __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $21 = 0, $22 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $40 = 0, $45 = 0, $54 = 0, $68 = 0;
 switch (HEAP32[$1 >> 2] | 0) {
 case 6:
  {
   HEAP32[$1 >> 2] = 12;
   return;
  }
 case 7:
  {
   $3 = $1 + 4 | 0;
   HEAP32[$3 >> 2] = __ZL9luaK_codeP9FuncStateji($0, HEAP32[$3 >> 2] << 23 | 4, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = 11;
   return;
  }
 case 8:
  {
   $12 = $1 + 4 | 0;
   HEAP32[$12 >> 2] = __ZL9luaK_codeP9FuncStateji($0, HEAP32[$12 >> 2] << 14 | 5, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = 11;
   return;
  }
 case 9:
  {
   $21 = $1 + 8 | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   if (!($22 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($22 | 0)) {
    $29 = $0 + 36 | 0;
    HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + -1;
   }
   $32 = $1 + 4 | 0;
   $33 = HEAP32[$32 >> 2] | 0;
   if (!($33 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) > ($33 | 0)) $45 = $33; else {
    $40 = $0 + 36 | 0;
    HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + -1;
    $45 = HEAP32[$32 >> 2] | 0;
   } else $45 = $33;
   HEAP32[$32 >> 2] = __ZL9luaK_codeP9FuncStateji($0, $45 << 23 | HEAP32[$21 >> 2] << 14 | 6, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = 11;
   return;
  }
 case 13:
  {
   HEAP32[$1 >> 2] = 12;
   $54 = $1 + 4 | 0;
   HEAP32[$54 >> 2] = (HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$54 >> 2] << 2) >> 2] | 0) >>> 6 & 255;
   return;
  }
 case 14:
  {
   $68 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$1 + 4 >> 2] << 2) | 0;
   HEAP32[$68 >> 2] = HEAP32[$68 >> 2] & 8388607 | 16777216;
   HEAP32[$1 >> 2] = 11;
   return;
  }
 default:
  return;
 }
}

function __ZNK9TdfParser8GetValueIjEEbRT_RKNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$06 = 0, $12 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $3 = sp + 140 | 0;
 $4 = sp;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 if (!(__ZNK9TdfParser9SGetValueERNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKS6_($0 | 0, $3 | 0, $2 | 0) | 0)) {
  $$06 = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  STACKTOP = sp;
  return $$06 | 0;
 }
 $6 = $4 + 60 | 0;
 $7 = $4 + 8 | 0;
 HEAP32[$4 >> 2] = 68004;
 HEAP32[$6 >> 2] = 68024;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($4 + 60 | 0, $7);
 HEAP32[$4 + 132 >> 2] = 0;
 HEAP32[$4 + 136 >> 2] = -1;
 HEAP32[$4 >> 2] = 68044;
 HEAP32[$6 >> 2] = 68064;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($7);
 HEAP32[$7 >> 2] = 67920;
 $12 = $4 + 40 | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 HEAP32[$12 + 12 >> 2] = 0;
 HEAP32[$4 + 56 >> 2] = 8;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($7, $3);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERj($4, $1) | 0;
 HEAP32[$4 >> 2] = 68044;
 HEAP32[$6 >> 2] = 68064;
 HEAP32[$7 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($7);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($4, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($6);
 $$06 = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 STACKTOP = sp;
 return $$06 | 0;
}

function __Z16lua_getmetatableP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$in = 0, $$022 = 0, $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $41 = 0, $50 = 0, $51 = 0, $6 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $41 = HEAP32[$$1$i + 4 >> 2] | 0;
 switch ($41 | 0) {
 case 5:
  {
   $$0$in = (HEAP32[$$1$i >> 2] | 0) + 8 | 0;
   break;
  }
 case 7:
  {
   $$0$in = (HEAP32[$$1$i >> 2] | 0) + 8 | 0;
   break;
  }
 default:
  $$0$in = (HEAP32[$0 + 16 >> 2] | 0) + 124 + ($41 << 2) | 0;
 }
 $$0 = HEAP32[$$0$in >> 2] | 0;
 if (!$$0) {
  $$022 = 0;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return $$022 | 0;
 }
 $50 = $0 + 8 | 0;
 $51 = HEAP32[$50 >> 2] | 0;
 HEAP32[$51 >> 2] = $$0;
 HEAP32[$51 + 4 >> 2] = 5;
 HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 8;
 $$022 = 1;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $$022 | 0;
}

function __ZL7tconcatP9lua_State($0) {
 $0 = $0 | 0;
 var $$021 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $1 = sp + 20 | 0;
 $2 = sp + 16 | 0;
 $3 = __Z15luaL_optlstringP9lua_StateiPKcPj($0, 2, 114224, $2) | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 $4 = __Z15luaL_optintegerP9lua_Stateii($0, 3, 1) | 0;
 if ((__Z8lua_typeP9lua_Statei($0, 4) | 0) < 1) $10 = __Z10lua_objlenP9lua_Statei($0, 1) | 0; else $10 = __Z17luaL_checkintegerP9lua_Statei($0, 4) | 0;
 __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $1);
 if (($4 | 0) < ($10 | 0)) {
  $$021 = $4;
  do {
   __Z11lua_rawgetiP9lua_Stateii($0, 1, $$021);
   if (!(__Z12lua_isstringP9lua_Statei($0, -1) | 0)) {
    HEAP32[$vararg_buffer >> 2] = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, -1) | 0) | 0;
    HEAP32[$vararg_buffer + 4 >> 2] = $$021;
    __Z10luaL_errorP9lua_StatePKcz($0, 89171, $vararg_buffer) | 0;
   }
   __Z13luaL_addvalueP11luaL_Buffer($1);
   __Z15luaL_addlstringP11luaL_BufferPKcj($1, $3, HEAP32[$2 >> 2] | 0);
   $$021 = $$021 + 1 | 0;
  } while (($$021 | 0) != ($10 | 0));
 } else if (($4 | 0) != ($10 | 0)) {
  __Z15luaL_pushresultP11luaL_Buffer($1);
  STACKTOP = sp;
  return 1;
 }
 __Z11lua_rawgetiP9lua_Stateii($0, 1, $10);
 if (!(__Z12lua_isstringP9lua_Statei($0, -1) | 0)) {
  HEAP32[$vararg_buffer2 >> 2] = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, -1) | 0) | 0;
  HEAP32[$vararg_buffer2 + 4 >> 2] = $10;
  __Z10luaL_errorP9lua_StatePKcz($0, 89171, $vararg_buffer2) | 0;
 }
 __Z13luaL_addvalueP11luaL_Buffer($1);
 __Z15luaL_pushresultP11luaL_Buffer($1);
 STACKTOP = sp;
 return 1;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $55 = 0, $9 = 0, $storemerge = 0;
 $2 = $0 + 32 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($2, $1) | 0;
 $3 = $0 + 44 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $0 + 48 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 & 8 | 0) {
  $9 = HEAP8[$2 + 11 >> 0] | 0;
  if ($9 << 24 >> 24 < 0) {
   $11 = HEAP32[$2 >> 2] | 0;
   $19 = $11;
   $21 = $11;
   $storemerge = $11 + (HEAP32[$0 + 36 >> 2] | 0) | 0;
  } else {
   $19 = $2;
   $21 = $2;
   $storemerge = $2 + ($9 & 255) | 0;
  }
  HEAP32[$3 >> 2] = $storemerge;
  HEAP32[$0 + 8 >> 2] = $19;
  HEAP32[$0 + 12 >> 2] = $21;
  HEAP32[$0 + 16 >> 2] = $storemerge;
 }
 if (!($5 & 16)) return;
 $25 = $2 + 11 | 0;
 $26 = HEAP8[$25 >> 0] | 0;
 if ($26 << 24 >> 24 < 0) {
  $31 = HEAP32[$0 + 36 >> 2] | 0;
  HEAP32[$3 >> 2] = (HEAP32[$2 >> 2] | 0) + $31;
  $37 = (HEAP32[$0 + 40 >> 2] & 2147483647) + -1 | 0;
  $55 = $31;
 } else {
  $28 = $26 & 255;
  HEAP32[$3 >> 2] = $2 + $28;
  $37 = 10;
  $55 = $28;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($2, $37, 0);
 $38 = HEAP8[$25 >> 0] | 0;
 if ($38 << 24 >> 24 < 0) {
  $40 = HEAP32[$2 >> 2] | 0;
  $45 = $40;
  $46 = HEAP32[$0 + 36 >> 2] | 0;
  $48 = $40;
 } else {
  $45 = $2;
  $46 = $38 & 255;
  $48 = $2;
 }
 $47 = $0 + 24 | 0;
 HEAP32[$47 >> 2] = $48;
 HEAP32[$0 + 20 >> 2] = $48;
 HEAP32[$0 + 28 >> 2] = $45 + $46;
 if (!(HEAP32[$4 >> 2] & 3)) return;
 HEAP32[$47 >> 2] = $48 + $55;
 return;
}

function _freopen($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$pre = 0, $17 = 0, $19 = 0, $20 = 0, $22 = 0, $3 = 0, $43 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = ___fmodeflags($1) | 0;
 if ((HEAP32[$2 + 76 >> 2] | 0) > -1) $43 = ___lockfile($2) | 0; else $43 = 0;
 _fflush($2) | 0;
 do if (!$0) {
  $$pre = $2 + 60 | 0;
  if ($3 & 524288 | 0) {
   HEAP32[$vararg_buffer >> 2] = HEAP32[$$pre >> 2];
   HEAP32[$vararg_buffer + 4 >> 2] = 2;
   HEAP32[$vararg_buffer + 8 >> 2] = 1;
   ___syscall221(221, $vararg_buffer | 0) | 0;
  }
  HEAP32[$vararg_buffer3 >> 2] = HEAP32[$$pre >> 2];
  HEAP32[$vararg_buffer3 + 4 >> 2] = 4;
  HEAP32[$vararg_buffer3 + 8 >> 2] = $3 & -524481;
  if ((___syscall_ret(___syscall221(221, $vararg_buffer3 | 0) | 0) | 0) < 0) label = 15; else label = 12;
 } else {
  $17 = _fopen($0, $1) | 0;
  if (!$17) label = 15; else {
   $19 = $17 + 60 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   $22 = HEAP32[$2 + 60 >> 2] | 0;
   if (($20 | 0) == ($22 | 0)) HEAP32[$19 >> 2] = -1; else if ((___dup3($20, $22, $3 & 524288) | 0) < 0) {
    _fclose($17) | 0;
    label = 15;
    break;
   }
   HEAP32[$2 >> 2] = HEAP32[$2 >> 2] & 1 | HEAP32[$17 >> 2];
   HEAP32[$2 + 32 >> 2] = HEAP32[$17 + 32 >> 2];
   HEAP32[$2 + 36 >> 2] = HEAP32[$17 + 36 >> 2];
   HEAP32[$2 + 40 >> 2] = HEAP32[$17 + 40 >> 2];
   HEAP32[$2 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
   _fclose($17) | 0;
   label = 12;
  }
 } while (0);
 if ((label | 0) == 12) if (!$43) $$0 = $2; else {
  ___unlockfile($2);
  $$0 = $2;
 } else if ((label | 0) == 15) {
  _fclose($2) | 0;
  $$0 = 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEEixERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $12 = 0, $13 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 16 | 0;
 __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE7reserveEj($0, (HEAP32[$3 >> 2] | 0) + 1 | 0);
 $6 = __ZN6emilib7HashMapINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_N6spring11synced_hashIS7_EENS_14HashMapEqualToIS7_EEE16find_or_allocateERKS7_($0, $1) | 0;
 $9 = (HEAP32[$0 + 4 >> 2] | 0) + $6 | 0;
 if ((HEAP8[$9 >> 0] | 0) == 2) {
  $$pre$phiZ2D = $0 + 8 | 0;
  $18 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  $19 = $18 + ($6 * 24 | 0) + 12 | 0;
  STACKTOP = sp;
  return $19 | 0;
 } else {
  HEAP8[$9 >> 0] = 2;
  $12 = $0 + 8 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($13 + ($6 * 24 | 0) | 0, $1);
  $15 = $13 + ($6 * 24 | 0) + 12 | 0;
  HEAP32[$15 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$15 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$15 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
  $$pre$phiZ2D = $12;
  $18 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  $19 = $18 + ($6 * 24 | 0) + 12 | 0;
  STACKTOP = sp;
  return $19 | 0;
 }
 return 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $13 = 0, $14 = 0, $26 = 0, $31 = 0, $35 = 0, $40 = 0, $44 = 0, $48 = 0, $52 = 0, $57 = 0, $62 = 0, $66 = 0, $7 = 0, $71 = 0, $72 = 0, $76 = 0, $9 = 0;
 $7 = HEAP32[$1 + 68 >> 2] | 0;
 if (!$7) {
  $9 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($9);
  ___cxa_throw($9 | 0, 1856, 154);
 }
 $13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 24 >> 2] & 255]($7) | 0;
 $14 = $1 + 64 | 0;
 if (HEAP32[$14 >> 2] | 0) if (!((($2 | 0) != 0 | ($3 | 0) != 0) & ($13 | 0) < 1)) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 24 >> 2] & 255]($1) | 0)) {
  if ($4 >>> 0 >= 3) {
   $35 = $0;
   HEAP32[$35 >> 2] = 0;
   HEAP32[$35 + 4 >> 2] = 0;
   $40 = $0 + 8 | 0;
   HEAP32[$40 >> 2] = -1;
   HEAP32[$40 + 4 >> 2] = -1;
   return;
  }
  $44 = HEAP32[$14 >> 2] | 0;
  $48 = ___muldi3($13 | 0, (($13 | 0) < 0) << 31 >> 31 | 0, $2 | 0, $3 | 0) | 0;
  if (!(___fseeko($44, ($13 | 0) > 0 ? $48 : 0, $4) | 0)) {
   $62 = ___ftello(HEAP32[$14 >> 2] | 0) | 0;
   $66 = $1 + 72 | 0;
   $71 = HEAP32[$66 + 4 >> 2] | 0;
   $72 = $0;
   HEAP32[$72 >> 2] = HEAP32[$66 >> 2];
   HEAP32[$72 + 4 >> 2] = $71;
   $76 = $0 + 8 | 0;
   HEAP32[$76 >> 2] = $62;
   HEAP32[$76 + 4 >> 2] = (($62 | 0) < 0) << 31 >> 31;
   return;
  } else {
   $52 = $0;
   HEAP32[$52 >> 2] = 0;
   HEAP32[$52 + 4 >> 2] = 0;
   $57 = $0 + 8 | 0;
   HEAP32[$57 >> 2] = -1;
   HEAP32[$57 + 4 >> 2] = -1;
   return;
  }
 }
 $26 = $0;
 HEAP32[$26 >> 2] = 0;
 HEAP32[$26 + 4 >> 2] = 0;
 $31 = $0 + 8 | 0;
 HEAP32[$31 >> 2] = -1;
 HEAP32[$31 + 4 >> 2] = -1;
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $5 = sp + 112 | 0;
 $6 = sp + 100 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 4 | 0;
 $10 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[103085] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[103086] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[103087] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[103088] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[103089] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[103090] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 103091, 0, HEAP32[$2 + 4 >> 2] | 0);
 $14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $16 = $6 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 12, $14, $5, $$byval_copy) | 0) | 0;
 $17 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $16, $2) | 0;
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($6, $17, $16, $7, $8, $9, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
 $21 = HEAP32[$8 >> 2] | 0;
 $22 = HEAP32[$9 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$10 >> 2];
 $23 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, $21, $22, $2, $3) | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $5 = sp + 122 | 0;
 $6 = sp + 108 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 4 | 0;
 $10 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[103085] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[103086] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[103087] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[103088] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[103089] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[103090] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 103091, 1, HEAP32[$2 + 4 >> 2] | 0);
 $14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $16 = $6 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 13, $14, $5, $$byval_copy) | 0) | 0;
 $17 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $16, $2) | 0;
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($6, $17, $16, $7, $8, $9, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
 $21 = HEAP32[$8 >> 2] | 0;
 $22 = HEAP32[$9 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$10 >> 2];
 $23 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, $21, $22, $2, $3) | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $5 = sp + 52 | 0;
 $6 = sp + 40 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 4 | 0;
 $10 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[103085] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[103086] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[103087] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[103088] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[103089] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[103090] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 103091, 0, HEAP32[$2 + 4 >> 2] | 0);
 $14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $16 = $6 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 12, $14, $5, $$byval_copy) | 0) | 0;
 $17 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $16, $2) | 0;
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($6, $17, $16, $7, $8, $9, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
 $21 = HEAP32[$8 >> 2] | 0;
 $22 = HEAP32[$9 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$10 >> 2];
 $23 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, $21, $22, $2, $3) | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $5 = sp + 52 | 0;
 $6 = sp + 39 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 4 | 0;
 $10 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[103085] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[103086] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[103087] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[103088] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[103089] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[103090] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 103091, 1, HEAP32[$2 + 4 >> 2] | 0);
 $14 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $16 = $6 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 13, $14, $5, $$byval_copy) | 0) | 0;
 $17 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $16, $2) | 0;
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($6, $17, $16, $7, $8, $9, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
 $21 = HEAP32[$8 >> 2] | 0;
 $22 = HEAP32[$9 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$10 >> 2];
 $23 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, $21, $22, $2, $3) | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNSt3__214__split_bufferI8AllyTeamRNS_9allocatorIS1_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$05$i$i$i$i$i$i$i$i = 0, $$lcssa$i$i$i$i$i$i$i$i = 0, $$pre8$i$i$i$i$i$i$i$i = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $2 = 0, $22 = 0, $25 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) != ($2 | 0)) {
  $7 = $4;
  do {
   HEAP32[$3 >> 2] = $7 + -56;
   $8 = $7 + -16 | 0;
   $9 = HEAP32[$8 >> 2] | 0;
   $11 = $7 + -24 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   $$pre8$i$i$i$i$i$i$i$i = $7 + -20 | 0;
   if (!$9) $$lcssa$i$i$i$i$i$i$i$i = $12; else {
    $$05$i$i$i$i$i$i$i$i = 0;
    $14 = $12;
    $31 = $9;
    while (1) {
     if ((HEAP8[$14 + $$05$i$i$i$i$i$i$i$i >> 0] | 0) == 2) {
      $17 = HEAP32[$$pre8$i$i$i$i$i$i$i$i >> 2] | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17 + ($$05$i$i$i$i$i$i$i$i * 24 | 0) + 12 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17 + ($$05$i$i$i$i$i$i$i$i * 24 | 0) | 0);
      $22 = HEAP32[$8 >> 2] | 0;
      $32 = HEAP32[$11 >> 2] | 0;
     } else {
      $22 = $31;
      $32 = $14;
     }
     $$05$i$i$i$i$i$i$i$i = $$05$i$i$i$i$i$i$i$i + 1 | 0;
     if ($$05$i$i$i$i$i$i$i$i >>> 0 >= $22 >>> 0) {
      $$lcssa$i$i$i$i$i$i$i$i = $32;
      break;
     } else {
      $14 = $32;
      $31 = $22;
     }
    }
   }
   _free($$lcssa$i$i$i$i$i$i$i$i);
   _free(HEAP32[$$pre8$i$i$i$i$i$i$i$i >> 2] | 0);
   $25 = HEAP32[$7 + -40 >> 2] | 0;
   if ($25 | 0) __ZdlPv($25);
   $7 = HEAP32[$3 >> 2] | 0;
  } while (($7 | 0) != ($2 | 0));
 }
 $29 = HEAP32[$0 >> 2] | 0;
 if (!$29) return;
 __ZdlPv($29);
 return;
}

function __Z13luaL_addvalueP11luaL_Buffer($0) {
 $0 = $0 | 0;
 var $$026$i = 0, $$027$i = 0, $$pre$phiZ2D = 0, $1 = 0, $16 = 0, $19 = 0, $2 = 0, $22 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = __Z13lua_tolstringP9lua_StateiPj($3, -1, $1) | 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $6 = HEAP32[$0 >> 2] | 0;
 $7 = $0 + 12 | 0;
 $8 = $6;
 $9 = $7;
 if ($5 >>> 0 <= ($9 + 1024 - $8 | 0) >>> 0) {
  _memcpy($6 | 0, $4 | 0, $5 | 0) | 0;
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + (HEAP32[$1 >> 2] | 0);
  __Z10lua_settopP9lua_Statei($3, -2);
  STACKTOP = sp;
  return;
 }
 $16 = $8 - $9 | 0;
 if (!$16) $$pre$phiZ2D = $0 + 4 | 0; else {
  __Z15lua_pushlstringP9lua_StatePKcj(HEAP32[$2 >> 2] | 0, $7, $16);
  HEAP32[$0 >> 2] = $7;
  $19 = $0 + 4 | 0;
  HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
  __Z10lua_insertP9lua_Statei($3, -2);
  $$pre$phiZ2D = $19;
 }
 $22 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 HEAP32[$$pre$phiZ2D >> 2] = $22 + 1;
 if (($22 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $25 = HEAP32[$2 >> 2] | 0;
 $$026$i = 1;
 $$027$i = __Z10lua_objlenP9lua_Statei($25, -1) | 0;
 while (1) {
  $28 = __Z10lua_objlenP9lua_Statei($25, ~$$026$i) | 0;
  $29 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  $or$cond$i = $$027$i >>> 0 > $28 >>> 0 | ($29 - $$026$i | 0) > 8;
  $$026$i = ($or$cond$i & 1) + $$026$i | 0;
  if (!($or$cond$i & ($$026$i | 0) < ($29 | 0))) break; else $$027$i = ($or$cond$i ? $28 : 0) + $$027$i | 0;
 }
 __Z10lua_concatP9lua_Statei($25, $$026$i);
 HEAP32[$$pre$phiZ2D >> 2] = 1 - $$026$i + (HEAP32[$$pre$phiZ2D >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __Z10lua_objlenP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $55 = 0, $6 = 0;
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 switch (HEAP32[$$1$i + 4 >> 2] | 0) {
 case 4:
  {
   $$0 = HEAP32[(HEAP32[$$1$i >> 2] | 0) + 12 >> 2] | 0;
   return $$0 | 0;
  }
 case 7:
  {
   $$0 = HEAP32[(HEAP32[$$1$i >> 2] | 0) + 16 >> 2] | 0;
   return $$0 | 0;
  }
 case 5:
  {
   $$0 = __Z9luaH_getnP5Table(HEAP32[$$1$i >> 2] | 0) | 0;
   return $$0 | 0;
  }
 case 3:
  {
   __Z12LuaMutexLockP9lua_State($0 | 0);
   if (!(__Z13luaV_tostringP9lua_StateP10lua_TValue($0, $$1$i) | 0)) $55 = 0; else $55 = HEAP32[(HEAP32[$$1$i >> 2] | 0) + 12 >> 2] | 0;
   __Z14LuaMutexUnlockP9lua_State($0 | 0);
   $$0 = $55;
   return $$0 | 0;
  }
 default:
  {
   $$0 = 0;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZNSt3__213__vector_baseI8AllyTeamNS_9allocatorIS1_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$05$i$i$i$i$i$i$i = 0, $$lcssa$i$i$i$i$i$i$i = 0, $$pre8$i$i$i$i$i$i$i = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $22 = 0, $25 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) == ($1 | 0)) $29 = $1; else {
  $7 = $4;
  do {
   HEAP32[$3 >> 2] = $7 + -56;
   $8 = $7 + -16 | 0;
   $9 = HEAP32[$8 >> 2] | 0;
   $11 = $7 + -24 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   $$pre8$i$i$i$i$i$i$i = $7 + -20 | 0;
   if (!$9) $$lcssa$i$i$i$i$i$i$i = $12; else {
    $$05$i$i$i$i$i$i$i = 0;
    $14 = $12;
    $30 = $9;
    while (1) {
     if ((HEAP8[$14 + $$05$i$i$i$i$i$i$i >> 0] | 0) == 2) {
      $17 = HEAP32[$$pre8$i$i$i$i$i$i$i >> 2] | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17 + ($$05$i$i$i$i$i$i$i * 24 | 0) + 12 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17 + ($$05$i$i$i$i$i$i$i * 24 | 0) | 0);
      $22 = HEAP32[$8 >> 2] | 0;
      $31 = HEAP32[$11 >> 2] | 0;
     } else {
      $22 = $30;
      $31 = $14;
     }
     $$05$i$i$i$i$i$i$i = $$05$i$i$i$i$i$i$i + 1 | 0;
     if ($$05$i$i$i$i$i$i$i >>> 0 >= $22 >>> 0) {
      $$lcssa$i$i$i$i$i$i$i = $31;
      break;
     } else {
      $14 = $31;
      $30 = $22;
     }
    }
   }
   _free($$lcssa$i$i$i$i$i$i$i);
   _free(HEAP32[$$pre8$i$i$i$i$i$i$i >> 2] | 0);
   $25 = HEAP32[$7 + -40 >> 2] | 0;
   if ($25 | 0) __ZdlPv($25);
   $7 = HEAP32[$3 >> 2] | 0;
  } while (($7 | 0) != ($1 | 0));
  $29 = HEAP32[$0 >> 2] | 0;
 }
 __ZdlPv($29);
 return;
}

function __ZN9LuaParserC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_S8_RKNS_7booleanE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $12 = 0, $17 = 0, $21 = 0, $27 = 0, $29 = 0, $6 = 0, $8 = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 12 | 0, $2);
 $6 = $0 + 24 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 36 | 0, $3);
 $8 = $0 + 52 | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$0 + 56 >> 2] = 0;
 HEAP32[$0 + 60 >> 2] = __ZN10LuaMemPool10AcquirePtrEbb(0, 0) | 0;
 $12 = $0 + 64 | 0;
 HEAP32[$0 + 72 >> 2] = 0;
 HEAP8[$0 + 76 >> 0] = 0;
 HEAP8[$0 + 77 >> 0] = 0;
 $17 = $12 + 4 | 0;
 HEAP16[$17 >> 1] = 0;
 HEAP8[$17 + 2 >> 0] = 0;
 HEAP32[$0 + 80 >> 2] = -1;
 HEAP32[$0 + 84 >> 2] = 0;
 HEAP32[$0 + 88 >> 2] = 0;
 HEAP32[$0 + 92 >> 2] = -1;
 $21 = $0 + 96 | 0;
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 HEAP32[$21 + 12 >> 2] = 0;
 HEAP32[$21 + 16 >> 2] = 0;
 HEAP32[$21 + 20 >> 2] = 0;
 HEAP32[$21 + 24 >> 2] = 0;
 HEAP32[$0 + 124 >> 2] = -2;
 HEAP32[$0 + 128 >> 2] = -2;
 HEAP8[$0 + 132 >> 0] = 0;
 HEAP8[$0 + 133 >> 0] = 1;
 HEAP8[$0 + 134 >> 0] = 1;
 $27 = $0 + 136 | 0;
 HEAP32[$27 >> 2] = 0;
 HEAP32[$27 + 4 >> 2] = 0;
 HEAP32[$27 + 8 >> 2] = 0;
 HEAP8[$0 + 68 >> 0] = 1;
 HEAP32[$12 >> 2] = $0;
 $29 = __Z12lua_newstatePFPvS_S_jjES_(6, $8) | 0;
 HEAP32[$0 + 48 >> 2] = $29;
 if (!$29) return;
 __ZN9LuaParser8SetupEnvEb($0, (HEAP8[$4 >> 0] | 0) != 0);
 return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE6setbufEPci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$speculated = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $18 = 0, $20 = 0, $23 = 0, $3 = 0, $31 = 0, $4 = 0, $5 = 0;
 $3 = $0 + 8 | 0;
 $4 = $0 + 96 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP32[$3 + 12 >> 2] = 0;
 HEAP32[$3 + 16 >> 2] = 0;
 HEAP32[$3 + 20 >> 2] = 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $10 = ($5 & 65535) >>> 8 & 255;
 if (!(($5 & 255) << 24 >> 24)) $15 = $10; else {
  $12 = HEAP32[$0 + 32 >> 2] | 0;
  if (!$12) $15 = $10; else {
   __ZdaPv($12);
   $15 = HEAP8[$0 + 97 >> 0] | 0;
  }
 }
 $14 = $0 + 97 | 0;
 if ($15 << 24 >> 24) {
  $18 = HEAP32[$0 + 56 >> 2] | 0;
  if ($18 | 0) __ZdaPv($18);
 }
 $20 = $0 + 52 | 0;
 HEAP32[$20 >> 2] = $2;
 do if ($2 >>> 0 > 8) {
  $23 = HEAP8[$0 + 98 >> 0] | 0;
  if (($1 | 0) != 0 & $23 << 24 >> 24 != 0) {
   HEAP32[$0 + 32 >> 2] = $1;
   HEAP8[$4 >> 0] = 0;
   $31 = $23;
   break;
  } else {
   HEAP32[$0 + 32 >> 2] = __Znaj($2) | 0;
   HEAP8[$4 >> 0] = 1;
   $31 = $23;
   break;
  }
 } else {
  HEAP32[$0 + 32 >> 2] = $0 + 44;
  HEAP32[$20 >> 2] = 8;
  HEAP8[$4 >> 0] = 0;
  $31 = HEAP8[$0 + 98 >> 0] | 0;
 } while (0);
 if ($31 << 24 >> 24) {
  HEAP32[$0 + 60 >> 2] = 0;
  HEAP32[$0 + 56 >> 2] = 0;
  HEAP8[$14 >> 0] = 0;
  return $0 | 0;
 }
 $$sroa$speculated = ($2 | 0) < 8 ? 8 : $2;
 HEAP32[$0 + 60 >> 2] = $$sroa$speculated;
 if (($1 | 0) != 0 & $$sroa$speculated >>> 0 > 7) {
  HEAP32[$0 + 56 >> 2] = $1;
  HEAP8[$14 >> 0] = 0;
  return $0 | 0;
 } else {
  HEAP32[$0 + 56 >> 2] = __Znaj($$sroa$speculated) | 0;
  HEAP8[$14 >> 0] = 1;
  return $0 | 0;
 }
 return 0;
}

function ___stdio_read($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$026 = 0, $$cast = 0, $11 = 0, $19 = 0, $3 = 0, $31 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 32 | 0;
 HEAP32[$3 >> 2] = $1;
 $4 = $3 + 4 | 0;
 $5 = $0 + 48 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$4 >> 2] = $2 - (($6 | 0) != 0 & 1);
 $11 = $0 + 44 | 0;
 HEAP32[$3 + 8 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$3 + 12 >> 2] = $6;
 if (!(HEAP32[27140] | 0)) {
  HEAP32[$vararg_buffer3 >> 2] = HEAP32[$0 + 60 >> 2];
  HEAP32[$vararg_buffer3 + 4 >> 2] = $3;
  HEAP32[$vararg_buffer3 + 8 >> 2] = 2;
  $$0 = ___syscall_ret(___syscall145(145, $vararg_buffer3 | 0) | 0) | 0;
 } else {
  _pthread_cleanup_push(176, $0 | 0);
  HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  HEAP32[$vararg_buffer + 8 >> 2] = 2;
  $19 = ___syscall_ret(___syscall145(145, $vararg_buffer | 0) | 0) | 0;
  _pthread_cleanup_pop(0);
  $$0 = $19;
 }
 if (($$0 | 0) < 1) {
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | $$0 & 48 ^ 16;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  $$026 = $$0;
 } else {
  $31 = HEAP32[$4 >> 2] | 0;
  if ($$0 >>> 0 > $31 >>> 0) {
   $34 = HEAP32[$11 >> 2] | 0;
   $35 = $0 + 4 | 0;
   HEAP32[$35 >> 2] = $34;
   $$cast = $34;
   HEAP32[$0 + 8 >> 2] = $$cast + ($$0 - $31);
   if (!(HEAP32[$5 >> 2] | 0)) $$026 = $2; else {
    HEAP32[$35 >> 2] = $$cast + 1;
    HEAP8[$1 + ($2 + -1) >> 0] = HEAP8[$$cast >> 0] | 0;
    $$026 = $2;
   }
  } else $$026 = $$0;
 }
 STACKTOP = sp;
 return $$026 | 0;
}

function __ZNSt3__211__stdoutbufIwE8overflowEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$032 = 0, $$4 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $25 = 0, $3 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = ($1 | 0) == -1;
 do if ($6) label = 14; else {
  HEAP32[$3 >> 2] = $1;
  if (HEAP8[$0 + 44 >> 0] | 0) if ((_fwrite($3, 4, 1, HEAP32[$0 + 32 >> 2] | 0) | 0) == 1) {
   label = 14;
   break;
  } else {
   $$4 = -1;
   break;
  }
  HEAP32[$4 >> 2] = $2;
  $14 = $3 + 4 | 0;
  $15 = $0 + 36 | 0;
  $16 = $0 + 40 | 0;
  $17 = $2 + 8 | 0;
  $18 = $2;
  $19 = $0 + 32 | 0;
  $$032 = $3;
  while (1) {
   $20 = HEAP32[$15 >> 2] | 0;
   $25 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$20 >> 2] | 0) + 12 >> 2] & 15]($20, HEAP32[$16 >> 2] | 0, $$032, $14, $5, $2, $17, $4) | 0;
   if ((HEAP32[$5 >> 2] | 0) == ($$032 | 0)) {
    label = 13;
    break;
   }
   if (($25 | 0) == 3) {
    label = 7;
    break;
   }
   if (($25 | 1 | 0) != 1) {
    label = 13;
    break;
   }
   $36 = (HEAP32[$4 >> 2] | 0) - $18 | 0;
   if ((_fwrite($2, 1, $36, HEAP32[$19 >> 2] | 0) | 0) != ($36 | 0)) {
    label = 13;
    break;
   }
   if (($25 | 0) == 1) $$032 = HEAP32[$5 >> 2] | 0; else {
    label = 12;
    break;
   }
  }
  if ((label | 0) == 7) if ((_fwrite($$032, 1, 1, HEAP32[$19 >> 2] | 0) | 0) == 1) label = 12; else label = 13;
  if ((label | 0) == 12) {
   label = 14;
   break;
  } else if ((label | 0) == 13) {
   $$4 = -1;
   break;
  }
 } while (0);
 if ((label | 0) == 14) $$4 = $6 ? 0 : $1;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNSt3__211__stdoutbufIcE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$032 = 0, $$4 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $26 = 0, $3 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = ($1 | 0) == -1;
 do if ($6) label = 14; else {
  HEAP8[$3 >> 0] = $1;
  if (HEAP8[$0 + 44 >> 0] | 0) if ((_fwrite($3, 1, 1, HEAP32[$0 + 32 >> 2] | 0) | 0) == 1) {
   label = 14;
   break;
  } else {
   $$4 = -1;
   break;
  }
  HEAP32[$4 >> 2] = $2;
  $15 = $3 + 1 | 0;
  $16 = $0 + 36 | 0;
  $17 = $0 + 40 | 0;
  $18 = $2 + 8 | 0;
  $19 = $2;
  $20 = $0 + 32 | 0;
  $$032 = $3;
  while (1) {
   $21 = HEAP32[$16 >> 2] | 0;
   $26 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$21 >> 2] | 0) + 12 >> 2] & 15]($21, HEAP32[$17 >> 2] | 0, $$032, $15, $5, $2, $18, $4) | 0;
   if ((HEAP32[$5 >> 2] | 0) == ($$032 | 0)) {
    label = 13;
    break;
   }
   if (($26 | 0) == 3) {
    label = 7;
    break;
   }
   if (($26 | 1 | 0) != 1) {
    label = 13;
    break;
   }
   $37 = (HEAP32[$4 >> 2] | 0) - $19 | 0;
   if ((_fwrite($2, 1, $37, HEAP32[$20 >> 2] | 0) | 0) != ($37 | 0)) {
    label = 13;
    break;
   }
   if (($26 | 0) == 1) $$032 = HEAP32[$5 >> 2] | 0; else {
    label = 12;
    break;
   }
  }
  if ((label | 0) == 7) if ((_fwrite($$032, 1, 1, HEAP32[$20 >> 2] | 0) | 0) == 1) label = 12; else label = 13;
  if ((label | 0) == 12) {
   label = 14;
   break;
  } else if ((label | 0) == 13) {
   $$4 = -1;
   break;
  }
 } while (0);
 if ((label | 0) == 14) $$4 = $6 ? 0 : $1;
 STACKTOP = sp;
 return $$4 | 0;
}

function _fnmatch($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$042 = 0, $$043 = 0, $$044 = 0, $$045 = 0, $$1 = 0, $$not = 0, $10 = 0, $13 = 0, $27 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $7 = ($2 & 8 | 0) == 0;
 L1 : do if (!($2 & 1)) {
  L3 : do if (!$7) {
   $27 = $1;
   $$1 = $1;
   while (1) {
    switch (HEAP8[$$1 >> 0] | 0) {
    case 0:
     {
      break L3;
      break;
     }
    case 47:
     {
      if (!(_fnmatch_internal($0, -1, $1, $$1 - $27 | 0, $2) | 0)) {
       $$0 = 0;
       break L1;
      }
      break;
     }
    default:
     {}
    }
    $$1 = $$1 + 1 | 0;
   }
  } while (0);
  $$0 = _fnmatch_internal($0, -1, $1, -1, $2) | 0;
 } else {
  $$044 = $0;
  $$045 = $1;
  while (1) {
   $$043 = $$045;
   L13 : while (1) {
    switch (HEAP8[$$043 >> 0] | 0) {
    case 47:
    case 0:
     {
      $$042 = $$044;
      break L13;
      break;
     }
    default:
     {}
    }
    $$043 = $$043 + 1 | 0;
   }
   L16 : while (1) {
    $10 = _pat_next($$042, -1, $3, $2) | 0;
    switch ($10 | 0) {
    case 0:
    case 47:
     {
      break L16;
      break;
     }
    default:
     {}
    }
    $$042 = $$042 + (HEAP32[$3 >> 2] | 0) | 0;
   }
   $13 = HEAP8[$$043 >> 0] | 0;
   if (($10 | 0) != ($13 << 24 >> 24 | 0) & ($7 | $13 << 24 >> 24 == 0)) {
    $$0 = 1;
    break L1;
   }
   $$not = (_fnmatch_internal($$044, $$042 - $$044 | 0, $$045, $$043 - $$045 | 0, $2) | 0) != 0;
   if (($10 | 0) == 0 | $$not) {
    $$0 = $$not & 1;
    break L1;
   }
   $$044 = $$042 + (HEAP32[$3 >> 2] | 0) | 0;
   $$045 = $$043 + 1 | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _vfprintf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0 = 0, $$1 = 0, $13 = 0, $14 = 0, $19 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $35 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $3 = sp + 120 | 0;
 $4 = sp + 80 | 0;
 $5 = sp;
 $6 = sp + 136 | 0;
 dest = $4;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
 if ((_printf_core(0, $1, $3, $5, $4) | 0) < 0) $$0 = -1; else {
  if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $39 = ___lockfile($0) | 0; else $39 = 0;
  $13 = HEAP32[$0 >> 2] | 0;
  $14 = $13 & 32;
  if ((HEAP8[$0 + 74 >> 0] | 0) < 1) HEAP32[$0 >> 2] = $13 & -33;
  $19 = $0 + 48 | 0;
  if (!(HEAP32[$19 >> 2] | 0)) {
   $23 = $0 + 44 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   HEAP32[$23 >> 2] = $6;
   $25 = $0 + 28 | 0;
   HEAP32[$25 >> 2] = $6;
   $26 = $0 + 20 | 0;
   HEAP32[$26 >> 2] = $6;
   HEAP32[$19 >> 2] = 80;
   $28 = $0 + 16 | 0;
   HEAP32[$28 >> 2] = $6 + 80;
   $29 = _printf_core($0, $1, $3, $5, $4) | 0;
   if (!$24) $$1 = $29; else {
    FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
    $$ = (HEAP32[$26 >> 2] | 0) == 0 ? -1 : $29;
    HEAP32[$23 >> 2] = $24;
    HEAP32[$19 >> 2] = 0;
    HEAP32[$28 >> 2] = 0;
    HEAP32[$25 >> 2] = 0;
    HEAP32[$26 >> 2] = 0;
    $$1 = $$;
   }
  } else $$1 = _printf_core($0, $1, $3, $5, $4) | 0;
  $35 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $35 | $14;
  if ($39 | 0) ___unlockfile($0);
  $$0 = ($35 & 32 | 0) == 0 ? $$1 : -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIP10LuaMemPoolNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i2123 = 0, $$0$i22 = 0, $$sroa$speculated$i = 0, $11 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $7 = 0, $9 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $7 = ((HEAP32[$2 >> 2] | 0) - $4 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 if ($11 >> 2 >>> 0 < 536870911) {
  $17 = $11 >> 1;
  $$sroa$speculated$i = $17 >>> 0 < $7 >>> 0 ? $7 : $17;
  $19 = HEAP32[$2 >> 2] | 0;
  $21 = $19 - $4 >> 2;
  if (!$$sroa$speculated$i) {
   $$0$i22 = 0;
   $28 = 0;
   $29 = $21;
   $36 = $19;
  } else if ($$sroa$speculated$i >>> 0 > 1073741823) {
   $24 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($24);
   ___cxa_throw($24 | 0, 1824, 151);
  } else {
   $$0$i2123 = $$sroa$speculated$i;
   $45 = $19;
   $46 = $21;
   label = 8;
  }
 } else {
  $14 = HEAP32[$2 >> 2] | 0;
  $$0$i2123 = 1073741823;
  $45 = $14;
  $46 = $14 - $4 >> 2;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i22 = $$0$i2123;
  $28 = __Znwj($$0$i2123 << 2) | 0;
  $29 = $46;
  $36 = $45;
 }
 $27 = $28 + ($29 << 2) | 0;
 HEAP32[$27 >> 2] = HEAP32[$1 >> 2];
 $35 = $36 - $4 | 0;
 $39 = $27 + (0 - ($35 >> 2) << 2) | 0;
 if (($35 | 0) > 0) _memcpy($39 | 0, $4 | 0, $35 | 0) | 0;
 HEAP32[$0 >> 2] = $39;
 HEAP32[$2 >> 2] = $27 + 4;
 HEAP32[$9 >> 2] = $28 + ($$0$i22 << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $18 = 0, $25 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $$byval_copy = sp;
 $5 = sp + 176 | 0;
 $6 = sp + 156 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 152 | 0;
 HEAP8[$5 >> 0] = HEAP8[103074] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[103075] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[103076] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[103077] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[103078] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[103079] | 0;
 $9 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $10 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 20, $9, $5, $$byval_copy) | 0;
 $11 = $6 + $10 | 0;
 $12 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $11, $2) | 0;
 $13 = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 HEAP32[$$byval_copy >> 2] = $13;
 $14 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110200) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($13) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 48 >> 2] & 15]($14, $6, $11, $7) | 0;
 $18 = $7 + ($10 << 2) | 0;
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $25 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, ($12 | 0) == ($11 | 0) ? $18 : $7 + ($12 - $6 << 2) | 0, $18, $2, $3) | 0;
 STACKTOP = sp;
 return $25 | 0;
}

function __ZNSt3__26vectorIP8LuaTableNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i2123 = 0, $$0$i22 = 0, $$sroa$speculated$i = 0, $11 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $7 = 0, $9 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $7 = ((HEAP32[$2 >> 2] | 0) - $4 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 if ($11 >> 2 >>> 0 < 536870911) {
  $17 = $11 >> 1;
  $$sroa$speculated$i = $17 >>> 0 < $7 >>> 0 ? $7 : $17;
  $19 = HEAP32[$2 >> 2] | 0;
  $21 = $19 - $4 >> 2;
  if (!$$sroa$speculated$i) {
   $$0$i22 = 0;
   $28 = 0;
   $29 = $21;
   $36 = $19;
  } else if ($$sroa$speculated$i >>> 0 > 1073741823) {
   $24 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($24);
   ___cxa_throw($24 | 0, 1824, 151);
  } else {
   $$0$i2123 = $$sroa$speculated$i;
   $45 = $19;
   $46 = $21;
   label = 8;
  }
 } else {
  $14 = HEAP32[$2 >> 2] | 0;
  $$0$i2123 = 1073741823;
  $45 = $14;
  $46 = $14 - $4 >> 2;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i22 = $$0$i2123;
  $28 = __Znwj($$0$i2123 << 2) | 0;
  $29 = $46;
  $36 = $45;
 }
 $27 = $28 + ($29 << 2) | 0;
 HEAP32[$27 >> 2] = HEAP32[$1 >> 2];
 $35 = $36 - $4 | 0;
 $39 = $27 + (0 - ($35 >> 2) << 2) | 0;
 if (($35 | 0) > 0) _memcpy($39 | 0, $4 | 0, $35 | 0) | 0;
 HEAP32[$0 >> 2] = $39;
 HEAP32[$2 >> 2] = $27 + 4;
 HEAP32[$9 >> 2] = $28 + ($$0$i22 << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $39 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110224) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $15 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $17 = HEAP32[$15 + 24 >> 2] | 0;
  $18 = $15 + 76 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  if (($19 | 0) == -1) {
   HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($15) | 0;
   $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110168) | 0;
   $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 31]($22, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $27 = $26 << 24 >> 24;
   HEAP32[$18 >> 2] = $27;
   $29 = $27;
  } else $29 = $19;
  $32 = HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$2 >> 2] = $17;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$32 & 31]($11, $$byval_copy, $15, $29 & 255, $1) | 0)) {
   $39 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[$39 >> 2] = HEAP32[$39 >> 2] | 5;
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $39 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110224) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $15 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $17 = HEAP32[$15 + 24 >> 2] | 0;
  $18 = $15 + 76 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  if (($19 | 0) == -1) {
   HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($15) | 0;
   $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110168) | 0;
   $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 31]($22, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $27 = $26 << 24 >> 24;
   HEAP32[$18 >> 2] = $27;
   $29 = $27;
  } else $29 = $19;
  $32 = HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$2 >> 2] = $17;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$32 & 31]($11, $$byval_copy, $15, $29 & 255, $1) | 0)) {
   $39 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[$39 >> 2] = HEAP32[$39 >> 2] | 5;
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i17 = 0, $$0$i21 = 0, $10 = 0, $11 = 0, $13 = 0, $18 = 0, $31 = 0, $35 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $10 = HEAP8[$5 + 11 >> 0] | 0;
 $11 = $10 << 24 >> 24 < 0;
 $13 = $11 ? HEAP32[$5 >> 2] | 0 : $5;
 $18 = $13 + ($11 ? HEAP32[$5 + 4 >> 2] | 0 : $10 & 255) | 0;
 $$0$i21 = $13;
 while (1) {
  if ($$0$i21 >>> 0 >= $18 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6, HEAP8[$$0$i21 >> 0] | 0);
  $$0$i21 = $$0$i21 + 1 | 0;
 }
 $31 = _catgets(($2 | 0) == -1 ? -1 : $2 << 1, $3, $4, (HEAP8[$6 + 11 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i17 = 0;
 while (1) {
  if (($$0$i$i17 | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i17 << 2) >> 2] = 0;
  $$0$i$i17 = $$0$i$i17 + 1 | 0;
 }
 $35 = $31 + (_strlen($31) | 0) | 0;
 $$0$i = $31;
 while (1) {
  if ($$0$i >>> 0 >= $35 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, HEAP8[$$0$i >> 0] | 0);
  $$0$i = $$0$i + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $18 = 0, $25 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy = sp;
 $5 = sp + 68 | 0;
 $6 = sp + 48 | 0;
 $7 = sp + 8 | 0;
 $8 = sp + 4 | 0;
 HEAP8[$5 >> 0] = HEAP8[103074] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[103075] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[103076] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[103077] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[103078] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[103079] | 0;
 $9 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $10 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($6, 20, $9, $5, $$byval_copy) | 0;
 $11 = $6 + $10 | 0;
 $12 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $11, $2) | 0;
 $13 = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 HEAP32[$$byval_copy >> 2] = $13;
 $14 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110168) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($13) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 32 >> 2] & 15]($14, $6, $11, $7) | 0;
 $18 = $7 + $10 | 0;
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $25 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, ($12 | 0) == ($11 | 0) ? $18 : $7 + ($12 - $6) | 0, $18, $2, $3) | 0;
 STACKTOP = sp;
 return $25 | 0;
}

function __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIjEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i2123 = 0, $$0$i22 = 0, $$sroa$speculated$i = 0, $11 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $7 = 0, $9 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $7 = ((HEAP32[$2 >> 2] | 0) - $4 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 if ($11 >> 2 >>> 0 < 536870911) {
  $17 = $11 >> 1;
  $$sroa$speculated$i = $17 >>> 0 < $7 >>> 0 ? $7 : $17;
  $19 = HEAP32[$2 >> 2] | 0;
  $21 = $19 - $4 >> 2;
  if (!$$sroa$speculated$i) {
   $$0$i22 = 0;
   $28 = 0;
   $29 = $21;
   $36 = $19;
  } else if ($$sroa$speculated$i >>> 0 > 1073741823) {
   $24 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev($24);
   ___cxa_throw($24 | 0, 1824, 151);
  } else {
   $$0$i2123 = $$sroa$speculated$i;
   $45 = $19;
   $46 = $21;
   label = 8;
  }
 } else {
  $14 = HEAP32[$2 >> 2] | 0;
  $$0$i2123 = 1073741823;
  $45 = $14;
  $46 = $14 - $4 >> 2;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i22 = $$0$i2123;
  $28 = __Znwj($$0$i2123 << 2) | 0;
  $29 = $46;
  $36 = $45;
 }
 $27 = $28 + ($29 << 2) | 0;
 HEAP32[$27 >> 2] = HEAP32[$1 >> 2];
 $35 = $36 - $4 | 0;
 $39 = $27 + (0 - ($35 >> 2) << 2) | 0;
 if (($35 | 0) > 0) _memcpy($39 | 0, $4 | 0, $35 | 0) | 0;
 HEAP32[$0 >> 2] = $39;
 HEAP32[$2 >> 2] = $27 + 4;
 HEAP32[$9 >> 2] = $28 + ($$0$i22 << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function ___dynamic_cast($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $4 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 $8 = $0 + (HEAP32[$5 + -8 >> 2] | 0) | 0;
 $10 = HEAP32[$5 + -4 >> 2] | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$4 + 4 >> 2] = $0;
 HEAP32[$4 + 8 >> 2] = $1;
 HEAP32[$4 + 12 >> 2] = $3;
 $14 = $4 + 16 | 0;
 $15 = $4 + 20 | 0;
 $16 = $4 + 24 | 0;
 $17 = $4 + 28 | 0;
 $18 = $4 + 32 | 0;
 $19 = $4 + 40 | 0;
 $20 = ($10 | 0) == ($2 | 0);
 dest = $14;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$14 + 36 >> 1] = 0;
 HEAP8[$14 + 38 >> 0] = 0;
 L1 : do if ($20) {
  HEAP32[$4 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 15]($2, $4, $8, $8, 1, 0);
  $$0 = (HEAP32[$16 >> 2] | 0) == 1 ? $8 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 3]($10, $4, $8, 1, 0);
  switch (HEAP32[$4 + 36 >> 2] | 0) {
  case 0:
   {
    $$0 = (HEAP32[$19 >> 2] | 0) == 1 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1 ? HEAP32[$15 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    $$0 = 0;
    break L1;
   }
  }
  if ((HEAP32[$16 >> 2] | 0) != 1) if (!((HEAP32[$19 >> 2] | 0) == 0 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1)) {
   $$0 = 0;
   break;
  }
  $$0 = HEAP32[$14 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 200 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 20 | 0;
 $12 = $6;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 103082, 0, HEAP32[$2 + 4 >> 2] | 0);
 $19 = __ZNSt3__26__clocEv() | 0;
 $20 = $$byval_copy;
 HEAP32[$20 >> 2] = $4;
 HEAP32[$20 + 4 >> 2] = $5;
 $25 = $7 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($7, 23, $19, $6, $$byval_copy) | 0) | 0;
 $26 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($7, $25, $2) | 0;
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($7, $26, $25, $8, $9, $10, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $30 = HEAP32[$9 >> 2] | 0;
 $31 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $32 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $8, $30, $31, $2, $3) | 0;
 STACKTOP = sp;
 return $32 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 200 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 20 | 0;
 $12 = $6;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 103082, 1, HEAP32[$2 + 4 >> 2] | 0);
 $19 = __ZNSt3__26__clocEv() | 0;
 $20 = $$byval_copy;
 HEAP32[$20 >> 2] = $4;
 HEAP32[$20 + 4 >> 2] = $5;
 $25 = $7 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($7, 23, $19, $6, $$byval_copy) | 0) | 0;
 $26 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($7, $25, $2) | 0;
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($7, $26, $25, $8, $9, $10, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $30 = HEAP32[$9 >> 2] | 0;
 $31 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $32 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $8, $30, $31, $2, $3) | 0;
 STACKTOP = sp;
 return $32 | 0;
}

function __ZL9auxresumeP9lua_StateS0_i($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $$1$i = 0, $18 = 0, $3 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = sp + 20 | 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$1$i = 0; else {
  switch (__Z10lua_statusP9lua_State($1) | 0) {
  case 1:
   {
    $$1$i = 1;
    break L1;
    break;
   }
  case 0:
   break;
  default:
   {
    $$1$i = 3;
    break L1;
   }
  }
  if ((__Z12lua_getstackP9lua_StateiP9lua_Debug($1, 0, $3) | 0) > 0) $$0$i = 2; else {
   $9 = (__Z10lua_gettopP9lua_State($1) | 0) == 0;
   $$0$i = $9 ? 3 : 1;
  }
  $$1$i = $$0$i;
 } while (0);
 if (!(__Z14lua_checkstackP9lua_Statei($1, $2) | 0)) __Z10luaL_errorP9lua_StatePKcz($0, 86663, $vararg_buffer) | 0;
 if (($$1$i | 0) != 1) {
  HEAP32[$vararg_buffer1 >> 2] = HEAP32[68504 + ($$1$i << 2) >> 2];
  __Z15lua_pushfstringP9lua_StatePKcz($0, 86692, $vararg_buffer1) | 0;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 __Z9lua_xmoveP9lua_StateS0_i($0, $1, $2);
 __Z12lua_setlevelP9lua_StateS0_($0, $1);
 if ((__Z10lua_resumeP9lua_Statei($1, $2) | 0 | 1 | 0) != 1) {
  __Z9lua_xmoveP9lua_StateS0_i($1, $0, 1);
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $18 = __Z10lua_gettopP9lua_State($1) | 0;
 if (!(__Z14lua_checkstackP9lua_Statei($0, $18 + 1 | 0) | 0)) __Z10luaL_errorP9lua_StatePKcz($0, 86719, $vararg_buffer3) | 0;
 __Z9lua_xmoveP9lua_StateS0_i($1, $0, $18);
 $$0 = $18;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 71 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 20 | 0;
 $12 = $6;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 103082, 0, HEAP32[$2 + 4 >> 2] | 0);
 $19 = __ZNSt3__26__clocEv() | 0;
 $20 = $$byval_copy;
 HEAP32[$20 >> 2] = $4;
 HEAP32[$20 + 4 >> 2] = $5;
 $25 = $7 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($7, 23, $19, $6, $$byval_copy) | 0) | 0;
 $26 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($7, $25, $2) | 0;
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($7, $26, $25, $8, $9, $10, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $30 = HEAP32[$9 >> 2] | 0;
 $31 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $32 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $8, $30, $31, $2, $3) | 0;
 STACKTOP = sp;
 return $32 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 71 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 20 | 0;
 $12 = $6;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 103082, 1, HEAP32[$2 + 4 >> 2] | 0);
 $19 = __ZNSt3__26__clocEv() | 0;
 $20 = $$byval_copy;
 HEAP32[$20 >> 2] = $4;
 HEAP32[$20 + 4 >> 2] = $5;
 $25 = $7 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($7, 23, $19, $6, $$byval_copy) | 0) | 0;
 $26 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($7, $25, $2) | 0;
 HEAP32[$$byval_copy >> 2] = __ZNKSt3__28ios_base6getlocEv($2) | 0;
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($7, $26, $25, $8, $9, $10, $$byval_copy);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$$byval_copy >> 2] | 0) | 0;
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $30 = HEAP32[$9 >> 2] | 0;
 $31 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $32 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $8, $30, $31, $2, $3) | 0;
 STACKTOP = sp;
 return $32 | 0;
}

function __Z9lua_closeP9lua_State($0) {
 $0 = $0 | 0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $21 = 0, $26 = 0, $28 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0;
 $4 = HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 100 >> 2] | 0;
 __Z12LuaMutexLockP9lua_State($4 | 0);
 $5 = $4 + 32 | 0;
 __Z10luaF_closeP9lua_StateP10lua_TValue($4, HEAP32[$5 >> 2] | 0);
 __Z18luaC_separateudataP9lua_Statei($4, 1) | 0;
 HEAP32[$4 + 100 >> 2] = 0;
 $8 = $4 + 40 | 0;
 $9 = $4 + 20 | 0;
 $10 = $4 + 8 | 0;
 $11 = $4 + 12 | 0;
 $12 = $4 + 54 | 0;
 $13 = $4 + 52 | 0;
 do {
  $14 = HEAP32[$8 >> 2] | 0;
  HEAP32[$9 >> 2] = $14;
  $15 = HEAP32[$14 >> 2] | 0;
  HEAP32[$10 >> 2] = $15;
  HEAP32[$11 >> 2] = $15;
  HEAP16[$12 >> 1] = 0;
  HEAP16[$13 >> 1] = 0;
 } while ((__Z20luaD_rawrunprotectedP9lua_StatePFvS0_PvES1_($4, 45, 0) | 0) != 0);
 __Z15LuaDestroyMutexP9lua_State($4 | 0);
 $18 = $4 + 16 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 __Z10luaF_closeP9lua_StateP10lua_TValue($4, HEAP32[$5 >> 2] | 0);
 __Z12luaC_freeallP9lua_State($4);
 $21 = HEAP32[$18 >> 2] | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($4, HEAP32[$21 >> 2] | 0, HEAP32[$21 + 8 >> 2] << 2, 0) | 0;
 $26 = $19 + 52 | 0;
 $28 = $19 + 60 | 0;
 HEAP32[$26 >> 2] = __Z13luaM_realloc_P9lua_StatePvjj($4, HEAP32[$26 >> 2] | 0, HEAP32[$28 >> 2] | 0, 0) | 0;
 HEAP32[$28 >> 2] = 0;
 __Z13luaM_realloc_P9lua_StatePvjj($4, HEAP32[$8 >> 2] | 0, (HEAP32[$4 + 48 >> 2] | 0) * 24 | 0, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($4, HEAP32[$5 >> 2] | 0, HEAP32[$4 + 44 >> 2] << 3, 0) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[$19 + 12 >> 2] & 15](HEAP32[$19 + 16 >> 2] | 0, $4, 356, 0) | 0;
 return;
}

function __Z13luaV_tostringP9lua_StateP10lua_TValue($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0, $6 = 0.0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $3 = $1 + 4 | 0;
 if ((HEAP32[$3 >> 2] | 0) != 3) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $6 = +HEAPF32[$1 >> 2];
 if (!(__ZN13streflop_libm8__isnanfEf(+$6) | 0)) if (!(__ZN13streflop_libm8__isinffEf(+$6) | 0)) __Z15spring_lua_ftoafPci(+$6, $2 | 0, -1); else label = 5; else label = 5;
 L7 : do if ((label | 0) == 5) {
  if (__ZN13streflop_libm8__isnanfEf(+$6) | 0) {
   HEAP32[$2 >> 2] = 7233902;
   break;
  }
  switch (__ZN13streflop_libm8__isinffEf(+$6) | 0) {
  case 1:
   {
    HEAP8[$2 >> 0] = HEAP8[89502] | 0;
    HEAP8[$2 + 1 >> 0] = HEAP8[89503] | 0;
    HEAP8[$2 + 2 >> 0] = HEAP8[89504] | 0;
    HEAP8[$2 + 3 >> 0] = HEAP8[89505] | 0;
    HEAP8[$2 + 4 >> 0] = HEAP8[89506] | 0;
    break L7;
    break;
   }
  case -1:
   {
    HEAP8[$2 >> 0] = HEAP8[89507] | 0;
    HEAP8[$2 + 1 >> 0] = HEAP8[89508] | 0;
    HEAP8[$2 + 2 >> 0] = HEAP8[89509] | 0;
    HEAP8[$2 + 3 >> 0] = HEAP8[89510] | 0;
    HEAP8[$2 + 4 >> 0] = HEAP8[89511] | 0;
    break L7;
    break;
   }
  default:
   {
    dest = $2;
    src = 89512;
    stop = dest + 13 | 0;
    do {
     HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
     dest = dest + 1 | 0;
     src = src + 1 | 0;
    } while ((dest | 0) < (stop | 0));
    break L7;
   }
  }
 } while (0);
 HEAP32[$1 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $2, _strlen($2) | 0) | 0;
 HEAP32[$3 >> 2] = 4;
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL10gmatch_auxP9lua_State($0) {
 $0 = $0 | 0;
 var $$$i = 0, $$016$i = 0, $$03337 = 0, $$2 = 0, $1 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 $3 = __Z13lua_tolstringP9lua_StateiPj($0, -10003, $2) | 0;
 $4 = __Z13lua_tolstringP9lua_StateiPj($0, -10004, 0) | 0;
 $5 = $1 + 8 | 0;
 HEAP32[$5 >> 2] = $0;
 HEAP32[$1 >> 2] = $3;
 $6 = HEAP32[$2 >> 2] | 0;
 $8 = $1 + 4 | 0;
 HEAP32[$8 >> 2] = $3 + $6;
 $9 = __Z13lua_tointegerP9lua_Statei($0, -10005) | 0;
 if (($9 | 0) > ($6 | 0)) {
  $$2 = 0;
  STACKTOP = sp;
  return $$2 | 0;
 }
 $12 = $1 + 12 | 0;
 $$03337 = $3 + $9 | 0;
 while (1) {
  HEAP32[$12 >> 2] = 0;
  $13 = __ZL5matchP10MatchStatePKcS2_($1, $$03337, $4) | 0;
  if ($13 | 0) break;
  $26 = $$03337 + 1 | 0;
  if ($26 >>> 0 > (HEAP32[$8 >> 2] | 0) >>> 0) {
   $$2 = 0;
   label = 7;
   break;
  } else $$03337 = $26;
 }
 if ((label | 0) == 7) {
  STACKTOP = sp;
  return $$2 | 0;
 }
 __Z15lua_pushintegerP9lua_Statei($0, $13 - $3 + (($13 | 0) == ($$03337 | 0) & 1) | 0);
 __Z11lua_replaceP9lua_Statei($0, -10005);
 $20 = HEAP32[$12 >> 2] | 0;
 $$$i = ($$03337 | 0) != 0 & ($20 | 0) == 0 ? 1 : $20;
 __Z15luaL_checkstackP9lua_StateiPKc(HEAP32[$5 >> 2] | 0, $$$i, 88432);
 if (($$$i | 0) > 0) $$016$i = 0; else {
  $$2 = $$$i;
  STACKTOP = sp;
  return $$2 | 0;
 }
 do {
  __ZL15push_onecaptureP10MatchStateiPKcS2_($1, $$016$i, $$03337, $13);
  $$016$i = $$016$i + 1 | 0;
 } while (($$016$i | 0) != ($$$i | 0));
 $$2 = $$$i;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$4 = 0, $19 = 0, $20 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $9 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp;
 HEAP32[$2 >> 2] = HEAP32[HEAP32[$2 >> 2] >> 2];
 if (($0 | 0) == ($1 | 0) | ($1 | 0) == 1928) $$4 = 1; else if (!$1) $$4 = 0; else {
  $9 = ___dynamic_cast($1, 1784, 1888, 0) | 0;
  if (!$9) $$4 = 0; else if (!(HEAP32[$9 + 8 >> 2] & ~HEAP32[$0 + 8 >> 2])) {
   $19 = HEAP32[$0 + 12 >> 2] | 0;
   $20 = $9 + 12 | 0;
   if (($19 | 0) == 1920 ? 1 : ($19 | 0) == (HEAP32[$20 >> 2] | 0)) $$4 = 1; else if (!$19) $$4 = 0; else {
    $25 = ___dynamic_cast($19, 1784, 1768, 0) | 0;
    if (!$25) $$4 = 0; else {
     $27 = HEAP32[$20 >> 2] | 0;
     if (!$27) $$4 = 0; else {
      $29 = ___dynamic_cast($27, 1784, 1768, 0) | 0;
      if (!$29) $$4 = 0; else {
       dest = $3 + 4 | 0;
       stop = dest + 52 | 0;
       do {
        HEAP32[dest >> 2] = 0;
        dest = dest + 4 | 0;
       } while ((dest | 0) < (stop | 0));
       HEAP32[$3 >> 2] = $29;
       HEAP32[$3 + 8 >> 2] = $25;
       HEAP32[$3 + 12 >> 2] = -1;
       HEAP32[$3 + 48 >> 2] = 1;
       FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$29 >> 2] | 0) + 28 >> 2] & 15]($29, $3, HEAP32[$2 >> 2] | 0, 1);
       if ((HEAP32[$3 + 24 >> 2] | 0) == 1) {
        HEAP32[$2 >> 2] = HEAP32[$3 + 16 >> 2];
        $$0 = 1;
       } else $$0 = 0;
       $$4 = $$0;
      }
     }
    }
   }
  } else $$4 = 0;
 }
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $12 = 0, $22 = 0, $23 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $35 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $0 = sp + 36 | 0;
 $1 = ___cxa_get_globals_fast() | 0;
 if ($1 | 0) {
  $3 = HEAP32[$1 >> 2] | 0;
  if ($3 | 0) {
   $7 = $3 + 48 | 0;
   $9 = HEAP32[$7 >> 2] | 0;
   $12 = HEAP32[$7 + 4 >> 2] | 0;
   if (!(($9 & -256 | 0) == 1126902528 & ($12 | 0) == 1129074247)) {
    HEAP32[$vararg_buffer7 >> 2] = HEAP32[19198];
    _abort_message(105498, $vararg_buffer7);
   }
   if (($9 | 0) == 1126902529 & ($12 | 0) == 1129074247) $22 = HEAP32[$3 + 44 >> 2] | 0; else $22 = $3 + 80 | 0;
   HEAP32[$0 >> 2] = $22;
   $23 = HEAP32[$3 >> 2] | 0;
   $25 = HEAP32[$23 + 4 >> 2] | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[440] | 0) + 16 >> 2] & 63](1760, $23, $0) | 0) {
    $30 = HEAP32[$0 >> 2] | 0;
    $31 = HEAP32[19198] | 0;
    $35 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 8 >> 2] & 255]($30) | 0;
    HEAP32[$vararg_buffer >> 2] = $31;
    HEAP32[$vararg_buffer + 4 >> 2] = $25;
    HEAP32[$vararg_buffer + 8 >> 2] = $35;
    _abort_message(105412, $vararg_buffer);
   } else {
    HEAP32[$vararg_buffer3 >> 2] = HEAP32[19198];
    HEAP32[$vararg_buffer3 + 4 >> 2] = $25;
    _abort_message(105457, $vararg_buffer3);
   }
  }
 }
 _abort_message(105536, $vararg_buffer10);
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $9 = 0;
 if (($0 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4); else {
  $9 = $1 + 52 | 0;
  $10 = HEAP16[$9 >> 1] | 0;
  $11 = $10 & 255;
  $12 = $1 + 53 | 0;
  $14 = ($10 & 65535) >>> 8 & 255;
  $17 = HEAP32[$0 + 12 >> 2] | 0;
  $18 = $0 + 16 + ($17 << 3) | 0;
  HEAP8[$9 >> 0] = 0;
  HEAP8[$12 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0 + 16 | 0, $1, $2, $3, $4, $5);
  L4 : do if (($17 | 0) > 1) {
   $21 = $1 + 24 | 0;
   $22 = $0 + 8 | 0;
   $23 = $1 + 54 | 0;
   $$0 = $0 + 24 | 0;
   do {
    if (HEAP8[$23 >> 0] | 0) break L4;
    $26 = HEAP16[$9 >> 1] | 0;
    if (!(($26 & 255) << 24 >> 24)) {
     if (($26 & 65535) >= 256) if (!(HEAP32[$22 >> 2] & 1)) break L4;
    } else {
     if ((HEAP32[$21 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[$22 >> 2] & 2)) break L4;
    }
    HEAP8[$9 >> 0] = 0;
    HEAP8[$12 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$0, $1, $2, $3, $4, $5);
    $$0 = $$0 + 8 | 0;
   } while ($$0 >>> 0 < $18 >>> 0);
  } while (0);
  HEAP8[$9 >> 0] = $11;
  HEAP8[$12 >> 0] = $14;
 }
 return;
}

function __ZL4addkP9FuncStateP10lua_TValueS2_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$04950 = 0, $10 = 0, $11 = 0, $16 = 0, $20 = 0, $22 = 0, $26 = 0, $27 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $42 = 0, $51 = 0, $7 = 0, $8 = 0, $9 = 0;
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 $7 = __Z8luaH_setP9lua_StateP5TablePK10lua_TValue($4, HEAP32[$0 + 4 >> 2] | 0, $1) | 0;
 $8 = HEAP32[$0 >> 2] | 0;
 $9 = $8 + 40 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $7 + 4 | 0;
 if ((HEAP32[$11 >> 2] | 0) == 3) {
  $$0 = ~~+HEAPF32[$7 >> 2];
  return $$0 | 0;
 }
 $16 = $0 + 40 | 0;
 HEAPF32[$7 >> 2] = +(HEAP32[$16 >> 2] | 0);
 HEAP32[$11 >> 2] = 3;
 $20 = HEAP32[$9 >> 2] | 0;
 if ((HEAP32[$16 >> 2] | 0) < ($20 | 0)) $26 = $20; else {
  $22 = $8 + 8 | 0;
  HEAP32[$22 >> 2] = __Z13luaM_growaux_P9lua_StatePvPijiPKc($4, HEAP32[$22 >> 2] | 0, $9, 8, 262143, 89777) | 0;
  $26 = HEAP32[$9 >> 2] | 0;
 }
 $27 = $8 + 8 | 0;
 if (($10 | 0) < ($26 | 0)) {
  $$04950 = $10;
  do {
   HEAP32[(HEAP32[$27 >> 2] | 0) + ($$04950 << 3) + 4 >> 2] = 0;
   $$04950 = $$04950 + 1 | 0;
  } while (($$04950 | 0) < (HEAP32[$9 >> 2] | 0));
 }
 $33 = HEAP32[$16 >> 2] | 0;
 $34 = HEAP32[$27 >> 2] | 0;
 HEAP32[$34 + ($33 << 3) >> 2] = HEAP32[$2 >> 2];
 $37 = $2 + 4 | 0;
 HEAP32[$34 + ($33 << 3) + 4 >> 2] = HEAP32[$37 >> 2];
 if ((HEAP32[$37 >> 2] | 0) > 3) {
  $42 = HEAP32[$2 >> 2] | 0;
  if (HEAP8[$42 + 5 >> 0] & 3) if (HEAP8[$8 + 5 >> 0] & 4) __Z13luaC_barrierfP9lua_StateP8GCObjectS2_($4, $8, $42);
 }
 $51 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = $51 + 1;
 $$0 = $51;
 return $$0 | 0;
}

function __Z9luaZ_readP3ZioPvj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$$020 = 0, $$02031 = 0, $$02230 = 0, $$2 = 0, $10 = 0, $12 = 0, $17 = 0, $19 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if (!$2) {
  $$2 = 0;
  STACKTOP = sp;
  return $$2 | 0;
 }
 $5 = $0 + 16 | 0;
 $6 = $0 + 20 | 0;
 $7 = $0 + 8 | 0;
 $8 = $0 + 12 | 0;
 $9 = $0 + 4 | 0;
 $$02031 = $2;
 $$02230 = $1;
 $10 = HEAP32[$0 >> 2] | 0;
 while (1) {
  if (!$10) {
   $12 = HEAP32[$5 >> 2] | 0;
   if (HEAP32[$6 >> 2] | 0) break;
   __Z14LuaMutexUnlockP9lua_State($12 | 0);
   $17 = FUNCTION_TABLE_iiii[HEAP32[$7 >> 2] & 63]($12, HEAP32[$8 >> 2] | 0, $3) | 0;
   __Z12LuaMutexLockP9lua_State($12 | 0);
   $19 = HEAP32[$3 >> 2] | 0;
   if (($17 | 0) == 0 | ($19 | 0) == 0) {
    label = 7;
    break;
   }
   HEAP32[$0 >> 2] = $19;
   HEAP32[$9 >> 2] = $17;
   $22 = $19;
   $23 = $17;
  } else {
   $22 = $10;
   $23 = HEAP32[$9 >> 2] | 0;
  }
  $$$020 = $$02031 >>> 0 > $22 >>> 0 ? $22 : $$02031;
  _memcpy($$02230 | 0, $23 | 0, $$$020 | 0) | 0;
  $10 = (HEAP32[$0 >> 2] | 0) - $$$020 | 0;
  HEAP32[$0 >> 2] = $10;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + $$$020;
  $29 = $$02031 - $$$020 | 0;
  if (!$29) {
   $$2 = 0;
   label = 11;
   break;
  } else {
   $$02031 = $29;
   $$02230 = $$02230 + $$$020 | 0;
  }
 }
 if ((label | 0) == 7) HEAP32[$6 >> 2] = 1; else if ((label | 0) == 11) {
  STACKTOP = sp;
  return $$2 | 0;
 }
 $$2 = $$02031;
 STACKTOP = sp;
 return $$2 | 0;
}

function __Z9luaK_selfP9FuncStateP7expdescS2_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $13 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $31 = 0, $32 = 0, $33 = 0, $40 = 0, $48 = 0, $6 = 0;
 __Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $1) | 0;
 if ((HEAP32[$1 >> 2] | 0) == 12) {
  $6 = HEAP32[$1 + 4 >> 2] | 0;
  if (!($6 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($6 | 0)) {
   $13 = $0 + 36 | 0;
   HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + -1;
  }
 }
 $16 = $0 + 36 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $17 + 2 | 0;
 $19 = HEAP32[$0 >> 2] | 0;
 if (($18 | 0) > (HEAPU8[$19 + 75 >> 0] | 0 | 0)) {
  if (($18 | 0) > 249) {
   __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
   $29 = HEAP32[$0 >> 2] | 0;
  } else $29 = $19;
  HEAP8[$29 + 75 >> 0] = $18;
  $31 = HEAP32[$16 >> 2] | 0;
 } else $31 = $17;
 HEAP32[$16 >> 2] = $31 + 2;
 $32 = $1 + 4 | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 $40 = $17 << 6 | $33 << 23 | (__Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0) << 14 | 11;
 __ZL9luaK_codeP9FuncStateji($0, $40, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
 if ((HEAP32[$2 >> 2] | 0) != 12) {
  HEAP32[$32 >> 2] = $17;
  HEAP32[$1 >> 2] = 12;
  return;
 }
 $48 = HEAP32[$2 + 4 >> 2] | 0;
 if ($48 & 256 | 0) {
  HEAP32[$32 >> 2] = $17;
  HEAP32[$1 >> 2] = 12;
  return;
 }
 if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) > ($48 | 0)) {
  HEAP32[$32 >> 2] = $17;
  HEAP32[$1 >> 2] = 12;
  return;
 }
 HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + -1;
 HEAP32[$32 >> 2] = $17;
 HEAP32[$1 >> 2] = 12;
 return;
}

function __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$in$i = 0, $$in = 0, $$lcssa = 0, $11 = 0, $20 = 0, $22 = 0, $25 = 0, $29 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$4 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$4 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
 $11 = HEAP32[$0 + 20 >> 2] | 0;
 if (($11 | 0) == (HEAP32[$0 + 40 >> 2] | 0)) $$0$in$i = $0 + 72 | 0; else $$0$in$i = (HEAP32[HEAP32[$11 + 4 >> 2] >> 2] | 0) + 12 | 0;
 $20 = __Z16luaF_newCclosureP9lua_StateiP5Table($0, $2, HEAP32[$$0$in$i >> 2] | 0) | 0;
 HEAP32[$20 + 16 >> 2] = $1;
 $22 = $0 + 8 | 0;
 $25 = (HEAP32[$22 >> 2] | 0) + (0 - $2 << 3) | 0;
 HEAP32[$22 >> 2] = $25;
 if (!$2) {
  $$lcssa = $25;
  HEAP32[$$lcssa >> 2] = $20;
  $37 = $$lcssa + 4 | 0;
  HEAP32[$37 >> 2] = 6;
  $38 = HEAP32[$22 >> 2] | 0;
  $39 = $38 + 8 | 0;
  HEAP32[$22 >> 2] = $39;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 } else {
  $$in = $2;
  $29 = $25;
 }
 while (1) {
  $$in = $$in + -1 | 0;
  HEAP32[$20 + 20 + ($$in << 3) >> 2] = HEAP32[$29 + ($$in << 3) >> 2];
  HEAP32[$20 + 20 + ($$in << 3) + 4 >> 2] = HEAP32[$29 + ($$in << 3) + 4 >> 2];
  $36 = HEAP32[$22 >> 2] | 0;
  if (!$$in) {
   $$lcssa = $36;
   break;
  } else $29 = $36;
 }
 HEAP32[$$lcssa >> 2] = $20;
 $37 = $$lcssa + 4 | 0;
 HEAP32[$37 >> 2] = 6;
 $38 = HEAP32[$22 >> 2] | 0;
 $39 = $38 + 8 | 0;
 HEAP32[$22 >> 2] = $39;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __Z12luaO_chunkidPcPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$034 = 0, $13 = 0, $14 = 0, $7 = 0, $8 = 0, $9 = 0, $endptr = 0, $endptr36 = 0, $endptr38 = 0, dest = 0, src = 0, stop = 0;
 switch (HEAP8[$1 >> 0] | 0) {
 case 61:
  {
   _strncpy($0, $1 + 1 | 0, $2) | 0;
   HEAP8[$0 + ($2 + -1) >> 0] = 0;
   return;
  }
 case 64:
  {
   $7 = $1 + 1 | 0;
   $8 = $2 + -8 | 0;
   $9 = _strlen($7) | 0;
   HEAP8[$0 >> 0] = 0;
   if ($9 >>> 0 > $8 >>> 0) {
    $endptr38 = $0 + (_strlen($0) | 0) | 0;
    HEAP8[$endptr38 >> 0] = 46;
    HEAP8[$endptr38 + 1 >> 0] = 46;
    HEAP8[$endptr38 + 2 >> 0] = 46;
    HEAP8[$endptr38 + 3 >> 0] = 0;
    $$034 = $7 + ($9 - $8) | 0;
   } else $$034 = $7;
   _strcat($0, $$034) | 0;
   return;
  }
 default:
  {
   $13 = _strcspn($1, 87681) | 0;
   $14 = $2 + -17 | 0;
   $$ = $13 >>> 0 > $14 >>> 0 ? $14 : $13;
   dest = $0;
   src = 87684;
   stop = dest + 10 | 0;
   do {
    HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
    dest = dest + 1 | 0;
    src = src + 1 | 0;
   } while ((dest | 0) < (stop | 0));
   if (!(HEAP8[$1 + $$ >> 0] | 0)) _strcat($0, $1) | 0; else {
    _strncat($0, $1, $$) | 0;
    $endptr36 = $0 + (_strlen($0) | 0) | 0;
    HEAP8[$endptr36 >> 0] = 46;
    HEAP8[$endptr36 + 1 >> 0] = 46;
    HEAP8[$endptr36 + 2 >> 0] = 46;
    HEAP8[$endptr36 + 3 >> 0] = 0;
   }
   $endptr = $0 + (_strlen($0) | 0) | 0;
   HEAP8[$endptr >> 0] = HEAP8[87694] | 0;
   HEAP8[$endptr + 1 >> 0] = HEAP8[87695] | 0;
   HEAP8[$endptr + 2 >> 0] = HEAP8[87696] | 0;
   return;
  }
 }
}

function _log_backend_record($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$05$i$i = 0, $$sroa$020$025 = 0, $15 = 0, $18 = 0, $21 = 0, $28 = 0, $30 = 0, $33 = 0;
 if (!(HEAP8[106112] | 0)) if (___cxa_guard_acquire(106112) | 0) {
  HEAP32[26740] = 0;
  HEAP32[26741] = 0;
  HEAP32[26739] = 106960;
  ___cxa_atexit(159, 106956, ___dso_handle | 0) | 0;
 }
 if (!(HEAP32[26741] | 0)) return;
 HEAP32[16916] = $1;
 HEAP32[16917] = $2;
 HEAP32[16918] = $0;
 _log_formatter_format(34896, $3);
 if (!(HEAP8[2112] | 0)) $15 = 0; else $15 = (_strcasecmp(34896, 2112) | 0) == 0;
 $18 = $15 ? (HEAP32[16919] | 0) + ($15 & 1) | 0 : 0;
 HEAP32[16919] = $18;
 if (($18 | 0) >= (_log_filter_getRepeatLimit() | 0)) return;
 $21 = HEAP32[26739] | 0;
 if (($21 | 0) != 106960) {
  $$sroa$020$025 = $21;
  while (1) {
   FUNCTION_TABLE_viii[HEAP32[$$sroa$020$025 + 16 >> 2] & 7]($0, $1, 34896);
   $28 = HEAP32[$$sroa$020$025 + 4 >> 2] | 0;
   if (!$28) {
    $$0$i$i = $$sroa$020$025;
    while (1) {
     $33 = HEAP32[$$0$i$i + 8 >> 2] | 0;
     if ((HEAP32[$33 >> 2] | 0) == ($$0$i$i | 0)) {
      $$05$i$i = $33;
      break;
     } else $$0$i$i = $33;
    }
   } else {
    $$0$i$i$i = $28;
    while (1) {
     $30 = HEAP32[$$0$i$i$i >> 2] | 0;
     if (!$30) {
      $$05$i$i = $$0$i$i$i;
      break;
     } else $$0$i$i$i = $30;
    }
   }
   if (($$05$i$i | 0) == 106960) break; else $$sroa$020$025 = $$05$i$i;
  }
 }
 if ((HEAP32[16919] | 0) > 0) return;
 _memcpy(2112, 34896, 32768) | 0;
 return;
}

function __ZNSt3__210__stdinbufIwE9pbackfailEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $17 = 0, $2 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $7 = $0 + 52 | 0;
 $9 = (HEAP8[$7 >> 0] | 0) != 0;
 L1 : do if (($1 | 0) == -1) if ($9) $$1 = -1; else {
  $11 = HEAP32[$0 + 48 >> 2] | 0;
  HEAP8[$7 >> 0] = ($11 | 0) != -1 & 1;
  $$1 = $11;
 } else {
  L5 : do if ($9) {
   $14 = $0 + 48 | 0;
   HEAP32[$4 >> 2] = HEAP32[$14 >> 2];
   $17 = HEAP32[$0 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 12 >> 2] & 15]($17, HEAP32[$0 + 40 >> 2] | 0, $4, $4 + 4 | 0, $5, $2, $2 + 8 | 0, $3) | 0) {
   case 1:
   case 2:
    break;
   case 3:
    {
     HEAP8[$2 >> 0] = HEAP32[$14 >> 2];
     HEAP32[$3 >> 2] = $2 + 1;
     label = 8;
     break;
    }
   default:
    label = 8;
   }
   L9 : do if ((label | 0) == 8) {
    $29 = $0 + 32 | 0;
    while (1) {
     $30 = HEAP32[$3 >> 2] | 0;
     if ($30 >>> 0 <= $2 >>> 0) break;
     $32 = $30 + -1 | 0;
     HEAP32[$3 >> 2] = $32;
     if ((_ungetc(HEAP8[$32 >> 0] | 0, HEAP32[$29 >> 2] | 0) | 0) == -1) break L9;
    }
    $$pre$phiZ2D = $14;
    break L5;
   } while (0);
   $$1 = -1;
   break L1;
  } else $$pre$phiZ2D = $0 + 48 | 0; while (0);
  HEAP32[$$pre$phiZ2D >> 2] = $1;
  HEAP8[$7 >> 0] = 1;
  $$1 = $1;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$029 = 0, $$030 = 0, $$07$i$i = 0, $13 = 0, $15 = 0, $19 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond32 = 0, label = 0;
 $5 = HEAP8[$0 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $7 = $0 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $5 & 255;
 do if (($6 ? $8 : $9) | 0) {
  if (($1 | 0) == ($2 | 0)) $20 = $8; else {
   $$0$i$i = $2;
   $$07$i$i = $1;
   while (1) {
    $13 = $$0$i$i + -4 | 0;
    if ($$07$i$i >>> 0 >= $13 >>> 0) break;
    $15 = HEAP32[$$07$i$i >> 2] | 0;
    HEAP32[$$07$i$i >> 2] = HEAP32[$13 >> 2];
    HEAP32[$13 >> 2] = $15;
    $$0$i$i = $13;
    $$07$i$i = $$07$i$i + 4 | 0;
   }
   $20 = HEAP32[$7 >> 2] | 0;
  }
  $19 = $6 ? HEAP32[$0 >> 2] | 0 : $0;
  $23 = $2 + -4 | 0;
  $24 = $19 + ($6 ? $20 : $9) | 0;
  $$029 = $1;
  $$030 = $19;
  while (1) {
   $26 = HEAP8[$$030 >> 0] | 0;
   $or$cond32 = $26 << 24 >> 24 > 0 & $26 << 24 >> 24 != 127;
   if ($$029 >>> 0 >= $23 >>> 0) break;
   if ($or$cond32) if (($26 << 24 >> 24 | 0) != (HEAP32[$$029 >> 2] | 0)) {
    label = 10;
    break;
   }
   $$029 = $$029 + 4 | 0;
   $$030 = ($24 - $$030 | 0) > 1 ? $$030 + 1 | 0 : $$030;
  }
  if ((label | 0) == 10) {
   HEAP32[$3 >> 2] = 4;
   break;
  }
  if ($or$cond32) if (((HEAP32[$23 >> 2] | 0) + -1 | 0) >>> 0 >= $26 << 24 >> 24 >>> 0) HEAP32[$3 >> 2] = 4;
 } while (0);
 return;
}

function __ZNSt3__210__stdinbufIcE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $18 = 0, $2 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $7 = $0 + 52 | 0;
 $9 = (HEAP8[$7 >> 0] | 0) != 0;
 L1 : do if (($1 | 0) == -1) if ($9) $$1 = -1; else {
  $11 = HEAP32[$0 + 48 >> 2] | 0;
  HEAP8[$7 >> 0] = ($11 | 0) != -1 & 1;
  $$1 = $11;
 } else {
  L5 : do if ($9) {
   $14 = $0 + 48 | 0;
   HEAP8[$4 >> 0] = HEAP32[$14 >> 2];
   $18 = HEAP32[$0 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 12 >> 2] & 15]($18, HEAP32[$0 + 40 >> 2] | 0, $4, $4 + 1 | 0, $5, $2, $2 + 8 | 0, $3) | 0) {
   case 1:
   case 2:
    break;
   case 3:
    {
     HEAP8[$2 >> 0] = HEAP32[$14 >> 2];
     HEAP32[$3 >> 2] = $2 + 1;
     label = 8;
     break;
    }
   default:
    label = 8;
   }
   L9 : do if ((label | 0) == 8) {
    $30 = $0 + 32 | 0;
    while (1) {
     $31 = HEAP32[$3 >> 2] | 0;
     if ($31 >>> 0 <= $2 >>> 0) break;
     $33 = $31 + -1 | 0;
     HEAP32[$3 >> 2] = $33;
     if ((_ungetc(HEAP8[$33 >> 0] | 0, HEAP32[$30 >> 2] | 0) | 0) == -1) break L9;
    }
    $$pre$phiZ2D = $14;
    break L5;
   } while (0);
   $$1 = -1;
   break L1;
  } else $$pre$phiZ2D = $0 + 48 | 0; while (0);
  HEAP32[$$pre$phiZ2D >> 2] = $1;
  HEAP8[$7 >> 0] = 1;
  $$1 = $1;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN10CGameSetupC2Ev($0) {
 $0 = $0 | 0;
 var $11 = 0, $12 = 0, $14 = 0, $17 = 0, $2 = 0, $3 = 0, $5 = 0, $8 = 0, dest = 0, stop = 0;
 $2 = $0 + 132 | 0;
 $3 = $0 + 148 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 dest = $0 + 44 | 0;
 stop = dest + 84 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 >> 2] = -1;
 HEAP32[$0 + 152 >> 2] = 0;
 $5 = $0 + 160 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$5 + 12 >> 2] = 0;
 HEAP32[$0 + 176 >> 2] = -1;
 HEAP32[$0 + 180 >> 2] = 0;
 $8 = $0 + 188 | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 HEAP32[$8 + 12 >> 2] = 0;
 HEAP32[$0 + 204 >> 2] = -1;
 $11 = $0 + 276 | 0;
 $12 = $0 + 292 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 dest = $0 + 208 | 0;
 stop = dest + 64 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$12 >> 2] = -1;
 HEAP32[$0 + 296 >> 2] = 0;
 $14 = $0 + 304 | 0;
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 HEAP32[$14 + 12 >> 2] = 0;
 HEAP32[$0 + 320 >> 2] = -1;
 HEAP32[$0 + 324 >> 2] = 0;
 $17 = $0 + 332 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$0 + 348 >> 2] = -1;
 HEAP32[$0 + 352 >> 2] = 0;
 __ZN10CGameSetup10ResetStateEv($0);
 return;
}

function __Z12lua_setfieldP9lua_StateiPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1$i = 0, $24 = 0, $3 = 0, $33 = 0, $34 = 0, $45 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $8 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $8 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $8 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $24 = $0 + 80 | 0;
    HEAP32[$24 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $24;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $33 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $34 = -10002 - $1 | 0;
    $$1$i = ($34 | 0) > (HEAPU8[$33 + 7 >> 0] | 0 | 0) ? 108164 : $33 + 20 + ($34 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 HEAP32[$3 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $2, _strlen($2) | 0) | 0;
 HEAP32[$3 + 4 >> 2] = 4;
 $45 = $0 + 8 | 0;
 __Z13luaV_settableP9lua_StatePK10lua_TValuePS1_S4_($0, $$1$i, $3, (HEAP32[$45 >> 2] | 0) + -8 | 0);
 HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + -8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 STACKTOP = sp;
 return;
}

function __ZNK13ConfigHandler3GetIiEET_RKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $15 = 0, $2 = 0, $3 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] & 7]($3, $0, $1);
 $7 = $2 + 60 | 0;
 $8 = $2 + 8 | 0;
 HEAP32[$2 >> 2] = 68004;
 HEAP32[$7 >> 2] = 68024;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($2 + 60 | 0, $8);
 HEAP32[$2 + 132 >> 2] = 0;
 HEAP32[$2 + 136 >> 2] = -1;
 HEAP32[$2 >> 2] = 68044;
 HEAP32[$7 >> 2] = 68064;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($8);
 HEAP32[$8 >> 2] = 67920;
 $13 = $2 + 40 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP32[$13 + 12 >> 2] = 0;
 HEAP32[$2 + 56 >> 2] = 8;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($8, $3);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERi($2, $3) | 0;
 $15 = HEAP32[$3 >> 2] | 0;
 HEAP32[$2 >> 2] = 68044;
 HEAP32[$7 >> 2] = 68064;
 HEAP32[$8 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($2, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($7);
 STACKTOP = sp;
 return $15 | 0;
}

function __Z12lua_getfieldP9lua_StateiPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1$i = 0, $24 = 0, $3 = 0, $33 = 0, $34 = 0, $45 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $8 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $8 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $8 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $24 = $0 + 80 | 0;
    HEAP32[$24 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $24;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $33 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $34 = -10002 - $1 | 0;
    $$1$i = ($34 | 0) > (HEAPU8[$33 + 7 >> 0] | 0 | 0) ? 108164 : $33 + 20 + ($34 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 HEAP32[$3 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $2, _strlen($2) | 0) | 0;
 HEAP32[$3 + 4 >> 2] = 4;
 $45 = $0 + 8 | 0;
 __Z13luaV_gettableP9lua_StatePK10lua_TValuePS1_S4_($0, $$1$i, $3, HEAP32[$45 >> 2] | 0);
 HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 STACKTOP = sp;
 return;
}

function __ZNK8LuaTable9PushTableEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$pre = 0, $1 = 0, $11 = 0, $19 = 0, $23 = 0, $29 = 0, $30 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $1 = $0 + 12 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $4 = $0 + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $$pre = $0 + 16 | 0;
 if (($5 | 0) != -2) if ((HEAP32[(HEAP32[$$pre >> 2] | 0) + 128 >> 2] | 0) == ($5 | 0)) {
  $11 = $0 + 20 | 0;
  if ((__Z8lua_typeP9lua_Statei(HEAP32[$11 >> 2] | 0, -1) | 0) == 5) {
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $19 = HEAP32[$0 >> 2] | 0; else $19 = $0;
  HEAP32[$vararg_buffer >> 2] = $19;
  _log_frontend_record(50, 114224, 83811, $vararg_buffer);
  HEAP32[(HEAP32[$$pre >> 2] | 0) + 128 >> 2] = -2;
  __Z10lua_settopP9lua_Statei(HEAP32[$11 >> 2] | 0, 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $23 = $0 + 20 | 0;
 __Z10lua_settopP9lua_Statei(HEAP32[$23 >> 2] | 0, 0);
 __Z11lua_rawgetiP9lua_Stateii(HEAP32[$23 >> 2] | 0, -1e4, HEAP32[$4 >> 2] | 0);
 $29 = (__Z8lua_typeP9lua_Statei(HEAP32[$23 >> 2] | 0, -1) | 0) == 5;
 $30 = HEAP32[$$pre >> 2] | 0;
 if ($29) {
  HEAP32[$30 + 128 >> 2] = HEAP32[$4 >> 2];
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP8[$1 >> 0] = 0;
  HEAP32[$30 + 128 >> 2] = -2;
  __Z10lua_settopP9lua_Statei(HEAP32[$23 >> 2] | 0, 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}
function __ZL9open_funcP8LexStateP9FuncState($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $19 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0;
 $3 = HEAP32[$0 + 32 >> 2] | 0;
 $4 = __Z13luaF_newprotoP9lua_State($3) | 0;
 HEAP32[$1 >> 2] = $4;
 $5 = $0 + 28 | 0;
 HEAP32[$1 + 8 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$1 + 12 >> 2] = $0;
 HEAP32[$1 + 16 >> 2] = $3;
 HEAP32[$5 >> 2] = $1;
 HEAP32[$1 + 24 >> 2] = 0;
 HEAP32[$1 + 28 >> 2] = -1;
 HEAP32[$1 + 32 >> 2] = -1;
 $13 = $1 + 36 | 0;
 HEAP32[$1 + 20 >> 2] = 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP16[$13 + 12 >> 1] = 0;
 HEAP8[$13 + 14 >> 0] = 0;
 HEAP32[$4 + 32 >> 2] = HEAP32[$0 + 44 >> 2];
 HEAP8[$4 + 75 >> 0] = 2;
 $19 = __Z8luaH_newP9lua_Stateii($3, 0, 0) | 0;
 HEAP32[$1 + 4 >> 2] = $19;
 $21 = $3 + 8 | 0;
 $22 = HEAP32[$21 >> 2] | 0;
 HEAP32[$22 >> 2] = $19;
 HEAP32[$22 + 4 >> 2] = 5;
 $24 = $3 + 28 | 0;
 $26 = HEAP32[$21 >> 2] | 0;
 if (((HEAP32[$24 >> 2] | 0) - $26 | 0) < 9) {
  __Z14luaD_growstackP9lua_Statei($3, 1);
  $31 = HEAP32[$21 >> 2] | 0;
 } else $31 = $26;
 $30 = $31 + 8 | 0;
 HEAP32[$21 >> 2] = $30;
 HEAP32[$30 >> 2] = $4;
 HEAP32[$31 + 12 >> 2] = 9;
 $34 = HEAP32[$21 >> 2] | 0;
 if (((HEAP32[$24 >> 2] | 0) - $34 | 0) >= 9) {
  $39 = $34;
  $38 = $39 + 8 | 0;
  HEAP32[$21 >> 2] = $38;
  return;
 }
 __Z14luaD_growstackP9lua_Statei($3, 1);
 $39 = HEAP32[$21 >> 2] | 0;
 $38 = $39 + 8 | 0;
 HEAP32[$21 >> 2] = $38;
 return;
}

function __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $27 = 0, $3 = 0, $30 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 if ((HEAP32[$1 + 12 >> 2] | 0) == (HEAP32[$1 + 16 >> 2] | 0)) __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $1); else __Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $1) | 0;
 $9 = HEAP32[$1 >> 2] | 0;
 switch ($9 | 0) {
 case 1:
 case 3:
 case 2:
 case 5:
  {
   if ((HEAP32[$0 + 40 >> 2] | 0) < 256) {
    switch ($9 | 0) {
    case 1:
     {
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$2 >> 2] = HEAP32[$0 + 4 >> 2];
      HEAP32[$2 + 4 >> 2] = 5;
      $27 = __ZL4addkP9FuncStateP10lua_TValueS2_($0, $2, $3) | 0;
      break;
     }
    case 5:
     {
      HEAP32[$2 >> 2] = HEAP32[$1 + 4 >> 2];
      HEAP32[$2 + 4 >> 2] = 3;
      $27 = __ZL4addkP9FuncStateP10lua_TValueS2_($0, $2, $2) | 0;
      break;
     }
    default:
     {
      HEAP32[$2 >> 2] = ($9 | 0) == 2 & 1;
      HEAP32[$2 + 4 >> 2] = 1;
      $27 = __ZL4addkP9FuncStateP10lua_TValueS2_($0, $2, $2) | 0;
     }
    }
    HEAP32[$1 + 4 >> 2] = $27;
    HEAP32[$1 >> 2] = 4;
    $$0 = $27 | 256;
    STACKTOP = sp;
    return $$0 | 0;
   }
   break;
  }
 case 4:
  {
   $30 = HEAP32[$1 + 4 >> 2] | 0;
   if (($30 | 0) < 256) {
    $$0 = $30 | 256;
    STACKTOP = sp;
    return $$0 | 0;
   }
   break;
  }
 default:
  {}
 }
 $$0 = __Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $1) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK35TypedStringConvertibleOptionalValueIiE8ToStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $2 = sp + 136 | 0;
 $3 = sp;
 $4 = $3 + 56 | 0;
 $5 = $3 + 4 | 0;
 HEAP32[$3 >> 2] = 68384;
 HEAP32[$4 >> 2] = 68404;
 __ZNSt3__28ios_base4initEPv($3 + 56 | 0, $5);
 HEAP32[$3 + 128 >> 2] = 0;
 HEAP32[$3 + 132 >> 2] = -1;
 HEAP32[$3 >> 2] = 67884;
 HEAP32[$4 >> 2] = 67904;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 HEAP32[$5 >> 2] = 67920;
 $9 = $3 + 36 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP32[$9 + 12 >> 2] = 0;
 HEAP32[$3 + 52 >> 2] = 16;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($5, $2);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($3, HEAP32[$1 + 8 >> 2] | 0) | 0;
 __ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($0, $5);
 HEAP32[$3 >> 2] = 67884;
 HEAP32[$4 >> 2] = 67904;
 HEAP32[$5 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($3, 67860);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function ___strchrnul($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $13 = 0, $17 = 0, $18 = 0, $2 = 0, $24 = 0, $25 = 0, $31 = 0, $38 = 0, $39 = 0, $7 = 0;
 $2 = $1 & 255;
 L1 : do if (!$2) $$0 = $0 + (_strlen($0) | 0) | 0; else {
  if (!($0 & 3)) $$030$lcssa = $0; else {
   $7 = $1 & 255;
   $$03039 = $0;
   while (1) {
    $10 = HEAP8[$$03039 >> 0] | 0;
    if ($10 << 24 >> 24 == 0 ? 1 : $10 << 24 >> 24 == $7 << 24 >> 24) {
     $$0 = $$03039;
     break L1;
    }
    $13 = $$03039 + 1 | 0;
    if (!($13 & 3)) {
     $$030$lcssa = $13;
     break;
    } else $$03039 = $13;
   }
  }
  $17 = Math_imul($2, 16843009) | 0;
  $18 = HEAP32[$$030$lcssa >> 2] | 0;
  L10 : do if (!(($18 & -2139062144 ^ -2139062144) & $18 + -16843009)) {
   $$02936 = $$030$lcssa;
   $25 = $18;
   while (1) {
    $24 = $25 ^ $17;
    if (($24 & -2139062144 ^ -2139062144) & $24 + -16843009 | 0) {
     $$029$lcssa = $$02936;
     break L10;
    }
    $31 = $$02936 + 4 | 0;
    $25 = HEAP32[$31 >> 2] | 0;
    if (($25 & -2139062144 ^ -2139062144) & $25 + -16843009 | 0) {
     $$029$lcssa = $31;
     break;
    } else $$02936 = $31;
   }
  } else $$029$lcssa = $$030$lcssa; while (0);
  $38 = $1 & 255;
  $$1 = $$029$lcssa;
  while (1) {
   $39 = HEAP8[$$1 >> 0] | 0;
   if ($39 << 24 >> 24 == 0 ? 1 : $39 << 24 >> 24 == $38 << 24 >> 24) {
    $$0 = $$1;
    break;
   } else $$1 = $$1 + 1 | 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZL8f_parserP9lua_StatePv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$039 = 0, $16 = 0, $17 = 0, $22 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $42 = 0, $46 = 0, $47 = 0, $5 = 0;
 $3 = __Z14luaZ_lookaheadP3Zio(HEAP32[$1 >> 2] | 0) | 0;
 $5 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$5 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$5 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
 $16 = FUNCTION_TABLE_iiiii[(($3 | 0) == 27 ? 8 : 7) & 15]($0, HEAP32[$1 >> 2] | 0, $1 + 4 | 0, HEAP32[$1 + 16 >> 2] | 0) | 0;
 $17 = $16 + 72 | 0;
 $22 = __Z16luaF_newLclosureP9lua_StateiP5Table($0, HEAPU8[$17 >> 0] | 0, HEAP32[$0 + 72 >> 2] | 0) | 0;
 HEAP32[$22 + 16 >> 2] = $16;
 if (HEAP8[$17 >> 0] | 0) {
  $26 = $22 + 20 | 0;
  $$039 = 0;
  do {
   HEAP32[$26 + ($$039 << 2) >> 2] = __Z13luaF_newupvalP9lua_State($0) | 0;
   $$039 = $$039 + 1 | 0;
  } while (($$039 | 0) < (HEAPU8[$17 >> 0] | 0));
 }
 $33 = $0 + 8 | 0;
 $34 = HEAP32[$33 >> 2] | 0;
 HEAP32[$34 >> 2] = $22;
 HEAP32[$34 + 4 >> 2] = 6;
 if (((HEAP32[$0 + 28 >> 2] | 0) - (HEAP32[$33 >> 2] | 0) | 0) >= 9) {
  $46 = HEAP32[$33 >> 2] | 0;
  $47 = $46 + 8 | 0;
  HEAP32[$33 >> 2] = $47;
  return;
 }
 $42 = HEAP32[$0 + 44 >> 2] | 0;
 if (($42 | 0) < 1) {
  __Z17luaD_reallocstackP9lua_Statei($0, $42 + 1 | 0);
  $46 = HEAP32[$33 >> 2] | 0;
  $47 = $46 + 8 | 0;
  HEAP32[$33 >> 2] = $47;
  return;
 } else {
  __Z17luaD_reallocstackP9lua_Statei($0, $42 << 1);
  $46 = HEAP32[$33 >> 2] | 0;
  $47 = $46 + 8 | 0;
  HEAP32[$33 >> 2] = $47;
  return;
 }
}

function __Z6lua_gcP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$1 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $4 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 L1 : do switch ($1 | 0) {
 case 0:
  {
   HEAP32[$4 + 64 >> 2] = -3;
   $$1 = 0;
   break;
  }
 case 1:
  {
   HEAP32[$4 + 64 >> 2] = HEAP32[$4 + 68 >> 2];
   $$1 = 0;
   break;
  }
 case 2:
  {
   __Z11luaC_fullgcP9lua_State($0);
   $$1 = 0;
   break;
  }
 case 3:
  {
   $$1 = (HEAP32[$4 + 68 >> 2] | 0) >>> 10;
   break;
  }
 case 4:
  {
   $$1 = HEAP32[$4 + 68 >> 2] & 1023;
   break;
  }
 case 5:
  {
   $15 = $2 << 10;
   $16 = $4 + 68 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   $$ = $17 >>> 0 < $15 >>> 0 ? 0 : $17 - $15 | 0;
   $20 = $4 + 64 | 0;
   HEAP32[$20 >> 2] = $$;
   $21 = $4 + 21 | 0;
   if ($$ >>> 0 > $17 >>> 0) $$1 = 0; else while (1) {
    __Z9luaC_stepP9lua_State($0);
    if (!(HEAP8[$21 >> 0] | 0)) {
     $$1 = 1;
     break L1;
    }
    if ((HEAP32[$20 >> 2] | 0) >>> 0 > (HEAP32[$16 >> 2] | 0) >>> 0) {
     $$1 = 0;
     break;
    }
   }
   break;
  }
 case 6:
  {
   $26 = $4 + 80 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   HEAP32[$26 >> 2] = $2;
   $$1 = $27;
   break;
  }
 case 7:
  {
   $28 = $4 + 84 | 0;
   $29 = HEAP32[$28 >> 2] | 0;
   HEAP32[$28 >> 2] = $2;
   $$1 = $29;
   break;
  }
 default:
  $$1 = -1;
 } while (0);
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $$1 | 0;
}

function __Z13luaD_callhookP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $3 = 0, $33 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 68 >> 2] | 0;
 if (!$5) {
  STACKTOP = sp;
  return;
 }
 $7 = $0 + 57 | 0;
 if (!(HEAP8[$7 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 $10 = $0 + 8 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $12 = $0 + 32 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 $14 = $11 - $13 | 0;
 $15 = $0 + 20 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 $19 = (HEAP32[$16 + 8 >> 2] | 0) - $13 | 0;
 HEAP32[$3 >> 2] = $1;
 HEAP32[$3 + 20 >> 2] = $2;
 if (($1 | 0) == 4) $$sink = 0; else $$sink = ($16 - (HEAP32[$0 + 40 >> 2] | 0) | 0) / 24 | 0;
 HEAP32[$3 + 96 >> 2] = $$sink;
 do if (((HEAP32[$0 + 28 >> 2] | 0) - $11 | 0) < 161) {
  $33 = HEAP32[$0 + 44 >> 2] | 0;
  if (($33 | 0) < 20) {
   __Z17luaD_reallocstackP9lua_Statei($0, $33 + 20 | 0);
   break;
  } else {
   __Z17luaD_reallocstackP9lua_Statei($0, $33 << 1);
   break;
  }
 } while (0);
 HEAP32[(HEAP32[$15 >> 2] | 0) + 8 >> 2] = (HEAP32[$10 >> 2] | 0) + 160;
 HEAP8[$7 >> 0] = 0;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 FUNCTION_TABLE_vii[$5 & 63]($0, $3);
 __Z12LuaMutexLockP9lua_State($0 | 0);
 HEAP8[$7 >> 0] = 1;
 HEAP32[(HEAP32[$15 >> 2] | 0) + 8 >> 2] = (HEAP32[$12 >> 2] | 0) + $19;
 HEAP32[$10 >> 2] = (HEAP32[$12 >> 2] | 0) + $14;
 STACKTOP = sp;
 return;
}

function __ZL13setnodevectorP9lua_StateP5Tablei($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$02729 = 0, $$028 = 0, $$pre = 0, $$pre30 = 0, $15 = 0, $16 = 0, $19 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!$2) {
  HEAP32[$1 + 16 >> 2] = 108172;
  $$0 = 0;
  $$028 = 0;
  $26 = 108172;
  $24 = $1 + 7 | 0;
  HEAP8[$24 >> 0] = $$028;
  $25 = $26 + ($$0 * 20 | 0) | 0;
  $27 = $1 + 20 | 0;
  HEAP32[$27 >> 2] = $25;
  STACKTOP = sp;
  return;
 }
 $6 = __Z9luaO_log2j($2 + -1 | 0) | 0;
 $7 = $6 + 1 | 0;
 if (($6 | 0) > 25) __Z13luaG_runerrorP9lua_StatePKcz($0, 89006, sp);
 $9 = 1 << $7;
 if (($9 + 1 | 0) >>> 0 < 214748365) $16 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 20 << $7) | 0; else $16 = __Z11luaM_toobigP9lua_State($0) | 0;
 $15 = $1 + 16 | 0;
 HEAP32[$15 >> 2] = $16;
 if (($7 | 0) == 31) $$pre30 = $16; else {
  $$02729 = 0;
  $19 = $16;
  while (1) {
   HEAP32[$19 + ($$02729 * 20 | 0) + 16 >> 2] = 0;
   HEAP32[$19 + ($$02729 * 20 | 0) + 12 >> 2] = 0;
   HEAP32[$19 + ($$02729 * 20 | 0) + 4 >> 2] = 0;
   $$02729 = $$02729 + 1 | 0;
   $$pre = HEAP32[$15 >> 2] | 0;
   if (($$02729 | 0) >= ($9 | 0)) {
    $$pre30 = $$pre;
    break;
   } else $19 = $$pre;
  }
 }
 $$0 = $9;
 $$028 = $7 & 255;
 $26 = $$pre30;
 $24 = $1 + 7 | 0;
 HEAP8[$24 >> 0] = $$028;
 $25 = $26 + ($$0 * 20 | 0) | 0;
 $27 = $1 + 20 | 0;
 HEAP32[$27 >> 2] = $25;
 STACKTOP = sp;
 return;
}

function __ZL4GCTMP9lua_State($0) {
 $0 = $0 | 0;
 var $$pre$phiZ2D = 0, $1 = 0, $12 = 0, $2 = 0, $23 = 0, $3 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $42 = 0, $47 = 0, $5 = 0, $50 = 0, $8 = 0;
 $1 = $0 + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $2 + 48 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) == ($4 | 0)) {
  HEAP32[$3 >> 2] = 0;
  $$pre$phiZ2D = $5;
 } else {
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  $$pre$phiZ2D = $5;
 }
 $8 = $2 + 100 | 0;
 HEAP32[$$pre$phiZ2D >> 2] = HEAP32[HEAP32[$8 >> 2] >> 2];
 HEAP32[HEAP32[$8 >> 2] >> 2] = $5;
 $12 = $5 + 5 | 0;
 HEAP8[$12 >> 0] = (HEAPU8[$2 + 20 >> 0] | 0) & 3 | (HEAPU8[$12 >> 0] | 0) & 248;
 $23 = HEAP32[$5 + 8 >> 2] | 0;
 if (!$23) return;
 if (HEAP8[$23 + 6 >> 0] & 4) return;
 $32 = __Z10luaT_gettmP5Table3TMSP7TString($23, 2, HEAP32[(HEAP32[$1 >> 2] | 0) + 168 >> 2] | 0) | 0;
 if (!$32) return;
 $34 = $0 + 57 | 0;
 $35 = HEAP8[$34 >> 0] | 0;
 $36 = $2 + 64 | 0;
 $37 = HEAP32[$36 >> 2] | 0;
 HEAP8[$34 >> 0] = 0;
 HEAP32[$36 >> 2] = HEAP32[$2 + 68 >> 2] << 1;
 $41 = $0 + 8 | 0;
 $42 = HEAP32[$41 >> 2] | 0;
 HEAP32[$42 >> 2] = HEAP32[$32 >> 2];
 HEAP32[$42 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
 $47 = HEAP32[$41 >> 2] | 0;
 HEAP32[$47 + 8 >> 2] = $5;
 HEAP32[$47 + 12 >> 2] = 7;
 $50 = HEAP32[$41 >> 2] | 0;
 HEAP32[$41 >> 2] = $50 + 16;
 __Z9luaD_callP9lua_StateP10lua_TValuei($0, $50, 0);
 HEAP8[$34 >> 0] = $35;
 HEAP32[$36 >> 2] = $37;
 return;
}

function __ZN6google12_GLOBAL__N_1L18RemoveTrailingCharEPNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$in = 0, $17 = 0, $2 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) $9 = HEAP32[$0 + 4 >> 2] | 0; else $9 = $4 & 255;
 if (!$9) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ($5) {
  $$in = HEAP32[$0 + 4 >> 2] | 0;
  $17 = HEAP32[$0 >> 2] | 0;
 } else {
  $$in = $4 & 255;
  $17 = $0;
 }
 if ((HEAP8[$17 + ($$in + -1) >> 0] | 0) != $1 << 24 >> 24) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ($5) $24 = HEAP32[$0 + 4 >> 2] | 0; else $24 = $4 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($2, $0, 0, $24 + -1 | 0, $0);
 if ((HEAP8[$3 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
 } else {
  HEAP8[$0 >> 0] = 0;
  HEAP8[$3 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, 0);
 HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__214__num_put_base14__format_floatEPcPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$022 = 0, $$023$off0$ph = 0, $$1 = 0, $$2 = 0, $$2$ph = 0, $10 = 0, $11 = 0, $14 = 0, $23 = 0, $9 = 0;
 if (!($2 & 2048)) $$0 = $0; else {
  HEAP8[$0 >> 0] = 43;
  $$0 = $0 + 1 | 0;
 }
 if (!($2 & 1024)) $$1 = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1 = $$0 + 1 | 0;
 }
 $9 = $2 & 260;
 $10 = $2 >>> 14;
 $11 = ($9 | 0) == 260;
 if ($11) {
  $$023$off0$ph = 0;
  $$2$ph = $$1;
 } else {
  HEAP8[$$1 >> 0] = 46;
  HEAP8[$$1 + 1 >> 0] = 42;
  $$023$off0$ph = 1;
  $$2$ph = $$1 + 2 | 0;
 }
 $$022 = $1;
 $$2 = $$2$ph;
 while (1) {
  $14 = HEAP8[$$022 >> 0] | 0;
  if (!($14 << 24 >> 24)) break;
  HEAP8[$$2 >> 0] = $14;
  $$022 = $$022 + 1 | 0;
  $$2 = $$2 + 1 | 0;
 }
 L14 : do switch ($9 & 511) {
 case 4:
  {
   if (!($10 & 1)) {
    HEAP8[$$2 >> 0] = 102;
    break L14;
   } else {
    HEAP8[$$2 >> 0] = 70;
    break L14;
   }
   break;
  }
 case 256:
  {
   if (!($10 & 1)) {
    HEAP8[$$2 >> 0] = 101;
    break L14;
   } else {
    HEAP8[$$2 >> 0] = 69;
    break L14;
   }
   break;
  }
 default:
  {
   $23 = ($10 & 1 | 0) != 0;
   if ($11) if ($23) {
    HEAP8[$$2 >> 0] = 65;
    break L14;
   } else {
    HEAP8[$$2 >> 0] = 97;
    break L14;
   } else if ($23) {
    HEAP8[$$2 >> 0] = 71;
    break L14;
   } else {
    HEAP8[$$2 >> 0] = 103;
    break L14;
   }
  }
 } while (0);
 return $$023$off0$ph | 0;
}

function _mbtowc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0 = 0, $12 = 0, $14 = 0, $16 = 0, $24 = 0, $25 = 0, $3 = 0, $33 = 0, $38 = 0, $41 = 0, $46 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 L1 : do if (!$1) $$0 = 0; else {
  do if ($2 | 0) {
   $$ = ($0 | 0) == 0 ? $3 : $0;
   $7 = HEAP8[$1 >> 0] | 0;
   $8 = $7 & 255;
   if ($7 << 24 >> 24 > -1) {
    HEAP32[$$ >> 2] = $8;
    $$0 = $7 << 24 >> 24 != 0 & 1;
    break L1;
   }
   $12 = $8 + -194 | 0;
   if ($12 >>> 0 <= 50) {
    $14 = $1 + 1 | 0;
    $16 = HEAP32[69880 + ($12 << 2) >> 2] | 0;
    if ($2 >>> 0 < 4) if ($16 & -2147483648 >>> (($2 * 6 | 0) + -6 | 0) | 0) break;
    $24 = HEAPU8[$14 >> 0] | 0;
    $25 = $24 >>> 3;
    if (($25 + -16 | $25 + ($16 >> 26)) >>> 0 <= 7) {
     $33 = $24 + -128 | $16 << 6;
     if (($33 | 0) >= 0) {
      HEAP32[$$ >> 2] = $33;
      $$0 = 2;
      break L1;
     }
     $38 = (HEAPU8[$1 + 2 >> 0] | 0) + -128 | 0;
     if ($38 >>> 0 <= 63) {
      $41 = $38 | $33 << 6;
      if (($41 | 0) >= 0) {
       HEAP32[$$ >> 2] = $41;
       $$0 = 3;
       break L1;
      }
      $46 = (HEAPU8[$1 + 3 >> 0] | 0) + -128 | 0;
      if ($46 >>> 0 <= 63) {
       HEAP32[$$ >> 2] = $46 | $41 << 6;
       $$0 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z15luaG_aritherrorP9lua_StatePK10lua_TValueS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$08$i$i = 0, $10 = 0, $12 = 0, $13 = 0, $15 = 0, $25 = 0, $27 = 0, $3 = 0, $6 = 0, $vararg_buffer = 0, $vararg_buffer4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 32 | 0;
 $6 = (__Z13luaV_tonumberPK10lua_TValuePS_($1, sp + 24 | 0) | 0) == 0;
 $$ = $6 ? $1 : $2;
 HEAP32[$3 >> 2] = 0;
 $10 = HEAP32[69276 + (HEAP32[$$ + 4 >> 2] << 2) >> 2] | 0;
 $12 = HEAP32[$0 + 20 >> 2] | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 $15 = HEAP32[$12 + 8 >> 2] | 0;
 L1 : do if ($13 >>> 0 < $15 >>> 0) {
  $$08$i$i = $13;
  while (1) {
   if (($$08$i$i | 0) == ($$ | 0)) break;
   $$08$i$i = $$08$i$i + 8 | 0;
   if ($$08$i$i >>> 0 >= $15 >>> 0) break L1;
  }
  $25 = __ZL10getobjnameP9lua_StateP8CallInfoiPPKc($0, $12, $$ - (HEAP32[$0 + 12 >> 2] | 0) >> 3, $3) | 0;
  if ($25 | 0) {
   $27 = HEAP32[$3 >> 2] | 0;
   HEAP32[$vararg_buffer >> 2] = 86921;
   HEAP32[$vararg_buffer + 4 >> 2] = $25;
   HEAP32[$vararg_buffer + 8 >> 2] = $27;
   HEAP32[$vararg_buffer + 12 >> 2] = $10;
   __Z13luaG_runerrorP9lua_StatePKcz($0, 86849, $vararg_buffer);
   STACKTOP = sp;
   return;
  }
 } while (0);
 HEAP32[$vararg_buffer4 >> 2] = 86921;
 HEAP32[$vararg_buffer4 + 4 >> 2] = $10;
 __Z13luaG_runerrorP9lua_StatePKcz($0, 86884, $vararg_buffer4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $10 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $31 = 0, $32 = 0, $40 = 0;
 if ((1073741806 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $10 = $0 + 8 | 0;
 if ((HEAP8[$10 + 3 >> 0] | 0) < 0) $28 = HEAP32[$0 >> 2] | 0; else $28 = $0;
 if ($1 >>> 0 < 536870887) {
  $16 = $2 + $1 | 0;
  $17 = $1 << 1;
  $$sroa$speculated = $16 >>> 0 < $17 >>> 0 ? $17 : $16;
  $22 = $$sroa$speculated >>> 0 < 2 ? 2 : $$sroa$speculated + 4 & -4;
  if ($22 >>> 0 > 1073741823) ___assert_fail(105295, 105332, 1734, 105403); else $25 = $22;
 } else $25 = 1073741807;
 $26 = __Znwj($25 << 2) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($26, $28, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($26 + ($4 << 2) | 0, $7, $6) | 0;
 $31 = $3 - $5 | 0;
 $32 = $31 - $4 | 0;
 if ($32 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($26 + ($4 << 2) + ($6 << 2) | 0, $28 + ($4 << 2) + ($5 << 2) | 0, $32) | 0;
 if (($1 | 0) != 1) __ZdlPv($28);
 HEAP32[$0 >> 2] = $26;
 HEAP32[$10 >> 2] = $25 | -2147483648;
 $40 = $31 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $40;
 HEAP32[$26 + ($40 << 2) >> 2] = 0;
 return;
}

function __ZN10LuaMemPoolC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $11 = 0, $15 = 0, $17 = 0, $2 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $30 = 0, $5 = 0, $6 = 0, $9 = 0, dest = 0, stop = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = -1;
 HEAP32[$0 + 24 >> 2] = 0;
 $5 = $0 + 28 | 0;
 $6 = $0 + 32 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = -1;
 $9 = $0 + 56 | 0;
 $10 = $0 + 60 | 0;
 $11 = $0 + 88 | 0;
 dest = $0 + 52 | 0;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$11 >> 2] = $1;
 HEAP32[$0 + 92 >> 2] = 0;
 if (!(HEAP8[112106] | 0)) return;
 __ZN6emilib7HashMapIjPvNSt3__24hashIjEENS_14HashMapEqualToIjEEE7reserveEj($0, 16384);
 __ZN6emilib7HashMapIjjNSt3__24hashIjEENS_14HashMapEqualToIjEEE7reserveEj($5, 16384);
 $15 = $0 + 64 | 0;
 $17 = HEAP32[$9 >> 2] | 0;
 if ((HEAP32[$15 >> 2] | 0) - $17 >> 2 >>> 0 >= 1024) return;
 $22 = (HEAP32[$10 >> 2] | 0) - $17 | 0;
 $23 = $22 >> 2;
 $24 = __Znwj(4096) | 0;
 $25 = $24 + ($23 << 2) | 0;
 $30 = $25 + (0 - $23 << 2) | 0;
 if (($22 | 0) > 0) _memcpy($30 | 0, $17 | 0, $22 | 0) | 0;
 HEAP32[$9 >> 2] = $30;
 HEAP32[$10 >> 2] = $25;
 HEAP32[$15 >> 2] = $24 + 4096;
 if (!$17) return;
 __ZdlPv($17);
 return;
}

function __Z13luaG_runerrorP9lua_StatePKcz($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $$0$i$i = 0, $$pre$i$i = 0, $17 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $vararg_buffer = sp;
 $2 = sp + 32 | 0;
 $3 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $varargs;
 $4 = __Z17luaO_pushvfstringP9lua_StatePKcPi($0, $1, $3) | 0;
 $6 = HEAP32[$0 + 20 >> 2] | 0;
 $8 = HEAP32[$6 + 4 >> 2] | 0;
 if ((HEAP32[$8 + 4 >> 2] | 0) != 6) {
  __Z13luaG_errormsgP9lua_State($0);
  STACKTOP = sp;
  return;
 }
 if (HEAP8[(HEAP32[$8 >> 2] | 0) + 6 >> 0] | 0) {
  __Z13luaG_errormsgP9lua_State($0);
  STACKTOP = sp;
  return;
 }
 $17 = HEAP32[$0 + 24 >> 2] | 0;
 HEAP32[$6 + 12 >> 2] = $17;
 $$pre$i$i = HEAP32[$8 >> 2] | 0;
 $20 = HEAP32[$$pre$i$i + 16 >> 2] | 0;
 $23 = $17 - (HEAP32[$20 + 12 >> 2] | 0) | 0;
 if (($23 | 0) < 4) $$0$i$i = -1; else {
  $26 = HEAP32[$20 + 20 >> 2] | 0;
  if (!$26) $$0$i$i = 0; else $$0$i$i = HEAP32[$26 + (($23 >> 2) + -1 << 2) >> 2] | 0;
 }
 __Z12luaO_chunkidPcPKcj($2, (HEAP32[(HEAP32[$$pre$i$i + 16 >> 2] | 0) + 32 >> 2] | 0) + 16 | 0, 60);
 HEAP32[$vararg_buffer >> 2] = $2;
 HEAP32[$vararg_buffer + 4 >> 2] = $$0$i$i;
 HEAP32[$vararg_buffer + 8 >> 2] = $4;
 __Z16luaO_pushfstringP9lua_StatePKcz($0, 89955, $vararg_buffer) | 0;
 __Z13luaG_errormsgP9lua_State($0);
 STACKTOP = sp;
 return;
}

function __ZL9f_luaopenP9lua_StatePv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$cast$i = 0, $10 = 0, $13 = 0, $18 = 0, $2 = 0, $21 = 0, $3 = 0, $31 = 0, $36 = 0, $4 = 0, $6 = 0;
 $2 = $0 + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 192) | 0;
 HEAP32[$0 + 40 >> 2] = $4;
 $6 = $0 + 20 | 0;
 HEAP32[$6 >> 2] = $4;
 HEAP32[$0 + 48 >> 2] = 8;
 HEAP32[$0 + 36 >> 2] = $4 + 168;
 $10 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 360) | 0;
 HEAP32[$0 + 32 >> 2] = $10;
 HEAP32[$0 + 44 >> 2] = 45;
 $$cast$i = $10;
 $13 = $0 + 8 | 0;
 HEAP32[$13 >> 2] = $$cast$i;
 HEAP32[$0 + 28 >> 2] = $10 + 312;
 HEAP32[(HEAP32[$6 >> 2] | 0) + 4 >> 2] = $$cast$i;
 $18 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = $18 + 8;
 HEAP32[$18 + 4 >> 2] = 0;
 $21 = HEAP32[$13 >> 2] | 0;
 HEAP32[HEAP32[$6 >> 2] >> 2] = $21;
 HEAP32[$0 + 12 >> 2] = $21;
 HEAP32[(HEAP32[$6 >> 2] | 0) + 8 >> 2] = (HEAP32[$13 >> 2] | 0) + 160;
 HEAP32[$0 + 72 >> 2] = __Z8luaH_newP9lua_Stateii($0, 0, 2) | 0;
 HEAP32[$0 + 76 >> 2] = 5;
 $31 = HEAP32[$2 >> 2] | 0;
 HEAP32[$31 + 92 >> 2] = __Z8luaH_newP9lua_Stateii($0, 0, 2) | 0;
 HEAP32[$31 + 96 >> 2] = 5;
 __Z11luaS_resizeP9lua_Statei($0, 32);
 __Z9luaT_initP9lua_State($0);
 __Z9luaX_initP9lua_State($0);
 $36 = (__Z12luaS_newlstrP9lua_StatePKcj($0, 88320, 17) | 0) + 5 | 0;
 HEAP8[$36 >> 0] = HEAPU8[$36 >> 0] | 0 | 32;
 HEAP32[$3 + 64 >> 2] = HEAP32[$3 + 68 >> 2] << 2;
 return;
}

function __ZN8LuaUtils18PushCurrentFuncEnvEP9lua_StatePKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 28 | 0;
 if (!(__Z12lua_getstackP9lua_StateiP9lua_Debug($0, 1, $2) | 0)) {
  HEAP32[$vararg_buffer >> 2] = $1;
  __Z10luaL_errorP9lua_StatePKcz($0, 83864, $vararg_buffer) | 0;
 }
 if (!(__Z11lua_getinfoP9lua_StatePKcP9lua_Debug($0, 91423, $2) | 0)) {
  HEAP32[$vararg_buffer1 >> 2] = $1;
  __Z10luaL_errorP9lua_StatePKcz($0, 83890, $vararg_buffer1) | 0;
 }
 if ((__Z8lua_typeP9lua_Statei($0, -1) | 0) != 6) {
  HEAP32[$vararg_buffer4 >> 2] = $1;
  __Z10luaL_errorP9lua_StatePKcz($0, 83915, $vararg_buffer4) | 0;
 }
 __Z11lua_getfenvP9lua_Statei($0, -1);
 __Z15lua_pushlstringP9lua_StatePKcj($0, 83945, 6);
 __Z10lua_rawgetP9lua_Statei($0, -2);
 if (!(__Z8lua_typeP9lua_Statei($0, -1) | 0)) __Z10lua_settopP9lua_Statei($0, -2); else __Z10lua_removeP9lua_Statei($0, -2);
 if ((__Z8lua_typeP9lua_Statei($0, -1) | 0) == 5) {
  __Z10lua_removeP9lua_Statei($0, -2);
  STACKTOP = sp;
  return;
 }
 HEAP32[$vararg_buffer7 >> 2] = $1;
 __Z10luaL_errorP9lua_StatePKcz($0, 83952, $vararg_buffer7) | 0;
 __Z10lua_removeP9lua_Statei($0, -2);
 STACKTOP = sp;
 return;
}

function __Z11lua_rawgetiP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1$i = 0, $23 = 0, $32 = 0, $33 = 0, $42 = 0, $43 = 0, $44 = 0, $7 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $7 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $7 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $23 = $0 + 80 | 0;
    HEAP32[$23 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $23;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $32 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $33 = -10002 - $1 | 0;
    $$1$i = ($33 | 0) > (HEAPU8[$32 + 7 >> 0] | 0 | 0) ? 108164 : $32 + 20 + ($33 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $42 = __Z11luaH_getnumP5Tablei(HEAP32[$$1$i >> 2] | 0, $2) | 0;
 $43 = $0 + 8 | 0;
 $44 = HEAP32[$43 >> 2] | 0;
 HEAP32[$44 >> 2] = HEAP32[$42 >> 2];
 HEAP32[$44 + 4 >> 2] = HEAP32[$42 + 4 >> 2];
 HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __Z13lua_tointegerP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$012 = 0, $$1$i = 0, $2 = 0, $23 = 0, $32 = 0, $33 = 0, $44 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 L1 : do if (($1 | 0) > 0) {
  $7 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $7 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $23 = $0 + 80 | 0;
    HEAP32[$23 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $23;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $32 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $33 = -10002 - $1 | 0;
    $$1$i = ($33 | 0) > (HEAPU8[$32 + 7 >> 0] | 0 | 0) ? 108164 : $32 + 20 + ($33 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 if ((HEAP32[$$1$i + 4 >> 2] | 0) == 3) $$012 = $$1$i; else {
  $44 = __Z13luaV_tonumberPK10lua_TValuePS_($$1$i, $2) | 0;
  if (!$44) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else $$012 = $44;
 }
 $$0 = ~~+HEAPF32[$$012 >> 2];
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIbNS_9allocatorIbEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $5 = $0 + 8 | 0;
 if (HEAP32[$5 >> 2] << 5 >>> 0 >= $1 >>> 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$2 >> 2] = 0;
 $9 = $2 + 4 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $2 + 8 | 0;
 HEAP32[$10 >> 2] = 0;
 if (($1 | 0) < 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($2);
 $14 = (($1 + -1 | 0) >>> 5) + 1 | 0;
 HEAP32[$2 >> 2] = __Znwj($14 << 2) | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$10 >> 2] = $14;
 $17 = HEAP32[$0 >> 2] | 0;
 HEAP32[$3 >> 2] = $17;
 HEAP32[$3 + 4 >> 2] = 0;
 $19 = $0 + 4 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 HEAP32[$4 >> 2] = $17 + ($20 >>> 5 << 2);
 HEAP32[$4 + 4 >> 2] = $20 & 31;
 __ZNSt3__26vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELj0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($2, $3, $4);
 $26 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$2 >> 2] = $26;
 $28 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$9 >> 2] = $28;
 $30 = HEAP32[$5 >> 2] | 0;
 HEAP32[$5 >> 2] = HEAP32[$10 >> 2];
 HEAP32[$10 >> 2] = $30;
 if ($26 | 0) __ZdlPv($26);
 STACKTOP = sp;
 return;
}

function _fread($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$0 = 0, $$053$ph = 0, $$05357 = 0, $$054$ph = 0, $$05456 = 0, $11 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $27 = 0, $31 = 0, $34 = 0, $38 = 0, $4 = 0, $9 = 0, label = 0;
 $4 = Math_imul($2, $1) | 0;
 if ((HEAP32[$3 + 76 >> 2] | 0) > -1) $34 = ___lockfile($3) | 0; else $34 = 0;
 $9 = $3 + 74 | 0;
 $11 = HEAP8[$9 >> 0] | 0;
 HEAP8[$9 >> 0] = $11 + 255 | $11;
 $17 = $3 + 4 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = (HEAP32[$3 + 8 >> 2] | 0) - $18 | 0;
 $21 = $18;
 if (($19 | 0) > 0) {
  $$ = $19 >>> 0 < $4 >>> 0 ? $19 : $4;
  _memcpy($0 | 0, $21 | 0, $$ | 0) | 0;
  HEAP32[$17 >> 2] = $21 + $$;
  $$053$ph = $4 - $$ | 0;
  $$054$ph = $0 + $$ | 0;
 } else {
  $$053$ph = $4;
  $$054$ph = $0;
 }
 L7 : do if (!$$053$ph) label = 13; else {
  $27 = $3 + 32 | 0;
  $$05357 = $$053$ph;
  $$05456 = $$054$ph;
  while (1) {
   if (___toread($3) | 0) break;
   $31 = FUNCTION_TABLE_iiii[HEAP32[$27 >> 2] & 63]($3, $$05456, $$05357) | 0;
   if (($31 + 1 | 0) >>> 0 < 2) break;
   $38 = $$05357 - $31 | 0;
   if (!$38) {
    label = 13;
    break L7;
   } else {
    $$05357 = $38;
    $$05456 = $$05456 + $31 | 0;
   }
  }
  if ($34 | 0) ___unlockfile($3);
  $$0 = (($4 - $$05357 | 0) >>> 0) / ($1 >>> 0) | 0;
 } while (0);
 if ((label | 0) == 13) if (!$34) $$0 = $2; else {
  ___unlockfile($3);
  $$0 = $2;
 }
 return $$0 | 0;
}

function __Z12lua_tonumberP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$06 = 0.0, $$1$i = 0, $2 = 0, $23 = 0, $32 = 0, $33 = 0, $44 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 L1 : do if (($1 | 0) > 0) {
  $7 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $7 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $23 = $0 + 80 | 0;
    HEAP32[$23 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $23;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $32 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $33 = -10002 - $1 | 0;
    $$1$i = ($33 | 0) > (HEAPU8[$32 + 7 >> 0] | 0 | 0) ? 108164 : $32 + 20 + ($33 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 if ((HEAP32[$$1$i + 4 >> 2] | 0) == 3) $$0 = $$1$i; else {
  $44 = __Z13luaV_tonumberPK10lua_TValuePS_($$1$i, $2) | 0;
  if (!$44) {
   $$06 = 0.0;
   STACKTOP = sp;
   return +$$06;
  } else $$0 = $44;
 }
 $$06 = +HEAPF32[$$0 >> 2];
 STACKTOP = sp;
 return +$$06;
}

function __Z13luaK_storevarP9FuncStateP7expdescS2_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $59 = 0, $66 = 0, $7 = 0;
 switch (HEAP32[$1 >> 2] | 0) {
 case 6:
  {
   if ((HEAP32[$2 >> 2] | 0) == 12) {
    $7 = HEAP32[$2 + 4 >> 2] | 0;
    if (!($7 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($7 | 0)) {
     $14 = $0 + 36 | 0;
     HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + -1;
    }
   }
   __ZL7exp2regP9FuncStateP7expdesci($0, $2, HEAP32[$1 + 4 >> 2] | 0);
   return;
  }
 case 7:
  {
   __ZL9luaK_codeP9FuncStateji($0, (__Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $2) | 0) << 6 | HEAP32[$1 + 4 >> 2] << 23 | 8, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   break;
  }
 case 8:
  {
   __ZL9luaK_codeP9FuncStateji($0, (__Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $2) | 0) << 6 | HEAP32[$1 + 4 >> 2] << 14 | 7, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   break;
  }
 case 9:
  {
   __ZL9luaK_codeP9FuncStateji($0, (__Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0) << 14 | HEAP32[$1 + 4 >> 2] << 6 | HEAP32[$1 + 8 >> 2] << 23 | 9, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
   break;
  }
 default:
  {}
 }
 if ((HEAP32[$2 >> 2] | 0) != 12) return;
 $59 = HEAP32[$2 + 4 >> 2] | 0;
 if ($59 & 256 | 0) return;
 if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) > ($59 | 0)) return;
 $66 = $0 + 36 | 0;
 HEAP32[$66 >> 2] = (HEAP32[$66 >> 2] | 0) + -1;
 return;
}

function __ZN8LuaTableC2EP9LuaParser($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $27 = 0, $28 = 0, $3 = 0, $6 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $3 = $1 + 48 | 0;
 $6 = $0 + 12 | 0;
 HEAP8[$6 >> 0] = (HEAP32[$3 >> 2] | 0) != 0 & 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($0, 83806) | 0;
 HEAP32[$0 + 16 >> 2] = $1;
 $10 = $0 + 20 | 0;
 HEAP32[$10 >> 2] = HEAP32[$3 >> 2];
 $13 = $0 + 24 | 0;
 HEAP32[$13 >> 2] = HEAP32[$1 + 124 >> 2];
 HEAP32[$2 >> 2] = $0;
 $14 = $1 + 100 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 if (($15 | 0) == (HEAP32[$1 + 104 >> 2] | 0)) __ZNSt3__26vectorIP8LuaTableNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($1 + 96 | 0, $2); else {
  HEAP32[$15 >> 2] = $0;
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 4;
 }
 if (!(__ZNK8LuaTable9PushTableEv($0) | 0)) {
  $storemerge = -2;
  HEAP32[$13 >> 2] = $storemerge;
  $27 = ($storemerge | 0) != -2;
  $28 = $27 & 1;
  HEAP8[$6 >> 0] = $28;
  STACKTOP = sp;
  return;
 }
 __Z13lua_pushvalueP9lua_Statei(HEAP32[$10 >> 2] | 0, -1);
 $storemerge = __Z8luaL_refP9lua_Statei(HEAP32[$10 >> 2] | 0, -1e4) | 0;
 HEAP32[$13 >> 2] = $storemerge;
 $27 = ($storemerge | 0) != -2;
 $28 = $27 & 1;
 HEAP8[$6 >> 0] = $28;
 STACKTOP = sp;
 return;
}

function __Z10lua_rawgetP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $41 = 0, $44 = 0, $45 = 0, $6 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $41 = $0 + 8 | 0;
 $44 = __Z8luaH_getP5TablePK10lua_TValue(HEAP32[$$1$i >> 2] | 0, (HEAP32[$41 >> 2] | 0) + -8 | 0) | 0;
 $45 = HEAP32[$41 >> 2] | 0;
 HEAP32[$45 + -8 >> 2] = HEAP32[$44 >> 2];
 HEAP32[$45 + -4 >> 2] = HEAP32[$44 + 4 >> 2];
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function _strcspn($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$01823 = 0, $$019$lcssa = 0, $$01921 = 0, $13 = 0, $16 = 0, $2 = 0, $20 = 0, $26 = 0, $3 = 0, $35 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $3 = HEAP8[$1 >> 0] | 0;
 if (!($3 << 24 >> 24)) label = 3; else if (!(HEAP8[$1 + 1 >> 0] | 0)) label = 3; else {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  HEAP32[$2 + 12 >> 2] = 0;
  HEAP32[$2 + 16 >> 2] = 0;
  HEAP32[$2 + 20 >> 2] = 0;
  HEAP32[$2 + 24 >> 2] = 0;
  HEAP32[$2 + 28 >> 2] = 0;
  $$01823 = $1;
  $16 = $3;
  do {
   $20 = $2 + ((($16 & 255) >>> 5 & 255) << 2) | 0;
   HEAP32[$20 >> 2] = HEAP32[$20 >> 2] | 1 << ($16 & 31);
   $$01823 = $$01823 + 1 | 0;
   $16 = HEAP8[$$01823 >> 0] | 0;
  } while ($16 << 24 >> 24 != 0);
  $13 = HEAP8[$0 >> 0] | 0;
  L7 : do if (!($13 << 24 >> 24)) $$019$lcssa = $0; else {
   $$01921 = $0;
   $26 = $13;
   while (1) {
    if (HEAP32[$2 + ((($26 & 255) >>> 5 & 255) << 2) >> 2] & 1 << ($26 & 31) | 0) {
     $$019$lcssa = $$01921;
     break L7;
    }
    $35 = $$01921 + 1 | 0;
    $26 = HEAP8[$35 >> 0] | 0;
    if (!($26 << 24 >> 24)) {
     $$019$lcssa = $35;
     break;
    } else $$01921 = $35;
   }
  } while (0);
  $$0 = $$019$lcssa - $0 | 0;
 }
 if ((label | 0) == 3) $$0 = (___strchrnul($0, $3 << 24 >> 24) | 0) - $0 | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z16luaG_concaterrorP9lua_StateP10lua_TValueS2_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$08$i$i = 0, $11 = 0, $12 = 0, $14 = 0, $24 = 0, $26 = 0, $3 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 24 | 0;
 $$ = ((HEAP32[$1 + 4 >> 2] | 0) + -3 | 0) >>> 0 < 2 ? $2 : $1;
 HEAP32[$3 >> 2] = 0;
 $9 = HEAP32[69276 + (HEAP32[$$ + 4 >> 2] << 2) >> 2] | 0;
 $11 = HEAP32[$0 + 20 >> 2] | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $14 = HEAP32[$11 + 8 >> 2] | 0;
 L1 : do if ($12 >>> 0 < $14 >>> 0) {
  $$08$i$i = $12;
  while (1) {
   if (($$08$i$i | 0) == ($$ | 0)) break;
   $$08$i$i = $$08$i$i + 8 | 0;
   if ($$08$i$i >>> 0 >= $14 >>> 0) break L1;
  }
  $24 = __ZL10getobjnameP9lua_StateP8CallInfoiPPKc($0, $11, $$ - (HEAP32[$0 + 12 >> 2] | 0) >> 3, $3) | 0;
  if ($24 | 0) {
   $26 = HEAP32[$3 >> 2] | 0;
   HEAP32[$vararg_buffer >> 2] = 86909;
   HEAP32[$vararg_buffer + 4 >> 2] = $24;
   HEAP32[$vararg_buffer + 8 >> 2] = $26;
   HEAP32[$vararg_buffer + 12 >> 2] = $9;
   __Z13luaG_runerrorP9lua_StatePKcz($0, 86849, $vararg_buffer);
   STACKTOP = sp;
   return;
  }
 } while (0);
 HEAP32[$vararg_buffer4 >> 2] = 86909;
 HEAP32[$vararg_buffer4 + 4 >> 2] = $9;
 __Z13luaG_runerrorP9lua_StatePKcz($0, 86884, $vararg_buffer4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $29 = 0, $3 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 24 | 0;
 $$byval_copy = sp + 20 | 0;
 $2 = sp + 16 | 0;
 $3 = sp + 12 | 0;
 $4 = sp + 28 | 0;
 $5 = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($4, $0, 0);
 if (HEAP8[$4 >> 0] | 0) {
  HEAP32[$5 >> 2] = 0;
  HEAP32[$7 >> 2] = __ZNKSt3__28ios_base6getlocEv($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 110192) | 0;
  $19 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $24 = HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$2 >> 2] = HEAP32[$19 + 24 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
  FUNCTION_TABLE_iiiiiii[$24 & 63]($15, $$byval_copy, $$byval_copy1, $19, $5, $6) | 0;
  __ZNSt3__26localeD2Ev($7);
  HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
  $29 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $31 = $29 + 16 | 0;
  HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | HEAP32[$5 >> 2] | (HEAP32[$29 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __Z8lua_nextP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $41 = 0, $44 = 0, $46 = 0, $6 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $41 = $0 + 8 | 0;
 $44 = __Z9luaH_nextP9lua_StateP5TableP10lua_TValue($0, HEAP32[$$1$i >> 2] | 0, (HEAP32[$41 >> 2] | 0) + -8 | 0) | 0;
 $46 = HEAP32[$41 >> 2] | 0;
 HEAP32[$41 >> 2] = ($44 | 0) == 0 ? $46 + -8 | 0 : $46 + 8 | 0;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $44 | 0;
}

function ___shgetc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$phi$trans$insert28 = 0, $$pre = 0, $1 = 0, $10 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $26 = 0, $28 = 0, $30 = 0, $36 = 0, $37 = 0, $42 = 0, $7 = 0, label = 0;
 $1 = $0 + 104 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) label = 3; else if ((HEAP32[$0 + 108 >> 2] | 0) < ($2 | 0)) label = 3; else label = 4;
 if ((label | 0) == 3) {
  $7 = ___uflow($0) | 0;
  if (($7 | 0) < 0) label = 4; else {
   $10 = HEAP32[$1 >> 2] | 0;
   $$pre = HEAP32[$0 + 8 >> 2] | 0;
   if (!$10) {
    $42 = $$pre;
    label = 9;
   } else {
    $14 = HEAP32[$0 + 4 >> 2] | 0;
    $19 = $10 - (HEAP32[$0 + 108 >> 2] | 0) | 0;
    $21 = $$pre;
    if (($$pre - $14 | 0) < ($19 | 0)) {
     $42 = $21;
     label = 9;
    } else {
     HEAP32[$0 + 100 >> 2] = $14 + ($19 + -1);
     $26 = $21;
    }
   }
   if ((label | 0) == 9) {
    HEAP32[$0 + 100 >> 2] = $$pre;
    $26 = $42;
   }
   $$phi$trans$insert28 = $0 + 4 | 0;
   if (!$26) $37 = HEAP32[$$phi$trans$insert28 >> 2] | 0; else {
    $28 = HEAP32[$$phi$trans$insert28 >> 2] | 0;
    $30 = $0 + 108 | 0;
    HEAP32[$30 >> 2] = $26 + 1 - $28 + (HEAP32[$30 >> 2] | 0);
    $37 = $28;
   }
   $36 = $37 + -1 | 0;
   if ((HEAPU8[$36 >> 0] | 0 | 0) == ($7 | 0)) $$0 = $7; else {
    HEAP8[$36 >> 0] = $7;
    $$0 = $7;
   }
  }
 }
 if ((label | 0) == 4) {
  HEAP32[$0 + 100 >> 2] = 0;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __Z11luaS_resizeP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$04648 = 0, $$149 = 0, $$lcssa = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $22 = 0, $28 = 0, $33 = 0, $36 = 0, $$04648$looptemp = 0;
 $2 = $0 + 16 | 0;
 if ((HEAP8[(HEAP32[$2 >> 2] | 0) + 21 >> 0] | 0) == 2) return;
 if (($1 + 1 | 0) >>> 0 < 1073741824) $15 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, $1 << 2) | 0; else $15 = __Z11luaM_toobigP9lua_State($0) | 0;
 $12 = HEAP32[$2 >> 2] | 0;
 if (($1 | 0) > 0) _memset($15 | 0, 0, $1 << 2 | 0) | 0;
 $16 = $12 + 8 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 | 0) > 0) {
  $19 = $1 + -1 | 0;
  $$149 = 0;
  $36 = $17;
  while (1) {
   $22 = HEAP32[(HEAP32[$12 >> 2] | 0) + ($$149 << 2) >> 2] | 0;
   if (!$22) $33 = $36; else {
    $$04648 = $22;
    do {
     $$04648$looptemp = $$04648;
     $$04648 = HEAP32[$$04648 >> 2] | 0;
     $28 = $15 + ((HEAP32[$$04648$looptemp + 8 >> 2] & $19) << 2) | 0;
     HEAP32[$$04648$looptemp >> 2] = HEAP32[$28 >> 2];
     HEAP32[$28 >> 2] = $$04648$looptemp;
    } while (($$04648 | 0) != 0);
    $33 = HEAP32[$16 >> 2] | 0;
   }
   $$149 = $$149 + 1 | 0;
   if (($$149 | 0) >= ($33 | 0)) {
    $$lcssa = $33;
    break;
   } else $36 = $33;
  }
 } else $$lcssa = $17;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$12 >> 2] | 0, $$lcssa << 2, 0) | 0;
 HEAP32[$16 >> 2] = $1;
 HEAP32[$12 >> 2] = $15;
 return;
}

function __Z13luaL_argerrorP9lua_StateiPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$011 = 0, $11 = 0, $16 = 0, $17 = 0, $19 = 0, $3 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer6 = sp + 16 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = sp + 28 | 0;
 if (!(__Z12lua_getstackP9lua_StateiP9lua_Debug($0, 0, $3) | 0)) {
  HEAP32[$vararg_buffer >> 2] = $1;
  HEAP32[$vararg_buffer + 4 >> 2] = $2;
  $$0 = __Z10luaL_errorP9lua_StatePKcz($0, 85529, $vararg_buffer) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 __Z11lua_getinfoP9lua_StatePKcP9lua_Debug($0, 91427, $3) | 0;
 if (!(_strcmp(HEAP32[$3 + 8 >> 2] | 0, 86842) | 0)) {
  $11 = $1 + -1 | 0;
  if (!$11) {
   HEAP32[$vararg_buffer2 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$vararg_buffer2 + 4 >> 2] = $2;
   $$0 = __Z10luaL_errorP9lua_StatePKcz($0, 85551, $vararg_buffer2) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else $$011 = $11;
 } else $$011 = $1;
 $16 = $3 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (!$17) {
  HEAP32[$16 >> 2] = 86819;
  $19 = 86819;
 } else $19 = $17;
 HEAP32[$vararg_buffer6 >> 2] = $$011;
 HEAP32[$vararg_buffer6 + 4 >> 2] = $19;
 HEAP32[$vararg_buffer6 + 8 >> 2] = $2;
 $$0 = __Z10luaL_errorP9lua_StatePKcz($0, 85581, $vararg_buffer6) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$028 = 0, $15 = 0, $18 = 0, $19 = 0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, $31 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0;
 $3 = $1;
 $4 = $0 + 8 | 0;
 $5 = $4 + 3 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if ($6 << 24 >> 24 < 0) {
  $18 = HEAP32[$0 + 4 >> 2] | 0;
  $19 = (HEAP32[$4 >> 2] & 2147483647) + -1 | 0;
 } else {
  $18 = $6 & 255;
  $19 = 1;
 }
 $15 = $2 - $3 >> 2;
 do if ($15 | 0) {
  if (($19 - $18 | 0) >>> 0 < $15 >>> 0) {
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($0, $19, $18 + $15 - $19 | 0, $18, $18, 0, 0);
   $23 = HEAP8[$5 >> 0] | 0;
  } else $23 = $6;
  $24 = $23 << 24 >> 24 < 0;
  if ($24) $27 = HEAP32[$0 >> 2] | 0; else $27 = $0;
  $31 = $18 + (($2 - $3 | 0) >>> 2) | 0;
  $$0 = $27 + ($18 << 2) | 0;
  $$028 = $1;
  while (1) {
   if (($$028 | 0) == ($2 | 0)) break;
   HEAP32[$$0 >> 2] = HEAP32[$$028 >> 2];
   $$0 = $$0 + 4 | 0;
   $$028 = $$028 + 4 | 0;
  }
  HEAP32[$27 + ($31 << 2) >> 2] = 0;
  $36 = $18 + $15 | 0;
  if ($24) {
   HEAP32[$0 + 4 >> 2] = $36;
   break;
  } else {
   HEAP8[$5 >> 0] = $36;
   break;
  }
 } while (0);
 return $0 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $4 = HEAP32[$0 + 8 >> 2] | 0;
 $6 = HEAP32[$0 + 4 >> 2] | 0;
 if ($4 - $6 >> 2 >>> 0 < $1 >>> 0) {
  $10 = HEAP32[$0 >> 2] | 0;
  $12 = $6 - $10 >> 2;
  $13 = $12 + $1 | 0;
  if ($13 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $16 = $4 - $10 | 0;
  $19 = $16 >> 1;
  __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($2, $16 >> 2 >>> 0 < 536870911 ? ($19 >>> 0 < $13 >>> 0 ? $13 : $19) : 1073741823, $12, $0 + 16 | 0);
  $21 = $2 + 8 | 0;
  $$0$i = $1;
  $22 = HEAP32[$21 >> 2] | 0;
  do {
   HEAP32[$22 >> 2] = 0;
   $22 = (HEAP32[$21 >> 2] | 0) + 4 | 0;
   HEAP32[$21 >> 2] = $22;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($0, $1);
 STACKTOP = sp;
 return;
}

function __ZL21luaL_SpringOptCStringP9lua_StateiPKcPjPFS2_S0_iS2_S3_EPFS2_S0_iS3_EiS2_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $$1 = 0, $18 = 0, $19 = 0, $21 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 if (HEAP32[$0 + 96 >> 2] | 0) {
  $$1 = __Z15luaL_optlstringP9lua_StateiPKcPj($0, $1, $2, 0) | 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $8 = __Z13lua_tolstringP9lua_StateiPj($0, $1, 0) | 0;
 if ($8 | 0) {
  $$1 = $8;
  STACKTOP = sp;
  return $$1 | 0;
 }
 if ((__Z8lua_typeP9lua_Statei($0, $1) | 0) == 4) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 if ((__Z8lua_typeP9lua_Statei($0, $1) | 0) < 1) {
  $$1 = $2;
  STACKTOP = sp;
  return $$1 | 0;
 }
 if (($1 + 9999 | 0) >>> 0 < 1e4) $$0$i = $1 + 1 + (__Z10lua_gettopP9lua_State($0) | 0) | 0; else $$0$i = $1;
 $18 = __Z24spring_lua_getHandleNameP9lua_State($0 | 0) | 0;
 $19 = __Z12lua_typenameP9lua_Statei($0, 4) | 0;
 $21 = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, $1) | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = $$0$i;
 HEAP32[$vararg_buffer + 4 >> 2] = $18;
 HEAP32[$vararg_buffer + 8 >> 2] = $3;
 HEAP32[$vararg_buffer + 12 >> 2] = $19;
 HEAP32[$vararg_buffer + 16 >> 2] = $21;
 _log_frontend_record(40, 114224, 83385, $vararg_buffer);
 $$1 = $2;
 STACKTOP = sp;
 return $$1 | 0;
}

function __Z14luaF_findupvalP9lua_StateP10lua_TValue($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$038$lcssa = 0, $$03842 = 0, $$03842$phi = 0, $12 = 0, $14 = 0, $24 = 0, $26 = 0, $3 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0;
 $3 = HEAP32[$0 + 16 >> 2] | 0;
 $4 = $0 + 88 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 L1 : do if (!$5) $$038$lcssa = $4; else {
  $$03842 = $4;
  $8 = $5;
  while (1) {
   $9 = HEAP32[$8 + 8 >> 2] | 0;
   if ($9 >>> 0 < $1 >>> 0) {
    $$038$lcssa = $$03842;
    break L1;
   }
   if (($9 | 0) == ($1 | 0)) break;
   $24 = HEAP32[$8 >> 2] | 0;
   if (!$24) {
    $$038$lcssa = $8;
    break L1;
   } else {
    $$03842$phi = $8;
    $8 = $24;
    $$03842 = $$03842$phi;
   }
  }
  $12 = $8 + 5 | 0;
  $14 = HEAPU8[$12 >> 0] | 0;
  if (!($14 & 3 & ((HEAPU8[$3 + 20 >> 0] | 0) ^ 3))) {
   $$0 = $8;
   return $$0 | 0;
  }
  HEAP8[$12 >> 0] = $14 ^ 3;
  $$0 = $8;
  return $$0 | 0;
 } while (0);
 $26 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 20) | 0;
 HEAP8[$26 + 4 >> 0] = 10;
 HEAP8[$26 + 5 >> 0] = (HEAPU8[$3 + 20 >> 0] | 0) & 3;
 HEAP32[$26 + 8 >> 2] = $1;
 HEAP32[$26 >> 2] = HEAP32[$$038$lcssa >> 2];
 HEAP32[$$038$lcssa >> 2] = $26;
 HEAP32[$26 + 12 >> 2] = $3 + 104;
 $38 = $3 + 120 | 0;
 $39 = HEAP32[$38 >> 2] | 0;
 HEAP32[$26 + 16 >> 2] = $39;
 HEAP32[$39 + 12 >> 2] = $26;
 HEAP32[$38 >> 2] = $26;
 $$0 = $26;
 return $$0 | 0;
}

function __Z16luaL_checkoptionP9lua_StateiPKcPKS2_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$017 = 0, $$019 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 if (!$2) {
  $6 = __Z13lua_tolstringP9lua_StateiPj($0, $1, 0) | 0;
  if (!$6) {
   $8 = __Z12lua_typenameP9lua_Statei($0, 4) | 0;
   $10 = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, $1) | 0) | 0;
   HEAP32[$vararg_buffer >> 2] = $8;
   HEAP32[$vararg_buffer + 4 >> 2] = $10;
   __Z13luaL_argerrorP9lua_StateiPKc($0, $1, __Z15lua_pushfstringP9lua_StatePKcz($0, 85622, $vararg_buffer) | 0) | 0;
   $15 = 0;
  } else $15 = $6;
 } else $15 = __Z15luaL_optlstringP9lua_StateiPKcPj($0, $1, $2, 0) | 0;
 $12 = HEAP32[$3 >> 2] | 0;
 L6 : do if ($12 | 0) {
  $$019 = 0;
  $14 = $12;
  while (1) {
   if (!(_strcmp($14, $15) | 0)) {
    $$017 = $$019;
    break;
   }
   $$019 = $$019 + 1 | 0;
   $14 = HEAP32[$3 + ($$019 << 2) >> 2] | 0;
   if (!$14) break L6;
  }
  STACKTOP = sp;
  return $$017 | 0;
 } while (0);
 HEAP32[$vararg_buffer2 >> 2] = $15;
 $$017 = __Z13luaL_argerrorP9lua_StateiPKc($0, $1, __Z15lua_pushfstringP9lua_StatePKcz($0, 85642, $vararg_buffer2) | 0) | 0;
 STACKTOP = sp;
 return $$017 | 0;
}

function __ZL6markmtP12global_State($0) {
 $0 = $0 | 0;
 var $16 = 0, $2 = 0, $23 = 0, $30 = 0, $37 = 0, $44 = 0, $51 = 0, $58 = 0, $9 = 0;
 $2 = HEAP32[$0 + 124 >> 2] | 0;
 if ($2 | 0) if (HEAP8[$2 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $2);
 $9 = HEAP32[$0 + 128 >> 2] | 0;
 if ($9 | 0) if (HEAP8[$9 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $9);
 $16 = HEAP32[$0 + 132 >> 2] | 0;
 if ($16 | 0) if (HEAP8[$16 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $16);
 $23 = HEAP32[$0 + 136 >> 2] | 0;
 if ($23 | 0) if (HEAP8[$23 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $23);
 $30 = HEAP32[$0 + 140 >> 2] | 0;
 if ($30 | 0) if (HEAP8[$30 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $30);
 $37 = HEAP32[$0 + 144 >> 2] | 0;
 if ($37 | 0) if (HEAP8[$37 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $37);
 $44 = HEAP32[$0 + 148 >> 2] | 0;
 if ($44 | 0) if (HEAP8[$44 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $44);
 $51 = HEAP32[$0 + 152 >> 2] | 0;
 if ($51 | 0) if (HEAP8[$51 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($0, $51);
 $58 = HEAP32[$0 + 156 >> 2] | 0;
 if (!$58) return;
 if (!(HEAP8[$58 + 5 >> 0] & 3)) return;
 __ZL16reallymarkobjectP12global_StateP8GCObject($0, $58);
 return;
}

function __Z12lua_isstringP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i$i = 0, $22 = 0, $31 = 0, $32 = 0, $42 = 0, $43 = 0, $6 = 0;
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  if ($6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) $$1$i$i = $6; else {
   $43 = 0;
   $42 = $43 & 1;
   return $42 | 0;
  }
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    if (($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0)) $43 = 0; else {
     $$1$i$i = $31 + 20 + ($32 + -1 << 3) | 0;
     break L1;
    }
    $42 = $43 & 1;
    return $42 | 0;
   }
  }
 } while (0);
 if (($$1$i$i | 0) == 108164) {
  $43 = 0;
  $42 = $43 & 1;
  return $42 | 0;
 }
 $43 = ((HEAP32[$$1$i$i + 4 >> 2] | 0) + -3 | 0) >>> 0 < 2;
 $42 = $43 & 1;
 return $42 | 0;
}

function __ZN35TypedStringConvertibleOptionalValueIiE10FromStringERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 $3 = $1 + 60 | 0;
 $4 = $1 + 8 | 0;
 HEAP32[$1 >> 2] = 68004;
 HEAP32[$3 >> 2] = 68024;
 HEAP32[$1 + 4 >> 2] = 0;
 __ZNSt3__28ios_base4initEPv($1 + 60 | 0, $4);
 HEAP32[$1 + 132 >> 2] = 0;
 HEAP32[$1 + 136 >> 2] = -1;
 HEAP32[$1 >> 2] = 68044;
 HEAP32[$3 >> 2] = 68064;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($4);
 HEAP32[$4 >> 2] = 67920;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP32[$9 + 12 >> 2] = 0;
 HEAP32[$1 + 56 >> 2] = 8;
 __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($4, $0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERi($1, $2) | 0;
 $11 = HEAP32[$2 >> 2] | 0;
 HEAP32[$1 >> 2] = 68044;
 HEAP32[$3 >> 2] = 68064;
 HEAP32[$4 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($1, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 STACKTOP = sp;
 return $11 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $14 = 0, $21 = 0, $27 = 0, $28 = 0, $37 = 0, $39 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 255]($7) | 0;
 $14 = HEAP8[$11 + 8 + 3 >> 0] | 0;
 if ($14 << 24 >> 24 < 0) $28 = HEAP32[$11 + 4 >> 2] | 0; else $28 = $14 & 255;
 $21 = HEAP8[$11 + 20 + 3 >> 0] | 0;
 if ($21 << 24 >> 24 < 0) $27 = HEAP32[$11 + 16 >> 2] | 0; else $27 = $21 & 255;
 do if (($28 | 0) == (0 - $27 | 0)) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4; else {
  HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
  $37 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 24 | 0, $5, $4, 0) | 0) - $11 | 0;
  $39 = HEAP32[$1 >> 2] | 0;
  if (($39 | 0) == 12 & ($37 | 0) == 0) {
   HEAP32[$1 >> 2] = 0;
   break;
  }
  if (($39 | 0) < 12 & ($37 | 0) == 12) HEAP32[$1 >> 2] = $39 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZL11math_randomP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $16 = 0, $18 = 0, $19 = 0, $24 = 0.0, $31 = 0, $4 = 0.0, $6 = 0, $9 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = +((_rand() | 0) % 2147483647 | 0 | 0) * 4.656612873077393e-10;
 switch (__Z10lua_gettopP9lua_State($0) | 0) {
 case 0:
  {
   __Z14lua_pushnumberP9lua_Statef($0, $4);
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 1:
  {
   $6 = __Z17luaL_checkintegerP9lua_Statei($0, 1) | 0;
   if (($6 | 0) <= 0) __Z13luaL_argerrorP9lua_StateiPKc($0, 1, 87340) | 0;
   $9 = $4 * +($6 | 0);
   if (!($9 >= 0.0)) $16 = ~~($9 + 9.999999974752427e-07) + -1 | 0; else $16 = ~~$9;
   __Z14lua_pushnumberP9lua_Statef($0, +($16 | 0) + 1.0);
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 2:
  {
   $18 = __Z17luaL_checkintegerP9lua_Statei($0, 1) | 0;
   $19 = __Z17luaL_checkintegerP9lua_Statei($0, 2) | 0;
   if (($19 | 0) < ($18 | 0)) __Z13luaL_argerrorP9lua_StateiPKc($0, 2, 87340) | 0;
   $24 = $4 * +(1 - $18 + $19 | 0);
   if (!($24 >= 0.0)) $31 = ~~($24 + 9.999999974752427e-07) + -1 | 0; else $31 = ~~$24;
   __Z14lua_pushnumberP9lua_Statef($0, +($18 | 0) + +($31 | 0));
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 default:
  {
   $$0 = __Z10luaL_errorP9lua_StatePKcz($0, 87358, sp) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZL21log_sink_cleanup_filev() {
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$05$i$i$i$i = 0, $$idx3$val$i = 0, $$sroa$09$012$i = 0, $10 = 0, $14 = 0, $16 = 0, $19 = 0;
 if (!(HEAP8[106232] | 0)) if (___cxa_guard_acquire(106232) | 0) {
  HEAP32[26995] = 0;
  HEAP32[26996] = 0;
  HEAP32[26994] = 107980;
  ___cxa_atexit(171, 107976, ___dso_handle | 0) | 0;
 }
 if (!(HEAP32[26996] | 0)) return;
 if (!(HEAP8[106232] | 0)) if (___cxa_guard_acquire(106232) | 0) {
  HEAP32[26995] = 0;
  HEAP32[26996] = 0;
  HEAP32[26994] = 107980;
  ___cxa_atexit(171, 107976, ___dso_handle | 0) | 0;
 }
 $10 = HEAP32[26994] | 0;
 if (($10 | 0) == 107980) return; else $$sroa$09$012$i = $10;
 while (1) {
  $$idx3$val$i = HEAP32[$$sroa$09$012$i + 28 >> 2] | 0;
  if ($$idx3$val$i | 0) _fflush($$idx3$val$i) | 0;
  $14 = HEAP32[$$sroa$09$012$i + 4 >> 2] | 0;
  if (!$14) {
   $$0$i$i$i$i = $$sroa$09$012$i;
   while (1) {
    $19 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$19 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
     $$05$i$i$i$i = $19;
     break;
    } else $$0$i$i$i$i = $19;
   }
  } else {
   $$0$i$i$i$i$i = $14;
   while (1) {
    $16 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
    if (!$16) {
     $$05$i$i$i$i = $$0$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i = $16;
   }
  }
  if (($$05$i$i$i$i | 0) == 107980) break; else $$sroa$09$012$i = $$05$i$i$i$i;
 }
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $13 = 0, $20 = 0, $26 = 0, $27 = 0, $36 = 0, $38 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 255]($7) | 0;
 $13 = HEAP8[$11 + 11 >> 0] | 0;
 if ($13 << 24 >> 24 < 0) $27 = HEAP32[$11 + 4 >> 2] | 0; else $27 = $13 & 255;
 $20 = HEAP8[$11 + 12 + 11 >> 0] | 0;
 if ($20 << 24 >> 24 < 0) $26 = HEAP32[$11 + 16 >> 2] | 0; else $26 = $20 & 255;
 do if (($27 | 0) == (0 - $26 | 0)) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4; else {
  HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
  $36 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 24 | 0, $5, $4, 0) | 0) - $11 | 0;
  $38 = HEAP32[$1 >> 2] | 0;
  if (($38 | 0) == 12 & ($36 | 0) == 0) {
   HEAP32[$1 >> 2] = 0;
   break;
  }
  if (($38 | 0) < 12 & ($36 | 0) == 12) HEAP32[$1 >> 2] = $38 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $19 = 0, $26 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $42 = 0, $44 = 0, $9 = 0;
 __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $1);
 if ((HEAP32[$1 >> 2] | 0) == 12) {
  $9 = $1 + 4 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ((HEAP32[$1 + 12 >> 2] | 0) == (HEAP32[$1 + 16 >> 2] | 0)) {
   $$0 = $10;
   return $$0 | 0;
  }
  if (($10 | 0) >= (HEAPU8[$0 + 50 >> 0] | 0 | 0)) {
   __ZL7exp2regP9FuncStateP7expdesci($0, $1, $10);
   $$0 = HEAP32[$9 >> 2] | 0;
   return $$0 | 0;
  }
 }
 __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $1);
 if ((HEAP32[$1 >> 2] | 0) == 12) {
  $19 = HEAP32[$1 + 4 >> 2] | 0;
  if (!($19 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($19 | 0)) {
   $26 = $0 + 36 | 0;
   HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + -1;
  }
 }
 $29 = $0 + 36 | 0;
 $30 = HEAP32[$29 >> 2] | 0;
 $31 = $30 + 1 | 0;
 $32 = HEAP32[$0 >> 2] | 0;
 if (($30 | 0) < (HEAPU8[$32 + 75 >> 0] | 0 | 0)) $44 = $30; else {
  if (($30 | 0) > 248) {
   __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
   $42 = HEAP32[$0 >> 2] | 0;
  } else $42 = $32;
  HEAP8[$42 + 75 >> 0] = $31;
  $44 = HEAP32[$29 >> 2] | 0;
 }
 HEAP32[$29 >> 2] = $44 + 1;
 __ZL7exp2regP9FuncStateP7expdesci($0, $1, $44);
 $$0 = HEAP32[$1 + 4 >> 2] | 0;
 return $$0 | 0;
}

function __Z12lua_isnumberP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $2 = 0, $23 = 0, $32 = 0, $33 = 0, $46 = 0, $47 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 L1 : do if (($1 | 0) > 0) {
  $7 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $7 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $23 = $0 + 80 | 0;
    HEAP32[$23 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $23;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $32 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $33 = -10002 - $1 | 0;
    $$1$i = ($33 | 0) > (HEAPU8[$32 + 7 >> 0] | 0 | 0) ? 108164 : $32 + 20 + ($33 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 if ((HEAP32[$$1$i + 4 >> 2] | 0) == 3) {
  $47 = 1;
  $46 = $47 & 1;
  STACKTOP = sp;
  return $46 | 0;
 }
 $47 = (__Z13luaV_tonumberPK10lua_TValuePS_($$1$i, $2) | 0) != 0;
 $46 = $47 & 1;
 STACKTOP = sp;
 return $46 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$028 = 0, $14 = 0, $17 = 0, $18 = 0, $22 = 0, $26 = 0, $3 = 0, $32 = 0, $4 = 0, $5 = 0, $scevgep29 = 0;
 $3 = $1;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 if ($5 << 24 >> 24 < 0) {
  $17 = HEAP32[$0 + 4 >> 2] | 0;
  $18 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $17 = $5 & 255;
  $18 = 10;
 }
 $14 = $2 - $3 | 0;
 do if ($14 | 0) {
  if (($18 - $17 | 0) >>> 0 < $14 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $18, $17 + $14 - $18 | 0, $17, $17, 0, 0);
   $22 = HEAP8[$4 >> 0] | 0;
  } else $22 = $5;
  if ($22 << 24 >> 24 < 0) $26 = HEAP32[$0 >> 2] | 0; else $26 = $0;
  $scevgep29 = $2 + ($17 - $3) | 0;
  $$0 = $26 + $17 | 0;
  $$028 = $1;
  while (1) {
   if (($$028 | 0) == ($2 | 0)) break;
   HEAP8[$$0 >> 0] = HEAP8[$$028 >> 0] | 0;
   $$0 = $$0 + 1 | 0;
   $$028 = $$028 + 1 | 0;
  }
  HEAP8[$26 + $scevgep29 >> 0] = 0;
  $32 = $17 + $14 | 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $32;
   break;
  } else {
   HEAP8[$4 >> 0] = $32;
   break;
  }
 } while (0);
 return $0 | 0;
}

function __ZL8condjumpP9FuncState6OpCodeiii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$idx$val$idx$val$i$i = 0, $11 = 0, $15 = 0, $16 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $31 = 0, $36 = 0;
 $11 = $0 + 12 | 0;
 __ZL9luaK_codeP9FuncStateji($0, $2 << 6 | $1 | $3 << 23 | $4 << 14, HEAP32[(HEAP32[$11 >> 2] | 0) + 8 >> 2] | 0) | 0;
 $15 = $0 + 32 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 HEAP32[$15 >> 2] = -1;
 $20 = __ZL9luaK_codeP9FuncStateji($0, 2147450902, HEAP32[(HEAP32[$11 >> 2] | 0) + 8 >> 2] | 0) | 0;
 if (($16 | 0) == -1) {
  $$0$i = $20;
  return $$0$i | 0;
 }
 if (($20 | 0) == -1) {
  $$0$i = $16;
  return $$0$i | 0;
 }
 $$idx$val$idx$val$i$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
 $$0$i$i = $20;
 while (1) {
  $23 = $$idx$val$idx$val$i$i + ($$0$i$i << 2) | 0;
  $24 = HEAP32[$23 >> 2] | 0;
  $26 = ($24 >>> 14) + -131071 | 0;
  $$0$i$i$i = ($26 | 0) == -1 ? -1 : $$0$i$i + 1 + $26 | 0;
  if (($$0$i$i$i | 0) == -1) break; else $$0$i$i = $$0$i$i$i;
 }
 $31 = $16 + ~$$0$i$i | 0;
 if (((($31 | 0) > -1 ? $31 : 0 - $31 | 0) | 0) > 131071) {
  __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$11 >> 2] | 0, 89696);
  $36 = HEAP32[$23 >> 2] | 0;
 } else $36 = $24;
 HEAP32[$23 >> 2] = $36 & 16383 | ($31 << 14) + 2147467264;
 $$0$i = $20;
 return $$0$i | 0;
}

function ___fwritex($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$032 = 0, $$033 = 0, $$034 = 0, $$1 = 0, $10 = 0, $12 = 0, $14 = 0, $22 = 0, $3 = 0, $32 = 0, $4 = 0, $9 = 0, label = 0;
 $3 = $2 + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) if (!(___towrite($2) | 0)) {
  $12 = HEAP32[$3 >> 2] | 0;
  label = 5;
 } else $$032 = 0; else {
  $12 = $4;
  label = 5;
 }
 L5 : do if ((label | 0) == 5) {
  $9 = $2 + 20 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $14 = $10;
  if (($12 - $10 | 0) >>> 0 < $1 >>> 0) {
   $$032 = FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 63]($2, $0, $1) | 0;
   break;
  }
  L10 : do if ((HEAP8[$2 + 75 >> 0] | 0) > -1) {
   $$0 = $1;
   while (1) {
    if (!$$0) {
     $$033 = $1;
     $$034 = $0;
     $$1 = 0;
     $32 = $14;
     break L10;
    }
    $22 = $$0 + -1 | 0;
    if ((HEAP8[$0 + $22 >> 0] | 0) == 10) break; else $$0 = $22;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 63]($2, $0, $$0) | 0) >>> 0 < $$0 >>> 0) {
    $$032 = $$0;
    break L5;
   }
   $$033 = $1 - $$0 | 0;
   $$034 = $0 + $$0 | 0;
   $$1 = $$0;
   $32 = HEAP32[$9 >> 2] | 0;
  } else {
   $$033 = $1;
   $$034 = $0;
   $$1 = 0;
   $32 = $14;
  } while (0);
  _memcpy($32 | 0, $$034 | 0, $$033 | 0) | 0;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + $$033;
  $$032 = $$1 + $$033 | 0;
 } while (0);
 return $$032 | 0;
}

function __ZL8str_byteP9lua_State($0) {
 $0 = $0 | 0;
 var $$ = 0, $$0$i = 0, $$0$i36 = 0, $$033 = 0, $$034 = 0, $$037 = 0, $1 = 0, $10 = 0, $11 = 0, $16 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 4 | 0;
 $2 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $1) | 0;
 $3 = __Z15luaL_optintegerP9lua_Stateii($0, 2, 1) | 0;
 $$0$i = (($3 | 0) < 0 ? (HEAP32[$1 >> 2] | 0) + 1 | 0 : 0) + $3 | 0;
 $9 = ($$0$i | 0) < 0 ? 0 : $$0$i;
 $10 = __Z15luaL_optintegerP9lua_Stateii($0, 3, $9) | 0;
 $11 = HEAP32[$1 >> 2] | 0;
 $$0$i36 = (($10 | 0) < 0 ? $11 + 1 | 0 : 0) + $10 | 0;
 $16 = ($$0$i36 | 0) < 0 ? 0 : $$0$i36;
 $$ = ($9 | 0) < 1 ? 1 : $$0$i;
 $$034 = $16 >>> 0 > $11 >>> 0 ? $11 : $16;
 if (($$034 | 0) < ($$ | 0)) {
  $$033 = 0;
  STACKTOP = sp;
  return $$033 | 0;
 }
 $20 = $$034 - $$ | 0;
 $21 = $20 + 1 | 0;
 if (($$034 | 0) == 2147483647) __Z10luaL_errorP9lua_StatePKcz($0, 88924, sp) | 0;
 __Z15luaL_checkstackP9lua_StateiPKc($0, $21, 88924);
 if (($20 | 0) < 0) {
  $$033 = $21;
  STACKTOP = sp;
  return $$033 | 0;
 }
 $24 = $$ + -1 | 0;
 $$037 = 0;
 while (1) {
  __Z15lua_pushintegerP9lua_Statei($0, HEAPU8[$2 + ($24 + $$037) >> 0] | 0);
  if (($$037 | 0) < ($20 | 0)) $$037 = $$037 + 1 | 0; else {
   $$033 = $21;
   break;
  }
 }
 STACKTOP = sp;
 return $$033 | 0;
}

function __ZN6google26ShowUsageWithFlagsRestrictEPKcS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $12 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 HEAP32[$2 >> 2] = 0;
 $4 = $2 + 4 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 if ($1 | 0) if (HEAP8[$1 >> 0] | 0) {
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, $1, _strlen($1) | 0);
  __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($2, $3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 }
 __ZN6googleL26ShowUsageWithFlagsMatchingEPKcRKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE($0, $2);
 $10 = HEAP32[$2 >> 2] | 0;
 if (!$10) {
  STACKTOP = sp;
  return;
 }
 $12 = HEAP32[$4 >> 2] | 0;
 if (($12 | 0) == ($10 | 0)) $18 = $10; else {
  $15 = $12;
  do {
   $14 = $15 + -12 | 0;
   HEAP32[$4 >> 2] = $14;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
   $15 = HEAP32[$4 >> 2] | 0;
  } while (($15 | 0) != ($10 | 0));
  $18 = HEAP32[$2 >> 2] | 0;
 }
 __ZdlPv($18);
 STACKTOP = sp;
 return;
}

function __Z12lua_settableP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $40 = 0, $41 = 0, $6 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $40 = $0 + 8 | 0;
 $41 = HEAP32[$40 >> 2] | 0;
 __Z13luaV_settableP9lua_StatePK10lua_TValuePS1_S4_($0, $$1$i, $41 + -16 | 0, $41 + -8 | 0);
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + -16;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __Z13lua_pushvalueP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $40 = 0, $41 = 0, $6 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $40 = $0 + 8 | 0;
 $41 = HEAP32[$40 >> 2] | 0;
 HEAP32[$41 >> 2] = HEAP32[$$1$i >> 2];
 HEAP32[$41 + 4 >> 2] = HEAP32[$$1$i + 4 >> 2];
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $14 = 0, $18 = 0, $2 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 12 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 4 | 0;
 $6 = sp;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($4, $0, 0);
 if (HEAP8[$4 >> 0] | 0) {
  HEAP32[$5 >> 2] = 0;
  HEAP32[$6 >> 2] = __ZNKSt3__28ios_base6getlocEv($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $14 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110192) | 0;
  $18 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $23 = HEAP32[(HEAP32[$14 >> 2] | 0) + 28 >> 2] | 0;
  HEAP32[$2 >> 2] = HEAP32[$18 + 24 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
  FUNCTION_TABLE_iiiiiii[$23 & 63]($14, $$byval_copy, $$byval_copy1, $18, $5, $1) | 0;
  __ZNSt3__26localeD2Ev($6);
  $27 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $29 = $27 + 16 | 0;
  HEAP32[$29 >> 2] = HEAP32[$29 >> 2] | HEAP32[$5 >> 2] | (HEAP32[$27 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERf($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $14 = 0, $18 = 0, $2 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 12 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 4 | 0;
 $6 = sp;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($4, $0, 0);
 if (HEAP8[$4 >> 0] | 0) {
  HEAP32[$5 >> 2] = 0;
  HEAP32[$6 >> 2] = __ZNKSt3__28ios_base6getlocEv($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $14 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110192) | 0;
  $18 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $23 = HEAP32[(HEAP32[$14 >> 2] | 0) + 40 >> 2] | 0;
  HEAP32[$2 >> 2] = HEAP32[$18 + 24 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
  FUNCTION_TABLE_iiiiiii[$23 & 63]($14, $$byval_copy, $$byval_copy1, $18, $5, $1) | 0;
  __ZNSt3__26localeD2Ev($6);
  $27 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $29 = $27 + 16 | 0;
  HEAP32[$29 >> 2] = HEAP32[$29 >> 2] | HEAP32[$5 >> 2] | (HEAP32[$27 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEErsERb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $14 = 0, $18 = 0, $2 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 12 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 4 | 0;
 $6 = sp;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($4, $0, 0);
 if (HEAP8[$4 >> 0] | 0) {
  HEAP32[$5 >> 2] = 0;
  HEAP32[$6 >> 2] = __ZNKSt3__28ios_base6getlocEv($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $14 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 110192) | 0;
  $18 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $23 = HEAP32[(HEAP32[$14 >> 2] | 0) + 12 >> 2] | 0;
  HEAP32[$2 >> 2] = HEAP32[$18 + 24 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
  FUNCTION_TABLE_iiiiiii[$23 & 63]($14, $$byval_copy, $$byval_copy1, $18, $5, $1) | 0;
  __ZNSt3__26localeD2Ev($6);
  $27 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $29 = $27 + 16 | 0;
  HEAP32[$29 >> 2] = HEAP32[$29 >> 2] | HEAP32[$5 >> 2] | (HEAP32[$27 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $27 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $7 = sp + 4 | 0;
 $8 = sp;
 HEAP32[$8 >> 2] = $7 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0 + 8 | 0, $7, $8, $4, $5, $6);
 $11 = HEAP32[$8 >> 2] | 0;
 $$0$i$i = $7;
 $$sroa$04$0$i = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($11 | 0)) break;
  $14 = HEAP8[$$0$i$i >> 0] | 0;
  do if (!$$sroa$04$0$i) $$sroa$04$1$i = 0; else {
   $16 = $$sroa$04$0$i + 24 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$$sroa$04$0$i + 28 >> 2] | 0)) {
    $27 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$sroa$04$0$i >> 2] | 0) + 52 >> 2] & 31]($$sroa$04$0$i, $14 & 255) | 0) == -1;
    $$sroa$04$1$i = $27 ? 0 : $$sroa$04$0$i;
    break;
   } else {
    HEAP32[$16 >> 2] = $17 + 1;
    HEAP8[$17 >> 0] = $14;
    $$sroa$04$1$i = $$sroa$04$0$i;
    break;
   }
  } while (0);
  $$0$i$i = $$0$i$i + 1 | 0;
  $$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;
 return $$sroa$04$0$i | 0;
}

function __Z12luaS_newlstrP9lua_StatePKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$016$lcssa$i = 0, $$01617$i = 0, $$018$i = 0, $$028 = 0, $$02832 = 0, $$02833 = 0, $$2 = 0, $14 = 0, $18 = 0, $32 = 0, $34 = 0, $4 = 0;
 $4 = ($2 >>> 5) + 1 | 0;
 if ($4 >>> 0 > $2 >>> 0) $$016$lcssa$i = $2; else {
  $$01617$i = $2;
  $$018$i = $2;
  while (1) {
   $14 = ($$01617$i << 5) + ($$01617$i >>> 2) + (HEAPU8[$1 + ($$018$i + -1) >> 0] | 0) ^ $$01617$i;
   $$018$i = $$018$i - $4 | 0;
   if ($$018$i >>> 0 < $4 >>> 0) {
    $$016$lcssa$i = $14;
    break;
   } else $$01617$i = $14;
  }
 }
 $18 = HEAP32[$0 + 16 >> 2] | 0;
 $$02832 = HEAP32[(HEAP32[$18 >> 2] | 0) + (((HEAP32[$18 + 8 >> 2] | 0) + -1 & $$016$lcssa$i) << 2) >> 2] | 0;
 L5 : do if ($$02832 | 0) {
  $$02833 = $$02832;
  while (1) {
   if ((HEAP32[$$02833 + 12 >> 2] | 0) == ($2 | 0)) if (!(_memcmp($1, $$02833 + 16 | 0, $2) | 0)) break;
   $$028 = HEAP32[$$02833 >> 2] | 0;
   if (!$$028) break L5; else $$02833 = $$028;
  }
  $32 = $$02833 + 5 | 0;
  $34 = HEAPU8[$32 >> 0] | 0;
  if (!($34 & 3 & ((HEAPU8[$18 + 20 >> 0] | 0) ^ 3))) {
   $$2 = $$02833;
   return $$2 | 0;
  }
  HEAP8[$32 >> 0] = $34 ^ 3;
  $$2 = $$02833;
  return $$2 | 0;
 } while (0);
 $$2 = __ZL7newlstrP9lua_StatePKcjj($0, $1, $2, $$016$lcssa$i) | 0;
 return $$2 | 0;
}

function __ZN8LuaTableD2Ev($0) {
 $0 = $0 | 0;
 var $$sroa$0$0$copyload$i$i$i = 0, $1 = 0, $10 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $5 = 0, $6 = 0, $7 = 0;
 $1 = $0 + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 L1 : do if ($2 | 0) {
  $5 = HEAP32[$2 + 96 >> 2] | 0;
  $6 = $2 + 100 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  L3 : do if (($5 | 0) == ($7 | 0)) $$sroa$0$0$copyload$i$i$i = $5; else {
   $10 = $5;
   while (1) {
    if ((HEAP32[$10 >> 2] | 0) == ($0 | 0)) {
     $$sroa$0$0$copyload$i$i$i = $10;
     break L3;
    }
    $10 = $10 + 4 | 0;
    if (($10 | 0) == ($7 | 0)) break L1;
   }
  } while (0);
  if (($$sroa$0$0$copyload$i$i$i | 0) != ($7 | 0)) {
   HEAP32[$$sroa$0$0$copyload$i$i$i >> 2] = HEAP32[$7 + -4 >> 2];
   HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + -4;
  }
 } while (0);
 $19 = $0 + 20 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 if ($20 | 0) {
  $22 = $0 + 24 | 0;
  $23 = HEAP32[$22 >> 2] | 0;
  if (($23 | 0) != -2) {
   __Z10luaL_unrefP9lua_Stateii($20, -1e4, $23);
   $25 = HEAP32[$1 >> 2] | 0;
   if ($25 | 0) if ((HEAP32[$25 + 128 >> 2] | 0) == (HEAP32[$22 >> 2] | 0)) {
    __Z10lua_settopP9lua_Statei(HEAP32[$19 >> 2] | 0, 0);
    HEAP32[(HEAP32[$1 >> 2] | 0) + 128 >> 2] = -2;
   }
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}

function __Z14luaG_typeerrorP9lua_StatePK10lua_TValuePKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$08$i = 0, $10 = 0, $12 = 0, $22 = 0, $24 = 0, $3 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 24 | 0;
 HEAP32[$3 >> 2] = 0;
 $7 = HEAP32[69276 + (HEAP32[$1 + 4 >> 2] << 2) >> 2] | 0;
 $9 = HEAP32[$0 + 20 >> 2] | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $12 = HEAP32[$9 + 8 >> 2] | 0;
 L1 : do if ($10 >>> 0 < $12 >>> 0) {
  $$08$i = $10;
  while (1) {
   if (($$08$i | 0) == ($1 | 0)) break;
   $$08$i = $$08$i + 8 | 0;
   if ($$08$i >>> 0 >= $12 >>> 0) break L1;
  }
  $22 = __ZL10getobjnameP9lua_StateP8CallInfoiPPKc($0, $9, $1 - (HEAP32[$0 + 12 >> 2] | 0) >> 3, $3) | 0;
  if ($22 | 0) {
   $24 = HEAP32[$3 >> 2] | 0;
   HEAP32[$vararg_buffer >> 2] = $2;
   HEAP32[$vararg_buffer + 4 >> 2] = $22;
   HEAP32[$vararg_buffer + 8 >> 2] = $24;
   HEAP32[$vararg_buffer + 12 >> 2] = $7;
   __Z13luaG_runerrorP9lua_StatePKcz($0, 86849, $vararg_buffer);
   STACKTOP = sp;
   return;
  }
 } while (0);
 HEAP32[$vararg_buffer4 >> 2] = $2;
 HEAP32[$vararg_buffer4 + 4 >> 2] = $7;
 __Z13luaG_runerrorP9lua_StatePKcz($0, 86884, $vararg_buffer4);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $7 = sp + 8 | 0;
 $8 = sp;
 HEAP32[$8 >> 2] = $7 + 400;
 __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc($0 + 8 | 0, $7, $8, $4, $5, $6);
 $11 = HEAP32[$8 >> 2] | 0;
 $$0$i$i = $7;
 $$sroa$04$0$i = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($11 | 0)) break;
  $14 = HEAP32[$$0$i$i >> 2] | 0;
  if (!$$sroa$04$0$i) $$sroa$04$1$i = 0; else {
   $16 = $$sroa$04$0$i + 24 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$$sroa$04$0$i + 28 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$sroa$04$0$i >> 2] | 0) + 52 >> 2] & 31]($$sroa$04$0$i, $14) | 0; else {
    HEAP32[$16 >> 2] = $17 + 4;
    HEAP32[$17 >> 2] = $14;
    $$0$i$i$i$i = $14;
   }
   $$sroa$04$1$i = ($$0$i$i$i$i | 0) == -1 ? 0 : $$sroa$04$0$i;
  }
  $$0$i$i = $$0$i$i + 4 | 0;
  $$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;
 return $$sroa$04$0$i | 0;
}

function __Z10luaF_closeP9lua_StateP10lua_TValue($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $23 = 0, $26 = 0, $3 = 0, $32 = 0, $34 = 0, $40 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 $2 = $0 + 88 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (!$3) return;
 $7 = (HEAP32[$0 + 16 >> 2] | 0) + 20 | 0;
 $9 = $3;
 while (1) {
  $8 = $9 + 8 | 0;
  if ((HEAP32[$8 >> 2] | 0) >>> 0 < $1 >>> 0) {
   label = 10;
   break;
  }
  HEAP32[$2 >> 2] = HEAP32[$9 >> 2];
  if (!((HEAPU8[$9 + 5 >> 0] | 0) & 3 & ((HEAPU8[$7 >> 0] | 0) ^ 3))) {
   $32 = $9 + 12 | 0;
   $34 = $9 + 16 | 0;
   HEAP32[(HEAP32[$34 >> 2] | 0) + 12 >> 2] = HEAP32[$32 >> 2];
   HEAP32[(HEAP32[$32 >> 2] | 0) + 16 >> 2] = HEAP32[$34 >> 2];
   $40 = HEAP32[$8 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$40 >> 2];
   HEAP32[$34 >> 2] = HEAP32[$40 + 4 >> 2];
   HEAP32[$8 >> 2] = $32;
   __Z14luaC_linkupvalP9lua_StateP5UpVal($0, $9);
  } else {
   $23 = $9 + 12 | 0;
   if ((HEAP32[$8 >> 2] | 0) != ($23 | 0)) {
    $26 = $9 + 16 | 0;
    HEAP32[(HEAP32[$26 >> 2] | 0) + 12 >> 2] = HEAP32[$23 >> 2];
    HEAP32[(HEAP32[$23 >> 2] | 0) + 16 >> 2] = HEAP32[$26 >> 2];
   }
   __Z13luaM_realloc_P9lua_StatePvjj($0, $9, 20, 0) | 0;
  }
  $9 = HEAP32[$2 >> 2] | 0;
  if (!$9) {
   label = 10;
   break;
  }
 }
 if ((label | 0) == 10) return;
}

function _vsnprintf($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$$015 = 0, $$0 = 0, $$014 = 0, $$015 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $4 = sp + 112 | 0;
 $5 = sp;
 dest = $5;
 src = 70084;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($1 + -1 | 0) >>> 0 > 2147483646) if (!$1) {
  $$014 = $4;
  $$015 = 1;
  label = 4;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  $$0 = -1;
 } else {
  $$014 = $0;
  $$015 = $1;
  label = 4;
 }
 if ((label | 0) == 4) {
  $11 = -2 - $$014 | 0;
  $$$015 = $$015 >>> 0 > $11 >>> 0 ? $11 : $$015;
  HEAP32[$5 + 48 >> 2] = $$$015;
  $14 = $5 + 20 | 0;
  HEAP32[$14 >> 2] = $$014;
  HEAP32[$5 + 44 >> 2] = $$014;
  $16 = $$014 + $$$015 | 0;
  $17 = $5 + 16 | 0;
  HEAP32[$17 >> 2] = $16;
  HEAP32[$5 + 28 >> 2] = $16;
  $19 = _vfprintf($5, $2, $3) | 0;
  if (!$$$015) $$0 = $19; else {
   $21 = HEAP32[$14 >> 2] | 0;
   HEAP8[$21 + ((($21 | 0) == (HEAP32[$17 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z13luaM_growaux_P9lua_StatePvPijiPKc($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $10 = 0, $16 = 0, $17 = 0, $19 = 0, $24 = 0, $27 = 0, $31 = 0, $6 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $6 = HEAP32[$2 >> 2] | 0;
 if (($6 | 0) < (($4 | 0) / 2 | 0 | 0)) {
  $10 = $6 << 1;
  $$0 = ($10 | 0) < 4 ? 4 : $10;
 } else if (($6 | 0) < ($4 | 0)) $$0 = $4; else {
  __Z13luaG_runerrorP9lua_StatePKcz($0, $5, $vararg_buffer);
  $$0 = $4;
 }
 if (($$0 + 1 | 0) >>> 0 > (4294967293 / ($3 >>> 0) | 0) >>> 0) {
  __Z13luaG_runerrorP9lua_StatePKcz($0, 87384, $vararg_buffer1);
  $31 = 0;
  HEAP32[$2 >> 2] = $$0;
  STACKTOP = sp;
  return $31 | 0;
 }
 $16 = Math_imul(HEAP32[$2 >> 2] | 0, $3) | 0;
 $17 = Math_imul($$0, $3) | 0;
 $19 = HEAP32[$0 + 16 >> 2] | 0;
 $24 = FUNCTION_TABLE_iiiii[HEAP32[$19 + 12 >> 2] & 15](HEAP32[$19 + 16 >> 2] | 0, $1, $16, $17) | 0;
 if (($17 | 0) != 0 & ($24 | 0) == 0) __Z10luaD_throwP9lua_Statei($0, 4);
 $27 = $19 + 68 | 0;
 HEAP32[$27 >> 2] = $17 - $16 + (HEAP32[$27 >> 2] | 0);
 $31 = $24;
 HEAP32[$2 >> 2] = $$0;
 STACKTOP = sp;
 return $31 | 0;
}

function __ZL13luaB_tostringP9lua_State($0) {
 $0 = $0 | 0;
 var $5 = 0;
 __Z13luaL_checkanyP9lua_Statei($0, 1);
 if (__Z13luaL_callmetaP9lua_StateiPKc($0, 1, 86079) | 0) return 1;
 do switch (__Z8lua_typeP9lua_Statei($0, 1) | 0) {
 case 3:
  {
   __Z14lua_pushstringP9lua_StatePKc($0, __Z13lua_tolstringP9lua_StateiPj($0, 1, 0) | 0);
   return 1;
  }
 case 4:
  {
   __Z13lua_pushvalueP9lua_Statei($0, 1);
   return 1;
  }
 case 1:
  {
   $5 = __Z13lua_tobooleanP9lua_Statei($0, 1) | 0;
   __Z14lua_pushstringP9lua_StatePKc($0, $5 ? 104928 : 104922);
   return 1;
  }
 case 0:
  {
   __Z15lua_pushlstringP9lua_StatePKcj($0, 89855, 3);
   return 1;
  }
 case -1:
  {
   __Z15lua_pushlstringP9lua_StatePKcj($0, 86090, 6);
   return 1;
  }
 case 5:
  {
   __Z15lua_pushlstringP9lua_StatePKcj($0, 86097, 7);
   return 1;
  }
 case 7:
  {
   __Z15lua_pushlstringP9lua_StatePKcj($0, 86105, 10);
   return 1;
  }
 case 2:
  {
   __Z15lua_pushlstringP9lua_StatePKcj($0, 86116, 15);
   return 1;
  }
 case 6:
  {
   __Z15lua_pushlstringP9lua_StatePKcj($0, 86132, 10);
   return 1;
  }
 case 8:
  {
   __Z15lua_pushlstringP9lua_StatePKcj($0, 86143, 8);
   return 1;
  }
 default:
  {
   __Z15lua_pushlstringP9lua_StatePKcj($0, 86152, 14);
   return 1;
  }
 } while (0);
 return 0;
}

function __Z11luaH_setnumP9lua_StateP5Tablei($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $$1$i = 0, $$pre$phiZ2D = 0.0, $11 = 0.0, $14 = 0, $3 = 0, $31 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $2 + -1 | 0;
 L1 : do if ($4 >>> 0 < (HEAP32[$1 + 28 >> 2] | 0) >>> 0) {
  $$1$i = (HEAP32[$1 + 12 >> 2] | 0) + ($4 << 3) | 0;
  label = 9;
 } else {
  $11 = +($2 | 0);
  $14 = HEAP32[$1 + 16 >> 2] | 0;
  if (!$2) $$0$i = $14; else $$0$i = $14 + ((((HEAPF32[tempDoublePtr >> 2] = $11, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
  while (1) {
   if ((HEAP32[$$0$i + 12 >> 2] | 0) == 3) if (+HEAPF32[$$0$i + 8 >> 2] == $11) break;
   $31 = HEAP32[$$0$i + 16 >> 2] | 0;
   if (!$31) {
    $$pre$phiZ2D = $11;
    break L1;
   } else $$0$i = $31;
  }
  $$1$i = $$0$i;
  label = 9;
 } while (0);
 do if ((label | 0) == 9) if (($$1$i | 0) == 108164) {
  $$pre$phiZ2D = +($2 | 0);
  break;
 } else {
  $$0 = $$1$i;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 HEAPF32[$3 >> 2] = $$pre$phiZ2D;
 HEAP32[$3 + 4 >> 2] = 3;
 $$0 = __ZL6newkeyP9lua_StateP5TablePK10lua_TValue($0, $1, $3) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function ___dup3($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $6 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$0 = ___syscall_ret(-22) | 0; else {
  $6 = ($2 & 524288 | 0) != 0;
  L4 : do if ($6) {
   L5 : while (1) {
    HEAP32[$vararg_buffer >> 2] = $0;
    HEAP32[$vararg_buffer + 4 >> 2] = $1;
    HEAP32[$vararg_buffer + 8 >> 2] = $2;
    $7 = ___syscall330(330, $vararg_buffer | 0) | 0;
    switch ($7 | 0) {
    case -38:
     {
      break L4;
      break;
     }
    case -16:
     break;
    default:
     break L5;
    }
   }
   $$0 = ___syscall_ret($7) | 0;
   break L1;
  } while (0);
  do {
   HEAP32[$vararg_buffer3 >> 2] = $0;
   HEAP32[$vararg_buffer3 + 4 >> 2] = $1;
   $9 = ___syscall63(63, $vararg_buffer3 | 0) | 0;
  } while (($9 | 0) == -16);
  if ($6) {
   HEAP32[$vararg_buffer7 >> 2] = $1;
   HEAP32[$vararg_buffer7 + 4 >> 2] = 2;
   HEAP32[$vararg_buffer7 + 8 >> 2] = 1;
   ___syscall221(221, $vararg_buffer7 | 0) | 0;
  }
  $$0 = ___syscall_ret($9) | 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z12lua_gettableP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $42 = 0, $6 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $42 = (HEAP32[$0 + 8 >> 2] | 0) + -8 | 0;
 __Z13luaV_gettableP9lua_StatePK10lua_TValuePS1_S4_($0, $$1$i, $42, $42);
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __Z13lua_tobooleanP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $41 = 0, $45 = 0, $6 = 0;
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 $41 = HEAP32[$$1$i + 4 >> 2] | 0;
 if (!$41) {
  $45 = 0;
  return $45 | 0;
 }
 if (($41 | 0) != 1) {
  $45 = 1;
  return $45 | 0;
 }
 $45 = (HEAP32[$$1$i >> 2] | 0) != 0;
 return $45 | 0;
}

function __Z15luaK_setreturnsP9FuncStateP7expdesci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $16 = 0, $21 = 0, $31 = 0, $34 = 0, $39 = 0, $40 = 0, $41 = 0, $51 = 0, $53 = 0, $9 = 0;
 switch (HEAP32[$1 >> 2] | 0) {
 case 13:
  {
   $9 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$1 + 4 >> 2] << 2) | 0;
   HEAP32[$9 >> 2] = HEAP32[$9 >> 2] & -8372225 | ($2 << 14) + 16384 & 8372224;
   return;
  }
 case 14:
  {
   $16 = $1 + 4 | 0;
   $21 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$16 >> 2] << 2) | 0;
   HEAP32[$21 >> 2] = HEAP32[$21 >> 2] & 8388607 | ($2 << 23) + 8388608;
   $31 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$16 >> 2] << 2) | 0;
   $34 = $0 + 36 | 0;
   HEAP32[$31 >> 2] = HEAP32[$34 >> 2] << 6 & 16320 | HEAP32[$31 >> 2] & -16321;
   $39 = HEAP32[$34 >> 2] | 0;
   $40 = $39 + 1 | 0;
   $41 = HEAP32[$0 >> 2] | 0;
   if (($39 | 0) < (HEAPU8[$41 + 75 >> 0] | 0 | 0)) $53 = $39; else {
    if (($39 | 0) > 248) {
     __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
     $51 = HEAP32[$0 >> 2] | 0;
    } else $51 = $41;
    HEAP8[$51 + 75 >> 0] = $40;
    $53 = HEAP32[$34 >> 2] | 0;
   }
   HEAP32[$34 >> 2] = $53 + 1;
   return;
  }
 default:
  return;
 }
}

function __Z15lua_iscfunctionP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $47 = 0, $48 = 0, $6 = 0;
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 if ((HEAP32[$$1$i + 4 >> 2] | 0) != 6) {
  $48 = 0;
  $47 = $48 & 1;
  return $47 | 0;
 }
 $48 = (HEAP8[(HEAP32[$$1$i >> 2] | 0) + 6 >> 0] | 0) != 0;
 $47 = $48 & 1;
 return $47 | 0;
}

function __Z8lua_typeP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $42 = 0, $6 = 0;
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  if ($6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) $$1$i = $6; else {
   $42 = -1;
   return $42 | 0;
  }
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    if (($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0)) $42 = -1; else {
     $$1$i = $31 + 20 + ($32 + -1 << 3) | 0;
     break L1;
    }
    return $42 | 0;
   }
  }
 } while (0);
 if (($$1$i | 0) == 108164) {
  $42 = -1;
  return $42 | 0;
 }
 $42 = HEAP32[$$1$i + 4 >> 2] | 0;
 return $42 | 0;
}

function __Z12lua_getstackP9lua_StateiP9lua_Debug($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$021 = 0, $$022$lcssa = 0, $$02225 = 0, $$026 = 0, $$1 = 0, $19 = 0, $23 = 0, $4 = 0, $7 = 0, $9 = 0, label = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $4 = HEAP32[$0 + 20 >> 2] | 0;
 L1 : do if (($1 | 0) > 0) {
  $7 = HEAP32[$0 + 40 >> 2] | 0;
  $$02225 = $1;
  $$026 = $4;
  while (1) {
   if ($$026 >>> 0 <= $7 >>> 0) {
    $$021 = 0;
    break L1;
   }
   $9 = $$02225 + -1 | 0;
   if (!(HEAP8[(HEAP32[HEAP32[$$026 + 4 >> 2] >> 2] | 0) + 6 >> 0] | 0)) $$1 = $9 - (HEAP32[$$026 + 20 >> 2] | 0) | 0; else $$1 = $9;
   $19 = $$026 + -24 | 0;
   if (($$1 | 0) > 0) {
    $$02225 = $$1;
    $$026 = $19;
   } else {
    $$0$lcssa = $19;
    $$022$lcssa = $$1;
    label = 7;
    break;
   }
  }
 } else {
  $$0$lcssa = $4;
  $$022$lcssa = $1;
  label = 7;
 } while (0);
 do if ((label | 0) == 7) {
  if ($$022$lcssa | 0) {
   HEAP32[$2 + 96 >> 2] = 0;
   $$021 = 1;
   break;
  }
  $23 = HEAP32[$0 + 40 >> 2] | 0;
  if ($$0$lcssa >>> 0 > $23 >>> 0) {
   HEAP32[$2 + 96 >> 2] = ($$0$lcssa - $23 | 0) / 24 | 0;
   $$021 = 1;
  } else $$021 = 0;
 } while (0);
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $$021 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$1 = 0, $$pre = 0, $10 = 0, $16 = 0, $20 = 0, $22 = 0, $28 = 0, $4 = 0, $5 = 0, $6 = 0;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $10 = HEAP32[$0 + 4 >> 2] | 0; else $10 = $5 & 255;
 if ($10 >>> 0 < $1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 if ($6) $16 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $16 = 10;
 if (($16 - $10 | 0) >>> 0 < $3 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $16, $10 + $3 - $16 | 0, $10, $1, 0, $3, $2); else if ($3 | 0) {
  if ($6) $22 = HEAP32[$0 >> 2] | 0; else $22 = $0;
  $20 = $10 - $1 | 0;
  $$pre = $22 + $1 | 0;
  if (!$20) $$1 = $2; else {
   _memmove($$pre + $3 | 0, $$pre | 0, $20 | 0) | 0;
   $$1 = $$pre >>> 0 <= $2 >>> 0 & ($22 + $10 | 0) >>> 0 > $2 >>> 0 ? $2 + $3 | 0 : $2;
  }
  _memmove($$pre | 0, $$1 | 0, $3 | 0) | 0;
  $28 = $10 + $3 | 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $28; else HEAP8[$4 >> 0] = $28;
  HEAP8[$22 + $28 >> 0] = 0;
 }
 return $0 | 0;
}

function __ZL15push_onecaptureP10MatchStateiPKcS2_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $14 = 0, $16 = 0, $23 = 0, $25 = 0, $30 = 0, $31 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if ((HEAP32[$0 + 12 >> 2] | 0) <= ($1 | 0)) {
  $9 = HEAP32[$0 + 8 >> 2] | 0;
  if (!$1) {
   __Z15lua_pushlstringP9lua_StatePKcj($9, $2, $3 - $2 | 0);
   STACKTOP = sp;
   return;
  } else {
   __Z10luaL_errorP9lua_StatePKcz($9, 88450, $vararg_buffer) | 0;
   STACKTOP = sp;
   return;
  }
 }
 $14 = HEAP32[$0 + 16 + ($1 << 3) + 4 >> 2] | 0;
 if (($14 | 0) == -1) {
  $16 = $0 + 8 | 0;
  __Z10luaL_errorP9lua_StatePKcz(HEAP32[$16 >> 2] | 0, 88472, $vararg_buffer1) | 0;
  $30 = HEAP32[$16 >> 2] | 0;
  $31 = HEAP32[$0 + 16 + ($1 << 3) >> 2] | 0;
 } else {
  $23 = HEAP32[$0 + 8 >> 2] | 0;
  $25 = HEAP32[$0 + 16 + ($1 << 3) >> 2] | 0;
  if (($14 | 0) == -2) {
   __Z15lua_pushintegerP9lua_Statei($23, $25 + 1 - (HEAP32[$0 >> 2] | 0) | 0);
   STACKTOP = sp;
   return;
  } else {
   $30 = $23;
   $31 = $25;
  }
 }
 __Z15lua_pushlstringP9lua_StatePKcj($30, $31, $14);
 STACKTOP = sp;
 return;
}

function __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  $6 = ___errno_location() | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  HEAP32[$6 >> 2] = 0;
  $9 = _strtoll_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $10 = tempRet0;
  $11 = HEAP32[$6 >> 2] | 0;
  if (!$11) HEAP32[$6 >> 2] = $7;
  L7 : do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) {
   do if (($11 | 0) == 34) {
    HEAP32[$2 >> 2] = 4;
    if (($10 | 0) > 0 | ($10 | 0) == 0 & $9 >>> 0 > 0) {
     $$0 = 2147483647;
     break L7;
    }
   } else {
    if (($10 | 0) < -1 | ($10 | 0) == -1 & $9 >>> 0 < 2147483648) {
     HEAP32[$2 >> 2] = 4;
     break;
    }
    if (($10 | 0) > 0 | ($10 | 0) == 0 & $9 >>> 0 > 2147483647) {
     HEAP32[$2 >> 2] = 4;
     $$0 = 2147483647;
     break L7;
    } else {
     $$0 = $9;
     break L7;
    }
   } while (0);
   $$0 = -2147483648;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 }
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN8LuaUtils17CheckTableForNaNsEP9lua_StateiRKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $3 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if ((__Z8lua_typeP9lua_Statei($0, $1) | 0) != 5) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 __Z15luaL_checkstackP9lua_StateiPKc($0, 2, 83994);
 __Z15lua_createtableP9lua_Stateii($0, 0, 0);
 __Z13lua_pushvalueP9lua_Statei($0, $1);
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $7 = HEAP8[$2 + 11 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 $12 = $8 ? HEAP32[$2 + 4 >> 2] | 0 : $7 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($3, $8 ? HEAP32[$2 >> 2] | 0 : $2, $12, $12 + 2 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($3, 84012, 2) | 0;
 $16 = __ZL16CheckForNaNsRealP9lua_StateRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $3) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __Z10lua_settopP9lua_Statei($0, -3);
 $$0 = $16;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL13luaB_tonumberP9lua_State($0) {
 $0 = $0 | 0;
 var $$lcssa = 0, $1 = 0, $10 = 0, $12 = 0, $17 = 0, $18 = 0, $2 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = __Z15luaL_optintegerP9lua_Stateii($0, 2, 10) | 0;
 if (($2 | 0) == 10) {
  __Z13luaL_checkanyP9lua_Statei($0, 1);
  if (__Z12lua_isnumberP9lua_Statei($0, 1) | 0) {
   __Z14lua_pushnumberP9lua_Statef($0, +__Z12lua_tonumberP9lua_Statei($0, 1));
   STACKTOP = sp;
   return 1;
  }
 } else {
  $7 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, 0) | 0;
  if (($2 + -2 | 0) >>> 0 >= 35) __Z13luaL_argerrorP9lua_StateiPKc($0, 2, 86167) | 0;
  $9 = _strtoul($7, $1, $2) | 0;
  $10 = HEAP32[$1 >> 2] | 0;
  if (($7 | 0) != ($10 | 0)) {
   $12 = HEAP8[$10 >> 0] | 0;
   if (!(_isspace($12 & 255) | 0)) $$lcssa = $12; else {
    $17 = $10;
    do {
     $17 = $17 + 1 | 0;
     $18 = HEAP8[$17 >> 0] | 0;
    } while ((_isspace($18 & 255) | 0) != 0);
    HEAP32[$1 >> 2] = $17;
    $$lcssa = $18;
   }
   if (!($$lcssa << 24 >> 24)) {
    __Z14lua_pushnumberP9lua_Statef($0, +($9 >>> 0));
    STACKTOP = sp;
    return 1;
   }
  }
 }
 __Z11lua_pushnilP9lua_State($0);
 STACKTOP = sp;
 return 1;
}

function __Z8luaH_newP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $15 = 0, $16 = 0, $19 = 0, $21 = 0, $3 = 0, $6 = 0, $7 = 0;
 $3 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 32) | 0;
 __Z9luaC_linkP9lua_StateP8GCObjecth($0, $3, 5);
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP8[$3 + 6 >> 0] = -1;
 $6 = $3 + 12 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $3 + 28 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP8[$3 + 7 >> 0] = 0;
 HEAP32[$3 + 16 >> 2] = 108172;
 if (($1 + 1 | 0) >>> 0 < 536870912) $15 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, $1 << 3) | 0; else $15 = __Z11luaM_toobigP9lua_State($0) | 0;
 HEAP32[$6 >> 2] = $15;
 $16 = HEAP32[$7 >> 2] | 0;
 if (($16 | 0) >= ($1 | 0)) {
  HEAP32[$7 >> 2] = $1;
  __ZL13setnodevectorP9lua_StateP5Tablei($0, $3, $2);
  return $3 | 0;
 }
 HEAP32[$15 + ($16 << 3) + 4 >> 2] = 0;
 $19 = $16 + 1 | 0;
 if (($19 | 0) == ($1 | 0)) {
  HEAP32[$7 >> 2] = $1;
  __ZL13setnodevectorP9lua_StateP5Tablei($0, $3, $2);
  return $3 | 0;
 } else $21 = $19;
 do {
  HEAP32[(HEAP32[$6 >> 2] | 0) + ($21 << 3) + 4 >> 2] = 0;
  $21 = $21 + 1 | 0;
 } while (($21 | 0) != ($1 | 0));
 HEAP32[$7 >> 2] = $1;
 __ZL13setnodevectorP9lua_StateP5Tablei($0, $3, $2);
 return $3 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$sroa$speculated = 0, $15 = 0, $16 = 0, $21 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $9 = 0;
 if ((1073741807 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 if ((HEAP8[$9 + 3 >> 0] | 0) < 0) $27 = HEAP32[$0 >> 2] | 0; else $27 = $0;
 if ($1 >>> 0 < 536870887) {
  $15 = $2 + $1 | 0;
  $16 = $1 << 1;
  $$sroa$speculated = $15 >>> 0 < $16 >>> 0 ? $16 : $15;
  $21 = $$sroa$speculated >>> 0 < 2 ? 2 : $$sroa$speculated + 4 & -4;
  if ($21 >>> 0 > 1073741823) ___assert_fail(105295, 105332, 1734, 105403); else $24 = $21;
 } else $24 = 1073741807;
 $25 = __Znwj($24 << 2) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($25, $27, $4) | 0;
 $29 = $3 - $5 - $4 | 0;
 if ($29 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj($25 + ($4 << 2) + ($6 << 2) | 0, $27 + ($4 << 2) + ($5 << 2) | 0, $29) | 0;
 if (($1 | 0) != 1) __ZdlPv($27);
 HEAP32[$0 >> 2] = $25;
 HEAP32[$9 >> 2] = $24 | -2147483648;
 return;
}

function __ZN9LuaParser8GetTableERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $14 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $6 = 0, $9 = 0;
 $3 = $0 + 48 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) return;
 $6 = $0 + 120 | 0;
 if ((HEAP32[$6 >> 2] | 0) < 0) return;
 $9 = $1 + 11 | 0;
 $10 = HEAP8[$9 >> 0] | 0;
 $11 = $10 << 24 >> 24 < 0;
 $14 = $1 + 4 | 0;
 __Z15lua_pushlstringP9lua_StatePKcj($4, $11 ? HEAP32[$1 >> 2] | 0 : $1, $11 ? HEAP32[$14 >> 2] | 0 : $10 & 255);
 $18 = HEAP32[$3 >> 2] | 0;
 if ($2) __Z15lua_createtableP9lua_Stateii($18, 0, 0); else {
  $19 = HEAP8[$9 >> 0] | 0;
  $20 = $19 << 24 >> 24 < 0;
  __Z15lua_pushlstringP9lua_StatePKcj($18, $20 ? HEAP32[$1 >> 2] | 0 : $1, $20 ? HEAP32[$14 >> 2] | 0 : $19 & 255);
  __Z12lua_gettableP9lua_Statei(HEAP32[$3 >> 2] | 0, (HEAP32[$6 >> 2] | 0) == 0 ? -10002 : -3);
  if ((__Z8lua_typeP9lua_Statei(HEAP32[$3 >> 2] | 0, -1) | 0) != 5) {
   __Z10lua_settopP9lua_Statei(HEAP32[$3 >> 2] | 0, -2);
   __Z15lua_createtableP9lua_Stateii(HEAP32[$3 >> 2] | 0, 0, 0);
  }
 }
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $37 = 0;
 if ((-18 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $24 = HEAP32[$0 >> 2] | 0; else $24 = $0;
 if ($1 >>> 0 < 2147483623) {
  $15 = $2 + $1 | 0;
  $16 = $1 << 1;
  $$sroa$speculated = $15 >>> 0 < $16 >>> 0 ? $16 : $15;
  $21 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $21 = -17;
 $22 = __Znwj($21) | 0;
 if ($4 | 0) _memcpy($22 | 0, $24 | 0, $4 | 0) | 0;
 if ($6 | 0) _memcpy($22 + $4 | 0, $7 | 0, $6 | 0) | 0;
 $27 = $3 - $5 | 0;
 $28 = $27 - $4 | 0;
 if ($28 | 0) _memcpy($22 + $4 + $6 | 0, $24 + $4 + $5 | 0, $28 | 0) | 0;
 if (($1 | 0) != 10) __ZdlPv($24);
 HEAP32[$0 >> 2] = $22;
 HEAP32[$0 + 8 >> 2] = $21 | -2147483648;
 $37 = $27 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $37;
 HEAP8[$22 + $37 >> 0] = 0;
 return;
}

function __ZL13inclinenumberP8LexState($0) {
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $0 + 36 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = $4 + -1;
 $7 = HEAP32[$2 >> 2] | 0;
 if (!$4) $14 = __Z9luaZ_fillP3Zio($7) | 0; else {
  $8 = $7 + 4 | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = $9 + 1;
  $14 = HEAPU8[$9 >> 0] | 0;
 }
 HEAP32[$0 >> 2] = $14;
 switch ($14 | 0) {
 case 13:
 case 10:
  {
   if (($14 | 0) != ($1 | 0)) {
    $16 = HEAP32[$2 >> 2] | 0;
    $17 = HEAP32[$16 >> 2] | 0;
    HEAP32[$16 >> 2] = $17 + -1;
    $20 = HEAP32[$2 >> 2] | 0;
    if (!$17) $27 = __Z9luaZ_fillP3Zio($20) | 0; else {
     $21 = $20 + 4 | 0;
     $22 = HEAP32[$21 >> 2] | 0;
     HEAP32[$21 >> 2] = $22 + 1;
     $27 = HEAPU8[$22 >> 0] | 0;
    }
    HEAP32[$0 >> 2] = $27;
   }
   break;
  }
 default:
  {}
 }
 $28 = $0 + 4 | 0;
 $29 = HEAP32[$28 >> 2] | 0;
 HEAP32[$28 >> 2] = $29 + 1;
 if (($29 | 0) <= 2147483643) return;
 __Z13luaX_lexerrorP8LexStatePKci($0, 90147, HEAP32[$0 + 12 >> 2] | 0);
 return;
}

function __ZN11ClientSetupC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $9 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 48 | 0;
 dest = $0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $3 = HEAP32[_configHandler >> 2] | 0;
 $6 = HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 80069, 13);
 FUNCTION_TABLE_viii[$6 & 7]($2, $3, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 $8 = HEAP32[_configHandler >> 2] | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 80219, 15);
 $9 = __ZNK13ConfigHandler3GetIiEET_RKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($8, $1) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$0 + 60 >> 2] = $9;
 HEAP8[$0 + 64 >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __Z12lua_tothreadP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1$i = 0, $22 = 0, $31 = 0, $32 = 0, $44 = 0, $6 = 0;
 L1 : do if (($1 | 0) > 0) {
  $6 = (HEAP32[$0 + 12 >> 2] | 0) + ($1 + -1 << 3) | 0;
  $$1$i = $6 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0 ? $6 : 108164;
 } else {
  if (($1 | 0) > -1e4) {
   $$1$i = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 3) | 0;
   break;
  }
  switch ($1 | 0) {
  case -1e4:
   {
    $$1$i = (HEAP32[$0 + 16 >> 2] | 0) + 92 | 0;
    break L1;
    break;
   }
  case -10001:
   {
    $22 = $0 + 80 | 0;
    HEAP32[$22 >> 2] = HEAP32[(HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0) + 12 >> 2];
    HEAP32[$0 + 84 >> 2] = 5;
    $$1$i = $22;
    break L1;
    break;
   }
  case -10002:
   {
    $$1$i = $0 + 72 | 0;
    break L1;
    break;
   }
  default:
   {
    $31 = HEAP32[HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 4 >> 2] >> 2] | 0;
    $32 = -10002 - $1 | 0;
    $$1$i = ($32 | 0) > (HEAPU8[$31 + 7 >> 0] | 0 | 0) ? 108164 : $31 + 20 + ($32 + -1 << 3) | 0;
    break L1;
   }
  }
 } while (0);
 if ((HEAP32[$$1$i + 4 >> 2] | 0) != 8) {
  $44 = 0;
  return $44 | 0;
 }
 $44 = HEAP32[$$1$i >> 2] | 0;
 return $44 | 0;
}

function _fflush($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $24 = 0, $28 = 0, $7 = 0, $phitmp = 0;
 do if (!$0) {
  if (!(HEAP32[17411] | 0)) $28 = 0; else $28 = _fflush(HEAP32[17411] | 0) | 0;
  ___lock(108588);
  $$02325 = HEAP32[27146] | 0;
  if (!$$02325) $$024$lcssa = $28; else {
   $$02327 = $$02325;
   $$02426 = $28;
   while (1) {
    if ((HEAP32[$$02327 + 76 >> 2] | 0) > -1) $24 = ___lockfile($$02327) | 0; else $24 = 0;
    if ((HEAP32[$$02327 + 20 >> 2] | 0) >>> 0 > (HEAP32[$$02327 + 28 >> 2] | 0) >>> 0) $$1 = ___fflush_unlocked($$02327) | 0 | $$02426; else $$1 = $$02426;
    if ($24 | 0) ___unlockfile($$02327);
    $$02327 = HEAP32[$$02327 + 56 >> 2] | 0;
    if (!$$02327) {
     $$024$lcssa = $$1;
     break;
    } else $$02426 = $$1;
   }
  }
  ___unlock(108588);
  $$0 = $$024$lcssa;
 } else {
  if ((HEAP32[$0 + 76 >> 2] | 0) <= -1) {
   $$0 = ___fflush_unlocked($0) | 0;
   break;
  }
  $phitmp = (___lockfile($0) | 0) == 0;
  $7 = ___fflush_unlocked($0) | 0;
  if ($phitmp) $$0 = $7; else {
   ___unlockfile($0);
   $$0 = $7;
  }
 } while (0);
 return $$0 | 0;
}

function _atoi($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$010$lcssa = 0, $$01016 = 0, $$011 = 0, $$1$ph = 0, $$112$ph = 0, $$11215 = 0, $1 = 0, $10 = 0, $2 = 0, $5 = 0, $7 = 0, $isdigittmp13 = 0, $isdigittmp17 = 0, label = 0;
 $$011 = $0;
 while (1) {
  $1 = HEAP8[$$011 >> 0] | 0;
  $2 = $1 << 24 >> 24;
  $5 = $$011 + 1 | 0;
  if (!(_isspace($2) | 0)) break; else $$011 = $5;
 }
 switch ($2 | 0) {
 case 45:
  {
   $$0 = 1;
   label = 5;
   break;
  }
 case 43:
  {
   $$0 = 0;
   label = 5;
   break;
  }
 default:
  {
   $$1$ph = 0;
   $$112$ph = $$011;
   $7 = $1;
  }
 }
 if ((label | 0) == 5) {
  $$1$ph = $$0;
  $$112$ph = $5;
  $7 = HEAP8[$5 >> 0] | 0;
 }
 $isdigittmp13 = ($7 << 24 >> 24) + -48 | 0;
 if ($isdigittmp13 >>> 0 < 10) {
  $$01016 = 0;
  $$11215 = $$112$ph;
  $isdigittmp17 = $isdigittmp13;
  while (1) {
   $$11215 = $$11215 + 1 | 0;
   $10 = ($$01016 * 10 | 0) - $isdigittmp17 | 0;
   $isdigittmp17 = (HEAP8[$$11215 >> 0] | 0) + -48 | 0;
   if ($isdigittmp17 >>> 0 >= 10) {
    $$010$lcssa = $10;
    break;
   } else $$01016 = $10;
  }
 } else $$010$lcssa = 0;
 return ($$1$ph | 0 ? $$010$lcssa : 0 - $$010$lcssa | 0) | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $25 = 0, $26 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 $8 = $0 + 8 | 0;
 $12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 255]($8) | 0;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 $17 = HEAP8[$12 + 8 + 3 >> 0] | 0;
 $18 = $17 << 24 >> 24 < 0;
 $20 = $18 ? HEAP32[$12 >> 2] | 0 : $12;
 $25 = $20 + (($18 ? HEAP32[$12 + 4 >> 2] | 0 : $17 & 255) << 2) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $26 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $20, $25) | 0;
 STACKTOP = sp;
 return $26 | 0;
}

function __ZN8TeamBaseD0Ev($0) {
 $0 = $0 | 0;
 var $$05$i$i = 0, $$lcssa$i$i = 0, $$pre8$i$i = 0, $1 = 0, $10 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 68100;
 $1 = $0 + 60 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = $0 + 52 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $$pre8$i$i = $0 + 56 | 0;
 if (!$2) $$lcssa$i$i = $5; else {
  $$05$i$i = 0;
  $18 = $2;
  $7 = $5;
  while (1) {
   if ((HEAP8[$7 + $$05$i$i >> 0] | 0) == 2) {
    $10 = HEAP32[$$pre8$i$i >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10 + ($$05$i$i * 24 | 0) + 12 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10 + ($$05$i$i * 24 | 0) | 0);
    $15 = HEAP32[$1 >> 2] | 0;
    $19 = HEAP32[$4 >> 2] | 0;
   } else {
    $15 = $18;
    $19 = $7;
   }
   $$05$i$i = $$05$i$i + 1 | 0;
   if ($$05$i$i >>> 0 >= $15 >>> 0) {
    $$lcssa$i$i = $19;
    break;
   } else {
    $18 = $15;
    $7 = $19;
   }
  }
 }
 _free($$lcssa$i$i);
 _free(HEAP32[$$pre8$i$i >> 2] | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 24 | 0);
 __ZdlPv($0);
 return;
}

function __ZN27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67732;
 HEAP32[$0 + 176 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 184 | 0);
 HEAP32[$0 + 156 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 164 | 0);
 HEAP32[$0 + 136 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 144 | 0);
 HEAP32[$0 + 116 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 124 | 0);
 HEAP32[$0 + 96 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 104 | 0);
 HEAP32[$0 + 76 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 84 | 0);
 HEAP32[$0 >> 2] = 67820;
 HEAP32[$0 + 44 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 52 | 0);
 HEAP32[$0 + 12 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 20 | 0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $24 = 0, $25 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 $8 = $0 + 8 | 0;
 $12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 255]($8) | 0;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 $16 = HEAP8[$12 + 11 >> 0] | 0;
 $17 = $16 << 24 >> 24 < 0;
 $19 = $17 ? HEAP32[$12 >> 2] | 0 : $12;
 $24 = $19 + ($17 ? HEAP32[$12 + 4 >> 2] | 0 : $16 & 255) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $25 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $19, $24) | 0;
 STACKTOP = sp;
 return $25 | 0;
}

function __ZN27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67732;
 HEAP32[$0 + 176 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 184 | 0);
 HEAP32[$0 + 156 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 164 | 0);
 HEAP32[$0 + 136 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 144 | 0);
 HEAP32[$0 + 116 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 124 | 0);
 HEAP32[$0 + 96 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 104 | 0);
 HEAP32[$0 + 76 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 84 | 0);
 HEAP32[$0 >> 2] = 67820;
 HEAP32[$0 + 44 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 52 | 0);
 HEAP32[$0 + 12 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 20 | 0);
 return;
}

function __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8InfoItemEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$1) return; else {
  __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8InfoItemEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($0, HEAP32[$1 >> 2] | 0);
  __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8InfoItemEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($0, HEAP32[$1 + 4 >> 2] | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 60 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 40 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 28 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 16 | 0);
  __ZdlPv($1);
  return;
 }
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$in = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = $0 + 44 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = HEAP32[$0 + 24 >> 2] | 0;
 if ($3 >>> 0 < $5 >>> 0) {
  HEAP32[$2 >> 2] = $5;
  $$in = $5;
 } else $$in = $3;
 $7 = $$in;
 $10 = $0 + 12 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ((HEAP32[$0 + 8 >> 2] | 0) >>> 0 >= $11 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($1 | 0) == -1) {
  HEAP32[$10 >> 2] = $11 + -1;
  HEAP32[$0 + 16 >> 2] = $7;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$0 + 48 >> 2] & 16)) {
  $20 = $1 & 255;
  $21 = $11 + -1 | 0;
  if ($20 << 24 >> 24 == (HEAP8[$21 >> 0] | 0)) {
   $$pre$phi7Z2D = $20;
   $$pre$phiZ2D = $21;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi7Z2D = $1 & 255;
  $$pre$phiZ2D = $11 + -1 | 0;
 }
 HEAP32[$10 >> 2] = $$pre$phiZ2D;
 HEAP32[$0 + 16 >> 2] = $7;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi7Z2D;
 $$0 = $1;
 return $$0 | 0;
}

function __Z14luaL_findtableP9lua_StateiPKci($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$028 = 0, $$029 = 0, $10 = 0, $4 = 0, label = 0;
 __Z13lua_pushvalueP9lua_Statei($0, $1);
 $$029 = $2;
 while (1) {
  $4 = _strchr($$029, 46) | 0;
  if (!$4) $$0 = $$029 + (_strlen($$029) | 0) | 0; else $$0 = $4;
  $10 = $$0 - $$029 | 0;
  __Z15lua_pushlstringP9lua_StatePKcj($0, $$029, $10);
  __Z10lua_rawgetP9lua_Statei($0, -2);
  if (!(__Z8lua_typeP9lua_Statei($0, -1) | 0)) {
   __Z10lua_settopP9lua_Statei($0, -2);
   __Z15lua_createtableP9lua_Stateii($0, 0, (HEAP8[$$0 >> 0] | 0) == 46 ? 1 : $3);
   __Z15lua_pushlstringP9lua_StatePKcj($0, $$029, $10);
   __Z13lua_pushvalueP9lua_Statei($0, -2);
   __Z12lua_settableP9lua_Statei($0, -4);
  } else if ((__Z8lua_typeP9lua_Statei($0, -1) | 0) != 5) break;
  __Z10lua_removeP9lua_Statei($0, -2);
  if ((HEAP8[$$0 >> 0] | 0) == 46) $$029 = $$0 + 1 | 0; else {
   $$028 = 0;
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) return $$028 | 0;
 __Z10lua_settopP9lua_Statei($0, -3);
 $$028 = $$029;
 return $$028 | 0;
}

function __ZNK27ConfigVariableTypedMetaDataIiE5ClampERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $13 = 0, $18 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $3 + 4 | 0;
 HEAP8[$4 >> 0] = 0;
 HEAP32[$3 >> 2] = 67712;
 $5 = __ZN35TypedStringConvertibleOptionalValueIiE10FromStringERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($2) | 0;
 $6 = $3 + 8 | 0;
 HEAP32[$6 >> 2] = $5;
 HEAP8[$4 >> 0] = 1;
 if (!(HEAP8[$1 + 92 >> 0] | 0)) $20 = $5; else {
  $11 = HEAP32[$1 + 96 >> 2] | 0;
  $13 = ($5 | 0) < ($11 | 0) ? $11 : $5;
  HEAP32[$6 >> 2] = $13;
  HEAP8[$4 >> 0] = 1;
  $20 = $13;
 }
 if (!(HEAP8[$1 + 104 >> 0] | 0)) {
  __ZNK35TypedStringConvertibleOptionalValueIiE8ToStringEv($0, $3);
  STACKTOP = sp;
  return;
 }
 $18 = HEAP32[$1 + 108 >> 2] | 0;
 HEAP32[$6 >> 2] = ($18 | 0) < ($20 | 0) ? $18 : $20;
 HEAP8[$4 >> 0] = 1;
 __ZNK35TypedStringConvertibleOptionalValueIiE8ToStringEv($0, $3);
 STACKTOP = sp;
 return;
}

function __Z9luaK_jumpP9FuncState($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$idx$val$idx$val$i = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $18 = 0, $2 = 0, $23 = 0, $3 = 0, $7 = 0;
 $1 = $0 + 32 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = -1;
 $3 = $0 + 12 | 0;
 $7 = __ZL9luaK_codeP9FuncStateji($0, 2147450902, HEAP32[(HEAP32[$3 >> 2] | 0) + 8 >> 2] | 0) | 0;
 if (($2 | 0) == -1) {
  $$0 = $7;
  return $$0 | 0;
 }
 if (($7 | 0) == -1) {
  $$0 = $2;
  return $$0 | 0;
 }
 $$idx$val$idx$val$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
 $$0$i = $7;
 while (1) {
  $10 = $$idx$val$idx$val$i + ($$0$i << 2) | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $13 = ($11 >>> 14) + -131071 | 0;
  $$0$i$i = ($13 | 0) == -1 ? -1 : $$0$i + 1 + $13 | 0;
  if (($$0$i$i | 0) == -1) break; else $$0$i = $$0$i$i;
 }
 $18 = $2 + ~$$0$i | 0;
 if (((($18 | 0) > -1 ? $18 : 0 - $18 | 0) | 0) > 131071) {
  __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$3 >> 2] | 0, 89696);
  $23 = HEAP32[$10 >> 2] | 0;
 } else $23 = $11;
 HEAP32[$10 >> 2] = $23 & 16383 | ($18 << 14) + 2147467264;
 $$0 = $7;
 return $$0 | 0;
}

function __ZNK10LuaMemPool8LogStatsEPKcS1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[$0 + 88 >> 2] | 0;
 $10 = (HEAP32[$0 + 60 >> 2] | 0) - (HEAP32[$0 + 56 >> 2] | 0) >> 2;
 $12 = HEAP32[$0 + 44 >> 2] | 0;
 $14 = HEAP32[$0 + 68 >> 2] | 0;
 $16 = HEAP32[$0 + 72 >> 2] | 0;
 $18 = HEAP32[$0 + 76 >> 2] | 0;
 $20 = HEAP32[$0 + 80 >> 2] | 0;
 $22 = HEAP32[$0 + 84 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = 83207;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 8 >> 2] = $2;
 HEAP32[$vararg_buffer + 12 >> 2] = $4;
 HEAP32[$vararg_buffer + 16 >> 2] = $10;
 HEAP32[$vararg_buffer + 20 >> 2] = $12;
 HEAP32[$vararg_buffer + 24 >> 2] = $14;
 HEAP32[$vararg_buffer + 28 >> 2] = $16;
 HEAP32[$vararg_buffer + 32 >> 2] = $18;
 HEAP32[$vararg_buffer + 36 >> 2] = $20;
 HEAP32[$vararg_buffer + 40 >> 2] = $22;
 _log_frontend_record(35, 114224, 83076, $vararg_buffer);
 STACKTOP = sp;
 return;
}

function __ZN8TeamBaseD2Ev($0) {
 $0 = $0 | 0;
 var $$05$i = 0, $$lcssa$i = 0, $$pre8$i = 0, $1 = 0, $10 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 68100;
 $1 = $0 + 60 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = $0 + 52 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $$pre8$i = $0 + 56 | 0;
 if (!$2) $$lcssa$i = $5; else {
  $$05$i = 0;
  $18 = $2;
  $7 = $5;
  while (1) {
   if ((HEAP8[$7 + $$05$i >> 0] | 0) == 2) {
    $10 = HEAP32[$$pre8$i >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10 + ($$05$i * 24 | 0) + 12 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10 + ($$05$i * 24 | 0) | 0);
    $15 = HEAP32[$1 >> 2] | 0;
    $19 = HEAP32[$4 >> 2] | 0;
   } else {
    $15 = $18;
    $19 = $7;
   }
   $$05$i = $$05$i + 1 | 0;
   if ($$05$i >>> 0 >= $15 >>> 0) {
    $$lcssa$i = $19;
    break;
   } else {
    $18 = $15;
    $7 = $19;
   }
  }
 }
 _free($$lcssa$i);
 _free(HEAP32[$$pre8$i >> 2] | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 24 | 0);
 return;
}

function __ZL7newlstrP9lua_StatePKcjj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $20 = 0, $22 = 0, $23 = 0, $26 = 0, $32 = 0, $34 = 0, $35 = 0, $7 = 0;
 if (($2 + 1 | 0) >>> 0 > 4294967277) __Z11luaM_toobigP9lua_State($0) | 0;
 $7 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, $2 + 17 | 0) | 0;
 HEAP32[$7 + 12 >> 2] = $2;
 HEAP32[$7 + 8 >> 2] = $3;
 $10 = $0 + 16 | 0;
 HEAP8[$7 + 5 >> 0] = (HEAPU8[(HEAP32[$10 >> 2] | 0) + 20 >> 0] | 0) & 3;
 HEAP8[$7 + 4 >> 0] = 4;
 HEAP8[$7 + 6 >> 0] = 0;
 $20 = $7 + 16 | 0;
 _memcpy($20 | 0, $1 | 0, $2 | 0) | 0;
 HEAP8[$20 + $2 >> 0] = 0;
 $22 = HEAP32[$10 >> 2] | 0;
 $23 = $22 + 8 | 0;
 $26 = (HEAP32[$23 >> 2] | 0) + -1 & $3;
 HEAP32[$7 >> 2] = HEAP32[(HEAP32[$22 >> 2] | 0) + ($26 << 2) >> 2];
 HEAP32[(HEAP32[$22 >> 2] | 0) + ($26 << 2) >> 2] = $7;
 $32 = $22 + 4 | 0;
 $34 = (HEAP32[$32 >> 2] | 0) + 1 | 0;
 HEAP32[$32 >> 2] = $34;
 $35 = HEAP32[$23 >> 2] | 0;
 if (!($34 >>> 0 > $35 >>> 0 & ($35 | 0) < 1073741823)) return $7 | 0;
 __Z11luaS_resizeP9lua_Statei($0, $35 << 1);
 return $7 | 0;
}

function __ZL8markrootP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $13 = 0, $17 = 0, $2 = 0, $22 = 0, $27 = 0, $32 = 0, $6 = 0, $7 = 0;
 $1 = $0 + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$2 + 36 >> 2] = 0;
 HEAP32[$2 + 40 >> 2] = 0;
 HEAP32[$2 + 44 >> 2] = 0;
 $6 = $2 + 100 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (!(HEAP8[$7 + 5 >> 0] & 3)) $13 = $7; else {
  __ZL16reallymarkobjectP12global_StateP8GCObject($2, $7);
  $13 = HEAP32[$6 >> 2] | 0;
 }
 if ((HEAP32[$13 + 76 >> 2] | 0) > 3) {
  $17 = HEAP32[$13 + 72 >> 2] | 0;
  if (HEAP8[$17 + 5 >> 0] & 3) __ZL16reallymarkobjectP12global_StateP8GCObject($2, $17);
 }
 $22 = HEAP32[$1 >> 2] | 0;
 if ((HEAP32[$22 + 96 >> 2] | 0) <= 3) {
  __ZL6markmtP12global_State($2);
  $32 = $2 + 21 | 0;
  HEAP8[$32 >> 0] = 1;
  return;
 }
 $27 = HEAP32[$22 + 92 >> 2] | 0;
 if (!(HEAP8[$27 + 5 >> 0] & 3)) {
  __ZL6markmtP12global_State($2);
  $32 = $2 + 21 | 0;
  HEAP8[$32 >> 0] = 1;
  return;
 }
 __ZL16reallymarkobjectP12global_StateP8GCObject($2, $27);
 __ZL6markmtP12global_State($2);
 $32 = $2 + 21 | 0;
 HEAP8[$32 >> 0] = 1;
 return;
}

function _fmt_u($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $26 = 0, $8 = 0, $9 = 0, $8$looptemp = 0;
 if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 4294967295) {
  $$0914 = $2;
  $8 = $0;
  $9 = $1;
  while (1) {
   $10 = ___uremdi3($8 | 0, $9 | 0, 10, 0) | 0;
   $$0914 = $$0914 + -1 | 0;
   HEAP8[$$0914 >> 0] = $10 | 48;
   $8$looptemp = $8;
   $8 = ___udivdi3($8 | 0, $9 | 0, 10, 0) | 0;
   if (!($9 >>> 0 > 9 | ($9 | 0) == 9 & $8$looptemp >>> 0 > 4294967295)) break; else $9 = tempRet0;
  }
  $$010$lcssa$off0 = $8;
  $$09$lcssa = $$0914;
 } else {
  $$010$lcssa$off0 = $0;
  $$09$lcssa = $2;
 }
 if (!$$010$lcssa$off0) $$1$lcssa = $$09$lcssa; else {
  $$012 = $$010$lcssa$off0;
  $$111 = $$09$lcssa;
  while (1) {
   $26 = $$111 + -1 | 0;
   HEAP8[$26 >> 0] = ($$012 >>> 0) % 10 | 0 | 48;
   if ($$012 >>> 0 < 10) {
    $$1$lcssa = $26;
    break;
   } else {
    $$012 = ($$012 >>> 0) / 10 | 0;
    $$111 = $26;
   }
  }
 }
 return $$1$lcssa | 0;
}

function __ZL7tinsertP9lua_State($0) {
 $0 = $0 | 0;
 var $$ = 0, $$024 = 0, $$026 = 0, $$027 = 0, $2 = 0, $4 = 0, $vararg_buffer = 0, sp = 0, $$027$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 $2 = (__Z10lua_objlenP9lua_Statei($0, 1) | 0) + 1 | 0;
 switch (__Z10lua_gettopP9lua_State($0) | 0) {
 case 2:
  {
   $$024 = $2;
   break;
  }
 case 3:
  {
   $4 = __Z17luaL_checkintegerP9lua_Statei($0, 2) | 0;
   $$ = ($4 | 0) > ($2 | 0) ? $4 : $2;
   if (($$ | 0) > ($4 | 0)) {
    $$027 = $$;
    do {
     $$027$looptemp = $$027;
     $$027 = $$027 + -1 | 0;
     __Z11lua_rawgetiP9lua_Stateii($0, 1, $$027);
     __Z11lua_rawsetiP9lua_Stateii($0, 1, $$027$looptemp);
    } while (($$027 | 0) > ($4 | 0));
    $$024 = $4;
   } else $$024 = $4;
   break;
  }
 default:
  {
   $$026 = __Z10luaL_errorP9lua_StatePKcz($0, 89133, $vararg_buffer) | 0;
   STACKTOP = sp;
   return $$026 | 0;
  }
 }
 __Z11lua_rawsetiP9lua_Stateii($0, 1, $$024);
 $$026 = 0;
 STACKTOP = sp;
 return $$026 | 0;
}

function __Z12luaopen_baseP9lua_State($0) {
 $0 = $0 | 0;
 __Z13lua_pushvalueP9lua_Statei($0, -10002);
 __Z12lua_setfieldP9lua_StateiPKc($0, -10002, 85783);
 __Z13luaL_registerP9lua_StatePKcPK8luaL_Reg($0, 85783, 68636);
 __Z15lua_pushlstringP9lua_StatePKcj($0, 85786, 7);
 __Z12lua_setfieldP9lua_StateiPKc($0, -10002, 85794);
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, 177, 0);
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, 178, 1);
 __Z12lua_setfieldP9lua_StateiPKc($0, -2, 85803);
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, 36, 0);
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, 179, 1);
 __Z12lua_setfieldP9lua_StateiPKc($0, -2, 85810);
 __Z15lua_createtableP9lua_Stateii($0, 0, 1);
 __Z13lua_pushvalueP9lua_Statei($0, -1);
 __Z16lua_setmetatableP9lua_Statei($0, -2) | 0;
 __Z15lua_pushlstringP9lua_StatePKcj($0, 85816, 2);
 __Z12lua_setfieldP9lua_StateiPKc($0, -2, 89297);
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, 180, 1);
 __Z12lua_setfieldP9lua_StateiPKc($0, -10002, 85819);
 __Z13luaL_registerP9lua_StatePKcPK8luaL_Reg($0, 85828, 68520);
 return 2;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $17 = 0, $31 = 0, $36 = 0, $4 = 0, $41 = 0, $46 = 0, $47 = 0;
 $4 = $1 + 64 | 0;
 if (HEAP32[$4 >> 2] | 0) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 24 >> 2] & 255]($1) | 0)) if (!(___fseeko(HEAP32[$4 >> 2] | 0, HEAP32[$2 + 8 >> 2] | 0, 0) | 0)) {
  $41 = $2;
  $46 = HEAP32[$41 + 4 >> 2] | 0;
  $47 = $1 + 72 | 0;
  HEAP32[$47 >> 2] = HEAP32[$41 >> 2];
  HEAP32[$47 + 4 >> 2] = $46;
  HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  HEAP32[$0 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
  return;
 } else {
  $31 = $0;
  HEAP32[$31 >> 2] = 0;
  HEAP32[$31 + 4 >> 2] = 0;
  $36 = $0 + 8 | 0;
  HEAP32[$36 >> 2] = -1;
  HEAP32[$36 + 4 >> 2] = -1;
  return;
 }
 $12 = $0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 $17 = $0 + 8 | 0;
 HEAP32[$17 >> 2] = -1;
 HEAP32[$17 + 4 >> 2] = -1;
 return;
}

function __Z13luaX_setinputP9lua_StateP8LexStateP3ZioP7TString($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $13 = 0, $17 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $32 = 0, $7 = 0;
 HEAP8[$1 + 48 >> 0] = 46;
 HEAP32[$1 + 32 >> 2] = $0;
 HEAP32[$1 + 20 >> 2] = 287;
 $7 = $1 + 36 | 0;
 HEAP32[$7 >> 2] = $2;
 HEAP32[$1 + 28 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 1;
 HEAP32[$1 + 8 >> 2] = 1;
 HEAP32[$1 + 44 >> 2] = $3;
 $12 = $1 + 40 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 $17 = __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$13 >> 2] | 0, HEAP32[$13 + 8 >> 2] | 0, 32) | 0;
 HEAP32[HEAP32[$12 >> 2] >> 2] = $17;
 HEAP32[(HEAP32[$12 >> 2] | 0) + 8 >> 2] = 32;
 $21 = HEAP32[$7 >> 2] | 0;
 $22 = HEAP32[$21 >> 2] | 0;
 HEAP32[$21 >> 2] = $22 + -1;
 $25 = HEAP32[$7 >> 2] | 0;
 if (!$22) {
  $32 = __Z9luaZ_fillP3Zio($25) | 0;
  HEAP32[$1 >> 2] = $32;
  return;
 } else {
  $26 = $25 + 4 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  HEAP32[$26 >> 2] = $27 + 1;
  $32 = HEAPU8[$27 >> 0] | 0;
  HEAP32[$1 >> 2] = $32;
  return;
 }
}

function __ZL11luaB_unpackP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$in = 0, $1 = 0, $6 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 $1 = __Z15luaL_optintegerP9lua_Stateii($0, 2, 1) | 0;
 if ((__Z8lua_typeP9lua_Statei($0, 3) | 0) < 1) $6 = __Z10lua_objlenP9lua_Statei($0, 1) | 0; else $6 = __Z17luaL_checkintegerP9lua_Statei($0, 3) | 0;
 if (($6 | 0) < ($1 | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $8 = $6 - $1 | 0;
 $9 = $8 + 1 | 0;
 if (($8 | 0) >= 0) if (__Z14lua_checkstackP9lua_Statei($0, $9) | 0) {
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $1);
  if (($6 | 0) > ($1 | 0)) $$in = $1; else {
   $$0 = $9;
   STACKTOP = sp;
   return $$0 | 0;
  }
  do {
   $$in = $$in + 1 | 0;
   __Z11lua_rawgetiP9lua_Stateii($0, 1, $$in);
  } while (($$in | 0) != ($6 | 0));
  $$0 = $9;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$0 = __Z10luaL_errorP9lua_StatePKcz($0, 86052, $vararg_buffer) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL11check_matchP8LexStateiii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $14 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if ((HEAP32[$0 + 12 >> 2] | 0) == ($1 | 0)) {
  __Z9luaX_nextP8LexState($0);
  STACKTOP = sp;
  return;
 }
 $9 = (HEAP32[$0 + 4 >> 2] | 0) == ($3 | 0);
 $11 = HEAP32[$0 + 32 >> 2] | 0;
 $12 = __Z14luaX_token2strP8LexStatei($0, $1) | 0;
 if ($9) {
  HEAP32[$vararg_buffer >> 2] = $12;
  __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($11, 87798, $vararg_buffer) | 0);
  STACKTOP = sp;
  return;
 } else {
  $14 = __Z14luaX_token2strP8LexStatei($0, $2) | 0;
  HEAP32[$vararg_buffer1 >> 2] = $12;
  HEAP32[$vararg_buffer1 + 4 >> 2] = $14;
  HEAP32[$vararg_buffer1 + 8 >> 2] = $3;
  __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($11, 88279, $vararg_buffer1) | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$021$ph = 0, $13 = 0, $16 = 0, $22 = 0, $3 = 0, $6 = 0;
 $3 = $1;
 $6 = $2 - $3 >> 2;
 if ($6 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($6 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $6;
  $$021$ph = $0;
 } else {
  $13 = $6 + 4 & -4;
  if ($13 >>> 0 > 1073741823) ___assert_fail(105295, 105332, 1734, 105403); else {
   $16 = __Znwj($13 << 2) | 0;
   HEAP32[$0 >> 2] = $16;
   HEAP32[$0 + 8 >> 2] = $13 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $6;
   $$021$ph = $16;
   break;
  }
 } while (0);
 $22 = ($2 - $3 | 0) >>> 2;
 $$0 = $1;
 $$021 = $$021$ph;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  HEAP32[$$021 >> 2] = HEAP32[$$0 >> 2];
  $$0 = $$0 + 4 | 0;
  $$021 = $$021 + 4 | 0;
 }
 HEAP32[$$021$ph + ($22 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 2) << 2) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZL11str_reverseP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $1 = sp + 1036 | 0;
 $2 = sp;
 $3 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $1) | 0;
 __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $2);
 $4 = HEAP32[$1 >> 2] | 0;
 $5 = $4 + -1 | 0;
 HEAP32[$1 >> 2] = $5;
 if (!$4) {
  __Z15luaL_pushresultP11luaL_Buffer($2);
  STACKTOP = sp;
  return 1;
 }
 $7 = $2 + 1036 | 0;
 $18 = $5;
 do {
  $8 = HEAP32[$2 >> 2] | 0;
  if ($8 >>> 0 < $7 >>> 0) {
   $11 = $18;
   $14 = $8;
  } else {
   __Z15luaL_prepbufferP11luaL_Buffer($2) | 0;
   $11 = HEAP32[$1 >> 2] | 0;
   $14 = HEAP32[$2 >> 2] | 0;
  }
  $12 = HEAP8[$3 + $11 >> 0] | 0;
  HEAP32[$2 >> 2] = $14 + 1;
  HEAP8[$14 >> 0] = $12;
  $15 = HEAP32[$1 >> 2] | 0;
  $18 = $15 + -1 | 0;
  HEAP32[$1 >> 2] = $18;
 } while (($15 | 0) != 0);
 __Z15luaL_pushresultP11luaL_Buffer($2);
 STACKTOP = sp;
 return 1;
}

function __ZN6google20InternalStringPrintfEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$028 = 0, $$1 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $3 = sp + 16 | 0;
 $4 = sp;
 HEAP32[$4 >> 2] = HEAP32[$2 >> 2];
 $5 = _vsnprintf($3, 128, $1, $4) | 0;
 if ($5 >>> 0 < 128) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $3, $5) | 0;
  STACKTOP = sp;
  return;
 } else {
  $$0 = $5;
  $$028 = 128;
 }
 while (1) {
  $$1 = ($$0 | 0) < 0 ? $$028 << 1 : $$0 + 1 | 0;
  $12 = __Znaj(($$1 | 0) > -1 ? $$1 : -1) | 0;
  HEAP32[$4 >> 2] = HEAP32[$2 >> 2];
  $13 = _vsnprintf($12, $$1, $1, $4) | 0;
  if (($13 | 0) > -1 & ($13 | 0) < ($$1 | 0)) break;
  __ZdaPv($12);
  $$0 = $13;
  $$028 = $$1;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $12, $13) | 0;
 __ZdaPv($12);
 STACKTOP = sp;
 return;
}

function __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $13 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $18 = 0;
  $19 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $18 = 0;
   $19 = 0;
   break;
  }
  $8 = ___errno_location() | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = 0;
  $11 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $12 = tempRet0;
  $13 = HEAP32[$8 >> 2] | 0;
  if (!$13) HEAP32[$8 >> 2] = $9;
  if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if (($13 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $20 = -1;
   $21 = -1;
  } else {
   $20 = $11;
   $21 = $12;
  } else {
   HEAP32[$2 >> 2] = 4;
   $20 = 0;
   $21 = 0;
  }
  $18 = $21;
  $19 = $20;
 } while (0);
 tempRet0 = $18;
 STACKTOP = sp;
 return $19 | 0;
}

function __Z10luaO_str2dPKcPf($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$lcssa = 0, $$pre = 0, $10 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAPF32[$1 >> 2] = +_strtod($0, $2);
 $5 = HEAP32[$2 >> 2] | 0;
 if (($5 | 0) == ($0 | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $7 = HEAP8[$5 >> 0] | 0;
 switch ($7 << 24 >> 24) {
 case 88:
 case 120:
  {
   HEAPF32[$1 >> 2] = +((_strtoul($0, $2, 16) | 0) >>> 0);
   $$pre = HEAP32[$2 >> 2] | 0;
   $10 = HEAP8[$$pre >> 0] | 0;
   $22 = $$pre;
   break;
  }
 default:
  {
   $10 = $7;
   $22 = $5;
  }
 }
 if (!($10 << 24 >> 24)) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(_isspace($10 & 255) | 0)) $$lcssa = $10; else {
  $16 = $22;
  do {
   $16 = $16 + 1 | 0;
   $17 = HEAP8[$16 >> 0] | 0;
  } while ((_isspace($17 & 255) | 0) != 0);
  HEAP32[$2 >> 2] = $16;
  $$lcssa = $17;
 }
 $$0 = $$lcssa << 24 >> 24 == 0 & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $11 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0;
 HEAP8[$1 + 53 >> 0] = 1;
 do if ((HEAP32[$1 + 4 >> 2] | 0) == ($3 | 0)) {
  HEAP8[$1 + 52 >> 0] = 1;
  $10 = $1 + 16 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if (!$11) {
   HEAP32[$10 >> 2] = $2;
   HEAP32[$1 + 24 >> 2] = $4;
   HEAP32[$1 + 36 >> 2] = 1;
   if (!(($4 | 0) == 1 ? (HEAP32[$1 + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  if (($11 | 0) != ($2 | 0)) {
   $30 = $1 + 36 | 0;
   HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 1;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  $21 = $1 + 24 | 0;
  $22 = HEAP32[$21 >> 2] | 0;
  if (($22 | 0) == 2) {
   HEAP32[$21 >> 2] = $4;
   $27 = $4;
  } else $27 = $22;
  if (($27 | 0) == 1 ? (HEAP32[$1 + 48 >> 2] | 0) == 1 : 0) HEAP8[$1 + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZN9LuaParser10FileExistsEP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $5 = HEAP32[(HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 16 >> 2] | 0) + 12 >> 2] | 0;
 $6 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, 0) | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $6, _strlen($6) | 0);
 if (!(__ZN5LuaIO12IsSimplePathERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($1) | 0)) {
  $$0 = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return $$0 | 0;
 }
 __Z15lua_pushbooleanP9lua_Statei($0, (__ZN12CFileHandler10FileExistsERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($1 | 0, $5 + 36 | 0) | 0) & 1);
 $$0 = 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$07$i$i = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $7 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $8 = ($7 | 0) / 12 | 0;
 if (!$7) return;
 if ($8 >>> 0 > 357913941) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $11 = __Znwj($7) | 0;
 HEAP32[$2 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 HEAP32[$0 + 8 >> 2] = $11 + ($8 * 12 | 0);
 $14 = HEAP32[$1 >> 2] | 0;
 $15 = HEAP32[$4 >> 2] | 0;
 if (($14 | 0) == ($15 | 0)) return;
 $$07$i$i = $14;
 $17 = $11;
 do {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($17, $$07$i$i);
  $$07$i$i = $$07$i$i + 12 | 0;
  $17 = (HEAP32[$2 >> 2] | 0) + 12 | 0;
  HEAP32[$2 >> 2] = $17;
 } while (($$07$i$i | 0) != ($15 | 0));
 return;
}

function _log_formatter_format($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $14 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 _memset($0 | 0, 0, 32768) | 0;
 $3 = $0 + 32768 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 do if (($4 | 0) == 114224) $$0$i = $0; else {
  if ($4 | 0) if (!(HEAP8[$4 >> 0] | 0)) {
   $$0$i = $0;
   break;
  }
  $8 = _safe_strcat($0 | 0, 32768, 78991) | 0;
  $$0$i = _safe_strcat(_safe_strcat($8 | 0, 32768, _log_util_prepareSection(HEAP32[$3 >> 2] | 0) | 0) | 0, 32768, 78993) | 0;
 } while (0);
 $14 = HEAP32[$0 + 32776 >> 2] | 0;
 switch ($14 | 0) {
 case 35:
 case 30:
  break;
 default:
  _safe_strcat(_safe_strcat($$0$i | 0, 32768, _log_util_levelToString($14) | 0) | 0, 32768, 84012) | 0;
 }
 $17 = _strlen($0) | 0;
 if ($17 >>> 0 > 32766) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$2 >> 2] = HEAP32[$1 >> 2];
 _vsnprintf($0 + $17 | 0, 32768 - $17 | 0, HEAP32[$0 + 32772 >> 2] | 0, $2) | 0;
 STACKTOP = sp;
 return;
}

function __Z15luaL_prepbufferP11luaL_Buffer($0) {
 $0 = $0 | 0;
 var $$026$i = 0, $$027$i = 0, $12 = 0, $15 = 0, $16 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $or$cond$i = 0;
 $2 = $0 + 12 | 0;
 $4 = (HEAP32[$0 >> 2] | 0) - $2 | 0;
 if (!$4) return $2 | 0;
 $6 = $0 + 8 | 0;
 __Z15lua_pushlstringP9lua_StatePKcj(HEAP32[$6 >> 2] | 0, $2, $4);
 HEAP32[$0 >> 2] = $2;
 $8 = $0 + 4 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = $9 + 1;
 if (($9 | 0) <= 0) return $2 | 0;
 $12 = HEAP32[$6 >> 2] | 0;
 $$026$i = 1;
 $$027$i = __Z10lua_objlenP9lua_Statei($12, -1) | 0;
 while (1) {
  $15 = __Z10lua_objlenP9lua_Statei($12, ~$$026$i) | 0;
  $16 = HEAP32[$8 >> 2] | 0;
  $or$cond$i = $$027$i >>> 0 > $15 >>> 0 | ($16 - $$026$i | 0) > 8;
  $$026$i = ($or$cond$i & 1) + $$026$i | 0;
  if (!($or$cond$i & ($$026$i | 0) < ($16 | 0))) break; else $$027$i = ($or$cond$i ? $15 : 0) + $$027$i | 0;
 }
 __Z10lua_concatP9lua_Statei($12, $$026$i);
 HEAP32[$8 >> 2] = 1 - $$026$i + (HEAP32[$8 >> 2] | 0);
 return $2 | 0;
}

function __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN12_GLOBAL__N_114LogFileDetailsEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$1) return; else {
  __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN12_GLOBAL__N_114LogFileDetailsEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE($0, HEAP32[$1 >> 2] | 0);
  __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN12_GLOBAL__N_114LogFileDetailsEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE($0, HEAP32[$1 + 4 >> 2] | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 32 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 16 | 0);
  __ZdlPv($1);
  return;
 }
}

function __Z15luaL_optlstringP9lua_StateiPKcPj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $14 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if ((__Z8lua_typeP9lua_Statei($0, $1) | 0) >= 1) {
  $10 = __Z13lua_tolstringP9lua_StateiPj($0, $1, $3) | 0;
  if ($10 | 0) {
   $$0 = $10;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $12 = __Z12lua_typenameP9lua_Statei($0, 4) | 0;
  $14 = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, $1) | 0) | 0;
  HEAP32[$vararg_buffer >> 2] = $12;
  HEAP32[$vararg_buffer + 4 >> 2] = $14;
  __Z13luaL_argerrorP9lua_StateiPKc($0, $1, __Z15lua_pushfstringP9lua_StatePKcz($0, 85622, $vararg_buffer) | 0) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!$3) {
  $$0 = $2;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!$2) $9 = 0; else $9 = _strlen($2) | 0;
 HEAP32[$3 >> 2] = $9;
 $$0 = $2;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $$1 = 0;
   break;
  }
  $8 = ___errno_location() | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = 0;
  $11 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $12 = tempRet0;
  $13 = HEAP32[$8 >> 2] | 0;
  if (!$13) HEAP32[$8 >> 2] = $9;
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($12 >>> 0 > 0 | ($12 | 0) == 0 & $11 >>> 0 > 65535 | ($13 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $11 & 65535;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $23 = 0;
  $24 = 0;
 } else {
  $6 = ___errno_location() | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  HEAP32[$6 >> 2] = 0;
  $9 = _strtoll_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $10 = tempRet0;
  $11 = HEAP32[$6 >> 2] | 0;
  if (!$11) HEAP32[$6 >> 2] = $7;
  if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if (($11 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $20 = ($10 | 0) > 0 | ($10 | 0) == 0 & $9 >>> 0 > 0;
   $25 = $20 ? -1 : 0;
   $26 = $20 ? 2147483647 : -2147483648;
  } else {
   $25 = $9;
   $26 = $10;
  } else {
   HEAP32[$2 >> 2] = 4;
   $25 = 0;
   $26 = 0;
  }
  $23 = $26;
  $24 = $25;
 }
 tempRet0 = $23;
 STACKTOP = sp;
 return $24 | 0;
}

function _strcasecmp($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$01718 = 0, $$019 = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $21 = 0, $5 = 0, $8 = 0;
 $2 = HEAP8[$0 >> 0] | 0;
 L1 : do if (!($2 << 24 >> 24)) {
  $$0$lcssa = $1;
  $20 = 0;
 } else {
  $$01718 = $0;
  $$019 = $1;
  $10 = $2 & 255;
  $8 = $2;
  while (1) {
   $5 = HEAP8[$$019 >> 0] | 0;
   if (!($5 << 24 >> 24)) {
    $$0$lcssa = $$019;
    $20 = $8;
    break L1;
   }
   if ($8 << 24 >> 24 != $5 << 24 >> 24) {
    $11 = _tolower($10) | 0;
    if (($11 | 0) != (_tolower($5 & 255) | 0)) {
     $$0$lcssa = $$019;
     $20 = $8;
     break L1;
    }
   }
   $$01718 = $$01718 + 1 | 0;
   $15 = $$019 + 1 | 0;
   $16 = HEAP8[$$01718 >> 0] | 0;
   if (!($16 << 24 >> 24)) {
    $$0$lcssa = $15;
    $20 = 0;
    break;
   } else {
    $$019 = $15;
    $10 = $16 & 255;
    $8 = $16;
   }
  }
 } while (0);
 $21 = _tolower($20 & 255) | 0;
 return $21 - (_tolower(HEAPU8[$$0$lcssa >> 0] | 0) | 0) | 0;
}

function __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $$1 = 0;
   break;
  }
  $8 = ___errno_location() | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = 0;
  $11 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $12 = tempRet0;
  $13 = HEAP32[$8 >> 2] | 0;
  if (!$13) HEAP32[$8 >> 2] = $9;
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($12 >>> 0 > 0 | ($12 | 0) == 0 & $11 >>> 0 > 4294967295 | ($13 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $11;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $$1 = 0;
   break;
  }
  $8 = ___errno_location() | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = 0;
  $11 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $12 = tempRet0;
  $13 = HEAP32[$8 >> 2] | 0;
  if (!$13) HEAP32[$8 >> 2] = $9;
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($12 >>> 0 > 0 | ($12 | 0) == 0 & $11 >>> 0 > 4294967295 | ($13 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $11;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$sroa$speculated = 0, $20 = 0, $21 = 0, $25 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $3 = $0 + 24 | 0;
 $4 = $0 + 28 | 0;
 $$0 = $1;
 $$021 = 0;
 while (1) {
  if (($$021 | 0) >= ($2 | 0)) break;
  $6 = HEAP32[$3 >> 2] | 0;
  $7 = HEAP32[$4 >> 2] | 0;
  if ($6 >>> 0 >= $7 >>> 0) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 31]($0, HEAPU8[$$0 >> 0] | 0) | 0) == -1) break;
   $$0 = $$0 + 1 | 0;
   $$021 = $$021 + 1 | 0;
   continue;
  }
  $20 = $7 - $6 | 0;
  $21 = $2 - $$021 | 0;
  $$sroa$speculated = ($21 | 0) < ($20 | 0) ? $21 : $20;
  if (!$$sroa$speculated) $25 = $6; else {
   _memcpy($6 | 0, $$0 | 0, $$sroa$speculated | 0) | 0;
   $25 = HEAP32[$3 >> 2] | 0;
  }
  HEAP32[$3 >> 2] = $25 + $$sroa$speculated;
  $$0 = $$0 + $$sroa$speculated | 0;
  $$021 = $$sroa$speculated + $$021 | 0;
 }
 return $$021 | 0;
}

function __Z16luaK_exp2nextregP9FuncStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $15 = 0, $16 = 0, $18 = 0, $28 = 0, $29 = 0, $30 = 0, $5 = 0;
 __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $1);
 if ((HEAP32[$1 >> 2] | 0) == 12) {
  $5 = HEAP32[$1 + 4 >> 2] | 0;
  if (!($5 & 256)) if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) <= ($5 | 0)) {
   $12 = $0 + 36 | 0;
   HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + -1;
  }
 }
 $15 = $0 + 36 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 $18 = HEAP32[$0 >> 2] | 0;
 if (($16 | 0) < (HEAPU8[$18 + 75 >> 0] | 0 | 0)) {
  $30 = $16;
  $29 = $30 + 1 | 0;
  HEAP32[$15 >> 2] = $29;
  __ZL7exp2regP9FuncStateP7expdesci($0, $1, $30);
  return;
 }
 if (($16 | 0) > 248) {
  __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
  $28 = HEAP32[$0 >> 2] | 0;
 } else $28 = $18;
 HEAP8[$28 + 75 >> 0] = $16 + 1;
 $30 = HEAP32[$15 >> 2] | 0;
 $29 = $30 + 1 | 0;
 HEAP32[$15 >> 2] = $29;
 __ZL7exp2regP9FuncStateP7expdesci($0, $1, $30);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$sroa$speculated = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0;
 if ((-17 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $23 = HEAP32[$0 >> 2] | 0; else $23 = $0;
 if ($1 >>> 0 < 2147483623) {
  $14 = $2 + $1 | 0;
  $15 = $1 << 1;
  $$sroa$speculated = $14 >>> 0 < $15 >>> 0 ? $15 : $14;
  $20 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $20 = -17;
 $21 = __Znwj($20) | 0;
 if ($4 | 0) _memcpy($21 | 0, $23 | 0, $4 | 0) | 0;
 $25 = $3 - $5 - $4 | 0;
 if ($25 | 0) _memcpy($21 + $4 + $6 | 0, $23 + $4 + $5 | 0, $25 | 0) | 0;
 if (($1 | 0) != 10) __ZdlPv($23);
 HEAP32[$0 >> 2] = $21;
 HEAP32[$0 + 8 >> 2] = $20 | -2147483648;
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $11 = 0, $18 = 0, $19 = 0, $5 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 HEAP32[$4 >> 2] = $2;
 $8 = _uselocale(HEAP32[$0 + 8 >> 2] | 0) | 0;
 $9 = _wcrtomb($5, 0, $1) | 0;
 if ($8 | 0) _uselocale($8) | 0;
 L4 : do switch ($9 | 0) {
 case 0:
 case -1:
  {
   $$019 = 2;
   break;
  }
 default:
  {
   $11 = $9 + -1 | 0;
   if ($11 >>> 0 > ($3 - (HEAP32[$4 >> 2] | 0) | 0) >>> 0) $$019 = 1; else {
    $$0 = $5;
    $$018 = $11;
    while (1) {
     if (!$$018) {
      $$019 = 0;
      break L4;
     }
     $18 = HEAP8[$$0 >> 0] | 0;
     $19 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $19 + 1;
     HEAP8[$19 >> 0] = $18;
     $$0 = $$0 + 1 | 0;
     $$018 = $$018 + -1 | 0;
    }
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$019 | 0;
}

function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $rem = __stackBase__ | 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0 | 0, $1$1 ^ $a$1 | 0, $1$0 | 0, $1$1 | 0) | 0;
 $4$1 = tempRet0;
 ___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0 | 0, $2$1 ^ $b$1 | 0, $2$0 | 0, $2$1 | 0) | 0, tempRet0, $rem) | 0;
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0 | 0, HEAP32[$rem + 4 >> 2] ^ $1$1 | 0, $1$0 | 0, $1$1 | 0) | 0;
 $10$1 = tempRet0;
 STACKTOP = __stackBase__;
 return (tempRet0 = $10$1, $10$0) | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0;
 $2 = $0 + 8 | 0;
 $3 = $2 + 3 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) {
  $$018 = HEAP32[$0 + 4 >> 2] | 0;
  $$019 = (HEAP32[$2 >> 2] & 2147483647) + -1 | 0;
 } else {
  $$018 = $4 & 255;
  $$019 = 1;
 }
 if (($$018 | 0) == ($$019 | 0)) {
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($0, $$019, 1, $$019, $$019, 0, 0);
  if ((HEAP8[$3 >> 0] | 0) > -1) label = 7; else label = 8;
 } else if ($5) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$3 >> 0] = $$018 + 1;
  $$pn = $0;
 } else if ((label | 0) == 8) {
  $17 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $$018 + 1;
  $$pn = $17;
 }
 $$0 = $$pn + ($$018 << 2) | 0;
 HEAP32[$$0 >> 2] = $1;
 HEAP32[$$0 + 4 >> 2] = 0;
 return;
}

function __ZL10luaB_printP9lua_State($0) {
 $0 = $0 | 0;
 var $$02227 = 0, $$2 = 0, $$pre = 0, $1 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $1 = __Z10lua_gettopP9lua_State($0) | 0;
 __Z12lua_getfieldP9lua_StateiPKc($0, -10002, 86029);
 $$pre = HEAP32[17382] | 0;
 L1 : do if (($1 | 0) >= 1) {
  $$02227 = 1;
  while (1) {
   __Z13lua_pushvalueP9lua_Statei($0, -1);
   __Z13lua_pushvalueP9lua_Statei($0, $$02227);
   __Z8lua_callP9lua_Stateii($0, 1, 1);
   $3 = __Z13lua_tolstringP9lua_StateiPj($0, -1, 0) | 0;
   if (!$3) break;
   if (($$02227 | 0) > 1) _fputc(9, $$pre) | 0;
   _fputs($3, $$pre) | 0;
   __Z10lua_settopP9lua_Statei($0, -2);
   if (($$02227 | 0) < ($1 | 0)) $$02227 = $$02227 + 1 | 0; else break L1;
  }
  $$2 = __Z10luaL_errorP9lua_StatePKcz($0, 86417, $vararg_buffer) | 0;
  STACKTOP = sp;
  return $$2 | 0;
 } while (0);
 _fputc(10, $$pre) | 0;
 $$2 = 0;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN6google12_GLOBAL__N_19FlagValueD2Ev($0) {
 $0 = $0 | 0;
 var $11 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $7 = 0, $9 = 0;
 if (!(HEAP8[$0 + 5 >> 0] | 0)) return;
 switch (HEAP8[$0 + 4 >> 0] | 0) {
 case 0:
  {
   $7 = HEAP32[$0 >> 2] | 0;
   if (!$7) return;
   __ZdlPv($7);
   return;
  }
 case 1:
  {
   $9 = HEAP32[$0 >> 2] | 0;
   if (!$9) return;
   __ZdlPv($9);
   return;
  }
 case 2:
  {
   $11 = HEAP32[$0 >> 2] | 0;
   if (!$11) return;
   __ZdlPv($11);
   return;
  }
 case 3:
  {
   $13 = HEAP32[$0 >> 2] | 0;
   if (!$13) return;
   __ZdlPv($13);
   return;
  }
 case 4:
  {
   $15 = HEAP32[$0 >> 2] | 0;
   if (!$15) return;
   __ZdlPv($15);
   return;
  }
 case 5:
  {
   $17 = HEAP32[$0 >> 2] | 0;
   if (!$17) return;
   __ZdlPv($17);
   return;
  }
 case 6:
  {
   $19 = HEAP32[$0 >> 2] | 0;
   if (!$19) return;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
   __ZdlPv($19);
   return;
  }
 default:
  return;
 }
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5eraseEjj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$speculated = 0, $13 = 0, $15 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0;
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) $9 = HEAP32[$0 + 4 >> 2] | 0; else $9 = $4 & 255;
 if ($9 >>> 0 < $1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 if ($2 | 0) {
  if ($5) $18 = HEAP32[$0 >> 2] | 0; else $18 = $0;
  $13 = $9 - $1 | 0;
  $$sroa$speculated = $13 >>> 0 < $2 >>> 0 ? $13 : $2;
  $15 = $13 - $$sroa$speculated | 0;
  if (!$15) $21 = $4; else {
   $17 = $18 + $1 | 0;
   _memmove($17 | 0, $17 + $$sroa$speculated | 0, $15 | 0) | 0;
   $21 = HEAP8[$3 >> 0] | 0;
  }
  $20 = $9 - $$sroa$speculated | 0;
  if ($21 << 24 >> 24 < 0) HEAP32[$0 + 4 >> 2] = $20; else HEAP8[$3 >> 0] = $20;
  HEAP8[$18 + $20 >> 0] = 0;
 }
 return $0 | 0;
}

function _pad($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$lcssa16 = 0, $$012 = 0, $13 = 0, $15 = 0, $16 = 0, $20 = 0, $23 = 0, $24 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $5 = sp;
 do if (($2 | 0) > ($3 | 0) & ($4 & 73728 | 0) == 0) {
  $9 = $2 - $3 | 0;
  _memset($5 | 0, $1 | 0, ($9 >>> 0 > 256 ? 256 : $9) | 0) | 0;
  $13 = HEAP32[$0 >> 2] | 0;
  $15 = ($13 & 32 | 0) == 0;
  if ($9 >>> 0 > 255) {
   $16 = $2 - $3 | 0;
   $$012 = $9;
   $23 = $13;
   $24 = $15;
   while (1) {
    if ($24) {
     ___fwritex($5, 256, $0) | 0;
     $20 = HEAP32[$0 >> 2] | 0;
    } else $20 = $23;
    $$012 = $$012 + -256 | 0;
    $24 = ($20 & 32 | 0) == 0;
    if ($$012 >>> 0 <= 255) break; else $23 = $20;
   }
   if ($24) $$0$lcssa16 = $16 & 255; else break;
  } else if ($15) $$0$lcssa16 = $9; else break;
  ___fwritex($5, $$0$lcssa16, $0) | 0;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN9LuaParser9AddStringERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $20 = 0, $21 = 0, $28 = 0, $3 = 0, $30 = 0, $4 = 0, $6 = 0;
 $3 = $0 + 48 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) return;
 $6 = $0 + 120 | 0;
 if ((HEAP32[$6 >> 2] | 0) < 0) return;
 $10 = HEAP8[$1 + 11 >> 0] | 0;
 $11 = $10 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj($4, $11 ? HEAP32[$1 >> 2] | 0 : $1, $11 ? HEAP32[$1 + 4 >> 2] | 0 : $10 & 255);
 $20 = HEAP8[$2 + 11 >> 0] | 0;
 $21 = $20 << 24 >> 24 < 0;
 __Z15lua_pushlstringP9lua_StatePKcj(HEAP32[$3 >> 2] | 0, $21 ? HEAP32[$2 >> 2] | 0 : $2, $21 ? HEAP32[$2 + 4 >> 2] | 0 : $20 & 255);
 $28 = HEAP32[$3 >> 2] | 0;
 if (!$28) return;
 $30 = HEAP32[$6 >> 2] | 0;
 if (($30 | 0) < 0) return;
 if (!$30) {
  __Z10lua_rawsetP9lua_Statei($28, -10002);
  return;
 } else {
  __Z10lua_rawsetP9lua_Statei($28, -3);
  return;
 }
}

function __ZL5fieldP8LexStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = sp + 4 | 0;
 $3 = $0 + 28 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 __Z15luaK_exp2anyregP9FuncStateP7expdesc($4, $1) | 0;
 __Z9luaX_nextP8LexState($0);
 if ((HEAP32[$0 + 12 >> 2] | 0) != 285) {
  $9 = HEAP32[$0 + 32 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = __Z14luaX_token2strP8LexStatei($0, 285) | 0;
  __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($9, 87798, $vararg_buffer) | 0);
 }
 $13 = HEAP32[$0 + 16 >> 2] | 0;
 __Z9luaX_nextP8LexState($0);
 $14 = __Z12luaK_stringKP9FuncStateP7TString(HEAP32[$3 >> 2] | 0, $13) | 0;
 HEAP32[$2 + 12 >> 2] = -1;
 HEAP32[$2 + 16 >> 2] = -1;
 HEAP32[$2 >> 2] = 4;
 HEAP32[$2 + 4 >> 2] = $14;
 __Z12luaK_indexedP9FuncStateP7expdescS2_($4, $1, $2);
 STACKTOP = sp;
 return;
}

function __Z16luaK_patchtohereP9FuncStatei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$idx$val$idx$val$i = 0, $10 = 0, $12 = 0, $17 = 0, $23 = 0, $5 = 0, $7 = 0, $9 = 0;
 HEAP32[$0 + 28 >> 2] = HEAP32[$0 + 24 >> 2];
 $5 = $0 + 32 | 0;
 if (($1 | 0) == -1) return;
 $7 = HEAP32[$5 >> 2] | 0;
 if (($7 | 0) == -1) {
  HEAP32[$5 >> 2] = $1;
  return;
 }
 $$idx$val$idx$val$i = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
 $$0$i = $7;
 while (1) {
  $9 = $$idx$val$idx$val$i + ($$0$i << 2) | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $12 = ($10 >>> 14) + -131071 | 0;
  $$0$i$i = ($12 | 0) == -1 ? -1 : $$0$i + 1 + $12 | 0;
  if (($$0$i$i | 0) == -1) break; else $$0$i = $$0$i$i;
 }
 $17 = ~$$0$i + $1 | 0;
 if (((($17 | 0) > -1 ? $17 : 0 - $17 | 0) | 0) > 131071) {
  __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
  $23 = HEAP32[$9 >> 2] | 0;
 } else $23 = $10;
 HEAP32[$9 >> 2] = $23 & 16383 | ($17 << 14) + 2147467264;
 return;
}

function _strlen($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $1 = 0, $10 = 0, $19 = 0, $22 = 0, $6 = 0, label = 0;
 $1 = $0;
 L1 : do if (!($1 & 3)) {
  $$015$lcssa = $0;
  label = 4;
 } else {
  $$01518 = $0;
  $22 = $1;
  while (1) {
   if (!(HEAP8[$$01518 >> 0] | 0)) {
    $$pn = $22;
    break L1;
   }
   $6 = $$01518 + 1 | 0;
   $22 = $6;
   if (!($22 & 3)) {
    $$015$lcssa = $6;
    label = 4;
    break;
   } else $$01518 = $6;
  }
 } while (0);
 if ((label | 0) == 4) {
  $$0 = $$015$lcssa;
  while (1) {
   $10 = HEAP32[$$0 >> 2] | 0;
   if (!(($10 & -2139062144 ^ -2139062144) & $10 + -16843009)) $$0 = $$0 + 4 | 0; else break;
  }
  if (!(($10 & 255) << 24 >> 24)) $$1$lcssa = $$0; else {
   $$pn29 = $$0;
   while (1) {
    $19 = $$pn29 + 1 | 0;
    if (!(HEAP8[$19 >> 0] | 0)) {
     $$1$lcssa = $19;
     break;
    } else $$pn29 = $19;
   }
  }
  $$pn = $$1$lcssa;
 }
 return $$pn - $1 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$sroa$speculated = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $3 = $0 + 24 | 0;
 $4 = $0 + 28 | 0;
 $$0 = $1;
 $$021 = 0;
 while (1) {
  if (($$021 | 0) >= ($2 | 0)) break;
  $6 = HEAP32[$3 >> 2] | 0;
  $7 = HEAP32[$4 >> 2] | 0;
  if ($6 >>> 0 < $7 >>> 0) {
   $20 = $7 - $6 >> 2;
   $21 = $2 - $$021 | 0;
   $$sroa$speculated = ($21 | 0) < ($20 | 0) ? $21 : $20;
   __ZNSt3__211char_traitsIwE4copyEPwPKwj($6, $$0, $$sroa$speculated) | 0;
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + ($$sroa$speculated << 2);
   $$0 = $$0 + ($$sroa$speculated << 2) | 0;
   $$021 = $$sroa$speculated + $$021 | 0;
   continue;
  }
  if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 31]($0, HEAP32[$$0 >> 2] | 0) | 0) == -1) break;
  $$0 = $$0 + 4 | 0;
  $$021 = $$021 + 1 | 0;
 }
 return $$021 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0;
 $2 = $0 + 11 | 0;
 $3 = HEAP8[$2 >> 0] | 0;
 $4 = $3 << 24 >> 24 < 0;
 if ($4) {
  $$018 = HEAP32[$0 + 4 >> 2] | 0;
  $$019 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $$018 = $3 & 255;
  $$019 = 10;
 }
 if (($$018 | 0) == ($$019 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $$019, 1, $$019, $$019, 0, 0);
  if ((HEAP8[$2 >> 0] | 0) > -1) label = 7; else label = 8;
 } else if ($4) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$2 >> 0] = $$018 + 1;
  $$pn = $0;
 } else if ((label | 0) == 8) {
  $17 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $$018 + 1;
  $$pn = $17;
 }
 $$0 = $$pn + $$018 | 0;
 HEAP8[$$0 >> 0] = $1;
 HEAP8[$$0 + 1 >> 0] = 0;
 return;
}

function __Z10luaL_errorP9lua_StatePKcz($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $10 = 0, $2 = 0, $3 = 0, $7 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer = sp;
 $2 = sp + 24 | 0;
 $3 = sp + 8 | 0;
 HEAP32[$3 >> 2] = $varargs;
 if (!(__Z12lua_getstackP9lua_StateiP9lua_Debug($0, 1, $2) | 0)) label = 4; else {
  __Z11lua_getinfoP9lua_StatePKcP9lua_Debug($0, 85611, $2) | 0;
  $7 = HEAP32[$2 + 20 >> 2] | 0;
  if (($7 | 0) > 0) {
   HEAP32[$vararg_buffer >> 2] = $2 + 36;
   HEAP32[$vararg_buffer + 4 >> 2] = $7;
   __Z15lua_pushfstringP9lua_StatePKcz($0, 85614, $vararg_buffer) | 0;
  } else label = 4;
 }
 if ((label | 0) == 4) __Z15lua_pushlstringP9lua_StatePKcj($0, 114224, 0);
 __Z16lua_pushvfstringP9lua_StatePKcPi($0, $1, $3) | 0;
 __Z10lua_concatP9lua_Statei($0, 2);
 $10 = __Z9lua_errorP9lua_State($0) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __Z17luaF_getlocalnamePK5Protoii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$014 = 0, $$01517 = 0, $$018 = 0, $$1 = 0, $14 = 0, $19 = 0, $4 = 0, $7 = 0, label = 0;
 $4 = HEAP32[$0 + 56 >> 2] | 0;
 if (($4 | 0) <= 0) {
  $$014 = 0;
  return $$014 | 0;
 }
 $7 = HEAP32[$0 + 24 >> 2] | 0;
 $$01517 = $1;
 $$018 = 0;
 while (1) {
  if ((HEAP32[$7 + ($$018 * 12 | 0) + 4 >> 2] | 0) > ($2 | 0)) {
   $$014 = 0;
   label = 8;
   break;
  }
  if ((HEAP32[$7 + ($$018 * 12 | 0) + 8 >> 2] | 0) > ($2 | 0)) {
   $14 = $$01517 + -1 | 0;
   if (!$14) {
    label = 6;
    break;
   } else $$1 = $14;
  } else $$1 = $$01517;
  $19 = $$018 + 1 | 0;
  if (($19 | 0) < ($4 | 0)) {
   $$01517 = $$1;
   $$018 = $19;
  } else {
   $$014 = 0;
   label = 8;
   break;
  }
 }
 if ((label | 0) == 6) {
  $$014 = (HEAP32[$7 + ($$018 * 12 | 0) >> 2] | 0) + 16 | 0;
  return $$014 | 0;
 } else if ((label | 0) == 8) return $$014 | 0;
 return 0;
}

function __ZN8LuaUtils16PushStringVectorEP9lua_StateRKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$010 = 0, $$in = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $8 = 0;
 $2 = $1 + 4 | 0;
 __Z15lua_createtableP9lua_Stateii($0, ((HEAP32[$2 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0) / 12 | 0, 0);
 $8 = HEAP32[$1 >> 2] | 0;
 if ((HEAP32[$2 >> 2] | 0) == ($8 | 0)) return; else {
  $$010 = 0;
  $$in = $8;
 }
 do {
  $10 = $$in;
  $11 = $10 + ($$010 * 12 | 0) | 0;
  $13 = HEAP8[$11 + 11 >> 0] | 0;
  $14 = $13 << 24 >> 24 < 0;
  __Z15lua_pushlstringP9lua_StatePKcj($0, $14 ? HEAP32[$11 >> 2] | 0 : $11, $14 ? HEAP32[$10 + ($$010 * 12 | 0) + 4 >> 2] | 0 : $13 & 255);
  $$010 = $$010 + 1 | 0;
  __Z11lua_rawsetiP9lua_Stateii($0, -2, $$010);
  $$in = HEAP32[$1 >> 2] | 0;
 } while ($$010 >>> 0 < (((HEAP32[$2 >> 2] | 0) - $$in | 0) / 12 | 0) >>> 0);
 return;
}

function _fputc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $12 = 0, $24 = 0, $25 = 0, $33 = 0, label = 0;
 if ((HEAP32[$1 + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($1) | 0)) label = 3; else {
  if ((HEAP8[$1 + 75 >> 0] | 0) == ($0 | 0)) label = 10; else {
   $24 = $1 + 20 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   if ($25 >>> 0 < (HEAP32[$1 + 16 >> 2] | 0) >>> 0) {
    HEAP32[$24 >> 2] = $25 + 1;
    HEAP8[$25 >> 0] = $0;
    $33 = $0 & 255;
   } else label = 10;
  }
  if ((label | 0) == 10) $33 = ___overflow($1, $0) | 0;
  ___unlockfile($1);
  $$0 = $33;
 }
 do if ((label | 0) == 3) {
  if ((HEAP8[$1 + 75 >> 0] | 0) != ($0 | 0)) {
   $11 = $1 + 20 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   if ($12 >>> 0 < (HEAP32[$1 + 16 >> 2] | 0) >>> 0) {
    HEAP32[$11 >> 2] = $12 + 1;
    HEAP8[$12 >> 0] = $0;
    $$0 = $0 & 255;
    break;
   }
  }
  $$0 = ___overflow($1, $0) | 0;
 } while (0);
 return $$0 | 0;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$2 = 0, $3 = 0, $6 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) $$2 = 1; else if (!$1) $$2 = 0; else {
  $6 = ___dynamic_cast($1, 1784, 1768, 0) | 0;
  if (!$6) $$2 = 0; else {
   dest = $3 + 4 | 0;
   stop = dest + 52 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$3 >> 2] = $6;
   HEAP32[$3 + 8 >> 2] = $0;
   HEAP32[$3 + 12 >> 2] = -1;
   HEAP32[$3 + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 15]($6, $3, HEAP32[$2 >> 2] | 0, 1);
   if ((HEAP32[$3 + 24 >> 2] | 0) == 1) {
    HEAP32[$2 >> 2] = HEAP32[$3 + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$2 = $$0;
  }
 }
 STACKTOP = sp;
 return $$2 | 0;
}

function __Z9lua_xmoveP9lua_StateS0_i($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre = 0, $10 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 if (($0 | 0) == ($1 | 0)) return;
 __Z12LuaMutexLockP9lua_State($1 | 0);
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = 0 - $2 | 0;
 $7 = $5 + ($6 << 3) | 0;
 HEAP32[$4 >> 2] = $7;
 if (($2 | 0) > 0) {
  $9 = $1 + 8 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  HEAP32[$9 >> 2] = $10 + 8;
  HEAP32[$10 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$10 + 4 >> 2] = HEAP32[$5 + ($6 << 3) + 4 >> 2];
  if (($2 | 0) != 1) {
   $17 = 1;
   do {
    $$pre = HEAP32[$4 >> 2] | 0;
    $18 = HEAP32[$9 >> 2] | 0;
    HEAP32[$9 >> 2] = $18 + 8;
    HEAP32[$18 >> 2] = HEAP32[$$pre + ($17 << 3) >> 2];
    HEAP32[$18 + 4 >> 2] = HEAP32[$$pre + ($17 << 3) + 4 >> 2];
    $17 = $17 + 1 | 0;
   } while (($17 | 0) != ($2 | 0));
  }
 }
 __Z14LuaMutexUnlockP9lua_State($1 | 0);
 return;
}

function _scalbn($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 var $$0 = 0.0, $$020 = 0, $10 = 0.0, $11 = 0, $13 = 0, $17 = 0, $18 = 0, $3 = 0.0, $4 = 0, $6 = 0;
 if (($1 | 0) > 1023) {
  $3 = $0 * 8988465674311579538646525.0e283;
  $4 = $1 + -1023 | 0;
  $6 = $1 + -2046 | 0;
  if (($4 | 0) > 1023) {
   $$0 = $3 * 8988465674311579538646525.0e283;
   $$020 = ($6 | 0) > 1023 ? 1023 : $6;
  } else {
   $$0 = $3;
   $$020 = $4;
  }
 } else if (($1 | 0) < -1022) {
  $10 = $0 * 2.2250738585072014e-308;
  $11 = $1 + 1022 | 0;
  $13 = $1 + 2044 | 0;
  if (($11 | 0) < -1022) {
   $$0 = $10 * 2.2250738585072014e-308;
   $$020 = ($13 | 0) < -1022 ? -1022 : $13;
  } else {
   $$0 = $10;
   $$020 = $11;
  }
 } else {
  $$0 = $0;
  $$020 = $1;
 }
 $17 = _bitshift64Shl($$020 + 1023 | 0, 0, 52) | 0;
 $18 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = $17;
 HEAP32[tempDoublePtr + 4 >> 2] = $18;
 return +($$0 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0;
 if ($1 | 0) {
  $4 = $0 + 11 | 0;
  $5 = HEAP8[$4 >> 0] | 0;
  if ($5 << 24 >> 24 < 0) {
   $14 = HEAP32[$0 + 4 >> 2] | 0;
   $15 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   $14 = $5 & 255;
   $15 = 10;
  }
  if (($15 - $14 | 0) >>> 0 < $1 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $15, $1 - $15 + $14 | 0, $14, $14, 0, 0);
   $19 = HEAP8[$4 >> 0] | 0;
  } else $19 = $5;
  if ($19 << 24 >> 24 < 0) $23 = HEAP32[$0 >> 2] | 0; else $23 = $0;
  _memset($23 + $14 | 0, $2 | 0, $1 | 0) | 0;
  $24 = $14 + $1 | 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $24; else HEAP8[$4 >> 0] = $24;
  HEAP8[$23 + $24 >> 0] = 0;
 }
 return $0 | 0;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $19 = 0, $25 = 0;
 do if (($0 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) {
  if ((HEAP32[$1 + 4 >> 2] | 0) == ($2 | 0)) {
   $11 = $1 + 28 | 0;
   if ((HEAP32[$11 >> 2] | 0) != 1) HEAP32[$11 >> 2] = $3;
  }
 } else if (($0 | 0) == (HEAP32[$1 >> 2] | 0)) {
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $19 = $1 + 20 | 0;
   if ((HEAP32[$19 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$1 + 32 >> 2] = $3;
    HEAP32[$19 >> 2] = $2;
    $25 = $1 + 40 | 0;
    HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
    if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$1 + 24 >> 2] | 0) == 2) HEAP8[$1 + 54 >> 0] = 1;
    HEAP32[$1 + 44 >> 2] = 4;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$1) return; else {
  __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$1 >> 2] | 0);
  __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$1 + 4 >> 2] | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 28 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 16 | 0);
  __ZdlPv($1);
  return;
 }
}

function __ZL8str_charP9lua_State($0) {
 $0 = $0 | 0;
 var $$016 = 0, $1 = 0, $12 = 0, $2 = 0, $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $1 = sp;
 $2 = __Z10lua_gettopP9lua_State($0) | 0;
 __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $1);
 if (($2 | 0) < 1) {
  __Z15luaL_pushresultP11luaL_Buffer($1);
  STACKTOP = sp;
  return 1;
 }
 $4 = $1 + 1036 | 0;
 $$016 = 1;
 while (1) {
  $5 = __Z17luaL_checkintegerP9lua_Statei($0, $$016) | 0;
  if (($5 & 255 | 0) != ($5 | 0)) __Z13luaL_argerrorP9lua_StateiPKc($0, $$016, 88910) | 0;
  $9 = HEAP32[$1 >> 2] | 0;
  if ($9 >>> 0 < $4 >>> 0) $12 = $9; else {
   __Z15luaL_prepbufferP11luaL_Buffer($1) | 0;
   $12 = HEAP32[$1 >> 2] | 0;
  }
  HEAP32[$1 >> 2] = $12 + 1;
  HEAP8[$12 >> 0] = $5;
  if (($$016 | 0) == ($2 | 0)) break; else $$016 = $$016 + 1 | 0;
 }
 __Z15luaL_pushresultP11luaL_Buffer($1);
 STACKTOP = sp;
 return 1;
}

function _strncmp($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$01823 = 0, $$01925$in = 0, $$020 = 0, $$024 = 0, $12 = 0, $16 = 0, $4 = 0, $6 = 0, $9 = 0;
 if (!$2) $$020 = 0; else {
  $4 = HEAP8[$0 >> 0] | 0;
  L3 : do if (!($4 << 24 >> 24)) {
   $$0$lcssa = $1;
   $16 = 0;
  } else {
   $$01823 = $0;
   $$01925$in = $2;
   $$024 = $1;
   $9 = $4;
   while (1) {
    $$01925$in = $$01925$in + -1 | 0;
    $6 = HEAP8[$$024 >> 0] | 0;
    if (!($9 << 24 >> 24 == $6 << 24 >> 24 & (($$01925$in | 0) != 0 & $6 << 24 >> 24 != 0))) {
     $$0$lcssa = $$024;
     $16 = $9;
     break L3;
    }
    $$01823 = $$01823 + 1 | 0;
    $12 = $$024 + 1 | 0;
    $9 = HEAP8[$$01823 >> 0] | 0;
    if (!($9 << 24 >> 24)) {
     $$0$lcssa = $12;
     $16 = 0;
     break;
    } else $$024 = $12;
   }
  } while (0);
  $$020 = ($16 & 255) - (HEAPU8[$$0$lcssa >> 0] | 0) | 0;
 }
 return $$020 | 0;
}

function __ZNSt3__211__stdoutbufIwE4syncEv($0) {
 $0 = $0 | 0;
 var $$2 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 $3 = $0 + 36 | 0;
 $4 = $0 + 40 | 0;
 $5 = $1 + 8 | 0;
 $6 = $1;
 $7 = $0 + 32 | 0;
 L1 : while (1) {
  $8 = HEAP32[$3 >> 2] | 0;
  $13 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 31]($8, HEAP32[$4 >> 2] | 0, $1, $5, $2) | 0;
  $15 = (HEAP32[$2 >> 2] | 0) - $6 | 0;
  if ((_fwrite($1, 1, $15, HEAP32[$7 >> 2] | 0) | 0) != ($15 | 0)) {
   $$2 = -1;
   break;
  }
  switch ($13 | 0) {
  case 1:
   break;
  case 2:
   {
    $$2 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$2 = ((_fflush(HEAP32[$7 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__211__stdoutbufIcE4syncEv($0) {
 $0 = $0 | 0;
 var $$2 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 $3 = $0 + 36 | 0;
 $4 = $0 + 40 | 0;
 $5 = $1 + 8 | 0;
 $6 = $1;
 $7 = $0 + 32 | 0;
 L1 : while (1) {
  $8 = HEAP32[$3 >> 2] | 0;
  $13 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 31]($8, HEAP32[$4 >> 2] | 0, $1, $5, $2) | 0;
  $15 = (HEAP32[$2 >> 2] | 0) - $6 | 0;
  if ((_fwrite($1, 1, $15, HEAP32[$7 >> 2] | 0) | 0) != ($15 | 0)) {
   $$2 = -1;
   break;
  }
  switch ($13 | 0) {
  case 1:
   break;
  case 2:
   {
    $$2 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$2 = ((_fflush(HEAP32[$7 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 $6 = __ZNKSt3__28ios_base6getlocEv($1) | 0;
 HEAP32[$5 >> 2] = $6;
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 110200) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 15]($7, 102831, 102863, $2) | 0;
 $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 110208) | 0;
 HEAP32[$3 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 255]($11) | 0;
 HEAP32[$4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 20 >> 2] & 63]($0, $11);
 __ZNSt3__214__shared_count16__release_sharedEv($6) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = sp;
 $6 = __ZNKSt3__28ios_base6getlocEv($1) | 0;
 HEAP32[$5 >> 2] = $6;
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 110168) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 32 >> 2] & 15]($7, 102831, 102863, $2) | 0;
 $11 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 110184) | 0;
 HEAP8[$3 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 255]($11) | 0;
 HEAP8[$4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$11 >> 2] | 0) + 20 >> 2] & 63]($0, $11);
 __ZNSt3__214__shared_count16__release_sharedEv($6) | 0;
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $13 = 0, $9 = 0;
 L1 : do if (($0 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3); else {
  $9 = HEAP32[$0 + 12 >> 2] | 0;
  $10 = $0 + 16 + ($9 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0 + 16 | 0, $1, $2, $3);
  if (($9 | 0) > 1) {
   $13 = $1 + 54 | 0;
   $$0 = $0 + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($$0, $1, $2, $3);
    if (HEAP8[$13 >> 0] | 0) break L1;
    $$0 = $$0 + 8 | 0;
   } while ($$0 >>> 0 < $10 >>> 0);
  }
 } while (0);
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $12 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0;
 $3 = $0 + 8 | 0;
 $4 = $3 + 3 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $9 = (HEAP32[$3 >> 2] & 2147483647) + -1 | 0; else $9 = 1;
 do if ($9 >>> 0 < $2 >>> 0) {
  if ($6) $22 = HEAP32[$0 + 4 >> 2] | 0; else $22 = $5 & 255;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($0, $9, $2 - $9 | 0, $22, 0, $22, $2, $1);
 } else {
  if ($6) $12 = HEAP32[$0 >> 2] | 0; else $12 = $0;
  __ZNSt3__211char_traitsIwE4moveEPwPKwj($12, $1, $2) | 0;
  HEAP32[$12 + ($2 << 2) >> 2] = 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $2;
   break;
  } else {
   HEAP8[$4 >> 0] = $2;
   break;
  }
 } while (0);
 return $0 | 0;
}

function __ZNSt3__214__num_put_base12__format_intEPcPKcbj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$013 = 0, $$1 = 0, $10 = 0;
 if (!($3 & 2048)) $$0 = $0; else {
  HEAP8[$0 >> 0] = 43;
  $$0 = $0 + 1 | 0;
 }
 if (!($3 & 512)) {
  $$013 = $1;
  $$1 = $$0;
 } else {
  HEAP8[$$0 >> 0] = 35;
  $$013 = $1;
  $$1 = $$0 + 1 | 0;
 }
 while (1) {
  $10 = HEAP8[$$013 >> 0] | 0;
  if (!($10 << 24 >> 24)) break;
  HEAP8[$$1 >> 0] = $10;
  $$013 = $$013 + 1 | 0;
  $$1 = $$1 + 1 | 0;
 }
 L10 : do switch ($3 & 74) {
 case 64:
  {
   HEAP8[$$1 >> 0] = 111;
   break;
  }
 case 8:
  {
   if (!($3 & 16384)) {
    HEAP8[$$1 >> 0] = 120;
    break L10;
   } else {
    HEAP8[$$1 >> 0] = 88;
    break L10;
   }
   break;
  }
 default:
  if ($2) {
   HEAP8[$$1 >> 0] = 100;
   break L10;
  } else {
   HEAP8[$$1 >> 0] = 117;
   break L10;
  }
 } while (0);
 return;
}

function __Z10lua_concatP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $21 = 0, $22 = 0, $4 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 if (($1 | 0) > 1) {
  $4 = HEAP32[$0 + 16 >> 2] | 0;
  if ((HEAP32[$4 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$4 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
  $10 = $0 + 8 | 0;
  __Z11luaV_concatP9lua_Stateii($0, $1, ((HEAP32[$10 >> 2] | 0) - (HEAP32[$0 + 12 >> 2] | 0) >> 3) + -1 | 0);
  HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + (1 - $1 << 3);
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 } else {
  if ($1 | 0) {
   __Z14LuaMutexUnlockP9lua_State($0 | 0);
   return;
  }
  $21 = $0 + 8 | 0;
  $22 = HEAP32[$21 >> 2] | 0;
  HEAP32[$22 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, 114224, 0) | 0;
  HEAP32[$22 + 4 >> 2] = 4;
  HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 8;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
}

function __Z9luaD_callP9lua_StateP10lua_TValuei($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $3 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $3 = $0 + 52 | 0;
 $5 = (HEAP16[$3 >> 1] | 0) + 1 << 16 >> 16;
 HEAP16[$3 >> 1] = $5;
 do if (($5 & 65535) > 199) {
  if ($5 << 16 >> 16 == 200) {
   __Z13luaG_runerrorP9lua_StatePKcz($0, 87079, $vararg_buffer);
   break;
  }
  if (($5 & 65535) > 224) __Z10luaD_throwP9lua_Statei($0, 5);
 } while (0);
 if (!(__Z12luaD_precallP9lua_StateP10lua_TValuei($0, $1, $2) | 0)) __Z12luaV_executeP9lua_Statei($0, 1);
 HEAP16[$3 >> 1] = (HEAP16[$3 >> 1] | 0) + -1 << 16 >> 16;
 $14 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$14 + 68 >> 2] | 0) >>> 0 < (HEAP32[$14 + 64 >> 2] | 0) >>> 0) {
  STACKTOP = sp;
  return;
 }
 __Z9luaC_stepP9lua_State($0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $17 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 4 >> 2] & 255]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $17 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 288 | 0, $5, $4, 0) | 0) - $11 | 0;
 if (($17 | 0) < 288) HEAP32[$1 >> 2] = (($17 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $17 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 4 >> 2] & 255]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $17 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 288 | 0, $5, $4, 0) | 0) - $11 | 0;
 if (($17 | 0) < 288) HEAP32[$1 >> 2] = (($17 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$021$ph = 0, $11 = 0, $12 = 0, $17 = 0, $3 = 0, $5 = 0;
 $3 = $1;
 $5 = $2 - $3 | 0;
 if ($5 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($5 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $5;
  $$021$ph = $0;
 } else {
  $11 = $5 + 16 & -16;
  $12 = __Znwj($11) | 0;
  HEAP32[$0 >> 2] = $12;
  HEAP32[$0 + 8 >> 2] = $11 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $5;
  $$021$ph = $12;
 }
 $17 = $2 - $3 | 0;
 $$0 = $1;
 $$021 = $$021$ph;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  HEAP8[$$021 >> 0] = HEAP8[$$0 >> 0] | 0;
  $$0 = $$0 + 1 | 0;
  $$021 = $$021 + 1 | 0;
 }
 HEAP8[$$021$ph + $17 >> 0] = 0;
 return;
}

function __Z9luaC_stepP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $12 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $5 = 0, $7 = 0, $9 = 0;
 $2 = HEAP32[$0 + 16 >> 2] | 0;
 $5 = (HEAP32[$2 + 84 >> 2] | 0) * 10 | 0;
 $7 = $2 + 68 | 0;
 $9 = $2 + 64 | 0;
 $12 = $2 + 76 | 0;
 HEAP32[$12 >> 2] = (HEAP32[$7 >> 2] | 0) - (HEAP32[$9 >> 2] | 0) + (HEAP32[$12 >> 2] | 0);
 $15 = $2 + 21 | 0;
 $$0 = ($5 | 0) == 0 ? 2147483646 : $5;
 do {
  $$0 = $$0 - (__ZL10singlestepP9lua_State($0) | 0) | 0;
  $19 = (HEAP8[$15 >> 0] | 0) != 0;
 } while ($19 & ($$0 | 0) > 0);
 if (!$19) {
  HEAP32[$9 >> 2] = Math_imul(((HEAP32[$2 + 72 >> 2] | 0) >>> 0) / 100 | 0, HEAP32[$2 + 80 >> 2] | 0) | 0;
  return;
 }
 $21 = HEAP32[$12 >> 2] | 0;
 if ($21 >>> 0 < 1024) {
  HEAP32[$9 >> 2] = (HEAP32[$7 >> 2] | 0) + 1024;
  return;
 } else {
  HEAP32[$12 >> 2] = $21 + -1024;
  HEAP32[$9 >> 2] = HEAP32[$7 >> 2];
  return;
 }
}

function __Z13luaG_errormsgP9lua_State($0) {
 $0 = $0 | 0;
 var $10 = 0, $11 = 0, $17 = 0, $2 = 0, $24 = 0, $29 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 100 >> 2] | 0;
 if (!$2) __Z10luaD_throwP9lua_Statei($0, 2);
 $6 = (HEAP32[$0 + 32 >> 2] | 0) + $2 | 0;
 $7 = $6 + 4 | 0;
 if ((HEAP32[$7 >> 2] | 0) != 6) __Z10luaD_throwP9lua_Statei($0, 5);
 $10 = $0 + 8 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$11 >> 2] = HEAP32[$11 + -8 >> 2];
 HEAP32[$11 + 4 >> 2] = HEAP32[$11 + -4 >> 2];
 $17 = HEAP32[$10 >> 2] | 0;
 HEAP32[$17 + -8 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$17 + -4 >> 2] = HEAP32[$7 >> 2];
 $24 = HEAP32[$10 >> 2] | 0;
 if (((HEAP32[$0 + 28 >> 2] | 0) - $24 | 0) < 9) {
  __Z14luaD_growstackP9lua_Statei($0, 1);
  $29 = HEAP32[$10 >> 2] | 0;
 } else $29 = $24;
 HEAP32[$10 >> 2] = $29 + 8;
 __Z9luaD_callP9lua_StateP10lua_TValuei($0, $29 + -8 | 0, 1);
 __Z10luaD_throwP9lua_Statei($0, 2);
}

function __ZL7str_subP9lua_State($0) {
 $0 = $0 | 0;
 var $$ = 0, $$0 = 0, $$0$i = 0, $$0$i17 = 0, $1 = 0, $14 = 0, $2 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $1) | 0;
 $3 = __Z17luaL_checkintegerP9lua_Statei($0, 2) | 0;
 $$0$i = (($3 | 0) < 0 ? (HEAP32[$1 >> 2] | 0) + 1 | 0 : 0) + $3 | 0;
 $8 = __Z15luaL_optintegerP9lua_Stateii($0, 3, -1) | 0;
 $9 = HEAP32[$1 >> 2] | 0;
 $$0$i17 = (($8 | 0) < 0 ? $9 + 1 | 0 : 0) + $8 | 0;
 $14 = ($$0$i17 | 0) < 0 ? 0 : $$0$i17;
 $$ = ($$0$i | 0) < 1 ? 1 : $$0$i;
 $$0 = ($14 | 0) > ($9 | 0) ? $9 : $14;
 if (($$0 | 0) < ($$ | 0)) {
  __Z15lua_pushlstringP9lua_StatePKcj($0, 114224, 0);
  STACKTOP = sp;
  return 1;
 } else {
  __Z15lua_pushlstringP9lua_StatePKcj($0, $2 + $$ + -1 | 0, 1 - $$ + $$0 | 0);
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZL15test_then_blockP8LexState($0) {
 $0 = $0 | 0;
 var $1 = 0, $12 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $1 = sp + 4 | 0;
 __Z9luaX_nextP8LexState($0);
 __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
 if ((HEAP32[$1 >> 2] | 0) == 1) HEAP32[$1 >> 2] = 3;
 __Z13luaK_goiftrueP9FuncStateP7expdesc(HEAP32[$0 + 28 >> 2] | 0, $1);
 $7 = HEAP32[$1 + 16 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) == 274) {
  __Z9luaX_nextP8LexState($0);
  __ZL5blockP8LexState($0);
  STACKTOP = sp;
  return $7 | 0;
 }
 $12 = HEAP32[$0 + 32 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = __Z14luaX_token2strP8LexStatei($0, 274) | 0;
 __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($12, 87798, $vararg_buffer) | 0);
 __Z9luaX_nextP8LexState($0);
 __ZL5blockP8LexState($0);
 STACKTOP = sp;
 return $7 | 0;
}

function __ZL11match_classii($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$017 = 0, $17 = 0;
 do switch (_tolower($1) | 0) {
 case 97:
  {
   $$0 = _isalpha($0) | 0;
   break;
  }
 case 99:
  {
   $$0 = _iscntrl($0) | 0;
   break;
  }
 case 100:
  {
   $$0 = ($0 + -48 | 0) >>> 0 < 10 & 1;
   break;
  }
 case 108:
  {
   $$0 = _islower($0) | 0;
   break;
  }
 case 112:
  {
   $$0 = _ispunct($0) | 0;
   break;
  }
 case 115:
  {
   $$0 = _isspace($0) | 0;
   break;
  }
 case 117:
  {
   $$0 = _isupper($0) | 0;
   break;
  }
 case 119:
  {
   $$0 = _isalnum($0) | 0;
   break;
  }
 case 120:
  {
   $$0 = _isxdigit($0) | 0;
   break;
  }
 case 122:
  {
   $$0 = ($0 | 0) == 0 & 1;
   break;
  }
 default:
  {
   $$017 = ($1 | 0) == ($0 | 0) & 1;
   return $$017 | 0;
  }
 } while (0);
 $17 = (_islower($1) | 0) == 0;
 $$017 = $17 ? ($$0 | 0) == 0 & 1 : $$0;
 return $$017 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $16 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$7 >> 2] >> 2] & 255]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $16 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $10, $10 + 168 | 0, $5, $4, 0) | 0) - $10 | 0;
 if (($16 | 0) < 168) HEAP32[$1 >> 2] = (($16 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $16 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$7 >> 2] >> 2] & 255]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $16 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $10, $10 + 168 | 0, $5, $4, 0) | 0) - $10 | 0;
 if (($16 | 0) < 168) HEAP32[$1 >> 2] = (($16 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZL13luaB_newproxyP9lua_State($0) {
 $0 = $0 | 0;
 var $6 = 0, label = 0;
 __Z10lua_settopP9lua_Statei($0, 1);
 __Z15lua_newuserdataP9lua_Statej($0, 0) | 0;
 if (!(__Z13lua_tobooleanP9lua_Statei($0, 1) | 0)) return 1;
 if ((__Z8lua_typeP9lua_Statei($0, 1) | 0) == 1) {
  __Z15lua_createtableP9lua_Stateii($0, 0, 0);
  __Z13lua_pushvalueP9lua_Statei($0, -1);
  __Z15lua_pushbooleanP9lua_Statei($0, 1);
  __Z10lua_rawsetP9lua_Statei($0, -10003);
 } else {
  if (!(__Z16lua_getmetatableP9lua_Statei($0, 1) | 0)) label = 6; else {
   __Z10lua_rawgetP9lua_Statei($0, -10003);
   $6 = __Z13lua_tobooleanP9lua_Statei($0, -1) | 0;
   __Z10lua_settopP9lua_Statei($0, -2);
   if (!$6) label = 6;
  }
  if ((label | 0) == 6) __Z13luaL_argerrorP9lua_StateiPKc($0, 1, 85838) | 0;
  __Z16lua_getmetatableP9lua_Statei($0, 1) | 0;
 }
 __Z16lua_setmetatableP9lua_Statei($0, 2) | 0;
 return 1;
}

function __ZL7getfuncP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer = sp;
 $2 = sp + 4 | 0;
 if ((__Z8lua_typeP9lua_Statei($0, 1) | 0) == 6) {
  __Z13lua_pushvalueP9lua_Statei($0, 1);
  STACKTOP = sp;
  return;
 }
 if (!$1) $8 = __Z17luaL_checkintegerP9lua_Statei($0, 1) | 0; else $8 = __Z15luaL_optintegerP9lua_Stateii($0, 1, 1) | 0;
 if (($8 | 0) <= -1) __Z13luaL_argerrorP9lua_StateiPKc($0, 1, 86307) | 0;
 if (!(__Z12lua_getstackP9lua_StateiP9lua_Debug($0, $8, $2) | 0)) __Z13luaL_argerrorP9lua_StateiPKc($0, 1, 86334) | 0;
 __Z11lua_getinfoP9lua_StatePKcP9lua_Debug($0, 91423, $2) | 0;
 if (!(__Z8lua_typeP9lua_Statei($0, -1) | 0)) {
  HEAP32[$vararg_buffer >> 2] = $8;
  __Z10luaL_errorP9lua_StatePKcz($0, 86348, $vararg_buffer) | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$34 = 0, $$pr = 0, $14 = 0, $16 = 0, $24 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = $0 + 4 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) != 187;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = (HEAP32[$2 >> 2] | 0) - $7 | 0;
 $$34 = $8 >>> 0 < 2147483647 ? $8 << 1 : -1;
 $$ = ($$34 | 0) == 0 ? 4 : $$34;
 $14 = (HEAP32[$1 >> 2] | 0) - $7 >> 2;
 $16 = _realloc($5 ? $7 : 0, $$) | 0;
 if (!$16) {}
 if ($5) {
  HEAP32[$0 >> 2] = $16;
  $24 = $16;
 } else {
  $$pr = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $16;
  if (!$$pr) $24 = $16; else {
   FUNCTION_TABLE_vi[HEAP32[$3 >> 2] & 255]($$pr);
   $24 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$3 >> 2] = 188;
 HEAP32[$1 >> 2] = $24 + ($14 << 2);
 HEAP32[$2 >> 2] = (HEAP32[$0 >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$34 = 0, $$pr = 0, $14 = 0, $16 = 0, $24 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = $0 + 4 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) != 187;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = (HEAP32[$2 >> 2] | 0) - $7 | 0;
 $$34 = $8 >>> 0 < 2147483647 ? $8 << 1 : -1;
 $$ = ($$34 | 0) == 0 ? 4 : $$34;
 $14 = (HEAP32[$1 >> 2] | 0) - $7 >> 2;
 $16 = _realloc($5 ? $7 : 0, $$) | 0;
 if (!$16) {}
 if ($5) {
  HEAP32[$0 >> 2] = $16;
  $24 = $16;
 } else {
  $$pr = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $16;
  if (!$$pr) $24 = $16; else {
   FUNCTION_TABLE_vi[HEAP32[$3 >> 2] & 255]($$pr);
   $24 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$3 >> 2] = 188;
 HEAP32[$1 >> 2] = $24 + ($14 << 2);
 HEAP32[$2 >> 2] = (HEAP32[$0 >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$sroa$speculated = 0, $11 = 0, $14 = 0, $18 = 0, $19 = 0, $20 = 0, $6 = 0, $7 = 0;
 $6 = HEAP8[$0 + 11 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) $11 = HEAP32[$0 + 4 >> 2] | 0; else $11 = $6 & 255;
 if (($4 | 0) == -1 | $11 >>> 0 < $1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 $14 = $11 - $1 | 0;
 $$sroa$speculated = $14 >>> 0 < $2 >>> 0 ? $14 : $2;
 if ($7) $18 = HEAP32[$0 >> 2] | 0; else $18 = $0;
 $19 = $$sroa$speculated >>> 0 > $4 >>> 0;
 $20 = __ZNSt3__211char_traitsIcE7compareEPKcS3_j($18 + $1 | 0, $3, $19 ? $4 : $$sroa$speculated) | 0;
 if (!$20) return ($$sroa$speculated >>> 0 < $4 >>> 0 ? -1 : $19 & 1) | 0; else return $20 | 0;
 return 0;
}

function __ZL9str_upperP9lua_State($0) {
 $0 = $0 | 0;
 var $$08 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $1 = sp + 1036 | 0;
 $2 = sp;
 $3 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $1) | 0;
 __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $2);
 if (!(HEAP32[$1 >> 2] | 0)) {
  __Z15luaL_pushresultP11luaL_Buffer($2);
  STACKTOP = sp;
  return 1;
 }
 $6 = $2 + 1036 | 0;
 $$08 = 0;
 do {
  $7 = HEAP32[$2 >> 2] | 0;
  if ($7 >>> 0 < $6 >>> 0) $15 = $7; else {
   __Z15luaL_prepbufferP11luaL_Buffer($2) | 0;
   $15 = HEAP32[$2 >> 2] | 0;
  }
  $13 = (_toupper(HEAPU8[$3 + $$08 >> 0] | 0) | 0) & 255;
  HEAP32[$2 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = $13;
  $$08 = $$08 + 1 | 0;
 } while ($$08 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0);
 __Z15luaL_pushresultP11luaL_Buffer($2);
 STACKTOP = sp;
 return 1;
}

function __ZL9str_lowerP9lua_State($0) {
 $0 = $0 | 0;
 var $$08 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $1 = sp + 1036 | 0;
 $2 = sp;
 $3 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $1) | 0;
 __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $2);
 if (!(HEAP32[$1 >> 2] | 0)) {
  __Z15luaL_pushresultP11luaL_Buffer($2);
  STACKTOP = sp;
  return 1;
 }
 $6 = $2 + 1036 | 0;
 $$08 = 0;
 do {
  $7 = HEAP32[$2 >> 2] | 0;
  if ($7 >>> 0 < $6 >>> 0) $15 = $7; else {
   __Z15luaL_prepbufferP11luaL_Buffer($2) | 0;
   $15 = HEAP32[$2 >> 2] | 0;
  }
  $13 = (_tolower(HEAPU8[$3 + $$08 >> 0] | 0) | 0) & 255;
  HEAP32[$2 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = $13;
  $$08 = $$08 + 1 | 0;
 } while ($$08 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0);
 __Z15luaL_pushresultP11luaL_Buffer($2);
 STACKTOP = sp;
 return 1;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $13 = 0, $14 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0;
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) {
  $13 = HEAP32[$0 + 4 >> 2] | 0;
  $14 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $13 = $4 & 255;
  $14 = 10;
 }
 if (($14 - $13 | 0) >>> 0 < $2 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $14, $2 - $14 + $13 | 0, $13, $13, 0, $2, $1); else if ($2 | 0) {
  if ($5) $19 = HEAP32[$0 >> 2] | 0; else $19 = $0;
  _memcpy($19 + $13 | 0, $1 | 0, $2 | 0) | 0;
  $20 = $13 + $2 | 0;
  if ((HEAP8[$3 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $20; else HEAP8[$3 >> 0] = $20;
  HEAP8[$19 + $20 >> 0] = 0;
 }
 return $0 | 0;
}

function __ZN13SpringVersion7GetSyncEv() {
 if (HEAP8[106184] | 0) return 107788;
 if (!(___cxa_guard_acquire(106184) | 0)) return 107788;
 if (!(HEAP8[106176] | 0)) if (___cxa_guard_acquire(106176) | 0) HEAP8[112105] = 0;
 if (!(HEAP8[112105] | 0)) {
  HEAP32[26947] = 0;
  HEAP32[26948] = 0;
  HEAP32[26949] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107788, 82806, 28);
 } else {
  if (!(HEAP8[106152] | 0)) if (___cxa_guard_acquire(106152) | 0) {
   HEAP32[26956] = 0;
   HEAP32[26957] = 0;
   HEAP32[26958] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107824, 82792, 3);
   ___cxa_atexit(164, 107824, ___dso_handle | 0) | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(107788, 107824);
 }
 ___cxa_atexit(164, 107788, ___dso_handle | 0) | 0;
 return 107788;
}

function __Z11luaK_concatP9FuncStatePii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $$idx$val$idx$val = 0, $14 = 0, $20 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0;
 if (($2 | 0) == -1) return;
 $4 = HEAP32[$1 >> 2] | 0;
 if (($4 | 0) == -1) {
  HEAP32[$1 >> 2] = $2;
  return;
 }
 $$idx$val$idx$val = HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0;
 $$0 = $4;
 while (1) {
  $6 = $$idx$val$idx$val + ($$0 << 2) | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $9 = ($7 >>> 14) + -131071 | 0;
  $$0$i = ($9 | 0) == -1 ? -1 : $$0 + 1 + $9 | 0;
  if (($$0$i | 0) == -1) break; else $$0 = $$0$i;
 }
 $14 = ~$$0 + $2 | 0;
 if (((($14 | 0) > -1 ? $14 : 0 - $14 | 0) | 0) > 131071) {
  __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89696);
  $20 = HEAP32[$6 >> 2] | 0;
 } else $20 = $7;
 HEAP32[$6 >> 2] = $20 & 16383 | ($14 << 14) + 2147467264;
 return;
}

function __Z14luaZ_lookaheadP3Zio($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $13 = 0, $15 = 0, $19 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 L1 : do if (!(HEAP32[$0 >> 2] | 0)) {
  $5 = HEAP32[$0 + 16 >> 2] | 0;
  $6 = $0 + 20 | 0;
  do if (!(HEAP32[$6 >> 2] | 0)) {
   __Z14LuaMutexUnlockP9lua_State($5 | 0);
   $13 = FUNCTION_TABLE_iiii[HEAP32[$0 + 8 >> 2] & 63]($5, HEAP32[$0 + 12 >> 2] | 0, $1) | 0;
   __Z12LuaMutexLockP9lua_State($5 | 0);
   $15 = HEAP32[$1 >> 2] | 0;
   if (($13 | 0) == 0 | ($15 | 0) == 0) {
    HEAP32[$6 >> 2] = 1;
    break;
   } else {
    HEAP32[$0 >> 2] = $15;
    HEAP32[$0 + 4 >> 2] = $13;
    $19 = $13;
    break L1;
   }
  } while (0);
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else $19 = HEAP32[$0 + 4 >> 2] | 0; while (0);
 $$0 = HEAPU8[$19 >> 0] | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $16 = 0, $17 = 0, $7 = 0, $8 = 0;
 if (!(HEAP32[$0 + 64 >> 2] | 0)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $7 = $0 + 12 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ((HEAP32[$0 + 8 >> 2] | 0) >>> 0 >= $8 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($1 | 0) == -1) {
  HEAP32[$7 >> 2] = $8 + -1;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$0 + 88 >> 2] & 16)) {
  $16 = $1 & 255;
  $17 = $8 + -1 | 0;
  if ($16 << 24 >> 24 == (HEAP8[$17 >> 0] | 0)) {
   $$pre$phi7Z2D = $16;
   $$pre$phiZ2D = $17;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi7Z2D = $1 & 255;
  $$pre$phiZ2D = $8 + -1 | 0;
 }
 HEAP32[$7 >> 2] = $$pre$phiZ2D;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi7Z2D;
 $$0 = $1;
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $13 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0;
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) $9 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $9 = 10;
 do if ($9 >>> 0 < $2 >>> 0) {
  if ($5) $23 = HEAP32[$0 + 4 >> 2] | 0; else $23 = $4 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $9, $2 - $9 | 0, $23, 0, $23, $2, $1);
 } else {
  if ($5) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
  if ($2 | 0) _memmove($13 | 0, $1 | 0, $2 | 0) | 0;
  HEAP8[$13 + $2 >> 0] = 0;
  if ((HEAP8[$3 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $2;
   break;
  } else {
   HEAP8[$3 >> 0] = $2;
   break;
  }
 } while (0);
 return $0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy >> 2] = $7;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110200) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 16 | 0, $1, $$byval_copy, $4, $8);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy >> 2] = $7;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110200) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 24 | 0, $1, $$byval_copy, $4, $8);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy >> 2] = $7;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110168) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 16 | 0, $1, $$byval_copy, $4, $8);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy >> 2] = $7;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110168) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 24 | 0, $1, $$byval_copy, $4, $8);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__am_pmEv($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $9 = 0;
 if (!(HEAP8[106328] | 0)) if (___cxa_guard_acquire(106328) | 0) {
  if (!(HEAP8[106336] | 0)) if (___cxa_guard_acquire(106336) | 0) {
   $9 = 110288;
   do {
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 110576);
   ___cxa_atexit(182, 0, ___dso_handle | 0) | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110288, 103349) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(110300, 103352) | 0;
  HEAP32[27644] = 110288;
 }
 return HEAP32[27644] | 0;
}

function _wcrtomb($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0;
 do if (!$0) $$0 = 1; else {
  if ($1 >>> 0 < 128) {
   HEAP8[$0 >> 0] = $1;
   $$0 = 1;
   break;
  }
  if ($1 >>> 0 < 2048) {
   HEAP8[$0 >> 0] = $1 >>> 6 | 192;
   HEAP8[$0 + 1 >> 0] = $1 & 63 | 128;
   $$0 = 2;
   break;
  }
  if ($1 >>> 0 < 55296 | ($1 & -8192 | 0) == 57344) {
   HEAP8[$0 >> 0] = $1 >>> 12 | 224;
   HEAP8[$0 + 1 >> 0] = $1 >>> 6 & 63 | 128;
   HEAP8[$0 + 2 >> 0] = $1 & 63 | 128;
   $$0 = 3;
   break;
  }
  if (($1 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[$0 >> 0] = $1 >>> 18 | 240;
   HEAP8[$0 + 1 >> 0] = $1 >>> 12 & 63 | 128;
   HEAP8[$0 + 2 >> 0] = $1 >>> 6 & 63 | 128;
   HEAP8[$0 + 3 >> 0] = $1 & 63 | 128;
   $$0 = 4;
   break;
  } else {
   HEAP32[(___errno_location() | 0) >> 2] = 84;
   $$0 = -1;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function ___overflow($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $1 & 255;
 HEAP8[$2 >> 0] = $3;
 $4 = $0 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) if (!(___towrite($0) | 0)) {
  $12 = HEAP32[$4 >> 2] | 0;
  label = 4;
 } else $$0 = -1; else {
  $12 = $5;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $9 = $0 + 20 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($10 >>> 0 < $12 >>> 0) {
   $13 = $1 & 255;
   if (($13 | 0) != (HEAP8[$0 + 75 >> 0] | 0)) {
    HEAP32[$9 >> 2] = $10 + 1;
    HEAP8[$10 >> 0] = $3;
    $$0 = $13;
    break;
   }
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, $2, 1) | 0) == 1) $$0 = HEAPU8[$2 >> 0] | 0; else $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__am_pmEv($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $9 = 0;
 if (!(HEAP8[106408] | 0)) if (___cxa_guard_acquire(106408) | 0) {
  if (!(HEAP8[106416] | 0)) if (___cxa_guard_acquire(106416) | 0) {
   $9 = 111100;
   do {
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 111388);
   ___cxa_atexit(185, 0, ___dso_handle | 0) | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111100, 74692) | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(111112, 74704) | 0;
  HEAP32[27847] = 111100;
 }
 return HEAP32[27847] | 0;
}

function __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$34 = 0, $$pr = 0, $14 = 0, $16 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = $0 + 4 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) != 187;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = (HEAP32[$2 >> 2] | 0) - $7 | 0;
 $$34 = $8 >>> 0 < 2147483647 ? $8 << 1 : -1;
 $$ = ($$34 | 0) == 0 ? 1 : $$34;
 $14 = (HEAP32[$1 >> 2] | 0) - $7 | 0;
 $16 = _realloc($5 ? $7 : 0, $$) | 0;
 if (!$16) {}
 if ($5) {
  HEAP32[$0 >> 2] = $16;
  $23 = $16;
 } else {
  $$pr = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $16;
  if (!$$pr) $23 = $16; else {
   FUNCTION_TABLE_vi[HEAP32[$3 >> 2] & 255]($$pr);
   $23 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$3 >> 2] = 188;
 HEAP32[$1 >> 2] = $23 + $14;
 HEAP32[$2 >> 2] = (HEAP32[$0 >> 2] | 0) + $$;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy >> 2] = $7;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110200) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 20 | 0, $1, $$byval_copy, $4, $8);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = __ZNKSt3__28ios_base6getlocEv($3) | 0;
 HEAP32[$$byval_copy >> 2] = $7;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 110168) | 0;
 __ZNSt3__214__shared_count16__release_sharedEv($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 20 | 0, $1, $$byval_copy, $4, $8);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZN6google19CommandLineFlagInfoC2ERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $19 = 0, $20 = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 12 | 0, $1 + 12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 24 | 0, $1 + 24 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 36 | 0, $1 + 36 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 48 | 0, $1 + 48 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 60 | 0, $1 + 60 | 0);
 $14 = $1 + 72 | 0;
 $19 = HEAP32[$14 + 4 >> 2] | 0;
 $20 = $0 + 72 | 0;
 HEAP32[$20 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$20 + 4 >> 2] = $19;
 return;
}

function __Z14luaC_linkupvalP9lua_StateP5UpVal($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $17 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = $0 + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 + 28 | 0;
 HEAP32[$1 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$4 >> 2] = $1;
 $6 = $1 + 5 | 0;
 $8 = HEAPU8[$6 >> 0] | 0;
 if ($8 & 7 | 0) return;
 if ((HEAP8[$3 + 21 >> 0] | 0) != 1) {
  HEAP8[$6 >> 0] = HEAPU8[$3 + 20 >> 0] & 3 | $8 & 248;
  return;
 }
 HEAP8[$6 >> 0] = $8 | 4;
 $17 = HEAP32[$1 + 8 >> 2] | 0;
 if ((HEAP32[$17 + 4 >> 2] | 0) <= 3) return;
 $21 = HEAP32[$17 >> 2] | 0;
 if (!(HEAP8[$21 + 5 >> 0] & 3)) return;
 $26 = HEAP32[$2 >> 2] | 0;
 if ((HEAP8[$26 + 21 >> 0] | 0) == 1) {
  __ZL16reallymarkobjectP12global_StateP8GCObject($26, $21);
  return;
 } else {
  HEAP8[$6 >> 0] = HEAPU8[$26 + 20 >> 0] & 3 | $8 & 248;
  return;
 }
}

function _frexp($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 var $$0 = 0.0, $$016 = 0.0, $2 = 0, $3 = 0, $4 = 0, $9 = 0.0, $storemerge = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 switch ($4 & 2047) {
 case 0:
  {
   if ($0 != 0.0) {
    $9 = +_frexp($0 * 18446744073709551616.0, $1);
    $$016 = $9;
    $storemerge = (HEAP32[$1 >> 2] | 0) + -64 | 0;
   } else {
    $$016 = $0;
    $storemerge = 0;
   }
   HEAP32[$1 >> 2] = $storemerge;
   $$0 = $$016;
   break;
  }
 case 2047:
  {
   $$0 = $0;
   break;
  }
 default:
  {
   HEAP32[$1 >> 2] = ($4 & 2047) + -1022;
   HEAP32[tempDoublePtr >> 2] = $2;
   HEAP32[tempDoublePtr + 4 >> 2] = $3 & -2146435073 | 1071644672;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +$$0;
}

function __ZNSt3__210__list_impIN12_GLOBAL__N_19LogRecordENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$023$i = 0, $$idx$i = 0, $3 = 0, $5 = 0, $$023$i$looptemp = 0;
 $$idx$i = $0 + 8 | 0;
 if (!(HEAP32[$$idx$i >> 2] | 0)) return;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 $5 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
 HEAP32[(HEAP32[$3 >> 2] | 0) + 4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[HEAP32[$5 >> 2] >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$idx$i >> 2] = 0;
 if (($3 | 0) == ($0 | 0)) return; else $$023$i = $3;
 do {
  $$023$i$looptemp = $$023$i;
  $$023$i = HEAP32[$$023$i + 4 >> 2] | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$023$i$looptemp + 24 | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$023$i$looptemp + 12 | 0);
  __ZdlPv($$023$i$looptemp);
 } while (($$023$i | 0) != ($0 | 0));
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$029 = 0, $$030 = 0, $$034 = 0, $$135 = 0, $$pn = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0;
 $5 = $3;
 $6 = $0 + 8 | 0;
 $$029 = 0;
 $$030 = 0;
 $$034 = $2;
 L1 : while (1) {
  if (($$034 | 0) == ($3 | 0) | $$029 >>> 0 >= $4 >>> 0) break;
  $12 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
  $13 = _mbrlen($$034, $5 - $$034 | 0, $1) | 0;
  if ($12 | 0) _uselocale($12) | 0;
  switch ($13 | 0) {
  case -2:
  case -1:
   {
    break L1;
    break;
   }
  case 0:
   {
    $$135 = $$034 + 1 | 0;
    $$pn = 1;
    break;
   }
  default:
   {
    $$135 = $$034 + $13 | 0;
    $$pn = $13;
   }
  }
  $$029 = $$029 + 1 | 0;
  $$030 = $$pn + $$030 | 0;
  $$034 = $$135;
 }
 return $$030 | 0;
}

function _strerror($0) {
 $0 = $0 | 0;
 var $$011$lcssa = 0, $$01113 = 0, $$015 = 0, $$112 = 0, $$114 = 0, $6 = 0, label = 0, $$112$looptemp = 0;
 $$015 = 0;
 while (1) {
  if ((HEAPU8[93797 + $$015 >> 0] | 0) == ($0 | 0)) {
   label = 2;
   break;
  }
  $6 = $$015 + 1 | 0;
  if (($6 | 0) == 87) {
   $$01113 = 93885;
   $$114 = 87;
   label = 5;
   break;
  } else $$015 = $6;
 }
 if ((label | 0) == 2) if (!$$015) $$011$lcssa = 93885; else {
  $$01113 = 93885;
  $$114 = $$015;
  label = 5;
 }
 if ((label | 0) == 5) while (1) {
  label = 0;
  $$112 = $$01113;
  do {
   $$112$looptemp = $$112;
   $$112 = $$112 + 1 | 0;
  } while ((HEAP8[$$112$looptemp >> 0] | 0) != 0);
  $$114 = $$114 + -1 | 0;
  if (!$$114) {
   $$011$lcssa = $$112;
   break;
  } else {
   $$01113 = $$112;
   label = 5;
  }
 }
 return $$011$lcssa | 0;
}

function ___fseeko_unlocked($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$019 = 0, $10 = 0, $12 = 0, label = 0;
 if (($2 | 0) == 1) $$019 = $1 - (HEAP32[$0 + 8 >> 2] | 0) + (HEAP32[$0 + 4 >> 2] | 0) | 0; else $$019 = $1;
 $10 = $0 + 20 | 0;
 $12 = $0 + 28 | 0;
 if ((HEAP32[$10 >> 2] | 0) >>> 0 > (HEAP32[$12 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
  if (!(HEAP32[$10 >> 2] | 0)) $$0 = -1; else label = 5;
 } else label = 5;
 if ((label | 0) == 5) {
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$10 >> 2] = 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[$0 + 40 >> 2] & 63]($0, $$019, $2) | 0) < 0) $$0 = -1; else {
   HEAP32[$0 + 8 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 >> 2] = HEAP32[$0 >> 2] & -17;
   $$0 = 0;
  }
 }
 return $$0 | 0;
}

function _fopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 if (!(_memchr(95955, HEAP8[$1 >> 0] | 0, 4) | 0)) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $$0 = 0;
 } else {
  $7 = ___fmodeflags($1) | 0 | 32768;
  HEAP32[$vararg_buffer >> 2] = $0;
  HEAP32[$vararg_buffer + 4 >> 2] = $7;
  HEAP32[$vararg_buffer + 8 >> 2] = 438;
  $9 = ___syscall_ret(___syscall5(5, $vararg_buffer | 0) | 0) | 0;
  if (($9 | 0) < 0) $$0 = 0; else {
   $11 = ___fdopen($9, $1) | 0;
   if (!$11) {
    HEAP32[$vararg_buffer3 >> 2] = $9;
    ___syscall6(6, $vararg_buffer3 | 0) | 0;
    $$0 = 0;
   } else $$0 = $11;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z8luaK_nilP9FuncStateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $17 = 0, $18 = 0, $23 = 0, $28 = 0, $4 = 0;
 $4 = HEAP32[$0 + 24 >> 2] | 0;
 do if (($4 | 0) > (HEAP32[$0 + 28 >> 2] | 0)) {
  if (!$4) {
   if ((HEAPU8[$0 + 50 >> 0] | 0 | 0) > ($1 | 0)) break;
   return;
  }
  $17 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + ($4 + -1 << 2) | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  if (($18 & 63 | 0) == 3) {
   $23 = $18 >>> 23;
   if (!(($18 >>> 6 & 255 | 0) > ($1 | 0) | ($23 + 1 | 0) < ($1 | 0))) {
    $28 = $1 + -1 + $2 | 0;
    if (($28 | 0) <= ($23 | 0)) return;
    HEAP32[$17 >> 2] = $18 & 8388607 | $28 << 23;
    return;
   }
  }
 } while (0);
 __ZL9luaK_codeP9FuncStateji($0, $1 << 6 | ($2 + $1 << 23) + -8388608 | 3, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
 return;
}

function __ZL13luaB_costatusP9lua_State($0) {
 $0 = $0 | 0;
 var $$0$i = 0, $$1$i = 0, $1 = 0, $2 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $1 = sp;
 $2 = __Z12lua_tothreadP9lua_Statei($0, 1) | 0;
 if (!$2) __Z13luaL_argerrorP9lua_StateiPKc($0, 1, 86746) | 0;
 L4 : do if (($2 | 0) == ($0 | 0)) $$1$i = 0; else {
  switch (__Z10lua_statusP9lua_State($2) | 0) {
  case 1:
   {
    $$1$i = 1;
    break L4;
    break;
   }
  case 0:
   break;
  default:
   {
    $$1$i = 3;
    break L4;
   }
  }
  if ((__Z12lua_getstackP9lua_StateiP9lua_Debug($2, 0, $1) | 0) > 0) $$0$i = 2; else {
   $9 = (__Z10lua_gettopP9lua_State($2) | 0) == 0;
   $$0$i = $9 ? 3 : 1;
  }
  $$1$i = $$0$i;
 } while (0);
 __Z14lua_pushstringP9lua_StatePKc($0, HEAP32[68504 + ($$1$i << 2) >> 2] | 0);
 STACKTOP = sp;
 return 1;
}

function __ZL12luaB_setfenvP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 __Z14luaL_checktypeP9lua_Stateii($0, 2, 5);
 __ZL7getfuncP9lua_Statei($0, 0);
 __Z13lua_pushvalueP9lua_Statei($0, 2);
 if (__Z12lua_isnumberP9lua_Statei($0, 1) | 0) if (+__Z12lua_tonumberP9lua_Statei($0, 1) == 0.0) {
  __Z14lua_pushthreadP9lua_State($0) | 0;
  __Z10lua_insertP9lua_Statei($0, -2);
  __Z11lua_setfenvP9lua_Statei($0, -2) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(__Z15lua_iscfunctionP9lua_Statei($0, -2) | 0)) if (__Z11lua_setfenvP9lua_Statei($0, -2) | 0) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 __Z10luaL_errorP9lua_StatePKcz($0, 86255, $vararg_buffer) | 0;
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, 103610, 103618) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __Z11luaC_fullgcP9lua_State($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0;
 $2 = HEAP32[$0 + 16 >> 2] | 0;
 $3 = $2 + 21 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 if (($4 & 255) < 2) {
  HEAP32[$2 + 24 >> 2] = 0;
  HEAP32[$2 + 32 >> 2] = $2 + 28;
  HEAP32[$2 + 36 >> 2] = 0;
  HEAP32[$2 + 40 >> 2] = 0;
  HEAP32[$2 + 44 >> 2] = 0;
  HEAP8[$3 >> 0] = 2;
  label = 4;
 } else if ($4 << 24 >> 24 != 4) label = 4;
 if ((label | 0) == 4) while (1) {
  label = 0;
  __ZL10singlestepP9lua_State($0) | 0;
  if ((HEAP8[$3 >> 0] | 0) == 4) break; else label = 4;
 }
 __ZL8markrootP9lua_State($0);
 if (HEAP8[$3 >> 0] | 0) do __ZL10singlestepP9lua_State($0) | 0; while ((HEAP8[$3 >> 0] | 0) != 0);
 HEAP32[$2 + 64 >> 2] = Math_imul(((HEAP32[$2 + 72 >> 2] | 0) >>> 0) / 100 | 0, HEAP32[$2 + 80 >> 2] | 0) | 0;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, 75736, 75768) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function _iswctype($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 do switch ($1 | 0) {
 case 1:
  {
   $$0 = _iswalnum($0) | 0;
   break;
  }
 case 2:
  {
   $$0 = _iswalpha($0) | 0;
   break;
  }
 case 3:
  {
   $$0 = _iswblank($0) | 0;
   break;
  }
 case 4:
  {
   $$0 = _iswcntrl($0) | 0;
   break;
  }
 case 5:
  {
   $$0 = _iswdigit($0) | 0;
   break;
  }
 case 6:
  {
   $$0 = _iswgraph($0) | 0;
   break;
  }
 case 7:
  {
   $$0 = _iswlower($0) | 0;
   break;
  }
 case 8:
  {
   $$0 = _iswprint($0) | 0;
   break;
  }
 case 9:
  {
   $$0 = _iswpunct($0) | 0;
   break;
  }
 case 10:
  {
   $$0 = _iswspace($0) | 0;
   break;
  }
 case 11:
  {
   $$0 = _iswupper($0) | 0;
   break;
  }
 case 12:
  {
   $$0 = _iswxdigit($0) | 0;
   break;
  }
 default:
  $$0 = 0;
 } while (0);
 return $$0 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __Z11luaH_setstrP9lua_StateP5TableP7TString($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $22 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $$0$i = (HEAP32[$1 + 16 >> 2] | 0) + (((1 << (HEAPU8[$1 + 7 >> 0] | 0)) + -1 & HEAP32[$2 + 8 >> 2]) * 20 | 0) | 0;
 while (1) {
  if ((HEAP32[$$0$i + 12 >> 2] | 0) == 4) if ((HEAP32[$$0$i + 8 >> 2] | 0) == ($2 | 0)) {
   label = 5;
   break;
  }
  $22 = HEAP32[$$0$i + 16 >> 2] | 0;
  if (!$22) break; else $$0$i = $22;
 }
 if ((label | 0) == 5) if (($$0$i | 0) != 108164) {
  $$0 = $$0$i;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$3 >> 2] = $2;
 HEAP32[$3 + 4 >> 2] = 4;
 $$0 = __ZL6newkeyP9lua_StateP5TablePK10lua_TValue($0, $1, $3) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function _ungetc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $12 = 0, $13 = 0, $18 = 0, $21 = 0, label = 0;
 do if (($0 | 0) == -1) $$1 = -1; else {
  if ((HEAP32[$1 + 76 >> 2] | 0) > -1) $18 = ___lockfile($1) | 0; else $18 = 0;
  if (!(HEAP32[$1 + 8 >> 2] | 0)) {
   if (!(___toread($1) | 0)) label = 6;
  } else label = 6;
  if ((label | 0) == 6) {
   $12 = $1 + 4 | 0;
   $13 = HEAP32[$12 >> 2] | 0;
   if ($13 >>> 0 > ((HEAP32[$1 + 44 >> 2] | 0) + -8 | 0) >>> 0) {
    $21 = $13 + -1 | 0;
    HEAP32[$12 >> 2] = $21;
    HEAP8[$21 >> 0] = $0;
    HEAP32[$1 >> 2] = HEAP32[$1 >> 2] & -17;
    if (!$18) {
     $$1 = $0;
     break;
    }
    ___unlockfile($1);
    $$1 = $0;
    break;
   }
  }
  if (!$18) $$1 = -1; else {
   ___unlockfile($1);
   $$1 = -1;
  }
 } while (0);
 return $$1 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __Z14lua_checkstackP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $20 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 if (($1 | 0) > 8e3) $$0 = 0; else {
  $3 = $0 + 8 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  $11 = $4;
  if ((($4 - (HEAP32[$0 + 12 >> 2] | 0) >> 3) + $1 | 0) > 8e3) $$0 = 0; else if (($1 | 0) > 0) {
   if (((HEAP32[$0 + 28 >> 2] | 0) - $4 | 0) > ($1 << 3 | 0)) $23 = $11; else {
    __Z14luaD_growstackP9lua_Statei($0, $1);
    $23 = HEAP32[$3 >> 2] | 0;
   }
   $20 = (HEAP32[$0 + 20 >> 2] | 0) + 8 | 0;
   $22 = $23 + ($1 << 3) | 0;
   if ((HEAP32[$20 >> 2] | 0) >>> 0 < $22 >>> 0) {
    HEAP32[$20 >> 2] = $22;
    $$0 = 1;
   } else $$0 = 1;
  } else $$0 = 1;
 }
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $$0 | 0;
}

function __Z11luaH_getnumP5Tablei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$1 = 0, $12 = 0, $2 = 0, $29 = 0, $9 = 0.0, label = 0;
 $2 = $1 + -1 | 0;
 if ($2 >>> 0 < (HEAP32[$0 + 28 >> 2] | 0) >>> 0) {
  $$1 = (HEAP32[$0 + 12 >> 2] | 0) + ($2 << 3) | 0;
  return $$1 | 0;
 }
 $9 = +($1 | 0);
 $12 = HEAP32[$0 + 16 >> 2] | 0;
 if (!$1) $$0 = $12; else $$0 = $12 + ((((HEAPF32[tempDoublePtr >> 2] = $9, HEAP32[tempDoublePtr >> 2] | 0) >>> 0) % (((1 << (HEAPU8[$0 + 7 >> 0] | 0)) + -1 | 1) >>> 0) | 0) * 20 | 0) | 0;
 while (1) {
  if ((HEAP32[$$0 + 12 >> 2] | 0) == 3) if (+HEAPF32[$$0 + 8 >> 2] == $9) break;
  $29 = HEAP32[$$0 + 16 >> 2] | 0;
  if (!$29) {
   $$1 = 108164;
   label = 9;
   break;
  } else $$0 = $29;
 }
 if ((label | 0) == 9) return $$1 | 0;
 $$1 = $$0;
 return $$1 | 0;
}

function __Z10lua_settopP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$lcssa = 0, $10 = 0, $14 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 if (($1 | 0) <= -1) {
  $17 = $0 + 8 | 0;
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + ($1 + 1 << 3);
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 12 | 0;
 $7 = (HEAP32[$5 >> 2] | 0) + ($1 << 3) | 0;
 if ($4 >>> 0 < $7 >>> 0) {
  $10 = $4;
  do {
   HEAP32[$3 >> 2] = $10 + 8;
   HEAP32[$10 + 4 >> 2] = 0;
   $10 = HEAP32[$3 >> 2] | 0;
   $14 = (HEAP32[$5 >> 2] | 0) + ($1 << 3) | 0;
  } while ($10 >>> 0 < $14 >>> 0);
  $$lcssa = $14;
 } else $$lcssa = $7;
 HEAP32[$3 >> 2] = $$lcssa;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __Z14lua_pushstringP9lua_StatePKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $16 = 0, $17 = 0, $3 = 0, $8 = 0;
 if (!$1) {
  __Z12LuaMutexLockP9lua_State($0 | 0);
  $3 = $0 + 8 | 0;
  HEAP32[(HEAP32[$3 >> 2] | 0) + 4 >> 2] = 0;
  HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 8;
  __Z14LuaMutexUnlockP9lua_State($0 | 0);
  return;
 }
 $8 = _strlen($1) | 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $10 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$10 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$10 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
 $16 = $0 + 8 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 HEAP32[$17 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $1, $8) | 0;
 HEAP32[$17 + 4 >> 2] = 4;
 HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0 | 0, $1$1 ^ $a$1 | 0, $1$0 | 0, $1$1 | 0) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 return _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0 | 0, $2$1 ^ $b$1 | 0, $2$0 | 0, $2$1 | 0) | 0, tempRet0, 0) | 0) ^ $7$0 | 0, tempRet0 ^ $7$1 | 0, $7$0 | 0, $7$1 | 0) | 0;
}

function __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $5 = __ZNKSt3__28ios_base6getlocEv($1) | 0;
 HEAP32[$4 >> 2] = $5;
 $6 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 110200) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 15]($6, 102831, 102857, $2) | 0;
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 110208) | 0;
 HEAP32[$3 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 255]($10) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 63]($0, $10);
 __ZNSt3__214__shared_count16__release_sharedEv($5) | 0;
 STACKTOP = sp;
 return;
}

function __Z15luaG_ordererrorP9lua_StatePK10lua_TValueS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $6 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $6 = HEAP32[69276 + (HEAP32[$1 + 4 >> 2] << 2) >> 2] | 0;
 $10 = HEAP32[69276 + (HEAP32[$2 + 4 >> 2] << 2) >> 2] | 0;
 if ((HEAP8[$6 + 2 >> 0] | 0) == (HEAP8[$10 + 2 >> 0] | 0)) {
  HEAP32[$vararg_buffer >> 2] = $6;
  __Z13luaG_runerrorP9lua_StatePKcz($0, 86943, $vararg_buffer);
  STACKTOP = sp;
  return 0;
 } else {
  HEAP32[$vararg_buffer1 >> 2] = $6;
  HEAP32[$vararg_buffer1 + 4 >> 2] = $10;
  __Z13luaG_runerrorP9lua_StatePKcz($0, 86976, $vararg_buffer1);
  STACKTOP = sp;
  return 0;
 }
 return 0;
}

function __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $5 = __ZNKSt3__28ios_base6getlocEv($1) | 0;
 HEAP32[$4 >> 2] = $5;
 $6 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 110168) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 15]($6, 102831, 102857, $2) | 0;
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 110184) | 0;
 HEAP8[$3 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 255]($10) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 63]($0, $10);
 __ZNSt3__214__shared_count16__release_sharedEv($5) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $6 = 0, label = 0;
 L1 : do switch ((HEAP32[$2 + 4 >> 2] & 176) << 24 >> 24) {
 case 16:
  {
   $6 = HEAP8[$0 >> 0] | 0;
   switch ($6 << 24 >> 24) {
   case 43:
   case 45:
    {
     $$0 = $0 + 1 | 0;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($1 - $0 | 0) > 1 & $6 << 24 >> 24 == 48) {
    switch (HEAP8[$0 + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      label = 7;
      break L1;
     }
    }
    $$0 = $0 + 2 | 0;
   } else label = 7;
   break;
  }
 case 32:
  {
   $$0 = $1;
   break;
  }
 default:
  label = 7;
 } while (0);
 if ((label | 0) == 7) $$0 = $0;
 return $$0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) {
  if (($8 | 0) < 69) $$0 = $8 + 2e3 | 0; else $$0 = ($8 | 0) < 100 ? $8 + 1900 | 0 : $8;
  HEAP32[$1 >> 2] = $$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) {
  if (($8 | 0) < 69) $$0 = $8 + 2e3 | 0; else $$0 = ($8 | 0) < 100 ? $8 + 1900 | 0 : $8;
  HEAP32[$1 >> 2] = $$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __Z15lua_newuserdataP9lua_Statej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$in$i = 0, $10 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $3 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$3 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$3 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
 $10 = HEAP32[$0 + 20 >> 2] | 0;
 if (($10 | 0) == (HEAP32[$0 + 40 >> 2] | 0)) $$0$in$i = $0 + 72 | 0; else $$0$in$i = (HEAP32[HEAP32[$10 + 4 >> 2] >> 2] | 0) + 12 | 0;
 $19 = __Z13luaS_newudataP9lua_StatejP5Table($0, $1, HEAP32[$$0$in$i >> 2] | 0) | 0;
 $20 = $0 + 8 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 HEAP32[$21 >> 2] = $19;
 HEAP32[$21 + 4 >> 2] = 7;
 HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $19 + 24 | 0;
}

function __ZL8foreachiP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$01718 = 0, $1 = 0, label = 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 $1 = __Z10lua_objlenP9lua_Statei($0, 1) | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 2, 6);
 if (($1 | 0) < 1) {
  $$0 = 0;
  return $$0 | 0;
 } else $$01718 = 1;
 while (1) {
  __Z13lua_pushvalueP9lua_Statei($0, 2);
  __Z15lua_pushintegerP9lua_Statei($0, $$01718);
  __Z11lua_rawgetiP9lua_Stateii($0, 1, $$01718);
  __Z8lua_callP9lua_Stateii($0, 2, 1);
  if (__Z8lua_typeP9lua_Statei($0, -1) | 0) {
   $$0 = 1;
   label = 4;
   break;
  }
  __Z10lua_settopP9lua_Statei($0, -2);
  if (($$01718 | 0) < ($1 | 0)) $$01718 = $$01718 + 1 | 0; else {
   $$0 = 0;
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) return $$0 | 0;
 return 0;
}

function __Z9luaU_dumpP9lua_StatePK5ProtoPFiS0_PKvjPvES6_i($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $5 = sp + 20 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = $0;
 $7 = $6 + 4 | 0;
 HEAP32[$7 >> 2] = $2;
 $8 = $6 + 8 | 0;
 HEAP32[$8 >> 2] = $3;
 HEAP32[$6 + 12 >> 2] = $4;
 $10 = $6 + 16 | 0;
 __Z11luaU_headerPc($5);
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 HEAP32[$10 >> 2] = FUNCTION_TABLE_iiiii[HEAP32[$7 >> 2] & 15](HEAP32[$6 >> 2] | 0, $5, 12, HEAP32[$8 >> 2] | 0) | 0;
 __Z12LuaMutexLockP9lua_State(HEAP32[$6 >> 2] | 0);
 __ZL12DumpFunctionPK5ProtoPK7TStringP9DumpState($1, 0, $6);
 STACKTOP = sp;
 return HEAP32[$10 >> 2] | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $18 = 0, $2 = 0, $24 = 0, $30 = 0, $35 = 0, $6 = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $6 = $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (HEAP32[$6 + 24 >> 2] | 0) if (!(HEAP32[$6 + 16 >> 2] | 0)) if (HEAP32[$6 + 4 >> 2] & 8192 | 0) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $18 = HEAP32[$1 >> 2] | 0;
  $24 = HEAP32[$18 + (HEAP32[(HEAP32[$18 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] & 255]($24) | 0) == -1) {
   $30 = HEAP32[$1 >> 2] | 0;
   $35 = $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[$35 >> 2] = HEAP32[$35 >> 2] | 1;
  }
 }
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $18 = 0, $2 = 0, $24 = 0, $30 = 0, $35 = 0, $6 = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $6 = $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (HEAP32[$6 + 24 >> 2] | 0) if (!(HEAP32[$6 + 16 >> 2] | 0)) if (HEAP32[$6 + 4 >> 2] & 8192 | 0) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $18 = HEAP32[$1 >> 2] | 0;
  $24 = HEAP32[$18 + (HEAP32[(HEAP32[$18 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] & 255]($24) | 0) == -1) {
   $30 = HEAP32[$1 >> 2] | 0;
   $35 = $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[$35 >> 2] = HEAP32[$35 >> 2] | 1;
  }
 }
 return;
}

function __ZN6google12_GLOBAL__N_1L18ReadFileIntoStringEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8096 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $3 = _fopen($1, 91303) | 0;
 $5 = ___errno_location() | 0;
 if (!$3) {
  if (HEAP32[$5 >> 2] | 0) {
   _perror($1);
   FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
  }
 } else HEAP32[$5 >> 2] = 0;
 while (1) {
  $9 = _fread($2, 1, 8092, $3) | 0;
  if (!$9) break;
  if (_ferror($3) | 0) {
   _perror($1);
   FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $2, $9) | 0;
 }
 _fclose($3) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $16 = 0, $26 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($1, $0);
  if (HEAP8[$1 >> 0] | 0) {
   $16 = HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 24 >> 2] & 255]($16) | 0) == -1) {
    $26 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
    HEAP32[$26 >> 2] = HEAP32[$26 >> 2] | 1;
   }
  }
  __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($1);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $16 = 0, $26 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($1, $0);
  if (HEAP8[$1 >> 0] | 0) {
   $16 = HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 24 >> 2] & 255]($16) | 0) == -1) {
    $26 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
    HEAP32[$26 >> 2] = HEAP32[$26 >> 2] | 1;
   }
  }
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($1);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZL23log_sink_record_consoleiPKcS0_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $7 = 0, $vararg_buffer = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $vararg_buffer = sp;
 $3 = sp + 8 | 0;
 dest = $3;
 stop = dest + 128 | 0;
 do {
  HEAP8[dest >> 0] = 0;
  dest = dest + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 _log_framePrefixer_createPrefix($3, 128) | 0;
 $4 = ($0 | 0) > 39;
 $7 = $4 ? HEAP32[17441] | 0 : HEAP32[17382] | 0;
 if (!(HEAP8[112108] | 0)) $$0 = 84262; else $$0 = ($0 | 0) > 49 ? 84238 : $4 ? 84201 : 84222;
 HEAP32[$vararg_buffer >> 2] = $3;
 HEAP32[$vararg_buffer + 4 >> 2] = $2;
 _fprintf($7, $$0, $vararg_buffer) | 0;
 _fflush($7) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $18 = 0, $20 = 0, $21 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $6 = sp + 16 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 $9 = sp + 8 | 0;
 HEAP32[$7 >> 2] = $6 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0, $6, $7, $3, $4, $5);
 $11 = $8;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$9 >> 2] = $6;
 $18 = (HEAP32[$2 >> 2] | 0) - $1 >> 2;
 $20 = _uselocale(HEAP32[$0 >> 2] | 0) | 0;
 $21 = _mbsrtowcs($1, $9, $18, $8) | 0;
 if ($20 | 0) _uselocale($20) | 0;
 HEAP32[$2 >> 2] = $1 + ($21 << 2);
 STACKTOP = sp;
 return;
}

function __Z15luaL_pushresultP11luaL_Buffer($0) {
 $0 = $0 | 0;
 var $$phi$trans$insert = 0, $$pre$phi5Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $12 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = $0 + 12 | 0;
 $4 = (HEAP32[$0 >> 2] | 0) - $2 | 0;
 if (!$4) {
  $$phi$trans$insert = $0 + 4 | 0;
  $$pre$phi5Z2D = $$phi$trans$insert;
  $$pre$phiZ2D = $0 + 8 | 0;
  $12 = HEAP32[$$phi$trans$insert >> 2] | 0;
 } else {
  $6 = $0 + 8 | 0;
  __Z15lua_pushlstringP9lua_StatePKcj(HEAP32[$6 >> 2] | 0, $2, $4);
  HEAP32[$0 >> 2] = $2;
  $8 = $0 + 4 | 0;
  $10 = (HEAP32[$8 >> 2] | 0) + 1 | 0;
  HEAP32[$8 >> 2] = $10;
  $$pre$phi5Z2D = $8;
  $$pre$phiZ2D = $6;
  $12 = $10;
 }
 __Z10lua_concatP9lua_Statei(HEAP32[$$pre$phiZ2D >> 2] | 0, $12);
 HEAP32[$$pre$phi5Z2D >> 2] = 1;
 return;
}

function __Z14luaX_token2strP8LexStatei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $4 = 0, $6 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if (($1 | 0) >= 257) {
  $$0 = HEAP32[69388 + ($1 + -257 << 2) >> 2] | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $4 = (_iscntrl($1) | 0) == 0;
 $6 = HEAP32[$0 + 32 >> 2] | 0;
 if ($4) {
  HEAP32[$vararg_buffer1 >> 2] = $1;
  $$0 = __Z16luaO_pushfstringP9lua_StatePKcz($6, 89952, $vararg_buffer1) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$vararg_buffer >> 2] = $1;
  $$0 = __Z16luaO_pushfstringP9lua_StatePKcz($6, 89943, $vararg_buffer) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 12 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 12 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __Z9luaZ_fillP3Zio($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $11 = 0, $13 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $3 = HEAP32[$0 + 16 >> 2] | 0;
 $4 = $0 + 20 | 0;
 if (HEAP32[$4 >> 2] | 0) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 __Z14LuaMutexUnlockP9lua_State($3 | 0);
 $11 = FUNCTION_TABLE_iiii[HEAP32[$0 + 8 >> 2] & 63]($3, HEAP32[$0 + 12 >> 2] | 0, $1) | 0;
 __Z12LuaMutexLockP9lua_State($3 | 0);
 $13 = HEAP32[$1 >> 2] | 0;
 if (($11 | 0) == 0 | ($13 | 0) == 0) {
  HEAP32[$4 >> 2] = 1;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$0 >> 2] = $13 + -1;
  HEAP32[$0 + 4 >> 2] = $11 + 1;
  $$0 = HEAPU8[$11 >> 0] | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 31 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 3) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 366 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 31 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 3) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 366 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __Z14luaF_freeprotoP9lua_StateP5Proto($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$1 + 12 >> 2] | 0, HEAP32[$1 + 44 >> 2] << 2, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$1 + 16 >> 2] | 0, HEAP32[$1 + 52 >> 2] << 2, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$1 + 8 >> 2] | 0, HEAP32[$1 + 40 >> 2] << 3, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$1 + 20 >> 2] | 0, HEAP32[$1 + 48 >> 2] << 2, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$1 + 24 >> 2] | 0, (HEAP32[$1 + 56 >> 2] | 0) * 12 | 0, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$1 + 28 >> 2] | 0, HEAP32[$1 + 36 >> 2] << 2, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, $1, 76, 0) | 0;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 13 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8 + -1; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 13 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8 + -1; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __Z25luaL_checknumber_noassertP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0.0, $6 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $2 = +__Z12lua_tonumberP9lua_Statei($0, $1);
 if (!($2 == 0.0)) {
  STACKTOP = sp;
  return +$2;
 }
 if (__Z12lua_isnumberP9lua_Statei($0, $1) | 0) {
  STACKTOP = sp;
  return +$2;
 }
 $6 = __Z12lua_typenameP9lua_Statei($0, 3) | 0;
 $8 = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, $1) | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = $6;
 HEAP32[$vararg_buffer + 4 >> 2] = $8;
 __Z13luaL_argerrorP9lua_StateiPKc($0, $1, __Z15lua_pushfstringP9lua_StatePKcz($0, 85622, $vararg_buffer) | 0) | 0;
 STACKTOP = sp;
 return +$2;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 1) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 7 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 61 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 60 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 1) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 7 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 61 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 60 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __Z12luaK_setlistP9FuncStateiii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $19 = 0, $26 = 0, $27 = 0, $6 = 0;
 $6 = (($2 + -1 | 0) / 50 | 0) + 1 | 0;
 $12 = $1 << 6 | (($3 | 0) == -1 ? 0 : $3 << 23) | 34;
 if (($6 | 0) < 512) {
  __ZL9luaK_codeP9FuncStateji($0, $12 | $6 << 14, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
  $26 = $1 + 1 | 0;
  $27 = $0 + 36 | 0;
  HEAP32[$27 >> 2] = $26;
  return;
 } else {
  $19 = $0 + 12 | 0;
  __ZL9luaK_codeP9FuncStateji($0, $12, HEAP32[(HEAP32[$19 >> 2] | 0) + 8 >> 2] | 0) | 0;
  __ZL9luaK_codeP9FuncStateji($0, $6, HEAP32[(HEAP32[$19 >> 2] | 0) + 8 >> 2] | 0) | 0;
  $26 = $1 + 1 | 0;
  $27 = $0 + 36 | 0;
  HEAP32[$27 >> 2] = $26;
  return;
 }
}

function __GLOBAL__sub_I_gflags_completions_cc() {
 var $0 = 0;
 HEAP32[27131] = 0;
 HEAP32[27132] = 0;
 HEAP32[27133] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(108524, 114224, 0);
 HEAP32[27139] = 108524;
 $0 = HEAP32[27139] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(108536, $0);
 __ZN6google14FlagRegistererC2INSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEPKcSA_SA_PT_SC_(112150, 92512, 92532, 92674, $0, 108536);
 HEAP32[27137] = 108524;
 HEAP32[27138] = 108536;
 ___cxa_atexit(173, 108548, ___dso_handle | 0) | 0;
 HEAP32[27127] = HEAP32[27139];
 __ZN6google14FlagRegistererC2IiEEPKcS3_S3_PT_S5_(112149, 92743, 92766, 92674, 69520, 69524);
 return;
}

function __Z17luaL_checkintegerP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $2 = __Z13lua_tointegerP9lua_Statei($0, $1) | 0;
 if ($2 | 0) {
  STACKTOP = sp;
  return $2 | 0;
 }
 if (__Z12lua_isnumberP9lua_Statei($0, $1) | 0) {
  STACKTOP = sp;
  return $2 | 0;
 }
 $6 = __Z12lua_typenameP9lua_Statei($0, 3) | 0;
 $8 = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, $1) | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = $6;
 HEAP32[$vararg_buffer + 4 >> 2] = $8;
 __Z13luaL_argerrorP9lua_StateiPKc($0, $1, __Z15lua_pushfstringP9lua_StatePKcz($0, 85622, $vararg_buffer) | 0) | 0;
 STACKTOP = sp;
 return $2 | 0;
}

function ___fflush_unlocked($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, label = 0;
 $1 = $0 + 20 | 0;
 $3 = $0 + 28 | 0;
 if ((HEAP32[$1 >> 2] | 0) >>> 0 > (HEAP32[$3 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
  if (!(HEAP32[$1 >> 2] | 0)) $$0 = -1; else label = 3;
 } else label = 3;
 if ((label | 0) == 3) {
  $10 = $0 + 4 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $12 = $0 + 8 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ($11 >>> 0 < $13 >>> 0) FUNCTION_TABLE_iiii[HEAP32[$0 + 40 >> 2] & 63]($0, $11 - $13 | 0, 1) | 0;
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$10 >> 2] = 0;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 24 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 24 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 2056;
 $1 = $0 + 64 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 | 0) {
  __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE4syncEv($0) | 0;
  if (!(_fclose($2) | 0)) HEAP32[$1 >> 2] = 0;
 }
 $7 = HEAP16[$0 + 96 >> 1] | 0;
 $11 = ($7 & 65535) >>> 8 & 255;
 if (!(($7 & 255) << 24 >> 24)) $15 = $11; else {
  $13 = HEAP32[$0 + 32 >> 2] | 0;
  if (!$13) $15 = $11; else {
   __ZdaPv($13);
   $15 = HEAP8[$0 + 97 >> 0] | 0;
  }
 }
 if ($15 << 24 >> 24) {
  $18 = HEAP32[$0 + 56 >> 2] | 0;
  if ($18 | 0) __ZdaPv($18);
 }
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __Z16luaL_checknumberP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0.0, $6 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $2 = +__Z12lua_tonumberP9lua_Statei($0, $1);
 if (!($2 == 0.0)) {
  STACKTOP = sp;
  return +$2;
 }
 if (__Z12lua_isnumberP9lua_Statei($0, $1) | 0) {
  STACKTOP = sp;
  return +$2;
 }
 $6 = __Z12lua_typenameP9lua_Statei($0, 3) | 0;
 $8 = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, $1) | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = $6;
 HEAP32[$vararg_buffer + 4 >> 2] = $8;
 __Z13luaL_argerrorP9lua_StateiPKc($0, $1, __Z15lua_pushfstringP9lua_StatePKcz($0, 85622, $vararg_buffer) | 0) | 0;
 STACKTOP = sp;
 return +$2;
}

function __ZL7tremoveP9lua_State($0) {
 $0 = $0 | 0;
 var $$021 = 0, $$022 = 0, $1 = 0, $2 = 0, $$022$looptemp = 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 $1 = __Z10lua_objlenP9lua_Statei($0, 1) | 0;
 $2 = __Z15luaL_optintegerP9lua_Stateii($0, 2, $1) | 0;
 if (($2 | 0) < 1 | ($2 | 0) > ($1 | 0)) {
  $$021 = 0;
  return $$021 | 0;
 }
 __Z11lua_rawgetiP9lua_Stateii($0, 1, $2);
 if (($2 | 0) < ($1 | 0)) {
  $$022 = $2;
  do {
   $$022$looptemp = $$022;
   $$022 = $$022 + 1 | 0;
   __Z11lua_rawgetiP9lua_Stateii($0, 1, $$022);
   __Z11lua_rawsetiP9lua_Stateii($0, 1, $$022$looptemp);
  } while (($$022 | 0) != ($1 | 0));
 }
 __Z11lua_pushnilP9lua_State($0);
 __Z11lua_rawsetiP9lua_Stateii($0, 1, $1);
 $$021 = 1;
 return $$021 | 0;
}

function __ZN10LuaMemPool10ReleasePtrEPS_PK10CLuaHandle($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $11 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[26959] = (HEAP32[26959] | 0) - (($1 | 0) != 0 & 1);
 if (($0 | 0) == 107868) {
  HEAP32[26990] = (HEAP32[26990] | 0) + -1;
  STACKTOP = sp;
  return;
 }
 __ZN12spring_futex4lockEv(107840);
 $10 = HEAP32[$0 + 88 >> 2] | 0;
 HEAP32[$2 >> 2] = $10;
 $11 = HEAP32[26962] | 0;
 if ($11 >>> 0 < (HEAP32[26963] | 0) >>> 0) {
  HEAP32[$11 >> 2] = $10;
  HEAP32[26962] = (HEAP32[26962] | 0) + 4;
 } else __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIjEEvOT_(107844, $2);
 __ZN12spring_futex6unlockEv(107840);
 STACKTOP = sp;
 return;
}

function __Z16luaO_rawequalObjPK10lua_TValueS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$shrunk = 0, $3 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (($3 | 0) == (HEAP32[$1 + 4 >> 2] | 0)) switch ($3 | 0) {
 case 0:
  {
   $$0$shrunk = 1;
   break L1;
   break;
  }
 case 3:
  {
   $$0$shrunk = +HEAPF32[$0 >> 2] == +HEAPF32[$1 >> 2];
   break L1;
   break;
  }
 case 1:
  {
   $$0$shrunk = (HEAP32[$0 >> 2] | 0) == (HEAP32[$1 >> 2] | 0);
   break L1;
   break;
  }
 case 2:
  {
   $$0$shrunk = (HEAP32[$0 >> 2] | 0) == (HEAP32[$1 >> 2] | 0);
   break L1;
   break;
  }
 default:
  {
   $$0$shrunk = (HEAP32[$0 >> 2] | 0) == (HEAP32[$1 >> 2] | 0);
   break L1;
  }
 } else $$0$shrunk = 0; while (0);
 return $$0$shrunk & 1 | 0;
}

function __Z8luaH_setP9lua_StateP5TablePK10lua_TValue($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $3 = 0, $8 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = __Z8luaH_getP5TablePK10lua_TValue($1, $2) | 0;
 HEAP8[$1 + 6 >> 0] = 0;
 if (($3 | 0) != 108164) {
  $$0 = $3;
  STACKTOP = sp;
  return $$0 | 0;
 }
 switch (HEAP32[$2 + 4 >> 2] | 0) {
 case 0:
  {
   __Z13luaG_runerrorP9lua_StatePKcz($0, 88968, sp);
   break;
  }
 case 3:
  {
   $8 = +HEAPF32[$2 >> 2];
   if (!($8 == $8 & 0.0 == 0.0)) __Z13luaG_runerrorP9lua_StatePKcz($0, 88987, sp + 8 | 0);
   break;
  }
 default:
  {}
 }
 $$0 = __ZL6newkeyP9lua_StateP5TablePK10lua_TValue($0, $1, $2) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $$1 = 0.0, $3 = 0, $5 = 0, $6 = 0, $8 = 0.0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0.0;
 } else {
  $5 = ___errno_location() | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = 0;
  $8 = +_strtold_l($0, $3, __ZNSt3__26__clocEv() | 0);
  $9 = HEAP32[$5 >> 2] | 0;
  if (!$9) HEAP32[$5 >> 2] = $6;
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) if (($9 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = $8;
  } else $$0 = $8; else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0.0;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;
 return +$$1;
}

function __ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $$1 = 0.0, $3 = 0, $5 = 0, $6 = 0, $8 = 0.0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0.0;
 } else {
  $5 = ___errno_location() | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = 0;
  $8 = +_strtold_l($0, $3, __ZNSt3__26__clocEv() | 0);
  $9 = HEAP32[$5 >> 2] | 0;
  if (!$9) HEAP32[$5 >> 2] = $6;
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) if (($9 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = $8;
  } else $$0 = $8; else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0.0;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;
 return +$$1;
}

function __Z8luaL_refP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$023 = 0, $8 = 0, $9 = 0;
 if (($1 + 9999 | 0) >>> 0 > 9999) $8 = $1; else $8 = $1 + 1 + (__Z10lua_gettopP9lua_State($0) | 0) | 0;
 if (!(__Z8lua_typeP9lua_Statei($0, -1) | 0)) {
  __Z10lua_settopP9lua_Statei($0, -2);
  $$023 = -1;
  return $$023 | 0;
 }
 __Z11lua_rawgetiP9lua_Stateii($0, $8, 0);
 $9 = __Z13lua_tointegerP9lua_Statei($0, -1) | 0;
 __Z10lua_settopP9lua_Statei($0, -2);
 if (!$9) $$0 = (__Z10lua_objlenP9lua_Statei($0, $8) | 0) + 1 | 0; else {
  __Z11lua_rawgetiP9lua_Stateii($0, $8, $9);
  __Z11lua_rawsetiP9lua_Stateii($0, $8, 0);
  $$0 = $9;
 }
 __Z11lua_rawsetiP9lua_Stateii($0, $8, $$0);
 $$023 = $$0;
 return $$023 | 0;
}

function __ZNK8LuaTable3GetERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $$1 = 0.0, $4 = 0, $6 = 0.0;
 if (!(__ZNK8LuaTable9PushValueERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1) | 0)) {
  $$1 = $2;
  return +$$1;
 }
 $4 = $0 + 20 | 0;
 $6 = +__Z12lua_tonumberP9lua_Statei(HEAP32[$4 >> 2] | 0, -1);
 if ($6 == 0.0) if (!(__Z12lua_isnumberP9lua_Statei(HEAP32[$4 >> 2] | 0, -1) | 0)) if (!(__Z12lua_isstringP9lua_Statei(HEAP32[$4 >> 2] | 0, -1) | 0)) {
  __Z10lua_settopP9lua_Statei(HEAP32[$4 >> 2] | 0, -2);
  $$1 = $2;
  return +$$1;
 }
 __Z10lua_settopP9lua_Statei(HEAP32[$4 >> 2] | 0, -2);
 $$1 = $6;
 return +$$1;
}

function __ZL14generic_readerP9lua_StatePvPj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __Z15luaL_checkstackP9lua_StateiPKc($0, 2, 86468);
 __Z13lua_pushvalueP9lua_Statei($0, 1);
 __Z8lua_callP9lua_Stateii($0, 0, 1);
 if (!(__Z8lua_typeP9lua_Statei($0, -1) | 0)) {
  HEAP32[$2 >> 2] = 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(__Z12lua_isstringP9lua_Statei($0, -1) | 0)) {
  __Z10luaL_errorP9lua_StatePKcz($0, 86494, sp) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  __Z11lua_replaceP9lua_Statei($0, 3);
  $$0 = __Z13lua_tolstringP9lua_StateiPj($0, 3, $2) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZL7foreachP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, label = 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 __Z14luaL_checktypeP9lua_Stateii($0, 2, 6);
 __Z11lua_pushnilP9lua_State($0);
 if (!(__Z8lua_nextP9lua_Statei($0, 1) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 while (1) {
  __Z13lua_pushvalueP9lua_Statei($0, 2);
  __Z13lua_pushvalueP9lua_Statei($0, -3);
  __Z13lua_pushvalueP9lua_Statei($0, -3);
  __Z8lua_callP9lua_Stateii($0, 2, 1);
  if (__Z8lua_typeP9lua_Statei($0, -1) | 0) {
   $$0 = 1;
   label = 4;
   break;
  }
  __Z10lua_settopP9lua_Statei($0, -3);
  if (!(__Z8lua_nextP9lua_Statei($0, 1) | 0)) {
   $$0 = 0;
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) return $$0 | 0;
 return 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $9 = 0;
 if ($2 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($2 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $2;
  $$0 = $0;
 } else {
  $9 = $2 + 4 & -4;
  if ($9 >>> 0 > 1073741823) ___assert_fail(105295, 105332, 1734, 105403); else {
   $12 = __Znwj($9 << 2) | 0;
   HEAP32[$0 >> 2] = $12;
   HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $2;
   $$0 = $12;
   break;
  }
 } while (0);
 __ZNSt3__211char_traitsIwE4copyEPwPKwj($$0, $1, $2) | 0;
 HEAP32[$$0 + ($2 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $9 = 0;
 if ($1 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($1 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $1;
  $$0 = $0;
 } else {
  $9 = $1 + 4 & -4;
  if ($9 >>> 0 > 1073741823) ___assert_fail(105295, 105332, 1734, 105403); else {
   $12 = __Znwj($9 << 2) | 0;
   HEAP32[$0 >> 2] = $12;
   HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $1;
   $$0 = $12;
   break;
  }
 } while (0);
 __ZNSt3__211char_traitsIwE6assignEPwjw($$0, $1, $2) | 0;
 HEAP32[$$0 + ($1 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $$1 = 0.0, $3 = 0, $5 = 0, $6 = 0, $8 = 0.0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0.0;
 } else {
  $5 = ___errno_location() | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = 0;
  $8 = +_strtold_l($0, $3, __ZNSt3__26__clocEv() | 0);
  $9 = HEAP32[$5 >> 2] | 0;
  if (!$9) HEAP32[$5 >> 2] = $6;
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) {
   if (($9 | 0) == 34) HEAP32[$2 >> 2] = 4;
   $$0 = $8;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0.0;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;
 return +$$1;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$013 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0, $storemerge = 0;
 $3 = $0 + 12 | 0;
 $4 = $0 + 16 | 0;
 $$0 = 0;
 $$013 = $1;
 while (1) {
  if (($$0 | 0) >= ($2 | 0)) break;
  $6 = HEAP32[$3 >> 2] | 0;
  if ($6 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $6 + 1;
   $storemerge = HEAP8[$6 >> 0] | 0;
  } else {
   $14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 255]($0) | 0;
   if (($14 | 0) == -1) break;
   $storemerge = $14 & 255;
  }
  HEAP8[$$013 >> 0] = $storemerge;
  $$0 = $$0 + 1 | 0;
  $$013 = $$013 + 1 | 0;
 }
 return $$0 | 0;
}

function __ZL6yindexP8LexStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 __Z9luaX_nextP8LexState($0);
 __ZL7subexprP8LexStateP7expdescj($0, $1, 0) | 0;
 __Z12luaK_exp2valP9FuncStateP7expdesc(HEAP32[$0 + 28 >> 2] | 0, $1);
 if ((HEAP32[$0 + 12 >> 2] | 0) == 93) {
  __Z9luaX_nextP8LexState($0);
  STACKTOP = sp;
  return;
 }
 $8 = HEAP32[$0 + 32 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = __Z14luaX_token2strP8LexStatei($0, 93) | 0;
 __Z16luaX_syntaxerrorP8LexStatePKc($0, __Z16luaO_pushfstringP9lua_StatePKcz($8, 87798, $vararg_buffer) | 0);
 __Z9luaX_nextP8LexState($0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$016 = 0, $$017 = 0, $6 = 0, $7 = 0, label = 0;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($2 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $2;
  if (!$2) $$017 = $0; else {
   $$016 = $0;
   label = 6;
  }
 } else {
  $6 = $2 + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$0 >> 2] = $7;
  HEAP32[$0 + 8 >> 2] = $6 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $2;
  $$016 = $7;
  label = 6;
 }
 if ((label | 0) == 6) {
  _memcpy($$016 | 0, $1 | 0, $2 | 0) | 0;
  $$017 = $$016;
 }
 HEAP8[$$017 + $2 >> 0] = 0;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$013 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0, $storemerge = 0;
 $3 = $0 + 12 | 0;
 $4 = $0 + 16 | 0;
 $$0 = 0;
 $$013 = $1;
 while (1) {
  if (($$0 | 0) >= ($2 | 0)) break;
  $6 = HEAP32[$3 >> 2] | 0;
  if ($6 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $6 + 4;
   $storemerge = HEAP32[$6 >> 2] | 0;
  } else {
   $14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 255]($0) | 0;
   if (($14 | 0) == -1) break; else $storemerge = $14;
  }
  HEAP32[$$013 >> 2] = $storemerge;
  $$0 = $$0 + 1 | 0;
  $$013 = $$013 + 4 | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$016 = 0, $$017 = 0, $6 = 0, $7 = 0, label = 0;
 if ($1 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($1 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $1;
  if (!$1) $$017 = $0; else {
   $$016 = $0;
   label = 6;
  }
 } else {
  $6 = $1 + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$0 >> 2] = $7;
  HEAP32[$0 + 8 >> 2] = $6 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $1;
  $$016 = $7;
  label = 6;
 }
 if ((label | 0) == 6) {
  _memset($$016 | 0, $2 | 0, $1 | 0) | 0;
  $$017 = $$016;
 }
 HEAP8[$$017 + $1 >> 0] = 0;
 return;
}

function _vasprintf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = _malloc(240) | 0;
 do if (!$4) $$0 = -1; else {
  HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
  $6 = _vsnprintf($4, 240, $1, $3) | 0;
  if ($6 >>> 0 < 240) {
   $9 = _realloc($4, $6 + 1 | 0) | 0;
   HEAP32[$0 >> 2] = $9 | 0 ? $9 : $4;
   $$0 = $6;
   break;
  }
  _free($4);
  if (($6 | 0) < 0) $$0 = -1; else {
   $13 = $6 + 1 | 0;
   $14 = _malloc($13) | 0;
   HEAP32[$0 >> 2] = $14;
   if (!$14) $$0 = -1; else $$0 = _vsnprintf($14, $13, $1, $2) | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre$phiZ2D = 0, $13 = 0, $14 = 0, $3 = 0, $6 = 0;
 __ZNSt3__214__shared_count12__add_sharedEv($1);
 $3 = $0 + 8 | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $6 >> 2 >>> 0 > $2 >>> 0) {
  $$pre$phiZ2D = $3;
  $13 = $6;
 } else {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($3, $2 + 1 | 0);
  $$pre$phiZ2D = $3;
  $13 = HEAP32[$3 >> 2] | 0;
 }
 $14 = HEAP32[$13 + ($2 << 2) >> 2] | 0;
 if ($14 | 0) __ZNSt3__214__shared_count16__release_sharedEv($14) | 0;
 HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + ($2 << 2) >> 2] = $1;
 return;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $2 = 0, $4 = 0;
 $1 = $0 + 44 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP32[$0 + 24 >> 2] | 0;
 if ($2 >>> 0 < $4 >>> 0) {
  HEAP32[$1 >> 2] = $4;
  $13 = $4;
 } else $13 = $2;
 if (!(HEAP32[$0 + 48 >> 2] & 8)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $10 = $0 + 16 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ($11 >>> 0 < $13 >>> 0) {
  HEAP32[$10 >> 2] = $13;
  $17 = $13;
 } else $17 = $11;
 $15 = HEAP32[$0 + 12 >> 2] | 0;
 if ($15 >>> 0 >= $17 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 $$0 = HEAPU8[$15 >> 0] | 0;
 return $$0 | 0;
}

function __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0);
 HEAP32[$0 >> 2] = 73776;
 HEAP32[$0 + 32 >> 2] = $1;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 111968) | 0;
 __ZNSt3__26localeD2Ev($4);
 HEAP32[$0 + 36 >> 2] = $9;
 HEAP32[$0 + 40 >> 2] = $2;
 HEAP8[$0 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] & 255]($9) | 0) & 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0);
 HEAP32[$0 >> 2] = 73840;
 HEAP32[$0 + 32 >> 2] = $1;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 111960) | 0;
 __ZNSt3__26localeD2Ev($4);
 HEAP32[$0 + 36 >> 2] = $9;
 HEAP32[$0 + 40 >> 2] = $2;
 HEAP8[$0 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] & 255]($9) | 0) & 1;
 STACKTOP = sp;
 return;
}

function _strtox($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $3 = 0, $4 = 0, $5 = 0, $8 = 0.0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp;
 dest = $3;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $4 = $3 + 4 | 0;
 HEAP32[$4 >> 2] = $0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = -1;
 HEAP32[$3 + 44 >> 2] = $0;
 HEAP32[$3 + 76 >> 2] = -1;
 ___shlim($3, 0);
 $8 = +___floatscan($3, $2, 1);
 $14 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) + (HEAP32[$3 + 108 >> 2] | 0) | 0;
 if ($1 | 0) HEAP32[$1 >> 2] = $14 | 0 ? $0 + $14 | 0 : $0;
 STACKTOP = sp;
 return +$8;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $16 = 0, $6 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $6 = HEAP8[$1 + 11 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 $11 = $7 ? HEAP32[$1 + 4 >> 2] | 0 : $6 & 255;
 if ($11 >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0); else {
  $16 = $11 - $2 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, ($7 ? HEAP32[$1 >> 2] | 0 : $1) + $2 | 0, $16 >>> 0 < $3 >>> 0 ? $16 : $3);
  return;
 }
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}

function _getc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $15 = 0, $16 = 0, $24 = 0, $6 = 0, $7 = 0, label = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($0) | 0)) label = 3; else {
  $15 = $0 + 4 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if ($16 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) {
   HEAP32[$15 >> 2] = $16 + 1;
   $24 = HEAPU8[$16 >> 0] | 0;
  } else $24 = ___uflow($0) | 0;
  $$0 = $24;
 }
 do if ((label | 0) == 3) {
  $6 = $0 + 4 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ($7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) {
   HEAP32[$6 >> 2] = $7 + 1;
   $$0 = HEAPU8[$7 >> 0] | 0;
   break;
  } else {
   $$0 = ___uflow($0) | 0;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$011 = 0, $$012 = 0, $7 = 0, $8 = 0, label = 0;
 $$011 = $3;
 $$012 = $1;
 while (1) {
  if (($$011 | 0) == ($4 | 0)) {
   label = 7;
   break;
  }
  if (($$012 | 0) == ($2 | 0)) {
   $$0 = -1;
   break;
  }
  $7 = HEAP8[$$012 >> 0] | 0;
  $8 = HEAP8[$$011 >> 0] | 0;
  if ($7 << 24 >> 24 < $8 << 24 >> 24) {
   $$0 = -1;
   break;
  }
  if ($8 << 24 >> 24 < $7 << 24 >> 24) {
   $$0 = 1;
   break;
  }
  $$011 = $$011 + 1 | 0;
  $$012 = $$012 + 1 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$012 | 0) != ($2 | 0) & 1;
 return $$0 | 0;
}

function __Z17luaL_checklstringP9lua_StateiPj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $5 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $3 = __Z13lua_tolstringP9lua_StateiPj($0, $1, $2) | 0;
 if ($3 | 0) {
  STACKTOP = sp;
  return $3 | 0;
 }
 $5 = __Z12lua_typenameP9lua_Statei($0, 4) | 0;
 $7 = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, $1) | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 HEAP32[$vararg_buffer + 4 >> 2] = $7;
 __Z13luaL_argerrorP9lua_StateiPKc($0, $1, __Z15lua_pushfstringP9lua_StatePKcz($0, 85622, $vararg_buffer) | 0) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZN12CFileHandlerD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$0 >> 2] = __ZTV12CFileHandler + 8;
 __ZN12CFileHandler5CloseEv($0 | 0);
 $2 = HEAP32[$0 + 204 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 208 | 0;
  if ((HEAP32[$4 >> 2] | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $2;
  __ZdlPv($2);
 }
 $7 = $0 + 16 | 0;
 HEAP32[$7 >> 2] = 1964;
 $8 = $0 + 124 | 0;
 HEAP32[$8 >> 2] = 1984;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0 + 24 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($7, 1996);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 4 | 0);
 return;
}

function __Z13luaL_callmetaP9lua_StateiPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $7 = 0;
 if (($1 + 9999 | 0) >>> 0 > 9999) $7 = $1; else $7 = $1 + 1 + (__Z10lua_gettopP9lua_State($0) | 0) | 0;
 if (!(__Z16lua_getmetatableP9lua_Statei($0, $7) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 __Z14lua_pushstringP9lua_StatePKc($0, $2);
 __Z10lua_rawgetP9lua_Statei($0, -2);
 if (!(__Z8lua_typeP9lua_Statei($0, -1) | 0)) {
  __Z10lua_settopP9lua_Statei($0, -3);
  $$0 = 0;
  return $$0 | 0;
 } else {
  __Z10lua_removeP9lua_Statei($0, -2);
  __Z13lua_pushvalueP9lua_Statei($0, $7);
  __Z8lua_callP9lua_Stateii($0, 1, 1);
  $$0 = 1;
  return $$0 | 0;
 }
 return 0;
}

function __ZL8math_minP9lua_State($0) {
 $0 = $0 | 0;
 var $$0$lcssa = 0.0, $$01819 = 0, $$020 = 0.0, $$1 = 0.0, $1 = 0, $2 = 0.0, $4 = 0.0;
 $1 = __Z10lua_gettopP9lua_State($0) | 0;
 $2 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1);
 if (($1 | 0) < 2) {
  $$0$lcssa = $2;
  __Z14lua_pushnumberP9lua_Statef($0, $$0$lcssa);
  return 1;
 } else {
  $$01819 = 2;
  $$020 = $2;
 }
 while (1) {
  $4 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, $$01819);
  $$1 = $4 < $$020 ? $4 : $$020;
  if (($$01819 | 0) == ($1 | 0)) {
   $$0$lcssa = $$1;
   break;
  } else {
   $$01819 = $$01819 + 1 | 0;
   $$020 = $$1;
  }
 }
 __Z14lua_pushnumberP9lua_Statef($0, $$0$lcssa);
 return 1;
}

function __ZL8math_maxP9lua_State($0) {
 $0 = $0 | 0;
 var $$0$lcssa = 0.0, $$01819 = 0, $$020 = 0.0, $$1 = 0.0, $1 = 0, $2 = 0.0, $4 = 0.0;
 $1 = __Z10lua_gettopP9lua_State($0) | 0;
 $2 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1);
 if (($1 | 0) < 2) {
  $$0$lcssa = $2;
  __Z14lua_pushnumberP9lua_Statef($0, $$0$lcssa);
  return 1;
 } else {
  $$01819 = 2;
  $$020 = $2;
 }
 while (1) {
  $4 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, $$01819);
  $$1 = $4 > $$020 ? $4 : $$020;
  if (($$01819 | 0) == ($1 | 0)) {
   $$0$lcssa = $$1;
   break;
  } else {
   $$01819 = $$01819 + 1 | 0;
   $$020 = $$1;
  }
 }
 __Z14lua_pushnumberP9lua_Statef($0, $$0$lcssa);
 return 1;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) HEAP32[$1 >> 2] = $8 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) HEAP32[$1 >> 2] = $8 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$015$i = 0, $10 = 0, $15 = 0, $23 = 0, $4 = 0;
 $4 = HEAP8[$0 + 11 >> 0] | 0;
 if ($4 << 24 >> 24 < 0) {
  $10 = HEAP32[$0 + 4 >> 2] | 0;
  $15 = HEAP32[$0 >> 2] | 0;
 } else {
  $10 = $4 & 255;
  $15 = $0;
 }
 L5 : do if (!$10) $23 = -1; else {
  $$015$i = $15 + ($10 >>> 0 > $2 >>> 0 ? $2 + 1 | 0 : $10) | 0;
  do {
   if (($$015$i | 0) == ($15 | 0)) {
    $23 = -1;
    break L5;
   }
   $$015$i = $$015$i + -1 | 0;
  } while ((HEAP8[$$015$i >> 0] | 0) != $1 << 24 >> 24);
  $23 = $$015$i - $15 | 0;
 } while (0);
 return $23 | 0;
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr >> 0] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}

function __ZN13SpringVersion13GetAdditionalEv() {
 var $4 = 0;
 if (HEAP8[106168] | 0) return 107800;
 if (!(___cxa_guard_acquire(106168) | 0)) return 107800;
 HEAP32[26950] = 0;
 HEAP32[26951] = 0;
 HEAP32[26952] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107800, 114224, 0);
 $4 = HEAP8[107811] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(107800, (($4 << 24 >> 24 < 0 ? HEAP32[26951] | 0 : $4 & 255) | 0) == 0 ? 114224 : 92155) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(107800, 82796) | 0;
 ___cxa_atexit(164, 107800, ___dso_handle | 0) | 0;
 return 107800;
}

function __Z14luaD_reallocCIP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $6 = 0;
 $2 = $0 + 40 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($1 + 1 | 0) >>> 0 < 178956971) {
  $6 = $0 + 48 | 0;
  $$pre$phiZ2D = $6;
  $12 = __Z13luaM_realloc_P9lua_StatePvjj($0, $3, (HEAP32[$6 >> 2] | 0) * 24 | 0, $1 * 24 | 0) | 0;
 } else {
  $$pre$phiZ2D = $0 + 48 | 0;
  $12 = __Z11luaM_toobigP9lua_State($0) | 0;
 }
 HEAP32[$2 >> 2] = $12;
 HEAP32[$$pre$phiZ2D >> 2] = $1;
 $13 = $0 + 20 | 0;
 HEAP32[$13 >> 2] = $12 + ((((HEAP32[$13 >> 2] | 0) - $3 | 0) / 24 | 0) * 24 | 0);
 HEAP32[$0 + 36 >> 2] = $12 + ($1 * 24 | 0) + -24;
 return;
}

function _realloc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $11 = 0, $14 = 0, $17 = 0, $22 = 0;
 if (!$0) {
  $$1 = _malloc($1) | 0;
  return $$1 | 0;
 }
 if ($1 >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $$1 = 0;
  return $$1 | 0;
 }
 $11 = _try_realloc_chunk($0 + -8 | 0, $1 >>> 0 < 11 ? 16 : $1 + 11 & -8) | 0;
 if ($11 | 0) {
  $$1 = $11 + 8 | 0;
  return $$1 | 0;
 }
 $14 = _malloc($1) | 0;
 if (!$14) {
  $$1 = 0;
  return $$1 | 0;
 }
 $17 = HEAP32[$0 + -4 >> 2] | 0;
 $22 = ($17 & -8) - (($17 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($14 | 0, $0 | 0, ($22 >>> 0 < $1 >>> 0 ? $22 : $1) | 0) | 0;
 _free($0);
 $$1 = $14;
 return $$1 | 0;
}

function _fclose($0) {
 $0 = $0 | 0;
 var $$pre = 0, $13 = 0, $19 = 0, $23 = 0, $25 = 0, $6 = 0, $8 = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {}
 $6 = (HEAP32[$0 >> 2] & 1 | 0) != 0;
 if (!$6) {
  ___lock(108588);
  $8 = HEAP32[$0 + 52 >> 2] | 0;
  $$pre = $0 + 56 | 0;
  if ($8 | 0) HEAP32[$8 + 56 >> 2] = HEAP32[$$pre >> 2];
  $13 = HEAP32[$$pre >> 2] | 0;
  if ($13 | 0) HEAP32[$13 + 52 >> 2] = $8;
  if ((HEAP32[27146] | 0) == ($0 | 0)) HEAP32[27146] = $13;
  ___unlock(108588);
 }
 $19 = _fflush($0) | 0;
 $23 = FUNCTION_TABLE_ii[HEAP32[$0 + 12 >> 2] & 255]($0) | 0 | $19;
 $25 = HEAP32[$0 + 92 >> 2] | 0;
 if ($25 | 0) _free($25);
 if (!$6) _free($0);
 return $23 | 0;
}

function __ZL7str_repP9lua_State($0) {
 $0 = $0 | 0;
 var $$07 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $1 = sp + 1036 | 0;
 $2 = sp;
 $3 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $1) | 0;
 $4 = __Z17luaL_checkintegerP9lua_Statei($0, 2) | 0;
 __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $2);
 if (($4 | 0) > 0) $$07 = $4; else {
  __Z15luaL_pushresultP11luaL_Buffer($2);
  STACKTOP = sp;
  return 1;
 }
 while (1) {
  __Z15luaL_addlstringP11luaL_BufferPKcj($2, $3, HEAP32[$1 >> 2] | 0);
  if (($$07 | 0) > 1) $$07 = $$07 + -1 | 0; else break;
 }
 __Z15luaL_pushresultP11luaL_Buffer($2);
 STACKTOP = sp;
 return 1;
}

function __ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$011 = 0, $$012 = 0, $7 = 0, $8 = 0, label = 0;
 $$011 = $3;
 $$012 = $1;
 while (1) {
  if (($$011 | 0) == ($4 | 0)) {
   label = 7;
   break;
  }
  if (($$012 | 0) == ($2 | 0)) {
   $$0 = -1;
   break;
  }
  $7 = HEAP32[$$012 >> 2] | 0;
  $8 = HEAP32[$$011 >> 2] | 0;
  if (($7 | 0) < ($8 | 0)) {
   $$0 = -1;
   break;
  }
  if (($8 | 0) < ($7 | 0)) {
   $$0 = 1;
   break;
  }
  $$011 = $$011 + 4 | 0;
  $$012 = $$012 + 4 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$012 | 0) != ($2 | 0) & 1;
 return $$0 | 0;
}

function _log_file_removeAllLogFiles() {
 var $11 = 0, $16 = 0;
 while (1) {
  if (!(HEAP8[106232] | 0)) if (___cxa_guard_acquire(106232) | 0) {
   HEAP32[26995] = 0;
   HEAP32[26996] = 0;
   HEAP32[26994] = 107980;
   ___cxa_atexit(171, 107976, ___dso_handle | 0) | 0;
  }
  if (!(HEAP32[26996] | 0)) break;
  if (!(HEAP8[106232] | 0)) if (___cxa_guard_acquire(106232) | 0) {
   HEAP32[26995] = 0;
   HEAP32[26996] = 0;
   HEAP32[26994] = 107980;
   ___cxa_atexit(171, 107976, ___dso_handle | 0) | 0;
  }
  $11 = (HEAP32[26994] | 0) + 16 | 0;
  if ((HEAP8[$11 + 11 >> 0] | 0) < 0) $16 = HEAP32[$11 >> 2] | 0; else $16 = $11;
  _log_file_removeLogFile($16);
 }
 return;
}

function ___toread($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $16 = 0, $22 = 0, $3 = 0, $7 = 0, $9 = 0;
 $1 = $0 + 74 | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 HEAP8[$1 >> 0] = $3 + 255 | $3;
 $7 = $0 + 20 | 0;
 $9 = $0 + 44 | 0;
 if ((HEAP32[$7 >> 2] | 0) >>> 0 > (HEAP32[$9 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = 0;
 HEAP32[$7 >> 2] = 0;
 $16 = HEAP32[$0 >> 2] | 0;
 if (!($16 & 20)) {
  $22 = HEAP32[$9 >> 2] | 0;
  HEAP32[$0 + 8 >> 2] = $22;
  HEAP32[$0 + 4 >> 2] = $22;
  $$0 = 0;
 } else if (!($16 & 4)) $$0 = -1; else {
  HEAP32[$0 >> 2] = $16 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjRKS5_jj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $12 = 0, $17 = 0, $7 = 0, $8 = 0;
 $7 = HEAP8[$3 + 11 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 $12 = $8 ? HEAP32[$3 + 4 >> 2] | 0 : $7 & 255;
 if ($12 >>> 0 < $4 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0); else {
  $17 = $12 - $4 | 0;
  return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKcj($0, $1, $2, ($8 ? HEAP32[$3 >> 2] | 0 : $3) + $4 | 0, $17 >>> 0 < $5 >>> 0 ? $17 : $5) | 0;
 }
 return 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = $3 - $4 >> 2;
 $8 = $4;
 $9 = $3;
 L1 : do if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) {
  $12 = $8 + ($1 << 2) | 0;
  $13 = $9;
  while (1) {
   if (($13 | 0) == ($12 | 0)) break L1;
   $15 = $13 + -4 | 0;
   HEAP32[$2 >> 2] = $15;
   $13 = $15;
  }
 } while (0);
 return;
}

function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1$i = 0, $11 = 0, $14 = 0, $16 = 0, $3 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $5 = HEAP8[$0 + 11 >> 0] | 0;
 if ($5 << 24 >> 24 < 0) {
  $11 = HEAP32[$0 + 4 >> 2] | 0;
  $14 = HEAP32[$0 >> 2] | 0;
 } else {
  $11 = $5 & 255;
  $14 = $0;
 }
 HEAP8[$3 >> 0] = $1;
 if ($11 >>> 0 > $2 >>> 0) {
  $16 = __ZNSt3__211char_traitsIcE4findEPKcjRS2_($14 + $2 | 0, $11 - $2 | 0, $3) | 0;
  $$1$i = ($16 | 0) == 0 ? -1 : $16 - $14 | 0;
 } else $$1$i = -1;
 STACKTOP = sp;
 return $$1$i | 0;
}

function __Z10luaL_whereP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $6 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer = sp;
 $2 = sp + 8 | 0;
 if (__Z12lua_getstackP9lua_StateiP9lua_Debug($0, $1, $2) | 0) {
  __Z11lua_getinfoP9lua_StatePKcP9lua_Debug($0, 85611, $2) | 0;
  $6 = HEAP32[$2 + 20 >> 2] | 0;
  if (($6 | 0) > 0) {
   HEAP32[$vararg_buffer >> 2] = $2 + 36;
   HEAP32[$vararg_buffer + 4 >> 2] = $6;
   __Z15lua_pushfstringP9lua_StatePKcz($0, 85614, $vararg_buffer) | 0;
   STACKTOP = sp;
   return;
  }
 }
 __Z15lua_pushlstringP9lua_StatePKcj($0, 114224, 0);
 STACKTOP = sp;
 return;
}

function _strncat($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$01013 = 0, $$01112 = 0, $$014 = 0, $10 = 0, $4 = 0, $6 = 0;
 $4 = $0 + (_strlen($0) | 0) | 0;
 L1 : do if (!$2) $$0$lcssa = $4; else {
  $$01013 = $2;
  $$01112 = $1;
  $$014 = $4;
  while (1) {
   $6 = HEAP8[$$01112 >> 0] | 0;
   if (!($6 << 24 >> 24)) {
    $$0$lcssa = $$014;
    break L1;
   }
   $$01013 = $$01013 + -1 | 0;
   $10 = $$014 + 1 | 0;
   HEAP8[$$014 >> 0] = $6;
   if (!$$01013) {
    $$0$lcssa = $10;
    break;
   } else {
    $$01112 = $$01112 + 1 | 0;
    $$014 = $10;
   }
  }
 } while (0);
 HEAP8[$$0$lcssa >> 0] = 0;
 return $0 | 0;
}

function __Z14luaL_checktypeP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if ((__Z8lua_typeP9lua_Statei($0, $1) | 0) == ($2 | 0)) {
  STACKTOP = sp;
  return;
 }
 $5 = __Z12lua_typenameP9lua_Statei($0, $2) | 0;
 $7 = __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, $1) | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 HEAP32[$vararg_buffer + 4 >> 2] = $7;
 __Z13luaL_argerrorP9lua_StateiPKc($0, $1, __Z15lua_pushfstringP9lua_StatePKcz($0, 85622, $vararg_buffer) | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZL19luaB_collectgarbageP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0;
 $1 = __Z16luaL_checkoptionP9lua_StateiPKcPKS2_($0, 1, 86531, 68604) | 0;
 $2 = __Z15luaL_optintegerP9lua_Stateii($0, 2, 0) | 0;
 $4 = HEAP32[68576 + ($1 << 2) >> 2] | 0;
 $5 = __Z6lua_gcP9lua_Stateii($0, $4, $2) | 0;
 switch ($4 | 0) {
 case 3:
  {
   __Z14lua_pushnumberP9lua_Statef($0, +($5 | 0) + +(__Z6lua_gcP9lua_Stateii($0, 4, 0) | 0) * .0009765625);
   return 1;
  }
 case 5:
  {
   __Z15lua_pushbooleanP9lua_Statei($0, $5);
   return 1;
  }
 default:
  {
   __Z14lua_pushnumberP9lua_Statef($0, +($5 | 0));
   return 1;
  }
 }
 return 0;
}

function __ZNSt3__26__treeINS_12__value_typeIPKciEENS_19__map_value_compareIS3_S4_26log_filter_section_compareLb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$1) return; else {
  __ZNSt3__26__treeINS_12__value_typeIPKciEENS_19__map_value_compareIS3_S4_26log_filter_section_compareLb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, HEAP32[$1 >> 2] | 0);
  __ZNSt3__26__treeINS_12__value_typeIPKciEENS_19__map_value_compareIS3_S4_26log_filter_section_compareLb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, HEAP32[$1 + 4 >> 2] | 0);
  __ZdlPv($1);
  return;
 }
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $13 = 0, $4 = 0, $5 = 0;
 $4 = $1 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 do if (!$5) {
  HEAP32[$4 >> 2] = $2;
  HEAP32[$1 + 24 >> 2] = $3;
  HEAP32[$1 + 36 >> 2] = 1;
 } else {
  if (($5 | 0) != ($2 | 0)) {
   $13 = $1 + 36 | 0;
   HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 1;
   HEAP32[$1 + 24 >> 2] = 2;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  $10 = $1 + 24 | 0;
  if ((HEAP32[$10 >> 2] | 0) == 2) HEAP32[$10 >> 2] = $3;
 } while (0);
 return;
}

function __ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $7 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 68184;
 $5 = $4 + 64 | 0;
 HEAP32[$5 >> 2] = 68224;
 HEAP32[$4 + 8 >> 2] = 68204;
 $7 = $4 + 12 | 0;
 HEAP32[$7 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 44 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($7);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($4, 68236);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 __ZdlPv($4);
 return;
}

function __ZNSt3__220__shared_ptr_pointerIP11ClientSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 12 >> 2] | 0;
 if (!$2) return;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 48 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 36 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 24 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZdlPv($2);
 return;
}

function _sbrk(increment) {
 increment = increment | 0;
 var oldDynamicTop = 0, newDynamicTop = 0;
 increment = increment + 15 & -16 | 0;
 oldDynamicTop = HEAP32[DYNAMICTOP_PTR >> 2] | 0;
 newDynamicTop = oldDynamicTop + increment | 0;
 if ((increment | 0) > 0 & (newDynamicTop | 0) < (oldDynamicTop | 0) | (newDynamicTop | 0) < 0) {
  abortOnCannotGrowMemory() | 0;
  ___setErrNo(12);
  return -1;
 }
 HEAP32[DYNAMICTOP_PTR >> 2] = newDynamicTop;
 if ((newDynamicTop | 0) > (getTotalMemory() | 0)) if (!(enlargeMemory() | 0)) {
  ___setErrNo(12);
  HEAP32[DYNAMICTOP_PTR >> 2] = oldDynamicTop;
  return -1;
 }
 return oldDynamicTop | 0;
}

function __Z15luaT_gettmbyobjP9lua_StatePK10lua_TValue3TMS($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$in = 0, $18 = 0, $4 = 0;
 $4 = HEAP32[$1 + 4 >> 2] | 0;
 switch ($4 | 0) {
 case 5:
  {
   $$0$in = (HEAP32[$1 >> 2] | 0) + 8 | 0;
   break;
  }
 case 7:
  {
   $$0$in = (HEAP32[$1 >> 2] | 0) + 8 | 0;
   break;
  }
 default:
  $$0$in = (HEAP32[$0 + 16 >> 2] | 0) + 124 + ($4 << 2) | 0;
 }
 $$0 = HEAP32[$$0$in >> 2] | 0;
 if (!$$0) {
  $18 = 108164;
  return $18 | 0;
 }
 $18 = __Z11luaH_getstrP5TableP7TString($$0, HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 160 + ($2 << 2) >> 2] | 0) | 0;
 return $18 | 0;
}

function __Z14luaZ_openspaceP9lua_StateP7Mbufferj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$pre$phiZ2D = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0;
 $3 = $1 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 >>> 0 >= $2 >>> 0) {
  $13 = HEAP32[$1 >> 2] | 0;
  return $13 | 0;
 }
 $$ = $2 >>> 0 < 32 ? 32 : $2;
 if (($$ + 1 | 0) >>> 0 < 4294967294) {
  $$pre$phiZ2D = $1;
  $12 = __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$1 >> 2] | 0, $4, $$) | 0;
 } else {
  $$pre$phiZ2D = $1;
  $12 = __Z11luaM_toobigP9lua_State($0) | 0;
 }
 HEAP32[$$pre$phiZ2D >> 2] = $12;
 HEAP32[$3 >> 2] = $$;
 $13 = $12;
 return $13 | 0;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $13 = 0, $7 = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $12 = 0; else {
  $7 = $3 + 112 | 0;
  if ($1 >>> 0 < 29 & (HEAP8[$7 >> 0] | 0) == 0) {
   HEAP8[$7 >> 0] = 1;
   $12 = $3;
   break;
  } else {
   $12 = __Znwj($1 << 2) | 0;
   break;
  }
 } while (0);
 HEAP32[$0 >> 2] = $12;
 $13 = $12 + ($2 << 2) | 0;
 HEAP32[$0 + 8 >> 2] = $13;
 HEAP32[$0 + 4 >> 2] = $13;
 HEAP32[$0 + 12 >> 2] = $12 + ($1 << 2);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, $5 = 0, $9 = 0;
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) $9 = HEAP32[$0 + 4 >> 2] | 0; else $9 = $4 & 255;
 do if ($9 >>> 0 < $1 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($0, $1 - $9 | 0, $2) | 0; else if ($5) {
  HEAP8[(HEAP32[$0 >> 2] | 0) + $1 >> 0] = 0;
  HEAP32[$0 + 4 >> 2] = $1;
  break;
 } else {
  HEAP8[$0 + $1 >> 0] = 0;
  HEAP8[$3 >> 0] = $1;
  break;
 } while (0);
 return;
}

function __Z14luaX_newstringP8LexStatePKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $15 = 0, $4 = 0, $5 = 0;
 $4 = HEAP32[$0 + 32 >> 2] | 0;
 $5 = __Z12luaS_newlstrP9lua_StatePKcj($4, $1, $2) | 0;
 $10 = __Z11luaH_setstrP9lua_StateP5TableP7TString($4, HEAP32[(HEAP32[$0 + 28 >> 2] | 0) + 4 >> 2] | 0, $5) | 0;
 $11 = $10 + 4 | 0;
 if (HEAP32[$11 >> 2] | 0) return $5 | 0;
 HEAP32[$10 >> 2] = 1;
 HEAP32[$11 >> 2] = 1;
 $15 = HEAP32[$4 + 16 >> 2] | 0;
 if ((HEAP32[$15 + 68 >> 2] | 0) >>> 0 < (HEAP32[$15 + 64 >> 2] | 0) >>> 0) return $5 | 0;
 __Z9luaC_stepP9lua_State($4);
 return $5 | 0;
}

function _strtox_186($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $12 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $5 = sp;
 HEAP32[$5 >> 2] = 0;
 $6 = $5 + 4 | 0;
 HEAP32[$6 >> 2] = $0;
 HEAP32[$5 + 44 >> 2] = $0;
 $10 = $5 + 8 | 0;
 HEAP32[$10 >> 2] = ($0 | 0) < 0 ? -1 : $0 + 2147483647 | 0;
 HEAP32[$5 + 76 >> 2] = -1;
 ___shlim($5, 0);
 $12 = ___intscan($5, $2, 1, $3, $4) | 0;
 if ($1 | 0) HEAP32[$1 >> 2] = $0 + ((HEAP32[$6 >> 2] | 0) + (HEAP32[$5 + 108 >> 2] | 0) - (HEAP32[$10 >> 2] | 0));
 STACKTOP = sp;
 return $12 | 0;
}

function __ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $7 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 68184;
 $5 = $4 + 64 | 0;
 HEAP32[$5 >> 2] = 68224;
 HEAP32[$4 + 8 >> 2] = 68204;
 $7 = $4 + 12 | 0;
 HEAP32[$7 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 44 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($7);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($4, 68236);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 return;
}

function __ZN14luaContextDataD2Ev($0) {
 $0 = $0 | 0;
 var $$pre1 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $$pre1 = $0 + 8 | 0;
 if (!$1) {
  $15 = 0;
  $14 = HEAP32[$$pre1 >> 2] | 0;
  __ZN10LuaMemPool10ReleasePtrEPS_PK10CLuaHandle($14, $15);
  return;
 }
 $4 = $1 + 4 | 0;
 if ((HEAP8[$4 + 11 >> 0] | 0) < 0) $13 = HEAP32[$4 >> 2] | 0; else $13 = $4;
 __ZNK10LuaMemPool8LogStatsEPKcS1_(HEAP32[$$pre1 >> 2] | 0, $13, HEAP8[$0 + 16 >> 0] | 0 ? 83216 : 83223);
 $15 = HEAP32[$0 >> 2] | 0;
 $14 = HEAP32[$$pre1 >> 2] | 0;
 __ZN10LuaMemPool10ReleasePtrEPS_PK10CLuaHandle($14, $15);
 return;
}

function __ZL9math_modfP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0.0, $6 = 0.0;
 $1 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1);
 if (__ZN13streflop_libm8__isnanfEf(+$1) | 0) {
  __Z14lua_pushnumberP9lua_Statef($0, $1);
  __Z14lua_pushnumberP9lua_Statef($0, $1);
  return 2;
 }
 if (!(__ZN13streflop_libm8__isinffEf(+$1) | 0)) {
  $6 = +__ZN13streflop_libm15__ieee754_fmodfEff(+$1, 1.0);
  __Z14lua_pushnumberP9lua_Statef($0, $1 - $6);
  __Z14lua_pushnumberP9lua_Statef($0, $6);
  return 2;
 } else {
  __Z14lua_pushnumberP9lua_Statef($0, $1);
  __Z14lua_pushnumberP9lua_Statef($0, 0.0);
  return 2;
 }
 return 0;
}

function _wmemmove($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$01417 = 0, $$019 = 0, $$118 = 0, $$in = 0, $8 = 0;
 $8 = ($2 | 0) == 0;
 if ($0 - $1 >> 2 >>> 0 < $2 >>> 0) {
  if (!$8) {
   $$in = $2;
   do {
    $$in = $$in + -1 | 0;
    HEAP32[$0 + ($$in << 2) >> 2] = HEAP32[$1 + ($$in << 2) >> 2];
   } while (($$in | 0) != 0);
  }
 } else if (!$8) {
  $$01417 = $1;
  $$019 = $0;
  $$118 = $2;
  while (1) {
   $$118 = $$118 + -1 | 0;
   HEAP32[$$019 >> 2] = HEAP32[$$01417 >> 2];
   if (!$$118) break; else {
    $$01417 = $$01417 + 4 | 0;
    $$019 = $$019 + 4 | 0;
   }
  }
 }
 return $0 | 0;
}

function __Z20luaD_protectedparserP9lua_StateP3ZioPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $1;
 HEAP32[$3 + 16 >> 2] = $2;
 $5 = $3 + 4 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $3 + 12 | 0;
 HEAP32[$6 >> 2] = 0;
 $14 = __Z10luaD_pcallP9lua_StatePFvS0_PvES1_ii($0, 43, $3, (HEAP32[$0 + 8 >> 2] | 0) - (HEAP32[$0 + 32 >> 2] | 0) | 0, HEAP32[$0 + 100 >> 2] | 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$5 >> 2] | 0, HEAP32[$6 >> 2] | 0, 0) | 0;
 STACKTOP = sp;
 return $14 | 0;
}

function _strcmp($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $2 = 0, $3 = 0, $8 = 0, $9 = 0;
 $2 = HEAP8[$0 >> 0] | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 if ($2 << 24 >> 24 == 0 ? 1 : $2 << 24 >> 24 != $3 << 24 >> 24) {
  $$lcssa = $3;
  $$lcssa8 = $2;
 } else {
  $$011 = $1;
  $$0710 = $0;
  do {
   $$0710 = $$0710 + 1 | 0;
   $$011 = $$011 + 1 | 0;
   $8 = HEAP8[$$0710 >> 0] | 0;
   $9 = HEAP8[$$011 >> 0] | 0;
  } while (!($8 << 24 >> 24 == 0 ? 1 : $8 << 24 >> 24 != $9 << 24 >> 24));
  $$lcssa = $9;
  $$lcssa8 = $8;
 }
 return ($$lcssa8 & 255) - ($$lcssa & 255) | 0;
}

function __ZL17luaB_setmetatableP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $1 = __Z8lua_typeP9lua_Statei($0, 2) | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 switch ($1 | 0) {
 case 0:
 case 5:
  break;
 default:
  __Z13luaL_argerrorP9lua_StateiPKc($0, 2, 86185) | 0;
 }
 if (__Z17luaL_getmetafieldP9lua_StateiPKc($0, 1, 86207) | 0) __Z10luaL_errorP9lua_StatePKcz($0, 86219, $vararg_buffer) | 0;
 __Z10lua_settopP9lua_Statei($0, 2);
 __Z16lua_setmetatableP9lua_Statei($0, 1) | 0;
 STACKTOP = sp;
 return 1;
}

function __Z16luaK_reserveregsP9FuncStatei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 $2 = $0 + 36 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 + $1 | 0;
 $5 = HEAP32[$0 >> 2] | 0;
 if (($4 | 0) <= (HEAPU8[$5 + 75 >> 0] | 0 | 0)) {
  $17 = $3;
  $16 = $17 + $1 | 0;
  HEAP32[$2 >> 2] = $16;
  return;
 }
 if (($4 | 0) > 249) {
  __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
  $15 = HEAP32[$0 >> 2] | 0;
 } else $15 = $5;
 HEAP8[$15 + 75 >> 0] = $4;
 $17 = HEAP32[$2 >> 2] | 0;
 $16 = $17 + $1 | 0;
 HEAP32[$2 >> 2] = $16;
 return;
}

function __ZN6google13SStringPrintfEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = $0 + 11 | 0;
 if ((HEAP8[$3 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
 } else {
  HEAP8[$0 >> 0] = 0;
  HEAP8[$3 >> 0] = 0;
 }
 __ZN6google20InternalStringPrintfEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPi($0, $1, $2);
 STACKTOP = sp;
 return;
}

function __ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $6 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 67884;
 $5 = $4 + 56 | 0;
 HEAP32[$5 >> 2] = 67904;
 $6 = $4 + 4 | 0;
 HEAP32[$6 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 36 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($4, 67860);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 __ZdlPv($4);
 return;
}

function __ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $6 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 68044;
 $5 = $4 + 60 | 0;
 HEAP32[$5 >> 2] = 68064;
 $6 = $4 + 8 | 0;
 HEAP32[$6 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 40 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($4, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 __ZdlPv($4);
 return;
}

function __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0);
 HEAP32[$0 >> 2] = 73904;
 HEAP32[$0 + 32 >> 2] = $1;
 HEAP32[$0 + 40 >> 2] = $2;
 HEAP32[$0 + 48 >> 2] = -1;
 HEAP8[$0 + 52 >> 0] = 0;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
 __ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE($0, $4);
 __ZNSt3__26localeD2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0);
 HEAP32[$0 >> 2] = 73968;
 HEAP32[$0 + 32 >> 2] = $1;
 HEAP32[$0 + 40 >> 2] = $2;
 HEAP32[$0 + 48 >> 2] = -1;
 HEAP8[$0 + 52 >> 0] = 0;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
 __ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE($0, $4);
 __ZNSt3__26localeD2Ev($4);
 STACKTOP = sp;
 return;
}

function __Z13luaS_newudataP9lua_StatejP5Table($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0, $6 = 0;
 if ($1 >>> 0 > 4294967269) __Z11luaM_toobigP9lua_State($0) | 0;
 $5 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, $1 + 24 | 0) | 0;
 $6 = $0 + 16 | 0;
 HEAP8[$5 + 5 >> 0] = (HEAPU8[(HEAP32[$6 >> 2] | 0) + 20 >> 0] | 0) & 3;
 HEAP8[$5 + 4 >> 0] = 7;
 HEAP32[$5 + 16 >> 2] = $1;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$5 + 12 >> 2] = $2;
 HEAP32[$5 >> 2] = HEAP32[HEAP32[(HEAP32[$6 >> 2] | 0) + 100 >> 2] >> 2];
 HEAP32[HEAP32[(HEAP32[$6 >> 2] | 0) + 100 >> 2] >> 2] = $5;
 return $5 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $9 = 0;
 if ($3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($3 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $2;
  $$0 = $0;
 } else {
  $9 = $3 + 16 & -16;
  $10 = __Znwj($9) | 0;
  HEAP32[$0 >> 2] = $10;
  HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $2;
  $$0 = $10;
 }
 if ($2 | 0) _memcpy($$0 | 0, $1 | 0, $2 | 0) | 0;
 HEAP8[$$0 + $2 >> 0] = 0;
 return;
}

function __ZN10PlayerBaseC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0;
 HEAP32[$0 >> 2] = 68116;
 HEAP32[$0 + 4 >> 2] = -1;
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 82741, 7);
 HEAP32[$0 >> 2] = 68164;
 HEAP32[$0 + 20 >> 2] = -1;
 $4 = $0 + 24 | 0;
 HEAP32[$0 + 48 >> 2] = 0;
 HEAP32[$0 + 52 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = 0;
 HEAP32[$0 + 44 >> 2] = $0 + 48;
 return;
}

function ___stdio_seek($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $3 = sp + 20 | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = $1;
 HEAP32[$vararg_buffer + 12 >> 2] = $3;
 HEAP32[$vararg_buffer + 16 >> 2] = $2;
 if ((___syscall_ret(___syscall140(140, $vararg_buffer | 0) | 0) | 0) < 0) {
  HEAP32[$3 >> 2] = -1;
  $9 = -1;
 } else $9 = HEAP32[$3 >> 2] | 0;
 STACKTOP = sp;
 return $9 | 0;
}

function __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 HEAP8[$6 >> 0] = 37;
 $7 = $6 + 1 | 0;
 HEAP8[$7 >> 0] = $4;
 $8 = $6 + 2 | 0;
 HEAP8[$8 >> 0] = $5;
 HEAP8[$6 + 3 >> 0] = 0;
 if ($5 << 24 >> 24) {
  HEAP8[$7 >> 0] = $5;
  HEAP8[$8 >> 0] = $4;
 }
 HEAP32[$2 >> 2] = $1 + (_strftime_l($1 | 0, (HEAP32[$2 >> 2] | 0) - $1 | 0, $6 | 0, $3 | 0, HEAP32[$0 >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNSt3__26locale5__impD2Ev($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $11 = 0, $2 = 0, $4 = 0;
 HEAP32[$0 >> 2] = 76368;
 $1 = $0 + 8 | 0;
 $2 = $0 + 12 | 0;
 $$0 = 0;
 while (1) {
  $4 = HEAP32[$1 >> 2] | 0;
  if ($$0 >>> 0 >= (HEAP32[$2 >> 2] | 0) - $4 >> 2 >>> 0) break;
  $11 = HEAP32[$4 + ($$0 << 2) >> 2] | 0;
  if ($11 | 0) __ZNSt3__214__shared_count16__release_sharedEv($11) | 0;
  $$0 = $$0 + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 144 | 0);
 __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($1);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZL11luaB_selectP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$019 = 0, $1 = 0, $8 = 0;
 $1 = __Z10lua_gettopP9lua_State($0) | 0;
 if ((__Z8lua_typeP9lua_Statei($0, 1) | 0) == 4) if ((HEAP8[(__Z13lua_tolstringP9lua_StateiPj($0, 1, 0) | 0) >> 0] | 0) == 35) {
  __Z15lua_pushintegerP9lua_Statei($0, $1 + -1 | 0);
  $$019 = 1;
  return $$019 | 0;
 }
 $8 = __Z17luaL_checkintegerP9lua_Statei($0, 1) | 0;
 $$0 = ($8 | 0) < 0 ? $8 + $1 | 0 : ($8 | 0) > ($1 | 0) ? $1 : $8;
 if (($$0 | 0) <= 0) __Z13luaL_argerrorP9lua_StateiPKc($0, 1, 86398) | 0;
 $$019 = $1 - $$0 | 0;
 return $$019 | 0;
}

function __ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $6 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 67884;
 $5 = $4 + 56 | 0;
 HEAP32[$5 >> 2] = 67904;
 $6 = $4 + 4 | 0;
 HEAP32[$6 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 36 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($4, 67860);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 return;
}

function __ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0, $6 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 68044;
 $5 = $4 + 60 | 0;
 HEAP32[$5 >> 2] = 68064;
 $6 = $4 + 8 | 0;
 HEAP32[$6 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 40 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($4, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 return;
}

function __GLOBAL__sub_I_LuaMemPool_cpp() {
 var $0 = 0, $4 = 0;
 $0 = 106224;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 $4 = 106216;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZN10LuaMemPoolC2Ej(107868, -1);
 ___cxa_atexit(165, 107868, ___dso_handle | 0) | 0;
 HEAP32[26964] = 0;
 HEAP32[26965] = 0;
 HEAP32[26966] = 0;
 ___cxa_atexit(166, 107856, ___dso_handle | 0) | 0;
 HEAP32[26961] = 0;
 HEAP32[26962] = 0;
 HEAP32[26963] = 0;
 ___cxa_atexit(167, 107844, ___dso_handle | 0) | 0;
 __ZN12spring_futexC1Ev(107840);
 ___cxa_atexit(168, 107840, ___dso_handle | 0) | 0;
 return;
}

function _ioctl($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $11 = 0, $2 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = sp + 16 | 0;
 HEAP32[$2 >> 2] = $varargs;
 $8 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
 $9 = HEAP32[$8 >> 2] | 0;
 HEAP32[$2 >> 2] = $8 + 4;
 HEAP32[$vararg_buffer >> 2] = $0;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 8 >> 2] = $9;
 $11 = ___syscall_ret(___syscall54(54, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $11 | 0;
}

function __ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $4 = 0;
 $1 = $0 + -8 | 0;
 HEAP32[$1 >> 2] = 68184;
 $2 = $1 + 64 | 0;
 HEAP32[$2 >> 2] = 68224;
 HEAP32[$1 + 8 >> 2] = 68204;
 $4 = $1 + 12 | 0;
 HEAP32[$4 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 44 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($1, 68236);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 __ZdlPv($1);
 return;
}

function __ZN8TeamBaseC2Ev($0) {
 $0 = $0 | 0;
 var $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 68100;
 HEAP32[$0 + 4 >> 2] = -1;
 HEAP32[$0 + 12 >> 2] = -1;
 HEAP32[$0 + 16 >> 2] = -1;
 HEAPF32[$0 + 20 >> 2] = 1.0;
 $5 = $0 + 24 | 0;
 $6 = $0 + 52 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$5 + 12 >> 2] = 0;
 HEAP32[$5 + 16 >> 2] = 0;
 HEAP32[$5 + 20 >> 2] = 0;
 HEAP32[$0 + 68 >> 2] = -1;
 HEAP32[$0 + 72 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = -1;
 return;
}

function __ZNSt3__211__stdoutbufIwE6xsputnEPKwi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$010 = 0, $$011 = 0;
 L1 : do if (!(HEAP8[$0 + 44 >> 0] | 0)) {
  $$0 = 0;
  $$011 = $1;
  while (1) {
   if (($$0 | 0) >= ($2 | 0)) {
    $$010 = $$0;
    break L1;
   }
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 31]($0, HEAP32[$$011 >> 2] | 0) | 0) == -1) {
    $$010 = $$0;
    break L1;
   }
   $$0 = $$0 + 1 | 0;
   $$011 = $$011 + 4 | 0;
  }
 } else $$010 = _fwrite($1, 4, $2, HEAP32[$0 + 32 >> 2] | 0) | 0; while (0);
 return $$010 | 0;
}

function __ZNSt3__211__stdoutbufIcE6xsputnEPKci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$010 = 0, $$011 = 0;
 L1 : do if (!(HEAP8[$0 + 44 >> 0] | 0)) {
  $$0 = 0;
  $$011 = $1;
  while (1) {
   if (($$0 | 0) >= ($2 | 0)) {
    $$010 = $$0;
    break L1;
   }
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 31]($0, HEAPU8[$$011 >> 0] | 0) | 0) == -1) {
    $$010 = $$0;
    break L1;
   }
   $$0 = $$0 + 1 | 0;
   $$011 = $$011 + 1 | 0;
  }
 } else $$010 = _fwrite($1, 1, $2, HEAP32[$0 + 32 >> 2] | 0) | 0; while (0);
 return $$010 | 0;
}

function __ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $4 = 0;
 $1 = $0 + -8 | 0;
 HEAP32[$1 >> 2] = 68184;
 $2 = $1 + 64 | 0;
 HEAP32[$2 >> 2] = 68224;
 HEAP32[$1 + 8 >> 2] = 68204;
 $4 = $1 + 12 | 0;
 HEAP32[$4 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 44 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($1, 68236);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 return;
}

function __ZNSt3__213__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) == ($1 | 0)) $10 = $1; else {
  $7 = $4;
  do {
   $6 = $7 + -12 | 0;
   HEAP32[$3 >> 2] = $6;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $7 = HEAP32[$3 >> 2] | 0;
  } while (($7 | 0) != ($1 | 0));
  $10 = HEAP32[$0 >> 2] | 0;
 }
 __ZdlPv($10);
 return;
}

function __ZL13luaB_coresumeP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $5 = 0;
 $1 = __Z12lua_tothreadP9lua_Statei($0, 1) | 0;
 if (!$1) __Z13luaL_argerrorP9lua_StateiPKc($0, 1, 86746) | 0;
 $5 = __ZL9auxresumeP9lua_StateS0_i($0, $1, (__Z10lua_gettopP9lua_State($0) | 0) + -1 | 0) | 0;
 if (($5 | 0) < 0) {
  __Z15lua_pushbooleanP9lua_Statei($0, 0);
  __Z10lua_insertP9lua_Statei($0, -2);
  $$0 = 2;
  return $$0 | 0;
 } else {
  __Z15lua_pushbooleanP9lua_Statei($0, 1);
  __Z10lua_insertP9lua_Statei($0, ~$5);
  $$0 = $5 + 1 | 0;
  return $$0 | 0;
 }
 return 0;
}

function _memcmp($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $14 = 0, $4 = 0, $5 = 0;
 L1 : do if (!$2) $14 = 0; else {
  $$01318 = $0;
  $$01417 = $2;
  $$019 = $1;
  while (1) {
   $4 = HEAP8[$$01318 >> 0] | 0;
   $5 = HEAP8[$$019 >> 0] | 0;
   if ($4 << 24 >> 24 != $5 << 24 >> 24) break;
   $$01417 = $$01417 + -1 | 0;
   if (!$$01417) {
    $14 = 0;
    break L1;
   } else {
    $$01318 = $$01318 + 1 | 0;
    $$019 = $$019 + 1 | 0;
   }
  }
  $14 = ($4 & 255) - ($5 & 255) | 0;
 } while (0);
 return $14 | 0;
}

function __Z13lua_newthreadP9lua_State($0) {
 $0 = $0 | 0;
 var $10 = 0, $2 = 0, $8 = 0, $9 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $2 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$2 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$2 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
 $8 = __Z14luaE_newthreadP9lua_State($0) | 0;
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 HEAP32[$10 >> 2] = $8;
 HEAP32[$10 + 4 >> 2] = 8;
 HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 __Z12LuaLinkMutexP9lua_StateS0_($0 | 0, $8 | 0);
 return $8 | 0;
}

function __ZL9sort_compP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $8 = 0;
 if (!(__Z8lua_typeP9lua_Statei($0, 2) | 0)) {
  $$0 = __Z12lua_lessthanP9lua_Stateii($0, $1, $2) | 0;
  return $$0 | 0;
 } else {
  __Z13lua_pushvalueP9lua_Statei($0, 2);
  __Z13lua_pushvalueP9lua_Statei($0, $1 + -1 | 0);
  __Z13lua_pushvalueP9lua_Statei($0, $2 + -2 | 0);
  __Z8lua_callP9lua_Stateii($0, 2, 1);
  $8 = (__Z13lua_tobooleanP9lua_Statei($0, -1) | 0) & 1;
  __Z10lua_settopP9lua_Statei($0, -2);
  $$0 = $8;
  return $$0 | 0;
 }
 return 0;
}

function __Z14luaK_setoneretP9FuncStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $17 = 0, $3 = 0;
 switch (HEAP32[$1 >> 2] | 0) {
 case 13:
  {
   HEAP32[$1 >> 2] = 12;
   $3 = $1 + 4 | 0;
   HEAP32[$3 >> 2] = (HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$3 >> 2] << 2) >> 2] | 0) >>> 6 & 255;
   return;
  }
 case 14:
  {
   $17 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + (HEAP32[$1 + 4 >> 2] << 2) | 0;
   HEAP32[$17 >> 2] = HEAP32[$17 >> 2] & 8388607 | 16777216;
   HEAP32[$1 >> 2] = 11;
   return;
  }
 default:
  return;
 }
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($0) {
 $0 = $0 | 0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -4 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 do if ($7 | 0) {
  $10 = HEAP32[$0 + 16 >> 2] | 0;
  if (($10 | 0) == ($7 | 0)) {
   HEAP8[$10 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv($7);
   break;
  }
 } while (0);
 return;
}

function _str_next($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 do if (!$1) {
  HEAP32[$2 >> 2] = 0;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) >= 0) {
   HEAP32[$2 >> 2] = 1;
   $$1 = HEAP8[$0 >> 0] | 0;
   break;
  }
  $7 = _mbtowc($3, $0, $1) | 0;
  if (($7 | 0) < 0) {
   HEAP32[$2 >> 2] = 1;
   $$0 = -1;
  } else {
   HEAP32[$2 >> 2] = $7;
   $$0 = HEAP32[$3 >> 2] | 0;
  }
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0;
 HEAP32[$0 >> 2] = 68184;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 68224;
 HEAP32[$0 + 8 >> 2] = 68204;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 44 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($0, 68236);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function __ZL11luaB_assertP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 __Z13luaL_checkanyP9lua_Statei($0, 1);
 if (__Z13lua_tobooleanP9lua_Statei($0, 1) | 0) {
  $$0 = __Z10lua_gettopP9lua_State($0) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$vararg_buffer >> 2] = __Z15luaL_optlstringP9lua_StateiPKcPj($0, 2, 86539, 0) | 0;
  $$0 = __Z10luaL_errorP9lua_StatePKcz($0, 91439, $vararg_buffer) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __Z15luaL_addlstringP11luaL_BufferPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$056 = 0, $$in = 0, $11 = 0, $4 = 0, $6 = 0, $9 = 0;
 if (!$2) return;
 $4 = $0 + 1036 | 0;
 $$056 = $1;
 $$in = $2;
 while (1) {
  $$in = $$in + -1 | 0;
  $6 = HEAP32[$0 >> 2] | 0;
  if ($6 >>> 0 < $4 >>> 0) $11 = $6; else {
   __Z15luaL_prepbufferP11luaL_Buffer($0) | 0;
   $11 = HEAP32[$0 >> 2] | 0;
  }
  $9 = HEAP8[$$056 >> 0] | 0;
  HEAP32[$0 >> 2] = $11 + 1;
  HEAP8[$11 >> 0] = $9;
  if (!$$in) break; else $$056 = $$056 + 1 | 0;
 }
 return;
}

function __Z15lua_pushfstringP9lua_StatePKcz($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $10 = 0, $2 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$4 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$4 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
 HEAP32[$2 >> 2] = $varargs;
 $10 = __Z17luaO_pushvfstringP9lua_StatePKcPi($0, $1, $2) | 0;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 STACKTOP = sp;
 return $10 | 0;
}

function __Z13luaV_tonumberPK10lua_TValuePS_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 switch (HEAP32[$0 + 4 >> 2] | 0) {
 case 3:
  {
   $$0 = $0;
   break;
  }
 case 4:
  {
   if (!(__Z10luaO_str2dPKcPf((HEAP32[$0 >> 2] | 0) + 16 | 0, $2) | 0)) label = 4; else {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$1 + 4 >> 2] = 3;
    $$0 = $1;
   }
   break;
  }
 default:
  label = 4;
 }
 if ((label | 0) == 4) $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6google14FlagRegistererC2INSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEPKcSA_SA_PT_SC_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $6 = 0, $9 = 0;
 $6 = __Znwj(8) | 0;
 HEAP32[$6 >> 2] = $4;
 HEAP8[$6 + 4 >> 0] = 6;
 HEAP8[$6 + 5 >> 0] = 0;
 $9 = __Znwj(8) | 0;
 HEAP32[$9 >> 2] = $5;
 HEAP8[$9 + 4 >> 0] = 6;
 HEAP8[$9 + 5 >> 0] = 0;
 __ZN6google12_GLOBAL__N_123RegisterCommandLineFlagEPKcS2_S2_PNS0_9FlagValueES4_($1, $2, $3, $6, $9);
 return;
}

function __Z15lua_pushlstringP9lua_StatePKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $4 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$4 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$4 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
 $10 = $0 + 8 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$11 >> 2] = __Z12luaS_newlstrP9lua_StatePKcj($0, $1, $2) | 0;
 HEAP32[$11 + 4 >> 2] = 4;
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZNSt3__211__call_onceERVmPvPFvS2_E($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _pthread_mutex_lock(112008) | 0;
 while (1) {
  if ((HEAP32[$0 >> 2] | 0) != 1) break;
  _pthread_cond_wait(112036, 112008) | 0;
 }
 if (!(HEAP32[$0 >> 2] | 0)) {
  HEAP32[$0 >> 2] = 1;
  _pthread_mutex_unlock(112008) | 0;
  FUNCTION_TABLE_vi[$2 & 255]($1);
  _pthread_mutex_lock(112008) | 0;
  HEAP32[$0 >> 2] = -1;
  _pthread_mutex_unlock(112008) | 0;
  _pthread_cond_broadcast(112036) | 0;
 } else _pthread_mutex_unlock(112008) | 0;
 return;
}

function __ZL15luaB_loadstringP9lua_State($0) {
 $0 = $0 | 0;
 var $$0$i = 0, $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = __Z17luaL_checklstringP9lua_StateiPj($0, 1, $1) | 0;
 $3 = __Z15luaL_optlstringP9lua_StateiPKcPj($0, 2, $2, 0) | 0;
 if (!(__Z15luaL_loadbufferP9lua_StatePKcjS2_($0, $2, HEAP32[$1 >> 2] | 0, $3) | 0)) {
  $$0$i = 1;
  STACKTOP = sp;
  return $$0$i | 0;
 }
 __Z11lua_pushnilP9lua_State($0);
 __Z10lua_insertP9lua_Statei($0, -2);
 $$0$i = 2;
 STACKTOP = sp;
 return $$0$i | 0;
}

function __ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0;
 HEAP32[$0 >> 2] = 68184;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 68224;
 HEAP32[$0 + 8 >> 2] = 68204;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 44 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($0, 68236);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function __ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($0) {
 $0 = $0 | 0;
 var $$unpack$i$i$i$i = 0, $$unpack2$i$i$i$i = 0, $12 = 0, $2 = 0, $5 = 0;
 $2 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
 $$unpack$i$i$i$i = HEAP32[$2 + 4 >> 2] | 0;
 $$unpack2$i$i$i$i = HEAP32[$2 + 8 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) + ($$unpack2$i$i$i$i >> 1) | 0;
 if (!($$unpack2$i$i$i$i & 1)) $12 = $$unpack$i$i$i$i; else $12 = HEAP32[(HEAP32[$5 >> 2] | 0) + $$unpack$i$i$i$i >> 2] | 0;
 FUNCTION_TABLE_vi[$12 & 255]($5);
 return;
}

function ___stdout_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $13 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer = sp;
 HEAP32[$0 + 36 >> 2] = 8;
 if (!(HEAP32[$0 >> 2] & 64)) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = 21505;
  HEAP32[$vararg_buffer + 8 >> 2] = sp + 12;
  if (___syscall54(54, $vararg_buffer | 0) | 0) HEAP8[$0 + 75 >> 0] = -1;
 }
 $13 = ___stdio_write($0, $1, $2) | 0;
 STACKTOP = sp;
 return $13 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $14 = 0, $7 = 0, $8 = 0;
 $7 = HEAP32[$0 + 4 >> 2] | 0;
 $8 = $7 >> 8;
 if (!($7 & 1)) $$0 = $8; else $$0 = HEAP32[(HEAP32[$3 >> 2] | 0) + $8 >> 2] | 0;
 $14 = HEAP32[$0 >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 20 >> 2] & 15]($14, $1, $2, $3 + $$0 | 0, $7 & 2 | 0 ? $4 : 2, $5);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $10 = 0;
 if (($0 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4); else {
  $10 = HEAP32[$0 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 15]($10, $1, $2, $3, $4, $5);
 }
 return;
}

function __Z15lua_createtableP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $4 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$4 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$4 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
 $10 = $0 + 8 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$11 >> 2] = __Z8luaH_newP9lua_Stateii($0, $1, $2) | 0;
 HEAP32[$11 + 4 >> 2] = 5;
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZL8str_dumpP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $1 = sp + 4 | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 6);
 __Z10lua_settopP9lua_Statei($0, 1);
 __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $1);
 if (!(__Z8lua_dumpP9lua_StatePFiS0_PKvjPvES3_($0, 9, $1) | 0)) {
  __Z15luaL_pushresultP11luaL_Buffer($1);
  STACKTOP = sp;
  return 1;
 }
 __Z10luaL_errorP9lua_StatePKcz($0, 88880, sp) | 0;
 __Z15luaL_pushresultP11luaL_Buffer($1);
 STACKTOP = sp;
 return 1;
}

function __Z11luaH_getstrP5TableP7TString($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$011 = 0, $20 = 0, label = 0;
 $$0 = (HEAP32[$0 + 16 >> 2] | 0) + (((1 << (HEAPU8[$0 + 7 >> 0] | 0)) + -1 & HEAP32[$1 + 8 >> 2]) * 20 | 0) | 0;
 while (1) {
  if ((HEAP32[$$0 + 12 >> 2] | 0) == 4) if ((HEAP32[$$0 + 8 >> 2] | 0) == ($1 | 0)) break;
  $20 = HEAP32[$$0 + 16 >> 2] | 0;
  if (!$20) {
   $$011 = 108164;
   label = 6;
   break;
  } else $$0 = $20;
 }
 if ((label | 0) == 6) return $$011 | 0;
 $$011 = $$0;
 return $$011 | 0;
}

function __ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$0 >> 2] = 67884;
 $1 = $0 + 56 | 0;
 HEAP32[$1 >> 2] = 67904;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 36 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0, 67860);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function __ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$0 >> 2] = 68044;
 $1 = $0 + 60 | 0;
 HEAP32[$1 >> 2] = 68064;
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 40 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function __ZN10PlayerBaseD0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 68164;
 __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0 + 44 | 0, HEAP32[$0 + 48 >> 2] | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 32 | 0);
 HEAP32[$0 >> 2] = 68116;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 8 | 0);
 __ZdlPv($0);
 return;
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}

function __ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0, $8 = 0, $9 = 0;
 $2 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 111968) | 0;
 $3 = $0 + 36 | 0;
 HEAP32[$3 >> 2] = $2;
 $8 = $0 + 44 | 0;
 HEAP32[$8 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 255]($2) | 0;
 $9 = HEAP32[$3 >> 2] | 0;
 HEAP8[$0 + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] & 255]($9) | 0) & 1;
 if ((HEAP32[$8 >> 2] | 0) > 8) {}
 return;
}

function __ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0, $8 = 0, $9 = 0;
 $2 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 111960) | 0;
 $3 = $0 + 36 | 0;
 HEAP32[$3 >> 2] = $2;
 $8 = $0 + 44 | 0;
 HEAP32[$8 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 255]($2) | 0;
 $9 = HEAP32[$3 >> 2] | 0;
 HEAP8[$0 + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] & 255]($9) | 0) & 1;
 if ((HEAP32[$8 >> 2] | 0) > 8) {}
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $3 = 0;
 if ($1 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $3 = $0 + 128 | 0;
 if ($1 >>> 0 < 29 & (HEAP8[$3 >> 0] | 0) == 0) {
  HEAP8[$3 >> 0] = 1;
  $$0$i$i = $0 + 16 | 0;
 } else $$0$i$i = __Znwj($1 << 2) | 0;
 HEAP32[$0 + 4 >> 2] = $$0$i$i;
 HEAP32[$0 >> 2] = $$0$i$i;
 HEAP32[$0 + 8 >> 2] = $$0$i$i + ($1 << 2);
 return;
}

function ___fmodeflags($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$ = 0, $$2 = 0, $$2$ = 0, $$4 = 0, $2 = 0, $3 = 0, $5 = 0, $8 = 0;
 $2 = (_strchr($0, 43) | 0) == 0;
 $3 = HEAP8[$0 >> 0] | 0;
 $$0 = $2 ? $3 << 24 >> 24 != 114 & 1 : 2;
 $5 = (_strchr($0, 120) | 0) == 0;
 $$0$ = $5 ? $$0 : $$0 | 128;
 $8 = (_strchr($0, 101) | 0) == 0;
 $$2 = $8 ? $$0$ : $$0$ | 524288;
 $$2$ = $3 << 24 >> 24 == 114 ? $$2 : $$2 | 64;
 $$4 = $3 << 24 >> 24 == 119 ? $$2$ | 512 : $$2$;
 return ($3 << 24 >> 24 == 97 ? $$4 | 1024 : $$4) | 0;
}

function __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$1) return; else {
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, HEAP32[$1 >> 2] | 0);
  __ZNSt3__26__treeIPKN6google19CommandLineFlagInfoENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, HEAP32[$1 + 4 >> 2] | 0);
  __ZdlPv($1);
  return;
 }
}

function __ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$lcssa = 0, $5 = 0;
 $$0 = $2;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) {
   $$0$lcssa = $3;
   break;
  }
  $5 = HEAP32[$$0 >> 2] | 0;
  if ($5 >>> 0 >= 128) {
   $$0$lcssa = $$0;
   break;
  }
  if (!((HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($5 << 1) >> 1] & $1) << 16 >> 16)) {
   $$0$lcssa = $$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function __ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$0 >> 2] = 67884;
 $1 = $0 + 56 | 0;
 HEAP32[$1 >> 2] = 67904;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 36 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0, 67860);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function __ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$0 >> 2] = 68044;
 $1 = $0 + 60 | 0;
 HEAP32[$1 >> 2] = 68064;
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 40 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 67980);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $13 = 0, $6 = 0, $7 = 0;
 $6 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = $6 >> 8;
 if (!($6 & 1)) $$0 = $7; else $$0 = HEAP32[(HEAP32[$2 >> 2] | 0) + $7 >> 2] | 0;
 $13 = HEAP32[$0 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 3]($13, $1, $2 + $$0 | 0, $6 & 2 | 0 ? $3 : 2, $4);
 return;
}

function __ZN10PlayerBaseD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 68164;
 __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0 + 44 | 0, HEAP32[$0 + 48 >> 2] | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 32 | 0);
 HEAP32[$0 >> 2] = 68116;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 8 | 0);
 return;
}

function ___string_read($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$027 = 0, $$027$ = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 $3 = $0 + 84 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $2 + 256 | 0;
 $6 = _memchr($4, 0, $5) | 0;
 $$027 = ($6 | 0) == 0 ? $5 : $6 - $4 | 0;
 $$027$ = $$027 >>> 0 < $2 >>> 0 ? $$027 : $2;
 _memcpy($1 | 0, $4 | 0, $$027$ | 0) | 0;
 HEAP32[$0 + 4 >> 2] = $4 + $$027$;
 $14 = $4 + $$027 | 0;
 HEAP32[$0 + 8 >> 2] = $14;
 HEAP32[$3 >> 2] = $14;
 return $$027$ | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0); else {
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 }
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $12 = 0, $5 = 0, $6 = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = $5 >> 8;
 if (!($5 & 1)) $$0 = $6; else $$0 = HEAP32[(HEAP32[$2 >> 2] | 0) + $6 >> 2] | 0;
 $12 = HEAP32[$0 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 15]($12, $1, $2 + $$0 | 0, $5 & 2 | 0 ? $3 : 2);
 return;
}

function __Z9luaT_initP9lua_State($0) {
 $0 = $0 | 0;
 var $$09 = 0, $1 = 0, $11 = 0, $3 = 0, $5 = 0;
 $1 = $0 + 16 | 0;
 $$09 = 0;
 do {
  $3 = HEAP32[69320 + ($$09 << 2) >> 2] | 0;
  $5 = __Z12luaS_newlstrP9lua_StatePKcj($0, $3, _strlen($3) | 0) | 0;
  HEAP32[(HEAP32[$1 >> 2] | 0) + 160 + ($$09 << 2) >> 2] = $5;
  $11 = (HEAP32[(HEAP32[$1 >> 2] | 0) + 160 + ($$09 << 2) >> 2] | 0) + 5 | 0;
  HEAP8[$11 >> 0] = HEAPU8[$11 >> 0] | 0 | 32;
  $$09 = $$09 + 1 | 0;
 } while (($$09 | 0) != 17);
 return;
}

function __Z8lua_dumpP9lua_StatePFiS0_PKvjPvES3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $4 = 0, $9 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $4 = HEAP32[$0 + 8 >> 2] | 0;
 if ((HEAP32[$4 + -4 >> 2] | 0) == 6) {
  $9 = HEAP32[$4 + -8 >> 2] | 0;
  if (!(HEAP8[$9 + 6 >> 0] | 0)) $$0 = __Z9luaU_dumpP9lua_StatePK5ProtoPFiS0_PKvjPvES6_i($0, HEAP32[$9 + 16 >> 2] | 0, $1, $2, 0) | 0; else $$0 = 1;
 } else $$0 = 1;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $$0 | 0;
}

function _fwrite($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $14 = 0, $4 = 0, $phitmp = 0;
 $4 = Math_imul($2, $1) | 0;
 if ((HEAP32[$3 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($3) | 0) == 0;
  $10 = ___fwritex($0, $4, $3) | 0;
  if ($phitmp) $11 = $10; else {
   ___unlockfile($3);
   $11 = $10;
  }
 } else $11 = ___fwritex($0, $4, $3) | 0;
 if (($11 | 0) == ($4 | 0)) $14 = $2; else $14 = ($11 >>> 0) / ($1 >>> 0) | 0;
 return $14 | 0;
}

function ___towrite($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $14 = 0, $3 = 0, $7 = 0;
 $1 = $0 + 74 | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 HEAP8[$1 >> 0] = $3 + 255 | $3;
 $7 = HEAP32[$0 >> 2] | 0;
 if (!($7 & 8)) {
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  $14 = HEAP32[$0 + 44 >> 2] | 0;
  HEAP32[$0 + 28 >> 2] = $14;
  HEAP32[$0 + 20 >> 2] = $14;
  HEAP32[$0 + 16 >> 2] = $14 + (HEAP32[$0 + 48 >> 2] | 0);
  $$0 = 0;
 } else {
  HEAP32[$0 >> 2] = $7 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZL4maxnP9lua_State($0) {
 $0 = $0 | 0;
 var $$0$ph = 0.0, $5 = 0.0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 __Z11lua_pushnilP9lua_State($0);
 $$0$ph = 0.0;
 L1 : while (1) {
  do {
   if (!(__Z8lua_nextP9lua_Statei($0, 1) | 0)) break L1;
   __Z10lua_settopP9lua_Statei($0, -2);
  } while ((__Z8lua_typeP9lua_Statei($0, -1) | 0) != 3);
  $5 = +__Z12lua_tonumberP9lua_Statei($0, -1);
  $$0$ph = $5 > $$0$ph ? $5 : $$0$ph;
 }
 __Z14lua_pushnumberP9lua_Statef($0, $$0$ph);
 return 1;
}

function __Z17luaL_getmetafieldP9lua_StateiPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0;
 if (!(__Z16lua_getmetatableP9lua_Statei($0, $1) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 __Z14lua_pushstringP9lua_StatePKc($0, $2);
 __Z10lua_rawgetP9lua_Statei($0, -2);
 if (!(__Z8lua_typeP9lua_Statei($0, -1) | 0)) {
  __Z10lua_settopP9lua_Statei($0, -3);
  $$0 = 0;
  return $$0 | 0;
 } else {
  __Z10lua_removeP9lua_Statei($0, -2);
  $$0 = 1;
  return $$0 | 0;
 }
 return 0;
}

function __Z15luaE_freethreadP9lua_StateS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = $1 + 32 | 0;
 __Z10luaF_closeP9lua_StateP10lua_TValue($1, HEAP32[$2 >> 2] | 0);
 __Z15LuaDestroyMutexP9lua_State($1 | 0);
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$1 + 40 >> 2] | 0, (HEAP32[$1 + 48 >> 2] | 0) * 24 | 0, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$2 >> 2] | 0, HEAP32[$1 + 44 >> 2] << 3, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, $1, 104, 0) | 0;
 return;
}

function __Z14luaopen_stringP9lua_State($0) {
 $0 = $0 | 0;
 __Z13luaL_registerP9lua_StatePKcPK8luaL_Reg($0, 93204, 69068);
 __Z15lua_createtableP9lua_Stateii($0, 0, 1);
 __Z15lua_pushlstringP9lua_StatePKcj($0, 114224, 0);
 __Z13lua_pushvalueP9lua_Statei($0, -2);
 __Z16lua_setmetatableP9lua_Statei($0, -2) | 0;
 __Z10lua_settopP9lua_Statei($0, -2);
 __Z13lua_pushvalueP9lua_Statei($0, -2);
 __Z12lua_setfieldP9lua_StateiPKc($0, -2, 89273);
 __Z10lua_settopP9lua_Statei($0, -2);
 return 1;
}

function __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0, $4 = 0, $6 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($4 | 0) == ($1 | 0)) break;
   $6 = $4 + -4 | 0;
   HEAP32[$3 >> 2] = $6;
   $4 = $6;
  }
  if (($0 + 16 | 0) == ($1 | 0)) {
   HEAP8[$0 + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv($1);
   break;
  }
 } while (0);
 return;
}

function __ZN6google14FlagRegistererC2IjEEPKcS3_S3_PT_S5_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $6 = 0, $9 = 0;
 $6 = __Znwj(8) | 0;
 HEAP32[$6 >> 2] = $4;
 HEAP8[$6 + 4 >> 0] = 2;
 HEAP8[$6 + 5 >> 0] = 0;
 $9 = __Znwj(8) | 0;
 HEAP32[$9 >> 2] = $5;
 HEAP8[$9 + 4 >> 0] = 2;
 HEAP8[$9 + 5 >> 0] = 0;
 __ZN6google12_GLOBAL__N_123RegisterCommandLineFlagEPKcS2_S2_PNS0_9FlagValueES4_($1, $2, $3, $6, $9);
 return;
}

function __ZN6google14FlagRegistererC2IiEEPKcS3_S3_PT_S5_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $6 = 0, $9 = 0;
 $6 = __Znwj(8) | 0;
 HEAP32[$6 >> 2] = $4;
 HEAP8[$6 + 4 >> 0] = 1;
 HEAP8[$6 + 5 >> 0] = 0;
 $9 = __Znwj(8) | 0;
 HEAP32[$9 >> 2] = $5;
 HEAP8[$9 + 4 >> 0] = 1;
 HEAP8[$9 + 5 >> 0] = 0;
 __ZN6google12_GLOBAL__N_123RegisterCommandLineFlagEPKcS2_S2_PNS0_9FlagValueES4_($1, $2, $3, $6, $9);
 return;
}

function __ZN6google14FlagRegistererC2IbEEPKcS3_S3_PT_S5_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $6 = 0, $9 = 0;
 $6 = __Znwj(8) | 0;
 HEAP32[$6 >> 2] = $4;
 HEAP8[$6 + 4 >> 0] = 0;
 HEAP8[$6 + 5 >> 0] = 0;
 $9 = __Znwj(8) | 0;
 HEAP32[$9 >> 2] = $5;
 HEAP8[$9 + 4 >> 0] = 0;
 HEAP8[$9 + 5 >> 0] = 0;
 __ZN6google12_GLOBAL__N_123RegisterCommandLineFlagEPKcS2_S2_PNS0_9FlagValueES4_($1, $2, $3, $6, $9);
 return;
}

function __Z8lua_callP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $3 = 0, $8 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $3 = $0 + 8 | 0;
 __Z9luaD_callP9lua_StateP10lua_TValuei($0, (HEAP32[$3 >> 2] | 0) + (~$1 << 3) | 0, $2);
 if (($2 | 0) == -1) {
  $8 = HEAP32[$3 >> 2] | 0;
  $11 = (HEAP32[$0 + 20 >> 2] | 0) + 8 | 0;
  if ($8 >>> 0 >= (HEAP32[$11 >> 2] | 0) >>> 0) HEAP32[$11 >> 2] = $8;
 }
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $8 = 0;
 if (($0 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3); else {
  $8 = HEAP32[$0 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 15]($8, $1, $2, $3);
 }
 return;
}

function _vsscanf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp;
 dest = $3;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 + 32 >> 2] = 32;
 HEAP32[$3 + 44 >> 2] = $0;
 HEAP32[$3 + 76 >> 2] = -1;
 HEAP32[$3 + 84 >> 2] = $0;
 $8 = _vfscanf($3, $1, $2) | 0;
 STACKTOP = sp;
 return $8 | 0;
}

function __ZL11luaB_cowrapP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, label = 0;
 $1 = __Z13lua_newthreadP9lua_State($0) | 0;
 if ((__Z8lua_typeP9lua_Statei($0, 1) | 0) == 6) {
  if (__Z15lua_iscfunctionP9lua_Statei($0, 1) | 0) label = 3;
 } else label = 3;
 if ((label | 0) == 3) __Z13luaL_argerrorP9lua_StateiPKc($0, 1, 86641) | 0;
 __Z13lua_pushvalueP9lua_Statei($0, 1);
 __Z9lua_xmoveP9lua_StateS0_i($0, $1, 1);
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, 181, 1);
 return 1;
}

function __ZNSt3__28ios_base4initEPv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, dest = 0, stop = 0;
 HEAP32[$0 + 24 >> 2] = $1;
 HEAP32[$0 + 16 >> 2] = ($1 | 0) == 0 & 1;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 4098;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 6;
 $10 = $0 + 28 | 0;
 dest = $0 + 32 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__26localeC2Ev($10);
 return;
}

function __Z8lua_loadP9lua_StatePFPKcS0_PvPjES3_S2_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $4 = sp;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 __Z9luaZ_initP9lua_StateP3ZioPFPKcS0_PvPjES5_($0, $4, $1, $2);
 $6 = __Z20luaD_protectedparserP9lua_StateP3ZioPKc($0, $4, ($3 | 0) == 0 ? 86819 : $3) | 0;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0, $merge = 0;
 $1 = $0 + 8 | 0;
 $3 = _uselocale(HEAP32[$1 >> 2] | 0) | 0;
 $4 = _mbtowc(0, 0, 4) | 0;
 if ($3 | 0) _uselocale($3) | 0;
 if (!$4) {
  $7 = HEAP32[$1 >> 2] | 0;
  if (!$7) $merge = 1; else {
   $9 = _uselocale($7) | 0;
   if (!$9) $merge = 0; else {
    _uselocale($9) | 0;
    $merge = 0;
   }
  }
 } else $merge = -1;
 return $merge | 0;
}

function __ZN8LuaUtils9LowerKeysEP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $4 = 0;
 if ((__Z8lua_typeP9lua_Statei($0, $1) | 0) != 5) {
  $$0 = 0;
  return $$0 | 0;
 }
 __Z15luaL_checkstackP9lua_StateiPKc($0, 2, 83970);
 __Z15lua_createtableP9lua_Stateii($0, 0, 0);
 $4 = __Z10lua_gettopP9lua_State($0) | 0;
 __Z13lua_pushvalueP9lua_Statei($0, $1);
 __ZL13LowerKeysRealP9lua_Statei($0, $4);
 __Z10lua_settopP9lua_Statei($0, -3);
 $$0 = 1;
 return $$0 | 0;
}

function __ZL10luaB_errorP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $5 = 0;
 $1 = __Z15luaL_optintegerP9lua_Stateii($0, 2, 1) | 0;
 __Z10lua_settopP9lua_Statei($0, 1);
 if (!(($1 | 0) > 0 & (__Z12lua_isstringP9lua_Statei($0, 1) | 0) != 0)) {
  $5 = __Z9lua_errorP9lua_State($0) | 0;
  return $5 | 0;
 }
 __Z10luaL_whereP9lua_Statei($0, $1);
 __Z13lua_pushvalueP9lua_Statei($0, 1);
 __Z10lua_concatP9lua_Statei($0, 2);
 $5 = __Z9lua_errorP9lua_State($0) | 0;
 return $5 | 0;
}

function __ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$lcssa = 0, $5 = 0;
 $$0 = $2;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) {
   $$0$lcssa = $3;
   break;
  }
  $5 = HEAP32[$$0 >> 2] | 0;
  if ($5 >>> 0 < 128) if ((HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($5 << 1) >> 1] & $1) << 16 >> 16) {
   $$0$lcssa = $$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function __ZNSt3__26__treeIPKc26log_filter_section_compareNS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$1) return; else {
  __ZNSt3__26__treeIPKc26log_filter_section_compareNS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($0, HEAP32[$1 >> 2] | 0);
  __ZNSt3__26__treeIPKc26log_filter_section_compareNS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($0, HEAP32[$1 + 4 >> 2] | 0);
  __ZdlPv($1);
  return;
 }
}

function __ZL12luaB_auxwrapP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0;
 $1 = __Z12lua_tothreadP9lua_Statei($0, -10003) | 0;
 $3 = __ZL9auxresumeP9lua_StateS0_i($0, $1, __Z10lua_gettopP9lua_State($0) | 0) | 0;
 if (($3 | 0) >= 0) return $3 | 0;
 if (__Z12lua_isstringP9lua_Statei($0, -1) | 0) {
  __Z10luaL_whereP9lua_Statei($0, 1);
  __Z10lua_insertP9lua_Statei($0, -2);
  __Z10lua_concatP9lua_Statei($0, 2);
 }
 __Z9lua_errorP9lua_State($0) | 0;
 return $3 | 0;
}

function __Z9luaO_log2j($0) {
 $0 = $0 | 0;
 var $$0$lcssa = 0, $$05$lcssa = 0, $$056 = 0, $$07 = 0, $2 = 0, $3 = 0;
 if ($0 >>> 0 > 255) {
  $$056 = $0;
  $$07 = -1;
  while (1) {
   $2 = $$07 + 8 | 0;
   $3 = $$056 >>> 8;
   if ($$056 >>> 0 > 65535) {
    $$056 = $3;
    $$07 = $2;
   } else {
    $$0$lcssa = $2;
    $$05$lcssa = $3;
    break;
   }
  }
 } else {
  $$0$lcssa = -1;
  $$05$lcssa = $0;
 }
 return (HEAPU8[87423 + $$05$lcssa >> 0] | 0) + $$0$lcssa | 0;
}

function _perror($0) {
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $4 = 0;
 $1 = HEAP32[17441] | 0;
 $4 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
 if ((HEAP32[$1 + 76 >> 2] | 0) > -1) $14 = ___lockfile($1) | 0; else $14 = 0;
 if ($0 | 0) if (HEAP8[$0 >> 0] | 0) {
  _fwrite($0, _strlen($0) | 0, 1, $1) | 0;
  _fputc(58, $1) | 0;
  _fputc(32, $1) | 0;
 }
 _fwrite($4, _strlen($4) | 0, 1, $1) | 0;
 _fputc(10, $1) | 0;
 if ($14 | 0) ___unlockfile($1);
 return;
}

function __Z12luaC_freeallP9lua_State($0) {
 $0 = $0 | 0;
 var $$012 = 0, $2 = 0, $5 = 0;
 $2 = HEAP32[$0 + 16 >> 2] | 0;
 HEAP8[$2 + 20 >> 0] = 67;
 __ZL9sweeplistP9lua_StatePP8GCObjectj($0, $2 + 28 | 0, -3) | 0;
 $5 = $2 + 8 | 0;
 if ((HEAP32[$5 >> 2] | 0) <= 0) return;
 $$012 = 0;
 do {
  __ZL9sweeplistP9lua_StatePP8GCObjectj($0, (HEAP32[$2 >> 2] | 0) + ($$012 << 2) | 0, -3) | 0;
  $$012 = $$012 + 1 | 0;
 } while (($$012 | 0) < (HEAP32[$5 >> 2] | 0));
 return;
}

function __ZNSt3__26locale2id5__getEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $1 = sp + 16 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $0;
 HEAP32[$3 + 4 >> 2] = 178;
 HEAP32[$3 + 8 >> 2] = 0;
 if ((HEAP32[$0 >> 2] | 0) != -1) {
  HEAP32[$1 >> 2] = $3;
  HEAP32[$2 >> 2] = $1;
  __ZNSt3__211__call_onceERVmPvPFvS2_E($0, $2, 179);
 }
 STACKTOP = sp;
 return (HEAP32[$0 + 4 >> 2] | 0) + -1 | 0;
}

function __ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$08 = 0, $12 = 0, $5 = 0;
 $$0 = $3;
 $$08 = $1;
 while (1) {
  if (($$08 | 0) == ($2 | 0)) break;
  $5 = HEAP32[$$08 >> 2] | 0;
  if ($5 >>> 0 < 128) $12 = HEAPU16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($5 << 1) >> 1] | 0; else $12 = 0;
  HEAP16[$$0 >> 1] = $12;
  $$0 = $$0 + 2 | 0;
  $$08 = $$08 + 4 | 0;
 }
 return $2 | 0;
}

function __Z13luaM_realloc_P9lua_StatePvjj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $13 = 0, $5 = 0;
 $5 = HEAP32[$0 + 16 >> 2] | 0;
 $10 = FUNCTION_TABLE_iiiii[HEAP32[$5 + 12 >> 2] & 15](HEAP32[$5 + 16 >> 2] | 0, $1, $2, $3) | 0;
 if (($3 | 0) != 0 & ($10 | 0) == 0) __Z10luaD_throwP9lua_Statei($0, 4); else {
  $13 = $5 + 68 | 0;
  HEAP32[$13 >> 2] = $3 - $2 + (HEAP32[$13 >> 2] | 0);
  return $10 | 0;
 }
 return 0;
}

function __ZL4getFP9lua_StatePvPj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $11 = 0, $5 = 0, $9 = 0;
 if (HEAP32[$1 >> 2] | 0) {
  HEAP32[$1 >> 2] = 0;
  HEAP32[$2 >> 2] = 1;
  $$0 = 93202;
  return $$0 | 0;
 }
 $5 = $1 + 4 | 0;
 if (_feof(HEAP32[$5 >> 2] | 0) | 0) {
  $$0 = 0;
  return $$0 | 0;
 }
 $9 = $1 + 8 | 0;
 $11 = _fread($9, 1, 1024, HEAP32[$5 >> 2] | 0) | 0;
 HEAP32[$2 >> 2] = $11;
 $$0 = $11 | 0 ? $9 : 0;
 return $$0 | 0;
}

function __Z9lua_yieldP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $3 = HEAP32[$0 + 52 >> 2] | 0;
 if (($3 & 65535) > ($3 >>> 16 & 65535)) __Z13luaG_runerrorP9lua_StatePKcz($0, 87134, sp);
 HEAP32[$0 + 12 >> 2] = (HEAP32[$0 + 8 >> 2] | 0) + (0 - $1 << 3);
 HEAP8[$0 + 6 >> 0] = 1;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 STACKTOP = sp;
 return -1;
}

function __ZNSt3__220__shared_ptr_pointerIP8GameDataNS_14default_deleteIS1_EENS_9allocatorIS1_EEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 var $2 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 + 12 >> 2] | 0;
 if (!$2) return;
 $5 = HEAP32[$2 + 12 >> 2] | 0;
 if ($5 | 0) {
  $7 = $2 + 16 | 0;
  if ((HEAP32[$7 >> 2] | 0) != ($5 | 0)) HEAP32[$7 >> 2] = $5;
  __ZdlPv($5);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZdlPv($2);
 return;
}

function ___ftello_unlocked($0) {
 $0 = $0 | 0;
 var $$0 = 0, $11 = 0, $12 = 0;
 if (!(HEAP32[$0 >> 2] & 128)) $11 = 1; else $11 = (HEAP32[$0 + 20 >> 2] | 0) >>> 0 > (HEAP32[$0 + 28 >> 2] | 0) >>> 0 ? 2 : 1;
 $12 = FUNCTION_TABLE_iiii[HEAP32[$0 + 40 >> 2] & 63]($0, 0, $11) | 0;
 if (($12 | 0) < 0) $$0 = $12; else $$0 = $12 - (HEAP32[$0 + 8 >> 2] | 0) + (HEAP32[$0 + 4 >> 2] | 0) + (HEAP32[$0 + 20 >> 2] | 0) - (HEAP32[$0 + 28 >> 2] | 0) | 0;
 return $$0 | 0;
}

function __Z9luaX_nextP8LexState($0) {
 $0 = $0 | 0;
 var $13 = 0, $14 = 0, $4 = 0, $8 = 0;
 HEAP32[$0 + 8 >> 2] = HEAP32[$0 + 4 >> 2];
 $4 = $0 + 20 | 0;
 if ((HEAP32[$4 >> 2] | 0) == 287) {
  HEAP32[$0 + 12 >> 2] = __ZL4llexP8LexStateP7SemInfo($0, $0 + 16 | 0) | 0;
  return;
 } else {
  $8 = $4;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $0 + 12 | 0;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  HEAP32[$4 >> 2] = 287;
  return;
 }
}

function _newlocale($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$06 = 0, label = 0;
 if (!(HEAP8[$1 >> 0] | 0)) label = 4; else if (!(_strcmp($1, 102867) | 0)) label = 4; else if (!(_strcmp($1, 102191) | 0)) label = 4; else $$06 = 0;
 do if ((label | 0) == 4) if (!$2) if (!(HEAP32[27153] | 0)) {
  HEAP32[27153] = 1;
  $$06 = 108616;
  break;
 } else {
  $$06 = _calloc(1, 4) | 0;
  break;
 } else $$06 = $2; while (0);
 return $$06 | 0;
}

function __ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 1964;
 $5 = $4 + 108 | 0;
 HEAP32[$5 >> 2] = 1984;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($4 + 8 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($4, 1996);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 __ZdlPv($4);
 return;
}

function __ZNSt3__26__treeIPFviPKcS2_ENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$1) return; else {
  __ZNSt3__26__treeIPFviPKcS2_ENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, HEAP32[$1 >> 2] | 0);
  __ZNSt3__26__treeIPFviPKcS2_ENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, HEAP32[$1 + 4 >> 2] | 0);
  __ZdlPv($1);
  return;
 }
}

function __ZN6google12_GLOBAL__N_1L11ReportErrorENS0_16DieWhenReportingEPKcz($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = HEAP32[17441] | 0;
 _vfprintf($3, $1, $2) | 0;
 _fflush($3) | 0;
 if ($0 | 0) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[17379] & 255](1);
 STACKTOP = sp;
 return;
}

function __Z14luaF_freeupvalP9lua_StateP5UpVal($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $6 = 0, $8 = 0;
 if ((HEAP32[$1 + 8 >> 2] | 0) == ($1 + 12 | 0)) {
  __Z13luaM_realloc_P9lua_StatePvjj($0, $1, 20, 0) | 0;
  return;
 }
 $6 = $1 + 12 | 0;
 $8 = $1 + 16 | 0;
 HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[(HEAP32[$6 >> 2] | 0) + 16 >> 2] = HEAP32[$8 >> 2];
 __Z13luaM_realloc_P9lua_StatePvjj($0, $1, 20, 0) | 0;
 return;
}

function __ZNSt3__28numpunctIwEC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $6 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 76480;
 HEAP32[$0 + 8 >> 2] = 46;
 HEAP32[$0 + 12 >> 2] = 44;
 $6 = $0 + 16 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __Z11luaO_int2fbj($0) {
 $0 = $0 | 0;
 var $$0$lcssa = 0, $$011 = 0, $$08$lcssa = 0, $$0810 = 0, $2 = 0;
 if ($0 >>> 0 > 15) {
  $$011 = 1;
  $$0810 = $0;
  do {
   $2 = $$0810 + 1 | 0;
   $$0810 = $2 >>> 1;
   $$011 = $$011 + 1 | 0;
  } while ($2 >>> 0 > 31);
  $$0$lcssa = $$011 << 3;
  $$08$lcssa = $$0810;
 } else {
  $$0$lcssa = 8;
  $$08$lcssa = $0;
 }
 return ($$08$lcssa >>> 0 < 8 ? $$08$lcssa : $$0$lcssa | $$08$lcssa + -8) | 0;
}

function __Z20luaD_rawrunprotectedP9lua_StatePFvS0_PvES1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $3 + 8 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $0 + 96 | 0;
 HEAP32[$3 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $3;
 FUNCTION_TABLE_vii[$1 & 63]($0, $2);
 HEAP32[$5 >> 2] = HEAP32[$3 >> 2];
 STACKTOP = sp;
 return HEAP32[$4 >> 2] | 0;
}

function _wctype($0) {
 $0 = $0 | 0;
 var $$01113 = 0, $$012 = 0, $$014 = 0, $1 = 0, $3 = 0;
 $1 = HEAP8[$0 >> 0] | 0;
 $$01113 = 1;
 $$014 = 102116;
 $3 = 97;
 while (1) {
  if ($1 << 24 >> 24 == $3 << 24 >> 24) if (!(_strcmp($0, $$014) | 0)) {
   $$012 = $$01113;
   break;
  }
  $$014 = $$014 + 6 | 0;
  $3 = HEAP8[$$014 >> 0] | 0;
  if (!($3 << 24 >> 24)) {
   $$012 = 0;
   break;
  } else $$01113 = $$01113 + 1 | 0;
 }
 return $$012 | 0;
}

function __ZNSt3__28numpunctIcEC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $6 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 76440;
 HEAP8[$0 + 8 >> 0] = 46;
 HEAP8[$0 + 9 >> 0] = 44;
 $6 = $0 + 12 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$09 = 0, $10 = 0, $8 = 0;
 $8 = ($2 - $1 | 0) >>> 2;
 $$0 = $4;
 $$09 = $1;
 while (1) {
  if (($$09 | 0) == ($2 | 0)) break;
  $10 = HEAP32[$$09 >> 2] | 0;
  HEAP8[$$0 >> 0] = $10 >>> 0 < 128 ? $10 & 255 : $3;
  $$0 = $$0 + 1 | 0;
  $$09 = $$09 + 4 | 0;
 }
 return $1 + ($8 << 2) | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 128 >> 0] = 0;
 if ($1 | 0) {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($0, $1);
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($0, $1);
 }
 return;
}

function _log_framePrefixer_createPrefix($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[26755] | 0;
 if (!$2) if (!$1) $$0 = 0; else {
  HEAP8[$0 >> 0] = 0;
  $$0 = 1;
 } else {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 >> 2];
  $$0 = _snprintf($0, $1, 78996, $vararg_buffer) | 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0;
 $4 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = 1964;
 $5 = $4 + 108 | 0;
 HEAP32[$5 >> 2] = 1984;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($4 + 8 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($4, 1996);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($5);
 return;
}

function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function __ZN6google12StringPrintfEPKcz($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZN6google20InternalStringPrintfEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPi($0, $1, $2);
 STACKTOP = sp;
 return;
}

function __ZL9luaB_loadP9lua_State($0) {
 $0 = $0 | 0;
 var $$0$i = 0, $1 = 0;
 $1 = __Z15luaL_optlstringP9lua_StateiPKcPj($0, 2, 86460, 0) | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 6);
 __Z10lua_settopP9lua_Statei($0, 3);
 if (!(__Z8lua_loadP9lua_StatePFPKcS0_PvPjES3_S2_($0, 31, 0, $1) | 0)) {
  $$0$i = 1;
  return $$0$i | 0;
 }
 __Z11lua_pushnilP9lua_State($0);
 __Z10lua_insertP9lua_Statei($0, -2);
 $$0$i = 2;
 return $$0$i | 0;
}

function __ZN8AllyTeamC2Ev($0) {
 $0 = $0 | 0;
 var $7 = 0;
 HEAPF32[$0 >> 2] = 0.0;
 HEAPF32[$0 + 4 >> 2] = 1.0;
 HEAPF32[$0 + 8 >> 2] = 0.0;
 HEAPF32[$0 + 12 >> 2] = 1.0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 $7 = $0 + 32 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = -1;
 HEAP32[$0 + 52 >> 2] = 0;
 return;
}

function __ZNSt3__26__treeIPFvvENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$1) return; else {
  __ZNSt3__26__treeIPFvvENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($0, HEAP32[$1 >> 2] | 0);
  __ZNSt3__26__treeIPFvvENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($0, HEAP32[$1 + 4 >> 2] | 0);
  __ZdlPv($1);
  return;
 }
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function __ZN6google13StringAppendFEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 __ZN6google20InternalStringPrintfEPNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPi($0, $1, $2);
 STACKTOP = sp;
 return;
}

function __ZL13luaB_cocreateP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, label = 0;
 $1 = __Z13lua_newthreadP9lua_State($0) | 0;
 if ((__Z8lua_typeP9lua_Statei($0, 1) | 0) == 6) {
  if (__Z15lua_iscfunctionP9lua_Statei($0, 1) | 0) label = 3;
 } else label = 3;
 if ((label | 0) == 3) __Z13luaL_argerrorP9lua_StateiPKc($0, 1, 86641) | 0;
 __Z13lua_pushvalueP9lua_Statei($0, 1);
 __Z9lua_xmoveP9lua_StateS0_i($0, $1, 1);
 return 1;
}

function __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz($0, $1, $2, $3, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $varargs = $varargs | 0;
 var $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 HEAP32[$4 >> 2] = $varargs;
 $5 = _uselocale($2) | 0;
 $6 = _vsnprintf($0, $1, $3, $4) | 0;
 if ($5 | 0) _uselocale($5) | 0;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $6 = 0;
 HEAP8[$0 >> 0] = 0;
 HEAP32[$0 + 4 >> 2] = $1;
 $6 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[$6 + 16 >> 2] | 0)) {
  $11 = HEAP32[$6 + 72 >> 2] | 0;
  if ($11 | 0) __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv($11) | 0;
  HEAP8[$0 >> 0] = 1;
 }
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $6 = 0;
 HEAP8[$0 >> 0] = 0;
 HEAP32[$0 + 4 >> 2] = $1;
 $6 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[$6 + 16 >> 2] | 0)) {
  $11 = HEAP32[$6 + 72 >> 2] | 0;
  if ($11 | 0) __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  HEAP8[$0 >> 0] = 1;
 }
 return;
}

function __ZNKSt3__25ctypeIcE10do_toupperEPcPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $11 = 0, $4 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP8[$$0 >> 0] | 0;
  if ($4 << 24 >> 24 > -1) $11 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($4 << 24 >> 24 << 2) >> 2] & 255; else $11 = $4;
  HEAP8[$$0 >> 0] = $11;
  $$0 = $$0 + 1 | 0;
 }
 return $2 | 0;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEPcPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $11 = 0, $4 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP8[$$0 >> 0] | 0;
  if ($4 << 24 >> 24 > -1) $11 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($4 << 24 >> 24 << 2) >> 2] & 255; else $11 = $4;
  HEAP8[$$0 >> 0] = $11;
  $$0 = $$0 + 1 | 0;
 }
 return $2 | 0;
}

function __Z10luaL_unrefP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0;
 if (($2 | 0) <= -1) return;
 if (($1 + 9999 | 0) >>> 0 > 9999) $8 = $1; else $8 = $1 + 1 + (__Z10lua_gettopP9lua_State($0) | 0) | 0;
 __Z11lua_rawgetiP9lua_Stateii($0, $8, 0);
 __Z11lua_rawsetiP9lua_Stateii($0, $8, $2);
 __Z15lua_pushintegerP9lua_Statei($0, $2);
 __Z11lua_rawsetiP9lua_Stateii($0, $8, 0);
 return;
}

function __Z16lua_pushvfstringP9lua_StatePKcPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $4 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP32[$4 + 68 >> 2] | 0) >>> 0 >= (HEAP32[$4 + 64 >> 2] | 0) >>> 0) __Z9luaC_stepP9lua_State($0);
 $10 = __Z17luaO_pushvfstringP9lua_StatePKcPi($0, $1, $2) | 0;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return $10 | 0;
}

function __ZNSt3__28ios_base16__call_callbacksENS0_5eventE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $4 = 0, $5 = 0, $7 = 0;
 $4 = $0 + 32 | 0;
 $5 = $0 + 36 | 0;
 $$0 = HEAP32[$0 + 40 >> 2] | 0;
 while (1) {
  if (!$$0) break;
  $7 = $$0 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$4 >> 2] | 0) + ($7 << 2) >> 2] & 7]($1, $0, HEAP32[(HEAP32[$5 >> 2] | 0) + ($7 << 2) >> 2] | 0);
  $$0 = $7;
 }
 return;
}

function __Z16luaF_newLclosureP9lua_StateiP5Table($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $5 = 0;
 $3 = $1 << 2;
 $5 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, $3 + 20 | 0) | 0;
 __Z9luaC_linkP9lua_StateP8GCObjecth($0, $5, 6);
 HEAP8[$5 + 6 >> 0] = 0;
 HEAP32[$5 + 12 >> 2] = $2;
 HEAP8[$5 + 7 >> 0] = $1;
 if (!$1) return $5 | 0;
 _memset($5 + 20 | 0, 0, $3 | 0) | 0;
 return $5 | 0;
}

function __Z15luaK_checkstackP9FuncStatei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $15 = 0, $4 = 0, $5 = 0;
 $4 = (HEAP32[$0 + 36 >> 2] | 0) + $1 | 0;
 $5 = HEAP32[$0 >> 2] | 0;
 if (($4 | 0) <= (HEAPU8[$5 + 75 >> 0] | 0 | 0)) return;
 if (($4 | 0) > 249) {
  __Z16luaX_syntaxerrorP8LexStatePKc(HEAP32[$0 + 12 >> 2] | 0, 89742);
  $15 = HEAP32[$0 >> 2] | 0;
 } else $15 = $5;
 HEAP8[$15 + 75 >> 0] = $4;
 return;
}

function _copysign($0, $1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0, $3 = 0, $8 = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $1;
 $8 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | $3 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = $2;
 HEAP32[tempDoublePtr + 4 >> 2] = $8;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function ___uflow($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP32[$0 + 8 >> 2] | 0)) if (!(___toread($0) | 0)) label = 3; else $$0 = -1; else label = 3;
 if ((label | 0) == 3) if ((FUNCTION_TABLE_iiii[HEAP32[$0 + 32 >> 2] & 63]($0, $1, 1) | 0) == 1) $$0 = HEAPU8[$1 >> 0] | 0; else $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z15luaL_checkstackP9lua_StateiPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (__Z14lua_checkstackP9lua_Statei($0, $1) | 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$vararg_buffer >> 2] = $2;
 __Z10luaL_errorP9lua_StatePKcz($0, 85662, $vararg_buffer) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $5 = 0;
 if (($0 | 0) != ($1 | 0)) {
  $4 = HEAP8[$1 + 11 >> 0] | 0;
  $5 = $4 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0, $5 ? HEAP32[$1 >> 2] | 0 : $1, $5 ? HEAP32[$1 + 4 >> 2] | 0 : $4 & 255) | 0;
 }
 return $0 | 0;
}

function __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = _uselocale($1) | 0;
 $5 = _vasprintf($0, $2, $3) | 0;
 if ($4 | 0) _uselocale($4) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZNKSt3__25ctypeIwE10do_toupperEPwPKw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $4 = 0, $9 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) $9 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($4 << 2) >> 2] | 0; else $9 = $4;
  HEAP32[$$0 >> 2] = $9;
  $$0 = $$0 + 4 | 0;
 }
 return $2 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEPwPKw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $4 = 0, $9 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) $9 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($4 << 2) >> 2] | 0; else $9 = $4;
  HEAP32[$$0 >> 2] = $9;
  $$0 = $$0 + 4 | 0;
 }
 return $2 | 0;
}

function __ZNK9MapParser11GetErrorLogEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!(HEAP32[$1 >> 2] | 0)) {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 78747, 46);
  return;
 } else {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1 + 4 | 0);
  return;
 }
}

function __ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = _uselocale($1) | 0;
 $5 = _vsscanf($0, $2, $3) | 0;
 if ($4 | 0) _uselocale($4) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZN9LuaParser8EndTableEv($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 + 48 >> 2] | 0;
 if (!$2) return;
 $4 = $0 + 120 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) < 0) return;
 $7 = $5 + -1 | 0;
 HEAP32[$4 >> 2] = $7;
 if (!$5) return;
 if (!$7) {
  __Z10lua_rawsetP9lua_Statei($2, -10002);
  return;
 } else {
  __Z10lua_rawsetP9lua_Statei($2, -3);
  return;
 }
}

function _calloc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $3 = 0, $8 = 0;
 if (!$0) $$0 = 0; else {
  $3 = Math_imul($1, $0) | 0;
  if (($1 | $0) >>> 0 > 65535) $$0 = (($3 >>> 0) / ($0 >>> 0) | 0 | 0) == ($1 | 0) ? $3 : -1; else $$0 = $3;
 }
 $8 = _malloc($$0) | 0;
 if (!$8) return $8 | 0;
 if (!(HEAP32[$8 + -4 >> 2] & 3)) return $8 | 0;
 _memset($8 | 0, 0, $$0 | 0) | 0;
 return $8 | 0;
}

function __Z13luaF_newprotoP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0, dest = 0, stop = 0;
 $1 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 76) | 0;
 __Z9luaC_linkP9lua_StateP8GCObjecth($0, $1, 9);
 $3 = $1 + 72 | 0;
 dest = $1 + 8 | 0;
 stop = dest + 60 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 >> 2] = 0;
 return $1 | 0;
}

function __Z9luaH_freeP9lua_StateP5Table($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = HEAP32[$1 + 16 >> 2] | 0;
 if (($3 | 0) != 108172) __Z13luaM_realloc_P9lua_StatePvjj($0, $3, 20 << (HEAPU8[$1 + 7 >> 0] | 0), 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, HEAP32[$1 + 12 >> 2] | 0, HEAP32[$1 + 28 >> 2] << 3, 0) | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, $1, 32, 0) | 0;
 return;
}

function _log_util_levelToString($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 switch ($0 | 0) {
 case 20:
  {
   $$0 = 79048;
   break;
  }
 case 30:
  {
   $$0 = 79043;
   break;
  }
 case 35:
  {
   $$0 = 79036;
   break;
  }
 case 40:
  {
   $$0 = 79028;
   break;
  }
 case 50:
  {
   $$0 = 79022;
   break;
  }
 case 60:
  {
   $$0 = 79016;
   break;
  }
 default:
  $$0 = 79006;
 }
 return $$0 | 0;
}

function __ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$09 = 0, $6 = 0;
 $$0 = $4;
 $$09 = $1;
 while (1) {
  if (($$09 | 0) == ($2 | 0)) break;
  $6 = HEAP8[$$09 >> 0] | 0;
  HEAP8[$$0 >> 0] = $6 << 24 >> 24 > -1 ? $6 : $3;
  $$0 = $$0 + 1 | 0;
  $$09 = $$09 + 1 | 0;
 }
 return $2 | 0;
}

function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE3__xEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[106384] | 0)) if (___cxa_guard_acquire(106384) | 0) {
  HEAP32[27766] = 0;
  HEAP32[27767] = 0;
  HEAP32[27768] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(111064, 74524, _wcslen(74524) | 0);
  ___cxa_atexit(186, 111064, ___dso_handle | 0) | 0;
 }
 return 111064;
}

function __ZNKSt3__220__time_get_c_storageIwE3__rEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[106392] | 0)) if (___cxa_guard_acquire(106392) | 0) {
  HEAP32[27769] = 0;
  HEAP32[27770] = 0;
  HEAP32[27771] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(111076, 74560, _wcslen(74560) | 0);
  ___cxa_atexit(186, 111076, ___dso_handle | 0) | 0;
 }
 return 111076;
}

function __ZNKSt3__220__time_get_c_storageIwE3__cEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[106400] | 0)) if (___cxa_guard_acquire(106400) | 0) {
  HEAP32[27772] = 0;
  HEAP32[27773] = 0;
  HEAP32[27774] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(111088, 74608, _wcslen(74608) | 0);
  ___cxa_atexit(186, 111088, ___dso_handle | 0) | 0;
 }
 return 111088;
}

function __ZNKSt3__220__time_get_c_storageIwE3__XEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[106376] | 0)) if (___cxa_guard_acquire(106376) | 0) {
  HEAP32[27763] = 0;
  HEAP32[27764] = 0;
  HEAP32[27765] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(111052, 74488, _wcslen(74488) | 0);
  ___cxa_atexit(186, 111052, ___dso_handle | 0) | 0;
 }
 return 111052;
}

function _log_frontend_record($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 if ((HEAP32[26748] | 0) <= ($0 | 0)) if ((_log_filter_section_getMinLevel($1) | 0) <= ($0 | 0)) _log_backend_record($0, $1, $2, $3);
 STACKTOP = sp;
 return;
}

function __ZL4sortP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 $1 = __Z10lua_objlenP9lua_Statei($0, 1) | 0;
 __Z15luaL_checkstackP9lua_StateiPKc($0, 40, 114224);
 if ((__Z8lua_typeP9lua_Statei($0, 2) | 0) >= 1) __Z14luaL_checktypeP9lua_Stateii($0, 2, 6);
 __Z10lua_settopP9lua_Statei($0, 2);
 __ZL7auxsortP9lua_Stateii($0, 1, $1);
 return 0;
}

function __ZN12_GLOBAL__N_117LogFilesContainerD2Ev($0) {
 $0 = $0 | 0;
 _log_file_removeAllLogFiles();
 HEAP8[84259] = 0;
 __ZNSt3__26__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN12_GLOBAL__N_114LogFileDetailsEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE($0, HEAP32[$0 + 4 >> 2] | 0);
 return;
}

function __Z11luaU_headerPc($0) {
 $0 = $0 | 0;
 var $4 = 0;
 HEAP8[$0 >> 0] = 27;
 HEAP8[$0 + 1 >> 0] = 76;
 HEAP8[$0 + 2 >> 0] = 117;
 HEAP8[$0 + 3 >> 0] = 97;
 HEAP8[$0 + 4 >> 0] = 81;
 HEAP8[$0 + 5 >> 0] = 0;
 $4 = $0 + 7 | 0;
 HEAP8[$0 + 6 >> 0] = 1;
 HEAP8[$4 >> 0] = 4;
 HEAP8[$4 + 1 >> 0] = 4;
 HEAP8[$4 + 2 >> 0] = 4;
 HEAP8[$4 + 3 >> 0] = 4;
 HEAP8[$0 + 11 >> 0] = 0;
 return;
}

function __ZSt9terminatev() {
 var $0 = 0, $2 = 0, $5 = 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if ($0 | 0) {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2 | 0) {
   $5 = $2 + 48 | 0;
   if ((HEAP32[$5 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[$5 + 4 >> 2] | 0) == 1129074247 : 0) __ZSt11__terminatePFvvE(HEAP32[$2 + 12 >> 2] | 0);
  }
 }
 __ZSt11__terminatePFvvE(__ZSt13get_terminatev() | 0);
}

function __Z9luaX_initP9lua_State($0) {
 $0 = $0 | 0;
 var $$010 = 0, $2 = 0, $4 = 0, $5 = 0;
 $$010 = 0;
 do {
  $2 = HEAP32[69388 + ($$010 << 2) >> 2] | 0;
  $4 = __Z12luaS_newlstrP9lua_StatePKcj($0, $2, _strlen($2) | 0) | 0;
  $5 = $4 + 5 | 0;
  HEAP8[$5 >> 0] = HEAPU8[$5 >> 0] | 0 | 32;
  $$010 = $$010 + 1 | 0;
  HEAP8[$4 + 6 >> 0] = $$010;
 } while (($$010 | 0) != 21);
 return;
}

function __ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 255]($0) | 0;
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 111968) | 0;
 HEAP32[$0 + 36 >> 2] = $5;
 HEAP8[$0 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 255]($5) | 0) & 1;
 return;
}

function __ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 255]($0) | 0;
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 111960) | 0;
 HEAP32[$0 + 36 >> 2] = $5;
 HEAP8[$0 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 255]($5) | 0) & 1;
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 if (($0 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4);
 return;
}

function __Z12luaopen_mathP9lua_State($0) {
 $0 = $0 | 0;
 __Z13luaL_registerP9lua_StatePKcPK8luaL_Reg($0, 87185, 68836);
 __Z14lua_pushnumberP9lua_Statef($0, 3.1415927410125732);
 __Z12lua_setfieldP9lua_StateiPKc($0, -2, 87190);
 __Z14lua_pushnumberP9lua_Statef($0, +HEAPF32[__ZN8streflop22SimplePositiveInfinityE >> 2]);
 __Z12lua_setfieldP9lua_StateiPKc($0, -2, 87193);
 return 1;
}

function __ZN8GameData12SetSetupTextERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0, $4 = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0, $1) | 0;
 $3 = HEAP32[$0 + 12 >> 2] | 0;
 $4 = $0 + 16 | 0;
 if ((HEAP32[$4 >> 2] | 0) == ($3 | 0)) return;
 HEAP32[$4 >> 2] = $3;
 return;
}

function __Z13luaC_barrierfP9lua_StateP8GCObjectS2_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $4 = 0, $8 = 0;
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 if ((HEAP8[$4 + 21 >> 0] | 0) == 1) {
  __ZL16reallymarkobjectP12global_StateP8GCObject($4, $2);
  return;
 } else {
  $8 = $1 + 5 | 0;
  HEAP8[$8 >> 0] = HEAPU8[$4 + 20 >> 0] & 3 | HEAPU8[$8 >> 0] & 248;
  return;
 }
}

function __Z14lua_pushthreadP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $1 = $0 + 8 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$2 + 4 >> 2] = 8;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return (HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 100 >> 2] | 0) == ($0 | 0) | 0;
}

function __ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 HEAP32[$0 >> 2] = 1964;
 $1 = $0 + 108 | 0;
 HEAP32[$1 >> 2] = 1984;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0 + 8 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 1996);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function _rand() {
 var $0 = 0, $10 = 0, $14 = 0, $6 = 0, $8 = 0, $9 = 0;
 $0 = 106280;
 $6 = ___muldi3(HEAP32[$0 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0, 1284865837, 1481765933) | 0;
 $8 = _i64Add($6 | 0, tempRet0 | 0, 1, 0) | 0;
 $9 = tempRet0;
 $10 = 106280;
 HEAP32[$10 >> 2] = $8;
 HEAP32[$10 + 4 >> 2] = $9;
 $14 = _bitshift64Lshr($8 | 0, $9 | 0, 33) | 0;
 return $14 | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE3__rEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[106312] | 0)) if (___cxa_guard_acquire(106312) | 0) {
  HEAP32[27566] = 0;
  HEAP32[27567] = 0;
  HEAP32[27568] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(110264, 103316, 11);
  ___cxa_atexit(164, 110264, ___dso_handle | 0) | 0;
 }
 return 110264;
}

function __ZNKSt3__220__time_get_c_storageIcE3__cEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[106320] | 0)) if (___cxa_guard_acquire(106320) | 0) {
  HEAP32[27569] = 0;
  HEAP32[27570] = 0;
  HEAP32[27571] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(110276, 103328, 20);
  ___cxa_atexit(164, 110276, ___dso_handle | 0) | 0;
 }
 return 110276;
}

function ___cxa_can_catch($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
 $8 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 63]($0, $1, $3) | 0;
 if ($8) HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
 STACKTOP = sp;
 return $8 & 1 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 4 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  HEAP32[$3 >> 2] = 0;
  $3 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNKSt3__220__time_get_c_storageIcE3__xEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[106304] | 0)) if (___cxa_guard_acquire(106304) | 0) {
  HEAP32[27563] = 0;
  HEAP32[27564] = 0;
  HEAP32[27565] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(110252, 103307, 8);
  ___cxa_atexit(164, 110252, ___dso_handle | 0) | 0;
 }
 return 110252;
}

function __ZNKSt3__220__time_get_c_storageIcE3__XEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[106296] | 0)) if (___cxa_guard_acquire(106296) | 0) {
  HEAP32[27560] = 0;
  HEAP32[27561] = 0;
  HEAP32[27562] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(110240, 103298, 8);
  ___cxa_atexit(164, 110240, ___dso_handle | 0) | 0;
 }
 return 110240;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) >> 0] | 0) + 24 | 0;
}

function _ferror($0) {
 $0 = $0 | 0;
 var $$lobit = 0, $$lobit9 = 0, $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  $$lobit = (HEAP32[$0 >> 2] | 0) >>> 5 & 1;
  if ($phitmp) $$lobit9 = $$lobit; else {
   ___unlockfile($0);
   $$lobit9 = $$lobit;
  }
 } else $$lobit9 = (HEAP32[$0 >> 2] | 0) >>> 5 & 1;
 return $$lobit9 | 0;
}

function _feof($0) {
 $0 = $0 | 0;
 var $$lobit = 0, $$lobit9 = 0, $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  $$lobit = (HEAP32[$0 >> 2] | 0) >>> 4 & 1;
  if ($phitmp) $$lobit9 = $$lobit; else {
   ___unlockfile($0);
   $$lobit9 = $$lobit;
  }
 } else $$lobit9 = (HEAP32[$0 >> 2] | 0) >>> 4 & 1;
 return $$lobit9 | 0;
}

function __ZN13SpringVersion11GetPatchSetEv() {
 if (HEAP8[106160] | 0) return 107812;
 if (!(___cxa_guard_acquire(106160) | 0)) return 107812;
 HEAP32[26953] = 0;
 HEAP32[26954] = 0;
 HEAP32[26955] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107812, 91299, 1);
 ___cxa_atexit(164, 107812, ___dso_handle | 0) | 0;
 return 107812;
}

function __ZNKSt3__27collateIwE7do_hashEPKwS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$020 = 0, $6 = 0, $7 = 0;
 $$0 = 0;
 $$020 = $1;
 while (1) {
  if (($$020 | 0) == ($2 | 0)) break;
  $6 = (HEAP32[$$020 >> 2] | 0) + ($$0 << 4) | 0;
  $7 = $6 & -268435456;
  $$0 = ($7 >>> 24 | $7) ^ $6;
  $$020 = $$020 + 4 | 0;
 }
 return $$0 | 0;
}

function __ZNKSt3__27collateIwE12do_transformEPKwS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0, $2, $3);
 return;
}

function __ZNKSt3__27collateIcE12do_transformEPKcS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0, $2, $3);
 return;
}

function __ZNKSt3__27collateIcE7do_hashEPKcS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$020 = 0, $7 = 0, $8 = 0;
 $$0 = 0;
 $$020 = $1;
 while (1) {
  if (($$020 | 0) == ($2 | 0)) break;
  $7 = (HEAP8[$$020 >> 0] | 0) + ($$0 << 4) | 0;
  $8 = $7 & -268435456;
  $$0 = ($8 >>> 24 | $8) ^ $7;
  $$020 = $$020 + 1 | 0;
 }
 return $$0 | 0;
}

function ___fseeko($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0, $9 = 0, $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  $8 = ___fseeko_unlocked($0, $1, $2) | 0;
  if ($phitmp) $9 = $8; else {
   ___unlockfile($0);
   $9 = $8;
  }
 } else $9 = ___fseeko_unlocked($0, $1, $2) | 0;
 return $9 | 0;
}

function __ZN13SpringVersion8GetMajorEv() {
 if (HEAP8[106152] | 0) return 107824;
 if (!(___cxa_guard_acquire(106152) | 0)) return 107824;
 HEAP32[26956] = 0;
 HEAP32[26957] = 0;
 HEAP32[26958] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(107824, 82792, 3);
 ___cxa_atexit(164, 107824, ___dso_handle | 0) | 0;
 return 107824;
}

function __ZL9ipairsauxP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $4 = 0;
 $1 = __Z17luaL_checkintegerP9lua_Statei($0, 2) | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 $2 = $1 + 1 | 0;
 __Z15lua_pushintegerP9lua_Statei($0, $2);
 __Z11lua_rawgetiP9lua_Stateii($0, 1, $2);
 $4 = (__Z8lua_typeP9lua_Statei($0, -1) | 0) == 0;
 return ($4 ? 0 : 2) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $6 = 0;
 $6 = $0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 $11 = $0 + 8 | 0;
 HEAP32[$11 >> 2] = -1;
 HEAP32[$11 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $6 = 0;
 $6 = $0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 $11 = $0 + 8 | 0;
 HEAP32[$11 >> 2] = -1;
 HEAP32[$11 + 4 >> 2] = -1;
 return;
}

function __ZL11luaB_dofileP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 $1 = __Z15luaL_optlstringP9lua_StateiPKcPj($0, 1, 0, 0) | 0;
 $2 = __Z10lua_gettopP9lua_State($0) | 0;
 if (__Z13luaL_loadfileP9lua_StatePKc($0, $1) | 0) __Z9lua_errorP9lua_State($0) | 0;
 __Z8lua_callP9lua_Stateii($0, 0, -1);
 return (__Z10lua_gettopP9lua_State($0) | 0) - $2 | 0;
}

function __ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 HEAP32[$0 >> 2] = 1964;
 $1 = $0 + 108 | 0;
 HEAP32[$1 >> 2] = 1984;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0 + 8 | 0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 1996);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function _wmemcpy($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$058 = 0, $$067 = 0, $$09 = 0;
 if ($2 | 0) {
  $$058 = $2;
  $$067 = $1;
  $$09 = $0;
  while (1) {
   $$058 = $$058 + -1 | 0;
   HEAP32[$$09 >> 2] = HEAP32[$$067 >> 2];
   if (!$$058) break; else {
    $$067 = $$067 + 4 | 0;
    $$09 = $$09 + 4 | 0;
   }
  }
 }
 return $0 | 0;
}

function __Z15luaL_loadbufferP9lua_StatePKcjS2_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 HEAP32[$4 >> 2] = $1;
 HEAP32[$4 + 4 >> 2] = $2;
 $6 = __Z8lua_loadP9lua_StatePFPKcS0_PvPjES3_S2_($0, 30, $4, $3) | 0;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZL10math_frexpP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm8__frexpfEfPi(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1)), $1 | 0));
 __Z15lua_pushintegerP9lua_Statei($0, HEAP32[$1 >> 2] | 0);
 STACKTOP = sp;
 return 2;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $8 = 0;
 $8 = $2 + 8 | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 15]($0, $1, HEAP32[$8 >> 2] | 0, HEAP32[$8 + 4 >> 2] | 0, 0, $3);
 return;
}

function __ZNSt3__28ios_base4InitD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(109296) | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv(109380) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(109632) | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv(109716) | 0;
 return;
}

function __ZL11luaB_xpcallP9lua_State($0) {
 $0 = $0 | 0;
 __Z13luaL_checkanyP9lua_Statei($0, 2);
 __Z10lua_settopP9lua_Statei($0, 2);
 __Z10lua_insertP9lua_Statei($0, 1);
 __Z15lua_pushbooleanP9lua_Statei($0, (__Z9lua_pcallP9lua_Stateiii($0, 0, -1, 1) | 0) == 0 & 1);
 __Z11lua_replaceP9lua_Statei($0, 1);
 return __Z10lua_gettopP9lua_State($0) | 0;
}

function __ZN27ConfigVariableTypedMetaDataIiED0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67820;
 HEAP32[$0 + 44 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 52 | 0);
 HEAP32[$0 + 12 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 20 | 0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $6 = 0, $7 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 255]($0) | 0) == -1) $$0 = -1; else {
  $6 = $0 + 12 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  HEAP32[$6 >> 2] = $7 + 4;
  $$0 = HEAP32[$7 >> 2] | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $6 = 0, $7 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 255]($0) | 0) == -1) $$0 = -1; else {
  $6 = $0 + 12 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  HEAP32[$6 >> 2] = $7 + 1;
  $$0 = HEAPU8[$7 >> 0] | 0;
 }
 return $$0 | 0;
}

function __ZN6google28HandleCommandLineCompletionsEv() {
 var $0 = 0, $2 = 0, $7 = 0;
 $0 = HEAP32[27127] | 0;
 $2 = HEAP8[$0 + 11 >> 0] | 0;
 if ($2 << 24 >> 24 < 0) $7 = HEAP32[$0 + 4 >> 2] | 0; else $7 = $2 & 255;
 if (!$7) return;
 __ZN6google12_GLOBAL__N_1L23PrintFlagCompletionInfoEv();
 FUNCTION_TABLE_vi[HEAP32[17379] & 255](0);
 return;
}

function __Z15lua_pushbooleanP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAP32[$3 >> 2] = ($1 | 0) != 0 & 1;
 HEAP32[$3 + 4 >> 2] = 1;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __Z10luaT_gettmP5Table3TMSP7TString($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $3 = 0, $8 = 0;
 $3 = __Z11luaH_getstrP5TableP7TString($0, $2) | 0;
 if (HEAP32[$3 + 4 >> 2] | 0) {
  $$0 = $3;
  return $$0 | 0;
 }
 $8 = $0 + 6 | 0;
 HEAP8[$8 >> 0] = HEAPU8[$8 >> 0] | 0 | 1 << $1;
 $$0 = 0;
 return $$0 | 0;
}

function ___shlim($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $6 = 0, $7 = 0;
 HEAP32[$0 + 104 >> 2] = $1;
 $4 = HEAP32[$0 + 8 >> 2] | 0;
 $6 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = $4 - $6 | 0;
 HEAP32[$0 + 108 >> 2] = $7;
 if (($1 | 0) != 0 & ($7 | 0) > ($1 | 0)) HEAP32[$0 + 100 >> 2] = $6 + $1; else HEAP32[$0 + 100 >> 2] = $4;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 HEAP32[$0 >> 2] = 73552;
 __ZNSt3__26localeC2Ev($0 + 4 | 0);
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 HEAP32[$0 >> 2] = 73488;
 __ZNSt3__26localeC2Ev($0 + 4 | 0);
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 return;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 if (($0 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3);
 return;
}

function __ZN22ConfigVariableMetaDataD0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67820;
 HEAP32[$0 + 44 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 52 | 0);
 HEAP32[$0 + 12 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 20 | 0);
 __ZdlPv($0);
 return;
}

function __GLOBAL__sub_I_CommandMessage_cpp() {
 var $0 = 0, $4 = 0, $8 = 0;
 $0 = 106208;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 $4 = 106200;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $8 = __ZN13SpringVersion8GetMajorEv() | 0;
 HEAP16[56049] = _atoi((HEAP8[$8 + 11 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8) | 0;
 return;
}

function _sn_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $5 = 0, $6 = 0, $7 = 0;
 $5 = $0 + 20 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = (HEAP32[$0 + 16 >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 > $2 >>> 0 ? $2 : $7;
 _memcpy($6 | 0, $1 | 0, $$ | 0) | 0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$;
 return $2 | 0;
}

function ___memrchr($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$09 = 0, $3 = 0, $6 = 0;
 $3 = $1 & 255;
 $$09 = $2;
 while (1) {
  if (!$$09) {
   $$0 = 0;
   break;
  }
  $$09 = $$09 + -1 | 0;
  $6 = $0 + $$09 | 0;
  if ((HEAP8[$6 >> 0] | 0) == $3 << 24 >> 24) {
   $$0 = $6;
   break;
  }
 }
 return $$0 | 0;
}

function __Z16luaF_newCclosureP9lua_StateiP5Table($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 $5 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, ($1 << 3) + 20 | 0) | 0;
 __Z9luaC_linkP9lua_StateP8GCObjecth($0, $5, 6);
 HEAP8[$5 + 6 >> 0] = 1;
 HEAP32[$5 + 12 >> 2] = $2;
 HEAP8[$5 + 7 >> 0] = $1;
 return $5 | 0;
}

function __Z15lua_pushintegerP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAPF32[$3 >> 2] = +($1 | 0);
 HEAP32[$3 + 4 >> 2] = 3;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZNSt3__218__libcpp_refstringC2EPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $7 = 0;
 $2 = _strlen($1) | 0;
 $4 = __Znwj($2 + 13 | 0) | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$4 + 4 >> 2] = $2;
 HEAP32[$4 + 8 >> 2] = 0;
 $7 = $4 + 12 | 0;
 _memcpy($7 | 0, $1 | 0, $2 + 1 | 0) | 0;
 HEAP32[$0 >> 2] = $7;
 return;
}

function __ZL9math_sqrtP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +SIMD_Float32x4_extractLane(SIMD_Float32x4_check(SIMD_Float32x4_sqrt(SIMD_Float32x4_check(SIMD_Float32x4(Math_fround(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1)), Math_fround(0.0), Math_fround(0.0), Math_fround(0.0))))), 0));
 return 1;
}

function __ZN27ConfigVariableTypedMetaDataIiED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67820;
 HEAP32[$0 + 44 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 52 | 0);
 HEAP32[$0 + 12 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 20 | 0);
 return;
}

function _wcschr($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$09 = 0, $5 = 0;
 if (!$1) $$0 = $0 + ((_wcslen($0) | 0) << 2) | 0; else {
  $$09 = $0;
  while (1) {
   $5 = HEAP32[$$09 >> 2] | 0;
   if (($5 | 0) == 0 | ($5 | 0) == ($1 | 0)) break; else $$09 = $$09 + 4 | 0;
  }
  $$0 = $5 | 0 ? $$09 : 0;
 }
 return $$0 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __Z16luaO_pushfstringP9lua_StatePKcz($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = __Z17luaO_pushvfstringP9lua_StatePKcPi($0, $1, $2) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZNSt3__25ctypeIcEC2EPKtbj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $6 = 0;
 HEAP32[$0 + 4 >> 2] = $3 + -1;
 HEAP32[$0 >> 2] = 76388;
 $6 = $0 + 8 | 0;
 HEAP32[$6 >> 2] = $1;
 HEAP8[$0 + 12 >> 0] = $2 & 1;
 if (!$1) HEAP32[$6 >> 2] = HEAP32[(___ctype_b_loc() | 0) >> 2];
 return;
}

function __Znwj($0) {
 $0 = $0 | 0;
 var $$ = 0, $$lcssa = 0, $2 = 0, $4 = 0;
 $$ = ($0 | 0) == 0 ? 1 : $0;
 while (1) {
  $2 = _malloc($$) | 0;
  if ($2 | 0) {
   $$lcssa = $2;
   break;
  }
  $4 = __ZSt15get_new_handlerv() | 0;
  if (!$4) {
   $$lcssa = 0;
   break;
  }
  FUNCTION_TABLE_v[$4 & 7]();
 }
 return $$lcssa | 0;
}

function __ZN22ConfigVariableMetaDataD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67820;
 HEAP32[$0 + 44 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 52 | 0);
 HEAP32[$0 + 12 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 20 | 0);
 return;
}

function __Z14lua_pushnumberP9lua_Statef($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 var $2 = 0, $3 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAPF32[$3 >> 2] = $1;
 HEAP32[$3 + 4 >> 2] = 3;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $0 + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $0 + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$07 = 0;
 $$0 = $3;
 $$07 = $1;
 while (1) {
  if (($$07 | 0) == ($2 | 0)) break;
  HEAP8[$$0 >> 0] = HEAP8[$$07 >> 0] | 0;
  $$0 = $$0 + 1 | 0;
  $$07 = $$07 + 1 | 0;
 }
 return $2 | 0;
}

function __ZL13luaB_loadfileP9lua_State($0) {
 $0 = $0 | 0;
 var $$0$i = 0;
 if (!(__Z13luaL_loadfileP9lua_StatePKc($0, __Z15luaL_optlstringP9lua_StateiPKcPj($0, 1, 0, 0) | 0) | 0)) {
  $$0$i = 1;
  return $$0$i | 0;
 }
 __Z11lua_pushnilP9lua_State($0);
 __Z10lua_insertP9lua_Statei($0, -2);
 $$0$i = 2;
 return $$0$i | 0;
}

function __ZNSt3__213__vector_baseIP10LuaMemPoolNS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 return;
}

function __ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$07 = 0;
 $$0 = $3;
 $$07 = $1;
 while (1) {
  if (($$07 | 0) == ($2 | 0)) break;
  HEAP32[$$0 >> 2] = HEAP8[$$07 >> 0];
  $$0 = $$0 + 4 | 0;
  $$07 = $$07 + 1 | 0;
 }
 return $2 | 0;
}

function __Z9luaC_linkP9lua_StateP8GCObjecth($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $4 = 0, $5 = 0;
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 $5 = $4 + 28 | 0;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $1;
 HEAP8[$1 + 5 >> 0] = (HEAPU8[$4 + 20 >> 0] | 0) & 3;
 HEAP8[$1 + 4 >> 0] = $2;
 return;
}

function _iswprint($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ($0 >>> 0 < 255) $$0 = ($0 + 1 & 127) >>> 0 > 32 & 1; else if (($0 + -57344 | 0) >>> 0 < 8185 | ($0 >>> 0 < 8232 | ($0 + -8234 | 0) >>> 0 < 47062)) $$0 = 1; else return (($0 + -65532 | 0) >>> 0 > 1048579 | ($0 & 65534 | 0) == 65534) & 1 ^ 1 | 0;
 return $$0 | 0;
}

function __ZNSt3__28ios_baseD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 73472;
 __ZNSt3__28ios_base16__call_callbacksENS0_5eventE($0, 0);
 __ZNSt3__26localeD2Ev($0 + 28 | 0);
 _free(HEAP32[$0 + 32 >> 2] | 0);
 _free(HEAP32[$0 + 36 >> 2] | 0);
 _free(HEAP32[$0 + 48 >> 2] | 0);
 _free(HEAP32[$0 + 60 >> 2] | 0);
 return;
}

function __ZL10luaB_pcallP9lua_State($0) {
 $0 = $0 | 0;
 __Z13luaL_checkanyP9lua_Statei($0, 1);
 __Z15lua_pushbooleanP9lua_Statei($0, (__Z9lua_pcallP9lua_Stateiii($0, (__Z10lua_gettopP9lua_State($0) | 0) + -1 | 0, -1, 0) | 0) == 0 & 1);
 __Z10lua_insertP9lua_Statei($0, 1);
 return __Z10lua_gettopP9lua_State($0) | 0;
}

function __ZNSt3__213__vector_baseIP8LuaTableNS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 return;
}

function __ZNSt3__23mapIPKci26log_filter_section_compareNS_9allocatorINS_4pairIKS2_iEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26__treeINS_12__value_typeIPKciEENS_19__map_value_compareIS3_S4_26log_filter_section_compareLb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, HEAP32[$0 + 4 >> 2] | 0);
 return;
}

function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}

function ___ftello($0) {
 $0 = $0 | 0;
 var $6 = 0, $7 = 0, $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  $6 = ___ftello_unlocked($0) | 0;
  if ($phitmp) $7 = $6; else {
   ___unlockfile($0);
   $7 = $6;
  }
 } else $7 = ___ftello_unlocked($0) | 0;
 return $7 | 0;
}

function __ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0;
 $8 = _catopen((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0;
 $8 = _catopen((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __Z12luaK_stringKP9FuncStateP7TString($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $1;
 HEAP32[$2 + 4 >> 2] = 4;
 $4 = __ZL4addkP9FuncStateP10lua_TValueS2_($0, $2, $2) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNSt3__214__shared_count16__release_sharedEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $2 = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = $2 + -1;
 if (!$2) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] & 255]($0);
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function __ZNSt3__213__vector_baseIjNS_9allocatorIjEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 return;
}

function ___stdio_close($0) {
 $0 = $0 | 0;
 var $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
 $4 = ___syscall_ret(___syscall6(6, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __Z16luaC_barrierbackP9lua_StateP5Table($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0, $4 = 0, $9 = 0;
 $3 = HEAP32[$0 + 16 >> 2] | 0;
 $4 = $1 + 5 | 0;
 HEAP8[$4 >> 0] = (HEAPU8[$4 >> 0] | 0) & 251;
 $9 = $3 + 40 | 0;
 HEAP32[$1 + 24 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$9 >> 2] = $1;
 return;
}

function __ZL6gmatchP9lua_State($0) {
 $0 = $0 | 0;
 __Z17luaL_checklstringP9lua_StateiPj($0, 1, 0) | 0;
 __Z17luaL_checklstringP9lua_StateiPj($0, 2, 0) | 0;
 __Z10lua_settopP9lua_Statei($0, 2);
 __Z15lua_pushintegerP9lua_Statei($0, 0);
 __Z16lua_pushcclosureP9lua_StatePFiS0_Ei($0, 182, 3);
 return 1;
}

function __ZL17luaB_getmetatableP9lua_State($0) {
 $0 = $0 | 0;
 __Z13luaL_checkanyP9lua_Statei($0, 1);
 if (!(__Z16lua_getmetatableP9lua_Statei($0, 1) | 0)) {
  __Z11lua_pushnilP9lua_State($0);
  return 1;
 } else {
  __Z17luaL_getmetafieldP9lua_StateiPKc($0, 1, 86207) | 0;
  return 1;
 }
 return 0;
}

function __Z12luaK_numberKP9FuncStatef($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 var $2 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAPF32[$2 >> 2] = $1;
 HEAP32[$2 + 4 >> 2] = 3;
 $4 = __ZL4addkP9FuncStateP10lua_TValueS2_($0, $2, $2) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function _tcgetattr($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$ = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer >> 2] = $1;
 $$ = ((_ioctl($0, 21505, $vararg_buffer) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$ | 0;
}

function __ZL4getSP9lua_StatePvPj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $3 = 0, $4 = 0;
 $3 = $1 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) {
  $$0 = 0;
  return $$0 | 0;
 }
 HEAP32[$2 >> 2] = $4;
 HEAP32[$3 >> 2] = 0;
 $$0 = HEAP32[$1 >> 2] | 0;
 return $$0 | 0;
}

function _snprintf($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = _vsnprintf($0, $1, $2, $3) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __Z9luaZ_initP9lua_StateP3ZioPFPKcS0_PvPjES5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 HEAP32[$1 + 16 >> 2] = $0;
 HEAP32[$1 + 8 >> 2] = $2;
 HEAP32[$1 + 12 >> 2] = $3;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 32 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 switch (HEAP32[$0 + 4 >> 2] & 74) {
 case 64:
  {
   $$0 = 8;
   break;
  }
 case 8:
  {
   $$0 = 16;
   break;
  }
 case 0:
  {
   $$0 = 0;
   break;
  }
 default:
  $$0 = 10;
 }
 return $$0 | 0;
}

function __Z12luaK_exp2valP9FuncStateP7expdesc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if ((HEAP32[$1 + 12 >> 2] | 0) == (HEAP32[$1 + 16 >> 2] | 0)) {
  __Z18luaK_dischargevarsP9FuncStateP7expdesc($0, $1);
  return;
 } else {
  __Z15luaK_exp2anyregP9FuncStateP7expdesc($0, $1) | 0;
  return;
 }
}

function __ZN6google26ProgramInvocationShortNameEv() {
 var $0 = 0, $5 = 0;
 $0 = __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj(108360, 47, -1) | 0;
 $5 = (HEAP8[108371] | 0) < 0 ? HEAP32[27090] | 0 : 108360;
 return (($0 | 0) == -1 ? $5 : $5 + $0 + 1 | 0) | 0;
}

function __Z14luaD_growstackP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = HEAP32[$0 + 44 >> 2] | 0;
 if (($3 | 0) < ($1 | 0)) {
  __Z17luaD_reallocstackP9lua_Statei($0, $3 + $1 | 0);
  return;
 } else {
  __Z17luaD_reallocstackP9lua_Statei($0, $3 << 1);
  return;
 }
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEjjPKcj($0, $1, $2, $3, _strlen($3) | 0) | 0;
}

function __ZL9luaB_nextP9lua_State($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 __Z10lua_settopP9lua_Statei($0, 2);
 if (__Z8lua_nextP9lua_Statei($0, 1) | 0) {
  $$0 = 2;
  return $$0 | 0;
 }
 __Z11lua_pushnilP9lua_State($0);
 $$0 = 1;
 return $$0 | 0;
}

function dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 return FUNCTION_TABLE_iiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0) | 0;
}

function __ZL12luaB_getfenvP9lua_State($0) {
 $0 = $0 | 0;
 __ZL7getfuncP9lua_Statei($0, 1);
 if (!(__Z15lua_iscfunctionP9lua_Statei($0, -1) | 0)) {
  __Z11lua_getfenvP9lua_Statei($0, -1);
  return 1;
 } else {
  __Z13lua_pushvalueP9lua_Statei($0, -10002);
  return 1;
 }
 return 0;
}

function __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 76904;
 __ZNSt3__218__libcpp_refstringC2EPKc($0 + 4 | 0, (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1);
 return;
}

function __ZL10math_atan2P9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0.0;
 $1 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1);
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm16__ieee754_atan2fEff(+$1, +(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 2))));
 return 1;
}

function _wmemset($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$056 = 0, $$07 = 0;
 if ($2 | 0) {
  $$056 = $2;
  $$07 = $0;
  while (1) {
   $$056 = $$056 + -1 | 0;
   HEAP32[$$07 >> 2] = $1;
   if (!$$056) break; else $$07 = $$07 + 4 | 0;
  }
 }
 return $0 | 0;
}

function __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67920;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 32 | 0);
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function _abort_message($0, $varargs) {
 $0 = $0 | 0;
 $varargs = $varargs | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 HEAP32[$1 >> 2] = $varargs;
 $2 = HEAP32[17441] | 0;
 _vfprintf($2, $0, $1) | 0;
 _fputc(10, $2) | 0;
 _abort();
}

function __ZNKSt3__28numpunctIwE12do_falsenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($0, 76512, _wcslen(76512) | 0);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$7 >> 2] = $5;
 return 3;
}

function __ZNKSt3__28numpunctIwE11do_truenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($0, 76536, _wcslen(76536) | 0);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$7 >> 2] = $5;
 return 3;
}

function __ZL9math_fmodP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0.0;
 $1 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1);
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm15__ieee754_fmodfEff(+$1, +(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 2))));
 return 1;
}

function __ZL10math_floorP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0.0, $8 = 0;
 $1 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1);
 if (!($1 >= 0.0)) $8 = ~~($1 + 9.999999974752427e-07) + -1 | 0; else $8 = ~~$1;
 __Z14lua_pushnumberP9lua_Statef($0, +($8 | 0));
 return 1;
}

function ___cxa_get_globals_fast() {
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(112084, 4) | 0)) {
  $3 = _pthread_getspecific(HEAP32[28022] | 0) | 0;
  STACKTOP = sp;
  return $3 | 0;
 } else _abort_message(105687, sp);
 return 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $6 = 0;
 $2 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$2) $6 = 1; else {
  $4 = _uselocale($2) | 0;
  if (!$4) $6 = 4; else {
   _uselocale($4) | 0;
   $6 = 4;
  }
 }
 return $6 | 0;
}

function __ZL8math_powP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0.0;
 $1 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1);
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm14__ieee754_powfEff(+$1, +(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 2))));
 return 1;
}

function __Z16luaH_resizearrayP9lua_StateP5Tablei($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0;
 if ((HEAP32[$1 + 16 >> 2] | 0) == 108172) $10 = 0; else $10 = 1 << (HEAPU8[$1 + 7 >> 0] | 0);
 __ZL6resizeP9lua_StateP5Tableii($0, $1, $2, $10);
 return;
}

function __Z16luaF_freeclosureP9lua_StateP7Closure($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = HEAP16[$1 + 6 >> 1] | 0;
 __Z13luaM_realloc_P9lua_StatePvjj($0, $1, ((($3 & 65535) >>> 8 & 65535) << (($3 & 255) << 24 >> 24 == 0 ? 2 : 3)) + 20 | 0, 0) | 0;
 return;
}

function __ZL4setnP9lua_State($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 __Z10luaL_errorP9lua_StatePKcz($0, 89114, sp) | 0;
 __Z13lua_pushvalueP9lua_Statei($0, 1);
 STACKTOP = sp;
 return 1;
}

function __ZN35TypedStringConvertibleOptionalValueINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 8 | 0);
 __ZdlPv($0);
 return;
}

function _sprintf($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = _vsprintf($0, $1, $2) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function _fprintf($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = _vfprintf($0, $1, $2) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZL7str_lenP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 __Z17luaL_checklstringP9lua_StateiPj($0, 1, $1) | 0;
 __Z15lua_pushintegerP9lua_Statei($0, HEAP32[$1 >> 2] | 0);
 STACKTOP = sp;
 return 1;
}

function _sscanf($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = _vsscanf($0, $1, $2) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __Z12luaK_codeABCP9FuncState6OpCodeiii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return __ZL9luaK_codeP9FuncStateji($0, $2 << 6 | $1 | $3 << 23 | $4 << 14, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($0, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($0, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($0, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($0, 1, 45);
 return;
}

function __ZL11luaB_rawsetP9lua_State($0) {
 $0 = $0 | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 __Z13luaL_checkanyP9lua_Statei($0, 2);
 __Z13luaL_checkanyP9lua_Statei($0, 3);
 __Z10lua_settopP9lua_Statei($0, 3);
 __Z10lua_rawsetP9lua_Statei($0, 1);
 return 1;
}

function __Z11lua_pushnilP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 $1 = $0 + 8 | 0;
 HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] = 0;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 8;
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return;
}

function __ZNK35TypedStringConvertibleOptionalValueINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE8ToStringEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1 + 8 | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free($0);
 if (!(_pthread_setspecific(HEAP32[28022] | 0, 0) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(105786, sp);
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function __ZL10math_ldexpP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0.0;
 $1 = +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1);
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm8__ldexpfEfi(+$1, __Z17luaL_checkintegerP9lua_Statei($0, 2) | 0));
 return 1;
}

function __ZNKSt3__28numpunctIcE12do_falsenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 104922, 5);
 return;
}

function __Z15luaL_optintegerP9lua_Stateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $6 = 0;
 if ((__Z8lua_typeP9lua_Statei($0, $1) | 0) < 1) {
  $6 = $2;
  return $6 | 0;
 }
 $6 = __Z17luaL_checkintegerP9lua_Statei($0, $1) | 0;
 return $6 | 0;
}

function __ZNKSt3__28numpunctIcE11do_truenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 104928, 4);
 return;
}

function __ZNSt3__219__shared_weak_count14__release_weakEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 $1 = $0 + 8 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = $2 + -1;
 if (!$2) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 255]($0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($0, $1, $2, _strlen($2) | 0) | 0;
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function __ZN9MapParserD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  __ZN9LuaParserD2Ev($1);
  __ZdlPv($1);
 }
 HEAP32[$0 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 4 | 0);
 return;
}

function __ZN3fLS20StringFlagDestructorD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(HEAP32[$0 >> 2] | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(HEAP32[$0 + 4 >> 2] | 0);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($2, $3, $4, 1114111, 0) | 0;
}

function __ZN35TypedStringConvertibleOptionalValueINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 67692;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 8 | 0);
 return;
}

function dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 return FUNCTION_TABLE_iiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0) | 0;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111936) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111928) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111920) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111912) | 0);
 return;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($2, $3, $4, 1114111, 0) | 0;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111872) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111864) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111856) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111044) | 0);
 return;
}

function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0;
 $2 = (HEAP32[$0 >> 2] | 0) + -4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAP32[$2 >> 2] = $3 + -1;
 if (($3 + -1 | 0) < 0) __ZdlPv((HEAP32[$0 >> 2] | 0) + -12 | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110232) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110224) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110216) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110192) | 0);
 return;
}

function __Z13luaF_newupvalP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = __Z13luaM_realloc_P9lua_StatePvjj($0, 0, 0, 20) | 0;
 __Z9luaC_linkP9lua_StateP8GCObjecth($0, $1, 10);
 HEAP32[$1 + 8 >> 2] = $1 + 12;
 HEAP32[$1 + 16 >> 2] = 0;
 return $1 | 0;
}

function __ZNKSt3__25ctypeIwE5do_isEtw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $9 = 0;
 if ($2 >>> 0 < 128) $9 = (HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($2 << 1) >> 1] & $1) << 16 >> 16 != 0; else $9 = 0;
 return $9 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIP10CGameSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 12 >> 2] | 0;
 if (!$2) return;
 __ZN10CGameSetupD2Ev($2);
 __ZdlPv($2);
 return;
}

function __ZN9LuaParser18DontMessWithMyCaseEP9lua_State($0) {
 $0 = $0 | 0;
 var $4 = 0;
 $4 = HEAP32[(HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 16 >> 2] | 0) + 12 >> 2] | 0;
 HEAP8[$4 + 133 >> 0] = (__Z13lua_tobooleanP9lua_Statei($0, 1) | 0) & 1;
 return 0;
}

function dynCall_iiiiiid(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 return FUNCTION_TABLE_iiiiiid[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6) | 0;
}

function __Z13luaC_callGCTMP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 16 | 0;
 if (!(HEAP32[(HEAP32[$1 >> 2] | 0) + 48 >> 2] | 0)) return;
 do __ZL4GCTMP9lua_State($0); while ((HEAP32[(HEAP32[$1 >> 2] | 0) + 48 >> 2] | 0) != 0);
 return;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$0 >> 2] = 76320;
 $1 = $0 + 8 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[$1 >> 2] | 0);
 return;
}

function __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $3 = $0 + 4 | 0;
 if ((HEAP32[$3 >> 2] | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $1;
 __ZdlPv($1);
 return;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $8 = 0;
 if ($1 << 24 >> 24 > -1) $8 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $8 = $1;
 return $8 | 0;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function __ZN6google12ProgramUsageEv() {
 var $0 = 0, $1 = 0, $5 = 0;
 $0 = HEAP8[108347] | 0;
 $1 = $0 << 24 >> 24 < 0;
 $5 = (($1 ? HEAP32[27085] | 0 : $0 & 255) | 0) == 0;
 return ($5 | $1 ^ 1 ? ($5 ? 90944 : 108336) : HEAP32[27084] | 0) | 0;
}

function __ZNSt3__23setIPKc26log_filter_section_compareNS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26__treeIPKc26log_filter_section_compareNS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($0, HEAP32[$0 + 4 >> 2] | 0);
 return;
}

function __ZNKSt3__25ctypeIcE10do_toupperEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $8 = 0;
 if ($1 << 24 >> 24 > -1) $8 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + (($1 & 255) << 2) >> 2] & 255; else $8 = $1;
 return $8 | 0;
}

function __ZNKSt3__26locale9use_facetERNS0_2idE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = __ZNSt3__26locale2id5__getEv($1) | 0;
 return HEAP32[(HEAP32[$2 + 8 >> 2] | 0) + ($3 << 2) >> 2] | 0;
}

function __ZL11luaB_ipairsP9lua_State($0) {
 $0 = $0 | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 __Z13lua_pushvalueP9lua_Statei($0, -10003);
 __Z13lua_pushvalueP9lua_Statei($0, 1);
 __Z15lua_pushintegerP9lua_Statei($0, 0);
 return 3;
}

function _iswalpha($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ($0 >>> 0 < 131072) $$0 = (HEAPU8[95972 + ((HEAPU8[95972 + ($0 >>> 8) >> 0] | 0) << 5 | $0 >>> 3 & 31) >> 0] | 0) >>> ($0 & 7) & 1; else $$0 = $0 >>> 0 < 196606 & 1;
 return $$0 | 0;
}

function __Z12luaK_codeABxP9FuncState6OpCodeij($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return __ZL9luaK_codeP9FuncStateji($0, $2 << 6 | $1 | $3 << 14, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
}

function __ZNKSt3__220__shared_ptr_pointerIP11ClientSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ((HEAP32[$1 + 4 >> 2] | 0) == 85375 ? $0 + 12 | 0 : 0) | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($0, $1, _wcslen($1) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0, $1, _strlen($1) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $1, _strlen($1) | 0) | 0;
}

function __ZNKSt3__220__shared_ptr_pointerIP10CGameSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ((HEAP32[$1 + 4 >> 2] | 0) == 85123 ? $0 + 12 | 0 : 0) | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $7 = 0;
 $7 = $3 - $2 | 0;
 return ($7 >>> 0 < $4 >>> 0 ? $7 : $4) | 0;
}

function __ZL13luaB_rawequalP9lua_State($0) {
 $0 = $0 | 0;
 __Z13luaL_checkanyP9lua_Statei($0, 1);
 __Z13luaL_checkanyP9lua_Statei($0, 2);
 __Z15lua_pushbooleanP9lua_Statei($0, __Z12lua_rawequalP9lua_Stateii($0, 1, 2) | 0);
 return 1;
}

function __ZNKSt3__220__shared_ptr_pointerIP8GameDataNS_14default_deleteIS1_EENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ((HEAP32[$1 + 4 >> 2] | 0) == 85252 ? $0 + 12 | 0 : 0) | 0;
}

function __ZNSt3__23setIPFviPKcS2_ENS_4lessIS4_EENS_9allocatorIS4_EEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26__treeIPFviPKcS2_ENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($0, HEAP32[$0 + 4 >> 2] | 0);
 return;
}

function __ZL10luaB_pairsP9lua_State($0) {
 $0 = $0 | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 __Z13lua_pushvalueP9lua_Statei($0, -10003);
 __Z13lua_pushvalueP9lua_Statei($0, 1);
 __Z11lua_pushnilP9lua_State($0);
 return 3;
}

function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}

function __ZNKSt3__25ctypeIwE10do_toupperEw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $6 = 0;
 if ($1 >>> 0 < 128) $6 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($1 << 2) >> 2] | 0; else $6 = $1;
 return $6 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $6 = 0;
 if ($1 >>> 0 < 128) $6 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($1 << 2) >> 2] | 0; else $6 = $1;
 return $6 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(112088, 189) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(105736, sp);
}

function ___cxx_global_array_dtor_112($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 111388;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
 } while (($2 | 0) != 111100);
 return;
}

function ___cxx_global_array_dtor_109($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 110576;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 } while (($2 | 0) != 110288);
 return;
}

function __ZL11luaB_rawgetP9lua_State($0) {
 $0 = $0 | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 __Z13luaL_checkanyP9lua_Statei($0, 2);
 __Z10lua_settopP9lua_Statei($0, 2);
 __Z10lua_rawgetP9lua_Statei($0, 1);
 return 1;
}

function ___cxx_global_array_dtor_85($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 111680;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
 } while (($2 | 0) != 111392);
 return;
}

function ___cxx_global_array_dtor_61($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 110868;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 } while (($2 | 0) != 110580);
 return;
}

function ___cxx_global_array_dtor_46($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 111852;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
 } while (($2 | 0) != 111684);
 return;
}

function __ZNKSt3__28ios_base6getlocEv($0) {
 $0 = $0 | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 __ZNSt3__26localeC2ERKS0_($1, $0 + 28 | 0);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZN6google16SetVersionStringERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0) {
 $0 = $0 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(108312, $0) | 0;
 return;
}

function __ZN6google15SetUsageMessageERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0) {
 $0 = $0 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(108336, $0) | 0;
 return;
}

function ___cxx_global_array_dtor($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 111040;
 do {
  $2 = $2 + -12 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 } while (($2 | 0) != 110872);
 return;
}

function __Z8luaK_retP9FuncStateii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZL9luaK_codeP9FuncStateji($0, $1 << 6 | ($2 << 23) + 8388608 | 30, HEAP32[(HEAP32[$0 + 12 >> 2] | 0) + 8 >> 2] | 0) | 0;
 return;
}

function dynCall_iiiiid(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = +a5;
 return FUNCTION_TABLE_iiiiid[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, +a5) | 0;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111976) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111984) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111968) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111960) | 0);
 return;
}

function __ZL9luaB_typeP9lua_State($0) {
 $0 = $0 | 0;
 __Z13luaL_checkanyP9lua_Statei($0, 1);
 __Z14lua_pushstringP9lua_StatePKc($0, __Z12lua_typenameP9lua_Statei($0, __Z8lua_typeP9lua_Statei($0, 1) | 0) | 0);
 return 1;
}

function _iswpunct($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ($0 >>> 0 < 131072) $$0 = (HEAPU8[98948 + ((HEAPU8[98948 + ($0 >>> 8) >> 0] | 0) << 5 | $0 >>> 3 & 31) >> 0] | 0) >>> ($0 & 7) & 1; else $$0 = 0;
 return $$0 | 0;
}

function __ZNSt3__23setIPFvvENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26__treeIPFvvENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE($0, HEAP32[$0 + 4 >> 2] | 0);
 return;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111904) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111896) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111888) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111880) | 0);
 return;
}

function __ZL11gfind_nodefP9lua_State($0) {
 $0 = $0 | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = __Z10luaL_errorP9lua_StatePKcz($0, 88700, sp) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZTv0_n12_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__26locale7classicEv() {
 if (!(HEAP8[106768] | 0)) if (___cxa_guard_acquire(106768) | 0) {
  __ZNSt3__26locale5__imp12make_classicEv() | 0;
  HEAP32[27999] = 111992;
 }
 return HEAP32[27999] | 0;
}

function __ZNSt3__26locale8__globalEv() {
 if (!(HEAP8[106936] | 0)) if (___cxa_guard_acquire(106936) | 0) {
  __ZNSt3__26locale5__imp11make_globalEv() | 0;
  HEAP32[28001] = 112e3;
 }
 return HEAP32[28001] | 0;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __Z12luaK_indexedP9FuncStateP7expdescS2_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 HEAP32[$1 + 8 >> 2] = __Z11luaK_exp2RKP9FuncStateP7expdesc($0, $2) | 0;
 HEAP32[$1 >> 2] = 9;
 return;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110208) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110184) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111952) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(111944) | 0);
 return;
}

function __ZNSt3__26locale5__imp11make_globalEv() {
 var $1 = 0;
 $1 = HEAP32[(__ZNSt3__26locale7classicEv() | 0) >> 2] | 0;
 HEAP32[28e3] = $1;
 __ZNSt3__214__shared_count12__add_sharedEv($1);
 return 112e3;
}

function __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110160) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110152) | 0);
 return;
}

function __ZNSt3__26localeC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[(__ZNSt3__26locale8__globalEv() | 0) >> 2] | 0;
 HEAP32[$0 >> 2] = $2;
 __ZNSt3__214__shared_count12__add_sharedEv($2);
 return;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110200) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(110168) | 0);
 return;
}

function __ZNSt3__219__shared_weak_count16__release_sharedEv($0) {
 $0 = $0 | 0;
 if (__ZNSt3__214__shared_count16__release_sharedEv($0) | 0) __ZNSt3__219__shared_weak_count14__release_weakEv($0);
 return;
}

function __ZN8GameDataC2Ev($0) {
 $0 = $0 | 0;
 var dest = 0, stop = 0;
 dest = $0;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZNSt3__211char_traitsIcE4findEPKcjRS2_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $7 = 0;
 if (!$1) $7 = 0; else $7 = _memchr($0, HEAPU8[$2 >> 0] | 0, $1) | 0;
 return $7 | 0;
}

function __ZNK9MapParser7IsValidEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$0 = (HEAP32[$1 + 48 >> 2] | 0) != 0;
 return $$0 | 0;
}

function __Z12lua_typenameP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0;
 if (($1 | 0) == -1) {
  $5 = 88746;
  return $5 | 0;
 }
 $5 = HEAP32[69276 + ($1 << 2) >> 2] | 0;
 return $5 | 0;
}

function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}

function __ZL10math_log10P9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm16__ieee754_log10fEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}

function __Z13luaL_checkanyP9lua_Statei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if ((__Z8lua_typeP9lua_Statei($0, $1) | 0) != -1) return;
 __Z13luaL_argerrorP9lua_StateiPKc($0, $1, 85682) | 0;
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZL9math_sinhP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm15__ieee754_sinhfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZL9math_coshP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm15__ieee754_coshfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZL9math_asinP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm15__ieee754_asinfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZL9math_acosP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm15__ieee754_acosfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 HEAP32[$4 >> 2] = $2;
 return 3;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 HEAP32[$4 >> 2] = $2;
 return 3;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 HEAP32[$4 >> 2] = $2;
 return 3;
}

function __ZL8math_logP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm14__ieee754_logfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZL8math_expP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm14__ieee754_expfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __GLOBAL__sub_I_ChatMessage_cpp() {
 var $0 = 0;
 $0 = __ZN13SpringVersion8GetMajorEv() | 0;
 HEAP16[56050] = _atoi((HEAP8[$0 + 11 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0) | 0;
 return;
}

function __Z11luaM_toobigP9lua_State($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __Z13luaG_runerrorP9lua_StatePKcz($0, 87384, sp);
 STACKTOP = sp;
 return 0;
}

function _iswcntrl($0) {
 $0 = $0 | 0;
 var $9 = 0;
 if (($0 & -2 | 0) == 8232 | ($0 >>> 0 < 32 | ($0 + -127 | 0) >>> 0 < 33)) $9 = 1; else $9 = ($0 + -65529 | 0) >>> 0 < 3;
 return $9 & 1 | 0;
}

function __ZNSt3__26localeC2ERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$0 >> 2] = $2;
 __ZNSt3__214__shared_count12__add_sharedEv($2);
 return;
}

function __GLOBAL__sub_I_GameData_cpp() {
 var $0 = 0;
 $0 = __ZN13SpringVersion8GetMajorEv() | 0;
 HEAP16[56048] = _atoi((HEAP8[$0 + 11 >> 0] | 0) < 0 ? HEAP32[$0 >> 2] | 0 : $0) | 0;
 return;
}

function __Z16spring_lua_allocPvS_jj__wrapper(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 return __Z16spring_lua_allocPvS_jj(p0 | 0, p1 | 0, p2 | 0, p3 | 0) | 0;
}

function __Z12luaK_fixlineP9FuncStatei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0) + ((HEAP32[$0 + 24 >> 2] | 0) + -1 << 2) >> 2] = $1;
 return;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZL9math_tanhP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm7__tanhfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZL9math_ceilP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm7__ceilfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZL9math_atanP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm7__atanfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZNSt3__211char_traitsIcE7compareEPKcS3_j($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$2) $5 = 0; else $5 = _memcmp($0, $1, $2) | 0;
 return $5 | 0;
}

function __ZL8math_absP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm7__fabsfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZNSt3__211char_traitsIwE4moveEPwPKwj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$2) $5 = $0; else $5 = _wmemmove($0, $1, $2) | 0;
 return $5 | 0;
}

function __ZN6google21ParseCommandLineFlagsEPiPPPcb($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZN6googleL29ParseCommandLineFlagsInternalEPiPPPcbb($0, $1, $2, 1) | 0;
}

function __ZL8math_tanP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm6__tanfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZL8math_sinP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm6__sinfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZL8math_cosP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__ZN13streflop_libm6__cosfEf(+(+__Z25luaL_checknumber_noassertP9lua_Statei($0, 1))));
 return 1;
}

function __ZTv0_n12_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 12 | 0);
 return;
}

function __ZNSt3__211char_traitsIwE6assignEPwjw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$1) $5 = $0; else $5 = _wmemset($0, $2, $1) | 0;
 return $5 | 0;
}

function __ZNSt3__211char_traitsIwE4copyEPwPKwj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$2) $5 = $0; else $5 = _wmemcpy($0, $1, $2) | 0;
 return $5 | 0;
}

function __ZNSt3__25ctypeIcED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 HEAP32[$0 >> 2] = 76388;
 $2 = HEAP32[$0 + 8 >> 2] | 0;
 if ($2 | 0) if (HEAP8[$0 + 12 >> 0] | 0) __ZdaPv($2);
 return;
}

function __ZNKSt3__28numpunctIwE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1 + 16 | 0);
 return;
}

function __ZNKSt3__28numpunctIcE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1 + 12 | 0);
 return;
}

function ___syscall_ret($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ($0 >>> 0 > 4294963200) {
  HEAP32[(___errno_location() | 0) >> 2] = 0 - $0;
  $$0 = -1;
 } else $$0 = $0;
 return $$0 | 0;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 8 | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 8 | 0);
 return;
}

function __ZNSt3__220__shared_ptr_pointerIP11ClientSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214__shared_countD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN14TeamControllerD0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 68116;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 8 | 0);
 __ZdlPv($0);
 return;
}

function __ZN14SkirmishAIBaseD0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 68116;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 8 | 0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__220__shared_ptr_pointerIP10CGameSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214__shared_countD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210__time_putD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZL4getnP9lua_State($0) {
 $0 = $0 | 0;
 __Z14luaL_checktypeP9lua_Stateii($0, 1, 5);
 __Z15lua_pushintegerP9lua_Statei($0, __Z10lua_objlenP9lua_Statei($0, 1) | 0);
 return 1;
}

function b12(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(12);
 return 0;
}

function __ZNSt3__220__shared_ptr_pointerIP8GameDataNS_14default_deleteIS1_EENS_9allocatorIS1_EEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214__shared_countD2Ev($0);
 __ZdlPv($0);
 return;
}

function __Z9lua_errorP9lua_State($0) {
 $0 = $0 | 0;
 __Z12LuaMutexLockP9lua_State($0 | 0);
 __Z13luaG_errormsgP9lua_State($0);
 __Z14LuaMutexUnlockP9lua_State($0 | 0);
 return 0;
}

function __Z13luaL_buffinitP9lua_StateP11luaL_Buffer($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$1 + 8 >> 2] = $0;
 HEAP32[$1 >> 2] = $1 + 12;
 HEAP32[$1 + 4 >> 2] = 0;
 return;
}

function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}

function __ZNSt3__26__clocEv() {
 if (!(HEAP8[106288] | 0)) if (___cxa_guard_acquire(106288) | 0) HEAP32[27544] = _newlocale(2147483647, 102867, 0) | 0;
 return HEAP32[27544] | 0;
}

function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($0 | 0) == ($1 | 0) | 0;
}

function __Z13luaL_registerP9lua_StatePKcPK8luaL_Reg($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __Z12luaI_openlibP9lua_StatePKcPK8luaL_Regi($0, $1, $2, 0);
 return;
}

function _uselocale($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0;
 $2 = (_pthread_self() | 0) + 184 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($0 | 0) HEAP32[$2 >> 2] = $0;
 return $3 | 0;
}

function _isatty($0) {
 $0 = $0 | 0;
 var $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $4 = (_tcgetattr($0, sp) | 0) == 0 & 1;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 8 + 3 >> 0] | 0) < 0) __ZdlPv(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZL8math_radP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1) * .01745329238474369);
 return 1;
}

function __ZL8math_degP9lua_State($0) {
 $0 = $0 | 0;
 __Z14lua_pushnumberP9lua_Statef($0, +__Z25luaL_checknumber_noassertP9lua_Statei($0, 1) / .01745329238474369);
 return 1;
}

function __ZL6writerP9lua_StatePKvjPv($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 __Z15luaL_addlstringP11luaL_BufferPKcj($3, $1, $2);
 return 0;
}

function __ZNSt3__28numpunctIwED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 76480;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 16 | 0);
 return;
}

function __ZNSt3__28numpunctIcED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 76440;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 12 | 0);
 return;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 63](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE17GetDedicatedValueEv($0) {
 $0 = $0 | 0;
 return $0 + 176 | 0;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 return ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
}

function __ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE16GetSafemodeValueEv($0) {
 $0 = $0 | 0;
 return $0 + 136 | 0;
}

function __ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE16GetHeadlessValueEv($0) {
 $0 = $0 | 0;
 return $0 + 156 | 0;
}

function __ZN14TeamControllerD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 68116;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 8 | 0);
 return;
}

function __ZL6f_callP9lua_StatePv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __Z9luaD_callP9lua_StateP10lua_TValuei($0, HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0);
 return;
}

function _strchr($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = ___strchrnul($0, $1) | 0;
 return ((HEAP8[$2 >> 0] | 0) == ($1 & 255) << 24 >> 24 ? $2 : 0) | 0;
}

function __ZSt11__terminatePFvvE($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 FUNCTION_TABLE_v[$0 & 7]();
 _abort_message(105839, sp);
}

function __ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15GetMaximumValueEv($0) {
 $0 = $0 | 0;
 return $0 + 116 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIP11ClientSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15GetMinimumValueEv($0) {
 $0 = $0 | 0;
 return $0 + 96 | 0;
}

function __ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15GetDefaultValueEv($0) {
 $0 = $0 | 0;
 return $0 + 76 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIP10CGameSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 73552;
 __ZNSt3__26localeD2Ev($0 + 4 | 0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 73488;
 __ZNSt3__26localeD2Ev($0 + 4 | 0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZdlPv($0);
 return;
}

function __GLOBAL__sub_I_FileSink_cpp() {
 _log_backend_registerSink(4);
 _log_backend_registerCleanup(3);
 ___cxa_atexit(170, 112109, ___dso_handle | 0) | 0;
 return;
}

function __ZNSt3__28ios_base33__set_badbit_and_consider_rethrowEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 16 | 0;
 HEAP32[$1 >> 2] = HEAP32[$1 >> 2] | 1;
 return;
}

function __ZThn8_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0 + -8 | 0);
 return;
}

function __ZNSt3__220__shared_ptr_pointerIP8GameDataNS_14default_deleteIS1_EENS_9allocatorIS1_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function ___cxa_guard_acquire($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ((HEAP8[$0 >> 0] | 0) == 1) $$0 = 0; else {
  HEAP8[$0 >> 0] = 1;
  $$0 = 1;
 }
 return $$0 | 0;
}

function __ZNSt3__26locale5facet16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 if ($0 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0);
 return;
}

function __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZL14luaB_corunningP9lua_State($0) {
 $0 = $0 | 0;
 if (!(__Z14lua_pushthreadP9lua_State($0) | 0)) return 1;
 __Z11lua_pushnilP9lua_State($0);
 return 1;
}

function __ZNSt3__219__shared_weak_count12__add_sharedEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 4 | 0;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
 return;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 7](a1 | 0, a2 | 0, a3 | 0);
}

function b0(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(0);
 return 0;
}

function __ZNSt3__26locale2id6__initEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[27545] | 0;
 HEAP32[27545] = $1 + 1;
 HEAP32[$0 + 4 >> 2] = $1 + 1;
 return;
}

function _wcslen($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 $$0 = $0;
 while (1) if (!(HEAP32[$$0 >> 2] | 0)) break; else $$0 = $$0 + 4 | 0;
 return $$0 - $0 >> 2 | 0;
}

function ___cxa_is_pointer_type($0) {
 $0 = $0 | 0;
 var $4 = 0;
 if (!$0) $4 = 0; else $4 = (___dynamic_cast($0, 1784, 1888, 0) | 0) != 0;
 return $4 & 1 | 0;
}

function __Z16luaX_syntaxerrorP8LexStatePKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __Z13luaX_lexerrorP8LexStatePKci($0, $1, HEAP32[$0 + 12 >> 2] | 0);
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function ___errno_location() {
 var $$0 = 0;
 if (!(HEAP32[27140] | 0)) $$0 = 108604; else $$0 = HEAP32[(_pthread_self() | 0) + 64 >> 2] | 0;
 return $$0 | 0;
}

function __ZNSt3__214__shared_count12__add_sharedEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 4 | 0;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
 return;
}

function _strtoull_l($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0;
 $4 = _strtoull($0, $1, $2) | 0;
 return $4 | 0;
}

function _strtoll_l($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0;
 $4 = _strtoll($0, $1, $2) | 0;
 return $4 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 73552;
 __ZNSt3__26localeD2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 73488;
 __ZNSt3__26localeD2Ev($0 + 4 | 0);
 return;
}

function _strtoll($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 $3 = _strtox_186($0, $1, $2, 0, -2147483648) | 0;
 return $3 | 0;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 return;
}

function _fileno($0) {
 $0 = $0 | 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) if (___lockfile($0) | 0) ___unlockfile($0);
 return HEAP32[$0 + 60 >> 2] | 0;
}

function establishStackSpace(stackBase, stackMax) {
 stackBase = stackBase | 0;
 stackMax = stackMax | 0;
 STACKTOP = stackBase;
 STACK_MAX = stackMax;
}

function _strpbrk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = $0 + (_strcspn($0, $1) | 0) | 0;
 return (HEAP8[$3 >> 0] | 0 ? $3 : 0) | 0;
}

function __ZN12_GLOBAL__N_119FileSinkRegistratorD2Ev($0) {
 $0 = $0 | 0;
 _log_backend_unregisterSink(4);
 _log_backend_unregisterCleanup(3);
 return;
}

function __Z13luaK_getlabelP9FuncState($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 HEAP32[$0 + 28 >> 2] = $2;
 return $2 | 0;
}

function _strtoull($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 $3 = _strtox_186($0, $1, $2, -1, -1) | 0;
 return $3 | 0;
}

function _strnlen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = _memchr($0, 0, $1) | 0;
 return (($2 | 0) == 0 ? $1 : $2 - $0 | 0) | 0;
}

function __ZL11luaB_gcinfoP9lua_State($0) {
 $0 = $0 | 0;
 __Z15lua_pushintegerP9lua_Statei($0, __Z6lua_gcP9lua_Stateii($0, 3, 0) | 0);
 return 1;
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 31](a1 | 0, a2 | 0) | 0;
}

function __ZNSt3__28ios_base5clearEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 16 >> 2] = (HEAP32[$0 + 24 >> 2] | 0) == 0 | $1;
 return;
}

function _strtoul($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 $3 = _strtox_186($0, $1, $2, -1, 0) | 0;
 return $3 | 0;
}

function __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 12 | 0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEwc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($1 >>> 0 < 128 ? $1 & 255 : $2) | 0;
}

function b7(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(7);
 return 0;
}

function __ZNSt3__211__stdoutbufIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__211__stdoutbufIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__25ctypeIcE9do_narrowEcc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($1 << 24 >> 24 > -1 ? $1 : $2) | 0;
}

function _iswgraph($0) {
 $0 = $0 | 0;
 var $6 = 0;
 if (!(_iswspace($0) | 0)) $6 = (_iswprint($0) | 0) != 0; else $6 = 0;
 return $6 & 1 | 0;
}

function _iswalnum($0) {
 $0 = $0 | 0;
 var $6 = 0;
 if (!(_iswdigit($0) | 0)) $6 = (_iswalpha($0) | 0) != 0; else $6 = 1;
 return $6 & 1 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $0 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $0 | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 4 | 0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 4 | 0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 8 | 0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 8 | 0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210__stdinbufIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210__stdinbufIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt13runtime_errorD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 76904;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0 + 4 | 0);
 return;
}

function __Z14luaX_lookaheadP8LexState($0) {
 $0 = $0 | 0;
 HEAP32[$0 + 20 >> 2] = __ZL4llexP8LexStateP7SemInfo($0, $0 + 24 | 0) | 0;
 return;
}

function b4(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 abort(4);
 return 0;
}

function _wctomb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$0) $$0 = 0; else $$0 = _wcrtomb($0, $1, 0) | 0;
 return $$0 | 0;
}

function __ZThn8_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + -8 + 12 | 0);
 return;
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0) {
 $0 = $0 | 0;
 ___assert_fail(105245, 105153, 1194, 105274);
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0 | 0;
 ___assert_fail(105124, 105153, 1183, 105224);
}

function __Z11luaO_fb2inti($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = $0 >>> 3 & 31;
 return (($2 | 0) == 0 ? $0 : ($0 & 7 | 8) << $2 + -1) | 0;
}

function _ispunct($0) {
 $0 = $0 | 0;
 var $6 = 0;
 if (!(_isgraph($0) | 0)) $6 = 0; else $6 = (_isalnum($0) | 0) == 0;
 return $6 & 1 | 0;
}

function __Z14luaG_checkcodePK5Proto($0) {
 $0 = $0 | 0;
 return (__ZL8symbexecPK5Protoii($0, HEAP32[$0 + 44 >> 2] | 0, 255) | 0) != 0 | 0;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function dynCall_iid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 return FUNCTION_TABLE_iid[index & 0](a1 | 0, +a2) | 0;
}

function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0 | 0;
 ___assert_fail(104975, 104998, 304, 105224);
}

function __ZNSt3__27codecvtIwc11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__27codecvtIwc11__mbstate_tED2Ev($0);
 __ZdlPv($0);
 return;
}

function __Z12lua_setlevelP9lua_StateS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP16[$1 + 52 >> 1] = HEAP16[$0 + 52 >> 1] | 0;
 return;
}

function __GLOBAL__sub_I_ConsoleSink_cpp() {
 _log_backend_registerSink(3);
 ___cxa_atexit(169, 112107, ___dso_handle | 0) | 0;
 return;
}

function __ZL10luaB_yieldP9lua_State($0) {
 $0 = $0 | 0;
 return __Z9lua_yieldP9lua_Statei($0, __Z10lua_gettopP9lua_State($0) | 0) | 0;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 63](a1 | 0, a2 | 0);
}

function __ZNSt3__26locale5__imp12make_classicEv() {
 __ZNSt3__26locale5__impC2Ej(106776, 1);
 HEAP32[27998] = 106776;
 return 111992;
}

function __ZN6google18ShowUsageWithFlagsEPKc($0) {
 $0 = $0 | 0;
 __ZN6google26ShowUsageWithFlagsRestrictEPKcS1_($0, 114224);
 return;
}

function __ZNSt3__26localeD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 return;
}

function __Z13luaopen_tableP9lua_State($0) {
 $0 = $0 | 0;
 __Z13luaL_registerP9lua_StatePKcPK8luaL_Reg($0, 89248, 69196);
 return 1;
}

function b2(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(2);
}

function _iswspace($0) {
 $0 = $0 | 0;
 var $5 = 0;
 if (!$0) $5 = 0; else $5 = (_wcschr(70236, $0) | 0) != 0;
 return $5 & 1 | 0;
}

function __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 12 | 0);
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 8 | 0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0 + 8 | 0);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($0) {
 $0 = $0 | 0;
 return 2;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($0) {
 $0 = $0 | 0;
 return 2;
}

function __ZL15math_randomseedP9lua_State($0) {
 $0 = $0 | 0;
 _srand(__Z17luaL_checkintegerP9lua_Statei($0, 1) | 0);
 return 0;
}

function __Z10lua_gettopP9lua_State($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 8 >> 2] | 0) - (HEAP32[$0 + 12 >> 2] | 0) >> 3 | 0;
}

function b17(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(17);
 return 0;
}

function _mbrlen($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return _mbrtowc(0, $0, $1, $2 | 0 ? $2 : 108620) | 0;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _mbsinit($0) {
 $0 = $0 | 0;
 var $5 = 0;
 if (!$0) $5 = 1; else $5 = (HEAP32[$0 >> 2] | 0) == 0;
 return $5 & 1 | 0;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __GLOBAL__I_000101() {
 __ZNSt3__28ios_base4InitC2Ev(0);
 ___cxa_atexit(177, 114223, ___dso_handle | 0) | 0;
 return;
}

function _srand($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = 106280;
 HEAP32[$2 >> 2] = $0 + -1;
 HEAP32[$2 + 4 >> 2] = 0;
 return;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function b16(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = +p4;
 abort(16);
 return 0;
}

function __ZNSt3__210__stdinbufIwE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb($0, 0) | 0;
}

function __ZNSt3__210__stdinbufIcE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb($0, 0) | 0;
}

function _vsprintf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return _vsnprintf($0, 2147483647, $1, $2) | 0;
}

function __ZL11callallgcTMP9lua_StatePv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __Z13luaC_callGCTMP9lua_State($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return -1;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return -1;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return -1;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return -1;
}

function __ZNSt3__210__stdinbufIwE5uflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb($0, 1) | 0;
}

function __ZNSt3__210__stdinbufIcE5uflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb($0, 1) | 0;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 255](a1 | 0) | 0;
}

function _strncpy($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 ___stpncpy($0, $1, $2) | 0;
 return $0 | 0;
}

function _iswxdigit($0) {
 $0 = $0 | 0;
 return (($0 + -48 | 0) >>> 0 < 10 | (($0 | 32) + -97 | 0) >>> 0 < 6) & 1 | 0;
}

function __ZN9LuaParser7GetRootEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN8LuaTableC2EP9LuaParser($0, $1);
 return;
}

function _isxdigit($0) {
 $0 = $0 | 0;
 return (($0 + -48 | 0) >>> 0 < 10 | (($0 | 32) + -97 | 0) >>> 0 < 6) & 1 | 0;
}

function __ZN12_GLOBAL__N_122ConsoleSinkRegistratorD2Ev($0) {
 $0 = $0 | 0;
 _log_backend_unregisterSink(3);
 return;
}

function _strcat($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _strcpy($0 + (_strlen($0) | 0) | 0, $1) | 0;
 return $0 | 0;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[28023] | 0;
 HEAP32[28023] = $0 + 0;
 return $0 | 0;
}

function __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0);
 return;
}

function __ZN8GameData14SetModChecksumEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 28 >> 2] = $1;
 return;
}

function __ZN8GameData14SetMapChecksumEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 24 >> 2] = $1;
 return;
}

function b3(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(3);
}

function _toupper($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = (_islower($0) | 0) == 0;
 return ($2 ? $0 : $0 & 95) | 0;
}

function _tolower($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = (_isupper($0) | 0) == 0;
 return ($2 ? $0 : $0 | 32) | 0;
}

function _strrchr($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ___memrchr($0, $1, (_strlen($0) | 0) + 1 | 0) | 0;
}

function __ZN8LuaUtils4EchoEP9lua_State($0) {
 $0 = $0 | 0;
 __ZL6LogMsgP9lua_StatePKcii($0, 0, -1, 1);
 return 0;
}

function __ZN8GameData13SetRandomSeedEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 32 >> 2] = $1;
 return;
}

function _fputs($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return (_fwrite($0, _strlen($0) | 0, 1, $1) | 0) + -1 | 0;
}

function _do_read($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ___string_read($0, $1, $2) | 0;
}

function __ZSt13get_terminatev() {
 var $0 = 0;
 $0 = HEAP32[19197] | 0;
 HEAP32[19197] = $0 + 0;
 return $0 | 0;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__26locale5__impD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5__impD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__28numpunctIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28numpunctIwED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28numpunctIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28numpunctIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function b13(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(13);
 return 0;
}

function __ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt13runtime_errorD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt13runtime_errorD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNK27ConfigVariableTypedMetaDataIiE17GetDedicatedValueEv($0) {
 $0 = $0 | 0;
 return $0 + 136 | 0;
}

function __ZN6google13VersionStringEv() {
 return ((HEAP8[108323] | 0) < 0 ? HEAP32[27078] | 0 : 108312) | 0;
}

function _isalnum($0) {
 $0 = $0 | 0;
 return (($0 + -48 | 0) >>> 0 < 10 | (_isalpha($0) | 0) != 0) & 1 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNK27ConfigVariableTypedMetaDataIiE16GetSafemodeValueEv($0) {
 $0 = $0 | 0;
 return $0 + 112 | 0;
}

function __ZNK27ConfigVariableTypedMetaDataIiE16GetHeadlessValueEv($0) {
 $0 = $0 | 0;
 return $0 + 124 | 0;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 255](a1 | 0);
}

function _strtold_l($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return +(+_strtox($0, $1, 2));
}

function _iswlower($0) {
 $0 = $0 | 0;
 return (($0 | 0) == 223 | (_towupper($0) | 0) != ($0 | 0)) & 1 | 0;
}

function _catgets($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return $3 | 0;
}

function __ZNK27ConfigVariableTypedMetaDataIiE15GetMaximumValueEv($0) {
 $0 = $0 | 0;
 return $0 + 100 | 0;
}

function __ZN14SkirmishAIDataD0Ev($0) {
 $0 = $0 | 0;
 __ZN14SkirmishAIDataD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN13content_errorD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt13runtime_errorD2Ev($0);
 __ZdlPv($0);
 return;
}

function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNKSt3__28numpunctIwE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 12 >> 2] | 0;
}

function __ZNKSt3__25ctypeIwE8do_widenEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 << 24 >> 24 | 0;
}

function __ZNK27ConfigVariableTypedMetaDataIiE15GetMinimumValueEv($0) {
 $0 = $0 | 0;
 return $0 + 88 | 0;
}

function __ZNK27ConfigVariableTypedMetaDataIiE15GetDefaultValueEv($0) {
 $0 = $0 | 0;
 return $0 + 76 | 0;
}

function __ZNSt3__28ios_baseD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__25ctypeIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__25ctypeIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__28numpunctIwE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 8 >> 2] | 0;
}

function __ZL9str_matchP9lua_State($0) {
 $0 = $0 | 0;
 return __ZL12str_find_auxP9lua_Statei($0, 0) | 0;
}

function __ZNKSt3__28numpunctIcE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return HEAP8[$0 + 9 >> 0] | 0;
}

function __ZNKSt3__28numpunctIcE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return HEAP8[$0 + 8 >> 0] | 0;
}

function __ZL8str_findP9lua_State($0) {
 $0 = $0 | 0;
 return __ZL12str_find_auxP9lua_Statei($0, 1) | 0;
}

function _cleanup_117($0) {
 $0 = $0 | 0;
 if (!(HEAP32[$0 + 68 >> 2] | 0)) ___unlockfile($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv($0) {
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv($0) {
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZN35TypedStringConvertibleOptionalValueIiED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _cleanup($0) {
 $0 = $0 | 0;
 if (!(HEAP32[$0 + 68 >> 2] | 0)) ___unlockfile($0);
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function b14(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(14);
}

function _isspace($0) {
 $0 = $0 | 0;
 return (($0 | 0) == 32 | ($0 + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _isdigit_l($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($0 + -48 | 0) >>> 0 < 10 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 1;
}

function _log_util_prepareSection($0) {
 $0 = $0 | 0;
 return (($0 | 0) == 0 ? 79054 : $0) | 0;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _strcpy($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 ___stpcpy($0, $1) | 0;
 return $0 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 return 4;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 return 4;
}

function __ZNKSt3__25ctypeIcE8do_widenEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 | 0;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZN12spring_futexD1Ev__wrapper(p0) {
 p0 = p0 | 0;
 __ZN12spring_futexD1Ev(p0 | 0);
}

function __ZN10__cxxabiv119__pointer_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__27codecvtIDsc11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__27codecvtIDic11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__217__widen_from_utf8ILj32EED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __Z10lua_statusP9lua_State($0) {
 $0 = $0 | 0;
 return HEAPU8[$0 + 6 >> 0] | 0 | 0;
}

function _log_console_colorizedOutput($0) {
 $0 = $0 | 0;
 HEAP8[112108] = $0 & 1;
 return;
}

function __ZNSt3__27codecvtIcc11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__216__narrow_to_utf8ILj32EED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZNKSt13runtime_error4whatEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNKSt3__28messagesIwE8do_closeEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNKSt3__28messagesIcE8do_closeEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function b1(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(1);
 return 0;
}

function _iscntrl($0) {
 $0 = $0 | 0;
 return ($0 >>> 0 < 32 | ($0 | 0) == 127) & 1 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function _isblank($0) {
 $0 = $0 | 0;
 return (($0 | 0) == 32 | ($0 | 0) == 9) & 1 | 0;
}

function _strtod($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+_strtox($0, $1, 1));
}

function _isxdigit_l($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return _isxdigit($0) | 0;
}

function __ZNSt3__210moneypunctIwLb1EED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _strcoll($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return _strcmp($0, $1) | 0;
}

function __ZNSt9bad_allocC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 76884;
 return;
}

function _iswupper($0) {
 $0 = $0 | 0;
 return (_towlower($0) | 0) != ($0 | 0) | 0;
}

function _isalpha($0) {
 $0 = $0 | 0;
 return (($0 | 32) + -97 | 0) >>> 0 < 26 | 0;
}

function __ZNSt8bad_castC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 76924;
 return;
}

function __ZN9LuaParser15DummyRandomSeedEP9lua_State($0) {
 $0 = $0 | 0;
 return 0;
}

function runPostSets() {}
function _pthread_mutex_lock(x) {
 x = x | 0;
 return 0;
}

function _copysignl($0, $1) {
 $0 = +$0;
 $1 = +$1;
 return +(+_copysign($0, $1));
}

function _scalbnl($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 return +(+_scalbn($0, $1));
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($0) {
 $0 = $0 | 0;
 return;
}

function b10(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(10);
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 7]();
}

function _frexpl($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 return +(+_frexp($0, $1));
}

function __ZNSt3__26locale5facetD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN9LuaParser11DummyRandomEP9lua_State($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNSt3__28messagesIwED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__28messagesIcED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN9LuaParser10RandomSeedEP9lua_State($0) {
 $0 = $0 | 0;
 return 0;
}

function _iswdigit($0) {
 $0 = $0 | 0;
 return ($0 + -48 | 0) >>> 0 < 10 | 0;
}

function __ZNSt3__27collateIwED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__27collateIcED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _isupper($0) {
 $0 = $0 | 0;
 return ($0 + -65 | 0) >>> 0 < 26 | 0;
}

function _islower($0) {
 $0 = $0 | 0;
 return ($0 + -97 | 0) >>> 0 < 26 | 0;
}

function _isgraph($0) {
 $0 = $0 | 0;
 return ($0 + -33 | 0) >>> 0 < 94 | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__25ctypeIwED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__221__throw_runtime_errorEPKc($0) {
 $0 = $0 | 0;
 return;
}

function _fmodl($0, $1) {
 $0 = +$0;
 $1 = +$1;
 return +(+_fmod($0, $1));
}

function b15(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(15);
 return 0;
}

function __ZN9LuaParser6RandomEP9lua_State($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNSt9bad_allocD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _catopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return -1 | 0;
}

function __ZNSt8bad_castD0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIwLb1EED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__210moneypunctIwLb0EED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__210moneypunctIcLb1EED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__210moneypunctIcLb0EED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function _towupper($0) {
 $0 = $0 | 0;
 return ___towcase($0, 0) | 0;
}

function _towlower($0) {
 $0 = $0 | 0;
 return ___towcase($0, 1) | 0;
}

function __ZNKSt9bad_alloc4whatEv($0) {
 $0 = $0 | 0;
 return 105879;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function b9(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(9);
 return 0;
}

function __ZNSt3__214__shared_countD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNKSt8bad_cast4whatEv($0) {
 $0 = $0 | 0;
 return 105925;
}

function _log_filter_getRepeatLimit() {
 return HEAP32[16920] | 0;
}

function __ZN6spring11noncopyableD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function ___cxa_pure_virtual__wrapper() {
 ___cxa_pure_virtual();
}

function __ZNSt3__26locale5facetD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__212__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}

function _iswblank($0) {
 $0 = $0 | 0;
 return _isblank($0) | 0;
}

function __ZNSt3__28messagesIwED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__28messagesIcED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__27collateIwED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__27collateIcED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function _atof($0) {
 $0 = $0 | 0;
 return +(+_strtod($0, 0));
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function _freelocale($0) {
 $0 = $0 | 0;
 _free($0);
 return;
}

function b6(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(6);
}

function _pthread_cond_broadcast(x) {
 x = x | 0;
 return 0;
}

function _exit__wrapper(p0) {
 p0 = p0 | 0;
 _exit(p0 | 0);
}

function __Znaj($0) {
 $0 = $0 | 0;
 return __Znwj($0) | 0;
}

function __ZdaPv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _pthread_mutex_unlock(x) {
 x = x | 0;
 return 0;
}

function ___cxa_guard_release($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt9type_infoD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt9exceptionD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt9bad_allocD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZdlPv($0) {
 $0 = $0 | 0;
 _free($0);
 return;
}

function __ZNSt8bad_castD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function ___cxa_guard_abort($0) {
 $0 = $0 | 0;
 return;
}

function b8(p0) {
 p0 = p0 | 0;
 abort(8);
 return 0;
}

function ___unlockfile($0) {
 $0 = $0 | 0;
 return;
}

function ___lockfile($0) {
 $0 = $0 | 0;
 return 0;
}

function __GLOBAL__sub_I_iostream_cpp() {
 return;
}

function _catclose($0) {
 $0 = $0 | 0;
 return 0;
}

function ___ctype_toupper_loc() {
 return 71924;
}

function ___ctype_tolower_loc() {
 return 70384;
}

function __ZSt17__throw_bad_allocv() {
 return;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b5(p0) {
 p0 = p0 | 0;
 abort(5);
}

function ___ctype_b_loc() {
 return 70380;
}

function _localeconv() {
 return 70324;
}

function _pthread_self() {
 return 0;
}

function b11() {
 abort(11);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0];
var FUNCTION_TABLE_iiii = [b1,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,___stdout_write,___stdio_seek,___stdio_read,___stdio_write,_sn_write,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__211__stdoutbufIwE6xsputnEPKwi,__ZNSt3__211__stdoutbufIcE6xsputnEPKci,__ZNKSt3__27collateIcE7do_hashEPKcS3_,__ZNKSt3__27collateIwE7do_hashEPKwS3_,__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__25ctypeIcE10do_toupperEPcPKc,__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__25ctypeIcE9do_narrowEcc,__ZNKSt3__25ctypeIwE5do_isEtw,__ZNKSt3__25ctypeIwE10do_toupperEPwPKw,__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__25ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv
,__ZL4getFP9lua_StatePvPj,__ZL4getSP9lua_StatePvPj,__ZL14generic_readerP9lua_StatePvPj,_do_read,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_viiiiii = [b2,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b2,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_viiiii = [b3,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_iiiiiid = [b4,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b4];
var FUNCTION_TABLE_vi = [b5,__ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED0Ev,__ZN35TypedStringConvertibleOptionalValueINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEED2Ev,__ZN35TypedStringConvertibleOptionalValueINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEED0Ev,__ZN6spring11noncopyableD2Ev,__ZN35TypedStringConvertibleOptionalValueIiED0Ev,__ZN27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEED2Ev,__ZN27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEED0Ev,__ZN27ConfigVariableTypedMetaDataIiED2Ev,__ZN27ConfigVariableTypedMetaDataIiED0Ev,__ZN22ConfigVariableMetaDataD2Ev,__ZN22ConfigVariableMetaDataD0Ev,__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev
,__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt13runtime_errorD2Ev,__ZN13content_errorD0Ev,__ZN8TeamBaseD2Ev,__ZN8TeamBaseD0Ev,__ZN14TeamControllerD2Ev,__ZN14TeamControllerD0Ev,__ZN14SkirmishAIDataD2Ev,__ZN14SkirmishAIDataD0Ev,__ZN14SkirmishAIBaseD0Ev,__ZN10PlayerBaseD2Ev,__ZN10PlayerBaseD0Ev,__ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__214basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__214__shared_countD2Ev
,__ZNSt3__220__shared_ptr_pointerIP11ClientSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIP11ClientSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIP11ClientSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIP8GameDataNS_14default_deleteIS1_EENS_9allocatorIS1_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIP8GameDataNS_14default_deleteIS1_EENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIP8GameDataNS_14default_deleteIS1_EENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIP10CGameSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIP10CGameSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIP10CGameSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,_exit__wrapper,__ZNSt3__28ios_baseD2Ev,__ZNSt3__28ios_baseD0Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__211__stdoutbufIwED0Ev,__ZNSt3__211__stdoutbufIcED0Ev,__ZNSt3__210__stdinbufIwED0Ev,__ZNSt3__210__stdinbufIcED0Ev,__ZNSt3__27collateIcED2Ev,__ZNSt3__27collateIcED0Ev
,__ZNSt3__26locale5facet16__on_zero_sharedEv,__ZNSt3__27collateIwED2Ev,__ZNSt3__27collateIwED0Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__210moneypunctIcLb0EED2Ev,__ZNSt3__210moneypunctIcLb0EED0Ev,__ZNSt3__210moneypunctIcLb1EED2Ev,__ZNSt3__210moneypunctIcLb1EED0Ev,__ZNSt3__210moneypunctIwLb0EED2Ev,__ZNSt3__210moneypunctIwLb0EED0Ev,__ZNSt3__210moneypunctIwLb1EED2Ev,__ZNSt3__210moneypunctIwLb1EED0Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28messagesIcED2Ev,__ZNSt3__28messagesIcED0Ev,__ZNSt3__28messagesIwED2Ev,__ZNSt3__28messagesIwED0Ev,__ZNSt3__26locale5facetD2Ev,__ZNSt3__216__narrow_to_utf8ILj32EED0Ev,__ZNSt3__217__widen_from_utf8ILj32EED0Ev,__ZNSt3__27codecvtIwc11__mbstate_tED2Ev,__ZNSt3__27codecvtIwc11__mbstate_tED0Ev,__ZNSt3__26locale5__impD2Ev,__ZNSt3__26locale5__impD0Ev,__ZNSt3__25ctypeIcED2Ev,__ZNSt3__25ctypeIcED0Ev,__ZNSt3__28numpunctIcED2Ev,__ZNSt3__28numpunctIcED0Ev,__ZNSt3__28numpunctIwED2Ev,__ZNSt3__28numpunctIwED0Ev,__ZNSt3__26locale5facetD0Ev,__ZNSt3__25ctypeIwED0Ev,__ZNSt3__27codecvtIcc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDic11__mbstate_tED0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev
,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt13runtime_errorD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,__ZN10__cxxabiv119__pointer_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__23setIPFviPKcS2_ENS_4lessIS4_EENS_9allocatorIS4_EEED2Ev,__ZNSt3__23setIPFvvENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev,__ZNSt3__23mapIPKci26log_filter_section_compareNS_9allocatorINS_4pairIKS2_iEEEEED2Ev,__ZNSt3__25stackIiNS_5dequeIiNS_9allocatorIiEEEEED2Ev,__ZNSt3__23setIPKc26log_filter_section_compareNS_9allocatorIS2_EEED2Ev,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZN10LuaMemPoolD2Ev,__ZNSt3__213__vector_baseIP10LuaMemPoolNS_9allocatorIS2_EEED2Ev,__ZNSt3__213__vector_baseIjNS_9allocatorIjEEED2Ev,__ZN12spring_futexD1Ev__wrapper,__ZN12_GLOBAL__N_122ConsoleSinkRegistratorD2Ev,__ZN12_GLOBAL__N_119FileSinkRegistratorD2Ev,__ZN12_GLOBAL__N_117LogFilesContainerD2Ev,__ZNSt3__210__list_impIN12_GLOBAL__N_19LogRecordENS_9allocatorIS2_EEED2Ev,__ZN3fLS20StringFlagDestructorD2Ev,__ZNSt3__213__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev,_cleanup,_cleanup_117,__ZNSt3__28ios_base4InitD2Ev,__ZNSt3__26locale2id6__initEv
,__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,___cxx_global_array_dtor,___cxx_global_array_dtor_61,___cxx_global_array_dtor_109,___cxx_global_array_dtor_46,___cxx_global_array_dtor_85,___cxx_global_array_dtor_112,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,__ZNSt3__212__do_nothingEPv,_free,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_vii = [b6,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNK35TypedStringConvertibleOptionalValueINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE8ToStringEv,__ZNK35TypedStringConvertibleOptionalValueIiE8ToStringEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE,__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv
,__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__28messagesIcE8do_closeEi,__ZNKSt3__28messagesIwE8do_closeEi,__ZNKSt3__28numpunctIcE11do_groupingEv,__ZNKSt3__28numpunctIcE11do_truenameEv,__ZNKSt3__28numpunctIcE12do_falsenameEv,__ZNKSt3__28numpunctIwE11do_groupingEv,__ZNKSt3__28numpunctIwE11do_truenameEv,__ZNKSt3__28numpunctIwE12do_falsenameEv,__ZL6f_callP9lua_StatePv,__ZL8f_parserP9lua_StatePv,__ZL9f_luaopenP9lua_StatePv,__ZL11callallgcTMP9lua_StatePv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiiii = [b7,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_ii = [b8,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15GetDefaultValueEv,__ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15GetMinimumValueEv,__ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15GetMaximumValueEv,__ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE16GetSafemodeValueEv,__ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE16GetHeadlessValueEv,__ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE17GetDedicatedValueEv,__ZNK27ConfigVariableTypedMetaDataIiE15GetDefaultValueEv,__ZNK27ConfigVariableTypedMetaDataIiE15GetMinimumValueEv,__ZNK27ConfigVariableTypedMetaDataIiE15GetMaximumValueEv,__ZNK27ConfigVariableTypedMetaDataIiE16GetSafemodeValueEv,__ZNK27ConfigVariableTypedMetaDataIiE16GetHeadlessValueEv,__ZNK27ConfigVariableTypedMetaDataIiE17GetDedicatedValueEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNKSt13runtime_error4whatEv,__ZL13luaB_cocreateP9lua_State,__ZL13luaB_coresumeP9lua_State,__ZL14luaB_corunningP9lua_State,__ZL13luaB_costatusP9lua_State,__ZL11luaB_cowrapP9lua_State,__ZL10luaB_yieldP9lua_State,__ZL11luaB_assertP9lua_State,__ZL19luaB_collectgarbageP9lua_State,__ZL11luaB_dofileP9lua_State
,__ZL10luaB_errorP9lua_State,__ZL11luaB_gcinfoP9lua_State,__ZL12luaB_getfenvP9lua_State,__ZL17luaB_getmetatableP9lua_State,__ZL13luaB_loadfileP9lua_State,__ZL9luaB_loadP9lua_State,__ZL15luaB_loadstringP9lua_State,__ZL9luaB_nextP9lua_State,__ZL10luaB_pcallP9lua_State,__ZL10luaB_printP9lua_State,__ZL13luaB_rawequalP9lua_State,__ZL11luaB_rawgetP9lua_State,__ZL11luaB_rawsetP9lua_State,__ZL11luaB_selectP9lua_State,__ZL12luaB_setfenvP9lua_State,__ZL17luaB_setmetatableP9lua_State,__ZL13luaB_tonumberP9lua_State,__ZL13luaB_tostringP9lua_State,__ZL9luaB_typeP9lua_State,__ZL11luaB_unpackP9lua_State,__ZL11luaB_xpcallP9lua_State,__ZL8math_absP9lua_State,__ZL9math_acosP9lua_State,__ZL9math_asinP9lua_State,__ZL10math_atan2P9lua_State,__ZL9math_atanP9lua_State,__ZL9math_ceilP9lua_State,__ZL9math_coshP9lua_State,__ZL8math_cosP9lua_State,__ZL8math_degP9lua_State
,__ZL8math_expP9lua_State,__ZL10math_floorP9lua_State,__ZL9math_fmodP9lua_State,__ZL10math_frexpP9lua_State,__ZL10math_ldexpP9lua_State,__ZL10math_log10P9lua_State,__ZL8math_logP9lua_State,__ZL8math_maxP9lua_State,__ZL8math_minP9lua_State,__ZL9math_modfP9lua_State,__ZL8math_powP9lua_State,__ZL8math_radP9lua_State,__ZL11math_randomP9lua_State,__ZL15math_randomseedP9lua_State,__ZL9math_sinhP9lua_State,__ZL8math_sinP9lua_State,__ZL9math_sqrtP9lua_State,__ZL9math_tanhP9lua_State,__ZL8math_tanP9lua_State,__ZL8str_byteP9lua_State,__ZL8str_charP9lua_State,__ZL8str_dumpP9lua_State,__ZL8str_findP9lua_State,__ZL10str_formatP9lua_State,__ZL11gfind_nodefP9lua_State,__ZL6gmatchP9lua_State,__ZL8str_gsubP9lua_State,__ZL7str_lenP9lua_State,__ZL9str_lowerP9lua_State,__ZL9str_matchP9lua_State
,__ZL7str_repP9lua_State,__ZL11str_reverseP9lua_State,__ZL7str_subP9lua_State,__ZL9str_upperP9lua_State,__ZL7tconcatP9lua_State,__ZL7foreachP9lua_State,__ZL8foreachiP9lua_State,__ZL4getnP9lua_State,__ZL4maxnP9lua_State,__ZL7tinsertP9lua_State,__ZL7tremoveP9lua_State,__ZL4setnP9lua_State,__ZL4sortP9lua_State,___stdio_close,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__211__stdoutbufIwE4syncEv,__ZNSt3__211__stdoutbufIcE4syncEv,__ZNSt3__210__stdinbufIwE9underflowEv,__ZNSt3__210__stdinbufIwE5uflowEv,__ZNSt3__210__stdinbufIcE9underflowEv,__ZNSt3__210__stdinbufIcE5uflowEv,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIcE7__weeksEv,__ZNKSt3__220__time_get_c_storageIcE8__monthsEv,__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIcE3__cEv
,__ZNKSt3__220__time_get_c_storageIcE3__rEv,__ZNKSt3__220__time_get_c_storageIcE3__xEv,__ZNKSt3__220__time_get_c_storageIcE3__XEv,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIwE7__weeksEv,__ZNKSt3__220__time_get_c_storageIwE8__monthsEv,__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIwE3__cEv,__ZNKSt3__220__time_get_c_storageIwE3__rEv,__ZNKSt3__220__time_get_c_storageIwE3__xEv,__ZNKSt3__220__time_get_c_storageIwE3__XEv,__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__28numpunctIcE16do_decimal_pointEv
,__ZNKSt3__28numpunctIcE16do_thousands_sepEv,__ZNKSt3__28numpunctIwE16do_decimal_pointEv,__ZNKSt3__28numpunctIwE16do_thousands_sepEv,__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt8bad_cast4whatEv,__Z12luaopen_baseP9lua_State,__Z12luaopen_mathP9lua_State,__Z13luaopen_tableP9lua_State,__Z14luaopen_stringP9lua_State,__ZN9LuaParser6RandomEP9lua_State,__ZN9LuaParser10RandomSeedEP9lua_State,__ZN9LuaParser11DummyRandomEP9lua_State,__ZN9LuaParser15DummyRandomSeedEP9lua_State,__ZN9LuaParser18DontMessWithMyCaseEP9lua_State,__ZN8LuaUtils4EchoEP9lua_State,__ZN8LuaUtils3LogEP9lua_State,__ZN9LuaParser9TimeCheckEP9lua_State,__ZN9LuaParser7DirListEP9lua_State,__ZN9LuaParser7SubDirsEP9lua_State,__ZN9LuaParser7IncludeEP9lua_State,__ZN9LuaParser8LoadFileEP9lua_State,__ZN9LuaParser10FileExistsEP9lua_State,__ZL9ipairsauxP9lua_State,__ZL11luaB_ipairsP9lua_State
,__ZL10luaB_pairsP9lua_State,__ZL13luaB_newproxyP9lua_State,__ZL12luaB_auxwrapP9lua_State,__ZL10gmatch_auxP9lua_State,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_iid = [b9];
var FUNCTION_TABLE_viii = [b10,__ZNK27ConfigVariableTypedMetaDataINSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE5ClampERKS6_,__ZNK27ConfigVariableTypedMetaDataIiE5ClampERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZL23log_sink_record_consoleiPKcS0_,__ZL20log_sink_record_fileiPKcS0_,b10,b10,b10];
var FUNCTION_TABLE_v = [b11,___cxa_pure_virtual__wrapper,__ZL25default_terminate_handlerv,__ZL21log_sink_cleanup_filev,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b11,b11,b11];
var FUNCTION_TABLE_iiiiiiiii = [b12,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b12,b12,b12,b12,b12];
var FUNCTION_TABLE_iiiii = [b13,__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw,__Z16spring_lua_allocPvS_jj__wrapper,__Z11luaY_parserP9lua_StateP3ZioP7MbufferPKc,__Z11luaU_undumpP9lua_StateP3ZioP7MbufferPKc,__ZL6writerP9lua_StatePKvjPv,b13,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_viiii = [b14,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__27collateIcE12do_transformEPKcS3_,__ZNKSt3__27collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b14,b14,b14,b14,b14,b14];
var FUNCTION_TABLE_iii = [b15,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNKSt3__220__shared_ptr_pointerIP11ClientSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__220__shared_ptr_pointerIP8GameDataNS_14default_deleteIS1_EENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__220__shared_ptr_pointerIP10CGameSetupNS_14default_deleteIS1_EENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__211__stdoutbufIwE8overflowEj,__ZNSt3__211__stdoutbufIcE8overflowEi,__ZNSt3__210__stdinbufIwE9pbackfailEj,__ZNSt3__210__stdinbufIcE9pbackfailEi,__ZNKSt3__25ctypeIcE10do_toupperEc,__ZNKSt3__25ctypeIcE10do_tolowerEc,__ZNKSt3__25ctypeIcE8do_widenEc,__ZNKSt3__25ctypeIwE10do_toupperEw,__ZNKSt3__25ctypeIwE10do_tolowerEw,__ZNKSt3__25ctypeIwE8do_widenEc,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15];
var FUNCTION_TABLE_iiiiid = [b16,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b16,b16,b16];
var FUNCTION_TABLE_iiiiii = [b17,__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17];

  return { _main: _main, ___udivdi3: ___udivdi3, _bitshift64Lshr: _bitshift64Lshr, ___udivmoddi4: ___udivmoddi4, _fflush: _fflush, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _llvm_cttz_i32: _llvm_cttz_i32, _sbrk: _sbrk, _memcpy: _memcpy, ___muldi3: ___muldi3, _bitshift64Shl: _bitshift64Shl, ___uremdi3: ___uremdi3, ___divdi3: ___divdi3, _i64Subtract: _i64Subtract, _memset: _memset, _i64Add: _i64Add, _pthread_self: _pthread_self, _pthread_mutex_unlock: _pthread_mutex_unlock, ___remdi3: ___remdi3, _pthread_cond_broadcast: _pthread_cond_broadcast, ___errno_location: ___errno_location, ___muldsi3: ___muldsi3, ___cxa_can_catch: ___cxa_can_catch, _free: _free, _memmove: _memmove, _malloc: _malloc, _pthread_mutex_lock: _pthread_mutex_lock, __GLOBAL__I_000101: __GLOBAL__I_000101, __GLOBAL__sub_I_ClientSetup_cpp: __GLOBAL__sub_I_ClientSetup_cpp, __GLOBAL__sub_I_GameData_cpp: __GLOBAL__sub_I_GameData_cpp, __GLOBAL__sub_I_CommandMessage_cpp: __GLOBAL__sub_I_CommandMessage_cpp, __GLOBAL__sub_I_ChatMessage_cpp: __GLOBAL__sub_I_ChatMessage_cpp, __GLOBAL__sub_I_LuaMemPool_cpp: __GLOBAL__sub_I_LuaMemPool_cpp, __GLOBAL__sub_I_ConsoleSink_cpp: __GLOBAL__sub_I_ConsoleSink_cpp, __GLOBAL__sub_I_FileSink_cpp: __GLOBAL__sub_I_FileSink_cpp, __GLOBAL__sub_I_main_cpp: __GLOBAL__sub_I_main_cpp, __GLOBAL__sub_I_gflags_cc: __GLOBAL__sub_I_gflags_cc, __GLOBAL__sub_I_gflags_reporting_cc: __GLOBAL__sub_I_gflags_reporting_cc, __GLOBAL__sub_I_gflags_completions_cc: __GLOBAL__sub_I_gflags_completions_cc, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_ii: dynCall_ii, dynCall_iid: dynCall_iid, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiii: dynCall_viiii, dynCall_iii: dynCall_iii, dynCall_iiiiid: dynCall_iiiiid, dynCall_iiiiii: dynCall_iiiiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var _main = Module["_main"] = asm["_main"];
var __GLOBAL__sub_I_main_cpp = Module["__GLOBAL__sub_I_main_cpp"] = asm["__GLOBAL__sub_I_main_cpp"];
var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var __GLOBAL__sub_I_ClientSetup_cpp = Module["__GLOBAL__sub_I_ClientSetup_cpp"] = asm["__GLOBAL__sub_I_ClientSetup_cpp"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var __GLOBAL__sub_I_GameData_cpp = Module["__GLOBAL__sub_I_GameData_cpp"] = asm["__GLOBAL__sub_I_GameData_cpp"];
var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = asm["_pthread_cond_broadcast"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var __GLOBAL__sub_I_FileSink_cpp = Module["__GLOBAL__sub_I_FileSink_cpp"] = asm["__GLOBAL__sub_I_FileSink_cpp"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var __GLOBAL__sub_I_ConsoleSink_cpp = Module["__GLOBAL__sub_I_ConsoleSink_cpp"] = asm["__GLOBAL__sub_I_ConsoleSink_cpp"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var ___divdi3 = Module["___divdi3"] = asm["___divdi3"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];
var _pthread_mutex_unlock = Module["_pthread_mutex_unlock"] = asm["_pthread_mutex_unlock"];
var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = asm["__GLOBAL__I_000101"];
var __GLOBAL__sub_I_ChatMessage_cpp = Module["__GLOBAL__sub_I_ChatMessage_cpp"] = asm["__GLOBAL__sub_I_ChatMessage_cpp"];
var __GLOBAL__sub_I_gflags_reporting_cc = Module["__GLOBAL__sub_I_gflags_reporting_cc"] = asm["__GLOBAL__sub_I_gflags_reporting_cc"];
var ___remdi3 = Module["___remdi3"] = asm["___remdi3"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var __GLOBAL__sub_I_gflags_completions_cc = Module["__GLOBAL__sub_I_gflags_completions_cc"] = asm["__GLOBAL__sub_I_gflags_completions_cc"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _pthread_mutex_lock = Module["_pthread_mutex_lock"] = asm["_pthread_mutex_lock"];
var __GLOBAL__sub_I_CommandMessage_cpp = Module["__GLOBAL__sub_I_CommandMessage_cpp"] = asm["__GLOBAL__sub_I_CommandMessage_cpp"];
var __GLOBAL__sub_I_LuaMemPool_cpp = Module["__GLOBAL__sub_I_LuaMemPool_cpp"] = asm["__GLOBAL__sub_I_LuaMemPool_cpp"];
var __GLOBAL__sub_I_gflags_cc = Module["__GLOBAL__sub_I_gflags_cc"] = asm["__GLOBAL__sub_I_gflags_cc"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iid = Module["dynCall_iid"] = asm["dynCall_iid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===



if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, Runtime.GLOBAL_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, Runtime.GLOBAL_BASE);
      // Delete the typed array that contains the large blob of the memory initializer request response so that
      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.
      // its .status field can still be accessed later.
      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;
      removeRunDependency('memory initializer');
    }
    function doBrowserLoad() {
      Module['readAsync'](memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
    if (Module['memoryInitializerRequest']) {
      // a network request has already been created, just use that
      function useRequest() {
        var request = Module['memoryInitializerRequest'];
        if (request.status !== 200 && request.status !== 0) {
          // If you see this warning, the issue may be that you are using locateFile or memoryInitializerPrefixURL, and defining them in JS. That
          // means that the HTML file doesn't know about them, and when it tries to create the mem init request early, does it to the wrong place.
          // Look in your browser's devtools network console to see what's going on.
          console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);
          doBrowserLoad();
          return;
        }
        applyMemoryInitializer(request.response);
      }
      if (Module['memoryInitializerRequest'].response) {
        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously
      } else {
        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it
      }
    } else {
      // fetch it from the network ourselves
      doBrowserLoad();
    }
  }
}


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }


  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();


    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  } else if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}






